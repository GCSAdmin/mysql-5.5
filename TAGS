
client/client_priv.h,5086
#  define WEXITSTATUS(29,950
#  define WEXITSTATUS(31,1000
enum options_client35,1076
  OPT_CHARSETS_DIR=37,1098
  OPT_CHARSETS_DIR=256, OPT_DEFAULT_CHARSET,37,1098
  OPT_PAGER,38,1143
  OPT_PAGER, OPT_TEE,38,1143
  OPT_LOW_PRIORITY,39,1165
  OPT_LOW_PRIORITY, OPT_AUTO_REPAIR,39,1165
  OPT_LOW_PRIORITY, OPT_AUTO_REPAIR, OPT_COMPRESS,39,1165
  OPT_DROP,40,1216
  OPT_DROP, OPT_LOCKS,40,1216
  OPT_DROP, OPT_LOCKS, OPT_KEYWORDS,40,1216
  OPT_DROP, OPT_LOCKS, OPT_KEYWORDS, OPT_DELAYED,40,1216
  OPT_DROP, OPT_LOCKS, OPT_KEYWORDS, OPT_DELAYED, OPT_OPTIMIZE,40,1216
  OPT_FTB,41,1280
  OPT_FTB, OPT_LTB,41,1280
  OPT_FTB, OPT_LTB, OPT_ENC,41,1280
  OPT_FTB, OPT_LTB, OPT_ENC, OPT_O_ENC,41,1280
  OPT_FTB, OPT_LTB, OPT_ENC, OPT_O_ENC, OPT_ESC,41,1280
  OPT_FTB, OPT_LTB, OPT_ENC, OPT_O_ENC, OPT_ESC, OPT_TABLES,41,1280
  OPT_MASTER_DATA,42,1341
  OPT_MASTER_DATA, OPT_AUTOCOMMIT,42,1341
  OPT_MASTER_DATA, OPT_AUTOCOMMIT, OPT_AUTO_REHASH,42,1341
  OPT_LINE_NUMBERS,43,1393
  OPT_LINE_NUMBERS, OPT_COLUMN_NAMES,43,1393
  OPT_LINE_NUMBERS, OPT_COLUMN_NAMES, OPT_CONNECT_TIMEOUT,43,1393
  OPT_MAX_ALLOWED_PACKET,44,1452
  OPT_MAX_ALLOWED_PACKET, OPT_NET_BUFFER_LENGTH,44,1452
  OPT_SELECT_LIMIT,45,1501
  OPT_SELECT_LIMIT, OPT_MAX_JOIN_SIZE,45,1501
  OPT_SELECT_LIMIT, OPT_MAX_JOIN_SIZE, OPT_SSL_SSL,45,1501
  OPT_SSL_KEY,46,1553
  OPT_SSL_KEY, OPT_SSL_CERT,46,1553
  OPT_SSL_KEY, OPT_SSL_CERT, OPT_SSL_CA,46,1553
  OPT_SSL_KEY, OPT_SSL_CERT, OPT_SSL_CA, OPT_SSL_CAPATH,46,1553
  OPT_SSL_CIPHER,47,1610
  OPT_SSL_CIPHER, OPT_SHUTDOWN_TIMEOUT,47,1610
  OPT_SSL_CIPHER, OPT_SHUTDOWN_TIMEOUT, OPT_LOCAL_INFILE,47,1610
  OPT_DELETE_MASTER_LOGS,48,1668
  OPT_DELETE_MASTER_LOGS, OPT_COMPACT,48,1668
  OPT_PROMPT,49,1707
  OPT_PROMPT, OPT_IGN_LINES,49,1707
  OPT_PROMPT, OPT_IGN_LINES,OPT_TRANSACTION,49,1707
  OPT_PROMPT, OPT_IGN_LINES,OPT_TRANSACTION,OPT_MYSQL_PROTOCOL,49,1707
  OPT_SHARED_MEMORY_BASE_NAME,50,1771
  OPT_SHARED_MEMORY_BASE_NAME, OPT_FRM,50,1771
  OPT_SHARED_MEMORY_BASE_NAME, OPT_FRM, OPT_SKIP_OPTIMIZATION,50,1771
  OPT_COMPATIBLE,51,1834
  OPT_COMPATIBLE, OPT_RECONNECT,51,1834
  OPT_COMPATIBLE, OPT_RECONNECT, OPT_DELIMITER,51,1834
  OPT_COMPATIBLE, OPT_RECONNECT, OPT_DELIMITER, OPT_SECURE_AUTH,51,1834
  OPT_OPEN_FILES_LIMIT,52,1899
  OPT_OPEN_FILES_LIMIT, OPT_SET_CHARSET,52,1899
  OPT_OPEN_FILES_LIMIT, OPT_SET_CHARSET, OPT_SERVER_ARG,52,1899
  OPT_STOP_POSITION,53,1956
  OPT_STOP_POSITION, OPT_START_DATETIME,53,1956
  OPT_STOP_POSITION, OPT_START_DATETIME, OPT_STOP_DATETIME,53,1956
  OPT_SIGINT_IGNORE,54,2016
  OPT_SIGINT_IGNORE, OPT_HEXBLOB,54,2016
  OPT_SIGINT_IGNORE, OPT_HEXBLOB, OPT_ORDER_BY_PRIMARY,54,2016
  OPT_SIGINT_IGNORE, OPT_HEXBLOB, OPT_ORDER_BY_PRIMARY, OPT_COUNT,54,2016
  OPT_TRIGGERS,55,2083
  OPT_MYSQL_ONLY_PRINT,56,2099
  OPT_MYSQL_LOCK_DIRECTORY,57,2123
  OPT_USE_THREADS,58,2151
  OPT_IMPORT_USE_THREADS,59,2170
  OPT_MYSQL_NUMBER_OF_QUERY,60,2196
  OPT_IGNORE_TABLE,61,2225
  OPT_IGNORE_TABLE,OPT_INSERT_IGNORE,61,2225
  OPT_IGNORE_TABLE,OPT_INSERT_IGNORE,OPT_SHOW_WARNINGS,61,2225
  OPT_IGNORE_TABLE,OPT_INSERT_IGNORE,OPT_SHOW_WARNINGS,OPT_DROP_DATABASE,61,2225
  OPT_TZ_UTC,62,2299
  OPT_TZ_UTC, OPT_CREATE_SLAP_SCHEMA,62,2299
  OPT_MYSQLDUMP_SLAVE_APPLY,63,2337
  OPT_MYSQLDUMP_SLAVE_DATA,64,2366
  OPT_MYSQLDUMP_INCLUDE_MASTER_HOST_PORT,65,2394
  OPT_SLAP_CSV,66,2436
  OPT_SLAP_CSV, OPT_SLAP_CREATE_STRING,66,2436
  OPT_SLAP_AUTO_GENERATE_SQL_LOAD_TYPE,67,2476
  OPT_SLAP_AUTO_GENERATE_SQL_LOAD_TYPE, OPT_SLAP_AUTO_GENERATE_WRITE_NUM,67,2476
  OPT_SLAP_AUTO_GENERATE_ADD_AUTO,68,2550
  OPT_SLAP_AUTO_GENERATE_GUID_PRIMARY,69,2585
  OPT_SLAP_AUTO_GENERATE_EXECUTE_QUERIES,70,2624
  OPT_SLAP_AUTO_GENERATE_SECONDARY_INDEXES,71,2666
  OPT_SLAP_AUTO_GENERATE_UNIQUE_WRITE_NUM,72,2710
  OPT_SLAP_AUTO_GENERATE_UNIQUE_QUERY_NUM,73,2753
  OPT_SLAP_PRE_QUERY,74,2796
  OPT_SLAP_POST_QUERY,75,2818
  OPT_SLAP_PRE_SYSTEM,76,2841
  OPT_SLAP_POST_SYSTEM,77,2864
  OPT_SLAP_COMMIT,78,2888
  OPT_SLAP_DETACH,79,2907
  OPT_SLAP_NO_DROP,80,2926
  OPT_MYSQL_REPLACE_INTO,81,2946
  OPT_MYSQL_REPLACE_INTO, OPT_BASE64_OUTPUT_MODE,81,2946
  OPT_MYSQL_REPLACE_INTO, OPT_BASE64_OUTPUT_MODE, OPT_SERVER_ID,81,2946
  OPT_FIX_TABLE_NAMES,82,3011
  OPT_FIX_TABLE_NAMES, OPT_FIX_DB_NAMES,82,3011
  OPT_FIX_TABLE_NAMES, OPT_FIX_DB_NAMES, OPT_SSL_VERIFY_SERVER_CERT,82,3011
  OPT_AUTO_VERTICAL_OUTPUT,83,3080
  OPT_DEBUG_INFO,84,3108
  OPT_DEBUG_INFO, OPT_DEBUG_CHECK,84,3108
  OPT_DEBUG_INFO, OPT_DEBUG_CHECK, OPT_COLUMN_TYPES,84,3108
  OPT_DEBUG_INFO, OPT_DEBUG_CHECK, OPT_COLUMN_TYPES, OPT_ERROR_LOG_FILE,84,3108
  OPT_WRITE_BINLOG,85,3181
  OPT_WRITE_BINLOG, OPT_DUMP_DATE,85,3181
  OPT_INIT_COMMAND,86,3216
  OPT_PLUGIN_DIR,87,3236
  OPT_DEFAULT_AUTH,88,3254
  OPT_DEFAULT_PLUGIN,89,3274
  OPT_ENABLE_CLEARTEXT_PLUGIN,90,3296
  OPT_MAX_CLIENT_OPTION91,3327
#define FIRST_INFORMATION_SCHEMA_VERSION 97,3419
#define INFORMATION_SCHEMA_DB_NAME 102,3517
#define FIRST_PERFORMANCE_SCHEMA_VERSION 107,3638
#define PERFORMANCE_SCHEMA_DB_NAME 112,3736

client/completion_hash.h,607
#define _HASH_19,746
#define SUCCESS 21,762
#define FAILURE 22,780
typedef struct _entry 27,843
	char *str;str28,867
	struct _entry *pNext;pNext29,879
} entry;30,902
typedef struct bucket32,912
  uint h;34,936
  char *arKey;arKey35,982
  uint nKeyLength;36,997
  uint count;37,1016
  entry *pData;pData38,1030
  struct bucket *pNext;pNext39,1046
} Bucket;40,1070
typedef struct hashtable 42,1081
  uint nTableSize;43,1108
  uint initialized;44,1127
  MEM_ROOT mem_root;45,1147
  uint(*pHashFunction)pHashFunction46,1168
  Bucket **arBuckets;arBuckets47,1229
} HashTable;48,1251

client/my_readline.h,422
#define CLIENT_MY_READLINE_INCLUDED2,36
typedef struct st_line_buffer23,852
  File file;25,884
  char *buffer;buffer26,897
  char *end;end27,957
  char *start_of_line,start_of_line28,1000
  char *start_of_line,*end_of_line;end_of_line28,1000
  uint bufread;29,1036
  uint eof;30,1101
  ulong max_size;31,1113
  ulong read_length;32,1131
  int error;33,1186
  bool truncated;34,1199
} LINE_BUFFER;35,1217

client/sql_string.h,2390
#define CLIENT_SQL_STRING_INCLUDED2,35
class String32,1280
  char *Ptr;String::Ptr34,1295
  uint32 str_length,String::str_length35,1308
  uint32 str_length,Alloced_length;String::Alloced_length35,1308
  bool alloced;String::alloced36,1344
  CHARSET_INFO *str_charset;String::str_charset37,1360
  String(String::String39,1397
  String(String::String44,1504
  String(String::String49,1640
  String(String::String54,1794
  String(String::String59,1944
  String(String::String64,2085
  static void *operator new(String::operator new70,2252
  static void operator delete(String::operator delete72,2369
  static void operator delete(String::operator delete78,2498
  ~String(String::~String80,2573
  inline void set_charset(String::set_charset82,2598
  inline CHARSET_INFO *charset(String::charset84,2683
  inline uint32 length(String::length85,2746
  inline uint32 alloced_length(String::alloced_length86,2799
  inline char& operator [] String::operator []87,2864
  inline void length(String::length88,2927
  inline bool is_empty(String::is_empty89,2981
  inline void mark_as_const(String::mark_as_const90,3036
  inline const char *ptr(String::ptr91,3088
  inline char *c_ptr(String::c_ptr92,3137
  inline char *c_ptr_quick(String::c_ptr_quick98,3273
  inline char *c_ptr_safe(String::c_ptr_safe104,3395
  void set(String::set113,3560
  inline void set(String::set124,3877
  inline void set(String::set130,4053
  inline void set_quick(String::set_quick137,4292
  inline void chop(String::chop171,5350
  inline void free(String::free176,5410
  inline bool alloc(String::alloc187,5578
  inline void shrink(String::shrink197,5876
  bool is_alloced(String::is_alloced216,6226
  inline String& operator = String::operator =217,6272
  inline bool append(String::append255,7908
  int reserve(String::reserve277,8461
  void q_append(String::q_append288,8788
  void q_append(String::q_append292,8853
  void q_append(String::q_append297,8950
  void q_append(String::q_append302,9043
  void q_append(String::q_append307,9138
  void write_at_position(String::write_at_position313,9272
  inline void qs_append(String::qs_append321,9475
  inline char *prep_append(String::prep_append331,9684
  inline bool append(String::append344,10029
  inline bool uses_buffer_owned_by(String::uses_buffer_owned_by358,10476

dbug/dbug_long.h,1075
#    define DBUG_ENTER(114,4344
#    define DBUG_RETURN(115,4371
#    define DBUG_VOID_RETURN 116,4410
#    define DBUG_EXECUTE(117,4446
#    define DBUG_PRINT(118,4483
#    define DBUG_2(119,4523
#    define DBUG_3(120,4574
#    define DBUG_4(121,4628
#    define DBUG_5(122,4684
#    define DBUG_PUSH(123,4743
#    define DBUG_POP(124,4769
#    define DBUG_PROCESS(125,4792
#    define DBUG_FILE 126,4821
#    define DBUG_SETJMP 127,4852
#    define DBUG_LONGJMP 128,4883
#    define DBUG_DUMP(129,4916
#    define DBUG_ENTER(131,4957
#    define DBUG_LEAVE 136,5171
#    define DBUG_RETURN(138,5265
#    define DBUG_VOID_RETURN 140,5392
#    define DBUG_EXECUTE(141,5443
#    define DBUG_PRINT(143,5541
#    define DBUG_2(145,5658
#    define DBUG_3(147,5752
#    define DBUG_4(149,5852
#    define DBUG_5(151,5957
#    define DBUG_PUSH(153,6065
#    define DBUG_POP(154,6106
#    define DBUG_PROCESS(155,6141
#    define DBUG_FILE 156,6190
#    define DBUG_SETJMP(157,6222
#    define DBUG_LONGJMP(158,6280
#    define DBUG_DUMP(159,6348

include/base64.h,37
#define __BASE64_H_INCLUDED__17,726

include/decimal.h,930
#define _decimal_h17,764
{TRUNCATE=TRUNCATE20,797
{TRUNCATE=0, HALF_EVEN,20,797
{TRUNCATE=0, HALF_EVEN, HALF_UP,20,797
{TRUNCATE=0, HALF_EVEN, HALF_UP, CEILING,20,797
{TRUNCATE=0, HALF_EVEN, HALF_UP, CEILING, FLOOR}FLOOR20,797
  decimal_round_mode;21,846
typedef int32 decimal_digit_t;22,868
typedef struct st_decimal_t 33,1265
  int    intg,34,1295
  int    intg, frac,34,1295
  int    intg, frac, len;34,1295
  my_bool sign;35,1321
  decimal_digit_t *buf;buf36,1337
} decimal_t;37,1361
#define string2decimal(72,3102
#define string2decimal_fixed(73,3167
#define decimal_make_zero(77,3270
#define decimal_string_size(89,3763
#define decimal_neg(93,3900
#define E_DEC_OK 105,4292
#define E_DEC_TRUNCATED 106,4326
#define E_DEC_OVERFLOW 107,4360
#define E_DEC_DIV_ZERO 108,4394
#define E_DEC_BAD_NUM 109,4428
#define E_DEC_OOM 110,4462
#define E_DEC_ERROR 112,4497
#define E_DEC_FATAL_ERROR 113,4531

include/errmsg.h,2603
#define ERRMSG_INCLUDED2,24
#define CR_MIN_ERROR	32,1085
#define CR_MAX_ERROR	33,1141
#define ER(35,1185
#define CLIENT_ERRMAP	37,1238
#define CR_ERROR_FIRST 41,1428
#define CR_UNKNOWN_ERROR	42,1483
#define CR_SOCKET_CREATE_ERROR	43,1513
#define CR_CONNECTION_ERROR	44,1549
#define CR_CONN_HOST_ERROR	45,1582
#define CR_IPSOCK_ERROR	46,1614
#define CR_UNKNOWN_HOST	47,1644
#define CR_SERVER_GONE_ERROR	48,1674
#define CR_VERSION_ERROR	49,1708
#define CR_OUT_OF_MEMORY	50,1738
#define CR_WRONG_HOST_INFO	51,1768
#define CR_LOCALHOST_CONNECTION 52,1800
#define CR_TCP_CONNECTION	53,1837
#define CR_SERVER_HANDSHAKE_ERR 54,1868
#define CR_SERVER_LOST	55,1905
#define CR_COMMANDS_OUT_OF_SYNC 56,1934
#define CR_NAMEDPIPE_CONNECTION 57,1971
#define CR_NAMEDPIPEWAIT_ERROR 58,2008
#define CR_NAMEDPIPEOPEN_ERROR 59,2045
#define CR_NAMEDPIPESETSTATE_ERROR 60,2082
#define CR_CANT_READ_CHARSET	61,2122
#define CR_NET_PACKET_TOO_LARGE 62,2156
#define CR_EMBEDDED_CONNECTION	63,2193
#define CR_PROBE_SLAVE_STATUS 64,2229
#define CR_PROBE_SLAVE_HOSTS 65,2266
#define CR_PROBE_SLAVE_CONNECT 66,2303
#define CR_PROBE_MASTER_CONNECT 67,2340
#define CR_SSL_CONNECTION_ERROR 68,2377
#define CR_MALFORMED_PACKET 69,2414
#define CR_WRONG_LICENSE	70,2451
#define CR_NULL_POINTER	73,2508
#define CR_NO_PREPARE_STMT	74,2538
#define CR_PARAMS_NOT_BOUND	75,2570
#define CR_DATA_TRUNCATED	76,2603
#define CR_NO_PARAMETERS_EXISTS 77,2634
#define CR_INVALID_PARAMETER_NO 78,2671
#define CR_INVALID_BUFFER_USE	79,2708
#define CR_UNSUPPORTED_PARAM_TYPE 80,2743
#define CR_SHARED_MEMORY_CONNECTION 82,2783
#define CR_SHARED_MEMORY_CONNECT_REQUEST_ERROR 83,2836
#define CR_SHARED_MEMORY_CONNECT_ANSWER_ERROR 84,2889
#define CR_SHARED_MEMORY_CONNECT_FILE_MAP_ERROR 85,2942
#define CR_SHARED_MEMORY_CONNECT_MAP_ERROR 86,2995
#define CR_SHARED_MEMORY_FILE_MAP_ERROR 87,3048
#define CR_SHARED_MEMORY_MAP_ERROR 88,3101
#define CR_SHARED_MEMORY_EVENT_ERROR 89,3154
#define CR_SHARED_MEMORY_CONNECT_ABANDONED_ERROR 90,3201
#define CR_SHARED_MEMORY_CONNECT_SET_ERROR 91,3255
#define CR_CONN_UNKNOW_PROTOCOL 92,3308
#define CR_INVALID_CONN_HANDLE	93,3347
#define CR_SECURE_AUTH 94,3385
#define CR_FETCH_CANCELED 95,3438
#define CR_NO_DATA 96,3491
#define CR_NO_STMT_METADATA 97,3544
#define CR_NO_RESULT_SET 98,3597
#define CR_NOT_IMPLEMENTED 99,3650
#define CR_SERVER_LOST_EXTENDED	100,3703
#define CR_STMT_CLOSED	101,3742
#define CR_NEW_STMT_METADATA 102,3773
#define CR_ALREADY_CONNECTED 103,3826
#define CR_AUTH_PLUGIN_CANNOT_LOAD 104,3879
#define CR_ERROR_LAST 105,3932

include/ft_global.h,614
#define _ft_global_h24,939
#define HA_FT_MAXBYTELEN 29,1001
#define HA_FT_MAXCHARLEN 30,1030
#define DEFAULT_FTB_SYNTAX 32,1077
typedef struct st_ft_info FT_INFO;34,1124
struct _ft_vft35,1159
  int       (*read_next)read_next37,1176
  float     (*find_relevance)find_relevance38,1221
  void      (*close_search)close_search39,1278
  float     (*get_relevance)get_relevance40,1318
  void      (*reinit_search)reinit_search41,1359
struct st_ft_info45,1420
  struct _ft_vft *please;please47,1440
#define FT_NL 63,1836
#define FT_BOOL 64,1856
#define FT_SORTED 65,1876
#define FT_EXPAND 66,1896

include/hash.h,856
#define _hash_h19,820
#define CHARSET_INFO_DEFINED31,1213
typedef struct charset_info_st CHARSET_INFO;32,1242
#define HASH_OVERHEAD 43,1468
#define HASH_UNIQUE 46,1535
typedef uint my_hash_value_type;48,1609
typedef uchar *(*my_hash_get_key)my_hash_get_key49,1642
typedef void (*my_hash_free_key)my_hash_free_key50,1708
typedef struct st_hash 52,1751
  size_t key_offset,53,1776
  size_t key_offset,key_length;53,1776
  size_t blength;54,1845
  ulong records;55,1863
  uint flags;56,1880
  DYNAMIC_ARRAY array;57,1894
  my_hash_get_key get_key;58,1946
  void (*free)free59,1973
  CHARSET_INFO *charset;charset60,1997
} HASH;61,2022
typedef uint HASH_SEARCH_STATE;64,2061
#define my_hash_init(66,2094
#define my_hash_init2(68,2177
#define my_hash_clear(100,3952
#define my_hash_inited(101,4010
#define my_hash_init_opt(102,4056

include/heap.h,3566
#define _heap_h22,866
#define HP_MAX_LEVELS	39,1102
#define HP_PTRS_IN_NOD	40,1157
typedef struct st_heapinfo	44,1225
  ulong records;46,1283
  ulong deleted;47,1328
  ulong max_records;48,1381
  ulonglong data_length;49,1402
  ulonglong index_length;50,1427
  uint reclength;51,1453
  int errkey;52,1500
  ulonglong auto_increment;53,1514
  time_t create_time;54,1542
} HEAPINFO;55,1564
typedef struct st_heap_ptrs60,1624
  uchar *blocks[blocks62,1654
} HP_PTRS;63,1725
struct st_level_info65,1737
  uint free_ptrs_in_block;68,1839
  ulong records_under_level;75,2079
  HP_PTRS *last_blocks;last_blocks81,2205
typedef struct st_heap_block101,2860
  HP_PTRS *root;root103,2891
  struct st_level_info level_info[level_info104,2954
  uint levels;105,3006
  uint records_in_block;106,3074
  uint recbuffer;107,3132
  ulong last_allocated;108,3185
} HP_BLOCK;109,3262
typedef struct st_hp_keydef	113,3319
  uint flag;115,3381
  uint keysegs;116,3432
  uint length;117,3479
  uint8 algorithm;118,3529
  HA_KEYSEG *seg;seg119,3569
  HP_BLOCK block;120,3587
  ha_rows hash_buckets;125,3750
  TREE rb_tree;126,3775
  int (*write_key)write_key127,3791
  int (*delete_key)delete_key129,3909
  uint (*get_key_length)get_key_length131,4038
} HP_KEYDEF;132,4111
typedef struct st_heap_share134,4125
  HP_BLOCK block;136,4156
  HP_KEYDEF  *keydef;keydef137,4174
  ulong min_records,138,4196
  ulong min_records,max_records;138,4196
  ulonglong data_length,139,4250
  ulonglong data_length,index_length,139,4250
  ulonglong data_length,index_length,max_table_size;139,4250
  uint key_stat_version;140,4303
  uint records;141,4383
  uint blength;142,4416
  uint deleted;143,4467
  uint reclength;144,4520
  uint changed;145,4567
  uint keys,146,4583
  uint keys,max_key_length;146,4583
  uint currently_disabled_keys;147,4611
  uint open_count;148,4690
  uchar *del_link;del_link149,4709
  char * name;150,4769
  time_t create_time;151,4814
  THR_LOCK lock;152,4836
  mysql_mutex_t intern_lock;153,4853
  my_bool delete_on_close;154,4929
  LIST open_list;155,4956
  uint auto_key;156,4974
  uint auto_key_type;157,4991
  ulonglong auto_increment;158,5055
} HP_SHARE;159,5083
typedef struct st_heap_info163,5121
  HP_SHARE *s;s165,5151
  uchar *current_ptr;current_ptr166,5166
  struct st_hp_hash_info *current_hash_ptr;current_hash_ptr167,5188
  ulong current_record,168,5232
  ulong current_record,next_block;168,5232
  int lastinx,169,5267
  int lastinx,errkey;169,5267
  int  mode;170,5289
  uint opt_flag,171,5337
  uint opt_flag,update;171,5337
  uchar *lastkey;lastkey172,5361
  uchar *recbuf;recbuf173,5411
  enum ha_rkey_function last_find_flag;174,5489
  TREE_ELEMENT *parents[parents175,5529
  TREE_ELEMENT **last_pos;last_pos176,5573
  uint lastkey_len;177,5600
  my_bool implicit_emptied;178,5620
  THR_LOCK_DATA lock;179,5648
  LIST open_list;180,5670
} HP_INFO;181,5688
typedef struct st_heap_create_info184,5701
  HP_KEYDEF *keydef;keydef186,5738
  ulong max_records;187,5759
  ulong min_records;188,5780
  uint auto_key;189,5801
  uint auto_key_type;190,5879
  uint keys;191,5901
  uint reclength;192,5914
  ulonglong max_table_size;193,5932
  ulonglong auto_increment;194,5960
  my_bool with_auto_increment;195,5988
  my_bool internal_table;196,6019
  my_bool pin_share;201,6183
} HP_CREATE_INFO;202,6204
typedef ulong HEAP_PTR;256,8880
#define heap_position(257,8904
#define heap_rrnd(258,8950
typedef uchar *HEAP_PTR;HEAP_PTR260,9002

include/keycache.h,2117
#define _keycache_h19,802
typedef struct st_block_link BLOCK_LINK;28,980
typedef struct st_keycache_page KEYCACHE_PAGE;30,1046
typedef struct st_hash_link HASH_LINK;32,1114
typedef struct st_keycache_wqueue35,1199
  struct st_my_thread_var *last_thread;last_thread37,1235
} KEYCACHE_WQUEUE;38,1315
#define CHANGED_BLOCKS_HASH 40,1335
typedef struct st_key_cache47,1493
  my_bool key_cache_inited;49,1523
  my_bool in_resize;50,1551
  my_bool resize_in_flush;51,1631
  my_bool can_be_used;52,1711
  size_t key_cache_mem_size;53,1791
  uint key_cache_block_size;54,1872
  ulong min_warm_blocks;55,1952
  ulong age_threshold;56,2032
  ulonglong keycache_time;57,2112
  uint hash_entries;58,2192
  int hash_links;59,2272
  int hash_links_used;60,2352
  int disk_blocks;61,2432
  ulong blocks_used;62,2512
  ulong blocks_unused;63,2582
  ulong blocks_changed;64,2645
  ulong warm_blocks;65,2725
  ulong cnt_for_resize_op;66,2805
  long blocks_available;67,2885
  HASH_LINK **hash_root;hash_root68,2965
  HASH_LINK *hash_link_root;hash_link_root69,3045
  HASH_LINK *free_hash_list;free_hash_list70,3125
  BLOCK_LINK *free_block_list;free_block_list71,3205
  BLOCK_LINK *block_root;block_root72,3264
  uchar *block_mem;block_mem73,3344
  BLOCK_LINK *used_last;used_last74,3424
  BLOCK_LINK *used_ins;used_ins75,3504
  mysql_mutex_t cache_lock;76,3584
  KEYCACHE_WQUEUE resize_queue;77,3664
  KEYCACHE_WQUEUE waiting_for_resize_cnt;82,3860
  KEYCACHE_WQUEUE waiting_for_hash_link;83,3902
  KEYCACHE_WQUEUE waiting_for_block;84,3982
  BLOCK_LINK *changed_blocks[changed_blocks85,4062
  BLOCK_LINK *file_blocks[file_blocks86,4142
  ulonglong param_buff_size;93,4340
  ulonglong param_block_size;94,4421
  ulonglong param_division_limit;95,4502
  ulonglong param_age_threshold;96,4583
  ulong global_blocks_changed;99,4742
  ulonglong global_cache_w_requests;100,4820
  ulonglong global_cache_write;101,4900
  ulonglong global_cache_r_requests;102,4980
  ulonglong global_cache_read;103,5060
  int blocks;105,5141
  my_bool in_init;106,5220
} KEY_CACHE;107,5287

include/lf.h,2591
#define _lf_h17,759
#define lock_wrap(28,931
#define lock_wrap_void(39,1384
#define nolock_wrap(48,1739
#define nolock_wrap_void(55,1992
#define LF_DYNARRAY_LEVEL_LENGTH 68,2402
#define LF_DYNARRAY_LEVELS 69,2439
  void * volatile level[level72,2492
  uint size_of_element;73,2537
  my_atomic_rwlock_t lock;74,2561
} LF_DYNARRAY;75,2588
typedef int (*lf_dynarray_func)lf_dynarray_func77,2604
nolock_wrap(82,2763
#define LF_PINBOX_PINS 97,3197
#define LF_PURGATORY_SIZE 98,3222
typedef void lf_pinbox_free_func(100,3252
  LF_DYNARRAY pinarray;103,3327
  lf_pinbox_free_func *free_func;free_func104,3351
  void *free_func_arg;free_func_arg105,3385
  uint free_ptr_offset;106,3408
  uint32 volatile pinstack_top_ver;107,3432
  uint32 volatile pins_in_array;108,3510
} LF_PINBOX;109,3588
  void * volatile pin[pin112,3619
  LF_PINBOX *pinbox;pinbox113,3658
  void  **stack_ends_here;stack_ends_here114,3679
  void  *purgatory;purgatory115,3706
  uint32 purgatory_count;116,3726
  uint32 volatile link;117,3752
  char pad[pad120,3893
} LF_PINS;122,3966
#define lf_rwlock_by_pins(128,4073
#define lf_rwunlock_by_pins(130,4167
#define LF_REQUIRE_PINS(139,4501
#define _lf_pin(143,4747
#define LF_REQUIRE_PINS(149,5021
#define _lf_pin(150,5048
#define _lf_unpin(153,5136
#define lf_pin(154,5195
#define lf_unpin(160,5389
#define _lf_assert_pin(161,5442
#define _lf_assert_unpin(162,5506
lock_wrap(168,5753
typedef struct st_lf_allocator 185,6206
  LF_PINBOX pinbox;186,6239
  uchar * volatile top;187,6259
  uint element_size;188,6283
  uint32 volatile mallocs;189,6304
} LF_ALLOCATOR;190,6331
#define _lf_alloc_free(199,6662
#define lf_alloc_free(200,6731
#define _lf_alloc_get_pins(201,6800
#define lf_alloc_get_pins(202,6872
#define _lf_alloc_put_pins(203,6944
#define lf_alloc_put_pins(204,7008
#define lf_alloc_direct_free(205,7072
lock_wrap(207,7131
#define LF_HASH_UNIQUE 221,7329
  LF_DYNARRAY array;226,7429
  LF_ALLOCATOR alloc;227,7487
  my_hash_get_key get_key;228,7556
  CHARSET_INFO *charset;charset229,7611
  uint key_offset,230,7666
  uint key_offset, key_length;230,7666
  uint element_size;231,7721
  uint flags;232,7800
  int32 volatile size;233,7866
  int32 volatile count;234,7926
} LF_HASH;235,8003
#define _lf_hash_get_pins(248,8597
#define lf_hash_get_pins(249,8668
#define _lf_hash_put_pins(250,8739
#define lf_hash_put_pins(251,8801
#define lf_hash_search_unpin(252,8863
#undef lock_wrap_void257,8937
#undef lock_wrap258,8959
#undef nolock_wrap_void259,8976
#undef nolock_wrap260,9000

include/m_ctype.h,8182
#define _m_ctype_h21,827
#define MY_CS_NAME_SIZE	30,982
#define MY_CS_CTYPE_TABLE_SIZE	31,1011
#define MY_CS_TO_LOWER_TABLE_SIZE	32,1047
#define MY_CS_TO_UPPER_TABLE_SIZE	33,1085
#define MY_CS_SORT_ORDER_TABLE_SIZE	34,1123
#define MY_CS_TO_UNI_TABLE_SIZE	35,1163
#define CHARSET_DIR	37,1201
#define my_wc_t 39,1234
#define MY_CS_REPLACEMENT_CHARACTER 41,1257
#define MB2(50,1495
#define MY_PUT_MB2(51,1560
#define MB2(53,1625
#define MY_PUT_MB2(54,1659
typedef struct unicase_info_st59,1743
  uint32 toupper;61,1776
  uint32 tolower;62,1794
  uint32 sort;63,1812
} MY_UNICASE_INFO;64,1827
typedef struct uni_ctype_st72,1998
  uchar  pctype;74,2028
  uchar  *ctype;ctype75,2045
} MY_UNI_CTYPE;76,2062
#define MY_CS_ILSEQ	81,2154
#define MY_CS_ILUNI	82,2229
#define MY_CS_TOOSMALL 83,2304
#define MY_CS_TOOSMALL2 84,2383
#define MY_CS_TOOSMALL3 85,2462
#define MY_CS_TOOSMALL4 87,2599
#define MY_CS_TOOSMALL5 88,2674
#define MY_CS_TOOSMALL6 89,2749
#define MY_CS_TOOSMALLN(91,2874
#define MY_SEQ_INTTAIL	93,2916
#define MY_SEQ_SPACES	94,2941
#define MY_CS_COMPILED 97,3003
#define MY_CS_CONFIG 98,3071
#define MY_CS_INDEX 99,3139
#define MY_CS_LOADED 100,3207
#define MY_CS_BINSORT	101,3275
#define MY_CS_PRIMARY	102,3341
#define MY_CS_STRNXFRM	103,3407
#define MY_CS_UNICODE	104,3474
#define MY_CS_READY	105,3540
#define MY_CS_AVAILABLE	106,3604
#define MY_CS_CSSORT	107,3672
#define MY_CS_HIDDEN	108,3738
#define MY_CS_PUREASCII 109,3804
#define MY_CS_NONASCII 110,3872
#define MY_CS_UNICODE_SUPPLEMENT 111,3940
#define MY_CHARSET_UNDEFINED 112,4012
#define MY_REPERTOIRE_ASCII 115,4077
#define MY_REPERTOIRE_EXTENDED 116,4155
#define MY_REPERTOIRE_UNICODE30 117,4233
typedef struct my_uni_idx_st119,4312
  uint16 from;121,4343
  uint16 to;122,4358
  uchar  *tab;tab123,4371
} MY_UNI_IDX;124,4386
  uint beg;128,4418
  uint end;129,4430
  uint mb_len;130,4442
} my_match_t;131,4457
enum my_lex_states133,4472
  MY_LEX_START,135,4493
  MY_LEX_START, MY_LEX_CHAR,135,4493
  MY_LEX_START, MY_LEX_CHAR, MY_LEX_IDENT,135,4493
  MY_LEX_IDENT_SEP,136,4537
  MY_LEX_IDENT_SEP, MY_LEX_IDENT_START,136,4537
  MY_LEX_REAL,137,4577
  MY_LEX_REAL, MY_LEX_HEX_NUMBER,137,4577
  MY_LEX_REAL, MY_LEX_HEX_NUMBER, MY_LEX_BIN_NUMBER,137,4577
  MY_LEX_CMP_OP,138,4630
  MY_LEX_CMP_OP, MY_LEX_LONG_CMP_OP,138,4630
  MY_LEX_CMP_OP, MY_LEX_LONG_CMP_OP, MY_LEX_STRING,138,4630
  MY_LEX_CMP_OP, MY_LEX_LONG_CMP_OP, MY_LEX_STRING, MY_LEX_COMMENT,138,4630
  MY_LEX_CMP_OP, MY_LEX_LONG_CMP_OP, MY_LEX_STRING, MY_LEX_COMMENT, MY_LEX_END,138,4630
  MY_LEX_OPERATOR_OR_IDENT,139,4710
  MY_LEX_OPERATOR_OR_IDENT, MY_LEX_NUMBER_IDENT,139,4710
  MY_LEX_OPERATOR_OR_IDENT, MY_LEX_NUMBER_IDENT, MY_LEX_INT_OR_REAL,139,4710
  MY_LEX_REAL_OR_POINT,140,4779
  MY_LEX_REAL_OR_POINT, MY_LEX_BOOL,140,4779
  MY_LEX_REAL_OR_POINT, MY_LEX_BOOL, MY_LEX_EOL,140,4779
  MY_LEX_REAL_OR_POINT, MY_LEX_BOOL, MY_LEX_EOL, MY_LEX_ESCAPE,140,4779
  MY_LEX_LONG_COMMENT,141,4844
  MY_LEX_LONG_COMMENT, MY_LEX_END_LONG_COMMENT,141,4844
  MY_LEX_LONG_COMMENT, MY_LEX_END_LONG_COMMENT, MY_LEX_SEMICOLON,141,4844
  MY_LEX_SET_VAR,142,4911
  MY_LEX_SET_VAR, MY_LEX_USER_END,142,4911
  MY_LEX_SET_VAR, MY_LEX_USER_END, MY_LEX_HOSTNAME,142,4911
  MY_LEX_SET_VAR, MY_LEX_USER_END, MY_LEX_HOSTNAME, MY_LEX_SKIP,142,4911
  MY_LEX_USER_VARIABLE_DELIMITER,143,4977
  MY_LEX_USER_VARIABLE_DELIMITER, MY_LEX_SYSTEM_VAR,143,4977
  MY_LEX_IDENT_OR_KEYWORD,144,5030
  MY_LEX_IDENT_OR_HEX,145,5057
  MY_LEX_IDENT_OR_HEX, MY_LEX_IDENT_OR_BIN,145,5057
  MY_LEX_IDENT_OR_HEX, MY_LEX_IDENT_OR_BIN, MY_LEX_IDENT_OR_NCHAR,145,5057
  MY_LEX_STRING_OR_DELIMITER146,5124
typedef struct my_collation_handler_st153,5256
  my_bool (*init)init155,5297
  int     (*strnncoll)strnncoll157,5393
  int     (*strnncollsp)strnncollsp159,5507
  size_t     (*strnxfrm)strnxfrm162,5697
  size_t    (*strnxfrmlen)strnxfrmlen164,5814
  my_bool (*like_range)like_range165,5877
  int     (*wildcmp)wildcmp171,6102
  int  (*strcasecmp)strcasecmp176,6314
  uint (*instr)instr178,6393
  void (*hash_sort)hash_sort184,6608
  my_bool (*propagate)propagate186,6718
} MY_COLLATION_HANDLER;187,6800
typedef int (*my_charset_conv_mb_wc)my_charset_conv_mb_wc195,7135
typedef int (*my_charset_conv_wc_mb)my_charset_conv_wc_mb197,7277
typedef size_t (*my_charset_conv_case)my_charset_conv_case199,7405
typedef struct my_charset_handler_st204,7616
  my_bool (*init)init206,7655
  uint    (*ismbchar)ismbchar208,7751
  uint    (*mbcharlen)mbcharlen209,7828
  size_t  (*numchars)numchars210,7886
  size_t  (*charpos)charpos211,7965
  size_t  (*well_formed_len)well_formed_len213,8076
  size_t  (*lengthsp)lengthsp216,8246
  size_t  (*numcells)numcells217,8327
  my_charset_conv_mb_wc mb_wc;220,8436
  my_charset_conv_wc_mb wc_mb;221,8467
  int (*ctype)ctype224,8521
  size_t  (*caseup_str)caseup_str228,8674
  size_t  (*casedn_str)casedn_str229,8733
  my_charset_conv_case caseup;231,8793
  my_charset_conv_case casedn;232,8824
  size_t (*snprintf)snprintf235,8893
} MY_CHARSET_HANDLER;264,10455
#define CHARSET_INFO_DEFINED274,10714
typedef struct charset_info_st277,10816
  uint      number;279,10849
  uint      primary_number;280,10869
  uint      binary_number;281,10897
  uint      state;282,10924
  const char *csname;csname283,10943
  const char *name;name284,10965
  const char *comment;comment285,10985
  const char *tailoring;tailoring286,11008
  uchar    *ctype;ctype287,11033
  uchar    *to_lower;to_lower288,11052
  uchar    *to_upper;to_upper289,11074
  uchar    *sort_order;sort_order290,11096
  uint16   *contractions;contractions291,11120
  uint16   **sort_order_big;sort_order_big292,11146
  uint16      *tab_to_uni;tab_to_uni293,11175
  MY_UNI_IDX  *tab_from_uni;tab_from_uni294,11202
  MY_UNICASE_INFO **caseinfo;caseinfo295,11231
  uchar     *state_map;state_map296,11261
  uchar     *ident_map;ident_map297,11285
  uint      strxfrm_multiply;298,11309
  uchar     caseup_multiply;299,11339
  uchar     casedn_multiply;300,11368
  uint      mbminlen;301,11397
  uint      mbmaxlen;302,11419
  uint16    min_sort_char;303,11441
  uint16    max_sort_char;304,11468
  uchar     pad_char;305,11523
  my_bool   escape_with_backslash_is_dangerous;306,11545
  MY_CHARSET_HANDLER *cset;cset308,11596
  MY_COLLATION_HANDLER *coll;coll309,11624
} CHARSET_INFO;311,11657
#define ILLEGAL_CHARSET_INFO_NUMBER 312,11673
#define MY_UTF8MB3 359,13735
#define MY_UTF8MB4 360,13777
my_cs_have_contractions(365,13891
my_cs_can_be_contraction_head(371,13995
my_cs_can_be_contraction_tail(377,14150
my_cs_contraction2_weight(383,14305
size_t my_snprintf_8bit(430,16261
#define	_MY_U	593,23922
#define	_MY_L	594,23956
#define	_MY_NMR	595,23990
#define	_MY_SPC	596,24031
#define	_MY_PNT	597,24075
#define	_MY_CTR	598,24113
#define	_MY_B	599,24157
#define	_MY_X	600,24188
#define	my_isascii(603,24233
#define	my_toascii(604,24272
#define my_tocntrl(605,24307
#define my_toprint(606,24340
#define my_toupper(607,24373
#define my_tolower(608,24433
#define	my_isalpha(609,24493
#define	my_isupper(610,24567
#define	my_islower(611,24631
#define	my_isdigit(612,24695
#define	my_isxdigit(613,24761
#define	my_isalnum(614,24825
#define	my_isspace(615,24909
#define	my_ispunct(616,24975
#define	my_isprint(617,25041
#define	my_isgraph(618,25143
#define	my_iscntrl(619,25237
#define my_isvar(622,25357
#define my_isvar_start(623,25427
#define my_binary_compare(625,25498
#define use_strnxfrm(626,25563
#define my_strnxfrm(627,25632
#define my_strnncoll(628,25717
#define my_like_range(629,25804
#define my_wildcmp(631,25943
#define my_strcasecmp(632,26040
#define my_charpos(633,26117
#define use_mb(636,26228
#define my_ismbchar(637,26296
#define my_mbcharlen(639,26385
#define my_mbcharlen(641,26461
#define my_caseup_str(644,26509
#define my_casedn_str(645,26581
#define my_strntol(646,26653
#define my_strntoul(647,26737
#define my_strntoll(648,26822
#define my_strntoull(649,26907
#define my_strntod(650,26993
#define USE_TIS620656,27219

include/m_string.h,1292
#define _m_string_h23,936
#define __USE_GNU	28,1037
# define memcpy(51,1573
# define memset(52,1620
# define memmove(53,1663
# define bmove(55,1739
# define bfill(60,1837
# define bzero(66,2154
#define strmov(81,2556
#define strmov(83,2629
#define strmov_overlapp(94,2872
#define strmake_overlapp(95,2913
  MY_GCVT_ARG_FLOAT,128,4027
  MY_GCVT_ARG_DOUBLE129,4048
} my_gcvt_arg_type;130,4069
#define NOT_FIXED_DEC 138,4352
#define FLOATING_POINT_BUFFER 145,4568
#define MAX_DECPT_FOR_F_FORMAT 155,5052
#define MY_GCVT_MAX_FIELD_WIDTH 162,5302
#define ll2str(177,5941
#define longlong10_to_str(178,5990
#undef strtoll179,6049
#define strtoll(180,6064
#define strtoull(181,6107
#define HAVE_STRTOULL183,6174
#define HAVE_STRTOLL186,6224
#define longlong2str(198,6623
typedef struct st_mysql_lex_string LEX_STRING;210,6849
#define STRING_WITH_LEN(212,6897
#define USTRING_WITH_LEN(213,6956
#define C_STRING_WITH_LEN(214,7025
struct st_mysql_const_lex_string216,7098
  const char *str;str218,7133
  size_t length;219,7152
typedef struct st_mysql_const_lex_string LEX_CSTRING;221,7172
#define SPACE_INT 225,7299
#define SPACE_INT 227,7350
static inline const uchar *skip_trailing_space(skip_trailing_space266,9031
static inline void lex_string_set(292,9794

include/my_aes.h,60
#define MY_AES_INCLUDED2,24
#define AES_KEY_LENGTH 28,942

include/my_alarm.h,347
#define _my_alarm_h21,889
#define ALARM_VARIABLES 31,1099
#define ALARM_INIT	33,1172
#define ALARM_END	36,1322
#define ALARM_TEST	38,1407
#define ALARM_REINIT	40,1484
#define ALARM_REINIT	44,1624
#define ALARM_VARIABLES 48,1767
#define ALARM_INIT49,1846
#define ALARM_END50,1865
#define ALARM_TEST 51,1883
#define ALARM_REINIT 52,1933

include/my_alloc.h,608
#define _my_alloc_h21,837
#define ALLOC_MAX_BLOCK_TO_DROP	23,858
#define ALLOC_MAX_BLOCK_USAGE_BEFORE_DROP	24,897
typedef struct st_used_mem30,983
  struct st_used_mem *next;next32,1054
  unsigned int	left;33,1109
  unsigned int	size;34,1162
} USED_MEM;35,1207
typedef struct st_mem_root38,1221
  USED_MEM *free;free40,1250
  USED_MEM *used;used41,1321
  USED_MEM *pre_alloc;pre_alloc42,1396
  size_t min_malloc;44,1520
  size_t block_size;45,1541
  unsigned int block_num;46,1601
  unsigned int first_block_usage;51,1808
  void (*error_handler)error_handler53,1843
} MEM_ROOT;54,1874

include/my_atomic.h,1876
#define MY_ATOMIC_INCLUDED2,27
#define intptr 59,2172
#undef MY_ATOMIC_HAS_8_1664,2302
#define make_atomic_add_body(80,2675
#define make_atomic_fas_body(86,2918
#define make_atomic_load_body(92,3162
#define make_atomic_store_body(97,3376
#define make_transparent_unions(120,4264
#define uintptr 129,4850
make_transparent_unions(130,4873
#undef uintptr135,5013
#undef make_transparent_unions136,5028
#define a 137,5059
#define cmp 138,5081
#define v 139,5105
#define set 140,5127
#define U_8 142,5157
#define U_16 143,5177
#define U_32 144,5198
#define U_64 145,5219
#define U_ptr 146,5240
#define Uv_8 147,5262
#define Uv_16 148,5282
#define Uv_32 149,5303
#define Uv_64 150,5324
#define Uv_ptr 151,5345
#define U_a 152,5367
#define U_cmp 153,5394
#define U_v 154,5414
#define U_set 155,5431
#define make_atomic_cas(158,5496
#define make_atomic_add(167,5961
#define make_atomic_fas(175,6360
#define make_atomic_load(183,6759
#define make_atomic_store(191,7158
#undef _atomic_h_cleanup_239,8209
#undef U_8242,8243
#undef U_16243,8254
#undef U_32244,8266
#undef U_64245,8278
#undef U_ptr246,8290
#undef Uv_8247,8303
#undef Uv_16248,8315
#undef Uv_32249,8328
#undef Uv_64250,8341
#undef Uv_ptr251,8354
#undef a252,8368
#undef cmp253,8377
#undef v254,8388
#undef set255,8397
#undef U_a256,8408
#undef U_cmp257,8419
#undef U_v258,8432
#undef U_set259,8443
#undef make_atomic_add260,8456
#undef make_atomic_cas261,8479
#undef make_atomic_load262,8502
#undef make_atomic_store263,8526
#undef make_atomic_fas264,8551
#undef make_atomic_add_body265,8574
#undef make_atomic_cas_body266,8602
#undef make_atomic_load_body267,8630
#undef make_atomic_store_body268,8659
#undef make_atomic_fas_body269,8689
#undef intptr270,8717
#define LF_BACKOFF 278,8950
#define MY_ATOMIC_OK 281,8981
#define MY_ATOMIC_NOT_1CPU 282,9010

include/my_attribute.h,178
#define _my_attribute_h22,871
#  define GCC_VERSION 26,939
# define ATTRIBUTE_FORMAT(52,1695
#  define ATTRIBUTE_FORMAT_FPTR(62,1932
#  define ATTRIBUTE_FORMAT_FPTR(64,2014

include/my_base.h,11829
#define _my_base_h20,826
#define CHSIZE_USED23,895
#define EOVERFLOW 31,1066
#define HA_OPEN_ABORT_IF_LOCKED	39,1200
#define HA_OPEN_WAIT_IF_LOCKED	40,1249
#define HA_OPEN_IGNORE_IF_LOCKED	41,1283
#define HA_OPEN_TMP_TABLE	42,1318
#define HA_OPEN_DELAY_KEY_WRITE	43,1375
#define HA_OPEN_ABORT_IF_CRASHED	44,1436
#define HA_OPEN_FOR_REPAIR	45,1472
#define HA_OPEN_FROM_SQL_LAYER 46,1530
#define HA_OPEN_MMAP 47,1573
#define HA_OPEN_COPY	48,1646
#define HA_OPEN_INTERNAL_TABLE 50,1760
enum ha_rkey_function 73,2662
  HA_READ_KEY_EXACT,74,2686
  HA_READ_KEY_OR_NEXT,75,2755
  HA_READ_KEY_OR_PREV,76,2817
  HA_READ_AFTER_KEY,77,2876
  HA_READ_BEFORE_KEY,78,2948
  HA_READ_PREFIX,79,3021
  HA_READ_PREFIX_LAST,80,3086
  HA_READ_PREFIX_LAST_OR_PREV,81,3156
  HA_READ_MBR_CONTAIN,82,3234
  HA_READ_MBR_INTERSECT,83,3257
  HA_READ_MBR_WITHIN,84,3282
  HA_READ_MBR_DISJOINT,85,3304
  HA_READ_MBR_EQUAL86,3328
enum ha_key_alg 91,3380
  HA_KEY_ALG_UNDEF=92,3398
  HA_KEY_ALG_BTREE=93,3453
  HA_KEY_ALG_RTREE=94,3512
  HA_KEY_ALG_HASH=95,3571
  HA_KEY_ALG_FULLTEXT=96,3624
enum ha_storage_media 101,3721
  HA_SM_DEFAULT=102,3745
  HA_SM_DISK=103,3810
  HA_SM_MEMORY=104,3857
enum ha_extra_function 109,3963
  HA_EXTRA_NORMAL=110,3988
  HA_EXTRA_QUICK=111,4042
  HA_EXTRA_NOT_USED=112,4089
  HA_EXTRA_CACHE=113,4112
  HA_EXTRA_NO_CACHE=114,4166
  HA_EXTRA_NO_READCHECK=115,4226
  HA_EXTRA_READCHECK=116,4283
  HA_EXTRA_KEYREAD=117,4335
  HA_EXTRA_NO_KEYREAD=118,4391
  HA_EXTRA_NO_USER_CHANGE=119,4452
  HA_EXTRA_KEY_CACHE=120,4516
  HA_EXTRA_NO_KEY_CACHE=121,4541
  HA_EXTRA_WAIT_LOCK=122,4569
  HA_EXTRA_NO_WAIT_LOCK=123,4635
  HA_EXTRA_WRITE_CACHE=124,4704
  HA_EXTRA_FLUSH_CACHE=125,4768
  HA_EXTRA_NO_KEYS=126,4827
  HA_EXTRA_KEYREAD_CHANGE_POS=127,4884
  HA_EXTRA_REMEMBER_POS=129,4983
  HA_EXTRA_RESTORE_POS=130,5045
  HA_EXTRA_REINIT_CACHE=131,5072
  HA_EXTRA_FORCE_REOPEN=132,5138
  HA_EXTRA_FLUSH,133,5203
  HA_EXTRA_NO_ROWS,134,5250
  HA_EXTRA_RESET_STATE,135,5295
  HA_EXTRA_IGNORE_DUP_KEY,136,5343
  HA_EXTRA_NO_IGNORE_DUP_KEY,137,5411
  HA_EXTRA_PREPARE_FOR_DROP,138,5441
  HA_EXTRA_PREPARE_FOR_UPDATE,139,5470
  HA_EXTRA_PRELOAD_BUFFER_SIZE,140,5538
  HA_EXTRA_CHANGE_KEY_TO_UNIQUE,144,5695
  HA_EXTRA_CHANGE_KEY_TO_DUP,145,5728
  HA_EXTRA_KEYREAD_PRESERVE_FIELDS,151,5951
  HA_EXTRA_MMAP,152,5987
  HA_EXTRA_IGNORE_NO_KEY,160,6247
  HA_EXTRA_NO_IGNORE_NO_KEY,161,6273
  HA_EXTRA_MARK_AS_LOG_TABLE,166,6429
  HA_EXTRA_WRITE_CAN_REPLACE,174,6789
  HA_EXTRA_WRITE_CANNOT_REPLACE,175,6819
  HA_EXTRA_DELETE_CANNOT_BATCH,182,7151
  HA_EXTRA_UPDATE_CANNOT_BATCH,183,7183
  HA_EXTRA_INSERT_WITH_UPDATE,188,7364
  HA_EXTRA_PREPARE_FOR_RENAME,190,7443
  HA_EXTRA_ADD_CHILDREN_LIST,194,7522
  HA_EXTRA_ATTACH_CHILDREN,195,7552
  HA_EXTRA_IS_ATTACHED_CHILDREN,196,7580
  HA_EXTRA_DETACH_CHILDREN197,7613
#define HA_EXTRA_PREPARE_FOR_DELETE 201,7690
enum ha_panic_function 205,7802
  HA_PANIC_CLOSE,206,7827
  HA_PANIC_WRITE,207,7873
  HA_PANIC_READ	208,7923
enum ha_base_keytype 213,8034
  HA_KEYTYPE_END=214,8057
  HA_KEYTYPE_TEXT=215,8077
  HA_KEYTYPE_BINARY=216,8131
  HA_KEYTYPE_SHORT_INT=217,8194
  HA_KEYTYPE_LONG_INT=218,8220
  HA_KEYTYPE_FLOAT=219,8245
  HA_KEYTYPE_DOUBLE=220,8267
  HA_KEYTYPE_NUM=221,8290
  HA_KEYTYPE_USHORT_INT=222,8348
  HA_KEYTYPE_ULONG_INT=223,8375
  HA_KEYTYPE_LONGLONG=224,8401
  HA_KEYTYPE_ULONGLONG=225,8427
  HA_KEYTYPE_INT24=226,8454
  HA_KEYTYPE_UINT24=227,8477
  HA_KEYTYPE_INT8=228,8501
  HA_KEYTYPE_VARTEXT1=230,8584
  HA_KEYTYPE_VARBINARY1=231,8655
  HA_KEYTYPE_VARTEXT2=233,8797
  HA_KEYTYPE_VARBINARY2=234,8855
  HA_KEYTYPE_BIT=235,8922
#define HA_MAX_KEYTYPE	238,8946
#define HA_NOSAME	242,9040
#define HA_PACK_KEY	243,9099
#define HA_AUTO_KEY	244,9161
#define HA_BINARY_PACK_KEY	245,9186
#define HA_FULLTEXT	246,9255
#define HA_UNIQUE_CHECK	247,9311
#define HA_SPATIAL	248,9375
#define HA_NULL_ARE_EQUAL	249,9428
#define HA_GENERATED_KEY	250,9494
#define HA_CLUSTERING 251,9556
#define HA_KEYFLAG_MASK 254,9710
#define HA_KEY_HAS_PART_KEY_SEG 268,10303
#define HA_SPACE_PACK_USED	272,10377
#define HA_VAR_LENGTH_KEY	273,10441
#define HA_NULL_PART_KEY	274,10470
#define HA_USES_COMMENT 275,10499
#define HA_USES_PARSER 276,10537
#define HA_USES_BLOCK_SIZE	277,10615
#define HA_SORT_ALLOWS_SAME 278,10658
#define HA_SPACE_PACK	282,10786
#define HA_PART_KEY_SEG	283,10840
#define HA_VAR_LENGTH_PART	284,10906
#define HA_NULL_PART	285,10936
#define HA_BLOB_PART	286,10962
#define HA_SWAP_KEY	287,10988
#define HA_REVERSE_SORT	288,11013
#define HA_NO_SORT 289,11075
#define HA_END_SPACE_ARE_EQUAL	294,11278
#define HA_BIT_PART	295,11314
#define HA_OPTION_PACK_RECORD	298,11372
#define HA_OPTION_PACK_KEYS	299,11405
#define HA_OPTION_COMPRESS_RECORD	300,11436
#define HA_OPTION_LONG_BLOB_PTR	301,11472
#define HA_OPTION_TMP_TABLE	302,11529
#define HA_OPTION_CHECKSUM	303,11561
#define HA_OPTION_DELAY_KEY_WRITE	304,11592
#define HA_OPTION_NO_PACK_KEYS	305,11629
#define HA_OPTION_CREATE_FROM_ENGINE 306,11691
#define HA_OPTION_RELIES_ON_SQL_LAYER 307,11735
#define HA_OPTION_NULL_FIELDS	308,11779
#define HA_OPTION_PAGE_CHECKSUM	309,11815
#define HA_OPTION_TEMP_COMPRESS_RECORD	310,11853
#define HA_OPTION_READ_ONLY_DATA	311,11928
#define HA_DONT_TOUCH_DATA	315,12031
#define HA_PACK_RECORD	316,12097
#define HA_CREATE_TMP_TABLE	317,12158
#define HA_CREATE_CHECKSUM	318,12188
#define HA_CREATE_KEEP_FILES	319,12217
#define HA_CREATE_PAGE_CHECKSUM	320,12289
#define HA_CREATE_DELAY_KEY_WRITE 321,12324
#define HA_CREATE_RELIES_ON_SQL_LAYER 322,12361
#define HA_STATUS_POS 333,12687
#define HA_STATUS_NO_LOCK 340,12970
#define HA_STATUS_TIME 342,13078
#define HA_STATUS_CONST 349,13361
#define HA_STATUS_VARIABLE 355,13540
#define HA_STATUS_ERRKEY 361,13732
#define HA_STATUS_AUTO 365,13812
#define HA_STATUS_VARIABLE_EXTRA 370,13989
#define HA_ERR_FIRST 379,14238
#define HA_ERR_KEY_NOT_FOUND	381,14308
#define HA_ERR_FOUND_DUPP_KEY	382,14381
#define HA_ERR_INTERNAL_ERROR 383,14445
#define HA_ERR_RECORD_CHANGED	384,14506
#define HA_ERR_WRONG_INDEX	385,14574
#define HA_ERR_CRASHED	386,14641
#define HA_ERR_WRONG_IN_RECORD	387,14696
#define HA_ERR_OUT_OF_MEM	388,14760
#define HA_ERR_NOT_A_TABLE 389,14819
#define HA_ERR_WRONG_COMMAND	390,14895
#define HA_ERR_OLD_FILE	391,14956
#define HA_ERR_NO_ACTIVE_RECORD 392,15007
#define HA_ERR_RECORD_DELETED	393,15076
#define HA_ERR_RECORD_FILE_FULL 394,15138
#define HA_ERR_INDEX_FILE_FULL	395,15201
#define HA_ERR_END_OF_FILE	396,15263
#define HA_ERR_UNSUPPORTED	397,15328
#define HA_ERR_TO_BIG_ROW	398,15392
#define HA_WRONG_CREATE_OPTION	399,15440
#define HA_ERR_FOUND_DUPP_UNIQUE 400,15501
#define HA_ERR_UNKNOWN_CHARSET	401,15571
#define HA_ERR_WRONG_MRG_TABLE_DEF 402,15632
#define HA_ERR_CRASHED_ON_REPAIR 403,15706
#define HA_ERR_CRASHED_ON_USAGE 404,15781
#define HA_ERR_LOCK_WAIT_TIMEOUT 405,15847
#define HA_ERR_LOCK_TABLE_FULL 406,15884
#define HA_ERR_READ_ONLY_TRANSACTION 407,15921
#define HA_ERR_LOCK_DEADLOCK	408,15988
#define HA_ERR_CANNOT_ADD_FOREIGN 409,16022
#define HA_ERR_NO_REFERENCED_ROW 410,16102
#define HA_ERR_ROW_IS_REFERENCED 411,16172
#define HA_ERR_NO_SAVEPOINT	412,16246
#define HA_ERR_NON_UNIQUE_BLOCK_SIZE 413,16317
#define HA_ERR_NO_SUCH_TABLE 414,16390
#define HA_ERR_TABLE_EXIST 415,16469
#define HA_ERR_NO_CONNECTION 416,16549
#define HA_ERR_NULL_IN_SPATIAL 418,16676
#define HA_ERR_TABLE_DEF_CHANGED 419,16713
#define HA_ERR_NO_PARTITION_FOUND 421,16845
#define HA_ERR_RBR_LOGGING_FAILED 422,16883
#define HA_ERR_DROP_INDEX_FK 423,16963
#define HA_ERR_FOREIGN_DUPLICATE_KEY 428,17144
#define HA_ERR_TABLE_NEEDS_UPGRADE 430,17227
#define HA_ERR_TABLE_READONLY 431,17266
#define HA_ERR_AUTOINC_READ_FAILED 433,17340
#define HA_ERR_AUTOINC_ERANGE 434,17420
#define HA_ERR_GENERIC 435,17499
#define HA_ERR_RECORD_IS_THE_SAME 437,17626
#define HA_ERR_LOGGING_IMPOSSIBLE 439,17711
#define HA_ERR_CORRUPT_EVENT 441,17843
#define HA_ERR_NEW_FILE	443,17992
#define HA_ERR_ROWS_EVENT_APPLY 444,18053
#define HA_ERR_INITIALIZATION 446,18209
#define HA_ERR_FILE_TOO_SHORT	447,18284
#define HA_ERR_WRONG_CRC	448,18342
#define HA_ERR_TOO_MANY_CONCURRENT_TRXS 449,18398
#define HA_ERR_INDEX_COL_TOO_LONG 450,18487
#define HA_ERR_INDEX_CORRUPT 451,18566
#define HA_ERR_UNDO_REC_TOO_BIG 452,18627
#define HA_ERR_TABLE_IN_FK_CHECK 453,18698
#define HA_ERR_DISK_FULL 454,18783
#define HA_ERR_LAST 455,18821
#define HA_ERR_ERRORS 458,18924
#define HA_NAMELEN 462,19015
#define NO_SUCH_KEY 463,19074
typedef ulong key_part_map;465,19139
#define HA_WHOLE_KEY 466,19167
#define SEARCH_FIND	471,19270
#define SEARCH_NO_FIND	472,19292
#define SEARCH_SAME	473,19317
#define SEARCH_BIGGER	474,19339
#define SEARCH_SMALLER	475,19363
#define SEARCH_SAVE_BUFF	476,19389
#define SEARCH_UPDATE	477,19417
#define SEARCH_PREFIX	478,19442
#define SEARCH_LAST	479,19468
#define MBR_CONTAIN 480,19492
#define MBR_INTERSECT 481,19520
#define MBR_WITHIN 482,19549
#define MBR_DISJOINT 483,19578
#define MBR_EQUAL 484,19607
#define MBR_DATA 485,19636
#define SEARCH_NULL_ARE_EQUAL 486,19666
#define SEARCH_NULL_ARE_NOT_EQUAL 487,19731
#define QUICK_USED	490,19829
#define READ_CACHE_USED	491,19850
#define READ_CHECK_USED 492,19876
#define KEY_READ_USED	493,19902
#define WRITE_CACHE_USED 494,19926
#define OPT_NO_ROWS	495,19954
#define HA_STATE_CHANGED	498,20000
#define HA_STATE_AKTIV	499,20054
#define HA_STATE_WRITTEN	500,20107
#define HA_STATE_DELETED	501,20158
#define HA_STATE_NEXT_FOUND	502,20185
#define HA_STATE_PREV_FOUND	503,20256
#define HA_STATE_NO_KEY	504,20326
#define HA_STATE_KEY_CHANGED	505,20389
#define HA_STATE_WRITE_AT_END	506,20422
#define HA_STATE_BUFF_SAVED	507,20487
#define HA_STATE_ROW_CHANGED	508,20558
#define HA_STATE_EXTEND_BLOCK	509,20620
#define HA_STATE_RNEXT_SAME	510,20655
enum en_fieldtype 513,20778
  FIELD_LAST=514,20798
  FIELD_LAST=-1,FIELD_NORMAL,514,20798
  FIELD_LAST=-1,FIELD_NORMAL,FIELD_SKIP_ENDSPACE,514,20798
  FIELD_LAST=-1,FIELD_NORMAL,FIELD_SKIP_ENDSPACE,FIELD_SKIP_PRESPACE,514,20798
  FIELD_SKIP_ZERO,515,20868
  FIELD_SKIP_ZERO,FIELD_BLOB,515,20868
  FIELD_SKIP_ZERO,FIELD_BLOB,FIELD_CONSTANT,515,20868
  FIELD_SKIP_ZERO,FIELD_BLOB,FIELD_CONSTANT,FIELD_INTERVALL,515,20868
  FIELD_SKIP_ZERO,FIELD_BLOB,FIELD_CONSTANT,FIELD_INTERVALL,FIELD_ZERO,515,20868
  FIELD_VARCHAR,516,20940
  FIELD_VARCHAR,FIELD_CHECK,516,20940
  FIELD_enum_val_count517,20969
enum data_file_type 520,20996
  STATIC_RECORD,521,21018
  STATIC_RECORD, DYNAMIC_RECORD,521,21018
  STATIC_RECORD, DYNAMIC_RECORD, COMPRESSED_RECORD,521,21018
  STATIC_RECORD, DYNAMIC_RECORD, COMPRESSED_RECORD, BLOCK_RECORD521,21018
#define NO_MIN_RANGE	526,21109
#define NO_MAX_RANGE	527,21132
#define NEAR_MIN	528,21155
#define NEAR_MAX	529,21174
#define UNIQUE_RANGE	530,21193
#define EQ_RANGE	531,21217
#define NULL_RANGE	532,21237
#define GEOM_FLAG 533,21259
#define SKIP_RANGE 534,21286
typedef struct st_key_range536,21314
  const uchar *key;key538,21344
  uint length;539,21364
  key_part_map keypart_map;540,21379
  enum ha_rkey_function flag;541,21407
} key_range;542,21437
typedef struct st_key_multi_range544,21451
  key_range start_key;546,21487
  key_range end_key;547,21510
  char  *ptr;ptr548,21531
  uint  range_flag;549,21606
} KEY_MULTI_RANGE;550,21668
#define rows2double(555,21735
typedef my_off_t	ha_rows;556,21778
#define rows2double(558,21810
typedef ulong		ha_rows;559,21846
#define HA_POS_ERROR	562,21878
#define HA_OFFSET_ERROR	563,21915
#define MAX_FILE_SIZE	566,21986
#define MAX_FILE_SIZE	568,22024
#define HA_VARCHAR_PACKLENGTH(571,22067
typedef void (* invalidator_by_filename)575,22208

include/my_bit.h,317
#define MY_BIT_INCLUDED18,772
static inline uint my_bit_log2(34,1049
static inline uint my_count_bits(41,1171
static inline uint my_count_bits_uint32(63,2100
static inline uint32 my_round_up_to_next_power(91,2775
static inline uint32 my_clear_highest_bit(102,3210
static inline uint32 my_reverse_bits(113,3373

include/my_bitmap.h,957
#define _my_bitmap_h_18,770
#define MY_BIT_NONE 20,793
typedef uint32 my_bitmap_map;24,849
typedef struct st_bitmap26,880
  my_bitmap_map *bitmap;bitmap28,907
  uint n_bits;29,932
  my_bitmap_map last_word_mask;30,990
  my_bitmap_map *last_word_ptr;last_word_ptr31,1022
  mysql_mutex_t *mutex;mutex37,1240
} MY_BITMAP;38,1264
#define bitmap_buffer_size(72,3017
#define no_bytes_in_map(73,3069
#define no_words_in_map(74,3122
#define bytes_word_aligned(75,3177
#define _bitmap_set_bit(76,3231
#define _bitmap_flip_bit(78,3360
#define _bitmap_clear_bit(80,3490
#define _bitmap_is_set(82,3623
bitmap_set_bit(97,4166
bitmap_flip_bit(103,4293
bitmap_clear_bit(109,4422
bitmap_is_set(115,4553
#define bitmap_set_bit(121,4678
#define bitmap_flip_bit(122,4737
#define bitmap_clear_bit(123,4798
#define bitmap_is_set(124,4861
static inline my_bool bitmap_cmp(127,4926
#define bitmap_clear_all(135,5221
#define bitmap_set_all(137,5311

include/my_compare.h,924
#define _my_compare_h17,761
#define HA_MAX_POSSIBLE_KEY 36,1410
#define HA_MAX_KEY_LENGTH 42,1619
#define HA_MAX_KEY_SEG 43,1693
#define HA_MAX_POSSIBLE_KEY_BUFF 45,1769
#define HA_MAX_KEY_BUFF 46,1835
typedef struct st_HA_KEYSEG	48,1902
  CHARSET_INFO *charset;charset50,1951
  uint32 start;51,1976
  uint32 null_pos;52,2024
  uint16 bit_pos;53,2078
  uint16 flag;54,2145
  uint16 length;55,2160
  uint16 language;56,2195
  uint8  type;57,2214
  uint8  null_bit;58,2261
  uint8  bit_start,59,2313
  uint8  bit_start,bit_end;59,2313
  uint8  bit_length;60,2361
} HA_KEYSEG;61,2426
#define get_key_length(63,2440
#define get_key_length_rdonly(70,2612
#define get_key_pack_length(77,2781
#define store_key_length_inc(84,3003
#define size_to_store_key_length(91,3172
#define get_rec_bits(93,3239
#define set_rec_bits(97,3394
#define clr_rec_bits(106,3739
#define portable_sizeof_char_ptr 120,4253

include/my_compiler.h,1446
#define MY_COMPILER_INCLUDED2,29
# define MY_GNUC_PREREQ(36,1251
# define MY_ALIGN_EXT39,1376
#   define MY_ASSERT_UNREACHABLE(42,1488
# define MY_ALIGNOF(47,1608
# define MY_ALIGNED(48,1652
#   define MY_ALIGN_EXT53,1805
#   define MY_ALIGN_EXT59,1902
#   define MY_ALIGN_EXT65,2039
# define MY_ALIGNOF(71,2149
# define MY_ALIGNED(73,2249
# define MY_GNUC_PREREQ(81,2393
    template<typename type> struct my_alignof_helper 86,2478
    template<typename type> struct my_alignof_helper { char m1;my_alignof_helper::m186,2478
    template<typename type> struct my_alignof_helper { char m1; type m2;my_alignof_helper::m286,2478
#   define MY_ALIGNOF(88,2633
#   define MY_ALIGNOF(90,2708
# define MY_ASSERT_UNREACHABLE(95,2827
template<> struct MY_ALIGNED(1) my_alignment_imp<my_alignment_imp110,3122
template<> struct MY_ALIGNED(2) my_alignment_imp<my_alignment_imp111,3178
template<> struct MY_ALIGNED(4) my_alignment_imp<my_alignment_imp112,3234
template<> struct MY_ALIGNED(8) my_alignment_imp<my_alignment_imp113,3290
template<> struct MY_ALIGNED(16) my_alignment_imp<my_alignment_imp114,3346
struct my_alignment_imp 118,3469
struct my_alignment_imp { double m1;my_alignment_imp::m1118,3469
template <size_t size,131,3830
struct my_aligned_storage132,3871
    char data[my_aligned_storage::data136,3911
    my_alignment_imp<alignment> align;my_aligned_storage::align137,3932
#define MY_ALIGNED(148,4142

include/my_dbug.h,2324
#define MY_DBUG_INCLUDED17,771
struct _db_stack_frame_ 34,1045
  const char *func;func35,1071
  const char *file;file36,1150
  uint level;37,1229
  struct _db_stack_frame_ *prev;prev38,1308
extern  void _db_doprnt_(58,2226
#define DBUG_ENTER(69,2632
#define DBUG_LEAVE 71,2757
#define DBUG_RETURN(72,2818
#define DBUG_VOID_RETURN 73,2880
#define DBUG_EXECUTE(74,2939
#define DBUG_EXECUTE_IF(76,3038
#define DBUG_EVALUATE(78,3140
#define DBUG_EVALUATE_IF(80,3232
#define DBUG_PRINT(82,3327
#define DBUG_PUSH(84,3438
#define DBUG_POP(85,3475
#define DBUG_SET(86,3506
#define DBUG_SET_INITIAL(87,3541
#define DBUG_PROCESS(88,3589
#define DBUG_FILE 89,3631
#define DBUG_SETJMP(90,3659
#define DBUG_LONGJMP(91,3713
#define DBUG_DUMP(92,3777
#define DBUG_END(93,3844
#define DBUG_LOCK_FILE 94,3876
#define DBUG_UNLOCK_FILE 95,3916
#define DBUG_ASSERT(96,3960
#define DBUG_EXPLAIN(97,3993
#define DBUG_EXPLAIN_INITIAL(98,4052
#define DEBUGGER_OFF 99,4121
#define DEBUGGER_ON 100,4191
#define DBUG_ABORT(102,4277
#define DBUG_ABORT(109,4530
#define DBUG_CHECK_CRASH(114,4763
#define DBUG_CRASH_ENTER(117,4931
#define DBUG_CRASH_RETURN(119,5023
#define DBUG_CRASH_VOID_RETURN 121,5109
#define DBUG_SUICIDE(133,5570
#define DBUG_SUICIDE(136,5640
#define DBUG_ENTER(141,5769
#define DBUG_LEAVE142,5792
#define DBUG_RETURN(143,5811
#define DBUG_VOID_RETURN 144,5879
#define DBUG_EXECUTE(145,5943
#define DBUG_EXECUTE_IF(146,5999
#define DBUG_EVALUATE(147,6055
#define DBUG_EVALUATE_IF(148,6097
#define DBUG_PRINT(149,6142
#define DBUG_PUSH(150,6198
#define DBUG_SET(151,6254
#define DBUG_SET_INITIAL(152,6310
#define DBUG_POP(153,6366
#define DBUG_PROCESS(154,6422
#define DBUG_SETJMP(155,6478
#define DBUG_LONGJMP(156,6513
#define DBUG_DUMP(157,6550
#define DBUG_END(158,6606
#define DBUG_ASSERT(159,6662
#define DBUG_LOCK_FILE 160,6718
#define DBUG_FILE 161,6774
#define DBUG_UNLOCK_FILE 162,6801
#define DBUG_EXPLAIN(163,6857
#define DBUG_EXPLAIN_INITIAL(164,6887
#define DEBUGGER_OFF 165,6925
#define DEBUGGER_ON 166,6981
#define DBUG_ABORT(167,7037
#define DBUG_CRASH_ENTER(168,7093
#define DBUG_CRASH_RETURN(169,7124
#define DBUG_CRASH_VOID_RETURN 170,7193
#define DBUG_SUICIDE(171,7257
#define DBUG_SYNC_POINT(183,7654
#define DBUG_SYNC_POINT(187,7817

include/my_dir.h,1195
#define MY_DIR_H17,762
#define MY_S_IFMT	29,906
#define MY_S_IFDIR	30,950
#define MY_S_IFCHR	31,993
#define MY_S_IFBLK	32,1044
#define MY_S_IFREG	33,1091
#define MY_S_IFIFO	34,1132
#define MY_S_ISUID	35,1170
#define MY_S_ISGID	36,1228
#define MY_S_ISVTX	37,1287
#define MY_S_IREAD	38,1353
#define MY_S_IWRITE	39,1409
#define MY_S_IEXEC	40,1468
#define MY_S_ISDIR(42,1535
#define MY_S_ISCHR(43,1591
#define MY_S_ISBLK(44,1647
#define MY_S_ISREG(45,1703
#define MY_S_ISFIFO(46,1759
#define MY_DONT_SORT	48,1817
#define MY_WANT_STAT	49,1873
typedef struct my_stat55,1990
  dev_t		st_dev;57,2015
  ino_t		st_ino;58,2068
  ushort	st_mode;59,2105
  short		st_nlink;60,2167
  ushort	st_uid;61,2216
  ushort	st_gid;62,2248
  dev_t		st_rdev;63,2281
  off_t		st_size;64,2345
  time_t	st_atime;65,2382
  time_t	st_mtime;66,2426
  time_t	st_ctime;67,2480
} MY_STAT;68,2544
#define MY_STAT 73,2577
#define MY_STAT 75,2638
typedef struct fileinfo81,2800
  char			*name;name83,2826
  MY_STAT		*mystat;mystat84,2842
} FILEINFO;85,2862
typedef struct st_my_dir	87,2875
  struct fileinfo	*dir_entry;dir_entry95,3217
  uint			number_off_files;96,3247
} MY_DIR;97,3274

include/my_getopt.h,1370
#define _my_getopt_h18,769
#define GET_NO_ARG 24,869
#define GET_BOOL 25,894
#define GET_INT 26,919
#define GET_UINT 27,944
#define GET_LONG 28,969
#define GET_ULONG 29,994
#define GET_LL 30,1019
#define GET_ULL 31,1044
#define GET_STR 32,1069
#define GET_STR_ALLOC 33,1094
#define GET_DISABLED 34,1119
#define GET_ENUM 35,1144
#define GET_SET 36,1169
#define GET_DOUBLE 37,1194
#define GET_FLAGSET 38,1219
#define GET_ASK_ADDR	40,1245
#define GET_TYPE_MASK	41,1271
enum get_opt_arg_type 50,1602
enum get_opt_arg_type { NO_ARG,50,1602
enum get_opt_arg_type { NO_ARG, OPT_ARG,50,1602
enum get_opt_arg_type { NO_ARG, OPT_ARG, REQUIRED_ARG 50,1602
struct my_option54,1680
  const char *name;name56,1699
  int        id;60,1944
  const char *comment;comment71,2724
  void       *value;value75,2984
  void       *u_max_value;u_max_value76,3064
  struct st_typelib *typelib;typelib77,3145
  ulong     var_type;78,3220
  enum get_opt_arg_type arg_type;79,3291
  longlong   def_value;80,3368
  longlong   min_value;81,3430
  ulonglong  max_value;82,3510
  longlong   sub_size;83,3590
  long       block_size;84,3670
  void       *app_type;app_type85,3764
typedef my_bool (*my_get_one_option)my_get_one_option89,3846
typedef void (*my_error_reporter)my_error_reporter90,3923
typedef void *(*my_getopt_value)my_getopt_value99,4329

include/my_global.h,13634
#define _global_h20,847
#define __WIN__24,975
#define INNODB_COMPATIBILITY_HOOKS36,1356
#undef WIN40,1463
#undef WIN3241,1474
#undef _WIN42,1487
#undef _WIN3243,1499
#undef _WIN6444,1513
#undef __WIN__45,1527
#undef __WIN32__46,1542
#define HAVE_ERRNO_AS_DEFINE47,1559
#define USE_PRAGMA_INTERFACE52,1720
#define HAVE_ERRNO_AS_DEFINE56,1805
#define __i386__60,1882
#define C_MODE_START 65,1987
#define C_MODE_END	66,2024
#define C_MODE_START68,2051
#define C_MODE_END69,2072
#define CPP_UNNAMED_NS_START 73,2118
#define CPP_UNNAMED_NS_END 74,2160
#define HAVE_PSI_INTERFACE80,2262
#define IF_WIN(85,2411
#define IF_WIN(87,2439
#define IF_PURIFY(91,2488
#define IF_PURIFY(93,2519
#define HAVE_NDB_BINLOG 98,2600
#define HAVE_REPLICATION103,2690
#define HAVE_EXTERNAL_CLIENT104,2715
#undef SIZEOF_OFF_T113,2911
#define SIZEOF_OFF_T 114,2931
#define NOGDI121,3081
#define sleep(130,3273
#define F_OK 133,3344
#define W_OK 134,3359
#define F_RDLCK 137,3420
#define F_WRLCK 138,3438
#define F_UNLCK 139,3456
#define F_TO_EOF 140,3474
#define HAVE_SMEM 143,3565
#define HAVE_NAMED_PIPE 144,3585
#define shared_memory_buffer_length 145,3611
#define default_shared_memory_base_name 146,3653
#undef _LARGE_FILE_API152,3845
#  undef SIZEOF_CHARP 160,4044
#  undef SIZEOF_SHORT 161,4067
#  undef SIZEOF_INT 162,4090
#  undef SIZEOF_LONG 163,4111
#  undef SIZEOF_LONG_LONG 164,4133
#  undef SIZEOF_OFF_T 165,4160
#  undef WORDS_BIGENDIAN166,4183
#  define SIZEOF_SHORT 167,4208
#  define SIZEOF_INT 168,4233
#  define SIZEOF_LONG_LONG 169,4256
#  define SIZEOF_OFF_T 170,4285
#    define SIZEOF_CHARP 172,4354
#    define SIZEOF_LONG 173,4381
#    define SIZEOF_CHARP 175,4457
#    define SIZEOF_LONG 176,4484
#    define WORDS_BIGENDIAN181,4632
#define __builtin_expect(196,5206
#define likely(199,5262
#define unlikely(200,5304
#undef  _GNU_SOURCE204,5442
#define _GNU_SOURCE 205,5462
#undef HAVE_SYS_UN_H218,5823
#define __EXTENSIONS__ 221,5852
#define __STDC_EXT__ 223,5927
#define _XOPEN_SOURCE 252,7069
#define _XOPEN_SOURCE 254,7101
#define _POSIX_PTHREAD_SEMANTICS 260,7197
#define _REENTRANT	264,7284
#define _THREAD_SAFE 267,7398
#define _REENTRANT	277,7700
#define _H_STRINGS283,7888
#define _SYS_STREAM_H284,7907
#define ulonglong2double(286,8001
#define my_off_t2double(287,8052
inline double my_ulonglong2double(289,8116
#undef HAVE_SNPRINTF294,8294
#undef HAVE_PREAD301,8466
#undef HAVE_PWRITE302,8484
#undef HAVE_INITGROUPS306,8560
#define lint316,8778
#define _LONG_LONG 319,8847
#undef HAVE_ALLOCA367,9716
#undef HAVE_ALLOCA_H368,9735
#define compile_time_assert(389,10262
#define compile_time_assert(391,10316
#define _LARGEFILE64_SOURCE401,10736
#define HAVE_ULONG407,10906
#undef setrlimit411,11011
#define setrlimit 412,11028
#define QUOTE_ARG(419,11268
#define STRINGIFY_ARG(420,11327
#define DONT_ALLOW_USER_CHANGE 424,11485
#define DONT_USE_MYSQL_PWD 425,11518
#define SIGNAL_HANDLER_RESET_ON_DELIVERY430,11679
#define LINT_INIT(441,12036
#define LINT_INIT(443,12072
#define SO_EXT 448,12132
#define SO_EXT 450,12179
#define SO_EXT 452,12209
#define UNINIT_VAR(464,12563
#define UNINIT_VAR(467,12663
#undef HAVE_UINT471,12722
#define HAVE_UINT472,12739
typedef unsigned int uint;473,12757
typedef unsigned short ushort;474,12784
#define swap_variables(477,12823
#define test(478,12894
#define set_if_bigger(479,12925
#define set_if_smaller(480,12993
#define test_all_bits(481,13061
#define array_elements(482,13109
#define TRUE	486,13219
#define FALSE	487,13256
int __cxa_pure_virtual 499,13576
#undef DBUG_OFF505,13756
#  define DBUG_OFF510,13920
#    undef DBUG_ON512,13956
typedef int	File;518,14044
typedef SOCKET my_socket;520,14099
typedef int	my_socket;522,14131
#define INVALID_SOCKET 523,14188
#define sig_handler 526,14266
typedef void	(*sig_return)sig_return528,14310
typedef char	pchar;531,14422
typedef char	puchar;532,14480
typedef char	pbool;533,14539
typedef short	pshort;534,14597
typedef float	pfloat;535,14662
typedef int	pchar;537,14729
typedef uint	puchar;538,14788
typedef int	pbool;539,14849
typedef int	pshort;540,14908
typedef double	pfloat;541,14973
typedef int	(*qsort_cmp)qsort_cmp544,15057
typedef int	(*qsort_cmp2)qsort_cmp2545,15110
#define qsort_t 547,15182
typedef SOCKET_SIZE_TYPE size_socket;551,15309
#define SOCKOPT_OPTLEN_TYPE 554,15376
#define O_SHARE	560,15494
#define O_BINARY	562,15569
#define FILE_BINARY	565,15654
#define HAVE_FCNTL_LOCK568,15750
#define F_TO_EOF	569,15774
#define O_TEMPORARY	574,15887
#define O_SHORT_LIVED	577,15938
#define O_NOFOLLOW 580,15988
#define _SH_DENYRWD 585,16081
#define _SH_DENYWRD 586,16150
#define _SH_DENYRDD 587,16219
#define _SH_DENYDEL 588,16288
#define FN_LEN	593,16404
#define FN_HEADLEN	594,16448
#define FN_EXTLEN	595,16513
#define FN_REFLEN	596,16581
#define FN_EXTCHAR	597,16638
#define FN_HOMELIB	598,16661
#define FN_CURLIB	599,16724
#define FN_PARENTDIR	600,16789
#define FN_LIBCHAR	603,16871
#define FN_LIBCHAR2	604,16895
#define FN_DIRSEP 605,16919
#define FN_EXEEXT 606,16996
#define FN_SOEXT 607,17023
#define FN_ROOTDIR	608,17050
#define FN_DEVCHAR	609,17074
#define FN_NETWORK_DRIVES	610,17097
#define FN_NO_CASE_SENCE	611,17164
#define FN_LIBCHAR	613,17230
#define FN_LIBCHAR2	614,17253
#define FN_DIRSEP 615,17277
#define FN_EXEEXT 616,17342
#define FN_SOEXT 617,17365
#define FN_ROOTDIR	618,17391
#define MY_FILE_MIN 634,17956
#define MY_FILE_MIN 636,17988
#define MY_NFILE 650,18462
#define MY_NFILE 652,18507
#define OS_FILE_LIMIT	656,18557
#define IO_SIZE	664,18780
#define MALLOC_OVERHEAD 669,18916
#define ONCE_ALLOC_INIT	672,18970
#define RECORD_CACHE_SIZE	674,19052
#define KEY_CACHE_SIZE	676,19135
#define KEY_CACHE_BLOCK_SIZE	678,19222
#define NO_DIR_LIBRARY	684,19329
#undef remove	689,19441
#define closesocket(691,19505
inline double my_ulonglong2double(696,19581
#define ulonglong2double 703,19767
#define my_off_t2double 704,19812
inline unsigned long long my_double2ulonglong(706,19877
#define double2ulonglong 714,20095
#define ulonglong2double(718,20173
#define my_off_t2double(719,20228
#define double2ulonglong(722,20314
#define offsetof(726,20394
#define ulong_to_double(728,20464
#define strtok_r(735,20638
#define HAVE_LONG_LONG 741,20756
#define LONGLONG_MIN	750,20994
#define LONGLONG_MAX	751,21050
#define ULONGLONG_MAX 757,21230
#define ULONGLONG_MAX 759,21270
#define INT_MIN64 763,21394
#define INT_MAX64 764,21442
#define INT_MIN32 765,21487
#define INT_MAX32 766,21526
#define UINT_MAX32 767,21562
#define INT_MIN24 768,21598
#define INT_MAX24 769,21636
#define UINT_MAX24 770,21671
#define INT_MIN16 771,21706
#define INT_MAX16 772,21740
#define UINT_MAX16 773,21771
#define INT_MIN8 774,21802
#define INT_MAX8 775,21834
#define UINT_MAX8 776,21863
#define DBL_MIN	780,21937
#define FLT_MIN	781,21979
#define DBL_MAX	784,22052
#define FLT_MAX	785,22094
#define SIZE_T_MAX 788,22170
#define isfinite(793,22254
#define finite(795,22290
#define isnan(800,22397
static inline double my_isinf(807,22630
#define my_isinf(814,22782
#define my_isinf(817,22842
#define M_PI 822,22946
#define M_E 825,23001
#define M_LN2 828,23056
typedef long		my_ptrdiff_t;836,23211
typedef long long	my_ptrdiff_t;838,23245
#define MY_ALIGN(841,23285
#define ALIGN_SIZE(842,23338
#define ADD_TO_PTR(844,23424
#define PTR_BYTE_DIFF(845,23487
#define my_offsetof(859,24077
#define NullS	862,24182
#undef STDCALL865,24224
#define STDCALL 869,24261
#define STDCALL871,24293
typedef unsigned char	uchar;877,24375
typedef signed char int8;881,24460
typedef unsigned char uint8;884,24550
typedef short int16;887,24642
typedef unsigned short uint16;890,24690
typedef int int32;894,24767
typedef unsigned int uint32;897,24813
typedef long int32;901,24891
typedef unsigned long uint32;904,24938
typedef unsigned long	ulong;911,25085
typedef unsigned long long int ulonglong;920,25415
typedef long long int	longlong;921,25491
typedef unsigned long	ulonglong;923,25529
typedef long		longlong;924,25598
typedef longlong int64;928,25655
typedef ulonglong uint64;931,25706
typedef unsigned long my_ulonglong;935,25773
typedef unsigned __int64 my_ulonglong;937,25833
typedef unsigned long long my_ulonglong;939,25878
typedef int intptr;943,25958
typedef long intptr;945,26012
typedef long long intptr;947,26072
#define MY_ERRPTR 952,26196
typedef unsigned long long my_off_t;955,26254
typedef unsigned long long os_off_t;956,26291
typedef off_t os_off_t;958,26334
typedef ulonglong my_off_t;960,26379
typedef unsigned long my_off_t;962,26413
#define MY_FILEPOS_ERROR	965,26470
typedef ulonglong table_map;970,26561
typedef ulong nesting_map;971,26633
#define socket_errno	974,26726
#define SOCKET_EINTR	975,26765
#define SOCKET_EAGAIN	976,26795
#define SOCKET_ETIMEDOUT 977,26832
#define SOCKET_EWOULDBLOCK 978,26870
#define SOCKET_EADDRINUSE 979,26912
#define SOCKET_ENFILE	980,26952
#define SOCKET_EMFILE	981,26981
#define socket_errno	983,27027
#define closesocket(984,27054
#define SOCKET_EINTR	985,27086
#define SOCKET_EAGAIN	986,27113
#define SOCKET_ETIMEDOUT 987,27142
#define SOCKET_EWOULDBLOCK 988,27180
#define SOCKET_EADDRINUSE 989,27219
#define SOCKET_ENFILE	990,27256
#define SOCKET_EMFILE	991,27285
typedef int		myf;994,27322
typedef char		my_bool;995,27374
#define MYF(998,27473
#define LL(1002,27533
#define LL(1004,27561
#define ULL(1010,27631
#define ULL(1012,27661
#define reg1 1021,27837
#define reg2 1022,27859
#define reg3 1023,27881
#define reg4 1024,27903
#define reg5 1025,27925
#define reg6 1026,27947
#define reg7 1027,27969
#define reg8 1028,27991
#define reg9 1029,28013
#define reg10 1030,28035
#define reg11 1031,28058
#define reg12 1032,28081
#define reg13 1033,28104
#define reg14 1034,28127
#define reg15 1035,28150
#define reg16 1036,28173
#define YESNO(1042,28251
#define MY_HOW_OFTEN_TO_ALARM	1044,28290
#define MY_HOW_OFTEN_TO_WRITE	1045,28361
#define sint2korr(1056,28624
#define sint3korr(1057,28664
#define sint4korr(1065,29003
#define uint2korr(1066,29042
#define uint3korr(1068,29128
#define uint3korr(1078,29424
#define uint4korr(1080,29525
#define uint5korr(1081,29566
#define uint6korr(1086,29820
#define uint8korr(1092,30280
#define sint8korr(1093,30324
#define int2store(1094,30367
#define int3store(1095,30421
#define int4store(1098,30608
#define int5store(1099,30659
#define int6store(1104,30967
#define int8store(1110,31354
  double v;1113,31432
  long m[m1114,31444
} doubleget_union;1115,31457
#define doubleget(1116,31476
#define doublestore(1121,31633
#define float4get(1124,31810
#define float8get(1125,31888
#define float4store(1126,31932
#define floatstore(1127,32004
#define floatget(1128,32077
#define float8store(1129,32149
#define sint2korr(1136,32304
#define sint3korr(1138,32402
#define sint4korr(1146,32741
#define sint8korr(1150,32924
#define uint2korr(1151,32969
#define uint3korr(1153,33071
#define uint4korr(1156,33220
#define uint5korr(1160,33414
#define uint6korr(1165,33668
#define uint8korr(1171,34128
#define int2store(1180,34539
#define int3store(1184,34796
#define int4store(1189,35132
#define int5store(1193,35433
#define int6store(1199,35839
#define int8store(1206,36335
#define float4store(1210,36586
#define float4get(1215,36851
#define float8store(1221,37205
#define float8get(1230,37734
#define float4get(1241,38349
#define float4store(1242,38405
#define doublestore(1245,38534
#define doubleget(1254,39154
#define float8get(1266,39796
#define float8store(1267,39840
#define int4net(1276,40061
#define ushortget(1288,40473
#define shortget(1290,40626
#define longget(1292,40775
#define ulongget(1298,41123
#define shortstore(1304,41467
#define longstore(1307,41668
#define floatget(1312,41914
#define floatstore(1313,41970
#define doubleget(1314,42036
#define doublestore(1315,42092
#define longlongget(1316,42158
#define longlongstore(1317,42218
#define ushortget(1321,42288
#define shortget(1322,42345
#define longget(1323,42401
#define ulongget(1324,42456
#define shortstore(1325,42514
#define longstore(1326,42553
#define floatstore(1328,42610
#define floatget(1329,42677
#define doubleget(1332,42758
#define doublestore(1333,42814
#define longlongget(1335,42903
#define longlongstore(1336,42963
#define MYSQL_UNIVERSAL_CLIENT_CHARSET 1341,43081
#define MYSQL_UNIVERSAL_CLIENT_CHARSET 1343,43133
#define NO_EMBEDDED_ACCESS_CHECKS1347,43282
#define dlsym(1351,43344
#define dlopen(1352,43411
#define dlclose(1353,43475
#define HAVE_DLOPEN1355,43542
#define DLERROR_GENERATE(1367,43691
#define dlerror(1381,44130
#define dlopen_errno 1382,44151
#define dlerror(1384,44206
#define DLERROR_GENERATE(1385,44273
#define dlopen_errno 1386,44338
#define DLERROR_GENERATE(1389,44410
#define dlopen_errno 1390,44475
#define MY_INT32_NUM_DECIMAL_DIGITS 1402,44693
#define MY_INT64_NUM_DECIMAL_DIGITS 1405,44786
#define max(1409,44920
#define min(1410,44962
#define NEED_EXPLICIT_SYNC_DIR 1418,45192
#define bool 1422,45277
#    define __func__ 1428,45455
#    define __func__ 1430,45497
#    define __func__ 1434,45585
#    define __func__ 1436,45626
#  define __func__ 1439,45697
#  define __func__ 1441,45731
#define MAX_EXACT_INTEGER 1449,45930
static inline double rint(1459,46363
#define MYSQL_PLUGIN_IMPORT 1486,47188
#define MYSQL_PLUGIN_IMPORT1488,47244
#undef HAVE_OPENSSL1499,47515
#undef HAVE_SMEM	1500,47535

include/myisam.h,9211
#define _myisam_h20,830
#define MI_MAX_KEY 42,1177
#define MI_MAX_KEY 44,1262
#define MI_MAX_POSSIBLE_KEY_BUFF 47,1349
#define MI_MAX_KEY_LENGTH 52,1550
#define MI_MAX_KEY_SEG 53,1628
#define MI_MAX_KEY_BUFF 55,1708
#define MI_MAX_MSG_BUF 56,1774
#define MI_NAME_IEXT	57,1847
#define MI_NAME_DEXT	58,1875
#define MI_KEY_BLOCK_LENGTH	61,1969
#define MI_MIN_KEY_BLOCK_LENGTH	62,2033
#define MI_MAX_KEY_BLOCK_LENGTH	63,2097
#define MI_KEYMAP_BITS 72,2422
#define MI_KEYMAP_HIGH_MASK 73,2473
#define mi_get_mask_all_keys_active(74,2534
#define mi_is_key_active(81,2781
#define mi_set_key_active(85,3031
#define mi_clear_key_active(89,3283
#define mi_is_key_active(96,3554
#define mi_set_key_active(98,3668
#define mi_clear_key_active(100,3777
#define mi_is_any_key_active(105,3901
#define mi_is_all_keys_active(107,3987
#define mi_set_all_keys_active(109,4116
#define mi_clear_all_keys_active(111,4242
#define mi_intersect_keys_active(113,4329
#define mi_is_any_intersect_keys_active(115,4423
#define mi_copy_keys_active(118,4618
typedef struct st_mi_isaminfo	124,4829
  ha_rows records;126,4887
  ha_rows deleted;127,4934
  my_off_t recpos;128,4989
  my_off_t newrecpos;129,5041
  my_off_t dupp_key_pos;130,5098
  my_off_t data_file_length,131,5163
           max_data_file_length,132,5219
           index_file_length,133,5252
           max_index_file_length,134,5282
           delete_length;135,5316
  ulong reclength;136,5342
  ulong mean_reclength;137,5382
  ulonglong auto_increment;138,5444
  ulonglong key_map;139,5472
  char  *data_file_name,data_file_name140,5521
  char  *data_file_name, *index_file_name;index_file_name140,5521
  uint  keys;141,5564
  uint	options;142,5609
  int	errkey,143,5652
	sortkey;144,5707
  File	filenr;145,5747
  time_t create_time;146,5798
  time_t check_time;147,5851
  time_t update_time;148,5872
  uint  reflength;149,5894
  ulong record_offset;150,5913
  ulong *rec_per_key;rec_per_key151,5936
} MI_ISAMINFO;152,5985
typedef struct st_mi_create_info155,6002
  const char *index_file_name,index_file_name157,6037
  const char *index_file_name, *data_file_name;data_file_name157,6037
  ha_rows max_rows;158,6109
  ha_rows reloc_rows;159,6129
  ulonglong auto_increment;160,6151
  ulonglong data_file_length;161,6179
  ulonglong key_file_length;162,6209
  uint old_options;163,6238
  uint16 language;164,6258
  my_bool with_auto_increment;165,6277
} MI_CREATE_INFO;166,6308
typedef struct st_myisam_info MI_INFO;170,6397
typedef struct st_mi_keydef	173,6459
  struct st_mi_isam_share *share;share175,6528
  uint16 keysegs;176,6607
  uint16 flag;177,6655
  uint8  key_alg;179,6698
  uint16 block_length;180,6737
  uint16 underflow_block_length;181,6794
  uint16 keylength;182,6859
  uint16 minlength;183,6917
  uint16 maxlength;184,6979
  uint16 block_size_index;185,7041
  uint32 version;186,7093
  uint32 ftkey_nr;187,7145
  HA_KEYSEG *seg,seg189,7215
  HA_KEYSEG *seg,*end;end189,7215
  struct st_mysql_ftparser *parser;parser190,7238
  int (*bin_search)bin_search191,7305
  uint (*get_key)get_key195,7508
  int (*pack_key)pack_key197,7601
  void (*store_key)store_key200,7763
  int (*ck_insert)ck_insert202,7866
  int (*ck_delete)ck_delete203,7946
} MI_KEYDEF;204,8026
#define MI_UNIQUE_HASH_LENGTH	207,8041
typedef struct st_unique_def	209,8074
  uint16 keysegs;211,8141
  uchar key;212,8189
  uint8 null_are_equal;213,8231
  HA_KEYSEG *seg,seg214,8255
  HA_KEYSEG *seg,*end;end214,8255
} MI_UNIQUEDEF;215,8278
typedef struct st_mi_decode_tree	217,8295
  uint16 *table;table219,8354
  uint	 quick_table_bits;220,8371
  uchar	 *intervalls;intervalls221,8397
} MI_DECODE_TREE;222,8419
typedef struct st_columndef	233,8618
  int16  type;235,8674
  uint16 length;236,8711
  uint32 offset;237,8752
  uint8  null_bit;238,8803
  uint16 null_pos;239,8849
  void (*unpack)unpack242,8931
  enum en_fieldtype base_type;244,9031
  uint space_length_bits,245,9062
  uint space_length_bits,pack_type;245,9062
  MI_DECODE_TREE *huff_tree;huff_tree246,9098
} MI_COLUMNDEF;248,9134
#define MEMMAP_EXTRA_MARGIN 308,12171
#define   MYISAMCHK_REPAIR 311,12307
#define   MYISAMCHK_VERIFY 312,12370
#define T_AUTO_INC 324,12785
#define T_AUTO_REPAIR 325,12819
#define T_BACKUP_DATA 326,12889
#define T_CALC_CHECKSUM 327,12923
#define T_CHECK 328,12957
#define T_CHECK_ONLY_CHANGED 329,13027
#define T_CREATE_MISSING_KEYS 330,13097
#define T_DESCRIPT 331,13132
#define T_DONT_CHECK_CHECKSUM 332,13168
#define T_EXTEND 333,13204
#define T_FAST 334,13240
#define T_FORCE_CREATE 335,13310
#define T_FORCE_UNIQUENESS 336,13380
#define T_INFO 337,13423
#define T_MEDIUM 338,13466
#define T_QUICK 339,13509
#define T_READONLY 340,13579
#define T_REP 341,13649
#define T_REP_BY_SORT 342,13692
#define T_REP_PARALLEL 343,13762
#define T_RETRY_WITHOUT_QUICK 344,13832
#define T_SAFE_REPAIR 345,13875
#define T_SILENT 346,13918
#define T_SORT_INDEX 347,13961
#define T_SORT_RECORDS 348,14031
#define T_STATISTICS 349,14101
#define T_UNPACK 350,14144
#define T_UPDATE_STATE 351,14187
#define T_VERBOSE 352,14230
#define T_VERY_SILENT 353,14273
#define T_WAIT_FOREVER 354,14316
#define T_WRITE_LOOP 355,14359
#define T_REP_ANY 357,14411
#define TT_USEFRM 364,14585
#define TT_FOR_UPGRADE 365,14619
#define O_NEW_INDEX	367,14654
#define O_NEW_DATA	368,14704
#define O_DATA_LOST	369,14725
typedef struct st_sort_key_blocks	373,14810
  uchar *buff,buff375,14871
  uchar *buff,*end_pos;end_pos375,14871
  uchar lastkey[lastkey376,14895
  uint last_length;377,14938
  int inited;378,14958
} SORT_KEY_BLOCKS;379,14972
  MI_STATS_METHOD_NULLS_NOT_EQUAL,391,15320
  MI_STATS_METHOD_NULLS_EQUAL,393,15426
  MI_STATS_METHOD_IGNORE_NULLS395,15536
} enum_mi_stats_method;396,15567
typedef struct st_mi_check_param398,15592
  ulonglong auto_increment_value;400,15627
  ulonglong max_data_file_length;401,15661
  ulonglong keys_in_use;402,15695
  ulonglong max_record_length;403,15720
  ulonglong sort_buffer_length;404,15751
  my_off_t search_after_block;405,15783
  my_off_t new_file_pos,406,15814
  my_off_t new_file_pos,key_file_blocks;406,15814
  my_off_t keydata,407,15855
  my_off_t keydata,totaldata,407,15855
  my_off_t keydata,totaldata,key_blocks,407,15855
  my_off_t keydata,totaldata,key_blocks,start_check_pos;407,15855
  ha_rows total_records,408,15912
  ha_rows total_records,total_deleted;408,15912
  ha_checksum record_checksum,409,15951
  ha_checksum record_checksum,glob_crc;409,15951
  ulonglong use_buffers;410,15991
  ulong read_buffer_length,411,16016
  ulong read_buffer_length, write_buffer_length,411,16016
  ulong read_buffer_length, write_buffer_length, sort_key_blocks;411,16016
  uint out_flag,412,16082
  uint out_flag,warning_printed,412,16082
  uint out_flag,warning_printed,error_printed,412,16082
  uint out_flag,warning_printed,error_printed,verbose;412,16082
  uint opt_sort_key,413,16137
  uint opt_sort_key,total_files,413,16137
  uint opt_sort_key,total_files,max_level;413,16137
  uint testflag,414,16180
  uint testflag, key_cache_block_size;414,16180
  uint16 language;415,16219
  my_bool using_global_keycache,416,16238
  my_bool using_global_keycache, opt_lock_memory,416,16238
  my_bool using_global_keycache, opt_lock_memory, opt_follow_links;416,16238
  my_bool retry_repair,417,16306
  my_bool retry_repair, force_sort;417,16306
  char temp_filename[temp_filename418,16342
  char temp_filename[FN_REFLEN],*isam_file_name;isam_file_name418,16342
  MY_TMPDIR *tmpdir;tmpdir419,16391
  int tmpfile_createflag;420,16412
  myf myf_rw;421,16438
  IO_CACHE read_cache;422,16452
  ulonglong unique_count[unique_count428,16580
  ulonglong notnull_count[notnull_count429,16624
  ha_checksum key_crc[key_crc431,16672
  ulong rec_per_key_part[rec_per_key_part432,16716
  void *thd;thd433,16778
  const char *db_name,db_name434,16791
  const char *db_name, *table_name;table_name434,16791
  const char *op_name;op_name435,16827
  enum_mi_stats_method stats_method;436,16850
  mysql_mutex_t print_msg_mutex;437,16887
  my_bool need_print_msg_lock;438,16920
} MI_CHECK;439,16951
typedef struct st_sort_ft_buf441,16964
  uchar *buf,buf443,16996
  uchar *buf, *end;end443,16996
  int   count;444,17016
  uchar lastkey[lastkey445,17031
} SORT_FT_BUF;446,17065
typedef struct st_sort_info448,17081
  my_off_t filelength,450,17111
  my_off_t filelength,dupp,450,17111
  my_off_t filelength,dupp,buff_length;450,17111
  ha_rows max_records;451,17151
  uint current_key,452,17174
  uint current_key, total_keys;452,17174
  myf myf_rw;453,17206
  enum data_file_type new_data_file_type;454,17220
  MI_INFO *info;info455,17262
  MI_CHECK *param;param456,17279
  uchar *buff;buff457,17298
  SORT_KEY_BLOCKS *key_block,key_block458,17313
  SORT_KEY_BLOCKS *key_block,*key_block_end;key_block_end458,17313
  SORT_FT_BUF *ft_buf;ft_buf459,17358
  uint got_error,461,17401
  uint got_error, threads_running;461,17401
  mysql_mutex_t mutex;462,17436
  mysql_cond_t  cond;463,17459
} SORT_INFO;464,17481

include/myisammrg.h,1494
#define _myisammrg_h20,872
#define MYRG_NAME_EXT	34,1047
#define MERGE_INSERT_DISABLED	37,1113
#define MERGE_INSERT_TO_FIRST	38,1145
#define MERGE_INSERT_TO_LAST	39,1177
typedef struct st_mymerge_info	45,1278
  ulonglong records;47,1337
  ulonglong deleted;48,1386
  ulonglong recpos;49,1443
  ulonglong data_file_length;50,1496
  ulonglong dupp_key_pos;51,1526
  uint	reclength;52,1619
  int	errkey;53,1658
  uint	options;54,1713
  ulong *rec_per_key;rec_per_key55,1756
} MYMERGE_INFO;56,1805
typedef struct st_myrg_table_info58,1822
  struct st_myisam_info *table;table60,1858
  ulonglong file_offset;61,1890
} MYRG_TABLE;62,1915
typedef struct st_myrg_info64,1930
  MYRG_TABLE *open_tables,open_tables66,1960
  MYRG_TABLE *open_tables,*current_table,current_table66,1960
  MYRG_TABLE *open_tables,*current_table,*end_table,end_table66,1960
  MYRG_TABLE *open_tables,*current_table,*end_table,*last_used_table;last_used_table66,1960
  ulonglong records;67,2030
  ulonglong del;68,2077
  ulonglong data_file_length;69,2118
  ulong  cache_size;70,2148
  uint	 merge_insert_method;71,2169
  uint	 tables,72,2198
  uint	 tables,options,72,2198
  uint	 tables,options,reclength,72,2198
  uint	 tables,options,reclength,keys;72,2198
  my_bool cache_in_use;73,2237
  my_bool children_attached;75,2342
  LIST	 open_list;76,2371
  QUEUE  by_key;77,2390
  ulong *rec_per_key_part;rec_per_key_part78,2407
  mysql_mutex_t mutex;79,2461
} MYRG_INFO;80,2484

include/myisampack.h,1240
#define MYISAMPACK_INCLUDED2,28
#define mi_sint1korr(28,1017
#define mi_uint1korr(29,1054
#define mi_sint2korr(31,1093
#define mi_sint3korr(33,1238
#define mi_sint4korr(41,1797
#define mi_sint8korr(45,2088
#define mi_uint2korr(46,2141
#define mi_uint3korr(48,2283
#define mi_uint4korr(51,2504
#define mi_uint5korr(55,2802
#define mi_uint6korr(60,3186
#define mi_uint7korr(67,3686
#define mi_uint8korr(75,4264
#define mi_int1store(86,4953
#define mi_int2store(88,5008
#define mi_int3store(91,5213
#define mi_int4store(97,5597
#define mi_int5store(102,5955
#define mi_int6store(109,6447
#define mi_int7store(117,7015
#define mi_int8store(126,7660
#define mi_float4store(133,7958
#define mi_float4get(138,8232
#define mi_float8store(145,8627
#define mi_float8get(154,9173
#define mi_float4store(166,9876
#define mi_float4get(171,10150
#define mi_float8store(179,10617
#define mi_float8get(188,11162
#define mi_float8store(200,11864
#define mi_float8get(209,12409
#define mi_rowstore(225,13250
#define mi_rowkorr(226,13297
#define mi_rowstore(228,13347
#define mi_rowkorr(230,13467
#define mi_sizestore(234,13555
#define mi_sizekorr(235,13602
#define mi_sizestore(237,13652
#define mi_sizekorr(241,13900

include/my_libwrap.h,33
#define MY_LIBWRAP_INCLUDED2,28

include/my_list.h,310
#define _list_h_17,762
typedef struct st_list 23,820
  struct st_list *prev,prev24,845
  struct st_list *prev,*next;next24,845
  void *data;data25,875
} LIST;26,889
typedef int (*list_walk_action)list_walk_action28,898
#define list_rest(38,1313
#define list_push(39,1346
#define list_pop(40,1392

include/my_md5.h,211
#define MY_MD5_INCLUDED2,24
typedef uint32 cvs_uint32;30,1229
  cvs_uint32 buf[buf33,1274
  cvs_uint32 bits[bits34,1295
  unsigned char in[in35,1317
} my_MD5Context;36,1341
#define MY_MD5_HASH(51,1660

include/my_net.h,107
#define _my_net_h23,864
#define O_NONBLOCK 56,1489
#define SHUT_RDWR 63,1651
#define in_addr_t 73,1950

include/my_nosys.h,237
#define _my_nosys_h21,892
#define __MY_NOSYS__27,973
#undef my_read33,1045
#undef my_write34,1060
#undef my_seek35,1076
#define my_read(36,1091
#define my_write(37,1139
#define my_malloc(43,1400
#define my_no_flags_free(44,1435

include/my_pthread.h,12164
#define _my_pthread_h19,827
#define ETIME 24,923
#define EXTERNC 28,996
#define EXTERNC31,1042
typedef CRITICAL_SECTION pthread_mutex_t;35,1106
typedef DWORD		 pthread_t;36,1148
typedef struct thread_attr 37,1175
    DWORD dwStackSize 38,1204
    DWORD dwCreatingFlag 39,1228
} pthread_attr_t 40,1255
typedef struct { int dummy;42,1275
typedef struct { int dummy; } pthread_condattr_t;42,1275
typedef struct st_pthread_link 46,1368
  DWORD thread_id;47,1401
  struct st_pthread_link *next;next48,1420
} pthread_link;49,1452
  CONDITION_VARIABLE native_cond;59,1700
    uint32 waiting;64,1789
    CRITICAL_SECTION lock_waiting;65,1809
      SIGNAL=68,1860
      BROADCAST=69,1877
      MAX_EVENTS=70,1897
    HANDLE events[events72,1931
    HANDLE broadcast_block_event;73,1962
} pthread_cond_t;75,2001
typedef int pthread_mutexattr_t;78,2021
#define pthread_self(79,2054
#define pthread_handler_t 80,2098
typedef void * (__cdecl *pthread_handler)pthread_handler81,2147
typedef volatile LONG my_pthread_once_t;83,2199
#define MY_PTHREAD_ONCE_INIT 84,2240
#define MY_PTHREAD_ONCE_INPROGRESS 85,2272
#define MY_PTHREAD_ONCE_DONE 86,2309
 union ft64 98,2610
  FILETIME ft;99,2624
  __int64 i64;100,2639
struct timespec 102,2658
  union ft64 tv;103,2676
  long max_timeout_msec;105,2765
#define set_timespec(107,2793
#define set_timespec_nsec(112,2982
#define cmp_timespec(127,3334
#define ETIMEDOUT 153,4498
#define HAVE_LOCALTIME_R	155,4562
#define _REENTRANT	156,4590
#define HAVE_PTHREAD_ATTR_SETSTACKSIZE	157,4613
#undef SAFE_MUTEX	160,4656
#define pthread_key(161,4709
#define pthread_key_create(162,4743
#define pthread_key_delete(163,4805
#define my_pthread_setspecific_ptr(164,4846
#define pthread_setspecific(165,4910
#define pthread_getspecific(166,4967
#define my_pthread_getspecific(167,5015
#define my_pthread_getspecific_ptr(168,5072
#define pthread_equal(170,5134
#define pthread_mutex_init(171,5174
#define pthread_mutex_lock(172,5240
#define pthread_mutex_trylock(173,5299
#define pthread_mutex_unlock(174,5363
#define pthread_mutex_destroy(175,5425
#define pthread_kill(176,5488
#define pthread_attr_setdetachstate(180,5583
#define pthread_attr_setscope(181,5641
#define pthread_detach_this_thread(182,5676
#define pthread_condattr_init(183,5713
#define pthread_condattr_destroy(184,5746
#define pthread_yield(185,5782
#define my_sigset(186,5823
#define sigwait 191,5911
#undef sigwait193,5959
#define _REENTRANT197,6021
#define pthread_key(209,6223
#define my_pthread_getspecific_ptr(210,6264
#define my_pthread_setspecific_ptr(211,6334
#define pthread_detach_this_thread(212,6409
#define pthread_handler_t 213,6446
typedef void *(* pthread_handler)214,6487
#define my_pthread_once_t 216,6531
#define MY_PTHREAD_ONCE_INIT 218,6610
#define MY_PTHREAD_ONCE_INIT 220,6670
#define my_pthread_once(222,6724
#define HAVE_rts_threads227,6881
#define pthread_sigmask(229,6945
#define PTHREAD_CREATE_DETACHED 230,7001
#define PTHREAD_SCOPE_SYSTEM 231,7061
#define PTHREAD_SCOPE_PROCESS 232,7112
#define USE_ALARM_THREAD233,7162
#define my_sigwait(241,7394
#define pthread_mutex_init(248,7554
#define pthread_cond_init(252,7734
#define pthread_sigmask(258,7997
#define my_sigset(273,8671
#define my_sigset(282,9305
#define my_sigset(284,9370
#define pthread_attr_setscope(288,9491
#undef	HAVE_GETHOSTBYADDR_R	289,9526
#define pthread_cond_timedwait(296,9784
#define my_pthread_getspecific(300,9918
#define my_pthread_getspecific(302,9989
#define pthread_condattr_init 316,10372
#define pthread_condattr_destroy 317,10426
#define pthread_key_delete(322,10579
#define pthread_cond_destroy(326,10682
#define pthread_mutex_destroy(327,10731
#define pthread_attr_delete(328,10781
#define pthread_condattr_delete(329,10829
#define pthread_attr_setstacksize(330,10881
#define pthread_equal(331,10937
#define pthread_cond_timedwait(332,10977
#define pthread_attr_init(333,11042
#define pthread_attr_destroy(334,11094
#define pthread_attr_setdetachstate(335,11149
#define pthread_create(336,11207
#define pthread_sigmask(337,11272
#define pthread_kill(338,11328
#undef	pthread_detach_this_thread339,11385
#define pthread_detach_this_thread(340,11419
#define pthread_sigmask(344,11549
#define pthread_kill(345,11605
#define pthread_condattr_init(346,11662
#define pthread_condattr_destroy(347,11712
#undef	pthread_detach_this_thread348,11765
#define pthread_detach_this_thread(349,11799
#define pthread_key_create(354,12106
#define pthread_attr_init(358,12249
#define pthread_attr_destroy(359,12301
#define pthread_attr_setdetachstate(360,12356
#define pthread_create(361,12414
#define pthread_sigmask(363,12503
#define pthread_kill(365,12566
#undef	pthread_detach_this_thread366,12623
#define pthread_detach_this_thread(367,12657
#define HAVE_PTHREAD_KILL369,12805
#undef pthread_cond_timedwait375,12932
#define pthread_cond_timedwait(376,12962
#define pthread_attr_getstacksize(382,13179
#undef pthread_mutex_trylock387,13412
#define pthread_mutex_trylock(388,13441
#define pthread_yield(395,13707
#define pthread_yield(397,13804
#define pthread_yield(399,13877
#define set_timespec(410,14131
#define set_timespec_nsec(417,14298
#define set_timespec(426,14569
#define set_timespec_nsec(435,14793
#define cmp_timespec(455,15309
#define cmp_timespec(463,15605
typedef struct st_safe_mutex_t473,15972
  pthread_mutex_t global,475,16005
  pthread_mutex_t global,mutex;475,16005
  const char *file;file476,16037
  uint line,477,16057
  uint line,count;477,16057
  pthread_t thread;478,16076
  struct st_safe_mutex_info_t *info;info480,16129
} safe_mutex_t;482,16210
typedef struct st_safe_mutex_info_t491,16436
  struct st_safe_mutex_info_t *next;next493,16474
  struct st_safe_mutex_info_t *prev;prev494,16511
  const char *init_file;init_file495,16548
  uint32 init_line;496,16573
} safe_mutex_info_t;497,16593
#undef pthread_mutex_init515,17401
#undef pthread_mutex_lock516,17427
#undef pthread_mutex_unlock517,17453
#undef pthread_mutex_destroy518,17481
#undef pthread_mutex_wait519,17510
#undef pthread_mutex_timedwait520,17536
#undef pthread_mutex_t521,17567
#undef pthread_cond_wait522,17590
#undef pthread_cond_timedwait523,17615
#undef pthread_mutex_trylock524,17645
#define pthread_mutex_init(525,17674
#define pthread_mutex_lock(526,17749
#define pthread_mutex_unlock(527,17827
#define pthread_mutex_destroy(528,17900
#define pthread_cond_wait(529,17975
#define pthread_cond_timedwait(530,18048
#define pthread_mutex_trylock(531,18137
#define pthread_mutex_t 532,18217
#define safe_mutex_assert_owner(533,18254
#define safe_mutex_assert_not_owner(536,18402
#define safe_mutex_assert_owner(540,18560
#define safe_mutex_assert_not_owner(541,18596
typedef struct st_my_pthread_fastmutex_t545,18719
  pthread_mutex_t mutex;547,18762
  uint spins;548,18787
  uint rng_state;549,18801
} my_pthread_fastmutex_t;550,18819
#undef pthread_mutex_init557,19063
#undef pthread_mutex_lock558,19089
#undef pthread_mutex_unlock559,19115
#undef pthread_mutex_destroy560,19143
#undef pthread_mutex_wait561,19172
#undef pthread_mutex_timedwait562,19198
#undef pthread_mutex_t563,19229
#undef pthread_cond_wait564,19252
#undef pthread_cond_timedwait565,19277
#undef pthread_mutex_trylock566,19307
#define pthread_mutex_init(567,19336
#define pthread_mutex_lock(568,19403
#define pthread_mutex_unlock(569,19462
#define pthread_mutex_destroy(570,19528
#define pthread_cond_wait(571,19596
#define pthread_cond_timedwait(572,19662
#define pthread_mutex_trylock(573,19744
#define pthread_mutex_t 574,19812
#undef HAVE_PTHREAD_RWLOCK_RDLOCK580,20008
#undef HAVE_RWLOCK_INIT581,20042
#undef HAVE_RWLOCK_T582,20066
#define rw_lock_t 587,20184
#define my_rwlock_init(588,20218
#define rw_rdlock(589,20274
#define rw_wrlock(590,20319
#define rw_tryrdlock(591,20364
#define rw_trywrlock(592,20415
#define rw_unlock(593,20466
#define rwlock_destroy(594,20513
#define rw_lock_t 596,20608
#define my_rwlock_init(597,20643
#define rw_rdlock(598,20700
#define rw_wrlock(599,20746
#define rw_tryrdlock(600,20792
#define rw_trywrlock(601,20846
#define rw_unlock(602,20900
#define rwlock_destroy(603,20946
#define rw_lock_t 606,21086
#define my_rwlock_init(608,21120
#define NEED_MY_RW_LOCK 611,21232
#define rw_lock_t 612,21258
#define my_rwlock_init(613,21289
#define rw_rdlock(614,21333
#define rw_wrlock(615,21372
#define rw_tryrdlock(616,21411
#define rw_trywrlock(617,21456
#define rw_unlock(618,21501
#define rwlock_destroy(619,21540
#define rw_lock_assert_write_owner(620,21585
#define rw_lock_assert_not_write_owner(621,21658
typedef struct st_rw_pr_lock_t 656,23194
  pthread_mutex_t lock;661,23320
  pthread_cond_t no_active_readers;666,23447
  uint active_readers;668,23518
  uint writers_waiting_readers;670,23600
  my_bool active_writer;672,23686
  pthread_t writer_thread;675,23788
} rw_pr_lock_t;677,23822
#define rw_pr_lock_assert_write_owner(685,24061
#define rw_pr_lock_assert_not_write_owner(688,24243
#define rw_pr_lock_assert_write_owner(692,24443
#define rw_pr_lock_assert_not_write_owner(693,24484
    SRWLOCK srwlock;715,24936
    BOOL have_exclusive_srwlock;716,25001
    pthread_mutex_t lock;725,25192
    pthread_cond_t  readers;726,25250
    pthread_cond_t  writers;727,25305
    int state;728,25360
    int waiters;729,25426
    pthread_t  write_thread;731,25508
} my_rw_lock_t;734,25549
typedef struct st_my_rw_lock_t 743,25687
	pthread_mutex_t lock;744,25720
	pthread_cond_t	readers;745,25770
	pthread_cond_t	writers;746,25818
	int		state;747,25866
	int             waiters;748,25914
        pthread_t       write_thread;750,25997
} my_rw_lock_t;752,26042
#define my_rw_lock_assert_write_owner(764,26391
#define my_rw_lock_assert_not_write_owner(767,26568
#define my_rw_lock_assert_write_owner(771,26757
#define my_rw_lock_assert_not_write_owner(772,26798
#define GETHOSTBYADDR_BUFF_SIZE 777,26881
#define thr_setconcurrency(780,26951
#define pthread_attr_setstacksize(783,27090
#define MY_MUTEX_INIT_SLOW 787,27198
#define MY_MUTEX_INIT_FAST 790,27323
#define MY_MUTEX_INIT_FAST 792,27375
#define MY_MUTEX_INIT_ERRCHK 796,27515
#define MY_MUTEX_INIT_ERRCHK 798,27575
#define ESRCH 803,27662
typedef ulong my_thread_id;806,27686
#define THREAD_NAME_SIZE 819,28095
#define DEFAULT_THREAD_STACK	826,28325
#define DEFAULT_THREAD_STACK	828,28372
#define INSTRUMENT_ME 834,28464
struct st_my_thread_var836,28489
  int thr_errno;838,28515
  mysql_cond_t suspend;839,28532
  mysql_mutex_t mutex;840,28556
  mysql_mutex_t * volatile current_mutex;841,28579
  mysql_cond_t * volatile current_cond;842,28621
  pthread_t pthread_self;843,28661
  my_thread_id id;844,28687
  int cmp_length;845,28706
  int volatile abort;846,28724
  my_bool init;847,28746
  struct st_my_thread_var *next,next848,28762
  struct st_my_thread_var *next,**prev;prev848,28762
  void *opt_info;opt_info849,28802
  void  *stack_ends_here;stack_ends_here850,28820
  void *dbug;dbug852,28863
  char name[name853,28877
extern struct st_my_thread_var *_my_thread_var(_my_thread_var857,28921
#define my_thread_var 860,29072
#define my_errno 861,29113
#define THD_LIB_OTHER 869,29310
#define THD_LIB_NPTL 870,29334
#define THD_LIB_LT 871,29358
#define thread_safe_increment(885,29790
#define thread_safe_decrement(886,29860
#define thread_safe_increment(888,29936
#define thread_safe_decrement(890,30037
#define thread_safe_add(897,30191
#define thread_safe_sub(898,30263
#define thread_safe_add(900,30349
#define thread_safe_sub(902,30449
#define statistic_increment(920,30975
#define statistic_decrement(921,31039
#define statistic_add(922,31103
#define statistic_sub(923,31165
#define statistic_decrement(925,31233
#define statistic_increment(926,31272
#define statistic_add(927,31311
#define statistic_sub(928,31353
#define status_var_increment(934,31487
#define status_var_decrement(935,31525
#define status_var_add(936,31563
#define status_var_sub(937,31604

include/my_rdtsc.h,1787
#define MY_RDTSC_H24,871
struct my_timer_unit_info29,928
  ulonglong routine;32,993
  ulonglong overhead;34,1046
  ulonglong frequency;36,1102
  ulonglong resolution;38,1159
struct my_timer_info45,1264
  struct my_timer_unit_info cycles;48,1332
  struct my_timer_unit_info nanoseconds;50,1418
  struct my_timer_unit_info microseconds;52,1510
  struct my_timer_unit_info milliseconds;54,1603
  struct my_timer_unit_info ticks;56,1689
typedef struct my_timer_info MY_TIMER_INFO;59,1728
#define MY_TIMER_ROUTINE_ASM_X86 101,2497
#define MY_TIMER_ROUTINE_ASM_X86_64 102,2549
#define MY_TIMER_ROUTINE_RDTSCLL 103,2601
#define MY_TIMER_ROUTINE_ASM_X86_WIN 104,2653
#define MY_TIMER_ROUTINE_RDTSC 105,2705
#define MY_TIMER_ROUTINE_ASM_IA64 106,2757
#define MY_TIMER_ROUTINE_ASM_PPC 107,2809
#define MY_TIMER_ROUTINE_SGI_CYCLE 108,2861
#define MY_TIMER_ROUTINE_GETHRTIME 109,2913
#define MY_TIMER_ROUTINE_READ_REAL_TIME 110,2965
#define MY_TIMER_ROUTINE_CLOCK_GETTIME 111,3017
#define MY_TIMER_ROUTINE_NXGETTIME 112,3069
#define MY_TIMER_ROUTINE_GETTIMEOFDAY 113,3121
#define MY_TIMER_ROUTINE_QUERYPERFORMANCECOUNTER 114,3173
#define MY_TIMER_ROUTINE_GETTICKCOUNT 115,3225
#define MY_TIMER_ROUTINE_TIME 116,3277
#define MY_TIMER_ROUTINE_TIMES 117,3329
#define MY_TIMER_ROUTINE_FTIME 118,3381
#define MY_TIMER_ROUTINE_ASM_PPC64 119,3433
#define MY_TIMER_ROUTINE_ASM_SUNPRO_SPARC64 120,3485
#define MY_TIMER_ROUTINE_ASM_SUNPRO_SPARC32 121,3537
#define MY_TIMER_ROUTINE_ASM_SUNPRO_I386 122,3589
#define MY_TIMER_ROUTINE_ASM_GCC_SPARC64 123,3641
#define MY_TIMER_ROUTINE_ASM_GCC_SPARC32 124,3693
#define MY_TIMER_ROUTINE_MACH_ABSOLUTE_TIME 125,3745
#define MY_TIMER_ROUTINE_GETSYSTEMTIMEASFILETIME 126,3797
#define MY_TIMER_ROUTINE_ASM_SUNPRO_X86_64 127,3849

include/mysql_com.h,12384
#define _mysql_com_h21,824
#define HOSTNAME_LENGTH 23,846
#define SYSTEM_CHARSET_MBMAXLEN 24,873
#define NAME_CHAR_LEN	25,907
#define USERNAME_CHAR_LENGTH 26,975
#define NAME_LEN 27,1007
#define USERNAME_LENGTH 28,1079
#define MYSQL_AUTODETECT_CHARSET_NAME 30,1159
#define SERVER_VERSION_LENGTH 32,1205
#define SQLSTATE_LENGTH 33,1238
#define TABLE_COMMENT_INLINE_MAXLEN 38,1300
#define TABLE_COMMENT_MAXLEN 39,1369
#define COLUMN_COMMENT_MAXLEN 40,1403
#define INDEX_COMMENT_MAXLEN 41,1438
#define USER_HOST_BUFF_SIZE 49,1689
#define LOCAL_HOST	51,1756
#define LOCAL_HOST_NAMEDPIPE 52,1787
#define MYSQL_NAMEDPIPE 56,1872
#define MYSQL_SERVICENAME 57,1904
enum enum_server_command65,2093
  COM_SLEEP,67,2120
  COM_SLEEP, COM_QUIT,67,2120
  COM_SLEEP, COM_QUIT, COM_INIT_DB,67,2120
  COM_SLEEP, COM_QUIT, COM_INIT_DB, COM_QUERY,67,2120
  COM_SLEEP, COM_QUIT, COM_INIT_DB, COM_QUERY, COM_FIELD_LIST,67,2120
  COM_CREATE_DB,68,2183
  COM_CREATE_DB, COM_DROP_DB,68,2183
  COM_CREATE_DB, COM_DROP_DB, COM_REFRESH,68,2183
  COM_CREATE_DB, COM_DROP_DB, COM_REFRESH, COM_SHUTDOWN,68,2183
  COM_CREATE_DB, COM_DROP_DB, COM_REFRESH, COM_SHUTDOWN, COM_STATISTICS,68,2183
  COM_PROCESS_INFO,69,2256
  COM_PROCESS_INFO, COM_CONNECT,69,2256
  COM_PROCESS_INFO, COM_CONNECT, COM_PROCESS_KILL,69,2256
  COM_PROCESS_INFO, COM_CONNECT, COM_PROCESS_KILL, COM_DEBUG,69,2256
  COM_PROCESS_INFO, COM_CONNECT, COM_PROCESS_KILL, COM_DEBUG, COM_PING,69,2256
  COM_TIME,70,2328
  COM_TIME, COM_DELAYED_INSERT,70,2328
  COM_TIME, COM_DELAYED_INSERT, COM_CHANGE_USER,70,2328
  COM_TIME, COM_DELAYED_INSERT, COM_CHANGE_USER, COM_BINLOG_DUMP,70,2328
  COM_TABLE_DUMP,71,2394
  COM_TABLE_DUMP, COM_CONNECT_OUT,71,2394
  COM_TABLE_DUMP, COM_CONNECT_OUT, COM_REGISTER_SLAVE,71,2394
  COM_STMT_PREPARE,72,2449
  COM_STMT_PREPARE, COM_STMT_EXECUTE,72,2449
  COM_STMT_PREPARE, COM_STMT_EXECUTE, COM_STMT_SEND_LONG_DATA,72,2449
  COM_STMT_PREPARE, COM_STMT_EXECUTE, COM_STMT_SEND_LONG_DATA, COM_STMT_CLOSE,72,2449
  COM_STMT_RESET,73,2528
  COM_STMT_RESET, COM_SET_OPTION,73,2528
  COM_STMT_RESET, COM_SET_OPTION, COM_STMT_FETCH,73,2528
  COM_STMT_RESET, COM_SET_OPTION, COM_STMT_FETCH, COM_DAEMON,73,2528
  COM_END77,2686
#define SCRAMBLE_LENGTH 85,2829
#define SCRAMBLE_LENGTH_323 86,2856
#define SCRAMBLED_PASSWORD_CHAR_LENGTH 88,2966
#define SCRAMBLED_PASSWORD_CHAR_LENGTH_323 89,3027
#define NOT_NULL_FLAG	92,3096
#define PRI_KEY_FLAG	93,3147
#define UNIQUE_KEY_FLAG 94,3208
#define MULTIPLE_KEY_FLAG 95,3271
#define BLOB_FLAG	96,3329
#define UNSIGNED_FLAG	97,3373
#define ZEROFILL_FLAG	98,3423
#define BINARY_FLAG	99,3473
#define ENUM_FLAG	102,3572
#define AUTO_INCREMENT_FLAG 103,3618
#define TIMESTAMP_FLAG	104,3688
#define SET_FLAG	105,3744
#define NO_DEFAULT_VALUE_FLAG 106,3788
#define ON_UPDATE_NOW_FLAG 107,3862
#define NUM_FLAG	108,3938
#define PART_KEY_FLAG	109,3995
#define GROUP_FLAG	110,4055
#define UNIQUE_FLAG	111,4107
#define BINCMP_FLAG	112,4165
#define GET_FIXED_FIELDS_FLAG 113,4224
#define FIELD_IN_PART_FUNC_FLAG 114,4302
#define FIELD_IN_ADD_INDEX 115,4378
#define FIELD_IS_RENAMED 116,4452
#define FIELD_FLAGS_STORAGE_MEDIA 117,4529
#define FIELD_FLAGS_COLUMN_FORMAT 119,4676
#define FIELD_IS_DROPPED 121,4823
#define REFRESH_GRANT	123,4901
#define REFRESH_LOG	124,4953
#define REFRESH_TABLES	125,5004
#define REFRESH_HOSTS	126,5053
#define REFRESH_STATUS	127,5101
#define REFRESH_THREADS	128,5157
#define REFRESH_SLAVE 129,5210
#define REFRESH_MASTER 131,5307
#define REFRESH_ERROR_LOG 133,5417
#define REFRESH_ENGINE_LOG 134,5485
#define REFRESH_BINARY_LOG 135,5557
#define REFRESH_RELAY_LOG 136,5620
#define REFRESH_GENERAL_LOG 137,5682
#define REFRESH_SLOW_LOG 138,5746
#define REFRESH_READ_LOCK	141,5868
#define REFRESH_FAST	142,5927
#define REFRESH_QUERY_CACHE	145,6024
#define REFRESH_QUERY_CACHE_FREE 146,6058
#define REFRESH_DES_KEY_FILE	147,6123
#define REFRESH_USER_RESOURCES	148,6161
#define CLIENT_LONG_PASSWORD	150,6202
#define CLIENT_FOUND_ROWS	151,6265
#define CLIENT_LONG_FLAG	152,6330
#define CLIENT_CONNECT_WITH_DB	153,6384
#define CLIENT_NO_SCHEMA	154,6453
#define CLIENT_COMPRESS	155,6521
#define CLIENT_ODBC	156,6584
#define CLIENT_LOCAL_FILES	157,6626
#define CLIENT_IGNORE_SPACE	158,6687
#define CLIENT_PROTOCOL_41	159,6750
#define CLIENT_INTERACTIVE	160,6804
#define CLIENT_SSL 161,6872
#define CLIENT_IGNORE_SIGPIPE 162,6945
#define CLIENT_TRANSACTIONS	163,7007
#define CLIENT_RESERVED 164,7078
#define CLIENT_SECURE_CONNECTION 165,7151
#define CLIENT_MULTI_STATEMENTS 166,7220
#define CLIENT_MULTI_RESULTS 167,7304
#define CLIENT_PS_MULTI_RESULTS 168,7383
#define CLIENT_PLUGIN_AUTH 170,7463
#define CLIENT_SSL_VERIFY_SERVER_CERT 172,7548
#define CLIENT_REMEMBER_OPTIONS 173,7598
#define CAN_CLIENT_COMPRESS 176,7664
#define CAN_CLIENT_COMPRESS 178,7714
#define CLIENT_ALL_FLAGS 182,7822
#define CLIENT_BASIC_FLAGS 210,9159
#define SERVER_STATUS_IN_TRANS 221,9586
#define SERVER_STATUS_AUTOCOMMIT 222,9623
#define SERVER_MORE_RESULTS_EXISTS 223,9693
#define SERVER_QUERY_NO_GOOD_INDEX_USED 224,9771
#define SERVER_QUERY_NO_INDEX_USED 225,9814
#define SERVER_STATUS_CURSOR_EXISTS 231,10053
#define SERVER_STATUS_LAST_ROW_SENT 236,10195
#define SERVER_STATUS_DB_DROPPED 237,10235
#define SERVER_STATUS_NO_BACKSLASH_ESCAPES 238,10308
#define SERVER_STATUS_METADATA_CHANGED 244,10515
#define SERVER_QUERY_WAS_SLOW 245,10559
#define SERVER_PS_OUT_PARAMS 250,10667
#define SERVER_STATUS_CLEAR_SET 260,11015
#define MYSQL_ERRMSG_SIZE	269,11519
#define NET_READ_TIMEOUT	270,11549
#define NET_WRITE_TIMEOUT	271,11600
#define NET_WAIT_TIMEOUT	272,11653
#define ONLY_KILL_QUERY 274,11713
typedef struct st_vio Vio;278,11781
#define MAX_TINYINT_WIDTH 280,11809
#define MAX_SMALLINT_WIDTH 281,11886
#define MAX_MEDIUMINT_WIDTH 282,11964
#define MAX_INT_WIDTH 283,12042
#define MAX_BIGINT_WIDTH 284,12119
#define MAX_CHAR_WIDTH	285,12190
#define MAX_BLOB_WIDTH	286,12252
typedef struct st_net 288,12315
  Vio *vio;vio290,12410
  unsigned char *buff,buff291,12422
  unsigned char *buff,*buff_end,buff_end291,12422
  unsigned char *buff,*buff_end,*write_pos,write_pos291,12422
  unsigned char *buff,*buff_end,*write_pos,*read_pos;read_pos291,12422
  my_socket fd;292,12476
  unsigned long remain_in_buf,298,12720
  unsigned long remain_in_buf,length,298,12720
  unsigned long remain_in_buf,length, buf_length,298,12720
  unsigned long remain_in_buf,length, buf_length, where_b;298,12720
  unsigned long max_packet,299,12779
  unsigned long max_packet,max_packet_size;299,12779
  unsigned int pkt_nr,300,12823
  unsigned int pkt_nr,compress_pkt_nr;300,12823
  unsigned int write_timeout,301,12862
  unsigned int write_timeout, read_timeout,301,12862
  unsigned int write_timeout, read_timeout, retry_count;301,12862
  int fcntl;302,12919
  unsigned int *return_status;return_status303,12932
  unsigned char reading_or_writing;304,12963
  char save_char;305,12999
  my_bool unused1;306,13017
  my_bool unused2;307,13095
  my_bool compress;308,13172
  my_bool unused3;309,13192
  unsigned char *unused;unused318,13490
  unsigned int last_errno;319,13515
  unsigned char error;320,13542
  my_bool unused4;321,13566
  my_bool unused5;322,13644
  char last_error[last_error324,13802
  char sqlstate[sqlstate326,13915
  void *extension;extension327,13951
  my_bool skip_big_packet;336,14256
} NET;338,14290
#define packet_error 341,14299
enum enum_field_types 343,14342
enum enum_field_types { MYSQL_TYPE_DECIMAL,343,14342
enum enum_field_types { MYSQL_TYPE_DECIMAL, MYSQL_TYPE_TINY,343,14342
			MYSQL_TYPE_SHORT,344,14403
			MYSQL_TYPE_SHORT,  MYSQL_TYPE_LONG,344,14403
			MYSQL_TYPE_FLOAT,345,14442
			MYSQL_TYPE_FLOAT,  MYSQL_TYPE_DOUBLE,345,14442
			MYSQL_TYPE_NULL,346,14483
			MYSQL_TYPE_NULL,   MYSQL_TYPE_TIMESTAMP,346,14483
			MYSQL_TYPE_LONGLONG,347,14527
			MYSQL_TYPE_LONGLONG,MYSQL_TYPE_INT24,347,14527
			MYSQL_TYPE_DATE,348,14568
			MYSQL_TYPE_DATE,   MYSQL_TYPE_TIME,348,14568
			MYSQL_TYPE_DATETIME,349,14607
			MYSQL_TYPE_DATETIME, MYSQL_TYPE_YEAR,349,14607
			MYSQL_TYPE_NEWDATE,350,14648
			MYSQL_TYPE_NEWDATE, MYSQL_TYPE_VARCHAR,350,14648
			MYSQL_TYPE_BIT,351,14691
                        MYSQL_TYPE_NEWDECIMAL=352,14710
			MYSQL_TYPE_ENUM=353,14761
			MYSQL_TYPE_SET=354,14785
			MYSQL_TYPE_TINY_BLOB=355,14808
			MYSQL_TYPE_MEDIUM_BLOB=356,14837
			MYSQL_TYPE_LONG_BLOB=357,14868
			MYSQL_TYPE_BLOB=358,14897
			MYSQL_TYPE_VAR_STRING=359,14921
			MYSQL_TYPE_STRING=360,14951
			MYSQL_TYPE_GEOMETRY=361,14977
#define CLIENT_MULTI_QUERIES 366,15042
#define FIELD_TYPE_DECIMAL 367,15102
#define FIELD_TYPE_NEWDECIMAL 368,15152
#define FIELD_TYPE_TINY 369,15205
#define FIELD_TYPE_SHORT 370,15252
#define FIELD_TYPE_LONG 371,15300
#define FIELD_TYPE_FLOAT 372,15347
#define FIELD_TYPE_DOUBLE 373,15395
#define FIELD_TYPE_NULL 374,15444
#define FIELD_TYPE_TIMESTAMP 375,15491
#define FIELD_TYPE_LONGLONG 376,15543
#define FIELD_TYPE_INT24 377,15594
#define FIELD_TYPE_DATE 378,15642
#define FIELD_TYPE_TIME 379,15689
#define FIELD_TYPE_DATETIME 380,15736
#define FIELD_TYPE_YEAR 381,15787
#define FIELD_TYPE_NEWDATE 382,15834
#define FIELD_TYPE_ENUM 383,15884
#define FIELD_TYPE_SET 384,15931
#define FIELD_TYPE_TINY_BLOB 385,15977
#define FIELD_TYPE_MEDIUM_BLOB 386,16029
#define FIELD_TYPE_LONG_BLOB 387,16083
#define FIELD_TYPE_BLOB 388,16135
#define FIELD_TYPE_VAR_STRING 389,16182
#define FIELD_TYPE_STRING 390,16235
#define FIELD_TYPE_CHAR 391,16284
#define FIELD_TYPE_INTERVAL 392,16331
#define FIELD_TYPE_GEOMETRY 393,16378
#define FIELD_TYPE_BIT 394,16429
#define MYSQL_SHUTDOWN_KILLABLE_CONNECT 400,16549
#define MYSQL_SHUTDOWN_KILLABLE_TRANS 401,16616
#define MYSQL_SHUTDOWN_KILLABLE_LOCK_TABLE 402,16683
#define MYSQL_SHUTDOWN_KILLABLE_UPDATE 403,16750
enum mysql_enum_shutdown_level 405,16818
  SHUTDOWN_DEFAULT 411,17030
  SHUTDOWN_WAIT_CONNECTIONS=413,17102
  SHUTDOWN_WAIT_CONNECTIONS= MYSQL_SHUTDOWN_KILLABLE_CONNECT,413,17102
  SHUTDOWN_WAIT_TRANSACTIONS=415,17206
  SHUTDOWN_WAIT_TRANSACTIONS= MYSQL_SHUTDOWN_KILLABLE_TRANS,415,17206
  SHUTDOWN_WAIT_UPDATES=417,17341
  SHUTDOWN_WAIT_UPDATES= MYSQL_SHUTDOWN_KILLABLE_UPDATE,417,17341
  SHUTDOWN_WAIT_ALL_BUFFERS=419,17461
  SHUTDOWN_WAIT_ALL_BUFFERS= (MYSQL_SHUTDOWN_KILLABLE_UPDATE 419,17461
  SHUTDOWN_WAIT_CRITICAL_BUFFERS=421,17601
  SHUTDOWN_WAIT_CRITICAL_BUFFERS= (MYSQL_SHUTDOWN_KILLABLE_UPDATE 421,17601
  KILL_QUERY=424,17753
  KILL_CONNECTION=426,17779
enum enum_cursor_type430,17807
  CURSOR_TYPE_NO_CURSOR=432,17831
  CURSOR_TYPE_READ_ONLY=433,17859
  CURSOR_TYPE_FOR_UPDATE=434,17887
  CURSOR_TYPE_SCROLLABLE=435,17916
enum enum_mysql_set_option440,17984
  MYSQL_OPTION_MULTI_STATEMENTS_ON,442,18013
  MYSQL_OPTION_MULTI_STATEMENTS_OFF443,18049
#define net_new_transaction(446,18089
struct rand_struct 474,19003
  unsigned long seed1,475,19024
  unsigned long seed1,seed2,475,19024
  unsigned long seed1,seed2,max_value;475,19024
  double max_value_dbl;476,19063
enum Item_result 485,19173
enum Item_result {STRING_RESULT=STRING_RESULT485,19173
enum Item_result {STRING_RESULT=0, REAL_RESULT,485,19173
enum Item_result {STRING_RESULT=0, REAL_RESULT, INT_RESULT,485,19173
enum Item_result {STRING_RESULT=0, REAL_RESULT, INT_RESULT, ROW_RESULT,485,19173
                  DECIMAL_RESULT}DECIMAL_RESULT486,19245
typedef struct st_udf_args488,19281
  unsigned int arg_count;490,19310
  enum Item_result *arg_type;arg_type491,19363
  char **args;args492,19424
  unsigned long *lengths;lengths493,19468
  char *maybe_null;maybe_null494,19528
  char **attributes;attributes495,19589
  unsigned long *attribute_lengths;attribute_lengths496,19661
  void *extension;extension497,19737
} UDF_ARGS;498,19756
typedef struct st_udf_init502,19818
  my_bool maybe_null;504,19847
  unsigned int decimals;505,19914
  unsigned long max_length;506,19970
  char *ptr;ptr507,20028
  my_bool const_item;508,20096
  void *extension;extension509,20177
} UDF_INIT;510,20196
#define NET_HEADER_SIZE 517,20350
#define COMP_HEADER_SIZE 518,20404
#define NULL_LENGTH 572,22286
#define MYSQL_STMT_HEADER 573,22354
#define MYSQL_LONG_DATA_HEADER 574,22388
#define NOT_FIXED_DEC 576,22423

include/mysql_embed.h,88
#define MYSQL_EMBED_INCLUDED2,29
#undef HAVE_DLOPEN	26,1032
#undef HAVE_SMEM	27,1077

include/mysql.h,12038
#define _mysql_h27,1133
#undef WIN34,1310
#undef _WIN35,1321
#undef _WIN3236,1333
#undef _WIN6437,1347
#undef __WIN__38,1361
typedef char my_bool;52,1593
#define __WIN__54,1677
#define STDCALL57,1722
#define STDCALL 59,1744
#define my_socket 64,1819
typedef int my_socket;66,1850
#define CLIENT_NET_READ_TIMEOUT	80,2158
#define CLIENT_NET_WRITE_TIMEOUT	81,2225
#define IS_PRI_KEY(83,2294
#define IS_NOT_NULL(84,2337
#define IS_BLOB(85,2382
#define IS_NUM(90,2543
#define IS_LONGDATA(91,2678
typedef struct st_mysql_field 94,2761
  char *name;name95,2793
  char *org_name;org_name96,2844
  char *table;table97,2914
  char *org_table;org_table98,2988
  char *db;db99,3062
  char *catalog;catalog100,3117
  char *def;def101,3164
  unsigned long length;102,3241
  unsigned long max_length;103,3309
  unsigned int name_length;104,3372
  unsigned int org_name_length;105,3400
  unsigned int table_length;106,3432
  unsigned int org_table_length;107,3461
  unsigned int db_length;108,3494
  unsigned int catalog_length;109,3520
  unsigned int def_length;110,3551
  unsigned int flags;111,3578
  unsigned int decimals;112,3624
  unsigned int charsetnr;113,3688
  enum enum_field_types type;114,3738
  void *extension;extension115,3815
} MYSQL_FIELD;116,3834
typedef char **MYSQL_ROW;MYSQL_ROW118,3850
typedef unsigned int MYSQL_FIELD_OFFSET;119,3915
typedef unsigned long my_ulonglong;123,4038
typedef unsigned __int64 my_ulonglong;125,4098
typedef unsigned long long my_ulonglong;127,4143
#define MYSQL_COUNT_ERROR 133,4221
#define ER_WARN_DATA_TRUNCATED 136,4331
typedef struct st_mysql_rows 138,4383
  struct st_mysql_rows *next;next139,4414
  MYSQL_ROW data;140,4464
  unsigned long length;141,4482
} MYSQL_ROWS;142,4506
typedef MYSQL_ROWS *MYSQL_ROW_OFFSET;MYSQL_ROW_OFFSET144,4521
typedef struct embedded_query_result EMBEDDED_QUERY_RESULT;148,4611
typedef struct st_mysql_data 149,4671
  MYSQL_ROWS *data;data150,4702
  struct embedded_query_result *embedded_info;embedded_info151,4722
  MEM_ROOT alloc;152,4769
  my_ulonglong rows;153,4787
  unsigned int fields;154,4808
  void *extension;extension156,4871
} MYSQL_DATA;157,4890
enum mysql_option 159,4905
  MYSQL_OPT_CONNECT_TIMEOUT,161,4926
  MYSQL_OPT_CONNECT_TIMEOUT, MYSQL_OPT_COMPRESS,161,4926
  MYSQL_OPT_CONNECT_TIMEOUT, MYSQL_OPT_COMPRESS, MYSQL_OPT_NAMED_PIPE,161,4926
  MYSQL_INIT_COMMAND,162,4997
  MYSQL_INIT_COMMAND, MYSQL_READ_DEFAULT_FILE,162,4997
  MYSQL_INIT_COMMAND, MYSQL_READ_DEFAULT_FILE, MYSQL_READ_DEFAULT_GROUP,162,4997
  MYSQL_SET_CHARSET_DIR,163,5070
  MYSQL_SET_CHARSET_DIR, MYSQL_SET_CHARSET_NAME,163,5070
  MYSQL_SET_CHARSET_DIR, MYSQL_SET_CHARSET_NAME, MYSQL_OPT_LOCAL_INFILE,163,5070
  MYSQL_OPT_PROTOCOL,164,5143
  MYSQL_OPT_PROTOCOL, MYSQL_SHARED_MEMORY_BASE_NAME,164,5143
  MYSQL_OPT_PROTOCOL, MYSQL_SHARED_MEMORY_BASE_NAME, MYSQL_OPT_READ_TIMEOUT,164,5143
  MYSQL_OPT_WRITE_TIMEOUT,165,5220
  MYSQL_OPT_WRITE_TIMEOUT, MYSQL_OPT_USE_RESULT,165,5220
  MYSQL_OPT_USE_REMOTE_CONNECTION,166,5269
  MYSQL_OPT_USE_REMOTE_CONNECTION, MYSQL_OPT_USE_EMBEDDED_CONNECTION,166,5269
  MYSQL_OPT_GUESS_CONNECTION,167,5339
  MYSQL_OPT_GUESS_CONNECTION, MYSQL_SET_CLIENT_IP,167,5339
  MYSQL_OPT_GUESS_CONNECTION, MYSQL_SET_CLIENT_IP, MYSQL_SECURE_AUTH,167,5339
  MYSQL_REPORT_DATA_TRUNCATION,168,5409
  MYSQL_REPORT_DATA_TRUNCATION, MYSQL_OPT_RECONNECT,168,5409
  MYSQL_OPT_SSL_VERIFY_SERVER_CERT,169,5462
  MYSQL_OPT_SSL_VERIFY_SERVER_CERT, MYSQL_PLUGIN_DIR,169,5462
  MYSQL_OPT_SSL_VERIFY_SERVER_CERT, MYSQL_PLUGIN_DIR, MYSQL_DEFAULT_AUTH,169,5462
  MYSQL_ENABLE_CLEARTEXT_PLUGIN170,5536
struct st_mysql_options 179,5698
  unsigned int connect_timeout,180,5724
  unsigned int connect_timeout, read_timeout,180,5724
  unsigned int connect_timeout, read_timeout, write_timeout;180,5724
  unsigned int port,181,5785
  unsigned int port, protocol;181,5785
  unsigned long client_flag;182,5816
  char *host,host183,5845
  char *host,*user,user183,5845
  char *host,*user,*password,password183,5845
  char *host,*user,*password,*unix_socket,unix_socket183,5845
  char *host,*user,*password,*unix_socket,*db;db183,5845
  struct st_dynamic_array *init_commands;init_commands184,5892
  char *my_cnf_file,my_cnf_file185,5934
  char *my_cnf_file,*my_cnf_group,my_cnf_group185,5934
  char *my_cnf_file,*my_cnf_group, *charset_dir,charset_dir185,5934
  char *my_cnf_file,*my_cnf_group, *charset_dir, *charset_name;charset_name185,5934
  char *ssl_key;ssl_key186,5998
  char *ssl_cert;ssl_cert187,6037
  char *ssl_ca;ssl_ca188,6078
  char *ssl_capath;ssl_capath189,6116
  char *ssl_cipher;ssl_cipher190,6168
  char *shared_memory_base_name;shared_memory_base_name191,6211
  unsigned long max_allowed_packet;192,6244
  my_bool use_ssl;193,6280
  my_bool compress,194,6329
  my_bool compress,named_pipe;194,6329
  my_bool unused1;195,6360
  my_bool unused2;196,6379
  my_bool unused3;197,6398
  my_bool unused4;198,6417
  enum mysql_option methods_to_use;199,6436
  char *client_ip;client_ip200,6472
  my_bool secure_auth;202,6570
  my_bool report_data_truncation;204,6647
  int (*local_infile_init)local_infile_init207,6733
  int (*local_infile_read)local_infile_read208,6792
  void (*local_infile_end)local_infile_end209,6850
  int (*local_infile_error)local_infile_error210,6886
  void *local_infile_userdata;local_infile_userdata211,6945
  struct st_mysql_options_extention *extension;extension212,6976
enum mysql_status 215,7028
  MYSQL_STATUS_READY,217,7049
  MYSQL_STATUS_READY, MYSQL_STATUS_GET_RESULT,217,7049
  MYSQL_STATUS_READY, MYSQL_STATUS_GET_RESULT, MYSQL_STATUS_USE_RESULT,217,7049
  MYSQL_STATUS_STATEMENT_GET_RESULT218,7121
enum mysql_protocol_type 221,7161
  MYSQL_PROTOCOL_DEFAULT,223,7189
  MYSQL_PROTOCOL_DEFAULT, MYSQL_PROTOCOL_TCP,223,7189
  MYSQL_PROTOCOL_DEFAULT, MYSQL_PROTOCOL_TCP, MYSQL_PROTOCOL_SOCKET,223,7189
  MYSQL_PROTOCOL_PIPE,224,7258
  MYSQL_PROTOCOL_PIPE, MYSQL_PROTOCOL_MEMORY224,7258
typedef struct character_set227,7307
  unsigned int      number;229,7338
  unsigned int      state;230,7410
  const char        *csname;csname231,7482
  const char        *name;name232,7554
  const char        *comment;comment233,7626
  const char        *dir;dir234,7698
  unsigned int      mbminlen;235,7770
  unsigned int      mbmaxlen;236,7842
} MY_CHARSET_INFO;237,7914
typedef struct st_mysql242,7982
  NET		net;244,8008
  unsigned char	*connector_fd;connector_fd245,8053
  char		*host,host246,8111
  char		*host,*user,user246,8111
  char		*host,*user,*passwd,passwd246,8111
  char		*host,*user,*passwd,*unix_socket,unix_socket246,8111
  char		*host,*user,*passwd,*unix_socket,*server_version,server_version246,8111
  char		*host,*user,*passwd,*unix_socket,*server_version,*host_info;host_info246,8111
  char          *info,info247,8180
  char          *info, *db;db247,8180
  struct charset_info_st *charset;charset248,8208
  MYSQL_FIELD	*fields;fields249,8243
  MEM_ROOT	field_alloc;250,8266
  my_ulonglong affected_rows;251,8290
  my_ulonglong insert_id;252,8320
  my_ulonglong extra_info;253,8387
  unsigned long thread_id;254,8430
  unsigned long packet_length;255,8492
  unsigned int	port;256,8523
  unsigned long client_flag,257,8544
  unsigned long client_flag,server_capabilities;257,8544
  unsigned int	protocol_version;258,8593
  unsigned int	field_count;259,8626
  unsigned int 	server_status;260,8654
  unsigned int  server_language;261,8685
  unsigned int	warning_count;262,8718
  struct st_mysql_options options;263,8748
  enum mysql_status status;264,8783
  my_bool	free_me;265,8811
  my_bool	reconnect;266,8860
  char	        scramble[scramble269,8956
  my_bool unused1;270,9000
  void *unused2,unused2271,9019
  void *unused2, *unused3,unused3271,9019
  void *unused2, *unused3, *unused4,unused4271,9019
  void *unused2, *unused3, *unused4, *unused5;unused5271,9019
  LIST  *stmts;stmts273,9067
  const struct st_mysql_methods *methods;methods274,9132
  void *thd;thd275,9174
  my_bool *unbuffered_fetch_owner;unbuffered_fetch_owner280,9347
  char *info_buffer;info_buffer282,9453
  void *extension;extension283,9474
} MYSQL;284,9493
typedef struct st_mysql_res 287,9504
  my_ulonglong  row_count;288,9534
  MYSQL_FIELD	*fields;fields289,9561
  MYSQL_DATA	*data;data290,9584
  MYSQL_ROWS	*data_cursor;data_cursor291,9604
  unsigned long *lengths;lengths292,9631
  MYSQL		*handle;handle293,9694
  const struct st_mysql_methods *methods;methods294,9740
  MYSQL_ROW	row;295,9782
  MYSQL_ROW	current_row;296,9826
  MEM_ROOT	field_alloc;297,9880
  unsigned int	field_count,298,9904
  unsigned int	field_count, current_field;298,9904
  my_bool	eof;299,9947
  my_bool       unbuffered_fetch_cancelled;301,10047
  void *extension;extension302,10093
} MYSQL_RES;303,10112
#define MYSQL_CLIENT307,10180
typedef struct st_mysql_parameters311,10210
  unsigned long *p_max_allowed_packet;p_max_allowed_packet313,10247
  unsigned long *p_net_buffer_length;p_net_buffer_length314,10286
  void *extension;extension315,10324
} MYSQL_PARAMETERS;316,10343
#define max_allowed_packet 319,10421
#define net_buffer_length 320,10496
#define mysql_library_init 340,11387
#define mysql_library_end 341,11432
#define LOCAL_INFILE_ERROR_LEN 408,14166
enum enum_mysql_stmt_state479,17221
  MYSQL_STMT_INIT_DONE=481,17250
  MYSQL_STMT_INIT_DONE= 1, MYSQL_STMT_PREPARE_DONE,481,17250
  MYSQL_STMT_INIT_DONE= 1, MYSQL_STMT_PREPARE_DONE, MYSQL_STMT_EXECUTE_DONE,481,17250
  MYSQL_STMT_FETCH_DONE482,17327
typedef struct st_mysql_bind549,20677
  unsigned long	*length;length551,20708
  my_bool       *is_null;is_null552,20770
  void		*buffer;buffer553,20830
  my_bool       *error;error555,20955
  unsigned char *row_ptr;row_ptr556,20979
  void (*store_param_func)store_param_func557,21049
  void (*fetch_result)fetch_result558,21116
  void (*skip_result)skip_result560,21223
  unsigned long buffer_length;563,21381
  unsigned long offset;564,21412
  unsigned long	length_value;565,21490
  unsigned int	param_number;566,21550
  unsigned int  pack_length;567,21621
  enum enum_field_types buffer_type;568,21690
  my_bool       error_value;569,21745
  my_bool       is_unsigned;570,21804
  my_bool	long_data_used;571,21876
  my_bool	is_null_value;572,21944
  void *extension;extension573,21999
} MYSQL_BIND;574,22018
typedef struct st_mysql_stmt580,22091
  MEM_ROOT       mem_root;582,22122
  LIST           list;583,22184
  MYSQL          *mysql;mysql584,22261
  MYSQL_BIND     *params;params585,22324
  MYSQL_BIND     *bind;bind586,22386
  MYSQL_FIELD    *fields;fields587,22449
  MYSQL_DATA     result;588,22514
  MYSQL_ROWS     *data_cursor;data_cursor589,22577
  int            (*read_row_func)read_row_func594,22785
  my_ulonglong   affected_rows;597,22967
  my_ulonglong   insert_id;598,22999
  unsigned long	 stmt_id;599,23069
  unsigned long  flags;600,23134
  unsigned long  prefetch_rows;601,23207
  unsigned int   server_status;606,23410
  unsigned int	 last_errno;607,23442
  unsigned int   param_count;608,23494
  unsigned int   field_count;609,23561
  enum enum_mysql_stmt_state state;610,23638
  char		 last_error[last_error611,23699
  char		 sqlstate[sqlstate612,23759
  my_bool        send_types_to_server;614,23856
  my_bool        bind_param_done;615,23895
  unsigned char  bind_result_done;616,23968
  my_bool       unbuffered_fetch_cancelled;618,24095
  my_bool       update_max_length;623,24273
  struct st_mysql_stmt_extension *extension;extension624,24313
} MYSQL_STMT;625,24358
enum enum_stmt_attr_type627,24373
  STMT_ATTR_UPDATE_MAX_LENGTH,636,24700
  STMT_ATTR_CURSOR_TYPE,641,24825
  STMT_ATTR_PREFETCH_ROWS646,24998
#define MYSQL_NO_DATA 699,27746
#define MYSQL_DATA_TRUNCATED 700,27779
#define mysql_reload(702,27813
#define HAVE_MYSQL_REAL_CONNECT710,28141

include/mysql_time.h,793
#define _mysql_time_h_17,699
enum enum_mysql_timestamp_type28,1075
  MYSQL_TIMESTAMP_NONE=30,1108
  MYSQL_TIMESTAMP_NONE= -2, MYSQL_TIMESTAMP_ERROR=30,1108
  MYSQL_TIMESTAMP_DATE=31,1163
  MYSQL_TIMESTAMP_DATE= 0, MYSQL_TIMESTAMP_DATETIME=31,1163
  MYSQL_TIMESTAMP_DATE= 0, MYSQL_TIMESTAMP_DATETIME= 1, MYSQL_TIMESTAMP_TIME=31,1163
typedef struct st_mysql_time47,1873
  unsigned int  year,49,1904
  unsigned int  year, month,49,1904
  unsigned int  year, month, day,49,1904
  unsigned int  year, month, day, hour,49,1904
  unsigned int  year, month, day, hour, minute,49,1904
  unsigned int  year, month, day, hour, minute, second;49,1904
  unsigned long second_part;50,1960
  my_bool       neg;51,1989
  enum enum_mysql_timestamp_type time_type;52,2010
} MYSQL_TIME;53,2054

include/my_stacktrace.h,264
#define _my_stacktrace_h_17,771
#define HAVE_STACKTRACE 24,943
#define HAVE_STACKTRACE 27,1027
#undef HAVE_STACKTRACE31,1137
#define HAVE_STACKTRACE 32,1160
#define HAVE_WRITE_CORE35,1194
#define BACKTRACE_DEMANGLE 40,1338
size_t my_safe_snprintf(103,3450

include/mysys_err.h,1649
#define _mysys_err_h17,766
#define GLOBERRS 23,828
#define EE(24,908
#define EE_ERROR_FIRST 36,1258
#define EE_CANTCREATEFILE	37,1317
#define EE_READ	38,1345
#define EE_WRITE	39,1365
#define EE_BADCLOSE	40,1385
#define EE_OUTOFMEMORY	41,1408
#define EE_DELETE	42,1434
#define EE_LINK	43,1455
#define EE_EOFERR	44,1475
#define EE_CANTLOCK	45,1496
#define EE_CANTUNLOCK	46,1520
#define EE_DIR	47,1546
#define EE_STAT	48,1566
#define EE_CANT_CHSIZE	49,1587
#define EE_CANT_OPEN_STREAM	50,1614
#define EE_GETWD	51,1645
#define EE_SETWD	52,1666
#define EE_LINK_WARNING	53,1687
#define EE_OPEN_WARNING	54,1715
#define EE_DISK_FULL	55,1743
#define EE_CANT_MKDIR	56,1768
#define EE_UNKNOWN_CHARSET	57,1794
#define EE_OUT_OF_FILERESOURCES	58,1824
#define EE_CANT_READLINK	59,1859
#define EE_CANT_SYMLINK	60,1887
#define EE_REALPATH	61,1915
#define EE_SYNC	62,1939
#define EE_UNKNOWN_COLLATION	63,1960
#define EE_FILENOTFOUND	64,1992
#define EE_FILE_NOT_CLOSED	65,2020
#define EE_CHANGE_OWNERSHIP 66,2050
#define EE_CHANGE_PERMISSIONS 67,2085
#define EE_CANT_SEEK 68,2120
#define EE_ERROR_LAST 69,2155
#define EXIT_UNSPECIFIED_ERROR	74,2331
#define EXIT_UNKNOWN_OPTION	75,2365
#define EXIT_AMBIGUOUS_OPTION	76,2396
#define EXIT_NO_ARGUMENT_ALLOWED	77,2429
#define EXIT_ARGUMENT_REQUIRED	78,2464
#define EXIT_VAR_PREFIX_NOT_UNIQUE	79,2498
#define EXIT_UNKNOWN_VARIABLE	80,2535
#define EXIT_OUT_OF_MEMORY	81,2568
#define EXIT_UNKNOWN_SUFFIX	82,2598
#define EXIT_NO_PTR_TO_VARIABLE	83,2629
#define EXIT_CANNOT_CONNECT_TO_SERVICE	84,2665
#define EXIT_OPTION_DISABLED 85,2707
#define EXIT_ARGUMENT_INVALID 86,2750

include/my_sys.h,9496
#define _my_sys_h17,763
typedef struct my_aio_result 25,941
  aio_result_t result;26,972
  int	       pending;27,995
} my_aio_result;28,1017
# define MEM_UNDEFINED(33,1095
# define MEM_NOACCESS(34,1160
# define MEM_CHECK_ADDRESSABLE(35,1223
# define MEM_CHECK_DEFINED(36,1302
# define MEM_UNDEFINED(38,1399
# define MEM_NOACCESS(39,1440
# define MEM_CHECK_ADDRESSABLE(40,1480
# define MEM_CHECK_DEFINED(41,1529
#define MY_INIT(53,1788
#define MYSYS_ERRMSG_SIZE 64,2246
#define MY_FILE_ERROR	66,2281
#define MY_FFNF	69,2355
#define MY_FNABP	70,2404
#define MY_NABP	71,2464
#define MY_FAE	72,2524
#define MY_WME	73,2567
#define MY_WAIT_IF_FULL 74,2615
#define MY_IGNORE_BADFD 75,2686
#define MY_SYNC_DIR 76,2764
#define MY_UNUSED 77,2842
#define MY_FULL_IO 78,2910
#define MY_DONT_CHECK_FILESIZE 79,2989
#define MY_LINK_WARNING 80,3056
#define MY_COPYTIME	81,3123
#define MY_DELETE_OLD	82,3174
#define MY_RESOLVE_LINK 83,3231
#define MY_HOLD_ORIGINAL_MODES 84,3299
#define MY_REDEL_MAKE_BACKUP 85,3371
#define MY_SEEK_NOT_DONE 86,3404
#define MY_DONT_WAIT	87,3468
#define MY_ZEROFILL	88,3533
#define MY_ALLOW_ZERO_PTR 89,3596
#define MY_FREE_ON_ERROR 90,3665
#define MY_HOLD_ON_ERROR 91,3737
#define MY_DONT_OVERWRITE_FILE 92,3811
#define MY_THREADSAFE 93,3883
#define MY_SYNC 94,3946
#define MY_CHECK_ERROR	96,4010
#define MY_GIVE_INFO	97,4076
#define MY_DONT_FREE_DBUG 98,4133
#define ME_HIGHBYTE	100,4207
#define ME_NOCUR	101,4253
#define ME_OLDWIN	102,4303
#define ME_BELL	103,4344
#define ME_HOLDTANG	104,4401
#define ME_WAITTOT	105,4452
#define ME_WAITTANG	106,4518
#define ME_NOREFRESH	107,4571
#define ME_NOINPUT	108,4638
#define ME_COLOUR1	109,4693
#define ME_COLOUR2	110,4762
#define ME_COLOUR3	111,4802
#define ME_FATALERROR 112,4842
#define MY_REPLACE_DIR	115,4945
#define MY_REPLACE_EXT	116,5008
#define MY_UNPACK_FILENAME	117,5069
#define MY_PACK_FILENAME	118,5128
#define MY_RESOLVE_SYMLINKS	119,5183
#define MY_RETURN_REAL_PATH	120,5247
#define MY_SAFE_PATH	121,5310
#define MY_RELATIVE_PATH	122,5370
#define MY_APPEND_EXT 123,5431
#define MY_SEEK_SET	127,5533
#define MY_SEEK_CUR	128,5555
#define MY_SEEK_END	129,5577
#define MY_WAIT_FOR_USER_TO_FIX_PANIC	132,5622
#define MY_WAIT_GIVE_USER_A_MESSAGE	133,5680
#define MIN_COMPRESS_LENGTH	134,5748
#define DFLT_INIT_HITS 135,5811
#define MY_KEEP_PREALLOC	138,5862
#define MY_MARK_BLOCKS_FREE 139,5889
#define MY_ERRNO_EDOM	142,6025
#define MY_ERRNO_ERANGE	143,6051
#define GETDATE_DATE_TIME	146,6114
#define GETDATE_SHORT_DATE	147,6142
#define GETDATE_HHMMSSTIME	148,6171
#define GETDATE_GMT	149,6200
#define GETDATE_FIXEDLENGTH	150,6223
#define TRASH(161,6687
#define DEBUG_SYNC_C(164,6863
#define DEBUG_SYNC_C(169,7104
#define my_get_large_page_size(177,7356
#define my_large_malloc(178,7393
#define my_large_free(179,7446
#undef alloca187,7656
#define alloca 188,7670
#define alloca 191,7787
#define my_alloca(193,7837
#define my_afree(194,7881
#define my_alloca(196,7912
#define my_afree(197,7960
#define MY_ALL_CHARSETS_SIZE 226,8969
enum loglevel 262,10313
   ERROR_LEVEL,263,10329
   WARNING_LEVEL,264,10345
   INFORMATION_LEVEL265,10363
enum cache_type268,10388
  TYPE_NOT_SET=270,10406
  TYPE_NOT_SET= 0, READ_CACHE,270,10406
  TYPE_NOT_SET= 0, READ_CACHE, WRITE_CACHE,270,10406
  SEQ_READ_APPEND	271,10450
  READ_FIFO,272,10502
  READ_FIFO, READ_NET,272,10502
  READ_FIFO, READ_NET,WRITE_NET}WRITE_NET272,10502
enum flush_type274,10537
  FLUSH_KEEP,276,10555
  FLUSH_RELEASE,277,10622
  FLUSH_IGNORE_CHANGED,278,10693
  FLUSH_FORCE_WRITE283,10877
typedef struct st_record_cache	286,10901
  File file;288,10967
  int	rc_seek,289,10980
  int	rc_seek,error,289,10980
  int	rc_seek,error,inited;289,10980
  uint	rc_length,290,11008
  uint	rc_length,read_length,290,11008
  uint	rc_length,read_length,reclength;290,11008
  my_off_t rc_record_pos,291,11048
  my_off_t rc_record_pos,end_of_file;291,11048
  uchar *rc_buff,rc_buff292,11086
  uchar *rc_buff,*rc_buff2,rc_buff2292,11086
  uchar *rc_buff,*rc_buff2,*rc_pos,rc_pos292,11086
  uchar *rc_buff,*rc_buff2,*rc_pos,*rc_end,rc_end292,11086
  uchar *rc_buff,*rc_buff2,*rc_pos,*rc_end,*rc_request_pos;rc_request_pos292,11086
  int	use_async_io;294,11166
  my_aio_result aio_result;295,11186
  enum cache_type type;297,11221
} RECORD_CACHE;298,11245
enum file_type300,11262
  UNOPEN 302,11279
  UNOPEN = 0, FILE_BY_OPEN,302,11279
  UNOPEN = 0, FILE_BY_OPEN, FILE_BY_CREATE,302,11279
  UNOPEN = 0, FILE_BY_OPEN, FILE_BY_CREATE, STREAM_BY_FOPEN,302,11279
  UNOPEN = 0, FILE_BY_OPEN, FILE_BY_CREATE, STREAM_BY_FOPEN, STREAM_BY_FDOPEN,302,11279
  FILE_BY_MKSTEMP,303,11358
  FILE_BY_MKSTEMP, FILE_BY_DUP303,11358
struct st_my_file_info306,11393
  char  *name;name308,11418
  HANDLE fhandle;310,11447
  int    oflag;311,11491
  enum   file_type	type;313,11549
  mysql_mutex_t mutex;315,11619
typedef struct st_dynamic_array321,11699
  uchar *buffer;buffer323,11733
  uint elements,324,11750
  uint elements,max_element;324,11750
  uint alloc_increment;325,11779
  uint size_of_element;326,11803
} DYNAMIC_ARRAY;327,11827
typedef struct st_my_tmpdir329,11845
  DYNAMIC_ARRAY full_list;331,11875
  char **list;list332,11902
  uint cur,333,11917
  uint cur, max;333,11917
  mysql_mutex_t mutex;334,11934
} MY_TMPDIR;335,11957
typedef struct st_dynamic_string337,11971
  char *str;str339,12006
  size_t length,340,12019
  size_t length,max_length,340,12019
  size_t length,max_length,alloc_increment;340,12019
} DYNAMIC_STRING;341,12063
typedef int (*IO_CACHE_CALLBACK)IO_CACHE_CALLBACK344,12102
typedef struct st_io_cache_share346,12158
  mysql_mutex_t       mutex;348,12193
  mysql_cond_t        cond;349,12268
  mysql_cond_t        cond_writer;350,12334
  my_off_t              pos_in_file;352,12472
  struct st_io_cache    *source_cache;source_cache354,12574
  uchar                 *buffer;buffer355,12613
  uchar                 *read_end;read_end356,12677
  int                   running_threads;357,12758
  int                   total_threads;358,12826
  int                   error;359,12900
  my_bool alloced;362,13033
} IO_CACHE_SHARE;364,13059
typedef struct st_io_cache	366,13078
  my_off_t pos_in_file;369,13212
  my_off_t end_of_file;375,13419
  uchar	*read_pos;read_pos377,13497
  uchar  *read_end;read_end379,13594
  uchar  *buffer;buffer380,13614
  uchar  *request_pos;request_pos382,13682
  uchar  *write_buffer;write_buffer385,13780
  uchar *append_read_pos;append_read_pos392,14052
  uchar *write_pos;write_pos394,14139
  uchar *write_end;write_end396,14218
  uchar  **current_pos,current_pos404,14528
  uchar  **current_pos, **current_end;current_end404,14528
  mysql_mutex_t append_buffer_lock;410,14700
  IO_CACHE_SHARE *share;share418,15024
  int (*read_function)read_function428,15443
  int (*write_function)write_function433,15653
  enum cache_type type;439,15918
  IO_CACHE_CALLBACK pre_read;447,16283
  IO_CACHE_CALLBACK post_read;448,16313
  IO_CACHE_CALLBACK pre_close;449,16344
  ulong disk_writes;455,16555
  void* arg;456,16576
  char *file_name;file_name457,16623
  char *dir,dir458,16682
  char *dir,*prefix;prefix458,16682
  File file;459,16703
  int	seek_not_done,467,17057
  int	seek_not_done,error;467,17057
  size_t	buffer_length;469,17158
  size_t  read_length;471,17259
  myf	myflags;472,17282
  my_bool alloced_buffer;479,17550
  uint inited;485,17732
  my_off_t aio_read_pos;486,17747
  my_aio_result aio_result;487,17772
} IO_CACHE;489,17807
typedef int (*qsort2_cmp)qsort2_cmp491,17820
#define my_b_clear(496,17953
#define my_b_inited(497,17995
#define my_b_EOF 498,18036
#define my_b_read(500,18062
#define my_b_write(506,18299
#define my_b_get(512,18554
#define my_b_write_byte(518,18755
#define my_b_fill_cache(523,18936
#define my_b_tell(526,19044
#define my_b_get_buffer_start(529,19153
#define my_b_get_bytes_in_buffer(530,19210
#define my_b_get_pos_in_file(532,19318
#define my_b_bytes_in_cache(539,19595
typedef uint32 ha_checksum;542,19694
typedef int (*Process_option_func)Process_option_func545,19802
#define my_access 603,22589
#define my_delete_allow_opened(612,22873
#define my_delete_allow_opened(614,22957
extern void my_printf_error(638,24069
#define my_print_open_files(658,25019
#define base_name(668,25417
#define flush_io_cache(743,29526
#define my_init_dynamic_array(759,30312
#define my_init_dynamic_array_ci(760,30385
#define my_init_dynamic_array2(761,30461
#define my_init_dynamic_array2_ci(762,30534
#define dynamic_array_ptr(779,31657
#define dynamic_element(780,31759
#define push_dynamic(781,31848
#define reset_dynamic(782,31898
#define sort_dynamic(783,31950
#define my_malloc_lock(800,32824
#define my_free_lock(801,32871
#define alloc_root_inited(803,32915
#define ALLOC_ROOT_MIN_BLOCK_SIZE 804,32967
#define clear_alloc_root(805,33042
#define MAP_NOSYNC 863,35899
#define MAP_NORESERVE 866,35954
#define my_mmap(870,36036
#define my_mmap(872,36094
#define my_munmap(874,36151
#define PROT_READ 878,36278
#define PROT_WRITE 879,36305
#define MAP_NORESERVE 880,36332
#define MAP_SHARED 881,36359
#define MAP_PRIVATE 882,36391
#define MAP_NOSYNC 883,36423
#define MAP_FAILED 884,36455
#define MS_SYNC 885,36493
#define HAVE_MMAP887,36526
#define my_getpagesize(894,36684
#define BACKSLASH_MBTAIL926,38038

include/my_time.h,2157
#define _my_time_h_22,842
typedef long my_time_t;39,1236
#define MY_TIME_T_MAX 41,1261
#define MY_TIME_T_MIN 42,1292
#define TIMESTAMP_MAX_YEAR 45,1353
#define TIMESTAMP_MIN_YEAR 46,1385
#define TIMESTAMP_MAX_VALUE 47,1438
#define TIMESTAMP_MIN_VALUE 48,1476
#define YY_PART_YEAR	51,1563
# define IS_TIME_T_VALID_FOR_TIMESTAMP(58,1740
# define IS_TIME_T_VALID_FOR_TIMESTAMP(62,1860
#define TIME_FUZZY_DATE	67,1976
#define TIME_DATETIME_ONLY	68,2003
#define TIME_NO_ZERO_IN_DATE 70,2075
#define TIME_NO_ZERO_DATE	72,2170
#define TIME_INVALID_DATES	73,2221
#define MYSQL_TIME_WARN_TRUNCATED 75,2271
#define MYSQL_TIME_WARN_OUT_OF_RANGE 76,2310
#define TIME_MAX_HOUR 79,2386
#define TIME_MAX_MINUTE 80,2412
#define TIME_MAX_SECOND 81,2439
#define TIME_MAX_VALUE 82,2466
#define TIME_MAX_VALUE_SECONDS 84,2577
static inline my_bool validate_timestamp_range(125,3947
#define MAX_DATE_STRING_REP_LENGTH 149,4844
enum interval_type171,5673
  INTERVAL_YEAR,173,5694
  INTERVAL_YEAR, INTERVAL_QUARTER,173,5694
  INTERVAL_YEAR, INTERVAL_QUARTER, INTERVAL_MONTH,173,5694
  INTERVAL_YEAR, INTERVAL_QUARTER, INTERVAL_MONTH, INTERVAL_WEEK,173,5694
  INTERVAL_YEAR, INTERVAL_QUARTER, INTERVAL_MONTH, INTERVAL_WEEK, INTERVAL_DAY,173,5694
  INTERVAL_HOUR,174,5774
  INTERVAL_HOUR, INTERVAL_MINUTE,174,5774
  INTERVAL_HOUR, INTERVAL_MINUTE, INTERVAL_SECOND,174,5774
  INTERVAL_HOUR, INTERVAL_MINUTE, INTERVAL_SECOND, INTERVAL_MICROSECOND,174,5774
  INTERVAL_YEAR_MONTH,175,5847
  INTERVAL_YEAR_MONTH, INTERVAL_DAY_HOUR,175,5847
  INTERVAL_YEAR_MONTH, INTERVAL_DAY_HOUR, INTERVAL_DAY_MINUTE,175,5847
  INTERVAL_DAY_SECOND,176,5910
  INTERVAL_DAY_SECOND, INTERVAL_HOUR_MINUTE,176,5910
  INTERVAL_DAY_SECOND, INTERVAL_HOUR_MINUTE, INTERVAL_HOUR_SECOND,176,5910
  INTERVAL_MINUTE_SECOND,177,5977
  INTERVAL_MINUTE_SECOND, INTERVAL_DAY_MICROSECOND,177,5977
  INTERVAL_MINUTE_SECOND, INTERVAL_DAY_MICROSECOND, INTERVAL_HOUR_MICROSECOND,177,5977
  INTERVAL_MINUTE_MICROSECOND,178,6056
  INTERVAL_MINUTE_MICROSECOND, INTERVAL_SECOND_MICROSECOND,178,6056
  INTERVAL_MINUTE_MICROSECOND, INTERVAL_SECOND_MICROSECOND, INTERVAL_LAST178,6056

include/my_tree.h,1555
#define _tree_h17,761
#define MAX_TREE_HEIGHT	26,1000
#define ELEMENT_KEY(28,1028
#define tree_set_pointer(32,1164
#define TREE_NO_DUPS 34,1246
typedef enum { left_root_right,36,1270
typedef enum { left_root_right, right_root_left 36,1270
typedef enum { left_root_right, right_root_left } TREE_WALK;36,1270
typedef uint32 element_count;37,1331
typedef int (*tree_walk_action)tree_walk_action38,1361
typedef enum { free_init,40,1424
typedef enum { free_init, free_free,40,1424
typedef enum { free_init, free_free, free_end 40,1424
typedef enum { free_init, free_free, free_end } TREE_FREE;40,1424
typedef void (*tree_element_free)tree_element_free41,1483
typedef struct st_tree_element 43,1545
  struct st_tree_element *left,left44,1578
  struct st_tree_element *left,*right;right44,1578
  uint32 count:count45,1617
	 colour:colour46,1636
} TREE_ELEMENT;47,1677
#define ELEMENT_CHILD(49,1694
typedef struct st_tree 51,1775
  TREE_ELEMENT *root,root52,1800
  TREE_ELEMENT *root,null_element;52,1800
  TREE_ELEMENT **parents[parents53,1835
  uint offset_to_key,54,1878
  uint offset_to_key,elements_in_tree,54,1878
  uint offset_to_key,elements_in_tree,size_of_element;54,1878
  ulong memory_limit,55,1933
  ulong memory_limit, allocated;55,1933
  qsort_cmp2 compare;56,1966
  void *custom_arg;custom_arg57,1988
  MEM_ROOT mem_root;58,2008
  my_bool with_delete;59,2029
  tree_element_free free;60,2052
  uint flag;61,2078
} TREE;62,2091
#define is_tree_inited(72,2459
#define TREE_ELEMENT_EXTRA_SIZE 91,3428

include/my_uctype.h,3680
#define MY_UCTYPE_INCLUDED2,27
static unsigned char uctype_page00[uctype_page0024,885
static unsigned char uctype_page01[uctype_page0144,2023
static unsigned char uctype_page02[uctype_page0264,3109
static unsigned char uctype_page03[uctype_page0384,4195
static unsigned char uctype_page04[uctype_page04104,5281
static unsigned char uctype_page05[uctype_page05124,6367
static unsigned char uctype_page06[uctype_page06144,7453
static unsigned char uctype_page07[uctype_page07164,8539
static unsigned char uctype_page09[uctype_page09184,9625
static unsigned char uctype_page0A[uctype_page0A204,10711
static unsigned char uctype_page0B[uctype_page0B224,11797
static unsigned char uctype_page0C[uctype_page0C244,12883
static unsigned char uctype_page0D[uctype_page0D264,13969
static unsigned char uctype_page0E[uctype_page0E284,15055
static unsigned char uctype_page0F[uctype_page0F304,16141
static unsigned char uctype_page10[uctype_page10324,17227
static unsigned char uctype_page11[uctype_page11344,18313
static unsigned char uctype_page12[uctype_page12364,19399
static unsigned char uctype_page13[uctype_page13384,20485
static unsigned char uctype_page14[uctype_page14404,21571
static unsigned char uctype_page16[uctype_page16424,22657
static unsigned char uctype_page17[uctype_page17444,23743
static unsigned char uctype_page18[uctype_page18464,24829
static unsigned char uctype_page19[uctype_page19484,25915
static unsigned char uctype_page1A[uctype_page1A504,27001
static unsigned char uctype_page1B[uctype_page1B524,28087
static unsigned char uctype_page1D[uctype_page1D544,29173
static unsigned char uctype_page1E[uctype_page1E564,30259
static unsigned char uctype_page1F[uctype_page1F584,31345
static unsigned char uctype_page20[uctype_page20604,32431
static unsigned char uctype_page21[uctype_page21624,33517
static unsigned char uctype_page23[uctype_page23644,34603
static unsigned char uctype_page24[uctype_page24664,35689
static unsigned char uctype_page26[uctype_page26684,36775
static unsigned char uctype_page27[uctype_page27704,37861
static unsigned char uctype_page2B[uctype_page2B724,38947
static unsigned char uctype_page2C[uctype_page2C744,40033
static unsigned char uctype_page2D[uctype_page2D764,41119
static unsigned char uctype_page2E[uctype_page2E784,42205
static unsigned char uctype_page2F[uctype_page2F804,43291
static unsigned char uctype_page30[uctype_page30824,44377
static unsigned char uctype_page31[uctype_page31844,45463
static unsigned char uctype_page32[uctype_page32864,46549
static unsigned char uctype_page4D[uctype_page4D884,47635
static unsigned char uctype_page9F[uctype_page9F904,48721
static unsigned char uctype_pageA4[uctype_pageA4924,49807
static unsigned char uctype_pageA7[uctype_pageA7944,50893
static unsigned char uctype_pageA8[uctype_pageA8964,51979
static unsigned char uctype_pageD7[uctype_pageD7984,53065
static unsigned char uctype_pageD8[uctype_pageD81004,54151
static unsigned char uctype_pageDB[uctype_pageDB1024,55237
static unsigned char uctype_pageDC[uctype_pageDC1044,56323
static unsigned char uctype_pageDF[uctype_pageDF1064,57409
static unsigned char uctype_pageE0[uctype_pageE01084,58495
static unsigned char uctype_pageF8[uctype_pageF81104,59581
static unsigned char uctype_pageFA[uctype_pageFA1124,60667
static unsigned char uctype_pageFB[uctype_pageFB1144,61753
static unsigned char uctype_pageFD[uctype_pageFD1164,62839
static unsigned char uctype_pageFE[uctype_pageFE1184,63925
static unsigned char uctype_pageFF[uctype_pageFF1204,65011
MY_UNI_CTYPE my_uni_ctype[my_uni_ctype1224,66097

include/my_user.h,27
#define _my_user_h_22,829

include/my_xml.h,740
#define _my_xml_h18,716
#define MY_XML_OK	25,776
#define MY_XML_ERROR	26,796
#define MY_XML_FLAG_RELATIVE_NAMES 33,1004
#define MY_XML_FLAG_SKIP_TEXT_NORMALIZATION 40,1200
enum my_xml_node_type42,1247
  MY_XML_NODE_TAG,44,1271
  MY_XML_NODE_ATTR,45,1335
  MY_XML_NODE_TEXT 46,1399
typedef struct xml_stack_st49,1467
  int flags;51,1497
  enum my_xml_node_type current_node_type;52,1510
  char errstr[errstr53,1553
  char attr[attr54,1573
  char *attrend;attrend55,1591
  const char *beg;beg56,1608
  const char *cur;cur57,1627
  const char *end;end58,1646
  void *user_data;user_data59,1665
  int  (*enter)enter60,1684
  int  (*value)value61,1754
  int  (*leave_xml)leave_xml62,1824
} MY_XML_PARSER;63,1898

include/password.h,33
#define PASSWORD_INCLUDED17,772

include/probes_mysql.h,30
#define PROBES_MYSQL_H19,770

include/probes_mysql_nodtrace.h,4928
#define	_PROBES_MYSQL_D6,61
#define	MYSQL_CONNECTION_START(12,126
#define	MYSQL_CONNECTION_START_ENABLED(13,175
#define	MYSQL_CONNECTION_DONE(14,220
#define	MYSQL_CONNECTION_DONE_ENABLED(15,262
#define	MYSQL_COMMAND_START(16,306
#define	MYSQL_COMMAND_START_ENABLED(17,358
#define	MYSQL_COMMAND_DONE(18,400
#define	MYSQL_COMMAND_DONE_ENABLED(19,433
#define	MYSQL_QUERY_START(20,474
#define	MYSQL_QUERY_START_ENABLED(21,530
#define	MYSQL_QUERY_DONE(22,570
#define	MYSQL_QUERY_DONE_ENABLED(23,601
#define	MYSQL_QUERY_PARSE_START(24,640
#define	MYSQL_QUERY_PARSE_START_ENABLED(25,678
#define	MYSQL_QUERY_PARSE_DONE(26,724
#define	MYSQL_QUERY_PARSE_DONE_ENABLED(27,761
#define	MYSQL_QUERY_CACHE_HIT(28,806
#define	MYSQL_QUERY_CACHE_HIT_ENABLED(29,848
#define	MYSQL_QUERY_CACHE_MISS(30,892
#define	MYSQL_QUERY_CACHE_MISS_ENABLED(31,929
#define	MYSQL_QUERY_EXEC_START(32,974
#define	MYSQL_QUERY_EXEC_START_ENABLED(33,1041
#define	MYSQL_QUERY_EXEC_DONE(34,1086
#define	MYSQL_QUERY_EXEC_DONE_ENABLED(35,1122
#define	MYSQL_INSERT_ROW_START(36,1166
#define	MYSQL_INSERT_ROW_START_ENABLED(37,1209
#define	MYSQL_INSERT_ROW_DONE(38,1254
#define	MYSQL_INSERT_ROW_DONE_ENABLED(39,1290
#define	MYSQL_UPDATE_ROW_START(40,1334
#define	MYSQL_UPDATE_ROW_START_ENABLED(41,1377
#define	MYSQL_UPDATE_ROW_DONE(42,1422
#define	MYSQL_UPDATE_ROW_DONE_ENABLED(43,1458
#define	MYSQL_DELETE_ROW_START(44,1502
#define	MYSQL_DELETE_ROW_START_ENABLED(45,1545
#define	MYSQL_DELETE_ROW_DONE(46,1590
#define	MYSQL_DELETE_ROW_DONE_ENABLED(47,1626
#define	MYSQL_READ_ROW_START(48,1670
#define	MYSQL_READ_ROW_START_ENABLED(49,1717
#define	MYSQL_READ_ROW_DONE(50,1760
#define	MYSQL_READ_ROW_DONE_ENABLED(51,1794
#define	MYSQL_INDEX_READ_ROW_START(52,1836
#define	MYSQL_INDEX_READ_ROW_START_ENABLED(53,1883
#define	MYSQL_INDEX_READ_ROW_DONE(54,1932
#define	MYSQL_INDEX_READ_ROW_DONE_ENABLED(55,1972
#define	MYSQL_HANDLER_RDLOCK_START(56,2020
#define	MYSQL_HANDLER_RDLOCK_START_ENABLED(57,2067
#define	MYSQL_HANDLER_WRLOCK_START(58,2116
#define	MYSQL_HANDLER_WRLOCK_START_ENABLED(59,2163
#define	MYSQL_HANDLER_UNLOCK_START(60,2212
#define	MYSQL_HANDLER_UNLOCK_START_ENABLED(61,2259
#define	MYSQL_HANDLER_RDLOCK_DONE(62,2308
#define	MYSQL_HANDLER_RDLOCK_DONE_ENABLED(63,2348
#define	MYSQL_HANDLER_WRLOCK_DONE(64,2396
#define	MYSQL_HANDLER_WRLOCK_DONE_ENABLED(65,2436
#define	MYSQL_HANDLER_UNLOCK_DONE(66,2484
#define	MYSQL_HANDLER_UNLOCK_DONE_ENABLED(67,2524
#define	MYSQL_FILESORT_START(68,2572
#define	MYSQL_FILESORT_START_ENABLED(69,2613
#define	MYSQL_FILESORT_DONE(70,2656
#define	MYSQL_FILESORT_DONE_ENABLED(71,2696
#define	MYSQL_SELECT_START(72,2738
#define	MYSQL_SELECT_START_ENABLED(73,2771
#define	MYSQL_SELECT_DONE(74,2812
#define	MYSQL_SELECT_DONE_ENABLED(75,2850
#define	MYSQL_INSERT_START(76,2890
#define	MYSQL_INSERT_START_ENABLED(77,2923
#define	MYSQL_INSERT_DONE(78,2964
#define	MYSQL_INSERT_DONE_ENABLED(79,3002
#define	MYSQL_INSERT_SELECT_START(80,3042
#define	MYSQL_INSERT_SELECT_START_ENABLED(81,3082
#define	MYSQL_INSERT_SELECT_DONE(82,3130
#define	MYSQL_INSERT_SELECT_DONE_ENABLED(83,3175
#define	MYSQL_UPDATE_START(84,3222
#define	MYSQL_UPDATE_START_ENABLED(85,3255
#define	MYSQL_UPDATE_DONE(86,3296
#define	MYSQL_UPDATE_DONE_ENABLED(87,3340
#define	MYSQL_MULTI_UPDATE_START(88,3380
#define	MYSQL_MULTI_UPDATE_START_ENABLED(89,3419
#define	MYSQL_MULTI_UPDATE_DONE(90,3466
#define	MYSQL_MULTI_UPDATE_DONE_ENABLED(91,3516
#define	MYSQL_DELETE_START(92,3562
#define	MYSQL_DELETE_START_ENABLED(93,3595
#define	MYSQL_DELETE_DONE(94,3636
#define	MYSQL_DELETE_DONE_ENABLED(95,3674
#define	MYSQL_MULTI_DELETE_START(96,3714
#define	MYSQL_MULTI_DELETE_START_ENABLED(97,3753
#define	MYSQL_MULTI_DELETE_DONE(98,3800
#define	MYSQL_MULTI_DELETE_DONE_ENABLED(99,3844
#define	MYSQL_NET_READ_START(100,3890
#define	MYSQL_NET_READ_START_ENABLED(101,3921
#define	MYSQL_NET_READ_DONE(102,3964
#define	MYSQL_NET_READ_DONE_ENABLED(103,4004
#define	MYSQL_NET_WRITE_START(104,4046
#define	MYSQL_NET_WRITE_START_ENABLED(105,4082
#define	MYSQL_NET_WRITE_DONE(106,4126
#define	MYSQL_NET_WRITE_DONE_ENABLED(107,4161
#define	MYSQL_KEYCACHE_READ_START(108,4204
#define	MYSQL_KEYCACHE_READ_START_ENABLED(109,4262
#define	MYSQL_KEYCACHE_READ_BLOCK(110,4310
#define	MYSQL_KEYCACHE_READ_BLOCK_ENABLED(111,4350
#define	MYSQL_KEYCACHE_READ_HIT(112,4398
#define	MYSQL_KEYCACHE_READ_HIT_ENABLED(113,4432
#define	MYSQL_KEYCACHE_READ_MISS(114,4478
#define	MYSQL_KEYCACHE_READ_MISS_ENABLED(115,4513
#define	MYSQL_KEYCACHE_READ_DONE(116,4560
#define	MYSQL_KEYCACHE_READ_DONE_ENABLED(117,4605
#define	MYSQL_KEYCACHE_WRITE_START(118,4652
#define	MYSQL_KEYCACHE_WRITE_START_ENABLED(119,4711
#define	MYSQL_KEYCACHE_WRITE_BLOCK(120,4760
#define	MYSQL_KEYCACHE_WRITE_BLOCK_ENABLED(121,4801
#define	MYSQL_KEYCACHE_WRITE_DONE(122,4850
#define	MYSQL_KEYCACHE_WRITE_DONE_ENABLED(123,4896

include/queues.h,660
#define _queues_h24,929
typedef struct st_queue 32,1049
  uchar **root;root33,1075
  void *first_cmp_arg;first_cmp_arg34,1091
  uint elements;35,1114
  uint max_elements;36,1131
  uint offset_to_key;37,1152
  int max_at_top;38,1214
  int  (*compare)compare39,1283
  uint auto_extent;40,1327
} QUEUE;41,1347
#define queue_top(43,1357
#define queue_element(44,1401
#define queue_end(45,1461
#define queue_replaced(46,1521
#define queue_set_cmp_arg(47,1570
#define queue_set_max_at_top(48,1644
typedef int (*queue_compare)queue_compare50,1731
#define queue_remove_all(66,2492
#define queue_is_full(67,2550
#define is_queue_inited(70,2689

include/rijndael.h,112
#define RIJNDAEL_INCLUDED2,26
#define AES_MAXKC	34,1210
#define AES_MAXKB	35,1237
#define AES_MAXNR	36,1263

include/service_versions.h,211
#define SERVICE_VERSION 17,759
#define SERVICE_VERSION 19,818
#define VERSION_my_snprintf 22,857
#define VERSION_thd_alloc 23,896
#define VERSION_thd_wait 24,935
#define VERSION_my_thread_scheduler 25,974

include/sha1.h,409
#define SHA1_INCLUDED2,22
enum sha_result_codes68,2808
  SHA_SUCCESS 70,2832
  SHA_NULL,71,2851
  SHA_INPUT_TOO_LONG,72,2893
  SHA_STATE_ERROR	73,2941
#define SHA1_HASH_SIZE 76,2995
typedef struct SHA1_CONTEXT83,3135
  ulonglong  Length;85,3165
  int Computed;87,3289
  int Corrupted;88,3340
  int16 Message_Block_Index;89,3397
  uint8 Message_Block[Message_Block90,3465
} SHA1_CONTEXT;91,3526

include/sha2.h,259
#define included_sha2_h17,749
#define SHA512_DIGEST_LENGTH 39,1094
#define SHA384_DIGEST_LENGTH 43,1190
#define SHA256_DIGEST_LENGTH 47,1286
#define SHA224_DIGEST_LENGTH 51,1382
#define GEN_YASSL_SHA2_BRIDGE(54,1449
#undef GEN_YASSL_SHA2_BRIDGE63,1724

include/sql_common.h,1234
#define SQL_COMMON_INCLUDED2,28
#define SQL_COMMON_INCLUDED19,811
struct st_mysql_options_extention 31,1019
  char *plugin_dir;plugin_dir32,1055
  char *default_auth;default_auth33,1075
  my_bool enable_cleartext_plugin;34,1097
typedef struct st_mysql_methods37,1136
  my_bool (*read_query_result)read_query_result39,1170
  my_bool (*advanced_command)advanced_command40,1216
  MYSQL_DATA *(*read_rows)read_rows48,1527
  MYSQL_RES * (*use_result)use_result50,1622
  void (*fetch_lengths)fetch_lengths51,1665
  void (*flush_use_result)flush_use_result53,1757
  int (*read_change_user_result)read_change_user_result54,1826
  MYSQL_FIELD * (*list_fields)list_fields56,1930
  my_bool (*read_prepare_result)read_prepare_result57,1976
  int (*stmt_execute)stmt_execute58,2042
  int (*read_binary_rows)read_binary_rows59,2083
  int (*unbuffered_fetch)unbuffered_fetch60,2128
  void (*free_embedded_thd)free_embedded_thd61,2181
  const char *(*read_statistics)read_statistics62,2224
  my_bool (*next_result)next_result63,2272
  int (*read_rows_from_cursor)read_rows_from_cursor64,2312
} MYSQL_METHODS;66,2369
#define simple_command(68,2387
#define stmt_command(71,2589
#define protocol_41(114,4456

include/sslopt-case.h,82
#define SSLOPT_CASE_INCLUDED2,29
      opt_use_ssl=29,1108
      break;30,1130

include/sslopt-longopts.h,1094
#define SSLOPT_LONGOPTS_INCLUDED2,33
  {"ssl", OPT_SSL_SSL,21,869
   &opt_use_ssl,opt_use_ssl23,966
   &opt_use_ssl, &opt_use_ssl,opt_use_ssl23,966
   &opt_use_ssl, &opt_use_ssl, 0, GET_BOOL,23,966
   &opt_use_ssl, &opt_use_ssl, 0, GET_BOOL, OPT_ARG,23,966
  {"ssl-capath", OPT_SSL_CAPATH,28,1205
   &opt_ssl_capath,opt_ssl_capath30,1294
   &opt_ssl_capath, &opt_ssl_capath,opt_ssl_capath30,1294
   &opt_ssl_capath, &opt_ssl_capath, 0, GET_STR,30,1294
   &opt_ssl_capath, &opt_ssl_capath, 0, GET_STR, REQUIRED_ARG,30,1294
  {"ssl-cipher", OPT_SSL_CIPHER,35,1533
   &opt_ssl_cipher,opt_ssl_cipher36,1604
   &opt_ssl_cipher, &opt_ssl_cipher,opt_ssl_cipher36,1604
   &opt_ssl_cipher, &opt_ssl_cipher, 0, GET_STR,36,1604
   &opt_ssl_cipher, &opt_ssl_cipher, 0, GET_STR, REQUIRED_ARG,36,1604
  {"ssl-verify-server-cert", OPT_SSL_VERIFY_SERVER_CERT,42,1858
   &opt_ssl_verify_server_cert,opt_ssl_verify_server_cert45,2046
   &opt_ssl_verify_server_cert, &opt_ssl_verify_server_cert,opt_ssl_verify_server_cert45,2046
   0, GET_BOOL,46,2107
   0, GET_BOOL, OPT_ARG,46,2107

include/sslopt-vars.h,442
#define SSLOPT_VARS_INCLUDED2,29
#define SSL_STATIC21,887
#define SSL_STATIC 23,912
SSL_STATIC my_bool opt_use_ssl 25,945
SSL_STATIC char *opt_ssl_ca opt_ssl_ca26,982
SSL_STATIC char *opt_ssl_capath opt_ssl_capath27,1019
SSL_STATIC char *opt_ssl_cert opt_ssl_cert28,1056
SSL_STATIC char *opt_ssl_cipher opt_ssl_cipher29,1093
SSL_STATIC char *opt_ssl_key opt_ssl_key30,1130
SSL_STATIC my_bool opt_ssl_verify_server_cert=32,1187

include/t_ctype.h,5059
#define _t_ctype_h30,1301
#define TOT_LEVELS 32,1321
#define LAST_LEVEL 33,1342
#define IGNORE 35,1386
enum l1_symbols 39,1435
    L1_08 40,1453
    L1_08 = TOT_LEVELS,40,1453
    L1_18,41,1477
    L1_28,42,1488
    L1_38,43,1499
    L1_48,44,1510
    L1_58,45,1521
    L1_68,46,1532
    L1_78,47,1543
    L1_88,48,1554
    L1_98,49,1565
    L1_A8,50,1576
    L1_B8,51,1587
    L1_C8,52,1598
    L1_D8,53,1609
    L1_E8,54,1620
    L1_F8,55,1631
    L1_G8,56,1642
    L1_H8,57,1653
    L1_I8,58,1664
    L1_J8,59,1675
    L1_K8,60,1686
    L1_L8,61,1697
    L1_M8,62,1708
    L1_N8,63,1719
    L1_O8,64,1730
    L1_P8,65,1741
    L1_Q8,66,1752
    L1_R8,67,1763
    L1_S8,68,1774
    L1_T8,69,1785
    L1_U8,70,1796
    L1_V8,71,1807
    L1_W8,72,1818
    L1_X8,73,1829
    L1_Y8,74,1840
    L1_Z8,75,1851
    L1_KO_KAI,76,1862
    L1_KHO_KHAI,77,1877
    L1_KHO_KHUAT,78,1894
    L1_KHO_KHWAI,79,1912
    L1_KHO_KHON,80,1930
    L1_KHO_RAKHANG,81,1947
    L1_NGO_NGU,82,1967
    L1_CHO_CHAN,83,1983
    L1_CHO_CHING,84,2000
    L1_CHO_CHANG,85,2018
    L1_SO_SO,86,2036
    L1_CHO_CHOE,87,2050
    L1_YO_YING,88,2067
    L1_DO_CHADA,89,2083
    L1_TO_PATAK,90,2100
    L1_THO_THAN,91,2117
    L1_THO_NANGMONTHO,92,2134
    L1_THO_PHUTHAO,93,2157
    L1_NO_NEN,94,2177
    L1_DO_DEK,95,2192
    L1_TO_TAO,96,2207
    L1_THO_THUNG,97,2222
    L1_THO_THAHAN,98,2240
    L1_THO_THONG,99,2259
    L1_NO_NU,100,2277
    L1_BO_BAIMAI,101,2291
    L1_PO_PLA,102,2309
    L1_PHO_PHUNG,103,2324
    L1_FO_FA,104,2342
    L1_PHO_PHAN,105,2356
    L1_FO_FAN,106,2373
    L1_PHO_SAMPHAO,107,2388
    L1_MO_MA,108,2408
    L1_YO_YAK,109,2422
    L1_RO_RUA,110,2437
    L1_RU,111,2452
    L1_LO_LING,112,2463
    L1_LU,113,2479
    L1_WO_WAEN,114,2490
    L1_SO_SALA,115,2506
    L1_SO_RUSI,116,2522
    L1_SO_SUA,117,2538
    L1_HO_HIP,118,2553
    L1_LO_CHULA,119,2568
    L1_O_ANG,120,2585
    L1_HO_NOKHUK,121,2599
    L1_NKHIT,122,2617
    L1_SARA_A,123,2631
    L1_MAI_HAN_AKAT,124,2646
    L1_SARA_AA,125,2667
    L1_SARA_AM,126,2683
    L1_SARA_I,127,2699
    L1_SARA_II,128,2714
    L1_SARA_UE,129,2730
    L1_SARA_UEE,130,2746
    L1_SARA_U,131,2763
    L1_SARA_UU,132,2778
    L1_SARA_E,133,2794
    L1_SARA_AE,134,2809
    L1_SARA_O,135,2825
    L1_SARA_AI_MAIMUAN,136,2840
    L1_SARA_AI_MAIMALAI137,2864
enum l2_symbols 141,2922
    L2_BLANK 142,2940
    L2_BLANK = TOT_LEVELS,142,2940
    L2_THAII,143,2967
    L2_YAMAK,144,2981
    L2_PINTHU,145,2995
    L2_GARAN,146,3010
    L2_TYKHU,147,3024
    L2_TONE1,148,3038
    L2_TONE2,149,3052
    L2_TONE3,150,3066
    L2_TONE4151,3080
enum l3_symbols 155,3127
	L3_BLANK 156,3145
	L3_BLANK = TOT_LEVELS,156,3145
    L3_SPACE,157,3169
    L3_NB_SACE,158,3183
    L3_LOW_LINE,159,3199
    L3_HYPHEN,160,3216
    L3_COMMA,161,3231
    L3_SEMICOLON,162,3245
    L3_COLON,163,3263
    L3_EXCLAMATION,164,3277
    L3_QUESTION,165,3297
    L3_SOLIDUS,166,3314
    L3_FULL_STOP,167,3330
    L3_PAIYAN_NOI,168,3348
    L3_MAI_YAMOK,169,3367
    L3_GRAVE,170,3385
    L3_CIRCUMFLEX,171,3399
    L3_TILDE,172,3418
    L3_APOSTROPHE,173,3432
    L3_QUOTATION,174,3451
    L3_L_PARANTHESIS,175,3469
    L3_L_BRACKET,176,3491
    L3_L_BRACE,177,3509
    L3_R_BRACE,178,3525
    L3_R_BRACKET,179,3541
    L3_R_PARENTHESIS,180,3559
    L3_AT,181,3581
    L3_BAHT,182,3592
    L3_DOLLAR,183,3605
    L3_FONGMAN,184,3620
    L3_ANGKHANKHU,185,3636
    L3_KHOMUT,186,3655
    L3_ASTERISK,187,3670
    L3_BK_SOLIDUS,188,3687
    L3_AMPERSAND,189,3706
    L3_NUMBER,190,3724
    L3_PERCENT,191,3739
    L3_PLUS,192,3755
    L3_LESS_THAN,193,3768
    L3_EQUAL,194,3786
    L3_GREATER_THAN,195,3800
    L3_V_LINE196,3821
enum l4_symbols 200,3869
    L4_BLANK 201,3887
    L4_BLANK = TOT_LEVELS,201,3887
    L4_MIN,202,3914
    L4_CAP,203,3926
    L4_EXT204,3938
enum level_symbols 207,3953
    L_UPRUPR 208,3974
    L_UPRUPR = TOT_LEVELS,208,3974
    L_UPPER,209,4001
    L_MIDDLE,210,4014
    L_LOWER211,4028
#define	_is(214,4044
#define _level	215,4088
#define _consnt	216,4107
#define _ldvowel	217,4128
#define _fllwvowel	218,4149
#define _uprvowel	219,4172
#define _lwrvowel	220,4195
#define _tone	221,4218
#define _diacrt1	222,4238
#define _diacrt2	223,4261
#define _combine	224,4284
#define _stone	225,4307
#define _tdig	226,4329
#define _rearvowel	227,4351
#define _diacrt	228,4408
#define levelof(229,4448
#define isthai(230,4488
#define istalpha(231,4522
#define isconsnt(233,4637
#define isldvowel(234,4679
#define isfllwvowel(235,4722
#define ismidvowel(236,4769
#define isuprvowel(237,4826
#define islwrvowel(238,4871
#define isuprlwrvowel(239,4916
#define isrearvowel(240,4977
#define isvowel(241,5024
#define istone(242,5083
#define isunldable(243,5126
#define iscombinable(244,5200
#define istdigit(245,5246
#define isstone(246,5289
#define isdiacrt1(247,5333
#define isdiacrt2(248,5375
#define isdiacrt(249,5417

include/thr_alarm.h,1253
#define _thr_alarm_h19,823
#define USE_ONE_SIGNAL_HAND	25,909
#undef USE_ONE_SIGNAL_HAND28,1003
#define USE_ALARM_THREAD29,1030
#define THR_SERVER_ALARM 30,1055
#define THR_SERVER_ALARM 32,1094
typedef struct st_alarm_info35,1135
  ulong next_alarm_time;37,1166
  uint active_alarms;38,1191
  uint max_used_alarms;39,1213
} ALARM_INFO;40,1237
#define USE_ALARM_THREAD46,1325
#undef USE_ONE_SIGNAL_HAND47,1350
typedef my_bool thr_alarm_t;49,1378
typedef my_bool ALARM;50,1407
#define thr_alarm_init(52,1431
#define thr_alarm_in_use(53,1466
#define thr_end_alarm(54,1506
#define thr_alarm(55,1531
#define thr_got_alarm(57,1612
#define init_thr_alarm(58,1639
#define thr_alarm_kill(59,1665
#define resize_thr_alarm(60,1691
#define end_thr_alarm(61,1719
typedef struct st_thr_alarm_entry65,1772
  UINT_PTR crono;67,1808
} thr_alarm_entry;68,1826
typedef int thr_alarm_entry;72,1885
#define thr_got_alarm(74,1915
typedef thr_alarm_entry* thr_alarm_t;78,1987
typedef struct st_alarm 80,2026
  ulong expire_time;81,2052
  thr_alarm_entry alarmed;82,2073
  pthread_t thread;83,2129
  my_thread_id thread_id;84,2149
  my_bool malloced;85,2175
} ALARM;86,2195
#define thr_alarm_init(91,2267
#define thr_alarm_in_use(92,2302

include/thr_lock.h,2142
#define _thr_lock_h19,796
enum thr_lock_type 34,1112
enum thr_lock_type { TL_IGNORE=34,1112
		     TL_UNLOCK,35,1147
                     TL_READ_DEFAULT,43,1568
		     TL_READ,44,1606
		     TL_READ_WITH_SHARED_LOCKS,45,1640
		     TL_READ_HIGH_PRIORITY,47,1738
		     TL_READ_NO_INSERT,49,1817
		     TL_WRITE_ALLOW_WRITE,55,2009
		     TL_WRITE_CONCURRENT_INSERT,60,2176
		     TL_WRITE_DELAYED,62,2273
                     TL_WRITE_DEFAULT,67,2488
		     TL_WRITE_LOW_PRIORITY,69,2588
		     TL_WRITE,71,2649
		     TL_WRITE_ONLY}TL_WRITE_ONLY73,2716
enum enum_thr_lock_result 75,2740
enum enum_thr_lock_result { THR_LOCK_SUCCESS=75,2740
enum enum_thr_lock_result { THR_LOCK_SUCCESS= 0, THR_LOCK_ABORTED=75,2740
                            THR_LOCK_WAIT_TIMEOUT=76,2810
                            THR_LOCK_WAIT_TIMEOUT= 2, THR_LOCK_DEADLOCK=76,2810
typedef struct st_thr_lock_info88,3167
  pthread_t thread;90,3201
  my_thread_id thread_id;91,3221
} THR_LOCK_INFO;92,3247
typedef struct st_thr_lock_data 95,3266
  THR_LOCK_INFO *owner;owner96,3300
  struct st_thr_lock_data *next,next97,3324
  struct st_thr_lock_data *next,**prev;prev97,3324
  struct st_thr_lock *lock;lock98,3364
  mysql_cond_t *cond;cond99,3392
  enum thr_lock_type type;100,3414
  void *status_param;status_param101,3441
  void *debug_print_param;debug_print_param102,3497
  struct PSI_table *m_psi;m_psi103,3524
} THR_LOCK_DATA;104,3551
struct st_lock_list 106,3569
  THR_LOCK_DATA *data,data107,3591
  THR_LOCK_DATA *data,**last;last107,3591
typedef struct st_thr_lock 110,3625
  LIST list;111,3654
  mysql_mutex_t mutex;112,3667
  struct st_lock_list read_wait;113,3690
  struct st_lock_list read;114,3723
  struct st_lock_list write_wait;115,3751
  struct st_lock_list write;116,3785
  ulong write_lock_count;118,3894
  uint read_no_write_count;119,3920
  void (*get_status)get_status120,3948
  void (*copy_status)copy_status121,4009
  void (*update_status)update_status122,4045
  void (*restore_status)restore_status123,4108
  my_bool (*check_status)check_status124,4178
} THR_LOCK;125,4213

include/typelib.h,423
#define _typelib_h18,765
typedef struct st_typelib 22,808
  unsigned int count;23,869
  const char *name;name24,913
  const char **type_names;type_names25,956
  unsigned int *type_lengths;type_lengths26,983
} TYPELIB;27,1013
#define FIND_TYPE_BASIC 32,1218
#define FIND_TYPE_NO_PREFIX 34,1316
#define FIND_TYPE_NO_OVERWRITE 36,1424
#define FIND_TYPE_ALLOW_NUMBER 38,1510
#define FIND_TYPE_COMMA_TERM 40,1604

include/violite.h,3660
#define	vio_violite_h_22,853
typedef struct st_vio Vio;34,1095
enum enum_vio_type37,1148
  VIO_CLOSED,39,1169
  VIO_CLOSED, VIO_TYPE_TCPIP,39,1169
  VIO_CLOSED, VIO_TYPE_TCPIP, VIO_TYPE_SOCKET,39,1169
  VIO_CLOSED, VIO_TYPE_TCPIP, VIO_TYPE_SOCKET, VIO_TYPE_NAMEDPIPE,39,1169
  VIO_TYPE_SSL,40,1236
  VIO_TYPE_SSL, VIO_TYPE_SHARED_MEMORY40,1236
#define VIO_LOCALHOST 44,1280
#define VIO_BUFFERED_READ 45,1357
#define VIO_READ_BUFFER_SIZE 46,1429
#define HANDLE 59,2028
#define DES_cblock 109,4026
#define DES_key_schedule 110,4056
#define DES_set_key_unchecked(111,4098
#define DES_ede3_cbc_encrypt(112,4167
#define HEADER_DES_LOCL_H 115,4286
#define YASSL_MYSQL_COMPATIBLE116,4328
#define YASSL_PREFIX118,4380
typedef my_socket YASSL_SOCKET_T;121,4472
#define YASSL_SOCKET_T_DEFINED122,4506
enum enum_ssl_init_error127,4613
  SSL_INITERR_NOERROR=129,4640
  SSL_INITERR_NOERROR= 0, SSL_INITERR_CERT,129,4640
  SSL_INITERR_NOERROR= 0, SSL_INITERR_CERT, SSL_INITERR_KEY,129,4640
  SSL_INITERR_NOMATCH,130,4702
  SSL_INITERR_NOMATCH, SSL_INITERR_BAD_PATHS,130,4702
  SSL_INITERR_NOMATCH, SSL_INITERR_BAD_PATHS, SSL_INITERR_CIPHERS,130,4702
  SSL_INITERR_MEMFAIL,131,4770
  SSL_INITERR_MEMFAIL, SSL_INITERR_LASTERR131,4770
struct st_VioSSLFd135,4876
  SSL_CTX *ssl_context;ssl_context137,4897
#define vio_delete(162,5677
#define vio_errno(163,5726
#define vio_read(164,5774
#define vio_write(165,5850
#define vio_blocking(166,5929
#define vio_is_blocking(168,6040
#define vio_fastsend(169,6096
#define vio_keepalive(170,6145
#define vio_should_retry(171,6229
#define vio_was_interrupted(172,6287
#define vio_close(173,6350
#define vio_peer_addr(174,6399
#define vio_timeout(175,6484
#define vio_poll_read(176,6561
#define vio_is_connected(177,6640
enum SSL_type181,6817
  SSL_TYPE_NOT_SPECIFIED=183,6833
  SSL_TYPE_NONE,184,6863
  SSL_TYPE_ANY,185,6880
  SSL_TYPE_X509,186,6896
  SSL_TYPE_SPECIFIED187,6913
struct st_vio193,7066
  my_socket		sd;195,7082
  HANDLE hPipe;196,7136
  my_bool		localhost;197,7152
  int			fcntl_mode;198,7203
  struct sockaddr_storage	local;199,7256
  struct sockaddr_storage	remote;200,7319
  int addrLen;201,7384
  enum enum_vio_type	type;202,7455
  char			desc[desc203,7508
  char                  *read_buffer;read_buffer204,7552
  char                  *read_pos;read_pos205,7623
  char                  *read_end;read_end207,7755
  void    (*viodelete)viodelete209,7891
  int     (*vioerrno)vioerrno210,7921
  size_t  (*read)read211,7950
  size_t  (*write)write212,7992
  int     (*vioblocking)vioblocking213,8041
  my_bool (*is_blocking)is_blocking214,8093
  int     (*viokeepalive)viokeepalive215,8125
  int     (*fastsend)fastsend216,8167
  my_bool (*peer_addr)peer_addr217,8196
  void    (*in_addr)in_addr218,8251
  my_bool (*should_retry)should_retry219,8305
  my_bool (*was_interrupted)was_interrupted220,8338
  int     (*vioclose)vioclose221,8374
  void	  (*timeout)timeout222,8403
  my_bool (*poll_read)poll_read223,8472
  my_bool (*is_connected)is_connected224,8520
  my_bool (*has_data)has_data225,8553
  void	  *ssl_arg;ssl_arg227,8603
  HANDLE  handle_file_map;230,8646
  char    *handle_map;handle_map231,8673
  HANDLE  event_server_wrote;232,8696
  HANDLE  event_server_read;233,8726
  HANDLE  event_client_wrote;234,8755
  HANDLE  event_client_read;235,8785
  HANDLE  event_conn_closed;236,8814
  size_t  shared_memory_remain;237,8843
  char    *shared_memory_pos;shared_memory_pos238,8875
  OVERLAPPED pipe_overlapped;241,8942
  DWORD read_timeout_ms;242,8972
  DWORD write_timeout_ms;243,8997

include/welcome_copyright_notice.h,138
#define _welcome_copyright_notice_h_17,782
#define COPYRIGHT_NOTICE_CURRENT_YEAR 19,820
#define ORACLE_WELCOME_COPYRIGHT_NOTICE(25,986

libmysql/client_settings.h,77
#define CLIENT_SETTINGS_INCLUDED17,787
#define CLIENT_CAPABILITIES 30,1183

libmysqld/embedded_priv.h,466
typedef struct embedded_query_result29,1188
  MYSQL_ROWS **prev_ptr;prev_ptr31,1227
  unsigned int warning_count,32,1252
  unsigned int warning_count, server_status;32,1252
  struct st_mysql_data *next;next33,1297
  my_ulonglong affected_rows,34,1327
  my_ulonglong affected_rows, insert_id;34,1327
  char info[info35,1368
  MYSQL_FIELD *fields_list;fields_list36,1400
  unsigned int last_errno;37,1428
  char sqlstate[sqlstate38,1455
} EQR;39,1491

libmysqld/emb_qcache.h,518
class Querycache_stream18,826
  uchar *cur_data;Querycache_stream::cur_data20,852
  uchar *data_end;Querycache_stream::data_end21,871
  Query_cache_block *block;Querycache_stream::block22,890
  uint headers_len;Querycache_stream::headers_len23,918
  Query_cache_block *first_block;Querycache_stream::first_block26,963
  uint stored_size;Querycache_stream::stored_size27,997
  Querycache_stream(Querycache_stream::Querycache_stream29,1024
  void use_next_block(Querycache_stream::use_next_block39,1328

libmysqld/resource.h,159
#define _APS_NEXT_RESOURCE_VALUE 10,205
#define _APS_NEXT_COMMAND_VALUE 11,249
#define _APS_NEXT_CONTROL_VALUE 12,295
#define _APS_NEXT_SYMED_VALUE 13,340

mysys/my_handler_errors.h,119
#define MYSYS_MY_HANDLER_ERRORS_INCLUDED2,41
static const char *handler_error_messages[handler_error_messages23,868

mysys/my_static.h,151
#define MYSYS_MY_STATIC_INCLUDED2,33
#define MAX_SIGNALS	27,947
struct st_remember 29,1009
  int number;30,1030
  sig_handler (*func)func31,1044

mysys/mysys_priv.h,24
#define EDQUOT 75,2562

regex/cclass.h,542
#define CCLASS_ALNUM	3,29
#define CCLASS_ALPHA	4,52
#define CCLASS_BLANK	5,75
#define CCLASS_CNTRL	6,98
#define CCLASS_DIGIT	7,121
#define CCLASS_GRAPH	8,144
#define CCLASS_LOWER	9,167
#define CCLASS_PRINT	10,190
#define CCLASS_PUNCT	11,213
#define CCLASS_SPACE	12,236
#define CCLASS_UPPER	13,259
#define CCLASS_XDIGIT	14,283
#define CCLASS_LAST	15,308
extern struct cclass 17,332
	const char *name;name18,355
	const char *chars;chars19,374
	const char *multis;multis20,394
	uint  mask;21,415
} cclasses[cclasses22,428

regex/cname.h,102
static struct cname 2,27
  const char *name;name3,49
  const char code;4,69
} cnames[cnames5,88

regex/my_regex.h,1289
#define	_REGEX_H_	2,18
typedef __int64 regoff_t;12,211
typedef off_t regoff_t;14,243
	int re_magic;18,341
	size_t re_nsub;19,356
	const char *re_endp;re_endp20,419
	struct re_guts *re_g;re_g21,472
	CHARSET_INFO *charset;charset22,527
} my_regex_t;23,574
	regoff_t rm_so;25,605
	regoff_t rm_eo;26,644
} my_regmatch_t;27,681
typedef int (*my_regex_stack_check_t)my_regex_stack_check_t31,724
#define	REG_BASIC	33,844
#define	REG_EXTENDED	34,867
#define	REG_ICASE	35,893
#define	REG_NOSUB	36,916
#define	REG_NEWLINE	37,939
#define	REG_NOSPEC	38,964
#define	REG_PEND	39,988
#define	REG_DUMP	40,1010
#define	REG_NOMATCH	44,1059
#define	REG_BADPAT	45,1082
#define	REG_ECOLLATE	46,1104
#define	REG_ECTYPE	47,1128
#define	REG_EESCAPE	48,1150
#define	REG_ESUBREG	49,1173
#define	REG_EBRACK	50,1196
#define	REG_EPAREN	51,1218
#define	REG_EBRACE	52,1240
#define	REG_BADBR	53,1262
#define	REG_ERANGE	54,1283
#define	REG_ESPACE	55,1305
#define	REG_BADRPT	56,1327
#define	REG_EMPTY	57,1349
#define	REG_ASSERT	58,1370
#define	REG_INVARG	59,1392
#define	REG_ATOI	60,1414
#define	REG_ITOA	61,1468
#define	REG_NOTBOL	67,1705
#define	REG_NOTEOL	68,1730
#define	REG_STARTEND	69,1755
#define	REG_TRACE	70,1782
#define	REG_LARGE	71,1833
#define	REG_BACKR	72,1890

regex/regex2.h,1782
#define __regex2_h__19,489
#define	MAGIC1	21,511
typedef unsigned long sop;42,1496
typedef long sopno;43,1544
#define	OPRMASK	44,1564
#define	OPDMASK	45,1591
#define	OPSHIFT	46,1618
#define	OP(47,1654
#define	OPND(48,1700
#define	SOP(49,1748
#define OSHIFT(50,1800
#define	OEND	53,1925
#define	OCHAR	54,1968
#define	OBOL	55,2023
#define	OEOL	56,2068
#define	OANY	57,2114
#define	OANYOF	58,2150
#define	OBACK_	59,2199
#define	O_BACK	60,2253
#define	OPLUS_	61,2305
#define	O_PLUS	62,2360
#define	OQUEST_	63,2417
#define	O_QUEST	64,2474
#define	OLPAREN	65,2532
#define	ORPAREN	66,2578
#define	OCH_	67,2625
#define	OOR1	68,2681
#define	OOR2	69,2740
#define	O_CH	70,2798
#define	OBOW	71,2853
#define	OEOW	72,2898
	uch *ptr;ptr89,3540
	uch mask;90,3576
	uch hash;91,3611
	size_t smultis;92,3639
	char *multis;multis93,3656
} cset;94,3710
#define	CHadd(96,3789
#define	CHsub(97,3871
#define	CHIN(98,3953
#define	MCadd(99,4008
#define	MCsub(100,4079
#define	MCin(101,4121
typedef unsigned char cat_t;104,4199
struct re_guts 109,4274
	int magic;110,4291
#		define	MAGIC2	111,4303
	sop *strip;strip112,4342
	int csetsize;113,4386
	int ncsets;114,4440
	cset *sets;sets115,4483
	uch *setbits;setbits116,4520
	int cflags;117,4576
	sopno nstates;118,4630
	sopno firststate;119,4670
	sopno laststate;120,4725
	int iflags;121,4764
#		define	USEBOL	122,4799
#		define	USEEOL	123,4832
#		define	BAD	124,4865
	int nbol;125,4904
	int neol;126,4939
	int ncategories;127,4974
	cat_t *categories;categories128,5028
	char *must;must129,5076
	int mlen;130,5127
	size_t nsub;131,5160
	int backrefs;132,5197
	sopno nplus;133,5248
	cat_t catspace[catspace135,5324
#undef OUT	139,5389
#define	OUT	140,5434
#define	ISWORD(141,5487

regex/utils.h,168
#define	DUPMAX	3,52
#define DUPMAX	5,118
#define	RE_INFINITY	7,145
#define	NC	8,178
typedef unsigned char uch;9,216
#define	NDEBUG	14,338
#define	memmove(21,483

sql/authors.h,253
#define AUTHORS_INCLUDED2,25
struct show_table_authors_st 21,831
  const char *name;name22,862
  const char *location;location23,882
  const char *comment;comment24,906
struct show_table_authors_st show_table_authors[show_table_authors39,1194

sql/client_settings.h,277
#define CLIENT_SETTINGS_INCLUDED18,788
#define CLIENT_CAPABILITIES 31,1180
#define read_user_name(39,1562
#undef HAVE_SMEM40,1591
#undef _CUSTOMCONFIG_41,1608
#define mysql_server_init(43,1631
#define mysql_server_end(44,1691
#define slave_io_thread_detach_vio(51,1843

sql/contributors.h,278
#define CONTRIBUTORS_INCLUDED2,30
struct show_table_contributors_st 22,857
  const char *name;name23,893
  const char *location;location24,913
  const char *comment;comment25,937
struct show_table_contributors_st show_table_contributors[show_table_contributors38,1135

sql/custom_conf.h,176
#define __MYSQL_CUSTOM_BUILD_CONFIG__17,734
#define MYSQL_PORT	19,773
#define MYSQL_NAMEDPIPE	21,813
#define MYSQL_SERVICENAME	22,852
#define KEY_SERVICE_PARAMETERS23,892

sql/datadict.h,127
#define DATADICT_INCLUDED2,26
enum frm_type_enum24,843
  FRMTYPE_ERROR=26,864
  FRMTYPE_TABLE,27,884
  FRMTYPE_VIEW28,901

sql/debug_sync.h,138
#define DEBUG_SYNC_INCLUDED2,28
#define DEBUG_SYNC(36,1130
#define DEBUG_SYNC_DEFAULT_WAIT_TIMEOUT 45,1579
#define DEBUG_SYNC(57,2035

sql/derror.h,31
#define DERROR_INCLUDED17,770

sql/des_key_file.h,307
#define DES_KEY_FILE_INCLUDED17,776
struct st_des_keyblock24,925
  DES_cblock key1,26,950
  DES_cblock key1, key2,26,950
  DES_cblock key1, key2, key3;26,950
struct st_des_keyschedule29,985
  DES_key_schedule ks1,31,1013
  DES_key_schedule ks1, ks2,31,1013
  DES_key_schedule ks1, ks2, ks3;31,1013

sql/discover.h,33
#define DISCOVER_INCLUDED17,772

sql/event_data_objects.h,2496
#define _EVENT_DATA_OBJECTS_H_2,31
class Event_queue_element_for_exec33,1035
  Event_queue_element_for_exec(Event_queue_element_for_exec::Event_queue_element_for_exec36,1080
  LEX_STRING dbname;Event_queue_element_for_exec::dbname42,1204
  LEX_STRING name;Event_queue_element_for_exec::name43,1225
  bool dropped;Event_queue_element_for_exec::dropped44,1244
  THD *thd;Event_queue_element_for_exec::thd45,1260
class Event_basic54,1436
  MEM_ROOT mem_root;Event_basic::mem_root57,1467
  LEX_STRING dbname;Event_basic::dbname61,1498
  LEX_STRING name;Event_basic::name62,1519
  LEX_STRING definer;Event_basic::definer63,1538
  Time_zone *time_zone;Event_basic::time_zone65,1592
class Event_queue_element 83,1851
  int on_completion;Event_queue_element::on_completion86,1908
  int status;Event_queue_element::status87,1929
  longlong originator;Event_queue_element::originator88,1943
  my_time_t last_executed;Event_queue_element::last_executed90,1967
  my_time_t execute_at;Event_queue_element::execute_at91,1994
  my_time_t starts;Event_queue_element::starts92,2018
  my_time_t ends;Event_queue_element::ends93,2038
  my_bool starts_null;Event_queue_element::starts_null94,2056
  my_bool ends_null;Event_queue_element::ends_null95,2079
  my_bool execute_at_null;Event_queue_element::execute_at_null96,2100
  longlong expression;Event_queue_element::expression98,2128
  interval_type interval;Event_queue_element::interval99,2151
  bool dropped;Event_queue_element::dropped101,2178
  uint execution_count;Event_queue_element::execution_count103,2195
class Event_timed 119,2422
  LEX_STRING body;Event_timed::body125,2576
  LEX_STRING definer_user;Event_timed::definer_user127,2596
  LEX_STRING definer_host;Event_timed::definer_host128,2623
  LEX_STRING comment;Event_timed::comment130,2651
  ulonglong created;Event_timed::created132,2674
  ulonglong modified;Event_timed::modified133,2695
  ulong sql_mode;Event_timed::sql_mode135,2718
  class Stored_program_creation_ctx *creation_ctx;Event_timed::creation_ctx137,2737
  LEX_STRING body_utf8;Event_timed::body_utf8138,2788
class Event_job_data 154,2986
  LEX_STRING body;Event_job_data::body157,3038
  LEX_STRING definer_user;Event_job_data::definer_user158,3057
  LEX_STRING definer_host;Event_job_data::definer_host159,3084
  ulong sql_mode;Event_job_data::sql_mode161,3112
  class Stored_program_creation_ctx *creation_ctx;Event_job_data::creation_ctx163,3131

sql/event_db_repository.h,878
#define _EVENT_DB_REPOSITORY_H_2,32
enum enum_events_table_field34,1131
  ET_FIELD_DB 36,1162
  ET_FIELD_NAME,37,1182
  ET_FIELD_BODY,38,1199
  ET_FIELD_DEFINER,39,1216
  ET_FIELD_EXECUTE_AT,40,1236
  ET_FIELD_INTERVAL_EXPR,41,1259
  ET_FIELD_TRANSIENT_INTERVAL,42,1285
  ET_FIELD_CREATED,43,1316
  ET_FIELD_MODIFIED,44,1336
  ET_FIELD_LAST_EXECUTED,45,1357
  ET_FIELD_STARTS,46,1383
  ET_FIELD_ENDS,47,1402
  ET_FIELD_STATUS,48,1419
  ET_FIELD_ON_COMPLETION,49,1438
  ET_FIELD_SQL_MODE,50,1464
  ET_FIELD_COMMENT,51,1485
  ET_FIELD_ORIGINATOR,52,1505
  ET_FIELD_TIME_ZONE,53,1528
  ET_FIELD_CHARACTER_SET_CLIENT,54,1550
  ET_FIELD_COLLATION_CONNECTION,55,1583
  ET_FIELD_DB_COLLATION,56,1616
  ET_FIELD_BODY_UTF8,57,1641
  ET_FIELD_COUNT 58,1663
class Event_db_repository73,1980
  Event_db_repository(Event_db_repository::Event_db_repository76,2016

sql/event_parse_data.h,2179
#define _EVENT_PARSE_DATA_H_18,777
#define EVEX_GET_FIELD_FAILED 26,911
#define EVEX_BAD_PARAMS 27,946
#define EVEX_MICROSECOND_UNSUP 28,981
#define EVEX_MAX_INTERVAL_VALUE 29,1016
class Event_parse_data 31,1061
  enum enum_statusEvent_parse_data::enum_status39,1275
    ENABLED Event_parse_data::enum_status::ENABLED41,1298
    DISABLED,Event_parse_data::enum_status::DISABLED42,1315
    SLAVESIDE_DISABLED Event_parse_data::enum_status::SLAVESIDE_DISABLED43,1329
  enum enum_on_completionEvent_parse_data::enum_on_completion46,1360
    ON_COMPLETION_DEFAULT Event_parse_data::enum_on_completion::ON_COMPLETION_DEFAULT52,1515
    ON_COMPLETION_DROP,Event_parse_data::enum_on_completion::ON_COMPLETION_DROP53,1546
    ON_COMPLETION_PRESERVEEvent_parse_data::enum_on_completion::ON_COMPLETION_PRESERVE54,1570
  int on_completion;Event_parse_data::on_completion57,1603
  int status;Event_parse_data::status58,1624
  bool status_changed;Event_parse_data::status_changed59,1638
  longlong originator;Event_parse_data::originator60,1661
  bool do_not_create;Event_parse_data::do_not_create65,1799
  bool body_changed;Event_parse_data::body_changed67,1822
  LEX_STRING dbname;Event_parse_data::dbname69,1844
  LEX_STRING name;Event_parse_data::name70,1865
  LEX_STRING definer;Event_parse_data::definer71,1884
  LEX_STRING comment;Event_parse_data::comment72,1937
  Item* item_starts;Event_parse_data::item_starts74,1960
  Item* item_ends;Event_parse_data::item_ends75,1981
  Item* item_execute_at;Event_parse_data::item_execute_at76,2000
  my_time_t starts;Event_parse_data::starts78,2026
  my_time_t ends;Event_parse_data::ends79,2046
  my_time_t execute_at;Event_parse_data::execute_at80,2064
  my_bool starts_null;Event_parse_data::starts_null81,2088
  my_bool ends_null;Event_parse_data::ends_null82,2111
  my_bool execute_at_null;Event_parse_data::execute_at_null83,2132
  sp_name *identifier;Event_parse_data::identifier85,2160
  Item* item_expression;Event_parse_data::item_expression86,2183
  longlong expression;Event_parse_data::expression87,2208
  interval_type interval;Event_parse_data::interval88,2231

sql/event_queue.h,1105
#define _EVENT_QUEUE_H_2,24
class Event_queue47,1385
  mysql_mutex_t LOCK_event_queue;Event_queue::LOCK_event_queue113,2726
  mysql_cond_t COND_queue_state;Event_queue::COND_queue_state114,2760
  QUEUE queue;Event_queue::queue117,2856
  my_time_t next_activation_at;Event_queue::next_activation_at119,2872
  uint mutex_last_locked_at_line;Event_queue::mutex_last_locked_at_line121,2905
  uint mutex_last_unlocked_at_line;Event_queue::mutex_last_unlocked_at_line122,2939
  uint mutex_last_attempted_lock_at_line;Event_queue::mutex_last_attempted_lock_at_line123,2975
  const char* mutex_last_locked_in_func;Event_queue::mutex_last_locked_in_func124,3017
  const char* mutex_last_unlocked_in_func;Event_queue::mutex_last_unlocked_in_func125,3058
  const char* mutex_last_attempted_lock_in_func;Event_queue::mutex_last_attempted_lock_in_func126,3101
  bool mutex_queue_data_locked;Event_queue::mutex_queue_data_locked127,3150
  bool mutex_queue_data_attempting_lock;Event_queue::mutex_queue_data_attempting_lock128,3182
  bool waiting_on_cond;Event_queue::waiting_on_cond129,3223

sql/event_scheduler.h,1381
#define _EVENT_SCHEDULER_H_2,28
class Event_worker_thread51,1366
  init(Event_worker_thread::init55,1416
  static Event_db_repository *db_repository;Event_worker_thread::db_repository67,1637
class Event_scheduler71,1687
  mysql_mutex_t LOCK_scheduler_state;Event_scheduler::LOCK_scheduler_state120,2511
  enum enum_stateEvent_scheduler::enum_state122,2550
    INITIALIZED Event_scheduler::enum_state::INITIALIZED124,2572
    RUNNING,Event_scheduler::enum_state::RUNNING125,2593
    STOPPINGEvent_scheduler::enum_state::STOPPING126,2606
  enum enum_state state;Event_scheduler::state130,2696
  THD *scheduler_thd;Event_scheduler::scheduler_thd132,2722
  mysql_cond_t COND_state;Event_scheduler::COND_state134,2745
  Event_queue *queue;Event_scheduler::queue136,2773
  uint mutex_last_locked_at_line;Event_scheduler::mutex_last_locked_at_line138,2796
  uint mutex_last_unlocked_at_line;Event_scheduler::mutex_last_unlocked_at_line139,2830
  const char* mutex_last_locked_in_func;Event_scheduler::mutex_last_locked_in_func140,2866
  const char* mutex_last_unlocked_in_func;Event_scheduler::mutex_last_unlocked_in_func141,2907
  bool mutex_scheduler_data_locked;Event_scheduler::mutex_scheduler_data_locked142,2950
  bool waiting_on_cond;Event_scheduler::waiting_on_cond143,2986
  ulonglong started_events;Event_scheduler::started_events145,3011

sql/events.h,971
#define _EVENT_H_2,18
typedef class Item COND;43,1443
typedef struct charset_info_st CHARSET_INFO;44,1468
class Events70,2320
  enum enum_opt_event_scheduler Events::enum_opt_event_scheduler78,2499
  enum enum_opt_event_scheduler { EVENTS_OFF,Events::enum_opt_event_scheduler::EVENTS_OFF78,2499
  enum enum_opt_event_scheduler { EVENTS_OFF, EVENTS_ON,Events::enum_opt_event_scheduler::EVENTS_ON78,2499
  enum enum_opt_event_scheduler { EVENTS_OFF, EVENTS_ON, EVENTS_DISABLED Events::enum_opt_event_scheduler::EVENTS_DISABLED78,2499
  static ulong opt_event_scheduler;Events::opt_event_scheduler80,2634
  get_db_repository(Events::get_db_repository88,2847
  static Event_queue         *event_queue;Events::event_queue135,3882
  static Event_scheduler     *scheduler;Events::scheduler136,3925
  static Event_db_repository *db_repository;Events::db_repository137,3966
  static bool check_system_tables_error;Events::check_system_tables_error139,4055

sql/field.h,35732
#define FIELD_INCLUDED2,23
#define DATETIME_DEC 34,1342
enum enum_check_fields42,1476
  CHECK_FIELD_IGNORE,enum_check_fields::CHECK_FIELD_IGNORE44,1501
  CHECK_FIELD_WARN,enum_check_fields::CHECK_FIELD_WARN45,1523
  CHECK_FIELD_ERROR_FOR_NULLenum_check_fields::CHECK_FIELD_ERROR_FOR_NULL46,1543
enum Derivation50,1577
  DERIVATION_IGNORABLE=Derivation::DERIVATION_IGNORABLE52,1595
  DERIVATION_NUMERIC=Derivation::DERIVATION_NUMERIC53,1622
  DERIVATION_COERCIBLE=Derivation::DERIVATION_COERCIBLE54,1647
  DERIVATION_SYSCONST=Derivation::DERIVATION_SYSCONST55,1674
  DERIVATION_IMPLICIT=Derivation::DERIVATION_IMPLICIT56,1700
  DERIVATION_NONE=Derivation::DERIVATION_NONE57,1726
  DERIVATION_EXPLICIT=Derivation::DERIVATION_EXPLICIT58,1748
#define STORAGE_TYPE_MASK 61,1777
#define COLUMN_FORMAT_MASK 62,1805
#define COLUMN_FORMAT_SHIFT 63,1834
#define my_charset_numeric 65,1865
#define MY_REPERTOIRE_NUMERIC 66,1915
inline uint get_enum_pack_length(71,2031
inline uint get_set_pack_length(76,2116
class Field82,2227
  static void *operator new(Field::operator new87,2329
  static void operator delete(Field::operator delete89,2409
  uchar		*ptr;Field::ptr91,2494
  uchar		*null_ptr;Field::null_ptr96,2682
  TABLE *table;Field::table101,2870
  TABLE *orig_table;Field::orig_table102,2939
  const char	**table_name,Field::table_name103,3016
  const char	**table_name, *field_name;Field::field_name103,3016
  LEX_STRING	comment;Field::comment104,3056
  key_map	key_start,Field::key_start106,3122
  key_map	key_start, part_of_key,Field::part_of_key106,3122
  key_map	key_start, part_of_key, part_of_key_not_clustered;Field::part_of_key_not_clustered106,3122
  key_map       part_of_sortkey;Field::part_of_sortkey107,3183
  enum utype Field::utype116,3667
  enum utype  { NONE,Field::utype::NONE116,3667
  enum utype  { NONE,DATE,Field::utype::DATE116,3667
  enum utype  { NONE,DATE,SHIELD,Field::utype::SHIELD116,3667
  enum utype  { NONE,DATE,SHIELD,NOEMPTY,Field::utype::NOEMPTY116,3667
  enum utype  { NONE,DATE,SHIELD,NOEMPTY,CASEUP,Field::utype::CASEUP116,3667
  enum utype  { NONE,DATE,SHIELD,NOEMPTY,CASEUP,PNR,Field::utype::PNR116,3667
  enum utype  { NONE,DATE,SHIELD,NOEMPTY,CASEUP,PNR,BGNR,Field::utype::BGNR116,3667
  enum utype  { NONE,DATE,SHIELD,NOEMPTY,CASEUP,PNR,BGNR,PGNR,Field::utype::PGNR116,3667
  enum utype  { NONE,DATE,SHIELD,NOEMPTY,CASEUP,PNR,BGNR,PGNR,YES,Field::utype::YES116,3667
  enum utype  { NONE,DATE,SHIELD,NOEMPTY,CASEUP,PNR,BGNR,PGNR,YES,NO,Field::utype::NO116,3667
  enum utype  { NONE,DATE,SHIELD,NOEMPTY,CASEUP,PNR,BGNR,PGNR,YES,NO,REL,Field::utype::REL116,3667
		CHECK,Field::utype::CHECK117,3741
		CHECK,EMPTY,Field::utype::EMPTY117,3741
		CHECK,EMPTY,UNKNOWN_FIELD,Field::utype::UNKNOWN_FIELD117,3741
		CHECK,EMPTY,UNKNOWN_FIELD,CASEDN,Field::utype::CASEDN117,3741
		CHECK,EMPTY,UNKNOWN_FIELD,CASEDN,NEXT_NUMBER,Field::utype::NEXT_NUMBER117,3741
		CHECK,EMPTY,UNKNOWN_FIELD,CASEDN,NEXT_NUMBER,INTERVAL_FIELD,Field::utype::INTERVAL_FIELD117,3741
                BIT_FIELD,Field::utype::BIT_FIELD118,3804
                BIT_FIELD, TIMESTAMP_OLD_FIELD,Field::utype::TIMESTAMP_OLD_FIELD118,3804
                BIT_FIELD, TIMESTAMP_OLD_FIELD, CAPITALIZE,Field::utype::CAPITALIZE118,3804
                BIT_FIELD, TIMESTAMP_OLD_FIELD, CAPITALIZE, BLOB_FIELD,Field::utype::BLOB_FIELD118,3804
                TIMESTAMP_DN_FIELD,Field::utype::TIMESTAMP_DN_FIELD119,3876
                TIMESTAMP_DN_FIELD, TIMESTAMP_UN_FIELD,Field::utype::TIMESTAMP_UN_FIELD119,3876
                TIMESTAMP_DN_FIELD, TIMESTAMP_UN_FIELD, TIMESTAMP_DNUN_FIELD}Field::utype::TIMESTAMP_DNUN_FIELD119,3876
  enum geometry_typeField::geometry_type120,3955
    GEOM_GEOMETRY Field::geometry_type::GEOM_GEOMETRY122,3980
    GEOM_GEOMETRY = 0, GEOM_POINT Field::geometry_type::GEOM_POINT122,3980
    GEOM_GEOMETRY = 0, GEOM_POINT = 1, GEOM_LINESTRING Field::geometry_type::GEOM_LINESTRING122,3980
    GEOM_GEOMETRY = 0, GEOM_POINT = 1, GEOM_LINESTRING = 2, GEOM_POLYGON Field::geometry_type::GEOM_POLYGON122,3980
    GEOM_MULTIPOINT Field::geometry_type::GEOM_MULTIPOINT123,4058
    GEOM_MULTIPOINT = 4, GEOM_MULTILINESTRING Field::geometry_type::GEOM_MULTILINESTRING123,4058
    GEOM_MULTIPOINT = 4, GEOM_MULTILINESTRING = 5, GEOM_MULTIPOLYGON Field::geometry_type::GEOM_MULTIPOLYGON123,4058
    GEOM_GEOMETRYCOLLECTION Field::geometry_type::GEOM_GEOMETRYCOLLECTION124,4132
  enum imagetype Field::imagetype126,4169
  enum imagetype { itRAW,Field::imagetype::itRAW126,4169
  enum imagetype { itRAW, itMBR}Field::imagetype::itMBR126,4169
  utype		unireg_check;Field::unireg_check128,4204
  uint32	field_length;Field::field_length129,4227
  uint32	flags;Field::flags130,4270
  uint16        field_index;Field::field_index131,4286
  uchar		null_bit;Field::null_bit132,4358
  bool is_created_from_null_item;Field::is_created_from_null_item142,4703
  virtual ~Field(Field::~Field147,4889
  inline String *val_str(Field::val_str159,5484
  virtual bool str_needs_quotes(Field::str_needs_quotes178,6424
  virtual Item_result cmp_type Field::cmp_type180,6522
  virtual Item_result cast_to_int_type Field::cast_to_int_type181,6588
  virtual bool eq(Field::eq185,6856
  virtual uint32 pack_length(Field::pack_length197,7260
  virtual uint32 pack_length_in_rec(Field::pack_length_in_rec204,7532
  virtual uint pack_length_from_metadata(Field::pack_length_from_metadata207,7740
  virtual uint row_pack_length(Field::row_pack_length212,7895
  virtual int save_field_metadata(Field::save_field_metadata213,7942
  virtual uint32 data_length(Field::data_length219,8119
  virtual uint32 sort_length(Field::sort_length220,8176
  virtual uint32 max_data_length(Field::max_data_length228,8406
  virtual int reset(Field::reset232,8481
  virtual void reset_fields(Field::reset_fields233,8547
  virtual void set_default(Field::set_default234,8580
  virtual bool binary(Field::binary243,8869
  virtual bool zero_pack(Field::zero_pack244,8913
  virtual enum ha_base_keytype key_type(Field::key_type245,8960
  virtual uint32 key_length(Field::key_length246,9038
  virtual enum_field_types real_type(Field::real_type248,9144
  inline  int cmp(Field::cmp249,9208
  virtual int cmp_max(Field::cmp_max250,9269
  virtual int cmp_binary(Field::cmp_binary253,9413
  virtual int cmp_offset(Field::cmp_offset255,9532
  virtual int cmp_binary_offset(Field::cmp_binary_offset257,9612
  virtual int key_cmp(Field::key_cmp259,9708
  virtual int key_cmp(Field::key_cmp261,9785
  virtual uint decimals(Field::decimals263,9865
  inline bool is_null(Field::is_null271,10189
  inline bool is_real_null(Field::is_real_null273,10324
  inline bool is_null_in_record(Field::is_null_in_record275,10452
  inline bool is_null_in_record_with_offset(Field::is_null_in_record_with_offset282,10623
  inline void set_null(Field::set_null288,10777
  inline void set_notnull(Field::set_notnull290,10883
  inline bool maybe_null(Field::maybe_null292,11001
  inline bool real_maybe_null(Field::real_maybe_null296,11133
    LAST_NULL_BYTE_UNDEF=Field::LAST_NULL_BYTE_UNDEF299,11205
  size_t last_null_byte(Field::last_null_byte317,11681
  virtual bool can_be_compared_as_longlong(Field::can_be_compared_as_longlong334,12390
  virtual void free(Field::free335,12459
  inline void move_field(Field::move_field342,12827
  inline void move_field(Field::move_field346,12978
  virtual void move_field_offset(Field::move_field_offset347,13036
  virtual void get_image(Field::get_image353,13213
  virtual void set_image(Field::set_image355,13315
  virtual uint get_key_image(Field::get_key_image385,14292
  virtual void set_key_image(Field::set_key_image390,14436
  inline longlong val_int_offset(Field::val_int_offset392,14545
  inline longlong val_int(Field::val_int399,14701
  inline String *val_str(Field::val_str408,14908
  uchar *pack(Field::pack423,15314
  const uchar *unpack(Field::unpack435,15706
  virtual uint packed_col_length(Field::packed_col_length442,15901
  virtual uint max_packed_col_length(Field::max_packed_col_length444,15984
  uint offset(Field::offset447,16063
  virtual CHARSET_INFO *charset(Field::charset455,16325
  virtual CHARSET_INFO *charset_for_protocol(Field::charset_for_protocol456,16397
  virtual CHARSET_INFO *sort_charset(Field::sort_charset458,16507
  virtual bool has_charset(Field::has_charset459,16578
  virtual void set_charset(Field::set_charset460,16635
  virtual enum Derivation derivation(Field::derivation461,16693
  virtual uint repertoire(Field::repertoire463,16776
  virtual void set_derivation(Field::set_derivation464,16850
  inline bool check_overflow(Field::check_overflow475,17565
  void init(Field::init480,17698
  virtual uint32 char_length(Field::char_length501,18447
  virtual geometry_type get_geometry_type(Field::get_geometry_type506,18534
  ha_storage_media field_storage_type(Field::field_storage_type513,18663
  void set_storage_type(Field::set_storage_type519,18798
  column_format_type column_format(Field::column_format525,18984
  void set_column_format(Field::set_column_format531,19118
  virtual int do_save_field_metadata(Field::do_save_field_metadata578,20411
  static void handle_int16(Field::handle_int16582,20497
  static void handle_int24(Field::handle_int24601,20899
  static void handle_int32(Field::handle_int32627,21466
  static void handle_int64(Field::handle_int64649,21928
  uchar *pack_int16(Field::pack_int16668,22336
  const uchar *unpack_int16(Field::unpack_int16674,22527
  uchar *pack_int24(Field::pack_int24681,22759
  const uchar *unpack_int24(Field::unpack_int24687,22937
  uchar *pack_int32(Field::pack_int32694,23157
  const uchar *unpack_int32(Field::unpack_int32700,23348
  uchar *pack_int64(Field::pack_int64707,23580
  const uchar *unpack_int64(Field::unpack_int64713,23770
  bool field_flags_are_binary(Field::field_flags_are_binary720,24002
class Field_num 728,24103
  const uint8 dec;Field_num::dec730,24143
  bool zerofill,Field_num::zerofill731,24162
  bool zerofill,unsigned_flag;Field_num::unsigned_flag731,24162
  Item_result result_type Field_num::result_type736,24436
  enum Derivation derivation(Field_num::derivation737,24495
  uint repertoire(Field_num::repertoire738,24567
  CHARSET_INFO *charset(Field_num::charset739,24631
  uint decimals(Field_num::decimals744,24851
  uint size_of(Field_num::size_of745,24898
  uint row_pack_length(Field_num::row_pack_length750,25100
  uint32 pack_length_from_metadata(Field_num::pack_length_from_metadata751,25151
class Field_str 765,25673
  CHARSET_INFO *field_charset;Field_str::field_charset767,25716
  enum Derivation field_derivation;Field_str::field_derivation768,25747
  Item_result result_type Field_str::result_type773,25961
  uint decimals(Field_str::decimals785,26578
  uint size_of(Field_str::size_of790,26804
  uint repertoire(Field_str::repertoire791,26853
  CHARSET_INFO *charset(Field_str::charset795,26940
  void set_charset(Field_str::set_charset796,27002
  enum Derivation derivation(Field_str::derivation797,27080
  virtual void set_derivation(Field_str::set_derivation798,27150
  bool binary(Field_str::binary800,27252
  uint32 max_display_length(Field_str::max_display_length801,27319
  virtual bool str_needs_quotes(Field_str::str_needs_quotes804,27444
class Field_longstr 811,27609
  Field_longstr(Field_longstr::Field_longstr817,27784
class Field_real 829,28255
  my_bool not_fixed;Field_real::not_fixed831,28300
  Field_real(Field_real::Field_real833,28322
  uint32 max_display_length(Field_real::max_display_length844,28868
  uint size_of(Field_real::size_of845,28923
class Field_decimal 853,29219
  Field_decimal(Field_decimal::Field_decimal855,29268
  enum_field_types type(Field_decimal::type863,29635
  enum ha_base_keytype key_type(Field_decimal::key_type864,29697
  bool zero_pack(Field_decimal::zero_pack876,30153
  virtual const uchar *unpack(Field_decimal::unpack878,30228
  virtual uchar *pack(Field_decimal::pack883,30428
class Field_new_decimal 892,30680
  uint precision;Field_new_decimal::precision897,30849
  uint bin_size;Field_new_decimal::bin_size898,30867
  enum_field_types type(Field_new_decimal::type912,31541
  enum ha_base_keytype key_type(Field_new_decimal::key_type913,31606
  Item_result result_type Field_new_decimal::result_type914,31676
  bool zero_pack(Field_new_decimal::zero_pack929,32335
  uint32 max_display_length(Field_new_decimal::max_display_length931,32410
  uint size_of(Field_new_decimal::size_of932,32465
  uint32 pack_length(Field_new_decimal::pack_length933,32515
  uint row_pack_length(Field_new_decimal::row_pack_length935,32629
class Field_tiny 945,33031
  Field_tiny(Field_tiny::Field_tiny947,33076
  enum Item_result result_type Field_tiny::result_type955,33415
  enum_field_types type(Field_tiny::type956,33478
  enum ha_base_keytype key_type(Field_tiny::key_type957,33537
  int reset(Field_tiny::reset962,33777
  uint32 pack_length(Field_tiny::pack_length969,34032
  uint32 max_display_length(Field_tiny::max_display_length971,34111
  virtual uchar *pack(Field_tiny::pack973,34156
  virtual const uchar *unpack(Field_tiny::unpack980,34312
class Field_short 989,34490
  Field_short(Field_short::Field_short991,34536
  Field_short(Field_short::Field_short999,34879
  enum Item_result result_type Field_short::result_type1004,35111
  enum_field_types type(Field_short::type1005,35174
  enum ha_base_keytype key_type(Field_short::key_type1006,35234
  int reset(Field_short::reset1011,35482
  uint32 pack_length(Field_short::pack_length1018,35744
  uint32 max_display_length(Field_short::max_display_length1020,35823
  virtual uchar *pack(Field_short::pack1022,35868
  virtual const uchar *unpack(Field_short::unpack1028,36038
class Field_medium 1035,36229
  Field_medium(Field_medium::Field_medium1037,36276
  enum Item_result result_type Field_medium::result_type1045,36620
  enum_field_types type(Field_medium::type1046,36683
  enum ha_base_keytype key_type(Field_medium::key_type1047,36743
  int reset(Field_medium::reset1052,36984
  uint32 pack_length(Field_medium::pack_length1059,37253
  uint32 max_display_length(Field_medium::max_display_length1061,37332
  virtual uchar *pack(Field_medium::pack1063,37377
  virtual const uchar *unpack(Field_medium::unpack1069,37560
class Field_long 1077,37765
  Field_long(Field_long::Field_long1079,37810
  Field_long(Field_long::Field_long1087,38149
  enum Item_result result_type Field_long::result_type1092,38376
  enum_field_types type(Field_long::type1093,38439
  enum ha_base_keytype key_type(Field_long::key_type1094,38498
  int reset(Field_long::reset1099,38745
  uint32 pack_length(Field_long::pack_length1106,39021
  uint32 max_display_length(Field_long::max_display_length1108,39100
  virtual uchar *pack(Field_long::pack1109,39170
  virtual const uchar *unpack(Field_long::unpack1115,39385
class Field_longlong 1125,39653
  Field_longlong(Field_longlong::Field_longlong1127,39702
  Field_longlong(Field_longlong::Field_longlong1135,40048
  enum Item_result result_type Field_longlong::result_type1141,40280
  enum_field_types type(Field_longlong::type1142,40343
  enum ha_base_keytype key_type(Field_longlong::key_type1143,40406
  int reset(Field_longlong::reset1148,40653
  uint32 pack_length(Field_longlong::pack_length1159,40969
  bool can_be_compared_as_longlong(Field_longlong::can_be_compared_as_longlong1161,41048
  uint32 max_display_length(Field_longlong::max_display_length1162,41108
  virtual uchar *pack(Field_longlong::pack1163,41153
  virtual const uchar *unpack(Field_longlong::unpack1169,41369
class Field_float 1179,41622
  Field_float(Field_float::Field_float1181,41669
  Field_float(Field_float::Field_float1189,42056
  enum_field_types type(Field_float::type1194,42297
  enum ha_base_keytype key_type(Field_float::key_type1195,42357
  int reset(Field_float::reset1199,42558
  uint32 pack_length(Field_float::pack_length1206,42829
  uint row_pack_length(Field_float::row_pack_length1207,42884
class Field_double 1214,43034
  Field_double(Field_double::Field_double1216,43082
  Field_double(Field_double::Field_double1224,43466
  Field_double(Field_double::Field_double1229,43710
  enum_field_types type(Field_double::type1234,44003
  enum ha_base_keytype key_type(Field_double::key_type1235,44064
  int reset(Field_double::reset1239,44269
  uint32 pack_length(Field_double::pack_length1246,44541
  uint row_pack_length(Field_double::row_pack_length1247,44597
class Field_null 1256,44822
  static uchar null[Field_null::null1257,44859
  Field_null(Field_null::Field_null1259,44891
  enum_field_types type(Field_null::type1265,45118
  bool match_collation_to_optimize_range(Field_null::match_collation_to_optimize_range1266,45177
  int  store(Field_null::store1267,45244
  int store(Field_null::store1269,45331
  int store(Field_null::store1270,45381
  int store_decimal(Field_null::store_decimal1271,45450
  int reset(Field_null::reset1272,45517
  double val_real(Field_null::val_real1273,45551
  longlong val_int(Field_null::val_int1274,45591
  my_decimal *val_decimal(Field_null::val_decimal1275,45629
  String *val_str(Field_null::val_str1276,45683
  int cmp(Field_null::cmp1278,45770
  void sort_string(Field_null::sort_string1279,45825
  uint32 pack_length(Field_null::pack_length1280,45874
  uint size_of(Field_null::size_of1282,45953
  uint32 max_display_length(Field_null::max_display_length1283,46002
class Field_timestamp 1287,46051
  enum_field_types type(Field_timestamp::type1295,46404
  bool match_collation_to_optimize_range(Field_timestamp::match_collation_to_optimize_range1296,46468
  enum ha_base_keytype key_type(Field_timestamp::key_type1297,46535
  enum Item_result cmp_type Field_timestamp::cmp_type1298,46608
  enum Derivation derivation(Field_timestamp::derivation1299,46668
  uint repertoire(Field_timestamp::repertoire1300,46740
  CHARSET_INFO *charset(Field_timestamp::charset1301,46804
  bool binary(Field_timestamp::binary1302,46872
  int  reset(Field_timestamp::reset1306,47043
  uint32 pack_length(Field_timestamp::pack_length1313,47320
  bool can_be_compared_as_longlong(Field_timestamp::can_be_compared_as_longlong1315,47399
  bool zero_pack(Field_timestamp::zero_pack1316,47459
  virtual void set_default(Field_timestamp::set_default1318,47517
  inline long get_timestamp(Field_timestamp::get_timestamp1327,47768
  inline void store_timestamp(Field_timestamp::store_timestamp1339,48032
  uchar *pack(Field_timestamp::pack1353,48401
  const uchar *unpack(Field_timestamp::unpack1358,48578
class Field_year 1367,48800
  Field_year(Field_year::Field_year1369,48846
  enum_field_types type(Field_year::type1375,49112
  bool can_be_compared_as_longlong(Field_year::can_be_compared_as_longlong1384,49470
class Field_date 1388,49535
  Field_date(Field_date::Field_date1390,49580
  Field_date(Field_date::Field_date1396,49880
  enum_field_types type(Field_date::type1400,50110
  bool match_collation_to_optimize_range(Field_date::match_collation_to_optimize_range1401,50169
  enum ha_base_keytype key_type(Field_date::key_type1402,50236
  enum Item_result cmp_type Field_date::cmp_type1403,50309
  enum Derivation derivation(Field_date::derivation1404,50369
  uint repertoire(Field_date::repertoire1405,50441
  CHARSET_INFO *charset(Field_date::charset1406,50505
  bool binary(Field_date::binary1407,50573
  int reset(Field_date::reset1411,50741
  uint32 pack_length(Field_date::pack_length1419,51053
  bool can_be_compared_as_longlong(Field_date::can_be_compared_as_longlong1421,51132
  bool zero_pack(Field_date::zero_pack1422,51192
  uchar *pack(Field_date::pack1423,51231
  const uchar *unpack(Field_date::unpack1428,51408
class Field_newdate 1437,51630
  Field_newdate(Field_newdate::Field_newdate1439,51678
  Field_newdate(Field_newdate::Field_newdate1445,51961
  enum_field_types type(Field_newdate::type1449,52191
  enum_field_types real_type(Field_newdate::real_type1450,52250
  bool match_collation_to_optimize_range(Field_newdate::match_collation_to_optimize_range1451,52318
  enum ha_base_keytype key_type(Field_newdate::key_type1452,52385
  enum Item_result cmp_type Field_newdate::cmp_type1453,52455
  enum Derivation derivation(Field_newdate::derivation1454,52515
  uint repertoire(Field_newdate::repertoire1455,52587
  CHARSET_INFO *charset(Field_newdate::charset1456,52651
  bool binary(Field_newdate::binary1457,52719
  int reset(Field_newdate::reset1462,52948
  uint32 pack_length(Field_newdate::pack_length1469,53217
  bool can_be_compared_as_longlong(Field_newdate::can_be_compared_as_longlong1471,53296
  bool zero_pack(Field_newdate::zero_pack1472,53356
class Field_time 1478,53487
  Field_time(Field_time::Field_time1480,53532
  Field_time(Field_time::Field_time1486,53819
  enum_field_types type(Field_time::type1490,54035
  bool match_collation_to_optimize_range(Field_time::match_collation_to_optimize_range1491,54094
  enum ha_base_keytype key_type(Field_time::key_type1492,54161
  enum Item_result cmp_type Field_time::cmp_type1493,54230
  enum Derivation derivation(Field_time::derivation1494,54290
  uint repertoire(Field_time::repertoire1495,54362
  CHARSET_INFO *charset(Field_time::charset1496,54426
  bool binary(Field_time::binary1497,54494
  int reset(Field_time::reset1502,54720
  uint32 pack_length(Field_time::pack_length1511,55077
  bool can_be_compared_as_longlong(Field_time::can_be_compared_as_longlong1513,55156
  bool zero_pack(Field_time::zero_pack1514,55216
class Field_datetime 1518,55260
  Field_datetime(Field_datetime::Field_datetime1520,55309
  Field_datetime(Field_datetime::Field_datetime1526,55611
  enum_field_types type(Field_datetime::type1530,55839
  bool match_collation_to_optimize_range(Field_datetime::match_collation_to_optimize_range1531,55902
  enum ha_base_keytype key_type(Field_datetime::key_type1533,55991
  enum Item_result cmp_type Field_datetime::cmp_type1535,56071
  enum Derivation derivation(Field_datetime::derivation1536,56131
  uint repertoire(Field_datetime::repertoire1537,56203
  CHARSET_INFO *charset(Field_datetime::charset1538,56267
  bool binary(Field_datetime::binary1539,56335
  uint decimals(Field_datetime::decimals1540,56371
  int reset(Field_datetime::reset1545,56613
  uint32 pack_length(Field_datetime::pack_length1556,56929
  bool can_be_compared_as_longlong(Field_datetime::can_be_compared_as_longlong1558,57008
  bool zero_pack(Field_datetime::zero_pack1559,57068
  uchar *pack(Field_datetime::pack1562,57194
  const uchar *unpack(Field_datetime::unpack1567,57371
class Field_string 1576,57593
  bool can_alter_field_type;Field_string::can_alter_field_type1578,57644
  Field_string(Field_string::Field_string1579,57673
  Field_string(Field_string::Field_string1586,58015
  enum_field_types type(Field_string::type1592,58283
  bool match_collation_to_optimize_range(Field_string::match_collation_to_optimize_range1600,58588
  enum ha_base_keytype key_type(Field_string::key_type1601,58654
  bool zero_pack(Field_string::zero_pack1603,58757
  int reset(Field_string::reset1604,58796
  int store(Field_string::store1612,59061
  uint pack_length_from_metadata(Field_string::pack_length_from_metadata1624,59633
  uint row_pack_length(Field_string::row_pack_length1633,60039
  uint size_of(Field_string::size_of1639,60369
  enum_field_types real_type(Field_string::real_type1640,60418
  bool has_charset(Field_string::has_charset1641,60485
class Field_varstring 1650,60778
  static const uint MAX_SIZE;Field_varstring::MAX_SIZE1656,60928
  uint32 length_bytes;Field_varstring::length_bytes1658,61018
  Field_varstring(Field_varstring::Field_varstring1659,61041
  Field_varstring(Field_varstring::Field_varstring1670,61490
  enum_field_types type(Field_varstring::type1680,61845
  bool match_collation_to_optimize_range(Field_varstring::match_collation_to_optimize_range1681,61908
  uint row_pack_length(Field_varstring::row_pack_length1683,62015
  bool zero_pack(Field_varstring::zero_pack1684,62065
  int  reset(Field_varstring::reset1685,62104
  uint32 pack_length(Field_varstring::pack_length1686,62175
  uint32 key_length(Field_varstring::key_length1687,62251
  uint32 sort_length(Field_varstring::sort_length1688,62313
  int  store(Field_varstring::store1695,62586
  int cmp(Field_varstring::cmp1701,62858
  uint size_of(Field_varstring::size_of1719,63665
  enum_field_types real_type(Field_varstring::real_type1720,63714
  bool has_charset(Field_varstring::has_charset1721,63782
class Field_blob 1734,64242
  uint packlength;Field_blob::packlength1739,64371
  String value;Field_blob::value1744,64467
  Field_blob(Field_blob::Field_blob1750,64695
  Field_blob(Field_blob::Field_blob1758,64974
  Field_blob(Field_blob::Field_blob1773,65497
  enum_field_types type(Field_blob::type1776,65653
  bool match_collation_to_optimize_range(Field_blob::match_collation_to_optimize_range1777,65712
  enum ha_base_keytype key_type(Field_blob::key_type1778,65778
  int cmp(Field_blob::cmp1788,66215
  uint32 key_length(Field_blob::key_length1794,66529
  uint32 pack_length(Field_blob::pack_length1796,66616
  uint32 pack_length_no_ptr(Field_blob::pack_length_no_ptr1807,66934
  uint row_pack_length(Field_blob::row_pack_length1809,67006
  virtual uint32 max_data_length(Field_blob::max_data_length1811,67094
  int reset(Field_blob::reset1815,67203
  void reset_fields(Field_blob::reset_fields1816,67274
  uint32 get_field_buffer_size(Field_blob::get_field_buffer_size1817,67338
  void store_length(Field_blob::store_length1822,67542
  inline void store_length(Field_blob::store_length1826,67698
  uint32 get_packed_size(Field_blob::get_packed_size1839,68034
  inline uint32 get_length(Field_blob::get_length1842,68178
  uint32 get_length(Field_blob::get_length1845,68390
  inline void get_ptr(Field_blob::get_ptr1848,68559
  inline void get_ptr(Field_blob::get_ptr1852,68657
  inline void set_ptr(Field_blob::set_ptr1856,68782
  void set_ptr_offset(Field_blob::set_ptr_offset1861,68932
  inline void set_ptr(Field_blob::set_ptr1867,69177
  inline bool copy(Field_blob::copy1874,69430
  void free(Field_blob::free1893,70050
  inline void clear_temporary(Field_blob::clear_temporary1894,70082
  uint size_of(Field_blob::size_of1896,70204
  bool has_charset(Field_blob::has_charset1897,70253
  inline bool in_read_set(Field_blob::in_read_set1902,70439
  inline bool in_write_set(Field_blob::in_write_set1903,70523
class Field_geom 1910,70692
  enum geometry_type geom_type;Field_geom::geom_type1912,70738
  Field_geom(Field_geom::Field_geom1914,70771
  Field_geom(Field_geom::Field_geom1921,71172
  enum ha_base_keytype key_type(Field_geom::key_type1925,71415
  enum_field_types type(Field_geom::type1926,71489
  bool match_collation_to_optimize_range(Field_geom::match_collation_to_optimize_range1927,71553
  uint size_of(Field_geom::size_of1933,71835
  int reset(Field_geom::reset1939,72000
  geometry_type get_geometry_type(Field_geom::get_geometry_type1941,72068
class Field_enum 1946,72156
  uint packlength;Field_enum::packlength1948,72204
  TYPELIB *typelib;Field_enum::typelib1950,72231
  Field_enum(Field_enum::Field_enum1951,72251
  enum_field_types type(Field_enum::type1964,72800
  bool match_collation_to_optimize_range(Field_enum::match_collation_to_optimize_range1965,72862
  enum Item_result cmp_type Field_enum::cmp_type1966,72929
  enum Item_result cast_to_int_type Field_enum::cast_to_int_type1967,72989
  uint32 pack_length(Field_enum::pack_length1977,73406
  uint size_of(Field_enum::size_of1980,73539
  enum_field_types real_type(Field_enum::real_type1981,73588
  uint pack_length_from_metadata(Field_enum::pack_length_from_metadata1982,73653
  uint row_pack_length(Field_enum::row_pack_length1984,73747
  virtual bool zero_pack(Field_enum::zero_pack1985,73798
  bool optimize_range(Field_enum::optimize_range1986,73845
  bool has_charset(Field_enum::has_charset1988,73931
  CHARSET_INFO *sort_charset(Field_enum::sort_charset1990,74023
class Field_set 2003,74441
  Field_set(Field_set::Field_set2005,74486
  int  store(Field_set::store2019,75060
  virtual bool zero_pack(Field_set::zero_pack2022,75182
  uint size_of(Field_set::size_of2025,75302
  enum_field_types real_type(Field_set::real_type2026,75351
  bool has_charset(Field_set::has_charset2027,75415
  const String empty_set_string;Field_set::empty_set_string2029,75472
class Field_bit 2047,76020
  uchar *bit_ptr;Field_bit::bit_ptr2049,76060
  uchar bit_ofs;Field_bit::bit_ofs2050,76130
  uint bit_len;Field_bit::bit_len2051,76184
  uint bytes_in_rec;Field_bit::bytes_in_rec2052,76238
  enum_field_types type(Field_bit::type2056,76465
  enum ha_base_keytype key_type(Field_bit::key_type2057,76524
  uint32 key_length(Field_bit::key_length2058,76591
  uint32 max_data_length(Field_bit::max_data_length2059,76663
  uint32 max_display_length(Field_bit::max_display_length2060,76731
  uint size_of(Field_bit::size_of2061,76786
  Item_result result_type Field_bit::result_type2062,76835
  int reset(Field_bit::reset2063,76893
  virtual bool str_needs_quotes(Field_bit::str_needs_quotes2076,77344
  int cmp(Field_bit::cmp2078,77436
  int cmp_binary_offset(Field_bit::cmp_binary_offset2086,77685
  int key_cmp(Field_bit::key_cmp2089,77827
  void get_image(Field_bit::get_image2093,78005
  void set_image(Field_bit::set_image2095,78111
  void set_key_image(Field_bit::set_key_image2098,78292
  void sort_string(Field_bit::sort_string2100,78408
  uint32 pack_length(Field_bit::pack_length2102,78495
  uint32 pack_length_in_rec(Field_bit::pack_length_in_rec2103,78568
  uint row_pack_length(Field_bit::row_pack_length2105,78684
  void set_bit_ptr(Field_bit::set_bit_ptr2119,79359
  bool eq(Field_bit::eq2124,79477
  void move_field_offset(Field_bit::move_field_offset2131,79694
class Field_bit_as_char:Field_bit_as_char2151,80252
  enum ha_base_keytype key_type(Field_bit_as_char::key_type2156,80495
  uint size_of(Field_bit_as_char::size_of2157,80565
  int store(Field_bit_as_char::store2159,80679
  int store(Field_bit_as_char::store2160,80735
class Create_field 2170,80914
  const char *field_name;Create_field::field_name2173,80961
  const char *change;Create_field::change2174,80987
  const char *after;Create_field::after2175,81039
  LEX_STRING comment;Create_field::comment2176,81091
  Item	*def;Create_field::def2177,81136
  enum	enum_field_types sql_type;Create_field::sql_type2178,81169
  ulong length;Create_field::length2183,81319
  uint32 char_length;Create_field::char_length2188,81484
  uint  decimals,Create_field::decimals2189,81506
  uint  decimals, flags,Create_field::flags2189,81506
  uint  decimals, flags, pack_length,Create_field::pack_length2189,81506
  uint  decimals, flags, pack_length, key_length;Create_field::key_length2189,81506
  Field::utype unireg_check;Create_field::unireg_check2190,81556
  TYPELIB *interval;Create_field::interval2191,81585
  TYPELIB *save_interval;Create_field::save_interval2192,81633
  List<String> interval_list;Create_field::interval_list2194,81777
  CHARSET_INFO *charset;Create_field::charset2195,81807
  Field::geometry_type geom_type;Create_field::geom_type2196,81832
  Field *field;Create_field::field2197,81866
  uint8 row,Create_field::row2199,81905
  uint8 row,col,Create_field::col2199,81905
  uint8 row,col,sc_length,Create_field::sc_length2199,81905
  uint8 row,col,sc_length,interval_id;Create_field::interval_id2199,81905
  uint	offset,Create_field::offset2200,81968
  uint	offset,pack_flag;Create_field::pack_flag2200,81968
  Create_field(Create_field::Create_field2201,81993
  Create_field *clone(Create_field::clone2204,82139
  bool field_flags_are_binary(Create_field::field_flags_are_binary2220,82891
  ha_storage_media field_storage_type(Create_field::field_storage_type2225,82987
  column_format_type column_format(Create_field::column_format2231,83122
  const String empty_set_string;Create_field::empty_set_string2238,83265
class Send_field 2246,83351
  const char *db_name;Send_field::db_name2248,83397
  const char *table_name,Send_field::table_name2249,83420
  const char *table_name,*org_table_name;Send_field::org_table_name2249,83420
  const char *col_name,Send_field::col_name2250,83462
  const char *col_name,*org_col_name;Send_field::org_col_name2250,83462
  ulong length;Send_field::length2251,83500
  uint charsetnr,Send_field::charsetnr2252,83516
  uint charsetnr, flags,Send_field::flags2252,83516
  uint charsetnr, flags, decimals;Send_field::decimals2252,83516
  enum_field_types type;Send_field::type2253,83551
  Send_field(Send_field::Send_field2254,83576
class Copy_field 2262,83649
  typedef void Copy_func(Copy_field::Copy_func2267,83774
  uchar *from_ptr,Copy_field::from_ptr2270,83873
  uchar *from_ptr,*to_ptr;Copy_field::to_ptr2270,83873
  uchar *from_null_ptr,Copy_field::from_null_ptr2271,83900
  uchar *from_null_ptr,*to_null_ptr;Copy_field::to_null_ptr2271,83900
  my_bool *null_row;Copy_field::null_row2272,83937
  uint	from_bit,Copy_field::from_bit2273,83958
  uint	from_bit,to_bit;Copy_field::to_bit2273,83958
  uint from_length,Copy_field::from_length2291,84733
  uint from_length,to_length;Copy_field::to_length2291,84733
  Field *from_field,Copy_field::from_field2292,84763
  Field *from_field,*to_field;Copy_field::to_field2292,84763
  String tmp;Copy_field::tmp2293,84794
  Copy_field(Copy_field::Copy_field2295,84826
  ~Copy_field(Copy_field::~Copy_field2296,84844
#define FIELDFLAG_DECIMAL	2321,85717
#define FIELDFLAG_BINARY	2322,85746
#define FIELDFLAG_NUMBER	2323,85794
#define FIELDFLAG_ZEROFILL	2324,85822
#define FIELDFLAG_PACK	2325,85852
#define FIELDFLAG_INTERVAL	2326,85906
#define FIELDFLAG_BITFIELD	2327,85968
#define FIELDFLAG_BLOB	2328,86026
#define FIELDFLAG_GEOM	2329,86082
#define FIELDFLAG_TREAT_BIT_AS_CHAR 2331,86142
#define FIELDFLAG_LEFT_FULLSCREEN	2333,86219
#define FIELDFLAG_RIGHT_FULLSCREEN	2334,86258
#define FIELDFLAG_FORMAT_NUMBER	2335,86299
#define FIELDFLAG_NO_DEFAULT	2336,86367
#define FIELDFLAG_SUM	2337,86415
#define FIELDFLAG_MAYBE_NULL	2338,86476
#define FIELDFLAG_HEX_ESCAPE	2339,86527
#define FIELDFLAG_PACK_SHIFT	2340,86574
#define FIELDFLAG_DEC_SHIFT	2341,86606
#define FIELDFLAG_MAX_DEC	2342,86637
#define FIELDFLAG_NUM_SCREEN_TYPE	2343,86667
#define FIELDFLAG_ALFA_SCREEN_TYPE	2344,86708
#define MTYP_TYPENR(2346,86751
#define f_is_dec(2348,86819
#define f_is_num(2349,86866
#define f_is_zerofill(2350,86912
#define f_is_packed(2351,86964
#define f_packtype(2352,87011
#define f_decimals(2353,87071
#define f_is_alpha(2354,87155
#define f_is_binary(2355,87193
#define f_is_enum(2356,87272
#define f_is_bitfield(2357,87376
#define f_is_blob(2358,87480
#define f_is_geom(2359,87566
#define f_is_equ(2360,87652
#define f_settype(2361,87709
#define f_maybe_null(2362,87767
#define f_no_default(2363,87819
#define f_bit_as_char(2364,87871
#define f_is_hex_escape(2365,87939

sql/filesort.h,81
#define FILESORT_INCLUDED17,772
typedef struct st_sort_field SORT_FIELD;27,990

sql/frm_crypt.h,34
#define FRM_CRYPT_INCLUDED17,773

sql/gstream.h,1237
#define GSTREAM_INCLUDED2,25
typedef struct charset_info_st CHARSET_INFO;24,1007
typedef struct st_mysql_lex_string LEX_STRING;25,1052
class Gis_read_stream27,1100
  enum enum_tok_typesGis_read_stream::enum_tok_types30,1132
    unknown,Gis_read_stream::enum_tok_types::unknown32,1158
    eostream,Gis_read_stream::enum_tok_types::eostream33,1171
    word,Gis_read_stream::enum_tok_types::word34,1185
    numeric,Gis_read_stream::enum_tok_types::numeric35,1195
    l_bra,Gis_read_stream::enum_tok_types::l_bra36,1208
    r_bra,Gis_read_stream::enum_tok_types::r_bra37,1219
    commaGis_read_stream::enum_tok_types::comma38,1230
  Gis_read_stream(Gis_read_stream::Gis_read_stream41,1246
  Gis_read_stream(Gis_read_stream::Gis_read_stream44,1402
  ~Gis_read_stream(Gis_read_stream::~Gis_read_stream46,1475
  inline void skip_space(Gis_read_stream::skip_space56,1675
  inline bool skip_char(Gis_read_stream::skip_char62,1857
  char *get_error_msg(Gis_read_stream::get_error_msg73,2111
  const char *m_cur;Gis_read_stream::m_cur81,2228
  const char *m_limit;Gis_read_stream::m_limit82,2249
  char *m_err_msg;Gis_read_stream::m_err_msg83,2272
  CHARSET_INFO *m_charset;Gis_read_stream::m_charset84,2291

sql/ha_ndbcluster_binlog.h,2065
#define HA_NDBCLUSTER_BINLOG_INCLUDED2,38
typedef NdbDictionary::Object NDBOBJ;23,894
typedef NdbDictionary::Column NDBCOL;24,932
typedef NdbDictionary::Table NDBTAB;25,970
typedef NdbDictionary::Index  NDBINDEX;26,1007
typedef NdbDictionary::Dictionary  NDBDICT;27,1047
typedef NdbDictionary::Event  NDBEVENT;28,1091
#define IS_TMP_PREFIX(30,1132
#define INJECTOR_EVENT_LEN 32,1190
#define NDB_INVALID_SCHEMA_OBJECT 34,1222
#define NDB_ANYVALUE_FOR_NOLOGGING 37,1311
#define NDB_ANYVALUE_RESERVED 38,1357
enum SCHEMA_OP_TYPE48,1603
  SOT_DROP_TABLE=SCHEMA_OP_TYPE::SOT_DROP_TABLE50,1625
  SOT_CREATE_TABLE=SCHEMA_OP_TYPE::SOT_CREATE_TABLE51,1646
  SOT_RENAME_TABLE_NEW=SCHEMA_OP_TYPE::SOT_RENAME_TABLE_NEW52,1669
  SOT_ALTER_TABLE=SCHEMA_OP_TYPE::SOT_ALTER_TABLE53,1696
  SOT_DROP_DB=SCHEMA_OP_TYPE::SOT_DROP_DB54,1718
  SOT_CREATE_DB=SCHEMA_OP_TYPE::SOT_CREATE_DB55,1736
  SOT_ALTER_DB=SCHEMA_OP_TYPE::SOT_ALTER_DB56,1756
  SOT_CLEAR_SLOCK=SCHEMA_OP_TYPE::SOT_CLEAR_SLOCK57,1775
  SOT_TABLESPACE=SCHEMA_OP_TYPE::SOT_TABLESPACE58,1797
  SOT_LOGFILE_GROUP=SCHEMA_OP_TYPE::SOT_LOGFILE_GROUP59,1818
  SOT_RENAME_TABLE=SCHEMA_OP_TYPE::SOT_RENAME_TABLE60,1842
  SOT_TRUNCATE_TABLE=SCHEMA_OP_TYPE::SOT_TRUNCATE_TABLE61,1866
const uint max_ndb_nodes=64,1895
static const char *ha_ndb_ext=ha_ndb_ext66,1947
static const char share_prefix[share_prefix67,1985
class Ndb_table_guard69,2026
  Ndb_table_guard(Ndb_table_guard::Ndb_table_guard72,2058
  ~Ndb_table_guard(Ndb_table_guard::~Ndb_table_guard81,2316
  const NDBTAB *get_table(Ndb_table_guard::get_table92,2603
  void invalidate(Ndb_table_guard::invalidate93,2652
  const NDBTAB *release(Ndb_table_guard::release94,2693
  const NDBTAB *m_ndbtab;Ndb_table_guard::m_ndbtab103,2905
  NDBDICT *m_dict;Ndb_table_guard::m_dict104,2931
  int m_invalidate;Ndb_table_guard::m_invalidate105,2950
inline NDB_SHARE *get_share(get_share209,6960
inline NDB_SHARE *get_share(get_share217,7240
inline void free_share(222,7329
get_thd_ndb(229,7459
set_thd_ndb(234,7556

sql/ha_ndbcluster_cond.h,6338
#define HA_NDBCLUSTER_COND_INCLUDED2,36
typedef enum ndb_item_type 35,1233
  NDB_VALUE 36,1262
  NDB_FIELD 37,1315
  NDB_FUNCTION 38,1369
  NDB_END_COND 39,1426
} NDB_ITEM_TYPE;40,1479
typedef enum ndb_func_type 42,1497
  NDB_EQ_FUNC 43,1526
  NDB_NE_FUNC 44,1545
  NDB_LT_FUNC 45,1564
  NDB_LE_FUNC 46,1583
  NDB_GT_FUNC 47,1602
  NDB_GE_FUNC 48,1621
  NDB_ISNULL_FUNC 49,1640
  NDB_ISNOTNULL_FUNC 50,1663
  NDB_LIKE_FUNC 51,1689
  NDB_NOTLIKE_FUNC 52,1710
  NDB_NOT_FUNC 53,1734
  NDB_UNKNOWN_FUNC 54,1755
  NDB_COND_AND_FUNC 55,1780
  NDB_COND_OR_FUNC 56,1806
  NDB_UNSUPPORTED_FUNC 57,1831
} NDB_FUNC_TYPE;58,1859
typedef union ndb_item_qualification 60,1877
  Item::Type value_type;ndb_item_qualification::value_type61,1916
  enum_field_types field_type;ndb_item_qualification::field_type62,1942
  NDB_FUNC_TYPE function_type;ndb_item_qualification::function_type63,2004
} NDB_ITEM_QUALIFICATION;64,2065
typedef struct ndb_item_field_value 66,2092
  Field* field;ndb_item_field_value::field67,2130
  int column_no;ndb_item_field_value::column_no68,2146
} NDB_ITEM_FIELD_VALUE;69,2163
typedef union ndb_item_value 71,2188
  const Item *item;ndb_item_value::item72,2219
  NDB_ITEM_FIELD_VALUE *field_value;ndb_item_value::field_value73,2239
  uint arg_count;ndb_item_value::arg_count74,2276
} NDB_ITEM_VALUE;75,2294
struct negated_function_mapping77,2313
  NDB_FUNC_TYPE pos_fun;negated_function_mapping::pos_fun79,2347
  NDB_FUNC_TYPE neg_fun;negated_function_mapping::neg_fun80,2372
static const negated_function_mapping neg_map[neg_map87,2534
class Ndb_item 119,3806
  Ndb_item(Ndb_item::Ndb_item122,3850
  Ndb_item(Ndb_item::Ndb_item123,3908
  Ndb_item(Ndb_item::Ndb_item148,4698
  Ndb_item(Ndb_item::Ndb_item156,4983
  Ndb_item(Ndb_item::Ndb_item163,5246
  ~Ndb_item(Ndb_item::~Ndb_item169,5434
  uint32 pack_length(Ndb_item::pack_length178,5569
  Field * get_field(Ndb_item::get_field194,5887
  int get_field_no(Ndb_item::get_field_no196,5948
  int argument_count(Ndb_item::argument_count198,6012
  const char* get_val(Ndb_item::get_val203,6075
  void save_in_field(Ndb_item::save_in_field219,6393
  static NDB_FUNC_TYPE item_func_to_ndb_func(Ndb_item::item_func_to_ndb_func233,6796
  static NDB_FUNC_TYPE negate(Ndb_item::negate254,7783
  NDB_ITEM_TYPE type;Ndb_item::type261,7942
  NDB_ITEM_QUALIFICATION qualification;Ndb_item::qualification262,7964
  NDB_ITEM_VALUE value;Ndb_item::value264,8014
class Ndb_cond 271,8163
  Ndb_cond(Ndb_cond::Ndb_cond274,8208
  ~Ndb_cond(Ndb_cond::~Ndb_cond275,8266
  Ndb_item *ndb_item;Ndb_cond::ndb_item294,8653
  Ndb_cond *next;Ndb_cond::next295,8675
  Ndb_cond *prev;Ndb_cond::prev296,8693
class Ndb_cond_stack 306,9031
  Ndb_cond_stack(Ndb_cond_stack::Ndb_cond_stack309,9082
  ~Ndb_cond_stack(Ndb_cond_stack::~Ndb_cond_stack310,9134
  Ndb_cond *ndb_cond;Ndb_cond_stack::ndb_cond317,9266
  Ndb_cond_stack *next;Ndb_cond_stack::next318,9288
class Ndb_rewrite_context 321,9316
  Ndb_rewrite_context(Ndb_rewrite_context::Ndb_rewrite_context324,9371
  ~Ndb_rewrite_context(Ndb_rewrite_context::~Ndb_rewrite_context326,9469
  const Item_func *func_item;Ndb_rewrite_context::func_item330,9529
  const Item *left_hand_item;Ndb_rewrite_context::left_hand_item331,9559
  uint count;Ndb_rewrite_context::count332,9589
  Ndb_rewrite_context *next;Ndb_rewrite_context::next333,9603
class Ndb_cond_traverse_context 343,9968
   Ndb_cond_traverse_context(Ndb_cond_traverse_context::Ndb_cond_traverse_context346,10030
  ~Ndb_cond_traverse_context(Ndb_cond_traverse_context::~Ndb_cond_traverse_context360,10544
  void expect(Ndb_cond_traverse_context::expect367,10745
  void dont_expect(Ndb_cond_traverse_context::dont_expect372,10892
  bool expecting(Ndb_cond_traverse_context::expecting376,10986
  void expect_nothing(Ndb_cond_traverse_context::expect_nothing380,11082
  bool expecting_nothing(Ndb_cond_traverse_context::expecting_nothing384,11151
  void expect_only(Ndb_cond_traverse_context::expect_only388,11232
  void expect_field_type(Ndb_cond_traverse_context::expect_field_type394,11318
  void expect_all_field_types(Ndb_cond_traverse_context::expect_all_field_types398,11433
  bool expecting_field_type(Ndb_cond_traverse_context::expecting_field_type402,11519
  void expect_no_field_type(Ndb_cond_traverse_context::expect_no_field_type406,11643
  bool expecting_no_field_type(Ndb_cond_traverse_context::expecting_no_field_type410,11729
  void expect_only_field_type(Ndb_cond_traverse_context::expect_only_field_type414,11827
  void expect_field_result(Ndb_cond_traverse_context::expect_field_result420,11951
  bool expecting_field_result(Ndb_cond_traverse_context::expecting_field_result424,12069
  void expect_no_field_result(Ndb_cond_traverse_context::expect_no_field_result428,12196
  bool expecting_no_field_result(Ndb_cond_traverse_context::expecting_no_field_result432,12286
  void expect_only_field_result(Ndb_cond_traverse_context::expect_only_field_result436,12388
  void expect_collation(Ndb_cond_traverse_context::expect_collation441,12512
  bool expecting_collation(Ndb_cond_traverse_context::expecting_collation445,12584
  TABLE* table;Ndb_cond_traverse_context::table453,12744
  const NdbDictionary::Table *ndb_table;Ndb_cond_traverse_context::ndb_table454,12760
  bool supported;Ndb_cond_traverse_context::supported455,12801
  Ndb_cond_stack* stack_ptr;Ndb_cond_traverse_context::stack_ptr456,12819
  Ndb_cond* cond_ptr;Ndb_cond_traverse_context::cond_ptr457,12848
  MY_BITMAP expect_mask;Ndb_cond_traverse_context::expect_mask458,12870
  MY_BITMAP expect_field_type_mask;Ndb_cond_traverse_context::expect_field_type_mask459,12895
  MY_BITMAP expect_field_result_mask;Ndb_cond_traverse_context::expect_field_result_mask460,12931
  uint skip;Ndb_cond_traverse_context::skip461,12969
  CHARSET_INFO* collation;Ndb_cond_traverse_context::collation462,12982
  Ndb_rewrite_context *rewrite_stack;Ndb_cond_traverse_context::rewrite_stack463,13009
class ha_ndbcluster_cond468,13073
  ha_ndbcluster_cond(ha_ndbcluster_cond::ha_ndbcluster_cond471,13108
  ~ha_ndbcluster_cond(ha_ndbcluster_cond::~ha_ndbcluster_cond474,13160
  Ndb_cond_stack *m_cond_stack;ha_ndbcluster_cond::m_cond_stack497,14242

sql/ha_ndbcluster.h,9702
#define HA_NDBCLUSTER_INCLUDED2,31
#define IS_NDB_BLOB_PREFIX(31,1148
#define NDB_HIDDEN_PRIMARY_KEY_LENGTH 36,1254
typedef enum ndb_index_type 59,1877
  UNDEFINED_INDEX ndb_index_type::UNDEFINED_INDEX60,1907
  PRIMARY_KEY_INDEX ndb_index_type::PRIMARY_KEY_INDEX61,1930
  PRIMARY_KEY_ORDERED_INDEX ndb_index_type::PRIMARY_KEY_ORDERED_INDEX62,1955
  UNIQUE_INDEX ndb_index_type::UNIQUE_INDEX63,1988
  UNIQUE_ORDERED_INDEX ndb_index_type::UNIQUE_ORDERED_INDEX64,2008
  ORDERED_INDEX ndb_index_type::ORDERED_INDEX65,2036
} NDB_INDEX_TYPE;66,2056
typedef enum ndb_index_status 68,2075
  UNDEFINED ndb_index_status::UNDEFINED69,2107
  ACTIVE ndb_index_status::ACTIVE70,2124
  TO_BE_DROPPED ndb_index_status::TO_BE_DROPPED71,2138
} NDB_INDEX_STATUS;72,2158
typedef struct ndb_index_data 74,2179
  NDB_INDEX_TYPE type;ndb_index_data::type75,2211
  NDB_INDEX_STATUS status;ndb_index_data::status76,2234
  const NdbDictionary::Index *index;ndb_index_data::index77,2263
  const NdbDictionary::Index *unique_index;ndb_index_data::unique_index78,2300
  unsigned char *unique_index_attrid_map;ndb_index_data::unique_index_attrid_map79,2344
  bool null_in_unique_index;ndb_index_data::null_in_unique_index80,2386
  NdbIndexStat* index_stat;ndb_index_data::index_stat82,2473
  uint index_stat_cache_entries;ndb_index_data::index_stat_cache_entries83,2501
  uint index_stat_update_freq;ndb_index_data::index_stat_update_freq85,2596
  uint index_stat_query_count;ndb_index_data::index_stat_query_count86,2627
} NDB_INDEX_DATA;87,2658
typedef enum ndb_write_op 89,2677
  NDB_INSERT ndb_write_op::NDB_INSERT90,2705
  NDB_UPDATE ndb_write_op::NDB_UPDATE91,2723
  NDB_PK_UPDATE ndb_write_op::NDB_PK_UPDATE92,2741
} NDB_WRITE_OP;93,2761
typedef union { const NdbRecAttr *rec;::rec95,2778
typedef union { const NdbRecAttr *rec; NdbBlob *blob;::blob95,2778
typedef union { const NdbRecAttr *rec; NdbBlob *blob; void *ptr;::ptr95,2778
typedef union { const NdbRecAttr *rec; NdbBlob *blob; void *ptr; } NdbValue;95,2778
  NSS_INITIAL=::NSS_INITIAL102,3039
  NSS_DROPPED,::NSS_DROPPED103,3057
  NSS_ALTERED ::NSS_ALTERED104,3072
} NDB_SHARE_STATE;105,3087
typedef struct st_ndbcluster_share 107,3107
  NDB_SHARE_STATE state;st_ndbcluster_share::state108,3144
  MEM_ROOT mem_root;st_ndbcluster_share::mem_root109,3169
  THR_LOCK lock;st_ndbcluster_share::lock110,3190
  mysql_mutex_t mutex;st_ndbcluster_share::mutex111,3207
  char *key;st_ndbcluster_share::key112,3230
  uint key_length;st_ndbcluster_share::key_length113,3243
  THD *util_lock;st_ndbcluster_share::util_lock114,3262
  uint use_count;st_ndbcluster_share::use_count115,3280
  uint commit_count_lock;st_ndbcluster_share::commit_count_lock116,3298
  ulonglong commit_count;st_ndbcluster_share::commit_count117,3324
  char *db;st_ndbcluster_share::db118,3350
  char *table_name;st_ndbcluster_share::table_name119,3362
  Ndb::TupleIdRange tuple_id_range;st_ndbcluster_share::tuple_id_range120,3382
  uint32 connect_count;st_ndbcluster_share::connect_count122,3441
  uint32 flags;st_ndbcluster_share::flags123,3465
  NdbEventOperation *op;st_ndbcluster_share::op124,3481
  NdbEventOperation *op_old;st_ndbcluster_share::op_old125,3506
  char *old_names;st_ndbcluster_share::old_names126,3555
  TABLE_SHARE *table_share;st_ndbcluster_share::table_share127,3594
  TABLE *table;st_ndbcluster_share::table128,3622
  uchar *record[st_ndbcluster_share::record129,3638
  NdbValue *ndb_value[st_ndbcluster_share::ndb_value130,3709
  MY_BITMAP *subscriber_bitmap;st_ndbcluster_share::subscriber_bitmap131,3735
} NDB_SHARE;133,3774
get_ndb_share_state(137,3811
set_ndb_share_state(148,4002
struct Ndb_tuple_id_range_guard 155,4163
  Ndb_tuple_id_range_guard(Ndb_tuple_id_range_guard::Ndb_tuple_id_range_guard156,4197
  ~Ndb_tuple_id_range_guard(Ndb_tuple_id_range_guard::~Ndb_tuple_id_range_guard161,4340
  NDB_SHARE* share;Ndb_tuple_id_range_guard::share164,4415
  Ndb::TupleIdRange& range;Ndb_tuple_id_range_guard::range165,4435
#define NSF_HIDDEN_PK 170,4512
#define NSF_BLOB_FLAG 171,4571
#define NSF_NO_BINLOG 172,4627
typedef enum ndb_query_state_bits 175,4695
  NDB_QUERY_NORMAL ndb_query_state_bits::NDB_QUERY_NORMAL176,4731
  NDB_QUERY_MULTI_READ_RANGE ndb_query_state_bits::NDB_QUERY_MULTI_READ_RANGE177,4755
} NDB_QUERY_STATE_BITS;178,4788
enum THD_NDB_OPTIONS184,4874
  TNO_NO_LOG_SCHEMA_OP=THD_NDB_OPTIONS::TNO_NO_LOG_SCHEMA_OP186,4897
enum THD_NDB_TRANS_OPTIONS189,4932
  TNTO_INJECTED_APPLY_STATUS=THD_NDB_TRANS_OPTIONS::TNTO_INJECTED_APPLY_STATUS191,4961
  ,TNTO_NO_LOGGING=THD_NDB_TRANS_OPTIONS::TNTO_NO_LOGGING192,4998
struct Ndb_local_table_statistics 195,5039
  int no_uncommitted_rows_count;Ndb_local_table_statistics::no_uncommitted_rows_count196,5075
  ulong last_count;Ndb_local_table_statistics::last_count197,5108
  ha_rows records;Ndb_local_table_statistics::records198,5128
class Thd_ndb 201,5151
  Ndb *ndb;Thd_ndb::ndb209,5233
  ulong count;Thd_ndb::count210,5245
  uint lock_count;Thd_ndb::lock_count211,5260
  uint start_stmt_count;Thd_ndb::start_stmt_count212,5279
  NdbTransaction *trans;Thd_ndb::trans213,5304
  bool m_error;Thd_ndb::m_error214,5329
  bool m_slow_path;Thd_ndb::m_slow_path215,5345
  int m_error_code;Thd_ndb::m_error_code216,5365
  uint32 m_query_id;Thd_ndb::m_query_id217,5385
  uint32 options;Thd_ndb::options218,5446
  uint32 trans_options;Thd_ndb::trans_options219,5464
  List<NDB_SHARE> changed_tables;Thd_ndb::changed_tables220,5488
  uint query_state;Thd_ndb::query_state221,5522
  HASH open_tables;Thd_ndb::open_tables222,5542
class ha_ndbcluster:ha_ndbcluster225,5566
  ha_rows estimate_rows_upper_bound(ha_ndbcluster::estimate_rows_upper_bound275,7372
  virtual bool is_fatal_error(ha_ndbcluster::is_fatal_error309,8927
  NdbTransaction *m_active_trans;ha_ndbcluster::m_active_trans511,17156
  NdbScanOperation *m_active_cursor;ha_ndbcluster::m_active_cursor512,17190
  const NdbDictionary::Table *m_table;ha_ndbcluster::m_table513,17227
  struct Ndb_local_table_statistics *m_table_info;ha_ndbcluster::m_table_info514,17266
  struct Ndb_local_table_statistics m_table_info_instance;ha_ndbcluster::m_table_info_instance515,17317
  char m_dbname[ha_ndbcluster::m_dbname516,17376
  char m_tabname[ha_ndbcluster::m_tabname518,17440
  ulonglong m_table_flags;ha_ndbcluster::m_table_flags519,17470
  THR_LOCK_DATA m_lock;ha_ndbcluster::m_lock520,17497
  bool m_lock_tuple;ha_ndbcluster::m_lock_tuple521,17521
  NDB_SHARE *m_share;ha_ndbcluster::m_share522,17542
  NDB_INDEX_DATA  m_index[ha_ndbcluster::m_index523,17564
  NdbValue m_value[ha_ndbcluster::m_value525,17641
  uchar m_ref[ha_ndbcluster::m_ref526,17690
  partition_info *m_part_info;ha_ndbcluster::m_part_info527,17736
  uint32 m_part_id;ha_ndbcluster::m_part_id528,17767
  uchar *m_rec0;ha_ndbcluster::m_rec0529,17787
  Field **m_part_field_array;ha_ndbcluster::m_part_field_array530,17804
  bool m_use_partition_function;ha_ndbcluster::m_use_partition_function531,17834
  bool m_sorted;ha_ndbcluster::m_sorted532,17867
  bool m_use_write;ha_ndbcluster::m_use_write533,17884
  bool m_ignore_dup_key;ha_ndbcluster::m_ignore_dup_key534,17904
  bool m_has_unique_index;ha_ndbcluster::m_has_unique_index535,17929
  bool m_primary_key_update;ha_ndbcluster::m_primary_key_update536,17956
  bool m_write_op;ha_ndbcluster::m_write_op537,17985
  bool m_ignore_no_key;ha_ndbcluster::m_ignore_no_key538,18004
  ha_rows m_rows_to_insert;ha_ndbcluster::m_rows_to_insert539,18028
  ha_rows m_rows_inserted;ha_ndbcluster::m_rows_inserted540,18115
  ha_rows m_bulk_insert_rows;ha_ndbcluster::m_bulk_insert_rows541,18142
  ha_rows m_rows_changed;ha_ndbcluster::m_rows_changed542,18172
  bool m_bulk_insert_not_flushed;ha_ndbcluster::m_bulk_insert_not_flushed543,18198
  bool m_delete_cannot_batch;ha_ndbcluster::m_delete_cannot_batch544,18232
  bool m_update_cannot_batch;ha_ndbcluster::m_update_cannot_batch545,18262
  ha_rows m_ops_pending;ha_ndbcluster::m_ops_pending546,18292
  bool m_skip_auto_increment;ha_ndbcluster::m_skip_auto_increment547,18317
  bool m_blobs_pending;ha_ndbcluster::m_blobs_pending548,18347
  bool m_slow_path;ha_ndbcluster::m_slow_path549,18371
  my_ptrdiff_t m_blobs_offset;ha_ndbcluster::m_blobs_offset550,18391
  uchar *m_blobs_buffer;ha_ndbcluster::m_blobs_buffer552,18457
  uint32 m_blobs_buffer_size;ha_ndbcluster::m_blobs_buffer_size553,18482
  uint m_dupkey;ha_ndbcluster::m_dupkey554,18512
  bool m_ha_not_exact_count;ha_ndbcluster::m_ha_not_exact_count556,18577
  bool m_force_send;ha_ndbcluster::m_force_send557,18606
  ha_rows m_autoincrement_prefetch;ha_ndbcluster::m_autoincrement_prefetch558,18627
  bool m_transaction_on;ha_ndbcluster::m_transaction_on559,18663
  ha_ndbcluster_cond *m_cond;ha_ndbcluster::m_cond561,18689
  bool m_disable_multi_read;ha_ndbcluster::m_disable_multi_read562,18719
  uchar *m_multi_range_result_ptr;ha_ndbcluster::m_multi_range_result_ptr563,18748
  KEY_MULTI_RANGE *m_multi_ranges;ha_ndbcluster::m_multi_ranges564,18783
  KEY_MULTI_RANGE *m_multi_range_defined;ha_ndbcluster::m_multi_range_defined565,18818
  const NdbOperation *m_current_multi_operation;ha_ndbcluster::m_current_multi_operation566,18860
  NdbIndexScanOperation *m_multi_cursor;ha_ndbcluster::m_multi_cursor567,18909
  uchar *m_multi_range_cursor_result_ptr;ha_ndbcluster::m_multi_range_cursor_result_ptr568,18950
static const char ndbcluster_hton_name[ndbcluster_hton_name583,19568
static const int ndbcluster_hton_name_length=584,19624

sql/ha_ndbcluster_tables.h,270
#define HA_NDBCLUSTER_TABLES_INCLUDED2,38
#define NDB_REP_DB 20,768
#define OLD_NDB_REP_DB 21,800
#define NDB_REP_TABLE 22,834
#define NDB_APPLY_TABLE 23,877
#define OLD_NDB_APPLY_TABLE 24,920
#define NDB_SCHEMA_TABLE 25,963
#define OLD_NDB_SCHEMA_TABLE 26,1001

sql/handler.h,40413
#define HANDLER_INCLUDED2,25
#define HA_ADMIN_ALREADY_DONE	41,1380
#define HA_ADMIN_OK 42,1414
#define HA_ADMIN_NOT_IMPLEMENTED 43,1450
#define HA_ADMIN_FAILED	44,1486
#define HA_ADMIN_CORRUPT 45,1515
#define HA_ADMIN_INTERNAL_ERROR 46,1551
#define HA_ADMIN_INVALID 47,1587
#define HA_ADMIN_REJECT 48,1623
#define HA_ADMIN_TRY_ALTER 49,1659
#define HA_ADMIN_WRONG_CHECKSUM 50,1695
#define HA_ADMIN_NOT_BASE_TABLE 51,1731
#define HA_ADMIN_NEEDS_UPGRADE 52,1767
#define HA_ADMIN_NEEDS_ALTER 53,1803
#define HA_ADMIN_NEEDS_CHECK 54,1839
enum enum_alter_inplace_result 62,2029
  HA_ALTER_ERROR,63,2062
  HA_ALTER_INPLACE_NOT_SUPPORTED,64,2080
  HA_ALTER_INPLACE_EXCLUSIVE_LOCK,65,2114
  HA_ALTER_INPLACE_SHARED_LOCK_AFTER_PREPARE,66,2149
  HA_ALTER_INPLACE_SHARED_LOCK,67,2195
  HA_ALTER_INPLACE_NO_LOCK_AFTER_PREPARE,68,2227
  HA_ALTER_INPLACE_NO_LOCK69,2269
#define HA_NO_TRANSACTIONS 74,2358
#define HA_PARTIAL_COLUMN_READ 75,2433
#define HA_TABLE_SCAN_ON_INDEX 76,2511
#define HA_REC_NOT_IN_SEQ 85,2916
#define HA_CAN_GEOMETRY 86,2956
#define HA_FAST_KEY_READ 92,3219
#define HA_REQUIRES_KEY_COLUMNS_FOR_DELETE 97,3381
#define HA_NULL_IN_KEY 98,3433
#define HA_DUPLICATE_POS 99,3507
#define HA_NO_BLOBS 100,3584
#define HA_CAN_INDEX_BLOBS 101,3652
#define HA_AUTO_PART_KEY 102,3693
#define HA_REQUIRE_PRIMARY_KEY 103,3773
#define HA_STATS_RECORDS_IS_EXACT 104,3853
#define HA_CAN_INSERT_DELAYED 109,4019
#define HA_PRIMARY_KEY_IN_READ_INDEX 115,4233
#define HA_PRIMARY_KEY_REQUIRED_FOR_POSITION 123,4573
#define HA_CAN_RTREEKEYS 124,4629
#define HA_NOT_DELETE_WITH_CACHE 125,4670
#define HA_PRIMARY_KEY_REQUIRED_FOR_DELETE 130,4873
#define HA_NO_PREFIX_CHAR_KEYS 131,4926
#define HA_CAN_FULLTEXT 132,4967
#define HA_CAN_SQL_HANDLER 133,5008
#define HA_NO_AUTO_INCREMENT 134,5049
#define HA_HAS_CHECKSUM 135,5090
#define HA_FILE_BASED	137,5206
#define HA_NO_VARCHAR	138,5245
#define HA_CAN_BIT_FIELD 139,5284
#define HA_NEED_READ_RANGE_BUFFER 140,5351
#define HA_ANY_INDEX_MAY_BE_UNIQUE 141,5422
#define HA_NO_COPY_ON_ALTER 142,5467
#define HA_HAS_RECORDS	143,5512
#define HA_HAS_OWN_BINLOGGING 145,5633
#define HA_BINLOG_ROW_CAPABLE 150,5763
#define HA_BINLOG_STMT_CAPABLE 151,5808
#define HA_DUPLICATE_KEY_NOT_IN_ORDER 174,6547
#define HA_CAN_REPAIR 180,6828
#define HA_CAN_WRITE_DURING_OPTIMIZE 182,6884
#define HA_BINLOG_FLAGS 188,7023
#define HA_READ_NEXT 191,7168
#define HA_READ_PREV 192,7240
#define HA_READ_ORDER 193,7308
#define HA_READ_RANGE 194,7388
#define HA_ONLY_WHOLE_INDEX	195,7466
#define HA_KEYREAD_ONLY 196,7531
#define HA_CLUSTERED_INDEX 201,7723
#define HA_INPLACE_ADD_INDEX_NO_READ_WRITE 214,8175
#define HA_INPLACE_DROP_INDEX_NO_READ_WRITE 215,8236
#define HA_INPLACE_ADD_UNIQUE_INDEX_NO_READ_WRITE 216,8297
#define HA_INPLACE_DROP_UNIQUE_INDEX_NO_READ_WRITE 217,8358
#define HA_INPLACE_ADD_PK_INDEX_NO_READ_WRITE 218,8419
#define HA_INPLACE_DROP_PK_INDEX_NO_READ_WRITE 219,8480
#define HA_INPLACE_ADD_INDEX_NO_WRITE 226,8814
#define HA_INPLACE_DROP_INDEX_NO_WRITE 227,8875
#define HA_INPLACE_ADD_UNIQUE_INDEX_NO_WRITE 228,8936
#define HA_INPLACE_DROP_UNIQUE_INDEX_NO_WRITE 229,8997
#define HA_INPLACE_ADD_PK_INDEX_NO_WRITE 230,9058
#define HA_INPLACE_DROP_PK_INDEX_NO_WRITE 231,9120
#define HA_PARTITION_FUNCTION_SUPPORTED 257,10473
#define HA_FAST_CHANGE_PARTITION 258,10532
#define HA_PARTITION_ONE_PHASE 259,10591
#define HA_KEY_SCAN_NOT_ROR 265,10772
#define HA_KEY_SWITCH_NONUNIQ 268,10854
#define HA_KEY_SWITCH_ALL 269,10891
#define HA_KEY_SWITCH_NONUNIQ_SAVE 270,10928
#define HA_KEY_SWITCH_ALL_SAVE 271,10965
#define MAX_HA 280,11267
#define HA_SLOT_UNDEF 287,11442
#define HA_OPEN_KEYFILE	294,11586
#define HA_OPEN_RNDFILE	295,11613
#define HA_GET_INDEX	296,11640
#define HA_GET_INFO	297,11664
#define HA_READ_ONLY	298,11719
#define HA_TRY_READ_ONLY	300,11827
#define HA_WAIT_IF_LOCKED	301,11855
#define HA_ABORT_IF_LOCKED	302,11913
#define HA_BLOCK_LOCK	303,11973
#define HA_OPEN_TEMPORARY	304,12039
#define HA_KEY_NULL_LENGTH	307,12098
#define HA_KEY_BLOB_LENGTH	308,12127
#define HA_LEX_CREATE_TMP_TABLE	310,12157
#define HA_LEX_CREATE_IF_NOT_EXISTS 311,12191
#define HA_LEX_CREATE_TABLE_LIKE 312,12229
#define HA_OPTION_NO_CHECKSUM	313,12264
#define HA_OPTION_NO_DELAY_KEY_WRITE 314,12305
#define HA_MAX_REC_LENGTH	315,12353
#define HA_CACHE_TBL_NONTRANSACT 318,12411
#define HA_CACHE_TBL_NOCACHE 319,12446
#define HA_CACHE_TBL_ASKTRANSACT 320,12481
#define HA_CACHE_TBL_TRANSACT 321,12516
#define MYSQL_START_TRANS_OPT_WITH_CONS_SNAPSHOT 324,12633
#define HA_CHECK_DUP_KEY 327,12723
#define HA_CHECK_DUP_UNIQUE 328,12750
#define HA_CHECK_DUP 329,12780
enum legacy_db_type331,12843
  DB_TYPE_UNKNOWN=333,12865
  DB_TYPE_UNKNOWN=0,DB_TYPE_DIAB_ISAM=333,12865
  DB_TYPE_HASH,334,12906
  DB_TYPE_HASH,DB_TYPE_MISAM,334,12906
  DB_TYPE_HASH,DB_TYPE_MISAM,DB_TYPE_PISAM,334,12906
  DB_TYPE_RMS_ISAM,335,12950
  DB_TYPE_RMS_ISAM, DB_TYPE_HEAP,335,12950
  DB_TYPE_RMS_ISAM, DB_TYPE_HEAP, DB_TYPE_ISAM,335,12950
  DB_TYPE_MRG_ISAM,336,12998
  DB_TYPE_MRG_ISAM, DB_TYPE_MYISAM,336,12998
  DB_TYPE_MRG_ISAM, DB_TYPE_MYISAM, DB_TYPE_MRG_MYISAM,336,12998
  DB_TYPE_BERKELEY_DB,337,13054
  DB_TYPE_BERKELEY_DB, DB_TYPE_INNODB,337,13054
  DB_TYPE_GEMINI,338,13093
  DB_TYPE_GEMINI, DB_TYPE_NDBCLUSTER,338,13093
  DB_TYPE_EXAMPLE_DB,339,13131
  DB_TYPE_EXAMPLE_DB, DB_TYPE_ARCHIVE_DB,339,13131
  DB_TYPE_EXAMPLE_DB, DB_TYPE_ARCHIVE_DB, DB_TYPE_CSV_DB,339,13131
  DB_TYPE_FEDERATED_DB,340,13189
  DB_TYPE_BLACKHOLE_DB,341,13213
  DB_TYPE_PARTITION_DB,342,13237
  DB_TYPE_BINLOG,343,13261
  DB_TYPE_SOLID,344,13279
  DB_TYPE_PBXT,345,13296
  DB_TYPE_TABLE_FUNCTION,346,13312
  DB_TYPE_MEMCACHE,347,13338
  DB_TYPE_FALCON,348,13358
  DB_TYPE_MARIA,349,13376
  DB_TYPE_PERFORMANCE_SCHEMA,351,13429
  DB_TYPE_TOKUDB=352,13459
  DB_TYPE_FIRST_DYNAMIC=353,13480
  DB_TYPE_DEFAULT=354,13508
enum row_type 357,13550
enum row_type { ROW_TYPE_NOT_USED=357,13550
enum row_type { ROW_TYPE_NOT_USED=-1, ROW_TYPE_DEFAULT,357,13550
enum row_type { ROW_TYPE_NOT_USED=-1, ROW_TYPE_DEFAULT, ROW_TYPE_FIXED,357,13550
		ROW_TYPE_DYNAMIC,358,13622
		ROW_TYPE_DYNAMIC, ROW_TYPE_COMPRESSED,358,13622
		ROW_TYPE_REDUNDANT,359,13663
		ROW_TYPE_REDUNDANT, ROW_TYPE_COMPACT,359,13663
                ROW_TYPE_PAGE,361,13764
                ROW_TYPE_TOKU_UNCOMPRESSED,362,13795
                ROW_TYPE_TOKU_UNCOMPRESSED, ROW_TYPE_TOKU_ZLIB,362,13795
                ROW_TYPE_TOKU_QUICKLZ,363,13859
                ROW_TYPE_TOKU_QUICKLZ, ROW_TYPE_TOKU_LZMA,363,13859
                ROW_TYPE_TOKU_FAST,364,13918
                ROW_TYPE_TOKU_FAST, ROW_TYPE_TOKU_SMALL 364,13918
enum column_format_type 367,14037
  COLUMN_FORMAT_TYPE_DEFAULT=368,14063
  COLUMN_FORMAT_TYPE_FIXED=369,14139
  COLUMN_FORMAT_TYPE_DYNAMIC=370,14193
enum enum_binlog_func 373,14253
  BFN_RESET_LOGS=374,14277
  BFN_RESET_SLAVE=375,14305
  BFN_BINLOG_WAIT=376,14333
  BFN_BINLOG_END=377,14361
  BFN_BINLOG_PURGE_FILE=378,14389
enum enum_binlog_command 381,14420
  LOGCOM_CREATE_TABLE,382,14447
  LOGCOM_ALTER_TABLE,383,14470
  LOGCOM_RENAME_TABLE,384,14492
  LOGCOM_DROP_TABLE,385,14515
  LOGCOM_CREATE_DB,386,14536
  LOGCOM_ALTER_DB,387,14556
  LOGCOM_DROP_DB388,14575
#define HA_CREATE_USED_AUTO 394,14695
#define HA_CREATE_USED_RAID 395,14745
#define HA_CREATE_USED_UNION 396,14824
#define HA_CREATE_USED_INSERT_METHOD 397,14874
#define HA_CREATE_USED_MIN_ROWS 398,14924
#define HA_CREATE_USED_MAX_ROWS 399,14974
#define HA_CREATE_USED_AVG_ROW_LENGTH 400,15024
#define HA_CREATE_USED_PACK_KEYS 401,15074
#define HA_CREATE_USED_CHARSET 402,15124
#define HA_CREATE_USED_DEFAULT_CHARSET 403,15174
#define HA_CREATE_USED_DATADIR 404,15224
#define HA_CREATE_USED_INDEXDIR 405,15275
#define HA_CREATE_USED_ENGINE 406,15326
#define HA_CREATE_USED_CHECKSUM 407,15377
#define HA_CREATE_USED_DELAY_KEY_WRITE 408,15428
#define HA_CREATE_USED_ROW_FORMAT 409,15479
#define HA_CREATE_USED_COMMENT 410,15530
#define HA_CREATE_USED_PASSWORD 411,15581
#define HA_CREATE_USED_CONNECTION 412,15632
#define HA_CREATE_USED_KEY_BLOCK_SIZE 413,15683
#define HA_CREATE_USED_TRANSACTIONAL 415,15779
#define HA_CREATE_USED_PAGE_CHECKSUM 417,15875
struct st_system_tablename431,16289
  const char *db;db433,16318
  const char *tablename;tablename434,16336
typedef ulonglong my_xid;438,16366
#define MYSQL_XID_PREFIX 439,16435
#define MYSQL_XID_PREFIX_LEN 440,16471
#define MYSQL_XID_OFFSET 441,16529
#define MYSQL_XID_GTRID_LEN 442,16595
#define XIDDATASIZE 444,16658
#define MAXGTRIDSIZE 445,16696
#define MAXBQUALSIZE 446,16720
#define COMPATIBLE_DATA_YES 448,16745
#define COMPATIBLE_DATA_NO 449,16775
struct xid_t 459,17087
  long formatID;460,17102
  long gtrid_length;461,17119
  long bqual_length;462,17140
  char data[data463,17161
  xid_t(465,17212
  bool eq(466,17283
  bool eq(468,17378
  void set(470,17497
  void set(472,17567
  void set(478,17740
  void set(488,18035
  bool is_null(495,18170
  void null(496,18214
  my_xid quick_get_my_xid(497,18246
  my_xid get_my_xid(503,18368
  uint length(509,18571
  uchar *key(key514,18704
  uint key_length(518,18762
typedef struct xid_t XID;523,18873
#define MIN_XID_LIST_SIZE 526,18936
#define MAX_XID_LIST_SIZE 527,18967
#define UNDEF_NODEGROUP 533,19151
enum ts_command_type534,19181
  TS_CMD_NOT_DEFINED 536,19204
  CREATE_TABLESPACE 537,19231
  ALTER_TABLESPACE 538,19256
  CREATE_LOGFILE_GROUP 539,19280
  ALTER_LOGFILE_GROUP 540,19308
  DROP_TABLESPACE 541,19335
  DROP_LOGFILE_GROUP 542,19358
  CHANGE_FILE_TABLESPACE 543,19384
  ALTER_ACCESS_MODE_TABLESPACE 544,19414
enum ts_alter_tablespace_type547,19453
  TS_ALTER_TABLESPACE_TYPE_NOT_DEFINED 549,19485
  ALTER_TABLESPACE_ADD_FILE 550,19530
  ALTER_TABLESPACE_DROP_FILE 551,19563
enum tablespace_access_mode554,19600
  TS_NOT_DEFINED=556,19630
  TS_READ_ONLY 557,19652
  TS_READ_WRITE 558,19672
  TS_NOT_ACCESSIBLE 559,19693
class st_alter_tablespace 563,19740
  const char *tablespace_name;st_alter_tablespace::tablespace_name566,19797
  const char *logfile_group_name;st_alter_tablespace::logfile_group_name567,19828
  enum ts_command_type ts_cmd_type;st_alter_tablespace::ts_cmd_type568,19862
  enum ts_alter_tablespace_type ts_alter_tablespace_type;st_alter_tablespace::ts_alter_tablespace_type569,19898
  const char *data_file_name;st_alter_tablespace::data_file_name570,19956
  const char *undo_file_name;st_alter_tablespace::undo_file_name571,19986
  const char *redo_file_name;st_alter_tablespace::redo_file_name572,20016
  ulonglong extent_size;st_alter_tablespace::extent_size573,20046
  ulonglong undo_buffer_size;st_alter_tablespace::undo_buffer_size574,20071
  ulonglong redo_buffer_size;st_alter_tablespace::redo_buffer_size575,20101
  ulonglong initial_size;st_alter_tablespace::initial_size576,20131
  ulonglong autoextend_size;st_alter_tablespace::autoextend_size577,20157
  ulonglong max_size;st_alter_tablespace::max_size578,20186
  uint nodegroup_id;st_alter_tablespace::nodegroup_id579,20208
  handlerton *storage_engine;st_alter_tablespace::storage_engine580,20229
  bool wait_until_completed;st_alter_tablespace::wait_until_completed581,20259
  const char *ts_comment;st_alter_tablespace::ts_comment582,20288
  enum tablespace_access_mode ts_access_mode;st_alter_tablespace::ts_access_mode583,20314
  st_alter_tablespace(st_alter_tablespace::st_alter_tablespace584,20360
enum enum_schema_tables613,21289
  SCH_CHARSETS=enum_schema_tables::SCH_CHARSETS615,21315
  SCH_COLLATIONS,enum_schema_tables::SCH_COLLATIONS616,21334
  SCH_COLLATION_CHARACTER_SET_APPLICABILITY,enum_schema_tables::SCH_COLLATION_CHARACTER_SET_APPLICABILITY617,21352
  SCH_COLUMNS,enum_schema_tables::SCH_COLUMNS618,21397
  SCH_COLUMN_PRIVILEGES,enum_schema_tables::SCH_COLUMN_PRIVILEGES619,21412
  SCH_ENGINES,enum_schema_tables::SCH_ENGINES620,21437
  SCH_EVENTS,enum_schema_tables::SCH_EVENTS621,21452
  SCH_FILES,enum_schema_tables::SCH_FILES622,21466
  SCH_GLOBAL_STATUS,enum_schema_tables::SCH_GLOBAL_STATUS623,21479
  SCH_GLOBAL_VARIABLES,enum_schema_tables::SCH_GLOBAL_VARIABLES624,21500
  SCH_KEY_COLUMN_USAGE,enum_schema_tables::SCH_KEY_COLUMN_USAGE625,21524
  SCH_OPEN_TABLES,enum_schema_tables::SCH_OPEN_TABLES626,21548
  SCH_PARAMETERS,enum_schema_tables::SCH_PARAMETERS627,21567
  SCH_PARTITIONS,enum_schema_tables::SCH_PARTITIONS628,21585
  SCH_PLUGINS,enum_schema_tables::SCH_PLUGINS629,21603
  SCH_PROCESSLIST,enum_schema_tables::SCH_PROCESSLIST630,21618
  SCH_PROFILES,enum_schema_tables::SCH_PROFILES631,21637
  SCH_REFERENTIAL_CONSTRAINTS,enum_schema_tables::SCH_REFERENTIAL_CONSTRAINTS632,21653
  SCH_PROCEDURES,enum_schema_tables::SCH_PROCEDURES633,21684
  SCH_SCHEMATA,enum_schema_tables::SCH_SCHEMATA634,21702
  SCH_SCHEMA_PRIVILEGES,enum_schema_tables::SCH_SCHEMA_PRIVILEGES635,21718
  SCH_SESSION_STATUS,enum_schema_tables::SCH_SESSION_STATUS636,21743
  SCH_SESSION_VARIABLES,enum_schema_tables::SCH_SESSION_VARIABLES637,21765
  SCH_STATISTICS,enum_schema_tables::SCH_STATISTICS638,21790
  SCH_STATUS,enum_schema_tables::SCH_STATUS639,21808
  SCH_TABLES,enum_schema_tables::SCH_TABLES640,21822
  SCH_TABLESPACES,enum_schema_tables::SCH_TABLESPACES641,21836
  SCH_TABLE_CONSTRAINTS,enum_schema_tables::SCH_TABLE_CONSTRAINTS642,21855
  SCH_TABLE_NAMES,enum_schema_tables::SCH_TABLE_NAMES643,21880
  SCH_TABLE_PRIVILEGES,enum_schema_tables::SCH_TABLE_PRIVILEGES644,21899
  SCH_TRIGGERS,enum_schema_tables::SCH_TRIGGERS645,21923
  SCH_USER_PRIVILEGES,enum_schema_tables::SCH_USER_PRIVILEGES646,21939
  SCH_VARIABLES,enum_schema_tables::SCH_VARIABLES647,21962
  SCH_VIEWSenum_schema_tables::SCH_VIEWS648,21979
typedef struct st_foreign_key_info FOREIGN_KEY_INFO;653,22043
typedef bool (stat_print_fn)654,22096
enum ha_stat_type 657,22297
enum ha_stat_type { HA_ENGINE_STATUS,ha_stat_type::HA_ENGINE_STATUS657,22297
enum ha_stat_type { HA_ENGINE_STATUS, HA_ENGINE_LOGS,ha_stat_type::HA_ENGINE_LOGS657,22297
enum ha_stat_type { HA_ENGINE_STATUS, HA_ENGINE_LOGS, HA_ENGINE_MUTEX ha_stat_type::HA_ENGINE_MUTEX657,22297
enum log_status661,22463
  HA_LOG_STATUS_FREE=log_status::HA_LOG_STATUS_FREE663,22481
  HA_LOG_STATUS_INUSE=log_status::HA_LOG_STATUS_INUSE664,22548
  HA_LOG_STATUS_NOSUCHLOG=log_status::HA_LOG_STATUS_NOSUCHLOG665,22626
struct handler_log_file_data 680,23102
  LEX_STRING filename;handler_log_file_data::filename681,23133
  enum log_status status;handler_log_file_data::status682,23156
enum handler_iterator_type686,23187
  HA_TRANSACTLOG_ITERATOR=handler_iterator_type::HA_TRANSACTLOG_ITERATOR689,23260
enum handler_create_iterator_result691,23292
  HA_ITERATOR_OK,handler_create_iterator_result::HA_ITERATOR_OK693,23330
  HA_ITERATOR_UNSUPPORTED,handler_create_iterator_result::HA_ITERATOR_UNSUPPORTED694,23380
  HA_ITERATOR_ERROR handler_create_iterator_result::HA_ITERATOR_ERROR695,23452
struct handler_iterator 705,23795
  void *buffer;handler_iterator::buffer723,24431
struct handlerton738,24862
  SHOW_COMP_OPTION state;handlerton::state743,24952
  enum legacy_db_type db_type;handlerton::db_type749,25140
  enum legacy_db_type other_db_type;handlerton::other_db_type750,25171
   uint slot;handlerton::slot761,25471
   uint savepoint_offset;handlerton::savepoint_offset771,25930
   uint32 flags;handlerton::flags820,28328
   uint32 license;handlerton::license890,31137
   void *data;handlerton::data891,31186
#define MYSQL_HANDLERTON_INCLUDE_DISCOVER2 893,31257
#define HTON_NO_FLAGS 901,31548
#define HTON_CLOSE_CURSORS_AT_COMMIT 902,31588
#define HTON_ALTER_NOT_SUPPORTED 903,31634
#define HTON_CAN_RECREATE 904,31712
#define HTON_HIDDEN 905,31792
#define HTON_FLUSH_AFTER_RENAME 906,31872
#define HTON_NOT_USER_SELECTABLE 907,31918
#define HTON_TEMPORARY_NOT_SUPPORTED 908,31964
#define HTON_SUPPORT_LOG_TABLES 909,32050
#define HTON_NO_PARTITION 910,32125
struct THD_TRANS914,32229
  bool        no_2pc;THD_TRANS::no_2pc917,32304
  Ha_trx_info *ha_list;THD_TRANS::ha_list919,32386
  bool modified_non_trans_table;THD_TRANS::modified_non_trans_table948,33850
  void reset(THD_TRANS::reset950,33884
  bool is_empty(THD_TRANS::is_empty951,33951
class Ha_trx_info972,34605
  void register_ha(Ha_trx_info::register_ha976,34705
  void reset(Ha_trx_info::reset990,35042
  Ha_trx_info(Ha_trx_info::Ha_trx_info997,35116
  void set_trx_read_write(Ha_trx_info::set_trx_read_write999,35146
  bool is_trx_read_write(Ha_trx_info::is_trx_read_write1004,35249
  bool is_started(Ha_trx_info::is_started1009,35364
  void coalesce_trx_with(Ha_trx_info::coalesce_trx_with1011,35488
  Ha_trx_info *next(Ha_trx_info::next1022,35829
  handlerton *ht(Ha_trx_info::ht1027,35915
  enum { TRX_READ_ONLY=Ha_trx_info::TRX_READ_ONLY1033,36005
  enum { TRX_READ_ONLY= 0, TRX_READ_WRITE=Ha_trx_info::TRX_READ_WRITE1033,36005
  Ha_trx_info *m_next;Ha_trx_info::m_next1035,36101
  handlerton *m_ht;Ha_trx_info::m_ht1041,36320
  uchar       m_flags;Ha_trx_info::m_flags1047,36509
enum enum_tx_isolation 1051,36537
enum enum_tx_isolation { ISO_READ_UNCOMMITTED,enum_tx_isolation::ISO_READ_UNCOMMITTED1051,36537
enum enum_tx_isolation { ISO_READ_UNCOMMITTED, ISO_READ_COMMITTED,enum_tx_isolation::ISO_READ_COMMITTED1051,36537
			 ISO_REPEATABLE_READ,enum_tx_isolation::ISO_REPEATABLE_READ1052,36604
			 ISO_REPEATABLE_READ, ISO_SERIALIZABLE}enum_tx_isolation::ISO_SERIALIZABLE1052,36604
  ulonglong data_file_length;::data_file_length1056,36667
  ulonglong max_data_file_length;::max_data_file_length1057,36697
  ulonglong index_file_length;::index_file_length1058,36731
  ulonglong delete_length;::delete_length1059,36762
  ha_rows records;::records1060,36789
  ulong mean_rec_length;::mean_rec_length1061,36808
  ulong create_time;::create_time1062,36833
  ulong check_time;::check_time1063,36854
  ulong update_time;::update_time1064,36874
  ulonglong check_sum;::check_sum1065,36895
} PARTITION_STATS;1066,36918
#define UNDEF_NODEGROUP 1068,36938
#define NOT_A_PARTITION_ID 1075,37064
enum enum_ha_unused 1077,37105
enum enum_ha_unused { HA_CHOICE_UNDEF,enum_ha_unused::HA_CHOICE_UNDEF1077,37105
enum enum_ha_unused { HA_CHOICE_UNDEF, HA_CHOICE_NO,enum_ha_unused::HA_CHOICE_NO1077,37105
enum enum_ha_unused { HA_CHOICE_UNDEF, HA_CHOICE_NO, HA_CHOICE_YES enum_ha_unused::HA_CHOICE_YES1077,37105
typedef struct st_ha_create_information1079,37176
  CHARSET_INFO *table_charset,st_ha_create_information::table_charset1081,37218
  CHARSET_INFO *table_charset, *default_table_charset;st_ha_create_information::default_table_charset1081,37218
  LEX_STRING connect_string;st_ha_create_information::connect_string1082,37273
  const char *password,st_ha_create_information::password1083,37302
  const char *password, *tablespace;st_ha_create_information::tablespace1083,37302
  LEX_STRING comment;st_ha_create_information::comment1084,37339
  const char *data_file_name,st_ha_create_information::data_file_name1085,37361
  const char *data_file_name, *index_file_name;st_ha_create_information::index_file_name1085,37361
  const char *alias;st_ha_create_information::alias1086,37409
  ulonglong max_rows,st_ha_create_information::max_rows1087,37430
  ulonglong max_rows,min_rows;st_ha_create_information::min_rows1087,37430
  ulonglong auto_increment_value;st_ha_create_information::auto_increment_value1088,37461
  ulong table_options;st_ha_create_information::table_options1089,37495
  ulong avg_row_length;st_ha_create_information::avg_row_length1090,37518
  ulong used_fields;st_ha_create_information::used_fields1091,37542
  ulong key_block_size;st_ha_create_information::key_block_size1092,37563
  SQL_I_List<TABLE_LIST> merge_list;st_ha_create_information::merge_list1093,37587
  handlerton *db_type;st_ha_create_information::db_type1094,37624
  enum row_type row_type;st_ha_create_information::row_type1104,37971
  uint null_bits;st_ha_create_information::null_bits1105,37997
  uint options;st_ha_create_information::options1106,38072
  uint merge_insert_method;st_ha_create_information::merge_insert_method1107,38122
  uint extra_size;st_ha_create_information::extra_size1108,38150
  enum enum_ha_unused unused1;st_ha_create_information::unused11109,38225
  bool frm_only;st_ha_create_information::frm_only1110,38256
  bool varchar;st_ha_create_information::varchar1111,38328
  enum ha_storage_media storage_media;st_ha_create_information::storage_media1112,38399
  enum enum_ha_unused unused2;st_ha_create_information::unused21113,38469
} HA_CREATE_INFO;1114,38500
class inplace_alter_handler_ctx 1132,39016
  inplace_alter_handler_ctx(inplace_alter_handler_ctx::inplace_alter_handler_ctx1135,39077
  virtual ~inplace_alter_handler_ctx(inplace_alter_handler_ctx::~inplace_alter_handler_ctx1137,39111
class Alter_inplace_info1147,39429
  typedef ulong HA_ALTER_FLAGS;Alter_inplace_info::HA_ALTER_FLAGS1165,40119
  static const HA_ALTER_FLAGS ADD_INDEX Alter_inplace_info::ADD_INDEX1168,40191
  static const HA_ALTER_FLAGS DROP_INDEX Alter_inplace_info::DROP_INDEX1171,40300
  static const HA_ALTER_FLAGS ADD_UNIQUE_INDEX Alter_inplace_info::ADD_UNIQUE_INDEX1174,40404
  static const HA_ALTER_FLAGS DROP_UNIQUE_INDEX Alter_inplace_info::DROP_UNIQUE_INDEX1177,40509
  static const HA_ALTER_FLAGS ADD_PK_INDEX Alter_inplace_info::ADD_PK_INDEX1180,40601
  static const HA_ALTER_FLAGS DROP_PK_INDEX Alter_inplace_info::DROP_PK_INDEX1183,40694
  static const HA_ALTER_FLAGS ADD_COLUMN Alter_inplace_info::ADD_COLUMN1186,40779
  static const HA_ALTER_FLAGS DROP_COLUMN Alter_inplace_info::DROP_COLUMN1189,40865
  static const HA_ALTER_FLAGS ALTER_COLUMN_NAME Alter_inplace_info::ALTER_COLUMN_NAME1192,40953
  static const HA_ALTER_FLAGS ALTER_COLUMN_TYPE Alter_inplace_info::ALTER_COLUMN_TYPE1195,41050
  static const HA_ALTER_FLAGS ALTER_COLUMN_EQUAL_PACK_LENGTH Alter_inplace_info::ALTER_COLUMN_EQUAL_PACK_LENGTH1203,41359
  static const HA_ALTER_FLAGS ALTER_COLUMN_ORDER Alter_inplace_info::ALTER_COLUMN_ORDER1206,41453
  static const HA_ALTER_FLAGS ALTER_COLUMN_NULLABLE Alter_inplace_info::ALTER_COLUMN_NULLABLE1209,41564
  static const HA_ALTER_FLAGS ALTER_COLUMN_NOT_NULLABLE Alter_inplace_info::ALTER_COLUMN_NOT_NULLABLE1212,41675
  static const HA_ALTER_FLAGS ALTER_COLUMN_DEFAULT Alter_inplace_info::ALTER_COLUMN_DEFAULT1215,41785
  static const HA_ALTER_FLAGS ADD_FOREIGN_KEY Alter_inplace_info::ADD_FOREIGN_KEY1218,41876
  static const HA_ALTER_FLAGS DROP_FOREIGN_KEY Alter_inplace_info::DROP_FOREIGN_KEY1221,41968
  static const HA_ALTER_FLAGS CHANGE_CREATE_OPTION Alter_inplace_info::CHANGE_CREATE_OPTION1224,42111
  static const HA_ALTER_FLAGS ALTER_RENAME_56 Alter_inplace_info::ALTER_RENAME_561227,42203
  static const HA_ALTER_FLAGS ALTER_COLUMN_STORAGE_TYPE Alter_inplace_info::ALTER_COLUMN_STORAGE_TYPE1230,42313
  static const HA_ALTER_FLAGS ALTER_COLUMN_COLUMN_FORMAT Alter_inplace_info::ALTER_COLUMN_COLUMN_FORMAT1233,42422
  static const HA_ALTER_FLAGS ADD_PARTITION Alter_inplace_info::ADD_PARTITION1236,42511
  static const HA_ALTER_FLAGS DROP_PARTITION Alter_inplace_info::DROP_PARTITION1239,42601
  static const HA_ALTER_FLAGS ALTER_PARTITION_56 Alter_inplace_info::ALTER_PARTITION_561242,42703
  static const HA_ALTER_FLAGS COALESCE_PARTITION Alter_inplace_info::COALESCE_PARTITION1245,42797
  static const HA_ALTER_FLAGS REORGANIZE_PARTITION Alter_inplace_info::REORGANIZE_PARTITION1248,42902
  static const HA_ALTER_FLAGS ALTER_TABLE_REORG_56 Alter_inplace_info::ALTER_TABLE_REORG_561251,42998
  static const HA_ALTER_FLAGS ALTER_REMOVE_PARTITIONING_56 Alter_inplace_info::ALTER_REMOVE_PARTITIONING_561254,43093
  static const HA_ALTER_FLAGS ALTER_ALL_PARTITION_56 Alter_inplace_info::ALTER_ALL_PARTITION_561257,43208
  HA_CREATE_INFO *create_info;Alter_inplace_info::create_info1268,43707
  Alter_info *alter_info;Alter_inplace_info::alter_info1281,44282
  KEY  *key_info_buffer;Alter_inplace_info::key_info_buffer1298,44877
  uint key_count;Alter_inplace_info::key_count1301,44943
  uint index_drop_count;Alter_inplace_info::index_drop_count1304,45004
  KEY  **index_drop_buffer;Alter_inplace_info::index_drop_buffer1310,45157
  uint index_add_count;Alter_inplace_info::index_add_count1313,45227
  uint *index_add_buffer;Alter_inplace_info::index_add_buffer1319,45361
  inplace_alter_handler_ctx *handler_ctx;Alter_inplace_info::handler_ctx1327,45574
  HA_ALTER_FLAGS handler_flags;Alter_inplace_info::handler_flags1332,45711
  const bool ignore;Alter_inplace_info::ignore1335,45785
  Alter_inplace_info(Alter_inplace_info::Alter_inplace_info1337,45807
  ~Alter_inplace_info(Alter_inplace_info::~Alter_inplace_info1354,46321
typedef struct st_key_create_information1360,46381
  enum ha_key_alg algorithm;st_key_create_information::algorithm1362,46424
  ulong block_size;st_key_create_information::block_size1363,46453
  LEX_STRING parser_name;st_key_create_information::parser_name1364,46473
  LEX_STRING comment;st_key_create_information::comment1365,46499
} KEY_CREATE_INFO;1366,46521
class TABLEOP_HOOKS1383,47073
  TABLEOP_HOOKS(TABLEOP_HOOKS::TABLEOP_HOOKS1386,47103
  virtual ~TABLEOP_HOOKS(TABLEOP_HOOKS::~TABLEOP_HOOKS1387,47124
  inline void prelock(TABLEOP_HOOKS::prelock1389,47155
  inline int postlock(TABLEOP_HOOKS::postlock1394,47245
  virtual void do_prelock(TABLEOP_HOOKS::do_prelock1400,47417
  virtual int do_postlock(TABLEOP_HOOKS::do_postlock1413,47698
typedef struct st_savepoint SAVEPOINT;1419,47835
typedef class Item COND;1424,48025
typedef struct st_ha_check_opt1426,48051
  st_ha_check_opt(st_ha_check_opt::st_ha_check_opt1428,48084
  uint flags;st_ha_check_opt::flags1429,48155
  uint sql_flags;st_ha_check_opt::sql_flags1430,48219
  KEY_CACHE *key_cache;st_ha_check_opt::key_cache1431,48297
} HA_CHECK_OPT;1433,48380
typedef struct st_handler_buffer1444,48642
  const uchar *buffer;st_handler_buffer::buffer1446,48677
  const uchar *buffer_end;st_handler_buffer::buffer_end1447,48741
  uchar *end_of_used_area;st_handler_buffer::end_of_used_area1448,48792
} HANDLER_BUFFER;1449,48866
typedef struct system_status_var SSV;1451,48885
class ha_statistics1453,48924
  ulonglong data_file_length;ha_statistics::data_file_length1456,48954
  ulonglong max_data_file_length;ha_statistics::max_data_file_length1457,49012
  ulonglong index_file_length;ha_statistics::index_file_length1458,49073
  ulonglong max_index_file_length;ha_statistics::max_index_file_length1459,49104
  ulonglong delete_length;ha_statistics::delete_length1460,49139
  ulonglong auto_increment_value;ha_statistics::auto_increment_value1461,49184
  ha_rows records;ha_statistics::records1470,49497
  ha_rows deleted;ha_statistics::deleted1471,49516
  ulong mean_rec_length;ha_statistics::mean_rec_length1472,49559
  ulong create_time;ha_statistics::create_time1473,49610
  ulong check_time;ha_statistics::check_time1474,49662
  ulong update_time;ha_statistics::update_time1475,49682
  uint block_size;ha_statistics::block_size1476,49703
  ha_statistics(ha_statistics::ha_statistics1478,49748
#define make_keypart_map(1491,50167
#define make_prev_keypart_map(1496,50317
class handler_add_index 1506,50584
  TABLE* const table;handler_add_index::table1510,50679
  KEY* const key_info;handler_add_index::key_info1512,50731
  const uint num_of_keys;handler_add_index::num_of_keys1514,50781
  handler_add_index(handler_add_index::handler_add_index1515,50807
  virtual ~handler_add_index(handler_add_index::~handler_add_index1518,50971
class handler 1527,51200
  typedef ulonglong Table_flags;handler::Table_flags1530,51242
  TABLE_SHARE *table_share;handler::table_share1532,51286
  TABLE *table;handler::table1533,51343
  Table_flags cached_table_flags;handler::cached_table_flags1534,51402
  ha_rows estimation_rows_to_insert;handler::estimation_rows_to_insert1536,51474
  handlerton *ht;handler::ht1538,51519
  uchar *ref;handler::ref1539,51590
  uchar *dup_ref;handler::dup_ref1540,51636
  ha_statistics stats;handler::stats1542,51688
  bool multi_range_sorted;handler::multi_range_sorted1545,51760
  KEY_MULTI_RANGE *multi_range_curr;handler::multi_range_curr1546,51787
  KEY_MULTI_RANGE *multi_range_end;handler::multi_range_end1547,51824
  HANDLER_BUFFER *multi_range_buffer;handler::multi_range_buffer1548,51860
  key_range save_end_range,handler::save_end_range1551,51943
  key_range save_end_range, *end_range;handler::end_range1551,51943
  KEY_PART_INFO *range_key_part;handler::range_key_part1552,51983
  int key_compare_result_on_equal;handler::key_compare_result_on_equal1553,52016
  bool eq_range;handler::eq_range1554,52051
  uint errkey;handler::errkey1556,52069
  uint key_used_on_scan;handler::key_used_on_scan1557,52106
  uint active_index;handler::active_index1558,52131
  uint ref_length;handler::ref_length1560,52209
  FT_INFO *ft_handler;handler::ft_handler1561,52228
  enum {NONE=handler::NONE1562,52251
  enum {NONE=0, INDEX,handler::INDEX1562,52251
  enum {NONE=0, INDEX, RND}handler::RND1562,52251
  bool locked;handler::locked1563,52287
  bool implicit_emptied;handler::implicit_emptied1564,52302
  const COND *pushed_cond;handler::pushed_cond1565,52372
  ulonglong next_insert_id;handler::next_insert_id1575,52873
  ulonglong insert_id_for_cur_row;handler::insert_id_for_cur_row1582,53112
  Discrete_interval auto_inc_interval_for_cur_row;handler::auto_inc_interval_for_cur_row1587,53244
  uint auto_inc_intervals_count;handler::auto_inc_intervals_count1594,53576
  PSI_table *m_psi;handler::m_psi1608,54174
  handler(handler::handler1610,54195
  virtual ~handler(handler::~handler1621,54624
  void init(handler::init1628,54864
  int ha_index_init(handler::ha_index_init1635,55064
  int ha_index_end(handler::ha_index_end1645,55361
  int ha_rnd_init(handler::ha_rnd_init1652,55501
  int ha_rnd_end(handler::ha_rnd_end1661,55791
  int ha_index_or_rnd_end(handler::ha_index_or_rnd_end1670,56007
  Table_flags ha_table_flags(handler::ha_table_flags1677,56200
  void ha_start_bulk_insert(handler::ha_start_bulk_insert1695,56993
  int ha_end_bulk_insert(handler::ha_end_bulk_insert1700,57109
  virtual bool is_auto_inc_singleton(handler::is_auto_inc_singleton1736,58541
  virtual void change_table_ptr(handler::change_table_ptr1743,58829
  virtual double scan_time(handler::scan_time1748,58953
  virtual double read_time(handler::read_time1750,59051
  virtual const key_map *keys_to_use_for_scanning(handler::keys_to_use_for_scanning1762,59432
  bool has_transactions(handler::has_transactions1763,59511
  virtual uint extra_rec_buf_length(handler::extra_rec_buf_length1765,59596
  virtual bool is_fatal_error(handler::is_fatal_error1777,60138
  virtual ha_rows records(handler::records1791,60523
  virtual ha_rows estimate_rows_upper_bound(handler::estimate_rows_upper_bound1798,60831
  virtual enum row_type get_row_type(handler::get_row_type1805,61074
  virtual const char *index_type(handler::index_type1807,61150
  uint get_index(handler::get_index1818,61639
  virtual bool start_bulk_update(handler::start_bulk_update1825,61840
  virtual bool start_bulk_delete(handler::start_bulk_delete1830,62006
  virtual int exec_bulk_update(handler::exec_bulk_update1842,62489
  virtual void end_bulk_update(handler::end_bulk_update1851,62702
  virtual int end_bulk_delete(handler::end_bulk_delete1858,62898
  virtual int index_read_map(handler::index_read_map1869,63190
  virtual int index_next(handler::index_next1885,63904
  virtual int index_prev(handler::index_prev1887,63979
  virtual int index_first(handler::index_first1889,64054
  virtual int index_last(handler::index_last1891,64130
  virtual int index_read_last_map(handler::index_read_last_map1899,64422
  virtual int ft_init(handler::ft_init1914,65220
  void ft_end(handler::ft_end1915,65277
  virtual FT_INFO *ft_init_ext(handler::ft_init_ext1916,65314
  virtual int ft_read(handler::ft_read1918,65400
  virtual int rnd_pos_by_record(handler::rnd_pos_by_record1926,65730
  virtual int restart_rnd_next(handler::restart_rnd_next1936,66019
  virtual int rnd_same(handler::rnd_same1938,66111
  virtual ha_rows records_in_range(handler::records_in_range1940,66193
  virtual int extra(handler::extra1952,66760
  virtual int extra_opt(handler::extra_opt1954,66830
  virtual bool was_semi_consistent_read(handler::was_semi_consistent_read1969,67571
  virtual void try_semi_consistent_read(handler::try_semi_consistent_read1976,67901
  virtual void unlock_row(handler::unlock_row1977,67950
  virtual int start_stmt(handler::start_stmt1978,67981
  void set_next_insert_id(handler::set_next_insert_id1983,68313
  void restore_auto_increment(handler::restore_auto_increment1988,68455
  virtual void update_create_info(handler::update_create_info2004,69230
  virtual int assign_to_keycache(handler::assign_to_keycache2006,69321
  virtual int preload_keys(handler::preload_keys2008,69428
  virtual int indexes_are_disabled(handler::indexes_are_disabled2012,69572
  virtual char *update_table_comment(handler::update_table_comment2013,69625
  virtual void append_create_info(handler::append_create_info2015,69713
  virtual bool is_fk_defined_on_table_or_index(handler::is_fk_defined_on_table_or_index2026,70181
  virtual char* get_foreign_key_create_info(handler::get_foreign_key_create_info2028,70260
  virtual char* get_tablespace_name(handler::get_tablespace_name2030,70375
  virtual bool can_switch_engines(handler::can_switch_engines2033,70578
  get_foreign_key_list(handler::get_foreign_key_list2046,70955
  get_parent_foreign_key_list(handler::get_parent_foreign_key_list2060,71378
  virtual uint referenced_by_foreign_key(handler::referenced_by_foreign_key2062,71470
  virtual void init_table_handle_for_HANDLER(handler::init_table_handle_for_HANDLER2063,71526
  virtual void free_foreign_key_create_info(handler::free_foreign_key_create_info2065,71626
  virtual int get_default_no_partitions(handler::get_default_no_partitions2081,72410
  virtual void set_auto_partitions(handler::set_auto_partitions2082,72485
  virtual bool get_no_parts(handler::get_no_parts2083,72559
  virtual void set_part_info(handler::set_part_info2089,72689
  virtual int add_index(handler::add_index2107,73352
  virtual int final_add_index(handler::final_add_index2120,73822
  virtual int prepare_drop_index(handler::prepare_drop_index2123,73927
  virtual int final_drop_index(handler::final_drop_index2126,74081
  uint max_record_length(handler::max_record_length2129,74168
  uint max_keys(handler::max_keys2131,74269
  uint max_key_parts(handler::max_key_parts2133,74342
  uint max_key_length(handler::max_key_length2135,74431
  uint max_key_part_length(handler::max_key_part_length2137,74523
  virtual uint max_supported_record_length(handler::max_supported_record_length2140,74626
  virtual uint max_supported_keys(handler::max_supported_keys2141,74707
  virtual uint max_supported_key_parts(handler::max_supported_key_parts2142,74763
  virtual uint max_supported_key_length(handler::max_supported_key_length2143,74836
  virtual uint max_supported_key_part_length(handler::max_supported_key_part_length2144,74911
  virtual uint min_record_length(handler::min_record_length2145,74980
  virtual bool low_byte_first(handler::low_byte_first2147,75048
  virtual uint checksum(handler::checksum2148,75100
  virtual bool is_crashed(handler::is_crashed2149,75146
  virtual bool auto_repair(handler::auto_repair2150,75195
#define CHF_CREATE_FLAG 2153,75246
#define CHF_DELETE_FLAG 2154,75272
#define CHF_RENAME_FLAG 2155,75298
#define CHF_INDEX_FLAG 2156,75324
  virtual uint lock_count(handler::lock_count2162,75439
  virtual uint8 table_cache_type(handler::table_cache_type2181,76172
  virtual my_bool register_query_cache_table(handler::register_query_cache_table2214,77666
 virtual bool primary_key_is_clustered(handler::primary_key_is_clustered2230,78187
 virtual int cmp_ref(handler::cmp_ref2231,78246
 virtual const COND *cond_push(handler::cond_push2262,79211
 virtual void cond_pop(handler::cond_pop2268,79422
 virtual bool check_if_incompatible_data(handler::check_if_incompatible_data2269,79460
  virtual uint alter_table_flags(handler::alter_table_flags2279,79819
  inline void psi_open(handler::psi_open2299,80371
  inline void psi_close(handler::psi_close2313,80684
  virtual int index_init(handler::index_init2349,81715
  virtual int index_end(handler::index_end2350,81796
  virtual int rnd_end(handler::rnd_end2359,82225
  virtual int write_row(handler::write_row2360,82263
  virtual int update_row(handler::update_row2365,82365
  virtual int delete_row(handler::delete_row2371,82545
  virtual int reset(handler::reset2380,82798
  virtual int external_lock(handler::external_lock2404,83833
  virtual void release_auto_increment(handler::release_auto_increment2409,83984
  virtual int check_for_upgrade(handler::check_for_upgrade2411,84093
  virtual int check(handler::check2413,84166
  virtual int repair(handler::repair2421,84391
  virtual void start_bulk_insert(handler::start_bulk_insert2426,84546
  virtual int end_bulk_insert(handler::end_bulk_insert2427,84596
  virtual int index_read(handler::index_read2428,84642
  virtual int index_read_last(handler::index_read_last2431,84808
  virtual int bulk_update_row(handler::bulk_update_row2446,85483
  virtual int delete_all_rows(handler::delete_all_rows2458,85871
  virtual int truncate(handler::truncate2478,86723
  virtual int reset_auto_increment(handler::reset_auto_increment2485,86999
  virtual int optimize(handler::optimize2487,87086
  virtual int analyze(handler::analyze2489,87183
  virtual bool check_and_repair(handler::check_and_repair2491,87279
  virtual int disable_indexes(handler::disable_indexes2492,87338
  virtual int enable_indexes(handler::enable_indexes2493,87412
  virtual int discard_or_import_tablespace(handler::discard_or_import_tablespace2494,87485
  virtual void prepare_for_alter(handler::prepare_for_alter2496,87591
  virtual int create_handler_files(handler::create_handler_files2500,87761
  virtual int change_partitions(handler::change_partitions2504,87931
  virtual int drop_partitions(handler::drop_partitions2511,88307
  virtual int rename_partitions(handler::rename_partitions2513,88390
  virtual int prepare_index_scan(handler::prepare_index_scan2517,88485
  virtual int prepare_index_key_scan_map(handler::prepare_index_key_scan_map2519,88536
  virtual int prepare_index_key_scan(handler::prepare_index_key_scan2524,88756
  virtual int prepare_range_scan(handler::prepare_range_scan2526,88844
  virtual int new_alter_table_frm_data(handler::new_alter_table_frm_data2528,88947
  virtual bool try_hot_alter_table(handler::try_hot_alter_table2530,89041
 bool ha_inplace_alter_table(handler::ha_inplace_alter_table2652,94713
 void ha_notify_table_changed(handler::ha_notify_table_changed2672,95344
 virtual bool prepare_inplace_alter_table(handler::prepare_inplace_alter_table2706,96637
 virtual bool inplace_alter_table(handler::inplace_alter_table2730,97616
 virtual bool commit_inplace_alter_table(handler::commit_inplace_alter_table2763,99038
  virtual int fast_update(handler::fast_update2794,100360
  virtual int upsert(handler::upsert2796,100485
static inline enum legacy_db_type ha_legacy_type(2821,101436
static inline const char *ha_resolve_storage_engine_name(ha_resolve_storage_engine_name2826,101582
static inline bool ha_check_storage_engine_flag(2831,101748
static inline bool ha_storage_engine_is_enabled(2836,101905
#define trans_need_2pc(2910,104873
#define ha_reset_logs(2924,105480
#define ha_binlog_index_purge_file(2925,105521
#define ha_reset_slave(2926,105577
#define ha_binlog_log_query(2927,105619
#define ha_binlog_wait(2928,105678
#define ha_binlog_end(2929,105720
inline const char *table_case_name(table_case_name2937,105925

sql/ha_partition.h,6265
#define HA_PARTITION_INCLUDED2,30
enum partition_keywords27,991
  PKW_HASH=29,1018
  PKW_HASH= 0, PKW_RANGE,29,1018
  PKW_HASH= 0, PKW_RANGE, PKW_LIST,29,1018
  PKW_HASH= 0, PKW_RANGE, PKW_LIST, PKW_KEY,29,1018
  PKW_HASH= 0, PKW_RANGE, PKW_LIST, PKW_KEY, PKW_MAXVALUE,29,1018
  PKW_HASH= 0, PKW_RANGE, PKW_LIST, PKW_KEY, PKW_MAXVALUE, PKW_LINEAR,29,1018
  PKW_COLUMNS30,1089
#define PARTITION_BYTES_IN_POS 34,1108
#define PARTITION_ENABLED_TABLE_FLAGS 35,1141
#define PARTITION_DISABLED_TABLE_FLAGS 36,1215
#define PAR_WORD_SIZE 43,1602
#define PAR_CHECKSUM_OFFSET 45,1665
#define PAR_NUM_PARTS_OFFSET 47,1742
#define PAR_ENGINES_OFFSET 49,1807
class ha_partition 51,1838
  enum partition_index_scan_typeha_partition::partition_index_scan_type54,1884
    partition_index_read=ha_partition::partition_index_scan_type::partition_index_read56,1921
    partition_index_first=ha_partition::partition_index_scan_type::partition_index_first57,1950
    partition_index_first_unordered=ha_partition::partition_index_scan_type::partition_index_first_unordered58,1980
    partition_index_last=ha_partition::partition_index_scan_type::partition_index_last59,2020
    partition_index_read_last=ha_partition::partition_index_scan_type::partition_index_read_last60,2049
    partition_read_range ha_partition::partition_index_scan_type::partition_read_range61,2083
    partition_no_index_scan=ha_partition::partition_index_scan_type::partition_no_index_scan62,2113
  int  m_mode;ha_partition::m_mode65,2188
  uint m_open_test_lock;ha_partition::m_open_test_lock66,2241
  char *m_file_buffer;ha_partition::m_file_buffer67,2304
  char *m_name_buffer_ptr;ha_partition::m_name_buffer_ptr68,2373
  plugin_ref *m_engine_array;ha_partition::m_engine_array69,2436
  handler **m_file;ha_partition::m_file70,2510
  uint m_file_tot_parts;ha_partition::m_file_tot_parts71,2590
  handler **m_new_file;ha_partition::m_new_file72,2639
  handler **m_reorged_file;ha_partition::m_reorged_file73,2718
  handler **m_added_file;ha_partition::m_added_file74,2784
  partition_info *m_part_info;ha_partition::m_part_info75,2855
  Field **m_part_field_array;ha_partition::m_part_field_array76,2927
  uchar *m_ordered_rec_buffer;ha_partition::m_ordered_rec_buffer77,3007
  KEY *m_curr_key_info[ha_partition::m_curr_key_info85,3373
  uchar *m_rec0;ha_partition::m_rec086,3430
  QUEUE m_queue;ha_partition::m_queue87,3490
  ulong m_low_byte_first;ha_partition::m_low_byte_first95,3894
  enum enum_handler_statusha_partition::enum_handler_status96,3920
    handler_not_initialized=ha_partition::enum_handler_status::handler_not_initialized98,3951
    handler_initialized,ha_partition::enum_handler_status::handler_initialized99,3983
    handler_opened,ha_partition::enum_handler_status::handler_opened100,4008
    handler_closedha_partition::enum_handler_status::handler_closed101,4028
  enum_handler_status m_handler_status;ha_partition::m_handler_status103,4052
  uint m_reorged_parts;ha_partition::m_reorged_parts105,4093
  uint m_tot_parts;ha_partition::m_tot_parts106,4165
  uint m_num_locks;ha_partition::m_num_locks107,4237
  uint m_last_part;ha_partition::m_last_part108,4334
  int m_lock_type;ha_partition::m_lock_type109,4414
  part_id_range m_part_spec;ha_partition::m_part_spec111,4539
  uint m_scan_value;ha_partition::m_scan_value112,4603
  uint m_ref_length;ha_partition::m_ref_length114,4721
  key_range m_start_key;ha_partition::m_start_key116,4851
  enum partition_index_scan_type m_index_scan_type;ha_partition::m_index_scan_type117,4916
  uint m_top_entry;ha_partition::m_top_entry119,5048
  uint m_rec_length;ha_partition::m_rec_length121,5178
  bool m_ordered;ha_partition::m_ordered123,5251
  bool m_pkey_is_clustered;ha_partition::m_pkey_is_clustered124,5324
  bool m_create_handler;ha_partition::m_create_handler125,5393
  bool m_is_sub_partitioned;ha_partition::m_is_sub_partitioned126,5466
  bool m_ordered_scan_ongoing;ha_partition::m_ordered_scan_ongoing127,5528
  ha_partition *m_is_clone_of;ha_partition::m_is_clone_of133,5681
  MEM_ROOT *m_clone_mem_root;ha_partition::m_clone_mem_root134,5712
  bool m_myisam;ha_partition::m_myisam140,5892
  bool m_innodb;ha_partition::m_innodb146,6163
  bool m_extra_cache;ha_partition::m_extra_cache156,6700
  uint m_extra_cache_size;ha_partition::m_extra_cache_size157,6722
  bool m_extra_prepare_for_update;ha_partition::m_extra_prepare_for_update159,6803
  uint m_extra_cache_part_id;ha_partition::m_extra_cache_part_id161,6879
  THR_LOCK_DATA lock;ha_partition::lock167,6988
  bool auto_increment_lock;ha_partition::auto_increment_lock169,7046
  bool auto_increment_safe_stmt_log_lock;ha_partition::auto_increment_safe_stmt_log_lock174,7270
  MY_BITMAP m_bulk_insert_started;ha_partition::m_bulk_insert_started176,7363
  ha_rows   m_bulk_inserted_rows;ha_partition::m_bulk_inserted_rows177,7398
  enum_monotonicity_info m_part_func_monotonicity_info;ha_partition::m_part_func_monotonicity_info179,7487
  uint32 *m_part_ids_sorted_by_num_of_records;ha_partition::m_part_ids_sorted_by_num_of_records181,7621
  MY_BITMAP m_key_not_found_partitions;ha_partition::m_key_not_found_partitions187,7954
  bool m_key_not_found;ha_partition::m_key_not_found188,7994
  virtual void set_part_info(ha_partition::set_part_info191,8082
  bool get_no_parts(ha_partition::get_no_parts255,11257
  virtual bool is_fatal_error(ha_partition::is_fatal_error397,17173
  virtual my_bool register_query_cache_table(ha_partition::register_query_cache_table551,23904
  static const uint NO_CURRENT_PART_ID;ha_partition::NO_CURRENT_PART_ID563,24321
  virtual Table_flags table_flags(ha_partition::table_flags812,33737
  virtual ulong index_flags(ha_partition::index_flags880,36595
  virtual bool low_byte_first(ha_partition::low_byte_first910,37616
  virtual bool primary_key_is_clustered(ha_partition::primary_key_is_clustered924,38047
  virtual void lock_auto_increment(ha_partition::lock_auto_increment964,40097
  virtual void unlock_auto_increment(ha_partition::unlock_auto_increment976,40455
  virtual void set_auto_increment_if_higher(ha_partition::set_auto_increment_if_higher990,40942

sql/hash_filo.h,1140
#define  HASH_FILO_H23,878
class hash_filo_element33,1141
  hash_filo_element *next_used,hash_filo_element::next_used35,1167
  hash_filo_element *next_used,*prev_used;hash_filo_element::prev_used35,1167
  hash_filo_element(hash_filo_element::hash_filo_element37,1219
class hash_filo42,1275
  const uint size,hash_filo::size44,1293
  const uint size, key_offset,hash_filo::key_offset44,1293
  const uint size, key_offset, key_length;hash_filo::key_length44,1293
  const my_hash_get_key get_key;hash_filo::get_key45,1336
  my_hash_free_key free_element;hash_filo::free_element46,1369
  bool init;hash_filo::init47,1402
  CHARSET_INFO *hash_charset;hash_filo::hash_charset48,1415
  hash_filo_element *first_link,hash_filo::first_link50,1446
  hash_filo_element *first_link,*last_link;hash_filo::last_link50,1446
  mysql_mutex_t lock;hash_filo::lock52,1498
  HASH cache;hash_filo::cache53,1520
  hash_filo(hash_filo::hash_filo55,1535
  ~hash_filo(hash_filo::~hash_filo65,1939
  void clear(hash_filo::clear74,2123
  hash_filo_element *search(hash_filo::search91,2542
  my_bool add(hash_filo::add114,3111

sql/hostname.h,33
#define HOSTNAME_INCLUDED17,772

sql/init.h,53
#define INIT_INCLUDED17,768
void unireg_end(22,885

sql/item_cmpfunc.h,30428
#define ITEM_CMPFUNC_INCLUDED2,30
typedef int (Arg_comparator::*arg_cmp_func)arg_cmp_func34,1196
typedef int (*Item_field_cmpfunc)Item_field_cmpfunc36,1244
class Arg_comparator:Arg_comparator38,1324
  Item **a,Arg_comparator::a40,1365
  Item **a, **b;Arg_comparator::b40,1365
  arg_cmp_func func;Arg_comparator::func41,1382
  Item_result_field *owner;Arg_comparator::owner42,1403
  Arg_comparator *comparators;Arg_comparator::comparators43,1431
  double precision;Arg_comparator::precision44,1495
  THD *thd;Arg_comparator::thd46,1564
  enum_field_types a_type,Arg_comparator::a_type47,1576
  enum_field_types a_type, b_type;Arg_comparator::b_type47,1576
  Item *a_cache,Arg_comparator::a_cache48,1637
  Item *a_cache, *b_cache;Arg_comparator::b_cache48,1637
  bool is_nulls_eq;Arg_comparator::is_nulls_eq49,1706
  bool set_null;Arg_comparator::set_null50,1780
  enum enum_date_cmp_type Arg_comparator::enum_date_cmp_type52,1920
  enum enum_date_cmp_type { CMP_DATE_DFLT=Arg_comparator::enum_date_cmp_type::CMP_DATE_DFLT52,1920
  enum enum_date_cmp_type { CMP_DATE_DFLT= 0, CMP_DATE_WITH_DATE,Arg_comparator::enum_date_cmp_type::CMP_DATE_WITH_DATE52,1920
                            CMP_DATE_WITH_STR,Arg_comparator::enum_date_cmp_type::CMP_DATE_WITH_STR53,1986
                            CMP_DATE_WITH_STR, CMP_STR_WITH_DATE Arg_comparator::enum_date_cmp_type::CMP_STR_WITH_DATE53,1986
  DTCollation cmp_collation;Arg_comparator::cmp_collation60,2388
  String value1,Arg_comparator::value162,2469
  String value1, value2;Arg_comparator::value262,2469
  Arg_comparator(Arg_comparator::Arg_comparator64,2495
  Arg_comparator(Arg_comparator::Arg_comparator66,2628
  inline int set_compare_func(Arg_comparator::set_compare_func71,2868
  inline int set_cmp_func(Arg_comparator::set_cmp_func80,3187
  inline int compare(Arg_comparator::compare88,3490
  static arg_cmp_func comparator_matrix Arg_comparator::comparator_matrix116,4910
  inline bool is_owner_equal_func(Arg_comparator::is_owner_equal_func117,4958
  void cleanup(Arg_comparator::cleanup122,5120
  inline void set_cmp_context_for_datetime(Arg_comparator::set_cmp_context_for_datetime130,5266
class Item_bool_func 141,5555
  Item_bool_func(Item_bool_func::Item_bool_func144,5608
  Item_bool_func(Item_bool_func::Item_bool_func145,5647
  Item_bool_func(Item_bool_func::Item_bool_func146,5694
  Item_bool_func(Item_bool_func::Item_bool_func147,5751
  bool is_bool_func(Item_bool_func::is_bool_func148,5829
  void fix_length_and_dec(Item_bool_func::fix_length_and_dec149,5865
  uint decimal_precision(Item_bool_func::decimal_precision150,5923
class Item_func_truth 159,6080
  Item_func_truth(Item_func_truth::Item_func_truth168,6305
  ~Item_func_truth(Item_func_truth::~Item_func_truth172,6438
  const bool value;Item_func_truth::value179,6583
  const bool affirmative;Item_func_truth::affirmative183,6694
class Item_func_istrue 191,6800
  Item_func_istrue(Item_func_istrue::Item_func_istrue194,6858
  ~Item_func_istrue(Item_func_istrue::~Item_func_istrue195,6922
  virtual const char* func_name(Item_func_istrue::func_name196,6947
class Item_func_isnottrue 204,7092
  Item_func_isnottrue(Item_func_isnottrue::Item_func_isnottrue207,7153
  ~Item_func_isnottrue(Item_func_isnottrue::~Item_func_isnottrue208,7221
  virtual const char* func_name(Item_func_isnottrue::func_name209,7249
class Item_func_isfalse 217,7394
  Item_func_isfalse(Item_func_isfalse::Item_func_isfalse220,7453
  ~Item_func_isfalse(Item_func_isfalse::~Item_func_isfalse221,7519
  virtual const char* func_name(Item_func_isfalse::func_name222,7545
class Item_func_isnotfalse 230,7692
  Item_func_isnotfalse(Item_func_isnotfalse::Item_func_isnotfalse233,7754
  ~Item_func_isnotfalse(Item_func_isnotfalse::~Item_func_isnotfalse234,7824
  virtual const char* func_name(Item_func_isnotfalse::func_name235,7853
#define UNKNOWN 240,7941
class Item_in_optimizer:Item_in_optimizer258,8545
  Item_cache *cache;Item_in_optimizer::cache261,8605
  bool save_cache;Item_in_optimizer::save_cache262,8626
  my_bool result_for_null_param;Item_in_optimizer::result_for_null_param269,8861
  Item_in_optimizer(Item_in_optimizer::Item_in_optimizer271,8902
  const char *func_name(Item_in_optimizer::func_name280,9226
  Item_cache **get_cache(Item_in_optimizer::get_cache281,9287
class Comp_creator285,9368
  Comp_creator(Comp_creator::Comp_creator288,9397
  virtual ~Comp_creator(Comp_creator::~Comp_creator289,9468
class Eq_creator 296,9728
  Eq_creator(Eq_creator::Eq_creator299,9776
  virtual ~Eq_creator(Eq_creator::~Eq_creator300,9847
  virtual const char* symbol(Eq_creator::symbol302,9977
  virtual bool eqne_op(Eq_creator::eqne_op303,10056
  virtual bool l_op(Eq_creator::l_op304,10101
class Ne_creator 307,10147
  Ne_creator(Ne_creator::Ne_creator310,10195
  virtual ~Ne_creator(Ne_creator::~Ne_creator311,10266
  virtual const char* symbol(Ne_creator::symbol313,10396
  virtual bool eqne_op(Ne_creator::eqne_op314,10475
  virtual bool l_op(Ne_creator::l_op315,10520
class Gt_creator 318,10566
  Gt_creator(Gt_creator::Gt_creator321,10614
  virtual ~Gt_creator(Gt_creator::~Gt_creator322,10685
  virtual const char* symbol(Gt_creator::symbol324,10815
  virtual bool eqne_op(Gt_creator::eqne_op325,10894
  virtual bool l_op(Gt_creator::l_op326,10939
class Lt_creator 329,10985
  Lt_creator(Lt_creator::Lt_creator332,11033
  virtual ~Lt_creator(Lt_creator::~Lt_creator333,11104
  virtual const char* symbol(Lt_creator::symbol335,11234
  virtual bool eqne_op(Lt_creator::eqne_op336,11313
  virtual bool l_op(Lt_creator::l_op337,11358
class Ge_creator 340,11404
  Ge_creator(Ge_creator::Ge_creator343,11452
  virtual ~Ge_creator(Ge_creator::~Ge_creator344,11523
  virtual const char* symbol(Ge_creator::symbol346,11653
  virtual bool eqne_op(Ge_creator::eqne_op347,11732
  virtual bool l_op(Ge_creator::l_op348,11777
class Le_creator 351,11823
  Le_creator(Le_creator::Le_creator354,11871
  virtual ~Le_creator(Le_creator::~Le_creator355,11942
  virtual const char* symbol(Le_creator::symbol357,12072
  virtual bool eqne_op(Le_creator::eqne_op358,12151
  virtual bool l_op(Le_creator::l_op359,12196
class Item_bool_func2 362,12242
  Arg_comparator cmp;Item_bool_func2::cmp365,12334
  bool abort_on_null;Item_bool_func2::abort_on_null366,12356
  Item_bool_func2(Item_bool_func2::Item_bool_func2369,12387
  void set_cmp_func(Item_bool_func2::set_cmp_func372,12525
  optimize_type select_optimize(Item_bool_func2::select_optimize376,12609
  virtual enum Functype rev_functype(Item_bool_func2::rev_functype377,12673
  bool have_rev_func(Item_bool_func2::have_rev_func378,12743
  virtual inline void print(Item_bool_func2::print380,12816
  bool is_null(Item_bool_func2::is_null385,12936
  bool is_bool_func(Item_bool_func2::is_bool_func386,13012
  CHARSET_INFO *compare_collation(Item_bool_func2::compare_collation387,13048
  uint decimal_precision(Item_bool_func2::decimal_precision388,13124
  void top_level_item(Item_bool_func2::top_level_item389,13171
  void cleanup(Item_bool_func2::cleanup390,13220
class Item_bool_rowready_func2 399,13331
  Item_bool_rowready_func2(Item_bool_rowready_func2::Item_bool_rowready_func2402,13396
  bool subst_argument_checker(Item_bool_rowready_func2::subst_argument_checker408,13605
class Item_func_not 411,13669
  Item_func_not(Item_func_not::Item_func_not414,13722
  enum Functype functype(Item_func_not::functype416,13791
  const char *func_name(Item_func_not::func_name417,13845
class Item_func_trig_cond:Item_func_trig_cond453,15367
  bool *trig_var;Item_func_trig_cond::trig_var455,15418
  Item_func_trig_cond(Item_func_trig_cond::Item_func_trig_cond457,15444
  longlong val_int(Item_func_trig_cond::val_int458,15521
  enum Functype functype(Item_func_trig_cond::functype459,15589
  const char *func_name(Item_func_trig_cond::func_name460,15650
  bool const_item(Item_func_trig_cond::const_item461,15706
  bool *get_trig_var(Item_func_trig_cond::get_trig_var462,15750
class Item_func_not_all 465,15798
  Item_sum_hybrid *test_sum_item;Item_func_not_all::test_sum_item468,15912
  Item_maxmin_subselect *test_sub_item;Item_func_not_all::test_sub_item469,15946
  bool abort_on_null;Item_func_not_all::abort_on_null471,15987
  bool show;Item_func_not_all::show473,16017
  Item_func_not_all(Item_func_not_all::Item_func_not_all475,16031
  virtual void top_level_item(Item_func_not_all::top_level_item479,16157
  bool top_level(Item_func_not_all::top_level480,16211
  enum Functype functype(Item_func_not_all::functype482,16278
  const char *func_name(Item_func_not_all::func_name483,16336
  void set_sum_test(Item_func_not_all::set_sum_test485,16451
  void set_sub_test(Item_func_not_all::set_sub_test486,16520
class Item_func_nop_all 492,16671
  Item_func_nop_all(Item_func_nop_all::Item_func_nop_all496,16732
  const char *func_name(Item_func_nop_all::func_name498,16808
class Item_func_eq 503,16900
  Item_func_eq(Item_func_eq::Item_func_eq506,16962
  enum Functype functype(Item_func_eq::functype508,17050
  enum Functype rev_functype(Item_func_eq::rev_functype509,17103
  cond_result eq_cmp_result(Item_func_eq::eq_cmp_result510,17160
  const char *func_name(Item_func_eq::func_name511,17218
class Item_func_equal 515,17294
  Item_func_equal(Item_func_equal::Item_func_equal518,17359
  table_map not_null_tables(Item_func_equal::not_null_tables521,17480
  enum Functype functype(Item_func_equal::functype522,17530
  enum Functype rev_functype(Item_func_equal::rev_functype523,17586
  cond_result eq_cmp_result(Item_func_equal::eq_cmp_result524,17646
  const char *func_name(Item_func_equal::func_name525,17704
  Item *neg_transformer(Item_func_equal::neg_transformer526,17754
class Item_func_ge 530,17807
  Item_func_ge(Item_func_ge::Item_func_ge533,17869
  enum Functype functype(Item_func_ge::functype535,17958
  enum Functype rev_functype(Item_func_ge::rev_functype536,18011
  cond_result eq_cmp_result(Item_func_ge::eq_cmp_result537,18068
  const char *func_name(Item_func_ge::func_name538,18126
class Item_func_gt 543,18204
  Item_func_gt(Item_func_gt::Item_func_gt546,18266
  enum Functype functype(Item_func_gt::functype548,18355
  enum Functype rev_functype(Item_func_gt::rev_functype549,18408
  cond_result eq_cmp_result(Item_func_gt::eq_cmp_result550,18465
  const char *func_name(Item_func_gt::func_name551,18524
class Item_func_le 556,18601
  Item_func_le(Item_func_le::Item_func_le559,18663
  enum Functype functype(Item_func_le::functype561,18752
  enum Functype rev_functype(Item_func_le::rev_functype562,18805
  cond_result eq_cmp_result(Item_func_le::eq_cmp_result563,18862
  const char *func_name(Item_func_le::func_name564,18920
class Item_func_lt 569,18998
  Item_func_lt(Item_func_lt::Item_func_lt572,19060
  enum Functype functype(Item_func_lt::functype574,19148
  enum Functype rev_functype(Item_func_lt::rev_functype575,19201
  cond_result eq_cmp_result(Item_func_lt::eq_cmp_result576,19258
  const char *func_name(Item_func_lt::func_name577,19317
class Item_func_ne 582,19394
  Item_func_ne(Item_func_ne::Item_func_ne585,19456
  enum Functype functype(Item_func_ne::functype587,19544
  cond_result eq_cmp_result(Item_func_ne::eq_cmp_result588,19597
  optimize_type select_optimize(Item_func_ne::select_optimize589,19656
  const char *func_name(Item_func_ne::func_name590,19722
class Item_func_opt_neg 604,20145
  bool negated;Item_func_opt_neg::negated607,20201
  bool pred_level;Item_func_opt_neg::pred_level608,20262
  Item_func_opt_neg(Item_func_opt_neg::Item_func_opt_neg610,20342
  Item_func_opt_neg(Item_func_opt_neg::Item_func_opt_neg612,20447
  inline void negate(Item_func_opt_neg::negate615,20548
  inline void top_level_item(Item_func_opt_neg::top_level_item616,20594
  Item *neg_transformer(Item_func_opt_neg::neg_transformer617,20644
  bool subst_argument_checker(Item_func_opt_neg::subst_argument_checker623,20778
class Item_func_between 627,20843
  DTCollation cmp_collation;Item_func_between::cmp_collation629,20895
  Item_result cmp_type;Item_func_between::cmp_type631,20932
  String value0,Item_func_between::value0632,20956
  String value0,value1,Item_func_between::value1632,20956
  String value0,value1,value2;Item_func_between::value2632,20956
  bool compare_as_dates;Item_func_between::compare_as_dates634,21041
  Arg_comparator ge_cmp,Item_func_between::ge_cmp636,21121
  Arg_comparator ge_cmp, le_cmp;Item_func_between::le_cmp636,21121
  Item_func_between(Item_func_between::Item_func_between637,21154
  optimize_type select_optimize(Item_func_between::select_optimize640,21283
  enum Functype functype(Item_func_between::functype641,21348
  const char *func_name(Item_func_between::func_name642,21403
  bool is_bool_func(Item_func_between::is_bool_func646,21584
  CHARSET_INFO *compare_collation(Item_func_between::compare_collation647,21620
  uint decimal_precision(Item_func_between::decimal_precision648,21692
class Item_func_strcmp 652,21744
  Item_func_strcmp(Item_func_strcmp::Item_func_strcmp655,21801
  optimize_type select_optimize(Item_func_strcmp::select_optimize657,21884
  const char *func_name(Item_func_strcmp::func_name658,21950
  virtual inline void print(Item_func_strcmp::print660,22004
  void fix_length_and_dec(Item_func_strcmp::fix_length_and_dec664,22120
struct interval_range672,22258
  Item_result type;interval_range::type674,22282
  double dbl;interval_range::dbl675,22302
  my_decimal dec;interval_range::dec676,22316
class Item_func_interval 679,22338
  Item_row *row;Item_func_interval::row681,22387
  my_bool use_decimal_comparison;Item_func_interval::use_decimal_comparison682,22404
  interval_range *intervals;Item_func_interval::intervals683,22438
  Item_func_interval(Item_func_interval::Item_func_interval685,22475
  const char *func_name(Item_func_interval::func_name692,22678
  uint decimal_precision(Item_func_interval::decimal_precision693,22733
class Item_func_coalesce 697,22785
  enum_field_types cached_field_type;Item_func_coalesce::cached_field_type700,22851
  Item_func_coalesce(Item_func_coalesce::Item_func_coalesce701,22889
  Item_func_coalesce(Item_func_coalesce::Item_func_coalesce703,22966
  void find_num_type(Item_func_coalesce::find_num_type709,23173
  enum Item_result result_type Item_func_coalesce::result_type710,23199
  const char *func_name(Item_func_coalesce::func_name711,23263
  table_map not_null_tables(Item_func_coalesce::not_null_tables712,23318
  enum_field_types field_type(Item_func_coalesce::field_type713,23368
class Item_func_ifnull 717,23441
  bool field_type_defined;Item_func_ifnull::field_type_defined720,23504
  Item_func_ifnull(Item_func_ifnull::Item_func_ifnull722,23539
  const char *func_name(Item_func_ifnull::func_name729,23784
class Item_func_if 735,23916
  enum Item_result cached_result_type;Item_func_if::cached_result_type737,23955
  enum_field_types cached_field_type;Item_func_if::cached_field_type738,23994
  Item_func_if(Item_func_if::Item_func_if740,24040
  enum Item_result result_type Item_func_if::result_type747,24255
  enum_field_types field_type(Item_func_if::field_type748,24326
  const char *func_name(Item_func_if::func_name752,24492
class Item_func_nullif 758,24593
  enum Item_result cached_result_type;Item_func_nullif::cached_result_type760,24642
  Item_func_nullif(Item_func_nullif::Item_func_nullif762,24689
  enum Item_result result_type Item_func_nullif::result_type769,24904
  uint decimal_precision(Item_func_nullif::decimal_precision771,25004
  const char *func_name(Item_func_nullif::func_name772,25078
  virtual inline void print(Item_func_nullif::print774,25132
  table_map not_null_tables(Item_func_nullif::not_null_tables779,25249
class in_vector 789,25407
  char *base;in_vector::base792,25451
  uint size;in_vector::size793,25465
  qsort2_cmp compare;in_vector::compare794,25478
  CHARSET_INFO *collation;in_vector::collation795,25500
  uint count;in_vector::count796,25527
  uint used_count;in_vector::used_count797,25541
  in_vector(in_vector::in_vector798,25560
  in_vector(in_vector::in_vector799,25577
  virtual ~in_vector(in_vector::~in_vector804,25845
  void sort(in_vector::sort807,25956
  virtual Item* create_item(in_vector::create_item821,26457
  virtual void value_to_item(in_vector::value_to_item831,26778
  bool compare_elems(in_vector::compare_elems834,26893
class in_string 841,27061
  char buff[in_string::buff843,27097
  String tmp;in_string::tmp844,27136
  Item* create_item(in_string::create_item850,27305
  void value_to_item(in_string::value_to_item854,27375
  Item_result result_type(in_string::result_type860,27534
class in_longlong 863,27592
  struct packed_longlong in_longlong::packed_longlong871,27813
    longlong val;in_longlong::packed_longlong::val873,27843
    longlong unsigned_flag;in_longlong::packed_longlong::unsigned_flag874,27861
  } tmp;in_longlong::tmp875,27939
  Item* create_item(in_longlong::create_item881,28054
  void value_to_item(in_longlong::value_to_item889,28236
  Item_result result_type(in_longlong::result_type895,28455
class in_datetime 907,28825
  THD *thd;in_datetime::thd910,28873
  Item *warn_item;in_datetime::warn_item912,28925
  Item *lval_cache;in_datetime::lval_cache914,28977
  in_datetime(in_datetime::in_datetime916,28998
class in_double 925,29294
  double tmp;in_double::tmp927,29330
  Item *create_item(in_double::create_item932,29445
  void value_to_item(in_double::value_to_item936,29511
  Item_result result_type(in_double::result_type940,29617
class in_decimal 944,29674
  my_decimal val;in_decimal::val946,29711
  Item *create_item(in_decimal::create_item951,29832
  void value_to_item(in_decimal::value_to_item955,29902
  Item_result result_type(in_decimal::result_type961,30089
class cmp_item 970,30206
  CHARSET_INFO *cmp_charset;cmp_item::cmp_charset973,30249
  cmp_item(cmp_item::cmp_item974,30278
  virtual ~cmp_item(cmp_item::~cmp_item975,30325
  virtual void store_value_by_template(cmp_item::store_value_by_template982,30607
class cmp_item_string 988,30709
  String *value_res;cmp_item_string::value_res991,30762
  cmp_item_string cmp_item_string::cmp_item_string993,30791
  cmp_item_string cmp_item_string::cmp_item_string994,30815
  void set_charset(cmp_item_string::set_charset995,30873
class cmp_item_sort_string 1000,31019
  char value_buff[cmp_item_sort_string::value_buff1003,31083
  String value;cmp_item_sort_string::value1004,31128
  cmp_item_sort_string(cmp_item_sort_string::cmp_item_sort_string1006,31152
  cmp_item_sort_string(cmp_item_sort_string::cmp_item_sort_string1008,31203
  void store_value(cmp_item_sort_string::store_value1011,31319
  int cmp(cmp_item_sort_string::cmp1015,31396
  int compare(cmp_item_sort_string::compare1023,31654
  void set_charset(cmp_item_sort_string::set_charset1029,31830
class cmp_item_int 1036,31957
  longlong value;cmp_item_int::value1038,31995
  cmp_item_int(cmp_item_int::cmp_item_int1040,32021
  void store_value(cmp_item_int::store_value1041,32092
  int cmp(cmp_item_int::cmp1045,32159
  int compare(cmp_item_int::compare1049,32224
class cmp_item_datetime 1063,32619
  longlong value;cmp_item_datetime::value1065,32662
  THD *thd;cmp_item_datetime::thd1067,32688
  Item *warn_item;cmp_item_datetime::warn_item1069,32740
  Item *lval_cache;cmp_item_datetime::lval_cache1071,32792
  cmp_item_datetime(cmp_item_datetime::cmp_item_datetime1073,32813
class cmp_item_real 1081,33032
  double value;cmp_item_real::value1083,33071
  cmp_item_real(cmp_item_real::cmp_item_real1085,33095
  void store_value(cmp_item_real::store_value1086,33166
  int cmp(cmp_item_real::cmp1090,33234
  int compare(cmp_item_real::compare1094,33300
class cmp_item_decimal 1103,33489
  my_decimal value;cmp_item_decimal::value1105,33531
  cmp_item_decimal(cmp_item_decimal::cmp_item_decimal1107,33559
class cmp_item_sort_string_in_static 1120,33835
  String value;cmp_item_sort_string_in_static::value1123,33910
  cmp_item_sort_string_in_static(cmp_item_sort_string_in_static::cmp_item_sort_string_in_static1125,33934
  void store_value(cmp_item_sort_string_in_static::store_value1127,34013
  int cmp(cmp_item_sort_string_in_static::cmp1131,34090
  int compare(cmp_item_sort_string_in_static::compare1137,34184
  cmp_item *make_same(cmp_item_sort_string_in_static::make_same1142,34334
class Item_func_case 1167,35275
  int first_expr_num,Item_func_case::first_expr_num1169,35316
  int first_expr_num, else_expr_num;Item_func_case::else_expr_num1169,35316
  enum Item_result cached_result_type,Item_func_case::cached_result_type1170,35353
  enum Item_result cached_result_type, left_result_type;Item_func_case::left_result_type1170,35353
  String tmp_value;Item_func_case::tmp_value1171,35410
  uint ncases;Item_func_case::ncases1172,35430
  Item_result cmp_type;Item_func_case::cmp_type1173,35445
  DTCollation cmp_collation;Item_func_case::cmp_collation1174,35469
  enum_field_types cached_field_type;Item_func_case::cached_field_type1175,35498
  cmp_item *cmp_items[Item_func_case::cmp_items1176,35536
  cmp_item *case_item;Item_func_case::case_item1177,35589
  Item_func_case(Item_func_case::Item_func_case1179,35620
  table_map not_null_tables(Item_func_case::not_null_tables1204,36372
  enum Item_result result_type Item_func_case::result_type1205,36422
  enum_field_types field_type(Item_func_case::field_type1206,36493
  const char *func_name(Item_func_case::func_name1207,36561
  CHARSET_INFO *compare_collation(Item_func_case::compare_collation1210,36707
class Item_func_in 1230,37538
  in_vector *array;Item_func_in::array1237,37712
  bool have_null;Item_func_in::have_null1238,37732
  bool arg_types_compatible;Item_func_in::arg_types_compatible1243,37891
  Item_result left_result_type;Item_func_in::left_result_type1244,37920
  cmp_item *cmp_items[Item_func_in::cmp_items1245,37952
  DTCollation cmp_collation;Item_func_in::cmp_collation1246,38018
  Item_func_in(Item_func_in::Item_func_in1248,38048
  uint decimal_precision(Item_func_in::decimal_precision1258,38369
  void cleanup(Item_func_in::cleanup1259,38416
  optimize_type select_optimize(Item_func_in::select_optimize1273,38691
  enum Functype functype(Item_func_in::functype1276,38823
  const char *func_name(Item_func_in::func_name1277,38876
  bool is_bool_func(Item_func_in::is_bool_func1279,38950
  CHARSET_INFO *compare_collation(Item_func_in::compare_collation1280,38986
class cmp_item_row 1283,39062
  cmp_item **comparators;cmp_item_row::comparators1285,39100
  uint n;cmp_item_row::n1286,39126
  cmp_item_row(cmp_item_row::cmp_item_row1288,39144
class in_row 1300,39460
  cmp_item_row tmp;in_row::tmp1302,39493
  Item_result result_type(in_row::result_type1309,39682
class Item_func_isnull 1314,39775
  longlong cached_value;Item_func_isnull::cached_value1317,39834
  Item_func_isnull(Item_func_isnull::Item_func_isnull1319,39867
  enum Functype functype(Item_func_isnull::functype1321,39939
  void fix_length_and_dec(Item_func_isnull::fix_length_and_dec1322,39996
  const char *func_name(Item_func_isnull::func_name1327,40102
  virtual void update_used_tables(Item_func_isnull::update_used_tables1329,40204
  table_map not_null_tables(Item_func_isnull::not_null_tables1348,40686
  optimize_type select_optimize(Item_func_isnull::select_optimize1349,40736
  CHARSET_INFO *compare_collation(Item_func_isnull::compare_collation1351,40837
class Item_is_not_null_test 1362,41095
  Item_in_subselect* owner;Item_is_not_null_test::owner1364,41150
  Item_is_not_null_test(Item_is_not_null_test::Item_is_not_null_test1366,41186
  enum Functype functype(Item_is_not_null_test::functype1369,41283
  const char *func_name(Item_is_not_null_test::func_name1371,41369
  table_map used_tables(Item_is_not_null_test::used_tables1376,41548
class Item_func_isnotnull 1381,41636
  bool abort_on_null;Item_func_isnotnull::abort_on_null1383,41687
  Item_func_isnotnull(Item_func_isnotnull::Item_func_isnotnull1385,41717
  enum Functype functype(Item_func_isnotnull::functype1387,41810
  void fix_length_and_dec(Item_func_isnotnull::fix_length_and_dec1388,41870
  const char *func_name(Item_func_isnotnull::func_name1392,41950
  optimize_type select_optimize(Item_func_isnotnull::select_optimize1393,42006
  table_map not_null_tables(Item_func_isnotnull::not_null_tables1394,42072
  CHARSET_INFO *compare_collation(Item_func_isnotnull::compare_collation1398,42262
  void top_level_item(Item_func_isnotnull::top_level_item1399,42339
class Item_func_like 1403,42389
  bool        canDoTurboBM;Item_func_like::canDoTurboBM1406,42464
  const char* pattern;Item_func_like::pattern1407,42520
  int         pattern_len;Item_func_like::pattern_len1408,42543
  int* bmGs;Item_func_like::bmGs1411,42608
  int* bmBc;Item_func_like::bmBc1412,42675
  enum { alphabet_size Item_func_like::alphabet_size1418,42948
  Item *escape_item;Item_func_like::escape_item1420,42981
  bool escape_used_in_parsing;Item_func_like::escape_used_in_parsing1422,43005
  int escape;Item_func_like::escape1425,43045
  Item_func_like(Item_func_like::Item_func_like1427,43060
  enum Functype functype(Item_func_like::functype1432,43321
  cond_result eq_cmp_result(Item_func_like::eq_cmp_result1434,43417
  const char *func_name(Item_func_like::func_name1435,43475
class Item_func_regex 1441,43590
  my_regex_t preg;Item_func_regex::preg1443,43637
  bool regex_compiled;Item_func_regex::regex_compiled1444,43656
  bool regex_is_const;Item_func_regex::regex_is_const1445,43679
  String prev_regexp;Item_func_regex::prev_regexp1446,43702
  DTCollation cmp_collation;Item_func_regex::cmp_collation1447,43724
  CHARSET_INFO *regex_lib_charset;Item_func_regex::regex_lib_charset1448,43753
  int regex_lib_flags;Item_func_regex::regex_lib_flags1449,43788
  String conv;Item_func_regex::conv1450,43811
  Item_func_regex(Item_func_regex::Item_func_regex1453,43866
  const char *func_name(Item_func_regex::func_name1458,44047
  virtual inline void print(Item_func_regex::print1460,44101
  CHARSET_INFO *compare_collation(Item_func_regex::compare_collation1465,44210
typedef class Item COND;1469,44287
class Item_cond 1471,44313
  List<Item> list;Item_cond::list1474,44365
  bool abort_on_null;Item_cond::abort_on_null1475,44384
  table_map and_tables_cache;Item_cond::and_tables_cache1476,44406
  Item_cond(Item_cond::Item_cond1480,44504
  Item_cond(Item_cond::Item_cond1482,44580
  Item_cond(Item_cond::Item_cond1489,44747
  bool add(Item_cond::add1491,44834
  bool add_at_head(Item_cond::add_at_head1496,44921
  void add_at_head(Item_cond::add_at_head1501,45017
  enum Type type(Item_cond::type1508,45161
  List<Item>* argument_list(Item_cond::argument_list1509,45208
  void top_level_item(Item_cond::top_level_item1516,45575
  enum_field_types field_type(Item_cond::field_type1522,45911
  bool subst_argument_checker(Item_cond::subst_argument_checker1523,45981
class Item_equal:Item_equal1604,49620
  List<Item_field> fields;Item_equal::fields1606,49662
  Item *const_item;Item_equal::const_item1607,49740
  cmp_item *eval_item;Item_equal::eval_item1608,49818
  Arg_comparator cmp;Item_equal::cmp1609,49841
  bool cond_false;Item_equal::cond_false1610,49863
  bool compare_as_dates;Item_equal::compare_as_dates1611,49882
  inline Item_equal(Item_equal::Item_equal1613,49915
  inline Item* get_const(Item_equal::get_const1619,50152
  Item_field* get_first(Item_equal::get_first1626,50366
  enum Functype functype(Item_equal::functype1629,50473
  const char *func_name(Item_equal::func_name1631,50557
  optimize_type select_optimize(Item_equal::select_optimize1632,50618
  CHARSET_INFO *compare_collation(Item_equal::compare_collation1641,51067
class COND_EQUAL:COND_EQUAL1645,51158
  uint max_members;COND_EQUAL::max_members1648,51203
  COND_EQUAL *upper_levels;COND_EQUAL::upper_levels1650,51352
  List<Item_equal> current_level;COND_EQUAL::current_level1651,51432
  COND_EQUAL(COND_EQUAL::COND_EQUAL1653,51573
class Item_equal_iterator 1660,51623
  inline Item_equal_iterator(Item_equal_iterator::Item_equal_iterator1663,51699
  inline Item_field* operator++(Item_equal_iterator::operator++1666,51814
  inline void rewind(Item_equal_iterator::rewind1671,51946
class Item_cond_and 1677,52033
  COND_EQUAL cond_equal;Item_cond_and::cond_equal1680,52081
  Item_cond_and(Item_cond_and::Item_cond_and1683,52293
  Item_cond_and(Item_cond_and::Item_cond_and1684,52327
  Item_cond_and(Item_cond_and::Item_cond_and1685,52383
  Item_cond_and(Item_cond_and::Item_cond_and1686,52455
  enum Functype functype(Item_cond_and::functype1687,52517
  const char *func_name(Item_cond_and::func_name1689,52598
  table_map not_null_tables(Item_cond_and::not_null_tables1690,52648
  Item* copy_andor_structure(Item_cond_and::copy_andor_structure1692,52754
inline bool is_cond_and(1702,52974
class Item_cond_or 1711,53178
  Item_cond_or(Item_cond_or::Item_cond_or1714,53225
  Item_cond_or(Item_cond_or::Item_cond_or1715,53258
  Item_cond_or(Item_cond_or::Item_cond_or1716,53313
  Item_cond_or(Item_cond_or::Item_cond_or1717,53383
  enum Functype functype(Item_cond_or::functype1718,53444
  const char *func_name(Item_cond_or::func_name1720,53524
  table_map not_null_tables(Item_cond_or::not_null_tables1721,53573
  Item* copy_andor_structure(Item_cond_or::copy_andor_structure1722,53638
inline bool is_cond_or(1732,53855
class Item_cond_xor 1746,54183
  Item_cond_xor(Item_cond_xor::Item_cond_xor1749,54231
  Item_cond_xor(Item_cond_xor::Item_cond_xor1750,54265
  enum Functype functype(Item_cond_xor::functype1751,54321
  enum Type type(Item_cond_xor::type1753,54450
  const char *func_name(Item_cond_xor::func_name1755,54519
  void top_level_item(Item_cond_xor::top_level_item1756,54569
inline Item *and_conds(and_conds1762,54637

sql/item_create.h,587
#define ITEM_CREATE_H19,827
typedef struct st_udf_func udf_func;21,850
class Create_func34,1401
  Create_func(Create_func::Create_func62,2637
  virtual ~Create_func(Create_func::~Create_func64,2676
class Create_qfunc 74,2891
  Create_qfunc(Create_qfunc::Create_qfunc101,3907
  virtual ~Create_qfunc(Create_qfunc::~Create_qfunc103,3948
class Create_udf_func 129,4572
  static Create_udf_func s_singleton;Create_udf_func::s_singleton144,5074
  Create_udf_func(Create_udf_func::Create_udf_func148,5146
  virtual ~Create_udf_func(Create_udf_func::~Create_udf_func150,5190

sql/item_func.h,37062
#define ITEM_FUNC_INCLUDED2,27
class Item_func 33,1022
  Item **args,Item_func::args36,1077
  Item **args, *tmp_arg[Item_func::tmp_arg36,1077
  uint allowed_arg_cols;Item_func::allowed_arg_cols41,1242
  uint arg_count;Item_func::arg_count43,1275
  table_map used_tables_cache,Item_func::used_tables_cache44,1293
  table_map used_tables_cache, not_null_tables_cache;Item_func::not_null_tables_cache44,1293
  bool const_item_cache;Item_func::const_item_cache45,1347
  enum Functype Item_func::Functype46,1372
  enum Functype { UNKNOWN_FUNC,Item_func::Functype::UNKNOWN_FUNC46,1372
  enum Functype { UNKNOWN_FUNC,EQ_FUNC,Item_func::Functype::EQ_FUNC46,1372
  enum Functype { UNKNOWN_FUNC,EQ_FUNC,EQUAL_FUNC,Item_func::Functype::EQUAL_FUNC46,1372
  enum Functype { UNKNOWN_FUNC,EQ_FUNC,EQUAL_FUNC,NE_FUNC,Item_func::Functype::NE_FUNC46,1372
  enum Functype { UNKNOWN_FUNC,EQ_FUNC,EQUAL_FUNC,NE_FUNC,LT_FUNC,Item_func::Functype::LT_FUNC46,1372
  enum Functype { UNKNOWN_FUNC,EQ_FUNC,EQUAL_FUNC,NE_FUNC,LT_FUNC,LE_FUNC,Item_func::Functype::LE_FUNC46,1372
		  GE_FUNC,Item_func::Functype::GE_FUNC47,1447
		  GE_FUNC,GT_FUNC,Item_func::Functype::GT_FUNC47,1447
		  GE_FUNC,GT_FUNC,FT_FUNC,Item_func::Functype::FT_FUNC47,1447
		  LIKE_FUNC,Item_func::Functype::LIKE_FUNC48,1476
		  LIKE_FUNC,ISNULL_FUNC,Item_func::Functype::ISNULL_FUNC48,1476
		  LIKE_FUNC,ISNULL_FUNC,ISNOTNULL_FUNC,Item_func::Functype::ISNOTNULL_FUNC48,1476
		  COND_AND_FUNC,Item_func::Functype::COND_AND_FUNC49,1518
		  COND_AND_FUNC, COND_OR_FUNC,Item_func::Functype::COND_OR_FUNC49,1518
		  COND_AND_FUNC, COND_OR_FUNC, COND_XOR_FUNC,Item_func::Functype::COND_XOR_FUNC49,1518
                  BETWEEN,Item_func::Functype::BETWEEN50,1566
                  BETWEEN, IN_FUNC,Item_func::Functype::IN_FUNC50,1566
                  BETWEEN, IN_FUNC, MULT_EQUAL_FUNC,Item_func::Functype::MULT_EQUAL_FUNC50,1566
		  INTERVAL_FUNC,Item_func::Functype::INTERVAL_FUNC51,1619
		  INTERVAL_FUNC, ISNOTNULLTEST_FUNC,Item_func::Functype::ISNOTNULLTEST_FUNC51,1619
		  SP_EQUALS_FUNC,Item_func::Functype::SP_EQUALS_FUNC52,1658
		  SP_EQUALS_FUNC, SP_DISJOINT_FUNC,Item_func::Functype::SP_DISJOINT_FUNC52,1658
		  SP_EQUALS_FUNC, SP_DISJOINT_FUNC,SP_INTERSECTS_FUNC,Item_func::Functype::SP_INTERSECTS_FUNC52,1658
		  SP_TOUCHES_FUNC,Item_func::Functype::SP_TOUCHES_FUNC53,1715
		  SP_TOUCHES_FUNC,SP_CROSSES_FUNC,Item_func::Functype::SP_CROSSES_FUNC53,1715
		  SP_TOUCHES_FUNC,SP_CROSSES_FUNC,SP_WITHIN_FUNC,Item_func::Functype::SP_WITHIN_FUNC53,1715
		  SP_CONTAINS_FUNC,Item_func::Functype::SP_CONTAINS_FUNC54,1767
		  SP_CONTAINS_FUNC,SP_OVERLAPS_FUNC,Item_func::Functype::SP_OVERLAPS_FUNC54,1767
		  SP_STARTPOINT,Item_func::Functype::SP_STARTPOINT55,1806
		  SP_STARTPOINT,SP_ENDPOINT,Item_func::Functype::SP_ENDPOINT55,1806
		  SP_STARTPOINT,SP_ENDPOINT,SP_EXTERIORRING,Item_func::Functype::SP_EXTERIORRING55,1806
		  SP_POINTN,Item_func::Functype::SP_POINTN56,1853
		  SP_POINTN,SP_GEOMETRYN,Item_func::Functype::SP_GEOMETRYN56,1853
		  SP_POINTN,SP_GEOMETRYN,SP_INTERIORRINGN,Item_func::Functype::SP_INTERIORRINGN56,1853
                  NOT_FUNC,Item_func::Functype::NOT_FUNC57,1898
                  NOT_FUNC, NOT_ALL_FUNC,Item_func::Functype::NOT_ALL_FUNC57,1898
                  NOW_FUNC,Item_func::Functype::NOW_FUNC58,1940
                  NOW_FUNC, TRIG_COND_FUNC,Item_func::Functype::TRIG_COND_FUNC58,1940
                  SUSERVAR_FUNC,Item_func::Functype::SUSERVAR_FUNC59,1984
                  SUSERVAR_FUNC, GUSERVAR_FUNC,Item_func::Functype::GUSERVAR_FUNC59,1984
                  SUSERVAR_FUNC, GUSERVAR_FUNC, COLLATE_FUNC,Item_func::Functype::COLLATE_FUNC59,1984
                  EXTRACT_FUNC,Item_func::Functype::EXTRACT_FUNC60,2046
                  EXTRACT_FUNC, CHAR_TYPECAST_FUNC,Item_func::Functype::CHAR_TYPECAST_FUNC60,2046
                  EXTRACT_FUNC, CHAR_TYPECAST_FUNC, FUNC_SP,Item_func::Functype::FUNC_SP60,2046
                  EXTRACT_FUNC, CHAR_TYPECAST_FUNC, FUNC_SP, UDF_FUNC,Item_func::Functype::UDF_FUNC60,2046
                  NEG_FUNC,Item_func::Functype::NEG_FUNC61,2117
                  NEG_FUNC, GSYSVAR_FUNC Item_func::Functype::GSYSVAR_FUNC61,2117
  enum optimize_type Item_func::optimize_type62,2161
  enum optimize_type { OPTIMIZE_NONE,Item_func::optimize_type::OPTIMIZE_NONE62,2161
  enum optimize_type { OPTIMIZE_NONE,OPTIMIZE_KEY,Item_func::optimize_type::OPTIMIZE_KEY62,2161
  enum optimize_type { OPTIMIZE_NONE,OPTIMIZE_KEY,OPTIMIZE_OP,Item_func::optimize_type::OPTIMIZE_OP62,2161
  enum optimize_type { OPTIMIZE_NONE,OPTIMIZE_KEY,OPTIMIZE_OP, OPTIMIZE_NULL,Item_func::optimize_type::OPTIMIZE_NULL62,2161
                       OPTIMIZE_EQUAL Item_func::optimize_type::OPTIMIZE_EQUAL63,2239
  enum Type type(Item_func::type64,2280
  virtual enum Functype functype(Item_func::functype65,2327
  Item_func(Item_func::Item_func66,2395
  Item_func(Item_func::Item_func71,2482
  Item_func(Item_func::Item_func78,2622
  Item_func(Item_func::Item_func85,2802
  Item_func(Item_func::Item_func96,3096
  Item_func(Item_func::Item_func108,3431
  virtual optimize_type select_optimize(Item_func::select_optimize127,4109
  virtual bool have_rev_func(Item_func::have_rev_func128,4183
  virtual Item *key_item(Item_func::key_item129,4234
  virtual bool const_item(Item_func::const_item130,4287
  inline Item **arguments(Item_func::arguments131,4350
  inline uint argument_count(Item_func::argument_count133,4441
  inline void remove_arguments(Item_func::remove_arguments134,4500
  inline bool get_arg0_date(Item_func::get_arg0_date143,4949
  inline bool get_arg0_time(Item_func::get_arg0_time147,5083
  bool is_null(Item_func::is_null151,5188
  Field *tmp_table_field(Item_func::tmp_table_field157,5321
  bool agg_arg_charsets(Item_func::agg_arg_charsets163,5494
  bool agg_arg_charsets_for_string_result(Item_func::agg_arg_charsets_for_string_result173,5868
  bool agg_arg_charsets_for_comparison(Item_func::agg_arg_charsets_for_comparison185,6391
  bool agg_arg_charsets_for_string_result_with_comparison(Item_func::agg_arg_charsets_for_string_result_with_comparison198,6932
  virtual bool is_expensive(Item_func::is_expensive214,7857
  inline void raise_numeric_overflow(Item_func::raise_numeric_overflow215,7901
  inline double raise_float_overflow(Item_func::raise_float_overflow223,8165
  inline longlong raise_integer_overflow(Item_func::raise_integer_overflow228,8266
  inline int raise_decimal_overflow(Item_func::raise_decimal_overflow233,8404
  inline double check_float_overflow(Item_func::check_float_overflow242,8624
  inline longlong check_integer_overflow(Item_func::check_integer_overflow251,8960
  inline int check_decimal_overflow(Item_func::check_decimal_overflow261,9327
  bool has_timestamp_args(Item_func::has_timestamp_args266,9456
  bool has_date_args(Item_func::has_date_args278,9722
  bool has_time_args(Item_func::has_time_args291,10039
  bool has_datetime_args(Item_func::has_datetime_args304,10356
  virtual bool check_valid_arguments_processor(Item_func::check_valid_arguments_processor324,11015
  virtual bool find_function_processor Item_func::find_function_processor329,11121
class Item_real_func 336,11230
  Item_real_func(Item_real_func::Item_real_func339,11279
  Item_real_func(Item_real_func::Item_real_func340,11340
  Item_real_func(Item_real_func::Item_real_func341,11409
  Item_real_func(Item_real_func::Item_real_func342,11488
  longlong val_int(Item_real_func::val_int345,11654
  enum Item_result result_type Item_real_func::result_type347,11744
  void fix_length_and_dec(Item_real_func::fix_length_and_dec348,11808
class Item_func_numhybrid:Item_func_numhybrid353,11908
  Item_result hybrid_type;Item_func_numhybrid::hybrid_type356,11965
  Item_func_numhybrid(Item_func_numhybrid::Item_func_numhybrid358,12000
  Item_func_numhybrid(Item_func_numhybrid::Item_func_numhybrid360,12102
  Item_func_numhybrid(Item_func_numhybrid::Item_func_numhybrid363,12218
  enum Item_result result_type Item_func_numhybrid::result_type367,12337
  bool is_null(Item_func_numhybrid::is_null412,13622
class Item_func_num1:Item_func_num1416,13750
  Item_func_num1(Item_func_num1::Item_func_num1419,13809
  Item_func_num1(Item_func_num1::Item_func_num1420,13862
  String *str_op(Item_func_num1::str_op424,13985
class Item_num_op 429,14101
  Item_num_op(Item_num_op::Item_num_op432,14158
  virtual inline void print(Item_num_op::print435,14258
  String *str_op(Item_num_op::str_op441,14391
class Item_int_func 445,14456
  Item_int_func(Item_int_func::Item_int_func448,14504
  Item_int_func(Item_int_func::Item_int_func450,14587
  Item_int_func(Item_int_func::Item_int_func452,14678
  Item_int_func(Item_int_func::Item_int_func454,14779
  Item_int_func(Item_int_func::Item_int_func456,14890
  Item_int_func(Item_int_func::Item_int_func458,14993
  enum Item_result result_type Item_int_func::result_type462,15145
  void fix_length_and_dec(Item_int_func::fix_length_and_dec463,15208
class Item_func_connection_id 467,15244
  longlong value;Item_func_connection_id::value469,15298
  Item_func_connection_id(Item_func_connection_id::Item_func_connection_id472,15325
  const char *func_name(Item_func_connection_id::func_name473,15356
  longlong val_int(Item_func_connection_id::val_int476,15486
class Item_func_signed 480,15555
  Item_func_signed(Item_func_signed::Item_func_signed483,15610
  const char *func_name(Item_func_signed::func_name484,15659
  void fix_length_and_dec(Item_func_signed::fix_length_and_dec487,15783
  uint decimal_precision(Item_func_signed::decimal_precision490,15942
class Item_func_unsigned 494,16021
  Item_func_unsigned(Item_func_unsigned::Item_func_unsigned497,16081
  const char *func_name(Item_func_unsigned::func_name498,16135
  void fix_length_and_dec(Item_func_unsigned::fix_length_and_dec499,16198
class Item_decimal_typecast 510,16450
  my_decimal decimal_value;Item_decimal_typecast::decimal_value512,16498
  Item_decimal_typecast(Item_decimal_typecast::Item_decimal_typecast514,16534
  enum Item_result result_type Item_decimal_typecast::result_type525,16927
  enum_field_types field_type(Item_decimal_typecast::field_type526,16994
  void fix_length_and_dec(Item_decimal_typecast::fix_length_and_dec527,17066
  const char *func_name(Item_decimal_typecast::func_name528,17098
class Item_func_additive_op 533,17229
  Item_func_additive_op(Item_func_additive_op::Item_func_additive_op536,17287
  bool check_partition_func_processor(Item_func_additive_op::check_partition_func_processor538,17376
class Item_func_plus 542,17451
  Item_func_plus(Item_func_plus::Item_func_plus545,17512
  const char *func_name(Item_func_plus::func_name546,17577
class Item_func_minus 552,17710
  Item_func_minus(Item_func_minus::Item_func_minus555,17772
  const char *func_name(Item_func_minus::func_name556,17838
class Item_func_mul 564,18001
  Item_func_mul(Item_func_mul::Item_func_mul567,18051
  const char *func_name(Item_func_mul::func_name568,18105
  bool check_partition_func_processor(Item_func_mul::check_partition_func_processor573,18261
class Item_func_div 577,18336
  uint prec_increment;Item_func_div::prec_increment580,18386
  Item_func_div(Item_func_div::Item_func_div581,18409
  longlong int_op(Item_func_div::int_op582,18463
  const char *func_name(Item_func_div::func_name585,18573
class Item_func_int_div 591,18682
  Item_func_int_div(Item_func_int_div::Item_func_int_div594,18738
  const char *func_name(Item_func_int_div::func_name597,18822
  virtual inline void print(Item_func_int_div::print600,18902
  bool check_partition_func_processor(Item_func_int_div::check_partition_func_processor605,19011
class Item_func_mod 609,19086
  Item_func_mod(Item_func_mod::Item_func_mod612,19136
  const char *func_name(Item_func_mod::func_name616,19271
  bool check_partition_func_processor(Item_func_mod::check_partition_func_processor619,19375
class Item_func_neg 623,19450
  Item_func_neg(Item_func_neg::Item_func_neg626,19503
  const char *func_name(Item_func_neg::func_name630,19631
  enum Functype functype(Item_func_neg::functype631,19679
  uint decimal_precision(Item_func_neg::decimal_precision634,19797
  bool check_partition_func_processor(Item_func_neg::check_partition_func_processor635,19871
class Item_func_abs 639,19946
  Item_func_abs(Item_func_abs::Item_func_abs642,19999
  const char *func_name(Item_func_abs::func_name646,20127
  bool check_partition_func_processor(Item_func_abs::check_partition_func_processor648,20206
class Item_dec_func 653,20342
  Item_dec_func(Item_dec_func::Item_dec_func656,20396
  Item_dec_func(Item_dec_func::Item_dec_func657,20443
  void fix_length_and_dec(Item_dec_func::fix_length_and_dec658,20500
class Item_func_exp 665,20621
  Item_func_exp(Item_func_exp::Item_func_exp668,20673
  const char *func_name(Item_func_exp::func_name670,20740
class Item_func_ln 674,20795
  Item_func_ln(Item_func_ln::Item_func_ln677,20846
  const char *func_name(Item_func_ln::func_name679,20912
class Item_func_log 683,20966
  Item_func_log(Item_func_log::Item_func_log686,21018
  Item_func_log(Item_func_log::Item_func_log687,21064
  const char *func_name(Item_func_log::func_name689,21141
class Item_func_log2 693,21196
  Item_func_log2(Item_func_log2::Item_func_log2696,21249
  const char *func_name(Item_func_log2::func_name698,21317
class Item_func_log10 702,21373
  Item_func_log10(Item_func_log10::Item_func_log10705,21427
  const char *func_name(Item_func_log10::func_name707,21496
class Item_func_sqrt 711,21553
  Item_func_sqrt(Item_func_sqrt::Item_func_sqrt714,21606
  const char *func_name(Item_func_sqrt::func_name716,21674
class Item_func_pow 720,21730
  Item_func_pow(Item_func_pow::Item_func_pow723,21782
  const char *func_name(Item_func_pow::func_name725,21859
class Item_func_acos 729,21914
  Item_func_acos(Item_func_acos::Item_func_acos732,21967
  const char *func_name(Item_func_acos::func_name734,22035
class Item_func_asin 737,22090
  Item_func_asin(Item_func_asin::Item_func_asin740,22143
  const char *func_name(Item_func_asin::func_name742,22211
class Item_func_atan 745,22266
  Item_func_atan(Item_func_atan::Item_func_atan748,22319
  Item_func_atan(Item_func_atan::Item_func_atan749,22366
  const char *func_name(Item_func_atan::func_name751,22444
class Item_func_cos 754,22499
  Item_func_cos(Item_func_cos::Item_func_cos757,22551
  const char *func_name(Item_func_cos::func_name759,22618
class Item_func_sin 762,22672
  Item_func_sin(Item_func_sin::Item_func_sin765,22724
  const char *func_name(Item_func_sin::func_name767,22791
class Item_func_tan 770,22845
  Item_func_tan(Item_func_tan::Item_func_tan773,22897
  const char *func_name(Item_func_tan::func_name775,22964
class Item_func_cot 778,23018
  Item_func_cot(Item_func_cot::Item_func_cot781,23070
  const char *func_name(Item_func_cot::func_name783,23137
class Item_func_integer 786,23191
  inline Item_func_integer(Item_func_integer::Item_func_integer789,23247
class Item_func_int_val 794,23338
  Item_func_int_val(Item_func_int_val::Item_func_int_val797,23395
class Item_func_ceiling 803,23508
  Item_func_ceiling(Item_func_ceiling::Item_func_ceiling806,23568
  const char *func_name(Item_func_ceiling::func_name807,23622
  bool check_partition_func_processor(Item_func_ceiling::check_partition_func_processor811,23757
class Item_func_floor 815,23832
  Item_func_floor(Item_func_floor::Item_func_floor818,23890
  const char *func_name(Item_func_floor::func_name819,23942
  bool check_partition_func_processor(Item_func_floor::check_partition_func_processor823,24075
class Item_func_round 828,24188
  bool truncate;Item_func_round::truncate830,24235
  Item_func_round(Item_func_round::Item_func_round832,24260
  const char *func_name(Item_func_round::func_name834,24361
class Item_func_rand 842,24552
  struct rand_struct *rand;Item_func_rand::rand844,24598
  bool first_eval;Item_func_rand::first_eval845,24626
  Item_func_rand(Item_func_rand::Item_func_rand847,24694
  Item_func_rand(Item_func_rand::Item_func_rand848,24769
  const char *func_name(Item_func_rand::func_name850,24832
  bool const_item(Item_func_rand::const_item851,24883
  void cleanup(Item_func_rand::cleanup854,24993
class Item_func_sign 860,25108
  Item_func_sign(Item_func_sign::Item_func_sign863,25161
  const char *func_name(Item_func_sign::func_name864,25208
class Item_func_units 869,25286
  char *name;Item_func_units::name871,25333
  double mul,Item_func_units::mul872,25347
  double mul,add;Item_func_units::add872,25347
  Item_func_units(Item_func_units::Item_func_units874,25373
  const char *func_name(Item_func_units::func_name877,25533
  void fix_length_and_dec(Item_func_units::fix_length_and_dec878,25582
class Item_func_min_max 883,25682
  Item_result cmp_type;Item_func_min_max::cmp_type885,25726
  String tmp_value;Item_func_min_max::tmp_value886,25750
  int cmp_sign;Item_func_min_max::cmp_sign887,25770
  bool compare_as_dates;Item_func_min_max::compare_as_dates889,25857
  Item *datetime_item;Item_func_min_max::datetime_item891,25961
  THD *thd;Item_func_min_max::thd892,25984
  enum_field_types cached_field_type;Item_func_min_max::cached_field_type894,26007
  Item_func_min_max(Item_func_min_max::Item_func_min_max896,26053
  enum Item_result result_type Item_func_min_max::result_type904,26367
  bool result_as_longlong(Item_func_min_max::result_as_longlong905,26428
  enum_field_types field_type(Item_func_min_max::field_type907,26526
class Item_func_min 910,26598
  Item_func_min(Item_func_min::Item_func_min913,26654
  const char *func_name(Item_func_min::func_name914,26718
class Item_func_max 917,26774
  Item_func_max(Item_func_max::Item_func_max920,26830
  const char *func_name(Item_func_max::func_name921,26895
class Item_func_rollup_const 930,27079
  Item_func_rollup_const(Item_func_rollup_const::Item_func_rollup_const933,27136
  double val_real(Item_func_rollup_const::val_real938,27244
  longlong val_int(Item_func_rollup_const::val_int939,27296
  String *val_str(Item_func_rollup_const::val_str940,27348
  my_decimal *val_decimal(Item_func_rollup_const::val_decimal941,27413
  const char *func_name(Item_func_rollup_const::func_name942,27494
  bool const_item(Item_func_rollup_const::const_item943,27553
  Item_result result_type(Item_func_rollup_const::result_type944,27593
  void fix_length_and_dec(Item_func_rollup_const::fix_length_and_dec945,27662
class Item_func_length 956,27889
  String value;Item_func_length::value958,27936
  Item_func_length(Item_func_length::Item_func_length960,27960
  const char *func_name(Item_func_length::func_name962,28031
  void fix_length_and_dec(Item_func_length::fix_length_and_dec963,28084
class Item_func_bit_length 966,28135
  Item_func_bit_length(Item_func_bit_length::Item_func_bit_length969,28197
  longlong val_int(Item_func_bit_length::val_int970,28253
  const char *func_name(Item_func_bit_length::func_name972,28345
class Item_func_char_length 975,28406
  String value;Item_func_char_length::value977,28458
  Item_func_char_length(Item_func_char_length::Item_func_char_length979,28482
  const char *func_name(Item_func_char_length::func_name981,28558
  void fix_length_and_dec(Item_func_char_length::fix_length_and_dec982,28616
class Item_func_coercibility 985,28667
  Item_func_coercibility(Item_func_coercibility::Item_func_coercibility988,28728
  const char *func_name(Item_func_coercibility::func_name990,28805
  void fix_length_and_dec(Item_func_coercibility::fix_length_and_dec991,28864
  table_map not_null_tables(Item_func_coercibility::not_null_tables992,28926
class Item_func_locate 995,28980
  String value1,Item_func_locate::value1997,29027
  String value1,value2;Item_func_locate::value2997,29027
  DTCollation cmp_collation;Item_func_locate::cmp_collation998,29051
  Item_func_locate(Item_func_locate::Item_func_locate1000,29088
  Item_func_locate(Item_func_locate::Item_func_locate1001,29147
  const char *func_name(Item_func_locate::func_name1002,29216
class Item_func_field 1009,29388
  String value,Item_func_field::value1011,29434
  String value,tmp;Item_func_field::tmp1011,29434
  Item_result cmp_type;Item_func_field::cmp_type1012,29454
  DTCollation cmp_collation;Item_func_field::cmp_collation1013,29478
  Item_func_field(Item_func_field::Item_func_field1015,29515
  const char *func_name(Item_func_field::func_name1017,29597
class Item_func_ascii 1022,29683
  String value;Item_func_ascii::value1024,29729
  Item_func_ascii(Item_func_ascii::Item_func_ascii1026,29753
  const char *func_name(Item_func_ascii::func_name1028,29823
  void fix_length_and_dec(Item_func_ascii::fix_length_and_dec1029,29875
class Item_func_ord 1032,29925
  String value;Item_func_ord::value1034,29969
  Item_func_ord(Item_func_ord::Item_func_ord1036,29993
  const char *func_name(Item_func_ord::func_name1038,30061
class Item_func_find_in_set 1041,30115
  String value,Item_func_find_in_set::value1043,30167
  String value,value2;Item_func_find_in_set::value21043,30167
  uint enum_value;Item_func_find_in_set::enum_value1044,30190
  ulonglong enum_bit;Item_func_find_in_set::enum_bit1045,30209
  DTCollation cmp_collation;Item_func_find_in_set::cmp_collation1046,30231
  Item_func_find_in_set(Item_func_find_in_set::Item_func_find_in_set1048,30268
  const char *func_name(Item_func_find_in_set::func_name1050,30368
class Item_func_bit:Item_func_bit1056,30531
  Item_func_bit(Item_func_bit::Item_func_bit1059,30583
  Item_func_bit(Item_func_bit::Item_func_bit1060,30641
  void fix_length_and_dec(Item_func_bit::fix_length_and_dec1061,30687
  virtual inline void print(Item_func_bit::print1063,30738
class Item_func_bit_or 1069,30850
  Item_func_bit_or(Item_func_bit_or::Item_func_bit_or1072,30905
  const char *func_name(Item_func_bit_or::func_name1074,30988
class Item_func_bit_and 1077,31040
  Item_func_bit_and(Item_func_bit_and::Item_func_bit_and1080,31096
  const char *func_name(Item_func_bit_and::func_name1082,31180
class Item_func_bit_count 1085,31232
  Item_func_bit_count(Item_func_bit_count::Item_func_bit_count1088,31290
  const char *func_name(Item_func_bit_count::func_name1090,31364
  void fix_length_and_dec(Item_func_bit_count::fix_length_and_dec1091,31420
class Item_func_shift_left 1094,31470
  Item_func_shift_left(Item_func_shift_left::Item_func_shift_left1097,31529
  const char *func_name(Item_func_shift_left::func_name1099,31616
class Item_func_shift_right 1102,31669
  Item_func_shift_right(Item_func_shift_right::Item_func_shift_right1105,31729
  const char *func_name(Item_func_shift_right::func_name1107,31817
class Item_func_bit_neg 1110,31870
  Item_func_bit_neg(Item_func_bit_neg::Item_func_bit_neg1113,31926
  const char *func_name(Item_func_bit_neg::func_name1115,31998
  virtual inline void print(Item_func_bit_neg::print1117,32047
class Item_func_last_insert_id 1124,32168
  Item_func_last_insert_id(Item_func_last_insert_id::Item_func_last_insert_id1127,32231
  Item_func_last_insert_id(Item_func_last_insert_id::Item_func_last_insert_id1128,32280
  const char *func_name(Item_func_last_insert_id::func_name1130,32359
  void fix_length_and_dec(Item_func_last_insert_id::fix_length_and_dec1131,32420
class Item_func_benchmark 1141,32585
  Item_func_benchmark(Item_func_benchmark::Item_func_benchmark1144,32643
  const char *func_name(Item_func_benchmark::func_name1148,32759
  void fix_length_and_dec(Item_func_benchmark::fix_length_and_dec1149,32815
class Item_func_sleep 1154,32943
  Item_func_sleep(Item_func_sleep::Item_func_sleep1157,32997
  bool const_item(Item_func_sleep::const_item1158,33045
  const char *func_name(Item_func_sleep::func_name1159,33085
  void update_used_tables(Item_func_sleep::update_used_tables1160,33137
class Item_udf_func 1172,33302
  udf_handler udf;Item_udf_func::udf1175,33353
  Item_udf_func(Item_udf_func::Item_udf_func1178,33381
  Item_udf_func(Item_udf_func::Item_udf_func1180,33450
  const char *func_name(Item_udf_func::func_name1182,33541
  enum Functype functype(Item_udf_func::functype1183,33596
  bool fix_fields(Item_udf_func::fix_fields1184,33652
  void update_used_tables(Item_udf_func::update_used_tables1193,33907
  Item_result result_type Item_udf_func::result_type1244,36263
  table_map not_null_tables(Item_udf_func::not_null_tables1245,36328
  bool is_expensive(Item_udf_func::is_expensive1246,36378
class Item_func_udf_float 1251,36482
  Item_func_udf_float(Item_func_udf_float::Item_func_udf_float1254,36541
  Item_func_udf_float(Item_func_udf_float::Item_func_udf_float1256,36613
  longlong val_int(Item_func_udf_float::val_int1259,36731
  my_decimal *val_decimal(Item_func_udf_float::val_decimal1264,36850
  void fix_length_and_dec(Item_func_udf_float::fix_length_and_dec1274,37100
class Item_func_udf_int 1278,37163
  Item_func_udf_int(Item_func_udf_int::Item_func_udf_int1281,37219
  Item_func_udf_int(Item_func_udf_int::Item_func_udf_int1283,37289
  double val_real(Item_func_udf_int::val_real1287,37425
  enum Item_result result_type Item_func_udf_int::result_type1289,37527
  void fix_length_and_dec(Item_func_udf_int::fix_length_and_dec1290,37590
class Item_func_udf_decimal 1294,37656
  Item_func_udf_decimal(Item_func_udf_decimal::Item_func_udf_decimal1297,37716
  Item_func_udf_decimal(Item_func_udf_decimal::Item_func_udf_decimal1299,37790
  enum Item_result result_type Item_func_udf_decimal::result_type1305,38004
class Item_func_udf_str 1310,38105
  Item_func_udf_str(Item_func_udf_str::Item_func_udf_str1313,38161
  Item_func_udf_str(Item_func_udf_str::Item_func_udf_str1315,38231
  double val_real(Item_func_udf_str::val_real1318,38354
  longlong val_int(Item_func_udf_str::val_int1327,38619
  my_decimal *val_decimal(Item_func_udf_str::val_decimal1334,38858
  enum Item_result result_type Item_func_udf_str::result_type1342,39059
class Item_func_udf_float 1348,39215
  Item_func_udf_float(Item_func_udf_float::Item_func_udf_float1351,39275
  Item_func_udf_float(Item_func_udf_float::Item_func_udf_float1353,39341
  double val_real(Item_func_udf_float::val_real1355,39429
class Item_func_udf_int 1359,39495
  Item_func_udf_int(Item_func_udf_int::Item_func_udf_int1362,39551
  Item_func_udf_int(Item_func_udf_int::Item_func_udf_int1364,39614
  longlong val_int(Item_func_udf_int::val_int1366,39699
class Item_func_udf_decimal 1370,39764
  Item_func_udf_decimal(Item_func_udf_decimal::Item_func_udf_decimal1373,39824
  Item_func_udf_decimal(Item_func_udf_decimal::Item_func_udf_decimal1375,39891
  my_decimal *val_decimal(Item_func_udf_decimal::val_decimal1377,39980
class Item_func_udf_str 1381,40064
  Item_func_udf_str(Item_func_udf_str::Item_func_udf_str1384,40116
  Item_func_udf_str(Item_func_udf_str::Item_func_udf_str1386,40175
  String *val_str(Item_func_udf_str::val_str1388,40256
  double val_real(Item_func_udf_str::val_real1390,40341
  longlong val_int(Item_func_udf_str::val_int1391,40417
  enum Item_result result_type Item_func_udf_str::result_type1392,40491
  void fix_length_and_dec(Item_func_udf_str::fix_length_and_dec1393,40557
class Item_func_get_lock 1407,40813
  String value;Item_func_get_lock::value1409,40862
  Item_func_get_lock(Item_func_get_lock::Item_func_get_lock1411,40887
  const char *func_name(Item_func_get_lock::func_name1413,40970
  void fix_length_and_dec(Item_func_get_lock::fix_length_and_dec1414,41025
class Item_func_release_lock 1417,41088
  String value;Item_func_release_lock::value1419,41141
  Item_func_release_lock(Item_func_release_lock::Item_func_release_lock1421,41165
  const char *func_name(Item_func_release_lock::func_name1423,41242
  void fix_length_and_dec(Item_func_release_lock::fix_length_and_dec1424,41301
class Item_master_pos_wait 1429,41393
  String value;Item_master_pos_wait::value1431,41444
  Item_master_pos_wait(Item_master_pos_wait::Item_master_pos_wait1433,41468
  Item_master_pos_wait(Item_master_pos_wait::Item_master_pos_wait1434,41531
  const char *func_name(Item_master_pos_wait::func_name1436,41626
  void fix_length_and_dec(Item_master_pos_wait::fix_length_and_dec1437,41688
class Item_func_set_user_var 1445,41820
  enum Item_result cached_result_type;Item_func_set_user_var::cached_result_type1447,41869
  user_var_entry *entry;Item_func_set_user_var::entry1448,41908
  my_thread_id entry_thread_id;Item_func_set_user_var::entry_thread_id1459,42481
  bool delayed_non_constness;Item_func_set_user_var::delayed_non_constness1473,43034
  char buffer[Item_func_set_user_var::buffer1474,43064
  String value;Item_func_set_user_var::value1475,43096
  my_decimal decimal_buff;Item_func_set_user_var::decimal_buff1476,43112
  bool null_item;Item_func_set_user_var::null_item1477,43139
    longlong vint;Item_func_set_user_var::vint1480,43169
    double vreal;Item_func_set_user_var::vreal1481,43188
    String *vstr;Item_func_set_user_var::vstr1482,43206
    my_decimal *vdec;Item_func_set_user_var::vdec1483,43224
  } save_result;Item_func_set_user_var::save_result1484,43246
  LEX_STRING name;Item_func_set_user_var::name1487,43272
  Item_func_set_user_var(Item_func_set_user_var::Item_func_set_user_var1488,43309
  enum Functype functype(Item_func_set_user_var::functype1492,43504
  enum Item_result result_type Item_func_set_user_var::result_type1510,44174
  const char *func_name(Item_func_set_user_var::func_name1515,44441
  int save_in_field(Item_func_set_user_var::save_in_field1518,44603
  void save_org_in_field(Item_func_set_user_var::save_org_in_field1522,44718
class Item_func_get_user_var 1529,44920
  user_var_entry *var_entry;Item_func_get_user_var::var_entry1532,45035
  Item_result m_cached_result_type;Item_func_get_user_var::m_cached_result_type1533,45064
  LEX_STRING name;Item_func_get_user_var::name1536,45109
  Item_func_get_user_var(Item_func_get_user_var::Item_func_get_user_var1537,45146
  enum Functype functype(Item_func_get_user_var::functype1539,45251
  LEX_STRING get_name(Item_func_get_user_var::get_name1540,45310
  const char *func_name(Item_func_get_user_var::func_name1552,45753
  table_map used_tables(Item_func_get_user_var::used_tables1554,45839
  Settable_routine_parameter *get_settable_routine_parameter(Item_func_get_user_var::get_settable_routine_parameter1561,46046
class Item_user_var_as_out_param 1577,46541
  LEX_STRING name;Item_user_var_as_out_param::name1579,46589
  user_var_entry *entry;Item_user_var_as_out_param::entry1580,46608
  Item_user_var_as_out_param(Item_user_var_as_out_param::Item_user_var_as_out_param1582,46641
  enum Type type(Item_user_var_as_out_param::type1585,46807
#define GET_SYS_VAR_CACHE_LONG 1600,47292
#define GET_SYS_VAR_CACHE_DOUBLE 1601,47329
#define GET_SYS_VAR_CACHE_STRING 1602,47366
class Item_func_get_system_var 1604,47404
  sys_var *var;Item_func_get_system_var::var1606,47455
  enum_var_type var_type,Item_func_get_system_var::var_type1607,47471
  enum_var_type var_type, orig_var_type;Item_func_get_system_var::orig_var_type1607,47471
  LEX_STRING component;Item_func_get_system_var::component1608,47512
  longlong cached_llval;Item_func_get_system_var::cached_llval1609,47536
  double cached_dval;Item_func_get_system_var::cached_dval1610,47561
  String cached_strval;Item_func_get_system_var::cached_strval1611,47583
  my_bool cached_null_value;Item_func_get_system_var::cached_null_value1612,47607
  query_id_t used_query_id;Item_func_get_system_var::used_query_id1613,47636
  uchar cache_present;Item_func_get_system_var::cache_present1614,47664
  enum Functype functype(Item_func_get_system_var::functype1620,47894
  bool const_item(Item_func_get_system_var::const_item1624,48064
  table_map used_tables(Item_func_get_system_var::used_tables1625,48107
  const char *func_name(Item_func_get_system_var::func_name1632,48338
class Item_func_inet_aton 1648,48805
  Item_func_inet_aton(Item_func_inet_aton::Item_func_inet_aton1651,48864
  const char *func_name(Item_func_inet_aton::func_name1653,48938
  void fix_length_and_dec(Item_func_inet_aton::fix_length_and_dec1654,48994
class Item_func_match 1661,49142
  uint key,Item_func_match::key1664,49197
  uint key, flags;Item_func_match::flags1664,49197
  bool join_key;Item_func_match::join_key1665,49216
  DTCollation cmp_collation;Item_func_match::cmp_collation1666,49233
  FT_INFO *ft_handler;Item_func_match::ft_handler1667,49262
  TABLE *table;Item_func_match::table1668,49285
  Item_func_match *master;Item_func_match::master1669,49301
  Item *concat_ws;Item_func_match::concat_ws1670,49363
  String value;Item_func_match::value1671,49415
  String search_value;Item_func_match::search_value1672,49466
  Item_func_match(Item_func_match::Item_func_match1674,49545
  void cleanup(Item_func_match::cleanup1676,49697
  enum Functype functype(Item_func_match::functype1687,50000
  const char *func_name(Item_func_match::func_name1688,50053
  void update_used_tables(Item_func_match::update_used_tables1689,50105
  table_map not_null_tables(Item_func_match::not_null_tables1690,50136
  longlong val_int(Item_func_match::val_int1694,50340
class Item_func_bit_xor 1703,50561
  Item_func_bit_xor(Item_func_bit_xor::Item_func_bit_xor1706,50618
  const char *func_name(Item_func_bit_xor::func_name1708,50702
class Item_func_is_free_lock 1711,50754
  String value;Item_func_is_free_lock::value1713,50807
  Item_func_is_free_lock(Item_func_is_free_lock::Item_func_is_free_lock1715,50831
  const char *func_name(Item_func_is_free_lock::func_name1717,50908
  void fix_length_and_dec(Item_func_is_free_lock::fix_length_and_dec1718,50967
class Item_func_is_used_lock 1721,51042
  String value;Item_func_is_used_lock::value1723,51095
  Item_func_is_used_lock(Item_func_is_used_lock::Item_func_is_used_lock1725,51119
  const char *func_name(Item_func_is_used_lock::func_name1727,51196
  void fix_length_and_dec(Item_func_is_used_lock::fix_length_and_dec1728,51255
enum Cast_target1733,51353
  ITEM_CAST_BINARY,Cast_target::ITEM_CAST_BINARY1735,51372
  ITEM_CAST_BINARY, ITEM_CAST_SIGNED_INT,Cast_target::ITEM_CAST_SIGNED_INT1735,51372
  ITEM_CAST_BINARY, ITEM_CAST_SIGNED_INT, ITEM_CAST_UNSIGNED_INT,Cast_target::ITEM_CAST_UNSIGNED_INT1735,51372
  ITEM_CAST_DATE,Cast_target::ITEM_CAST_DATE1736,51438
  ITEM_CAST_DATE, ITEM_CAST_TIME,Cast_target::ITEM_CAST_TIME1736,51438
  ITEM_CAST_DATE, ITEM_CAST_TIME, ITEM_CAST_DATETIME,Cast_target::ITEM_CAST_DATETIME1736,51438
  ITEM_CAST_DATE, ITEM_CAST_TIME, ITEM_CAST_DATETIME, ITEM_CAST_CHAR,Cast_target::ITEM_CAST_CHAR1736,51438
  ITEM_CAST_DECIMALCast_target::ITEM_CAST_DECIMAL1737,51508
class Item_func_row_count 1741,51533
  Item_func_row_count(Item_func_row_count::Item_func_row_count1744,51591
  const char *func_name(Item_func_row_count::func_name1746,51657
  void fix_length_and_dec(Item_func_row_count::fix_length_and_dec1747,51713
class Item_func_sp 1761,51873
  Name_resolution_context *context;Item_func_sp::context1764,51921
  sp_name *m_name;Item_func_sp::m_name1765,51957
  mutable sp_head *m_sp;Item_func_sp::m_sp1766,51976
  TABLE *dummy_table;Item_func_sp::dummy_table1767,52001
  uchar result_buf[Item_func_sp::result_buf1768,52023
  Field *sp_result_field;Item_func_sp::sp_result_field1772,52112
  virtual ~Item_func_sp(Item_func_sp::~Item_func_sp1785,52409
  longlong val_int(Item_func_sp::val_int1802,52689
  double val_real(Item_func_sp::val_real1809,52804
  my_decimal *val_decimal(Item_func_sp::val_decimal1816,52910
  String *val_str(Item_func_sp::val_str1823,53054
  virtual bool change_context_processor(Item_func_sp::change_context_processor1842,53548
  virtual enum Functype functype(Item_func_sp::functype1846,53701
  bool is_expensive(Item_func_sp::is_expensive1850,53837
  inline Field *get_sp_result_field(Item_func_sp::get_sp_result_field1852,53874
class Item_func_found_rows 1859,53953
  Item_func_found_rows(Item_func_found_rows::Item_func_found_rows1862,54012
  const char *func_name(Item_func_found_rows::func_name1864,54079
  void fix_length_and_dec(Item_func_found_rows::fix_length_and_dec1865,54136
class Item_func_uuid_short 1871,54225
  Item_func_uuid_short(Item_func_uuid_short::Item_func_uuid_short1874,54284
  const char *func_name(Item_func_uuid_short::func_name1875,54329
  void fix_length_and_dec(Item_func_uuid_short::fix_length_and_dec1877,54408
  bool check_partition_func_processor(Item_func_uuid_short::check_partition_func_processor1879,54475

sql/item_geofunc.h,8194
#define ITEM_GEOFUNC_INCLUDED2,30
class Item_geometry_func:Item_geometry_func28,962
  Item_geometry_func(Item_geometry_func::Item_geometry_func31,1019
  Item_geometry_func(Item_geometry_func::Item_geometry_func32,1062
  Item_geometry_func(Item_geometry_func::Item_geometry_func33,1113
  Item_geometry_func(Item_geometry_func::Item_geometry_func34,1174
  Item_geometry_func(Item_geometry_func::Item_geometry_func35,1245
  enum_field_types field_type(Item_geometry_func::field_type37,1337
  bool is_null(Item_geometry_func::is_null39,1448
class Item_func_geometry_from_text:Item_func_geometry_from_text42,1510
  Item_func_geometry_from_text(Item_func_geometry_from_text::Item_func_geometry_from_text45,1582
  Item_func_geometry_from_text(Item_func_geometry_from_text::Item_func_geometry_from_text46,1648
  const char *func_name(Item_func_geometry_from_text::func_name47,1732
class Item_func_geometry_from_wkb:Item_func_geometry_from_wkb51,1828
  Item_func_geometry_from_wkb(Item_func_geometry_from_wkb::Item_func_geometry_from_wkb54,1899
  Item_func_geometry_from_wkb(Item_func_geometry_from_wkb::Item_func_geometry_from_wkb55,1964
  const char *func_name(Item_func_geometry_from_wkb::func_name56,2047
class Item_func_as_wkt:Item_func_as_wkt60,2142
  Item_func_as_wkt(Item_func_as_wkt::Item_func_as_wkt63,2203
  const char *func_name(Item_func_as_wkt::func_name64,2258
class Item_func_as_wkb:Item_func_as_wkb69,2379
  Item_func_as_wkb(Item_func_as_wkb::Item_func_as_wkb72,2439
  const char *func_name(Item_func_as_wkb::func_name73,2493
  enum_field_types field_type(Item_func_as_wkb::field_type75,2574
class Item_func_geometry_type:Item_func_geometry_type78,2645
  Item_func_geometry_type(Item_func_geometry_type::Item_func_geometry_type81,2713
  const char *func_name(Item_func_geometry_type::func_name83,2810
  void fix_length_and_dec(Item_func_geometry_type::fix_length_and_dec84,2869
class Item_func_centroid:Item_func_centroid92,3024
  Item_func_centroid(Item_func_centroid::Item_func_centroid95,3086
  const char *func_name(Item_func_centroid::func_name96,3142
class Item_func_envelope:Item_func_envelope101,3280
  Item_func_envelope(Item_func_envelope::Item_func_envelope104,3342
  const char *func_name(Item_func_envelope::func_name105,3398
class Item_func_point:Item_func_point110,3536
  Item_func_point(Item_func_point::Item_func_point113,3595
  Item_func_point(Item_func_point::Item_func_point114,3660
  const char *func_name(Item_func_point::func_name115,3743
class Item_func_spatial_decomp:Item_func_spatial_decomp120,3878
  enum Functype decomp_func;Item_func_spatial_decomp::decomp_func122,3938
  Item_func_spatial_decomp(Item_func_spatial_decomp::Item_func_spatial_decomp124,3975
  const char *func_name(Item_func_spatial_decomp::func_name126,4084
class Item_func_spatial_decomp_n:Item_func_spatial_decomp_n144,4461
  enum Functype decomp_func_n;Item_func_spatial_decomp_n::decomp_func_n146,4523
  Item_func_spatial_decomp_n(Item_func_spatial_decomp_n::Item_func_spatial_decomp_n148,4562
  const char *func_name(Item_func_spatial_decomp_n::func_name150,4686
class Item_func_spatial_collection:Item_func_spatial_collection168,5063
  String tmp_value;Item_func_spatial_collection::tmp_value170,5127
  enum Geometry::wkbType coll_type;Item_func_spatial_collection::coll_type171,5147
  enum Geometry::wkbType item_type;Item_func_spatial_collection::item_type172,5184
  Item_func_spatial_collection(Item_func_spatial_collection::Item_func_spatial_collection174,5228
  void fix_length_and_dec(Item_func_spatial_collection::fix_length_and_dec182,5438
  const char *func_name(Item_func_spatial_collection::func_name198,5859
class Item_func_spatial_rel:Item_func_spatial_rel205,5947
  enum Functype spatial_rel;Item_func_spatial_rel::spatial_rel207,6001
  Item_func_spatial_rel(Item_func_spatial_rel::Item_func_spatial_rel209,6038
  enum Functype functype(Item_func_spatial_rel::functype212,6176
  enum Functype rev_functype(Item_func_spatial_rel::rev_functype223,6403
  const char *func_name(Item_func_spatial_rel::func_name224,6464
  virtual inline void print(Item_func_spatial_rel::print249,7037
  void fix_length_and_dec(Item_func_spatial_rel::fix_length_and_dec254,7154
  bool is_null(Item_func_spatial_rel::is_null255,7201
class Item_func_isempty:Item_func_isempty258,7263
  Item_func_isempty(Item_func_isempty::Item_func_isempty261,7320
  optimize_type select_optimize(Item_func_isempty::select_optimize263,7393
  const char *func_name(Item_func_isempty::func_name264,7459
  void fix_length_and_dec(Item_func_isempty::fix_length_and_dec265,7513
class Item_func_issimple:Item_func_issimple268,7564
  Item_func_issimple(Item_func_issimple::Item_func_issimple271,7622
  optimize_type select_optimize(Item_func_issimple::select_optimize273,7696
  const char *func_name(Item_func_issimple::func_name274,7762
  void fix_length_and_dec(Item_func_issimple::fix_length_and_dec275,7817
class Item_func_isclosed:Item_func_isclosed278,7868
  Item_func_isclosed(Item_func_isclosed::Item_func_isclosed281,7926
  optimize_type select_optimize(Item_func_isclosed::select_optimize283,8000
  const char *func_name(Item_func_isclosed::func_name284,8066
  void fix_length_and_dec(Item_func_isclosed::fix_length_and_dec285,8121
class Item_func_dimension:Item_func_dimension288,8172
  String value;Item_func_dimension::value290,8222
  Item_func_dimension(Item_func_dimension::Item_func_dimension292,8246
  const char *func_name(Item_func_dimension::func_name294,8320
  void fix_length_and_dec(Item_func_dimension::fix_length_and_dec295,8376
class Item_func_x:Item_func_x298,8443
  String value;Item_func_x::value300,8486
  Item_func_x(Item_func_x::Item_func_x302,8510
  const char *func_name(Item_func_x::func_name304,8576
  void fix_length_and_dec(Item_func_x::fix_length_and_dec305,8624
class Item_func_y:Item_func_y313,8729
  String value;Item_func_y::value315,8772
  Item_func_y(Item_func_y::Item_func_y317,8796
  const char *func_name(Item_func_y::func_name319,8862
  void fix_length_and_dec(Item_func_y::fix_length_and_dec320,8910
class Item_func_numgeometries:Item_func_numgeometries328,9015
  String value;Item_func_numgeometries::value330,9069
  Item_func_numgeometries(Item_func_numgeometries::Item_func_numgeometries332,9093
  const char *func_name(Item_func_numgeometries::func_name334,9171
  void fix_length_and_dec(Item_func_numgeometries::fix_length_and_dec335,9231
class Item_func_numinteriorring:Item_func_numinteriorring339,9299
  String value;Item_func_numinteriorring::value341,9355
  Item_func_numinteriorring(Item_func_numinteriorring::Item_func_numinteriorring343,9379
  const char *func_name(Item_func_numinteriorring::func_name345,9459
  void fix_length_and_dec(Item_func_numinteriorring::fix_length_and_dec346,9522
class Item_func_numpoints:Item_func_numpoints350,9590
  String value;Item_func_numpoints::value352,9640
  Item_func_numpoints(Item_func_numpoints::Item_func_numpoints354,9664
  const char *func_name(Item_func_numpoints::func_name356,9738
  void fix_length_and_dec(Item_func_numpoints::fix_length_and_dec357,9794
class Item_func_area:Item_func_area361,9862
  String value;Item_func_area::value363,9908
  Item_func_area(Item_func_area::Item_func_area365,9932
  const char *func_name(Item_func_area::func_name367,10001
  void fix_length_and_dec(Item_func_area::fix_length_and_dec368,10052
class Item_func_glength:Item_func_glength376,10157
  String value;Item_func_glength::value378,10206
  Item_func_glength(Item_func_glength::Item_func_glength380,10230
  const char *func_name(Item_func_glength::func_name382,10302
  void fix_length_and_dec(Item_func_glength::fix_length_and_dec383,10356
class Item_func_srid:Item_func_srid391,10461
  String value;Item_func_srid::value393,10506
  Item_func_srid(Item_func_srid::Item_func_srid395,10530
  const char *func_name(Item_func_srid::func_name397,10599
  void fix_length_and_dec(Item_func_srid::fix_length_and_dec398,10650
#define GEOM_NEW(401,10717
#define GEOM_NEW(405,10817

sql/item.h,45987
#define ITEM_INCLUDED2,22
char_to_byte_length_safe(39,1392
#define MY_COLL_ALLOW_SUPERSET_CONV 64,2435
#define MY_COLL_ALLOW_COERCIBLE_CONV 65,2475
#define MY_COLL_DISALLOW_NONE 66,2515
#define MY_COLL_ALLOW_NUMERIC_CONV 67,2555
#define MY_COLL_ALLOW_CONV 69,2596
#define MY_COLL_CMP_CONV 70,2684
class DTCollation 72,2757
  CHARSET_INFO     *collation;DTCollation::collation74,2785
  enum Derivation derivation;DTCollation::derivation75,2816
  uint repertoire;DTCollation::repertoire76,2846
  void set_repertoire_from_charset(DTCollation::set_repertoire_from_charset78,2868
  DTCollation(DTCollation::DTCollation83,3038
  DTCollation(DTCollation::DTCollation89,3168
  void set(DTCollation::set95,3356
  void set(DTCollation::set101,3484
  void set(DTCollation::set107,3669
  void set_numeric(DTCollation::set_numeric115,3881
  void set(DTCollation::set121,4021
  void set(DTCollation::set126,4147
  bool set(DTCollation::set129,4269
  const char *derivation_name(DTCollation::derivation_name131,4377
struct Hybrid_type156,5130
  longlong integer;Hybrid_type::integer158,5151
  double real;Hybrid_type::real160,5172
  my_decimal dec_buf[Hybrid_type::dec_buf167,5448
  int used_dec_buf_no;Hybrid_type::used_dec_buf_no168,5473
  const Hybrid_type_traits *traits;Hybrid_type::traits175,5665
  Hybrid_type(Hybrid_type::Hybrid_type177,5702
  Hybrid_type(Hybrid_type::Hybrid_type179,5765
struct Hybrid_type_traits185,5908
  virtual Item_result type(Hybrid_type_traits::type187,5936
  virtual void set_zero(Hybrid_type_traits::set_zero193,6095
  virtual void add(Hybrid_type_traits::add194,6163
  virtual void div(Hybrid_type_traits::div196,6249
  virtual longlong val_int(Hybrid_type_traits::val_int199,6345
  virtual double val_real(Hybrid_type_traits::val_real201,6457
  Hybrid_type_traits(Hybrid_type_traits::Hybrid_type_traits205,6732
  virtual ~Hybrid_type_traits(Hybrid_type_traits::~Hybrid_type_traits206,6758
struct Hybrid_type_traits_decimal:Hybrid_type_traits_decimal210,6798
  virtual Item_result type(Hybrid_type_traits_decimal::type212,6861
  virtual my_decimal *val_decimal(Hybrid_type_traits_decimal::val_decimal224,7307
  Hybrid_type_traits_decimal(Hybrid_type_traits_decimal::Hybrid_type_traits_decimal228,7567
struct Hybrid_type_traits_integer:Hybrid_type_traits_integer232,7607
  virtual Item_result type(Hybrid_type_traits_integer::type234,7670
  virtual void set_zero(Hybrid_type_traits_integer::set_zero240,7828
  virtual void add(Hybrid_type_traits_integer::add242,7899
  virtual void div(Hybrid_type_traits_integer::div244,7987
  virtual longlong val_int(Hybrid_type_traits_integer::val_int247,8079
  virtual double val_real(Hybrid_type_traits_integer::val_real249,8177
  virtual my_decimal *val_decimal(Hybrid_type_traits_integer::val_decimal251,8263
  virtual String *val_str(Hybrid_type_traits_integer::val_str256,8449
  Hybrid_type_traits_integer(Hybrid_type_traits_integer::Hybrid_type_traits_integer259,8641
struct Name_resolution_context:Name_resolution_context282,9425
  Name_resolution_context *outer_context;Name_resolution_context::outer_context288,9609
  TABLE_LIST *table_list;Name_resolution_context::table_list298,10089
  TABLE_LIST *first_name_resolution_table;Name_resolution_context::first_name_resolution_table306,10451
  TABLE_LIST *last_name_resolution_table;Name_resolution_context::last_name_resolution_table311,10616
  st_select_lex *select_lex;Name_resolution_context::select_lex318,10834
  void *error_processor_data;Name_resolution_context::error_processor_data326,11088
  bool resolve_in_select_list;Name_resolution_context::resolve_in_select_list333,11297
  Security_context *security_ctx;Name_resolution_context::security_ctx339,11488
  Name_resolution_context(Name_resolution_context::Name_resolution_context341,11523
  void init(Name_resolution_context::init347,11661
  void resolve_in_table_list_only(Name_resolution_context::resolve_in_table_list_only355,11841
  void process_error(Name_resolution_context::process_error361,11992
class Name_resolution_context_state372,12162
  TABLE_LIST *save_table_list;Name_resolution_context_state::save_table_list375,12209
  TABLE_LIST *save_first_name_resolution_table;Name_resolution_context_state::save_first_name_resolution_table376,12240
  TABLE_LIST *save_next_name_resolution_table;Name_resolution_context_state::save_next_name_resolution_table377,12288
  bool        save_resolve_in_select_list;Name_resolution_context_state::save_resolve_in_select_list378,12335
  TABLE_LIST *save_next_local;Name_resolution_context_state::save_next_local379,12378
  Name_resolution_context_state(Name_resolution_context_state::Name_resolution_context_state382,12418
  void save_state(Name_resolution_context_state::save_state386,12551
  void restore_state(Name_resolution_context_state::restore_state396,13042
  TABLE_LIST *get_first_name_resolution_table(Name_resolution_context_state::get_first_name_resolution_table405,13476
typedef enum monotonicity_info 438,14653
   NON_MONOTONIC,monotonicity_info::NON_MONOTONIC440,14687
   MONOTONIC_INCREASING,monotonicity_info::MONOTONIC_INCREASING441,14748
   MONOTONIC_INCREASING_NOT_NULL,monotonicity_info::MONOTONIC_INCREASING_NOT_NULL442,14828
   MONOTONIC_STRICT_INCREASING,monotonicity_info::MONOTONIC_STRICT_INCREASING443,14901
   MONOTONIC_STRICT_INCREASING_NOT_NULL monotonicity_info::MONOTONIC_STRICT_INCREASING_NOT_NULL444,14981
} enum_monotonicity_info;445,15060
class Settable_routine_parameter452,15185
  Settable_routine_parameter(Settable_routine_parameter::Settable_routine_parameter465,15597
  virtual ~Settable_routine_parameter(Settable_routine_parameter::~Settable_routine_parameter466,15631
  virtual void set_required_privilege(Settable_routine_parameter::set_required_privilege467,15674
  virtual void set_out_param_info(Settable_routine_parameter::set_out_param_info485,16132
  virtual const Send_field *get_out_param_info(Settable_routine_parameter::get_out_param_info487,16188
typedef bool (Item::*Item_processor)Item_processor492,16267
typedef bool (Item::*Item_analyzer)Item_analyzer504,16543
typedef Item* (Item::*Item_transformer)Item_transformer505,16595
typedef void (*Cond_traverser)Cond_traverser506,16649
class Item 509,16713
  static void *operator new(Item::operator new513,16811
  static void *operator new(Item::operator new515,16891
  static void operator delete(Item::operator delete517,17002
  static void operator delete(Item::operator delete518,17077
  enum Type Item::Type520,17142
  enum Type {FIELD_ITEM=Item::Type::FIELD_ITEM520,17142
  enum Type {FIELD_ITEM= 0, FUNC_ITEM,Item::Type::FUNC_ITEM520,17142
  enum Type {FIELD_ITEM= 0, FUNC_ITEM, SUM_FUNC_ITEM,Item::Type::SUM_FUNC_ITEM520,17142
  enum Type {FIELD_ITEM= 0, FUNC_ITEM, SUM_FUNC_ITEM, STRING_ITEM,Item::Type::STRING_ITEM520,17142
	     INT_ITEM,Item::Type::INT_ITEM521,17209
	     INT_ITEM, REAL_ITEM,Item::Type::REAL_ITEM521,17209
	     INT_ITEM, REAL_ITEM, NULL_ITEM,Item::Type::NULL_ITEM521,17209
	     INT_ITEM, REAL_ITEM, NULL_ITEM, VARBIN_ITEM,Item::Type::VARBIN_ITEM521,17209
	     COPY_STR_ITEM,Item::Type::COPY_STR_ITEM522,17260
	     COPY_STR_ITEM, FIELD_AVG_ITEM,Item::Type::FIELD_AVG_ITEM522,17260
	     COPY_STR_ITEM, FIELD_AVG_ITEM, DEFAULT_VALUE_ITEM,Item::Type::DEFAULT_VALUE_ITEM522,17260
	     PROC_ITEM,Item::Type::PROC_ITEM523,17317
	     PROC_ITEM,COND_ITEM,Item::Type::COND_ITEM523,17317
	     PROC_ITEM,COND_ITEM, REF_ITEM,Item::Type::REF_ITEM523,17317
	     PROC_ITEM,COND_ITEM, REF_ITEM, FIELD_STD_ITEM,Item::Type::FIELD_STD_ITEM523,17317
	     FIELD_VARIANCE_ITEM,Item::Type::FIELD_VARIANCE_ITEM524,17370
	     FIELD_VARIANCE_ITEM, INSERT_VALUE_ITEM,Item::Type::INSERT_VALUE_ITEM524,17370
             SUBSELECT_ITEM,Item::Type::SUBSELECT_ITEM525,17416
             SUBSELECT_ITEM, ROW_ITEM,Item::Type::ROW_ITEM525,17416
             SUBSELECT_ITEM, ROW_ITEM, CACHE_ITEM,Item::Type::CACHE_ITEM525,17416
             SUBSELECT_ITEM, ROW_ITEM, CACHE_ITEM, TYPE_HOLDER,Item::Type::TYPE_HOLDER525,17416
             PARAM_ITEM,Item::Type::PARAM_ITEM526,17480
             PARAM_ITEM, TRIGGER_FIELD_ITEM,Item::Type::TRIGGER_FIELD_ITEM526,17480
             PARAM_ITEM, TRIGGER_FIELD_ITEM, DECIMAL_ITEM,Item::Type::DECIMAL_ITEM526,17480
             XPATH_NODESET,Item::Type::XPATH_NODESET527,17539
             XPATH_NODESET, XPATH_NODESET_CMP,Item::Type::XPATH_NODESET_CMP527,17539
             VIEW_FIXER_ITEM}Item::Type::VIEW_FIXER_ITEM528,17586
  enum cond_result Item::cond_result530,17618
  enum cond_result { COND_UNDEF,Item::cond_result::COND_UNDEF530,17618
  enum cond_result { COND_UNDEF,COND_OK,Item::cond_result::COND_OK530,17618
  enum cond_result { COND_UNDEF,COND_OK,COND_TRUE,Item::cond_result::COND_TRUE530,17618
  enum cond_result { COND_UNDEF,COND_OK,COND_TRUE,COND_FALSE Item::cond_result::COND_FALSE530,17618
  enum traverse_order Item::traverse_order532,17683
  enum traverse_order { POSTFIX,Item::traverse_order::POSTFIX532,17683
  enum traverse_order { POSTFIX, PREFIX Item::traverse_order::PREFIX532,17683
  uint rsize;Item::rsize535,17804
  String str_value;Item::str_value541,17913
  char * name;Item::name542,17933
  char * orig_name;Item::orig_name544,18019
  Item *next;Item::next552,18270
  uint32 max_length;Item::max_length553,18284
  uint name_length;Item::name_length558,18479
  int8 marker;Item::marker559,18540
  uint8 decimals;Item::decimals560,18555
  my_bool maybe_null;Item::maybe_null561,18573
  my_bool null_value;Item::null_value562,18623
  my_bool unsigned_flag;Item::unsigned_flag563,18669
  my_bool with_sum_func;Item::with_sum_func564,18694
  my_bool fixed;Item::fixed565,18719
  my_bool is_autogenerated_name;Item::is_autogenerated_name566,18795
  DTCollation collation;Item::collation568,18944
  my_bool with_subselect;Item::with_subselect569,18969
  Item_result cmp_context;Item::cmp_context572,19181
  virtual ~Item(Item::~Item584,19687
  inline void quick_fix_field(Item::quick_fix_field601,20216
  virtual void save_org_in_field(Item::save_org_in_field605,20456
  virtual int save_safe_in_field(Item::save_safe_in_field607,20541
  virtual Item_result result_type(Item::result_type611,20736
  virtual Item_result cast_to_int_type(Item::cast_to_int_type612,20802
  virtual enum_monotonicity_info get_monotonicity_info(Item::get_monotonicity_info622,21196
  virtual longlong val_int_endpoint(Item::val_int_endpoint658,22585
  inline ulonglong val_uint(Item::val_uint689,23443
  virtual String *val_nodeset(Item::val_nodeset823,28324
  virtual Field *get_tmp_table_field(Item::get_tmp_table_field840,29089
  virtual Field *tmp_table_field(Item::tmp_table_field842,29207
  virtual const char *full_name(Item::full_name843,29268
  virtual double  val_result(Item::val_result851,29608
  virtual longlong val_int_result(Item::val_int_result852,29662
  virtual String *str_result(Item::str_result853,29720
  virtual my_decimal *val_decimal_result(Item::val_decimal_result854,29787
  virtual bool val_bool_result(Item::val_bool_result856,29876
  virtual bool is_null_result(Item::is_null_result857,29932
  virtual table_map used_tables(Item::used_tables860,30026
  virtual table_map not_null_tables(Item::not_null_tables872,30666
  virtual bool basic_const_item(Item::basic_const_item877,30897
  virtual Item *clone_item(Item::clone_item879,31008
  virtual cond_result eq_cmp_result(Item::eq_cmp_result880,31051
  inline uint float_length(Item::float_length881,31115
  inline int decimal_int_part(Item::decimal_int_part884,31287
  virtual bool const_item(Item::const_item890,31545
  virtual bool const_during_execution(Item::const_during_execution895,31767
  virtual inline void print(Item::print909,32281
  virtual void update_used_tables(Item::update_used_tables915,32453
  virtual void split_sum_func(Item::split_sum_func916,32492
  virtual bool get_date_result(Item::get_date_result923,32905
  virtual bool is_null(Item::is_null932,33342
  virtual void update_null_value Item::update_null_value937,33448
  virtual void top_level_item(Item::top_level_item949,33883
  virtual void set_result_field(Item::set_result_field954,34060
  virtual bool is_result_field(Item::is_result_field955,34109
  virtual bool is_bool_func(Item::is_bool_func956,34156
  virtual void save_in_result_field(Item::save_in_result_field957,34200
  virtual void no_rows_in_result(Item::no_rows_in_result961,34349
  virtual Item *copy_or_same(Item::copy_or_same962,34387
  virtual Item *copy_andor_structure(Item::copy_andor_structure963,34443
  virtual Item *real_item(Item::real_item964,34507
  virtual Item *get_tmp_table_item(Item::get_tmp_table_item965,34552
  virtual CHARSET_INFO *compare_collation(Item::compare_collation968,34670
  virtual CHARSET_INFO *charset_for_protocol(Item::charset_for_protocol974,34854
  virtual bool walk(Item::walk980,35048
  virtual Item* compile(Item::compile1003,35628
   virtual void traverse_cond(Item::traverse_cond1011,35862
  virtual bool intro_version(Item::intro_version1024,36331
  virtual bool remove_dependence_processor(Item::remove_dependence_processor1026,36391
  virtual bool remove_fixed(Item::remove_fixed1027,36461
  virtual bool collect_item_field_processor(Item::collect_item_field_processor1029,36572
  virtual bool find_item_in_field_list_processor(Item::find_item_in_field_list_processor1030,36643
  virtual bool change_context_processor(Item::change_context_processor1031,36718
  virtual bool reset_query_id_processor(Item::reset_query_id_processor1032,36788
  virtual bool is_expensive_processor(Item::is_expensive_processor1033,36863
  virtual bool find_item_processor(Item::find_item_processor1034,36927
  virtual bool register_field_in_read_map(Item::register_field_in_read_map1035,37007
  virtual bool check_partition_func_processor(Item::check_partition_func_processor1090,39914
  virtual bool subst_argument_checker(Item::subst_argument_checker1091,39993
  virtual Item *equal_fields_propagator(Item::equal_fields_propagator1098,40109
  virtual bool set_no_const_sub(Item::set_no_const_sub1099,40179
  virtual Item *replace_equal_field(Item::replace_equal_field1100,40241
  virtual bool check_valid_arguments_processor(Item::check_valid_arguments_processor1106,40525
  virtual bool find_function_processor Item::find_function_processor1123,41001
  virtual Item *this_item(Item::this_item1132,41214
  virtual const Item *this_item(Item::this_item1133,41259
  virtual Item **this_item_addr(Item::this_item_addr1139,41467
  virtual uint cols(Item::cols1142,41567
  virtual Item* element_index(Item::element_index1143,41603
  virtual Item** addr(Item::addr1144,41658
  virtual bool null_inside(Item::null_inside1147,41785
  virtual void bring_value(Item::bring_value1149,41881
  virtual Item_field *filed_for_view_update(Item::filed_for_view_update1152,41989
  virtual Item *neg_transformer(Item::neg_transformer1154,42050
  virtual Item *update_value_transformer(Item::update_value_transformer1155,42109
  void delete_self(Item::delete_self1157,42246
  virtual bool is_splocal(Item::is_splocal1163,42308
  virtual Settable_routine_parameter *get_settable_routine_parameter(Item::get_settable_routine_parameter1169,42516
  virtual bool result_as_longlong(Item::result_as_longlong1180,42938
  inline bool is_datetime(Item::is_datetime1181,42992
  inline bool has_compatible_context(Item::has_compatible_context1203,43561
  virtual Field::geometry_type get_geometry_type(Item::get_geometry_type1215,43984
  uint32 max_char_length(Item::max_char_length1219,44220
  void fix_length_and_charset(Item::fix_length_and_charset1221,44310
  void fix_char_length(Item::fix_char_length1226,44500
  void fix_char_length_ulonglong(Item::fix_char_length_ulonglong1231,44694
  void fix_length_and_charset_datetime(Item::fix_length_and_charset_datetime1243,45052
  virtual bool is_outer_field(Item::is_outer_field1251,45333
class Item_basic_constant 1258,45431
  table_map used_table_map;Item_basic_constant::used_table_map1260,45472
  Item_basic_constant(Item_basic_constant::Item_basic_constant1262,45508
  void set_used_tables(Item_basic_constant::set_used_tables1263,45563
  table_map used_tables(Item_basic_constant::used_tables1264,45626
  void cleanup(Item_basic_constant::cleanup1266,45750
class Item_sp_variable 1286,46434
  THD *m_thd;Item_sp_variable::m_thd1293,46591
  LEX_STRING m_name;Item_sp_variable::m_name1296,46614
  sp_head *m_sp;Item_sp_variable::m_sp1304,46799
inline void Item_sp_variable::make_field(1332,47510
inline bool Item_sp_variable::const_item(1343,47784
inline int Item_sp_variable::save_in_field(1348,47853
inline bool Item_sp_variable::send(1353,47996
class Item_splocal 1364,48361
  uint m_var_idx;Item_splocal::m_var_idx1367,48463
  Type m_type;Item_splocal::m_type1369,48482
  Item_result m_result_type;Item_splocal::m_result_type1370,48497
  enum_field_types m_field_type;Item_splocal::m_field_type1371,48526
  bool limit_clause_param;Item_splocal::limit_clause_param1379,48762
  uint pos_in_query;Item_splocal::pos_in_query1390,49260
  uint len_in_query;Item_splocal::len_in_query1398,49625
  bool is_splocal(Item_splocal::is_splocal1404,49808
  inline enum_field_types field_type(Item_splocal::field_type1419,50202
  Settable_routine_parameter *get_settable_routine_parameter(Item_splocal::get_settable_routine_parameter1425,50348
inline const LEX_STRING *Item_splocal::my_name(Item_splocal::my_name1435,50637
inline uint Item_splocal::get_var_idx(1440,50715
inline enum Item::Type Item_splocal::type(1445,50786
inline Item_result Item_splocal::result_type(1450,50858
class Item_case_expr 1460,51157
  uint m_case_expr_id;Item_case_expr::m_case_expr_id1482,51678
inline enum Item::Type Item_case_expr::type(1489,51904
inline Item_result Item_case_expr::result_type(1494,51991
class Item_name_const 1514,52598
  Item *value_item;Item_name_const::value_item1516,52636
  Item *name_item;Item_name_const::name_item1517,52656
  bool valid_args;Item_name_const::valid_args1518,52675
  Item_result result_type(Item_name_const::result_type1532,53008
  bool const_item(Item_name_const::const_item1537,53089
  int save_in_field(Item_name_const::save_in_field1542,53141
  bool send(Item_name_const::send1547,53267
agg_item_charsets_for_string_result(1562,53952
agg_item_charsets_for_comparison(1572,54354
agg_item_charsets_for_string_result_with_comparison(1582,54742
class Item_num:Item_num1595,55272
  Item_num(Item_num::Item_num1598,55325
  bool check_partition_func_processor(Item_num::check_partition_func_processor1601,55474
#define NO_CACHED_FIELD_INDEX 1604,55549
class Item_ident 1607,55614
  const char *orig_db_name;Item_ident::orig_db_name1616,55940
  const char *orig_table_name;Item_ident::orig_table_name1617,55968
  const char *orig_field_name;Item_ident::orig_field_name1618,55999
  Name_resolution_context *context;Item_ident::context1621,56039
  const char *db_name;Item_ident::db_name1622,56075
  const char *table_name;Item_ident::table_name1623,56098
  const char *field_name;Item_ident::field_name1624,56124
  bool alias_name_used;Item_ident::alias_name_used1625,56150
  uint cached_field_index;Item_ident::cached_field_index1631,56418
  TABLE_LIST *cached_table;Item_ident::cached_table1637,56637
  st_select_lex *depended_from;Item_ident::depended_from1638,56665
  virtual bool change_context_processor(Item_ident::change_context_processor1648,57125
class Item_ident_for_show 1657,57495
  Field *field;Item_ident_for_show::field1660,57544
  const char *db_name;Item_ident_for_show::db_name1661,57560
  const char *table_name;Item_ident_for_show::table_name1662,57583
  Item_ident_for_show(Item_ident_for_show::Item_ident_for_show1664,57610
  enum Type type(Item_ident_for_show::type1669,57793
  double val_real(Item_ident_for_show::val_real1670,57841
  longlong val_int(Item_ident_for_show::val_int1671,57891
  String *val_str(Item_ident_for_show::val_str1672,57941
  my_decimal *val_decimal(Item_ident_for_show::val_decimal1673,58004
  CHARSET_INFO *charset_for_protocol(Item_ident_for_show::charset_for_protocol1675,58125
class Item_field 1683,58260
  Field *field,Item_field::field1688,58349
  Field *field,*result_field;Item_field::result_field1688,58349
  Item_equal *item_equal;Item_field::item_equal1689,58379
  bool no_const_subst;Item_field::no_const_subst1690,58405
  uint have_privileges;Item_field::have_privileges1695,58527
  bool any_privileges;Item_field::any_privileges1697,58605
  enum Type type(Item_field::type1717,59412
  enum Item_result result_type Item_field::result_type1736,60095
  Item_result cast_to_int_type(Item_field::cast_to_int_type1740,60176
  enum_field_types field_type(Item_field::field_type1744,60261
  enum_monotonicity_info get_monotonicity_info(Item_field::get_monotonicity_info1748,60333
  Field *get_tmp_table_field(Item_field::get_tmp_table_field1753,60498
  Field *tmp_table_field(Item_field::tmp_table_field1754,60554
  bool is_null(Item_field::is_null1758,60763
  bool check_partition_func_processor(Item_field::check_partition_func_processor1764,61026
  bool result_as_longlong(Item_field::result_as_longlong1766,61114
  inline uint32 max_disp_length(Item_field::max_disp_length1775,61421
  Item_field *filed_for_view_update(Item_field::filed_for_view_update1776,61495
  bool is_outer_field(Item_field::is_outer_field1781,61792
  Field::geometry_type get_geometry_type(Item_field::get_geometry_type1786,61910
  CHARSET_INFO *charset_for_protocol(Item_field::charset_for_protocol1791,62060
class Item_null 1798,62261
  Item_null(Item_null::Item_null1801,62315
  enum Type type(Item_null::type1809,62526
  enum Item_result result_type Item_null::result_type1818,62883
  enum_field_types field_type(Item_null::field_type1819,62949
  bool basic_const_item(Item_null::basic_const_item1820,63017
  Item *clone_item(Item_null::clone_item1821,63063
  bool is_null(Item_null::is_null1822,63116
  virtual inline void print(Item_null::print1824,63148
  bool check_partition_func_processor(Item_null::check_partition_func_processor1830,63320
class Item_null_result 1833,63394
  Field *result_field;Item_null_result::result_field1836,63445
  Item_null_result(Item_null_result::Item_null_result1837,63468
  bool is_result_field(Item_null_result::is_result_field1838,63523
  void save_in_result_field(Item_null_result::save_in_result_field1839,63578
  bool check_partition_func_processor(Item_null_result::check_partition_func_processor1843,63684
class Item_param 1848,63826
  char cnvbuf[Item_param::cnvbuf1851,63912
  String cnvstr;Item_param::cnvstr1852,63944
  Item *cnvitem;Item_param::cnvitem1853,63961
  enum enum_item_param_stateItem_param::enum_item_param_state1856,63987
    NO_VALUE,Item_param::enum_item_param_state::NO_VALUE1858,64020
    NO_VALUE, NULL_VALUE,Item_param::enum_item_param_state::NULL_VALUE1858,64020
    NO_VALUE, NULL_VALUE, INT_VALUE,Item_param::enum_item_param_state::INT_VALUE1858,64020
    NO_VALUE, NULL_VALUE, INT_VALUE, REAL_VALUE,Item_param::enum_item_param_state::REAL_VALUE1858,64020
    STRING_VALUE,Item_param::enum_item_param_state::STRING_VALUE1859,64069
    STRING_VALUE, TIME_VALUE,Item_param::enum_item_param_state::TIME_VALUE1859,64069
    STRING_VALUE, TIME_VALUE, LONG_DATA_VALUE,Item_param::enum_item_param_state::LONG_DATA_VALUE1859,64069
    DECIMAL_VALUEItem_param::enum_item_param_state::DECIMAL_VALUE1860,64116
  } state;Item_param::state1861,64134
  String str_value_ptr;Item_param::str_value_ptr1873,64715
  my_decimal decimal_value;Item_param::decimal_value1874,64739
    longlong integer;Item_param::integer1877,64779
    double   real;Item_param::real1878,64801
    struct CONVERSION_INFOItem_param::CONVERSION_INFO1885,65091
      CHARSET_INFO *character_set_client;Item_param::CONVERSION_INFO::character_set_client1887,65124
      CHARSET_INFO *character_set_of_placeholder;Item_param::CONVERSION_INFO::character_set_of_placeholder1888,65166
      CHARSET_INFO *final_character_set_of_str_value;Item_param::CONVERSION_INFO::final_character_set_of_str_value1895,65475
    } cs_info;Item_param::cs_info1896,65529
    MYSQL_TIME     time;Item_param::time1897,65544
  } value;Item_param::value1898,65569
  enum Item_result item_result_type;Item_param::item_result_type1901,65647
  enum Type item_type;Item_param::item_type1902,65684
  enum enum_field_types param_type;Item_param::param_type1912,66115
  uint pos_in_query;Item_param::pos_in_query1917,66291
  enum Item_result result_type Item_param::result_type1921,66351
  enum Type type(Item_param::type1922,66420
  enum_field_types field_type(Item_param::field_type1923,66467
  virtual table_map used_tables(Item_param::used_tables1960,67795
  bool is_null(Item_param::is_null1963,67963
  bool limit_clause_param;Item_param::limit_clause_param1985,68953
    get_settable_routine_parameter(Item_param::get_settable_routine_parameter1990,69092
  Send_field *m_out_param_info;Item_param::m_out_param_info2005,69396
class Item_int 2009,69433
  longlong value;Item_int::value2012,69475
  Item_int(Item_int::Item_int2013,69493
  Item_int(Item_int::Item_int2016,69616
  Item_int(Item_int::Item_int2019,69731
  Item_int(Item_int::Item_int2022,69876
  enum Type type(Item_int::type2025,70049
  enum Item_result result_type Item_int::result_type2026,70095
  enum_field_types field_type(Item_int::field_type2027,70158
  longlong val_int(Item_int::val_int2028,70228
  double val_real(Item_int::val_real2029,70292
  bool basic_const_item(Item_int::basic_const_item2033,70489
  Item *clone_item(Item_int::clone_item2034,70535
  Item_num *neg(Item_int::neg2036,70667
  uint decimal_precision(Item_int::decimal_precision2037,70717
  bool check_partition_func_processor(Item_int::check_partition_func_processor2040,70849
class Item_uint 2044,70926
  Item_uint(Item_uint::Item_uint2048,71016
  double val_real(Item_uint::val_real2050,71132
  Item *clone_item(Item_uint::clone_item2053,71256
  uint decimal_precision(Item_uint::decimal_precision2057,71467
  bool check_partition_func_processor(Item_uint::check_partition_func_processor2058,71523
class Item_decimal 2063,71637
  my_decimal decimal_value;Item_decimal::decimal_value2066,71686
  enum Type type(Item_decimal::type2076,72097
  enum Item_result result_type Item_decimal::result_type2077,72147
  enum_field_types field_type(Item_decimal::field_type2078,72214
  my_decimal *val_decimal(Item_decimal::val_decimal2082,72357
  bool basic_const_item(Item_decimal::basic_const_item2084,72483
  Item *clone_item(Item_decimal::clone_item2085,72529
  Item_num *neg(Item_decimal::neg2090,72694
  uint decimal_precision(Item_decimal::decimal_precision2096,72815
  bool check_partition_func_processor(Item_decimal::check_partition_func_processor2099,72983
class Item_float 2103,73060
  char *presentation;Item_float::presentation2105,73096
  double value;Item_float::value2107,73126
  Item_float(Item_float::Item_float2110,73220
  Item_float(Item_float::Item_float2118,73429
  enum Type type(Item_float::type2124,73626
  enum_field_types field_type(Item_float::field_type2125,73673
  double val_real(Item_float::val_real2126,73741
  longlong val_int(Item_float::val_int2127,73804
  bool basic_const_item(Item_float::basic_const_item2142,74142
  Item *clone_item(Item_float::clone_item2143,74188
  Item_num *neg(Item_float::neg2145,74273
class Item_static_float_func 2151,74439
  const char *func_name;Item_static_float_func::func_name2153,74489
  Item_static_float_func(Item_static_float_func::Item_static_float_func2155,74522
  virtual inline void print(Item_static_float_func::print2160,74710
class Item_string 2169,74873
  Item_string(Item_string::Item_string2172,74929
  Item_string(Item_string::Item_string2193,75831
  Item_string(Item_string::Item_string2202,76052
  void set_str_with_copy(Item_string::set_str_with_copy2219,76684
  void set_repertoire_from_value(Item_string::set_repertoire_from_value2224,76887
  enum Type type(Item_string::type2230,77130
  String *val_str(Item_string::val_str2233,77222
  enum Item_result result_type Item_string::result_type2240,77416
  enum_field_types field_type(Item_string::field_type2241,77482
  bool basic_const_item(Item_string::basic_const_item2242,77551
  Item *clone_item(Item_string::clone_item2244,77649
  inline void append(Item_string::append2250,77834
  bool check_partition_func_processor(Item_string::check_partition_func_processor2256,78055
  inline bool is_cs_specified(Item_string::is_cs_specified2277,79017
  inline void set_cs_specified(Item_string::set_cs_specified2292,79442
  bool m_cs_specified;Item_string::m_cs_specified2298,79544
class Item_static_string_func 2307,79751
  const char *func_name;Item_static_string_func::func_name2309,79803
  Item_static_string_func(Item_static_string_func::Item_static_string_func2311,79836
  virtual inline void print(Item_static_string_func::print2318,80145
  bool check_partition_func_processor(Item_static_string_func::check_partition_func_processor2323,80251
class Item_partition_func_safe_string:Item_partition_func_safe_string2328,80347
  Item_partition_func_safe_string(Item_partition_func_safe_string::Item_partition_func_safe_string2331,80415
class Item_return_date_time 2338,80583
  enum_field_types date_time_field_type;Item_return_date_time::date_time_field_type2340,80653
  Item_return_date_time(Item_return_date_time::Item_return_date_time2342,80702
  enum_field_types field_type(Item_return_date_time::field_type2346,80897
class Item_blob 2350,80973
  Item_blob(Item_blob::Item_blob2353,81039
  enum Type type(Item_blob::type2356,81177
  enum_field_types field_type(Item_blob::field_type2357,81226
class Item_empty_string 2367,81480
  Item_empty_string(Item_empty_string::Item_empty_string2370,81554
class Item_return_int 2377,81837
  enum_field_types int_field_type;Item_return_int::int_field_type2379,81878
  Item_return_int(Item_return_int::Item_return_int2381,81921
  enum_field_types field_type(Item_return_int::field_type2387,82130
class Item_hex_string:Item_hex_string2391,82200
  enum Type type(Item_hex_string::type2396,82333
  double val_real(Item_hex_string::val_real2397,82382
  bool basic_const_item(Item_hex_string::basic_const_item2403,82523
  String *val_str(Item_hex_string::val_str2404,82569
  enum Item_result result_type Item_hex_string::result_type2407,82741
  enum Item_result cast_to_int_type(Item_hex_string::cast_to_int_type2408,82807
  enum_field_types field_type(Item_hex_string::field_type2409,82874
  bool check_partition_func_processor(Item_hex_string::check_partition_func_processor2413,83118
class Item_bin_string:Item_bin_string2419,83260
class Item_result_field 2425,83372
  Field *result_field;Item_result_field::result_field2428,83448
  Item_result_field(Item_result_field::Item_result_field2429,83497
  Item_result_field(Item_result_field::Item_result_field2431,83610
  ~Item_result_field(Item_result_field::~Item_result_field2434,83725
  Field *get_tmp_table_field(Item_result_field::get_tmp_table_field2435,83782
  Field *tmp_table_field(Item_result_field::tmp_table_field2436,83838
  table_map used_tables(Item_result_field::used_tables2437,83902
  void set_result_field(Item_result_field::set_result_field2439,83987
  bool is_result_field(Item_result_field::is_result_field2440,84050
  void save_in_result_field(Item_result_field::save_in_result_field2441,84089
class Item_ref 2466,85106
  enum Ref_Type Item_ref::Ref_Type2471,85186
  enum Ref_Type { REF,Item_ref::Ref_Type::REF2471,85186
  enum Ref_Type { REF, DIRECT_REF,Item_ref::Ref_Type::DIRECT_REF2471,85186
  enum Ref_Type { REF, DIRECT_REF, VIEW_REF,Item_ref::Ref_Type::VIEW_REF2471,85186
  enum Ref_Type { REF, DIRECT_REF, VIEW_REF, OUTER_REF,Item_ref::Ref_Type::OUTER_REF2471,85186
  enum Ref_Type { REF, DIRECT_REF, VIEW_REF, OUTER_REF, AGGREGATE_REF Item_ref::Ref_Type::AGGREGATE_REF2471,85186
  Field *result_field;Item_ref::result_field2472,85259
  Item **ref;Item_ref::ref2473,85308
  Item_ref(Item_ref::Item_ref2474,85322
  Item_ref(Item_ref::Item_ref2500,86602
  enum Type type(Item_ref::type2502,86719
  bool eq(Item_ref::eq2503,86766
  enum Item_result result_type Item_ref::result_type2526,87517
  enum_field_types field_type(Item_ref::field_type2527,87591
  Field *get_tmp_table_field(Item_ref::get_tmp_table_field2528,87664
  table_map used_tables(Item_ref::used_tables2531,87807
  void update_used_tables(Item_ref::update_used_tables2535,87922
  table_map not_null_tables(Item_ref::not_null_tables2540,88022
  void set_result_field(Item_ref::set_result_field2541,88096
  bool is_result_field(Item_ref::is_result_field2542,88159
  void save_in_result_field(Item_ref::save_in_result_field2543,88198
  Item *real_item(Item_ref::real_item2547,88312
  bool walk(Item_ref::walk2551,88385
  bool result_as_longlong(Item_ref::result_as_longlong2557,88620
  Item_field *filed_for_view_update(Item_ref::filed_for_view_update2562,88715
  virtual Ref_Type ref_type(Item_ref::ref_type2564,88801
  uint cols(Item_ref::cols2567,88907
  Item* element_index(Item_ref::element_index2571,88997
  Item** addr(Item_ref::addr2575,89116
  bool check_cols(Item_ref::check_cols2579,89215
  bool null_inside(Item_ref::null_inside2584,89389
  void bring_value(Item_ref::bring_value2588,89493
  bool get_time(Item_ref::get_time2593,89596
  virtual bool basic_const_item(Item_ref::basic_const_item2598,89699
  bool is_outer_field(Item_ref::is_outer_field2599,89785
class Item_direct_ref 2613,90055
  Item_direct_ref(Item_direct_ref::Item_direct_ref2616,90104
  Item_direct_ref(Item_direct_ref::Item_direct_ref2624,90500
  Item_direct_ref(Item_direct_ref::Item_direct_ref2625,90576
  virtual Ref_Type ref_type(Item_direct_ref::ref_type2639,91017
class Item_direct_view_ref 2646,91193
  Item_direct_view_ref(Item_direct_view_ref::Item_direct_view_ref2649,91254
  Item_direct_view_ref(Item_direct_view_ref::Item_direct_view_ref2654,91574
  Item_direct_view_ref(Item_direct_view_ref::Item_direct_view_ref2656,91665
  Item *get_tmp_table_item(Item_direct_view_ref::get_tmp_table_item2663,91920
  virtual Ref_Type ref_type(Item_direct_view_ref::ref_type2669,92055
class Item_outer_ref 2685,92567
  Item *outer_ref;Item_outer_ref::outer_ref2688,92622
  Item_sum *in_sum_func;Item_outer_ref::in_sum_func2690,92716
  bool found_in_select_list;Item_outer_ref::found_in_select_list2695,92846
  Item_outer_ref(Item_outer_ref::Item_outer_ref2696,92875
  Item_outer_ref(Item_outer_ref::Item_outer_ref2707,93234
  void save_in_result_field(Item_outer_ref::save_in_result_field2714,93596
  table_map used_tables(Item_outer_ref::used_tables2719,93736
  virtual Ref_Type ref_type(Item_outer_ref::ref_type2723,93835
class Item_ref_null_helper:Item_ref_null_helper2739,94271
  Item_in_subselect* owner;Item_ref_null_helper::owner2742,94328
  Item_ref_null_helper(Item_ref_null_helper::Item_ref_null_helper2744,94364
  table_map used_tables(Item_ref_null_helper::used_tables2759,94974
class Item_int_with_ref 2776,95432
  Item *ref;Item_int_with_ref::ref2778,95475
  Item_int_with_ref(Item_int_with_ref::Item_int_with_ref2780,95496
  int save_in_field(Item_int_with_ref::save_in_field2785,95638
  virtual Item *real_item(Item_int_with_ref::real_item2790,95777
class Item_copy 2828,97032
  enum enum_field_types cached_field_type;Item_copy::cached_field_type2836,97231
  Item *item;Item_copy::item2839,97317
  Item_result cached_result_type;Item_copy::cached_result_type2845,97461
  Item_copy(Item_copy::Item_copy2853,97637
  Item *get_item(Item_copy::get_item2885,98477
  enum Type type(Item_copy::type2887,98574
  enum_field_types field_type(Item_copy::field_type2888,98625
  enum Item_result result_type Item_copy::result_type2889,98693
  void make_field(Item_copy::make_field2891,98765
  table_map used_tables(Item_copy::used_tables2892,98831
  bool const_item(Item_copy::const_item2893,98890
  bool is_null(Item_copy::is_null2894,98930
class Item_copy_string 2913,99398
  Item_copy_string Item_copy_string::Item_copy_string2916,99450
class Item_copy_int 2927,99692
  longlong cached_value;Item_copy_int::cached_value2930,99746
  Item_copy_int Item_copy_int::Item_copy_int2932,99780
  virtual double val_real(Item_copy_int::val_real2937,99966
  virtual longlong val_int(Item_copy_int::val_int2941,100055
class Item_copy_uint 2949,100166
  Item_copy_uint Item_copy_uint::Item_copy_uint2952,100220
  double val_real(Item_copy_uint::val_real2958,100332
class Item_copy_float 2965,100430
  double cached_value;Item_copy_float::cached_value2968,100486
  Item_copy_float Item_copy_float::Item_copy_float2970,100518
  double val_real(Item_copy_float::val_real2975,100690
  longlong val_int(Item_copy_float::val_int2979,100762
  void copy(Item_copy_float::copy2983,100831
class Item_copy_decimal 2991,100928
  my_decimal cached_value;Item_copy_decimal::cached_value2994,100986
  Item_copy_decimal Item_copy_decimal::Item_copy_decimal2996,101021
  my_decimal *val_decimal(Item_copy_decimal::val_decimal3000,101154
class Cached_item 3010,101313
  my_bool null_value;Cached_item::null_value3013,101359
  Cached_item(Cached_item::Cached_item3014,101381
class Cached_item_str 3019,101490
  Item *item;Cached_item_str::item3021,101534
  uint32 value_max_length;Cached_item_str::value_max_length3022,101548
  String value,Cached_item_str::value3023,101575
  String value,tmp_value;Cached_item_str::tmp_value3023,101575
class Cached_item_real 3031,101743
  Item *item;Cached_item_real::item3033,101788
  double value;Cached_item_real::value3034,101802
  Cached_item_real(Cached_item_real::Cached_item_real3036,101826
class Cached_item_int 3040,101913
  Item *item;Cached_item_int::item3042,101957
  longlong value;Cached_item_int::value3043,101971
  Cached_item_int(Cached_item_int::Cached_item_int3045,101997
class Cached_item_decimal 3050,102082
  Item *item;Cached_item_decimal::item3052,102130
  my_decimal value;Cached_item_decimal::value3053,102144
class Cached_item_field 3059,102233
  uchar *buff;Cached_item_field::buff3061,102279
  Field *field;Cached_item_field::field3062,102294
  uint length;Cached_item_field::length3063,102310
  Cached_item_field(Cached_item_field::Cached_item_field3066,102334
class Item_default_value 3074,102486
  Item *arg;Item_default_value::arg3077,102541
  Item_default_value(Item_default_value::Item_default_value3078,102554
  Item_default_value(Item_default_value::Item_default_value3082,102736
  enum Type type(Item_default_value::type3086,102925
  table_map used_tables(Item_default_value::used_tables3091,103191
  bool walk(Item_default_value::walk3093,103250
class Item_insert_value 3112,103913
  Item *arg;Item_insert_value::arg3115,103967
  Item_insert_value(Item_insert_value::Item_insert_value3116,103980
  int save_in_field(Item_insert_value::save_in_field3123,104317
  enum Type type(Item_insert_value::type3127,104449
  table_map used_tables(Item_insert_value::used_tables3132,104640
  bool walk(Item_insert_value::walk3134,104700
class Item_trigger_field 3155,105374
  enum row_version_type Item_trigger_field::row_version_type3160,105550
  enum row_version_type {OLD_ROW,Item_trigger_field::row_version_type::OLD_ROW3160,105550
  enum row_version_type {OLD_ROW, NEW_ROW}Item_trigger_field::row_version_type::NEW_ROW3160,105550
  row_version_type row_version;Item_trigger_field::row_version3161,105594
  Item_trigger_field *next_trg_field;Item_trigger_field::next_trg_field3163,105686
  uint field_idx;Item_trigger_field::field_idx3165,105777
  Table_triggers_list *triggers;Item_trigger_field::triggers3167,105866
  Item_trigger_field(Item_trigger_field::Item_trigger_field3169,105900
  enum Type type(Item_trigger_field::type3179,106427
  table_map used_tables(Item_trigger_field::used_tables3183,106633
  Field *get_tmp_table_field(Item_trigger_field::get_tmp_table_field3184,106691
  Item *copy_or_same(Item_trigger_field::copy_or_same3185,106736
  Item *get_tmp_table_item(Item_trigger_field::get_tmp_table_item3186,106784
  Settable_routine_parameter *get_settable_routine_parameter(Item_trigger_field::get_settable_routine_parameter3194,106985
  bool set_value(Item_trigger_field::set_value3199,107092
  ulong original_privilege;Item_trigger_field::original_privilege3215,107724
  ulong want_privilege;Item_trigger_field::want_privilege3216,107752
  GRANT_INFO *table_grants;Item_trigger_field::table_grants3217,107776
  bool read_only;Item_trigger_field::read_only3222,107927
class Item_cache:Item_cache3226,107950
  Item *example;Item_cache::example3229,108008
  table_map used_table_map;Item_cache::used_table_map3230,108025
  Field *cached_field;Item_cache::cached_field3236,108242
  enum enum_field_types cached_field_type;Item_cache::cached_field_type3237,108265
  bool value_cached;Item_cache::value_cached3245,108653
  Item_cache(Item_cache::Item_cache3247,108682
  Item_cache(Item_cache::Item_cache3255,108854
  void set_used_tables(Item_cache::set_used_tables3264,109054
  virtual bool allocate(Item_cache::allocate3266,109118
  virtual bool setup(Item_cache::setup3267,109164
  enum Type type(Item_cache::type3278,109464
  enum_field_types field_type(Item_cache::field_type3279,109512
  table_map used_tables(Item_cache::used_tables3282,109704
  virtual void keep_array(Item_cache::keep_array3283,109763
  bool eq_def(Item_cache::eq_def3285,109857
  bool eq(Item_cache::eq3289,109959
  bool has_value(Item_cache::has_value3298,110207
  Field* field(Item_cache::field3308,110462
  bool basic_const_item(Item_cache::basic_const_item3312,110572
  virtual void clear(Item_cache::clear3314,110662
  Item_result result_type(Item_cache::result_type3315,110728
class Item_cache_int:Item_cache_int3324,110878
  longlong value;Item_cache_int::value3327,110931
  Item_cache_int(Item_cache_int::Item_cache_int3329,110957
  Item_cache_int(Item_cache_int::Item_cache_int3331,111007
  virtual void store(Item_cache_int::store3334,111103
  enum Item_result result_type(Item_cache_int::result_type3340,111324
  bool result_as_longlong(Item_cache_int::result_as_longlong3341,111386
class Item_cache_real:Item_cache_real3346,111458
  double value;Item_cache_real::value3348,111501
  Item_cache_real(Item_cache_real::Item_cache_real3350,111525
  enum Item_result result_type(Item_cache_real::result_type3357,111693
class Item_cache_decimal:Item_cache_decimal3362,111783
  my_decimal decimal_value;Item_cache_decimal::decimal_value3365,111840
  Item_cache_decimal(Item_cache_decimal::Item_cache_decimal3367,111876
  enum Item_result result_type(Item_cache_decimal::result_type3373,112033
class Item_cache_str:Item_cache_str3378,112126
  char buffer[Item_cache_str::buffer3380,112168
  String *value,Item_cache_str::value3381,112209
  String *value, value_buff;Item_cache_str::value_buff3381,112209
  bool is_varbinary;Item_cache_str::is_varbinary3382,112238
  Item_cache_str(Item_cache_str::Item_cache_str3385,112270
  enum Item_result result_type(Item_cache_str::result_type3397,112712
  CHARSET_INFO *charset(Item_cache_str::charset3398,112777
class Item_cache_row:Item_cache_row3403,112921
  Item_cache  **values;Item_cache_row::values3405,112963
  uint item_count;Item_cache_row::item_count3406,112987
  bool save_array;Item_cache_row::save_array3407,113006
  Item_cache_row(Item_cache_row::Item_cache_row3409,113033
  void make_field(Item_cache_row::make_field3425,113475
  double val_real(Item_cache_row::val_real3429,113568
  longlong val_int(Item_cache_row::val_int3434,113656
  String *val_str(Item_cache_row::val_str3439,113749
  my_decimal *val_decimal(Item_cache_row::val_decimal3444,113849
  enum Item_result result_type(Item_cache_row::result_type3450,113969
  uint cols(Item_cache_row::cols3452,114034
  Item *element_index(Item_cache_row::element_index3453,114071
  Item **addr(Item_cache_row::addr3454,114123
  void keep_array(Item_cache_row::keep_array3458,114251
  void cleanup(Item_cache_row::cleanup3459,114290
class Item_cache_datetime:Item_cache_datetime3473,114528
  String str_value;Item_cache_datetime::str_value3476,114586
  longlong int_value;Item_cache_datetime::int_value3477,114606
  bool str_value_cached;Item_cache_datetime::str_value_cached3478,114628
  Item_cache_datetime(Item_cache_datetime::Item_cache_datetime3480,114661
  enum Item_result result_type(Item_cache_datetime::result_type3492,115010
  bool result_as_longlong(Item_cache_datetime::result_as_longlong3493,115075
  void clear(Item_cache_datetime::clear3503,115489
class Item_type_holder:Item_type_holder3514,115760
  TYPELIB *enum_set_typelib;Item_type_holder::enum_set_typelib3517,115809
  enum_field_types fld_type;Item_type_holder::fld_type3518,115838
  Field::geometry_type geometry_type;Item_type_holder::geometry_type3519,115867
  int prev_decimal_int_part;Item_type_holder::prev_decimal_int_part3524,116001
  enum_field_types field_type(Item_type_holder::field_type3529,116107
  enum Type type(Item_type_holder::type3530,116167
  Field::geometry_type get_geometry_type(Item_type_holder::get_geometry_type3539,116501

sql/item_row.h,1180
#define ITEM_ROW_INCLUDED2,26
class Item_row:Item_row19,798
  Item **items;Item_row::items21,828
  table_map used_tables_cache,Item_row::used_tables_cache22,844
  table_map used_tables_cache, not_null_tables_cache;Item_row::not_null_tables_cache22,844
  uint arg_count;Item_row::arg_count23,898
  bool const_item_cache;Item_row::const_item_cache24,916
  bool with_null;Item_row::with_null25,941
  Item_row(Item_row::Item_row28,993
  enum Type type(Item_row::type38,1236
  bool is_null(Item_row::is_null40,1325
  void make_field(Item_row::make_field41,1365
  double val_real(Item_row::val_real45,1458
  longlong val_int(Item_row::val_int50,1546
  String *val_str(Item_row::val_str55,1639
  my_decimal *val_decimal(Item_row::val_decimal60,1739
  table_map used_tables(Item_row::used_tables68,1993
  bool const_item(Item_row::const_item69,2056
  enum Item_result result_type(Item_row::result_type70,2112
  table_map not_null_tables(Item_row::not_null_tables72,2203
  uint cols(Item_row::cols78,2470
  Item* element_index(Item_row::element_index79,2506
  Item** addr(Item_row::addr80,2557
  bool null_inside(Item_row::null_inside82,2628

sql/item_strfunc.h,17661
#define ITEM_STRFUNC_INCLUDED2,30
class Item_str_func 28,958
  String *make_empty_result(Item_str_func::make_empty_result36,1191
  Item_str_func(Item_str_func::Item_str_func41,1306
  Item_str_func(Item_str_func::Item_str_func42,1365
  Item_str_func(Item_str_func::Item_str_func43,1431
  Item_str_func(Item_str_func::Item_str_func44,1508
  Item_str_func(Item_str_func::Item_str_func45,1595
  Item_str_func(Item_str_func::Item_str_func46,1691
  Item_str_func(Item_str_func::Item_str_func47,1798
  enum Item_result result_type Item_str_func::result_type51,1960
class Item_str_ascii_func 62,2229
  String ascii_buf;Item_str_ascii_func::ascii_buf64,2279
  Item_str_ascii_func(Item_str_ascii_func::Item_str_ascii_func66,2307
  Item_str_ascii_func(Item_str_ascii_func::Item_str_ascii_func67,2351
  Item_str_ascii_func(Item_str_ascii_func::Item_str_ascii_func68,2403
  Item_str_ascii_func(Item_str_ascii_func::Item_str_ascii_func69,2465
  String *val_str(Item_str_ascii_func::val_str70,2537
class Item_func_md5 78,2683
  String tmp_value;Item_func_md5::tmp_value80,2733
  Item_func_md5(Item_func_md5::Item_func_md582,2761
  const char *func_name(Item_func_md5::func_name85,2877
class Item_func_sha 89,2932
  Item_func_sha(Item_func_sha::Item_func_sha92,2990
  const char *func_name(Item_func_sha::func_name95,3116
class Item_func_sha2 98,3171
  Item_func_sha2(Item_func_sha2::Item_func_sha2101,3230
  const char *func_name(Item_func_sha2::func_name104,3359
class Item_func_aes_encrypt 107,3414
  Item_func_aes_encrypt(Item_func_aes_encrypt::Item_func_aes_encrypt110,3474
  const char *func_name(Item_func_aes_encrypt::func_name113,3597
class Item_func_aes_decrypt 116,3659
  Item_func_aes_decrypt(Item_func_aes_decrypt::Item_func_aes_decrypt119,3720
  const char *func_name(Item_func_aes_decrypt::func_name122,3843
class Item_func_concat 126,3906
  String tmp_value;Item_func_concat::tmp_value128,3953
  Item_func_concat(Item_func_concat::Item_func_concat130,3981
  Item_func_concat(Item_func_concat::Item_func_concat131,4042
  const char *func_name(Item_func_concat::func_name134,4159
class Item_func_concat_ws 137,4216
  String tmp_value;Item_func_concat_ws::tmp_value139,4266
  Item_func_concat_ws(Item_func_concat_ws::Item_func_concat_ws141,4294
  const char *func_name(Item_func_concat_ws::func_name144,4416
  table_map not_null_tables(Item_func_concat_ws::not_null_tables145,4472
class Item_func_reverse 148,4526
  String tmp_value;Item_func_reverse::tmp_value150,4574
  Item_func_reverse(Item_func_reverse::Item_func_reverse152,4602
  const char *func_name(Item_func_reverse::func_name155,4710
class Item_func_replace 159,4769
  String tmp_value,Item_func_replace::tmp_value161,4817
  String tmp_value,tmp_value2;Item_func_replace::tmp_value2161,4817
  Item_func_replace(Item_func_replace::Item_func_replace163,4856
  const char *func_name(Item_func_replace::func_name167,5010
class Item_func_insert 171,5069
  String tmp_value;Item_func_insert::tmp_value173,5116
  Item_func_insert(Item_func_insert::Item_func_insert175,5144
  const char *func_name(Item_func_insert::func_name179,5319
class Item_str_conv 183,5377
  uint multiply;Item_str_conv::multiply186,5432
  my_charset_conv_case converter;Item_str_conv::converter187,5449
  String tmp_value;Item_str_conv::tmp_value188,5483
  Item_str_conv(Item_str_conv::Item_str_conv190,5511
class Item_func_lcase 195,5597
  Item_func_lcase(Item_func_lcase::Item_func_lcase198,5651
  const char *func_name(Item_func_lcase::func_name199,5705
class Item_func_ucase 203,5790
  Item_func_ucase(Item_func_ucase::Item_func_ucase206,5844
  const char *func_name(Item_func_ucase::func_name207,5898
class Item_func_left 212,5984
  String tmp_value;Item_func_left::tmp_value214,6029
  Item_func_left(Item_func_left::Item_func_left216,6057
  const char *func_name(Item_func_left::func_name219,6172
class Item_func_right 223,6228
  String tmp_value;Item_func_right::tmp_value225,6274
  Item_func_right(Item_func_right::Item_func_right227,6302
  const char *func_name(Item_func_right::func_name230,6418
class Item_func_substr 234,6475
  String tmp_value;Item_func_substr::tmp_value236,6522
  Item_func_substr(Item_func_substr::Item_func_substr238,6550
  Item_func_substr(Item_func_substr::Item_func_substr239,6609
  const char *func_name(Item_func_substr::func_name242,6736
class Item_func_substr_index 246,6794
  String tmp_value;Item_func_substr_index::tmp_value248,6847
  Item_func_substr_index(Item_func_substr_index::Item_func_substr_index250,6875
  const char *func_name(Item_func_substr_index::func_name253,7008
class Item_func_trim 257,7075
  String tmp_value;Item_func_trim::tmp_value260,7131
  String remove;Item_func_trim::remove261,7151
  Item_func_trim(Item_func_trim::Item_func_trim263,7176
  Item_func_trim(Item_func_trim::Item_func_trim264,7233
  const char *func_name(Item_func_trim::func_name267,7338
  virtual const char *mode_name(Item_func_trim::mode_name269,7452
class Item_func_ltrim 273,7516
  Item_func_ltrim(Item_func_ltrim::Item_func_ltrim276,7571
  Item_func_ltrim(Item_func_ltrim::Item_func_ltrim277,7630
  const char *func_name(Item_func_ltrim::func_name279,7708
  const char *mode_name(Item_func_ltrim::mode_name280,7760
class Item_func_rtrim 284,7819
  Item_func_rtrim(Item_func_rtrim::Item_func_rtrim287,7874
  Item_func_rtrim(Item_func_rtrim::Item_func_rtrim288,7933
  const char *func_name(Item_func_rtrim::func_name290,8011
  const char *mode_name(Item_func_rtrim::mode_name291,8063
class Item_func_password 303,8480
  char tmp_value[Item_func_password::tmp_value305,8535
  Item_func_password(Item_func_password::Item_func_password307,8596
  void fix_length_and_dec(Item_func_password::fix_length_and_dec309,8691
  const char *func_name(Item_func_password::func_name313,8806
class Item_func_old_password 325,9170
  char tmp_value[Item_func_old_password::tmp_value327,9229
  Item_func_old_password(Item_func_old_password::Item_func_old_password329,9293
  void fix_length_and_dec(Item_func_old_password::fix_length_and_dec331,9392
  const char *func_name(Item_func_old_password::func_name335,9512
class Item_func_des_encrypt 340,9647
  String tmp_value,Item_func_des_encrypt::tmp_value342,9699
  String tmp_value,tmp_arg;Item_func_des_encrypt::tmp_arg342,9699
  Item_func_des_encrypt(Item_func_des_encrypt::Item_func_des_encrypt344,9735
  Item_func_des_encrypt(Item_func_des_encrypt::Item_func_des_encrypt345,9789
  void fix_length_and_dec(Item_func_des_encrypt::fix_length_and_dec347,9883
  const char *func_name(Item_func_des_encrypt::func_name353,10022
class Item_func_des_decrypt 356,10084
  String tmp_value;Item_func_des_decrypt::tmp_value358,10136
  Item_func_des_decrypt(Item_func_des_decrypt::Item_func_des_decrypt360,10164
  Item_func_des_decrypt(Item_func_des_decrypt::Item_func_des_decrypt361,10218
  void fix_length_and_dec(Item_func_des_decrypt::fix_length_and_dec363,10312
  const char *func_name(Item_func_des_decrypt::func_name371,10495
class Item_func_encrypt 374,10557
  String tmp_value;Item_func_encrypt::tmp_value376,10605
  void constructor_helper(Item_func_encrypt::constructor_helper379,10673
  Item_func_encrypt(Item_func_encrypt::Item_func_encrypt384,10753
  Item_func_encrypt(Item_func_encrypt::Item_func_encrypt388,10834
  void fix_length_and_dec(Item_func_encrypt::fix_length_and_dec393,10955
  const char *func_name(Item_func_encrypt::func_name394,11018
class Item_func_encode 400,11101
  bool seeded;Item_func_encode::seeded404,11208
  SQL_CRYPT sql_crypt;Item_func_encode::sql_crypt406,11234
  Item_func_encode(Item_func_encode::Item_func_encode408,11265
  const char *func_name(Item_func_encode::func_name412,11394
class Item_func_decode 421,11577
  Item_func_decode(Item_func_decode::Item_func_decode424,11635
  const char *func_name(Item_func_decode::func_name425,11705
class Item_func_sysconst 431,11809
  Item_func_sysconst(Item_func_sysconst::Item_func_sysconst434,11866
class Item_func_database 446,12224
  Item_func_database(Item_func_database::Item_func_database449,12286
  void fix_length_and_dec(Item_func_database::fix_length_and_dec451,12363
  const char *func_name(Item_func_database::func_name456,12481
  const char *fully_qualified_func_name(Item_func_database::fully_qualified_func_name457,12536
class Item_func_user 461,12614
  Item_func_user(Item_func_user::Item_func_user467,12734
  String *val_str(Item_func_user::val_str471,12808
  void fix_length_and_dec(Item_func_user::fix_length_and_dec477,12956
  const char *func_name(Item_func_user::func_name482,13094
  const char *fully_qualified_func_name(Item_func_user::fully_qualified_func_name483,13145
  int save_in_field(Item_func_user::save_in_field484,13214
class Item_func_current_user 491,13337
  Name_resolution_context *context;Item_func_current_user::context493,13391
  Item_func_current_user(Item_func_current_user::Item_func_current_user496,13436
  const char *func_name(Item_func_current_user::func_name499,13570
  const char *fully_qualified_func_name(Item_func_current_user::fully_qualified_func_name500,13629
class Item_func_soundex 504,13711
  String tmp_value;Item_func_soundex::tmp_value506,13759
  Item_func_soundex(Item_func_soundex::Item_func_soundex508,13787
  const char *func_name(Item_func_soundex::func_name511,13895
class Item_func_elt 515,13954
  Item_func_elt(Item_func_elt::Item_func_elt518,14006
  const char *func_name(Item_func_elt::func_name523,14168
class Item_func_make_set 527,14223
  Item *item;Item_func_make_set::item529,14272
  String tmp_str;Item_func_make_set::tmp_str530,14286
  Item_func_make_set(Item_func_make_set::Item_func_make_set533,14313
  bool fix_fields(Item_func_make_set::fix_fields535,14424
  const char *func_name(Item_func_make_set::func_name545,14767
  bool walk(Item_func_make_set::walk547,14823
class Item_func_format 557,15144
  String tmp_str;Item_func_format::tmp_str559,15197
  MY_LOCALE *locale;Item_func_format::locale560,15215
  Item_func_format(Item_func_format::Item_func_format562,15244
  Item_func_format(Item_func_format::Item_func_format563,15319
  const char *func_name(Item_func_format::func_name569,15518
class Item_func_char 574,15639
  Item_func_char(Item_func_char::Item_func_char577,15692
  Item_func_char(Item_func_char::Item_func_char579,15786
  void fix_length_and_dec(Item_func_char::fix_length_and_dec582,15916
  const char *func_name(Item_func_char::func_name586,15984
class Item_func_repeat 590,16040
  String tmp_value;Item_func_repeat::tmp_value592,16087
  Item_func_repeat(Item_func_repeat::Item_func_repeat594,16115
  const char *func_name(Item_func_repeat::func_name597,16244
class Item_func_rpad 601,16302
  String tmp_value,Item_func_rpad::tmp_value603,16347
  String tmp_value, rpad_str;Item_func_rpad::rpad_str603,16347
  Item_func_rpad(Item_func_rpad::Item_func_rpad605,16385
  const char *func_name(Item_func_rpad::func_name609,16532
class Item_func_lpad 613,16588
  String tmp_value,Item_func_lpad::tmp_value615,16633
  String tmp_value, lpad_str;Item_func_lpad::lpad_str615,16633
  Item_func_lpad(Item_func_lpad::Item_func_lpad617,16671
  const char *func_name(Item_func_lpad::func_name621,16818
class Item_func_conv 625,16874
  Item_func_conv(Item_func_conv::Item_func_conv628,16927
  const char *func_name(Item_func_conv::func_name629,16994
  void fix_length_and_dec(Item_func_conv::fix_length_and_dec631,17074
class Item_func_hex 640,17191
  String tmp_value;Item_func_hex::tmp_value642,17241
  Item_func_hex(Item_func_hex::Item_func_hex644,17269
  const char *func_name(Item_func_hex::func_name645,17321
  void fix_length_and_dec(Item_func_hex::fix_length_and_dec647,17406
class Item_func_unhex 655,17546
  String tmp_value;Item_func_unhex::tmp_value657,17592
  Item_func_unhex(Item_func_unhex::Item_func_unhex659,17620
  const char *func_name(Item_func_unhex::func_name664,17734
  void fix_length_and_dec(Item_func_unhex::fix_length_and_dec666,17815
class Item_func_like_range 676,17967
  String min_str;Item_func_like_range::min_str679,18029
  String max_str;Item_func_like_range::max_str680,18047
  const bool is_min;Item_func_like_range::is_min681,18065
  Item_func_like_range(Item_func_like_range::Item_func_like_range683,18094
  void fix_length_and_dec(Item_func_like_range::fix_length_and_dec687,18247
class Item_func_like_range_min 696,18375
  Item_func_like_range_min(Item_func_like_range_min::Item_func_like_range_min699,18445
  const char *func_name(Item_func_like_range_min::func_name701,18533
class Item_func_like_range_max 705,18599
  Item_func_like_range_max(Item_func_like_range_max::Item_func_like_range_max708,18669
  const char *func_name(Item_func_like_range_max::func_name710,18757
class Item_func_binary 715,18830
  Item_func_binary(Item_func_binary::Item_func_binary718,18885
  String *val_str(Item_func_binary::val_str719,18934
  void fix_length_and_dec(Item_func_binary::fix_length_and_dec728,19143
  const char *func_name(Item_func_binary::func_name734,19314
class Item_load_file 738,19380
  String tmp_value;Item_load_file::tmp_value740,19425
  Item_load_file(Item_load_file::Item_load_file742,19453
  const char *func_name(Item_load_file::func_name744,19529
  void fix_length_and_dec(Item_load_file::fix_length_and_dec745,19585
class Item_func_export_set:Item_func_export_set754,19733
  Item_func_export_set(Item_func_export_set::Item_func_export_set757,19793
  Item_func_export_set(Item_func_export_set::Item_func_export_set758,19866
  Item_func_export_set(Item_func_export_set::Item_func_export_set759,19949
  const char *func_name(Item_func_export_set::func_name762,20104
class Item_func_inet_ntoa 765,20165
  Item_func_inet_ntoa(Item_func_inet_ntoa::Item_func_inet_ntoa768,20224
  const char *func_name(Item_func_inet_ntoa::func_name772,20317
  void fix_length_and_dec(Item_func_inet_ntoa::fix_length_and_dec773,20373
class Item_func_quote 781,20511
  String tmp_value;Item_func_quote::tmp_value783,20557
  Item_func_quote(Item_func_quote::Item_func_quote785,20585
  const char *func_name(Item_func_quote::func_name786,20633
  void fix_length_and_dec(Item_func_quote::fix_length_and_dec788,20714
class Item_func_conv_charset 797,20998
  bool use_cached_value;Item_func_conv_charset::use_cached_value799,21051
  String tmp_value;Item_func_conv_charset::tmp_value800,21076
  bool safe;Item_func_conv_charset::safe802,21104
  CHARSET_INFO *conv_charset;Item_func_conv_charset::conv_charset803,21117
  Item_func_conv_charset(Item_func_conv_charset::Item_func_conv_charset804,21165
  Item_func_conv_charset(Item_func_conv_charset::Item_func_conv_charset806,21290
  const char *func_name(Item_func_conv_charset::func_name837,22238
class Item_func_set_collation 841,22359
  Item_func_set_collation(Item_func_set_collation::Item_func_set_collation844,22421
  const char *func_name(Item_func_set_collation::func_name848,22599
  enum Functype functype(Item_func_set_collation::functype849,22653
  Item_field *filed_for_view_update(Item_func_set_collation::filed_for_view_update851,22774
class Item_func_charset 858,22926
  Item_func_charset(Item_func_charset::Item_func_charset861,22982
  const char *func_name(Item_func_charset::func_name863,23061
  void fix_length_and_dec(Item_func_charset::fix_length_and_dec864,23115
  table_map not_null_tables(Item_func_charset::not_null_tables870,23286
class Item_func_collation 873,23340
  Item_func_collation(Item_func_collation::Item_func_collation876,23398
  const char *func_name(Item_func_collation::func_name878,23479
  void fix_length_and_dec(Item_func_collation::fix_length_and_dec879,23535
  table_map not_null_tables(Item_func_collation::not_null_tables885,23706
class Item_func_crc32 888,23760
  String value;Item_func_crc32::value890,23806
  Item_func_crc32(Item_func_crc32::Item_func_crc32892,23830
  const char *func_name(Item_func_crc32::func_name893,23897
  void fix_length_and_dec(Item_func_crc32::fix_length_and_dec894,23949
class Item_func_uncompressed_length 898,24022
  String value;Item_func_uncompressed_length::value900,24083
  Item_func_uncompressed_length(Item_func_uncompressed_length::Item_func_uncompressed_length902,24107
  const char *func_name(Item_func_uncompressed_length::func_name903,24167
  void fix_length_and_dec(Item_func_uncompressed_length::fix_length_and_dec904,24230
#define ZLIB_DEPENDED_FUNCTION 909,24324
#define ZLIB_DEPENDED_FUNCTION 911,24363
class Item_func_compress:Item_func_compress914,24430
  String buffer;Item_func_compress::buffer916,24479
  Item_func_compress(Item_func_compress::Item_func_compress918,24504
  void fix_length_and_dec(Item_func_compress::fix_length_and_dec919,24553
  const char *func_name(Item_func_compress::func_name920,24628
class Item_func_uncompress:Item_func_uncompress924,24735
  String buffer;Item_func_uncompress::buffer926,24786
  Item_func_uncompress(Item_func_uncompress::Item_func_uncompress928,24811
  void fix_length_and_dec(Item_func_uncompress::fix_length_and_dec929,24863
  const char *func_name(Item_func_uncompress::func_name930,24937
#define UUID_LENGTH 934,25046
class Item_func_uuid:Item_func_uuid935,25087
  Item_func_uuid(Item_func_uuid::Item_func_uuid938,25140
  void fix_length_and_dec(Item_func_uuid::fix_length_and_dec939,25179
  const char *func_name(Item_func_uuid::func_name945,25350

sql/item_subselect.h,8200
#define ITEM_SUBSELECT_INCLUDED2,32
typedef class st_select_lex SELECT_LEX;33,1070
typedef Comp_creator* (*chooser_compare_func_creator)chooser_compare_func_creator39,1212
class Item_subselect 43,1314
  my_bool value_assigned;Item_subselect::value_assigned45,1363
  THD *thd;Item_subselect::thd48,1502
  Item *substitution;Item_subselect::substitution50,1580
  st_select_lex_unit *unit;Item_subselect::unit52,1627
  subselect_engine *engine;Item_subselect::engine54,1731
  subselect_engine *old_engine;Item_subselect::old_engine56,1800
  table_map used_tables_cache;Item_subselect::used_tables_cache58,1870
  uint max_columns;Item_subselect::max_columns60,1967
  enum_parsing_place parsing_place;Item_subselect::parsing_place62,2020
  bool have_to_be_excluded;Item_subselect::have_to_be_excluded64,2089
  bool const_item_cache;Item_subselect::const_item_cache66,2149
  bool engine_changed;Item_subselect::engine_changed70,2216
  bool changed;Item_subselect::changed72,2271
  bool is_correlated;Item_subselect::is_correlated75,2368
  enum trans_res Item_subselect::trans_res77,2392
  enum trans_res {RES_OK,Item_subselect::trans_res::RES_OK77,2392
  enum trans_res {RES_OK, RES_REDUCE,Item_subselect::trans_res::RES_REDUCE77,2392
  enum trans_res {RES_OK, RES_REDUCE, RES_ERROR}Item_subselect::trans_res::RES_ERROR77,2392
  enum subs_type Item_subselect::subs_type78,2442
  enum subs_type {UNKNOWN_SUBS,Item_subselect::subs_type::UNKNOWN_SUBS78,2442
  enum subs_type {UNKNOWN_SUBS, SINGLEROW_SUBS,Item_subselect::subs_type::SINGLEROW_SUBS78,2442
		  EXISTS_SUBS,Item_subselect::subs_type::EXISTS_SUBS79,2490
		  EXISTS_SUBS, IN_SUBS,Item_subselect::subs_type::IN_SUBS79,2490
		  EXISTS_SUBS, IN_SUBS, ALL_SUBS,Item_subselect::subs_type::ALL_SUBS79,2490
		  EXISTS_SUBS, IN_SUBS, ALL_SUBS, ANY_SUBS}Item_subselect::subs_type::ANY_SUBS79,2490
  virtual subs_type substype(Item_subselect::substype83,2559
  virtual void reset(Item_subselect::reset95,2961
  bool assigned(Item_subselect::assigned100,3063
  void assigned(Item_subselect::assigned101,3108
  bool is_null(Item_subselect::is_null103,3181
  table_map not_null_tables(Item_subselect::not_null_tables112,3388
  inline table_map get_used_tables_cache(Item_subselect::get_used_tables_cache114,3465
  inline bool get_const_item_cache(Item_subselect::get_const_item_cache115,3538
  virtual bool have_guarded_conds(Item_subselect::have_guarded_conds119,3734
  bool change_engine(Item_subselect::change_engine120,3788
  virtual void reset_value_registration(Item_subselect::reset_value_registration138,4261
  enum_parsing_place place(Item_subselect::place139,4306
  const char *func_name(Item_subselect::func_name147,4602
class Item_singlerow_subselect 162,5171
  Item_cache *value,Item_singlerow_subselect::value165,5238
  Item_cache *value, **row;Item_singlerow_subselect::row165,5238
  Item_singlerow_subselect(Item_singlerow_subselect::Item_singlerow_subselect168,5329
  subs_type substype(Item_singlerow_subselect::substype171,5417
  Item* element_index(Item_singlerow_subselect::element_index186,5820
  Item** addr(Item_singlerow_subselect::addr187,5894
class Item_maxmin_subselect 211,6822
  bool max;Item_maxmin_subselect::max214,6896
  bool was_values;Item_maxmin_subselect::was_values215,6908
  bool any_value(Item_maxmin_subselect::any_value221,7157
  void register_value(Item_maxmin_subselect::register_value222,7199
  void reset_value_registration(Item_maxmin_subselect::reset_value_registration223,7245
class Item_exists_subselect 228,7330
  bool value;Item_exists_subselect::value231,7394
  Item_exists_subselect(Item_exists_subselect::Item_exists_subselect235,7523
  subs_type substype(Item_exists_subselect::substype237,7571
  void reset(Item_exists_subselect::reset238,7618
  enum Item_result result_type(Item_exists_subselect::result_type243,7657
class Item_in_subselect 272,8592
  Item *left_expr;Item_in_subselect::left_expr275,8659
  Item *expr;Item_in_subselect::expr280,8777
  Item_in_optimizer *optimizer;Item_in_subselect::optimizer281,8791
  bool was_null;Item_in_subselect::was_null282,8823
  bool abort_on_null;Item_in_subselect::abort_on_null283,8840
  bool transformed;Item_in_subselect::transformed284,8862
  bool *pushed_cond_guards;Item_in_subselect::pushed_cond_guards287,8967
  bool *get_cond_guard(Item_in_subselect::get_cond_guard289,8996
  void set_cond_guard_var(Item_in_subselect::set_cond_guard_var293,9097
  bool have_guarded_conds(Item_in_subselect::have_guarded_conds298,9209
  Item_func_not_all *upper_item;Item_in_subselect::upper_item300,9275
  Item_in_subselect(Item_in_subselect::Item_in_subselect303,9420
  subs_type substype(Item_in_subselect::substype308,9571
  void reset(Item_in_subselect::reset309,9614
  void update_null_value Item_in_subselect::update_null_value323,10034
  void top_level_item(Item_in_subselect::top_level_item325,10104
  inline bool is_top_level_item(Item_in_subselect::is_top_level_item326,10149
class Item_allany_subselect 338,10515
  chooser_compare_func_creator func_creator;Item_allany_subselect::func_creator341,10579
  Comp_creator *func;Item_allany_subselect::func342,10624
  bool all;Item_allany_subselect::all343,10646
  subs_type substype(Item_allany_subselect::substype349,10834
class subselect_engine:subselect_engine355,11003
  select_subselect *result;subselect_engine::result358,11057
  THD *thd;subselect_engine::thd359,11113
  Item_subselect *item;subselect_engine::item360,11154
  enum Item_result res_type;subselect_engine::res_type361,11211
  enum_field_types res_field_type;subselect_engine::res_field_type362,11262
  bool maybe_null;subselect_engine::maybe_null363,11330
  subselect_engine(subselect_engine::subselect_engine366,11399
  virtual ~subselect_engine(subselect_engine::~subselect_engine375,11603
  THD * get_thd(subselect_engine::get_thd383,11819
  enum Item_result type(subselect_engine::type409,12702
  enum_field_types field_type(subselect_engine::field_type410,12749
  virtual bool may_be_null(subselect_engine::may_be_null412,12837
  virtual bool is_executed(subselect_engine::is_executed418,13170
class subselect_single_select_engine:subselect_single_select_engine427,13399
  my_bool prepared;subselect_single_select_engine::prepared429,13463
  my_bool optimized;subselect_single_select_engine::optimized430,13518
  my_bool executed;subselect_single_select_engine::executed431,13575
  my_bool optimize_error;subselect_single_select_engine::optimize_error432,13630
  st_select_lex *select_lex;subselect_single_select_engine::select_lex433,13698
  JOIN * join;subselect_single_select_engine::join434,13758
  bool is_executed(subselect_single_select_engine::is_executed451,14296
class subselect_union_engine:subselect_union_engine456,14367
  st_select_lex_unit *unit;subselect_union_engine::unit458,14423
class subselect_uniquesubquery_engine:subselect_uniquesubquery_engine499,15490
  st_join_table *tab;subselect_uniquesubquery_engine::tab502,15566
  Item *cond;subselect_uniquesubquery_engine::cond503,15588
  bool empty_result_set;subselect_uniquesubquery_engine::empty_result_set508,15744
  bool null_keypart;subselect_uniquesubquery_engine::null_keypart509,15769
  subselect_uniquesubquery_engine(subselect_uniquesubquery_engine::subselect_uniquesubquery_engine513,15928
  uint cols(subselect_uniquesubquery_engine::cols524,16261
  uint8 uncacheable(subselect_uniquesubquery_engine::uncacheable525,16289
  table_map upper_select_const_tables(subselect_uniquesubquery_engine::upper_select_const_tables527,16363
  bool no_rows(subselect_uniquesubquery_engine::no_rows533,16612
class subselect_indexsubquery_engine:subselect_indexsubquery_engine537,16663
  bool check_null;subselect_indexsubquery_engine::check_null540,16791
  Item *having;subselect_indexsubquery_engine::having570,18228
  subselect_indexsubquery_engine(subselect_indexsubquery_engine::subselect_indexsubquery_engine574,18331
inline bool Item_subselect::is_evaluated(595,19062
inline bool Item_subselect::is_uncacheable(600,19148

sql/item_sum.h,21604
#define ITEM_SUM_INCLUDED2,26
class Aggregator 45,1511
  Item_sum *item_sum;Aggregator::item_sum58,1831
  bool use_distinct_values;Aggregator::use_distinct_values69,2229
  Aggregator Aggregator::Aggregator72,2266
  virtual ~Aggregator Aggregator::~Aggregator73,2341
  enum Aggregator_type Aggregator::Aggregator_type75,2409
  enum Aggregator_type { SIMPLE_AGGREGATOR,Aggregator::Aggregator_type::SIMPLE_AGGREGATOR75,2409
  enum Aggregator_type { SIMPLE_AGGREGATOR, DISTINCT_AGGREGATOR Aggregator::Aggregator_type::DISTINCT_AGGREGATOR75,2409
class Item_sum 313,13557
  Aggregator *aggr;Item_sum::aggr323,13828
  bool force_copy_fields;Item_sum::force_copy_fields332,14094
  bool with_distinct;Item_sum::with_distinct339,14279
  bool has_force_copy_fields(Item_sum::has_force_copy_fields343,14311
  bool has_with_distinct(Item_sum::has_with_distinct344,14378
  enum SumfunctypeItem_sum::Sumfunctype346,14442
  { COUNT_FUNC,Item_sum::Sumfunctype::COUNT_FUNC347,14461
  { COUNT_FUNC, COUNT_DISTINCT_FUNC,Item_sum::Sumfunctype::COUNT_DISTINCT_FUNC347,14461
  { COUNT_FUNC, COUNT_DISTINCT_FUNC, SUM_FUNC,Item_sum::Sumfunctype::SUM_FUNC347,14461
  { COUNT_FUNC, COUNT_DISTINCT_FUNC, SUM_FUNC, SUM_DISTINCT_FUNC,Item_sum::Sumfunctype::SUM_DISTINCT_FUNC347,14461
  { COUNT_FUNC, COUNT_DISTINCT_FUNC, SUM_FUNC, SUM_DISTINCT_FUNC, AVG_FUNC,Item_sum::Sumfunctype::AVG_FUNC347,14461
    AVG_DISTINCT_FUNC,Item_sum::Sumfunctype::AVG_DISTINCT_FUNC348,14537
    AVG_DISTINCT_FUNC, MIN_FUNC,Item_sum::Sumfunctype::MIN_FUNC348,14537
    AVG_DISTINCT_FUNC, MIN_FUNC, MAX_FUNC,Item_sum::Sumfunctype::MAX_FUNC348,14537
    AVG_DISTINCT_FUNC, MIN_FUNC, MAX_FUNC, STD_FUNC,Item_sum::Sumfunctype::STD_FUNC348,14537
    VARIANCE_FUNC,Item_sum::Sumfunctype::VARIANCE_FUNC349,14590
    VARIANCE_FUNC, SUM_BIT_FUNC,Item_sum::Sumfunctype::SUM_BIT_FUNC349,14590
    VARIANCE_FUNC, SUM_BIT_FUNC, UDF_SUM_FUNC,Item_sum::Sumfunctype::UDF_SUM_FUNC349,14590
    VARIANCE_FUNC, SUM_BIT_FUNC, UDF_SUM_FUNC, GROUP_CONCAT_FUNCItem_sum::Sumfunctype::GROUP_CONCAT_FUNC349,14590
  Item **ref_by;Item_sum::ref_by352,14661
  Item_sum *next;Item_sum::next353,14735
  Item_sum *in_sum_func;Item_sum::in_sum_func354,14809
  st_select_lex * aggr_sel;Item_sum::aggr_sel355,14872
  int8 nest_level;Item_sum::nest_level356,14953
  int8 aggr_level;Item_sum::aggr_level357,15033
  int8 max_arg_level;Item_sum::max_arg_level358,15113
  int8 max_sum_func_level;Item_sum::max_sum_func_level359,15193
  bool quick_group;Item_sum::quick_group360,15273
  List<Item_field> outer_fields;Item_sum::outer_fields367,15633
  uint arg_count;Item_sum::arg_count370,15680
  Item **args,Item_sum::args371,15698
  Item **args, *tmp_args[Item_sum::tmp_args371,15698
  Item **orig_args,Item_sum::orig_args377,15958
  Item **orig_args, *tmp_orig_args[Item_sum::tmp_orig_args377,15958
  table_map used_tables_cache;Item_sum::used_tables_cache378,15997
  bool forced_const;Item_sum::forced_const379,16028
  Item_sum(Item_sum::Item_sum385,16133
  Item_sum(Item_sum::Item_sum390,16252
  Item_sum(Item_sum::Item_sum397,16439
  enum Type type(Item_sum::type407,16787
  inline bool reset_and_add(Item_sum::reset_and_add413,17003
  virtual bool keep_field_type(Item_sum::keep_field_type435,17831
  virtual void fix_length_and_dec(Item_sum::fix_length_and_dec436,17888
  virtual Item *result_item(Item_sum::result_item437,17956
  table_map used_tables(Item_sum::used_tables439,18036
  bool is_null(Item_sum::is_null441,18128
  void make_const Item_sum::make_const442,18168
  virtual bool const_item(Item_sum::const_item447,18251
  virtual bool const_during_execution(Item_sum::const_during_execution448,18310
  virtual void no_rows_in_result(Item_sum::no_rows_in_result462,18885
  virtual void make_unique(Item_sum::make_unique469,19091
  st_select_lex *depended_from(Item_sum::depended_from477,19515
  Item *get_arg(Item_sum::get_arg480,19608
  uint get_arg_count(Item_sum::get_arg_count482,19702
  void init_aggregator(Item_sum::init_aggregator485,19799
  inline bool aggregator_setup(Item_sum::aggregator_setup496,19958
  inline void aggregator_clear(Item_sum::aggregator_clear502,20080
  inline bool aggregator_add(Item_sum::aggregator_add508,20188
  void set_distinct(Item_sum::set_distinct511,20305
  virtual bool setup(Item_sum::setup527,20630
class Aggregator_distinct 544,20990
  bool endup_done;Aggregator_distinct::endup_done556,21504
  TABLE *table;Aggregator_distinct::table567,21965
  uint32 *field_lengths;Aggregator_distinct::field_lengths575,22210
  TMP_TABLE_PARAM *tmp_table_param;Aggregator_distinct::tmp_table_param581,22386
  Unique *tree;Aggregator_distinct::tree590,22762
  uint tree_key_length;Aggregator_distinct::tree_key_length598,23067
  bool always_null;Aggregator_distinct::always_null607,23413
  Aggregator_distinct Aggregator_distinct::Aggregator_distinct610,23442
  Aggregator_type Aggrtype(Aggregator_distinct::Aggrtype614,23612
class Aggregator_simple 634,24162
  Aggregator_simple Aggregator_simple::Aggregator_simple638,24217
  Aggregator_type Aggrtype(Aggregator_simple::Aggrtype640,24278
  bool setup(Aggregator_simple::setup642,24350
  void clear(Aggregator_simple::clear643,24407
  bool add(Aggregator_simple::add644,24445
  void endup(Aggregator_simple::endup645,24486
class Item_sum_num 652,24632
  bool is_evaluated;Item_sum_num::is_evaluated661,24935
  Item_sum_num(Item_sum_num::Item_sum_num663,24964
  Item_sum_num(Item_sum_num::Item_sum_num664,25016
  Item_sum_num(Item_sum_num::Item_sum_num666,25096
  Item_sum_num(Item_sum_num::Item_sum_num667,25167
  Item_sum_num(Item_sum_num::Item_sum_num669,25245
  longlong val_int(Item_sum_num::val_int672,25387
class Item_sum_int 683,25618
  Item_sum_int(Item_sum_int::Item_sum_int686,25668
  Item_sum_int(Item_sum_int::Item_sum_int687,25726
  Item_sum_int(Item_sum_int::Item_sum_int688,25782
  double val_real(Item_sum_int::val_real689,25855
  enum Item_result result_type Item_sum_int::result_type692,26003
  void fix_length_and_dec(Item_sum_int::fix_length_and_dec693,26066
class Item_sum_sum 698,26157
  Item_result hybrid_type;Item_sum_sum::hybrid_type701,26210
  double sum;Item_sum_sum::sum702,26237
  my_decimal dec_buffs[Item_sum_sum::dec_buffs703,26251
  uint curr_dec_buff;Item_sum_sum::curr_dec_buff704,26278
  Item_sum_sum(Item_sum_sum::Item_sum_sum708,26338
  enum Sumfunctype sum_func Item_sum_sum::sum_func713,26491
  enum Item_result result_type Item_sum_sum::result_type723,26747
  void no_rows_in_result(Item_sum_sum::no_rows_in_result726,26856
  const char *func_name(Item_sum_sum::func_name727,26886
class Item_sum_count 735,27025
  longlong count;Item_sum_count::count737,27069
  Item_sum_count(Item_sum_count::Item_sum_count746,27184
  Item_sum_count(Item_sum_count::Item_sum_count758,27460
  Item_sum_count(Item_sum_count::Item_sum_count763,27560
  enum Sumfunctype sum_func Item_sum_count::sum_func766,27663
  void no_rows_in_result(Item_sum_count::no_rows_in_result770,27778
  void make_const(Item_sum_count::make_const771,27818
  const char *func_name(Item_sum_count::func_name779,27982
class Item_avg_field 791,28199
  Field *field;Item_avg_field::field794,28256
  Item_result hybrid_type;Item_avg_field::hybrid_type795,28272
  uint f_precision,Item_avg_field::f_precision796,28299
  uint f_precision, f_scale,Item_avg_field::f_scale796,28299
  uint f_precision, f_scale, dec_bin_size;Item_avg_field::dec_bin_size796,28299
  uint prec_increment;Item_avg_field::prec_increment797,28342
  enum Type type(Item_avg_field::type799,28425
  bool is_null(Item_avg_field::is_null803,28561
  enum_field_types field_type(Item_avg_field::field_type805,28650
  void fix_length_and_dec(Item_avg_field::fix_length_and_dec810,28788
  enum Item_result result_type Item_avg_field::result_type811,28819
  const char *func_name(Item_avg_field::func_name812,28883
class Item_sum_avg 816,28960
  ulonglong count;Item_sum_avg::count819,29010
  uint prec_increment;Item_sum_avg::prec_increment820,29029
  uint f_precision,Item_sum_avg::f_precision821,29052
  uint f_precision, f_scale,Item_sum_avg::f_scale821,29052
  uint f_precision, f_scale, dec_bin_size;Item_sum_avg::dec_bin_size821,29052
  Item_sum_avg(Item_sum_avg::Item_sum_avg823,29096
  Item_sum_avg(Item_sum_avg::Item_sum_avg826,29197
  enum Sumfunctype sum_func Item_sum_avg::sum_func831,29366
  longlong val_int(Item_sum_avg::val_int839,29606
  Item *result_item(Item_sum_avg::result_item844,29785
  void no_rows_in_result(Item_sum_avg::no_rows_in_result846,29871
  const char *func_name(Item_sum_avg::func_name847,29901
  void cleanup(Item_sum_avg::cleanup853,30114
class Item_variance_field 862,30212
  Field *field;Item_variance_field::field865,30274
  Item_result hybrid_type;Item_variance_field::hybrid_type866,30290
  uint f_precision0,Item_variance_field::f_precision0867,30317
  uint f_precision0, f_scale0;Item_variance_field::f_scale0867,30317
  uint f_precision1,Item_variance_field::f_precision1868,30348
  uint f_precision1, f_scale1;Item_variance_field::f_scale1868,30348
  uint dec_bin_size0,Item_variance_field::dec_bin_size0869,30379
  uint dec_bin_size0, dec_bin_size1;Item_variance_field::dec_bin_size1869,30379
  uint sample;Item_variance_field::sample870,30416
  uint prec_increment;Item_variance_field::prec_increment871,30431
  enum Type type(Item_variance_field::type873,30502
  longlong val_int(Item_variance_field::val_int875,30579
  String *val_str(Item_variance_field::val_str877,30672
  my_decimal *val_decimal(Item_variance_field::val_decimal879,30743
  bool is_null(Item_variance_field::is_null881,30835
  enum_field_types field_type(Item_variance_field::field_type882,30896
  void fix_length_and_dec(Item_variance_field::fix_length_and_dec887,31034
  enum Item_result result_type Item_variance_field::result_type888,31065
  const char *func_name(Item_variance_field::func_name889,31129
class Item_sum_variance 913,31961
  Item_result hybrid_type;Item_sum_variance::hybrid_type918,32047
  int cur_dec;Item_sum_variance::cur_dec919,32074
  double recurrence_m,Item_sum_variance::recurrence_m920,32089
  double recurrence_m, recurrence_s;Item_sum_variance::recurrence_s920,32089
  ulonglong count;Item_sum_variance::count921,32164
  uint f_precision0,Item_sum_variance::f_precision0922,32183
  uint f_precision0, f_scale0;Item_sum_variance::f_scale0922,32183
  uint f_precision1,Item_sum_variance::f_precision1923,32214
  uint f_precision1, f_scale1;Item_sum_variance::f_scale1923,32214
  uint dec_bin_size0,Item_sum_variance::dec_bin_size0924,32245
  uint dec_bin_size0, dec_bin_size1;Item_sum_variance::dec_bin_size1924,32245
  uint sample;Item_sum_variance::sample925,32282
  uint prec_increment;Item_sum_variance::prec_increment926,32297
  Item_sum_variance(Item_sum_variance::Item_sum_variance928,32321
  enum Sumfunctype sum_func Item_sum_variance::sum_func932,32521
  Item *result_item(Item_sum_variance::result_item939,32721
  void no_rows_in_result(Item_sum_variance::no_rows_in_result941,32799
  const char *func_name(Item_sum_variance::func_name942,32829
  enum Item_result result_type Item_sum_variance::result_type946,33023
  void cleanup(Item_sum_variance::cleanup947,33087
class Item_std_field 956,33180
  enum Type type(Item_std_field::type960,33277
  enum Item_result result_type Item_std_field::result_type963,33391
  enum_field_types field_type(Item_std_field::field_type964,33455
  const char *func_name(Item_std_field::func_name965,33522
class Item_sum_std 972,33650
  Item_sum_std(Item_sum_std::Item_sum_std975,33707
  Item_sum_std(Item_sum_std::Item_sum_std977,33803
  enum Sumfunctype sum_func Item_sum_std::sum_func980,33889
  Item *result_item(Item_sum_std::result_item982,33968
  const char *func_name(Item_sum_std::func_name984,34043
  enum Item_result result_type Item_sum_std::result_type986,34126
  enum_field_types field_type(Item_sum_std::field_type987,34190
class Item_sum_hybrid 993,34368
  Item_cache *value,Item_sum_hybrid::value996,34420
  Item_cache *value, *arg_cache;Item_sum_hybrid::arg_cache996,34420
  Arg_comparator *cmp;Item_sum_hybrid::cmp997,34453
  Item_result hybrid_type;Item_sum_hybrid::hybrid_type998,34476
  enum_field_types hybrid_field_type;Item_sum_hybrid::hybrid_field_type999,34503
  int cmp_sign;Item_sum_hybrid::cmp_sign1000,34541
  bool was_values;Item_sum_hybrid::was_values1001,34557
  Item_sum_hybrid(Item_sum_hybrid::Item_sum_hybrid1004,34648
  Item_sum_hybrid(Item_sum_hybrid::Item_sum_hybrid1009,34892
  bool keep_field_type(Item_sum_hybrid::keep_field_type1022,35384
  enum Item_result result_type Item_sum_hybrid::result_type1023,35433
  enum enum_field_types field_type(Item_sum_hybrid::field_type1024,35497
  bool any_value(Item_sum_hybrid::any_value1031,35756
  bool result_as_longlong(Item_sum_hybrid::result_as_longlong1039,36045
class Item_sum_min 1043,36120
  Item_sum_min(Item_sum_min::Item_sum_min1046,36173
  Item_sum_min(Item_sum_min::Item_sum_min1047,36236
  enum Sumfunctype sum_func Item_sum_min::sum_func1048,36312
  const char *func_name(Item_sum_min::func_name1051,36383
class Item_sum_max 1056,36471
  Item_sum_max(Item_sum_max::Item_sum_max1059,36524
  Item_sum_max(Item_sum_max::Item_sum_max1060,36588
  enum Sumfunctype sum_func Item_sum_max::sum_func1061,36664
  const char *func_name(Item_sum_max::func_name1064,36735
class Item_sum_bit 1069,36823
  ulonglong reset_bits,Item_sum_bit::reset_bits1072,36876
  ulonglong reset_bits,bits;Item_sum_bit::bits1072,36876
  Item_sum_bit(Item_sum_bit::Item_sum_bit1075,36914
  Item_sum_bit(Item_sum_bit::Item_sum_bit1077,37034
  enum Sumfunctype sum_func Item_sum_bit::sum_func1079,37159
  void fix_length_and_dec(Item_sum_bit::fix_length_and_dec1084,37302
  void cleanup(Item_sum_bit::cleanup1086,37409
class Item_sum_or 1094,37490
  Item_sum_or(Item_sum_or::Item_sum_or1097,37539
  Item_sum_or(Item_sum_or::Item_sum_or1098,37602
  const char *func_name(Item_sum_or::func_name1100,37687
class Item_sum_and 1105,37778
  Item_sum_and(Item_sum_and::Item_sum_and1108,37830
  Item_sum_and(Item_sum_and::Item_sum_and1109,37903
  const char *func_name(Item_sum_and::func_name1111,37990
class Item_sum_xor 1115,38081
  Item_sum_xor(Item_sum_xor::Item_sum_xor1118,38133
  Item_sum_xor(Item_sum_xor::Item_sum_xor1119,38197
  const char *func_name(Item_sum_xor::func_name1121,38284
class Item_udf_sum 1132,38429
  udf_handler udf;Item_udf_sum::udf1135,38479
  Item_udf_sum(Item_udf_sum::Item_udf_sum1138,38507
  Item_udf_sum(Item_udf_sum::Item_udf_sum1141,38592
  Item_udf_sum(Item_udf_sum::Item_udf_sum1144,38698
  const char *func_name(Item_udf_sum::func_name1147,38814
  bool fix_fields(Item_udf_sum::fix_fields1148,38869
  enum Sumfunctype sum_func Item_udf_sum::sum_func1162,39195
  virtual bool have_field_update(Item_udf_sum::have_field_update1163,39257
  void reset_field(Item_udf_sum::reset_field1167,39347
  void update_field(Item_udf_sum::update_field1168,39372
class Item_sum_udf_float 1174,39484
  Item_sum_udf_float(Item_sum_udf_float::Item_sum_udf_float1177,39541
  Item_sum_udf_float(Item_sum_udf_float::Item_sum_udf_float1179,39611
  Item_sum_udf_float(Item_sum_udf_float::Item_sum_udf_float1181,39705
  longlong val_int(Item_sum_udf_float::val_int1183,39794
  void fix_length_and_dec(Item_sum_udf_float::fix_length_and_dec1191,40005
class Item_sum_udf_int 1196,40100
  Item_sum_udf_int(Item_sum_udf_int::Item_sum_udf_int1199,40154
  Item_sum_udf_int(Item_sum_udf_int::Item_sum_udf_int1201,40222
  Item_sum_udf_int(Item_sum_udf_int::Item_sum_udf_int1203,40314
  double val_real(Item_sum_udf_int::val_real1206,40421
  enum Item_result result_type Item_sum_udf_int::result_type1210,40591
  void fix_length_and_dec(Item_sum_udf_int::fix_length_and_dec1211,40654
class Item_sum_udf_str 1216,40750
  Item_sum_udf_str(Item_sum_udf_str::Item_sum_udf_str1219,40804
  Item_sum_udf_str(Item_sum_udf_str::Item_sum_udf_str1221,40872
  Item_sum_udf_str(Item_sum_udf_str::Item_sum_udf_str1223,40963
  double val_real(Item_sum_udf_str::val_real1226,41077
  longlong val_int(Item_sum_udf_str::val_int1235,41318
  enum Item_result result_type Item_sum_udf_str::result_type1249,41706
class Item_sum_udf_decimal 1255,41838
  Item_sum_udf_decimal(Item_sum_udf_decimal::Item_sum_udf_decimal1258,41896
  Item_sum_udf_decimal(Item_sum_udf_decimal::Item_sum_udf_decimal1260,41968
  Item_sum_udf_decimal(Item_sum_udf_decimal::Item_sum_udf_decimal1262,42064
  enum Item_result result_type Item_sum_udf_decimal::result_type1268,42270
  void fix_length_and_dec(Item_sum_udf_decimal::fix_length_and_dec1269,42337
class Item_sum_udf_float 1275,42488
  Item_sum_udf_float(Item_sum_udf_float::Item_sum_udf_float1278,42545
  Item_sum_udf_float(Item_sum_udf_float::Item_sum_udf_float1280,42608
  Item_sum_udf_float(Item_sum_udf_float::Item_sum_udf_float1281,42685
  enum Sumfunctype sum_func Item_sum_udf_float::sum_func1283,42774
  double val_real(Item_sum_udf_float::val_real1284,42836
  void clear(Item_sum_udf_float::clear1285,42897
  bool add(Item_sum_udf_float::add1286,42915
  void update_field(Item_sum_udf_float::update_field1287,42944
class Item_sum_udf_int 1291,42974
  Item_sum_udf_int(Item_sum_udf_int::Item_sum_udf_int1294,43028
  Item_sum_udf_int(Item_sum_udf_int::Item_sum_udf_int1296,43089
  Item_sum_udf_int(Item_sum_udf_int::Item_sum_udf_int1297,43164
  enum Sumfunctype sum_func Item_sum_udf_int::sum_func1299,43249
  longlong val_int(Item_sum_udf_int::val_int1300,43311
  double val_real(Item_sum_udf_int::val_real1301,43371
  void clear(Item_sum_udf_int::clear1302,43430
  bool add(Item_sum_udf_int::add1303,43448
  void update_field(Item_sum_udf_int::update_field1304,43477
class Item_sum_udf_decimal 1308,43507
  Item_sum_udf_decimal(Item_sum_udf_decimal::Item_sum_udf_decimal1311,43566
  Item_sum_udf_decimal(Item_sum_udf_decimal::Item_sum_udf_decimal1313,43631
  Item_sum_udf_decimal(Item_sum_udf_decimal::Item_sum_udf_decimal1315,43714
  enum Sumfunctype sum_func Item_sum_udf_decimal::sum_func1317,43805
  double val_real(Item_sum_udf_decimal::val_real1318,43867
  my_decimal *val_decimal(Item_sum_udf_decimal::val_decimal1319,43928
  void clear(Item_sum_udf_decimal::clear1320,44007
  bool add(Item_sum_udf_decimal::add1321,44025
  void update_field(Item_sum_udf_decimal::update_field1322,44052
class Item_sum_udf_str 1326,44082
  Item_sum_udf_str(Item_sum_udf_str::Item_sum_udf_str1329,44136
  Item_sum_udf_str(Item_sum_udf_str::Item_sum_udf_str1331,44197
  Item_sum_udf_str(Item_sum_udf_str::Item_sum_udf_str1333,44276
  String *val_str(Item_sum_udf_str::val_str1335,44361
  double val_real(Item_sum_udf_str::val_real1337,44446
  longlong val_int(Item_sum_udf_str::val_int1338,44521
  enum Item_result result_type Item_sum_udf_str::result_type1339,44595
  void fix_length_and_dec(Item_sum_udf_str::fix_length_and_dec1340,44661
  enum Sumfunctype sum_func Item_sum_udf_str::sum_func1341,44721
  void clear(Item_sum_udf_str::clear1342,44783
  bool add(Item_sum_udf_str::add1343,44801
  void update_field(Item_sum_udf_str::update_field1344,44830
class Item_func_group_concat 1359,45287
  TMP_TABLE_PARAM *tmp_table_param;Item_func_group_concat::tmp_table_param1361,45336
  String result;Item_func_group_concat::result1362,45372
  String *separator;Item_func_group_concat::separator1363,45389
  TREE tree_base;Item_func_group_concat::tree_base1364,45410
  TREE *tree;Item_func_group_concat::tree1365,45428
  Unique *unique_filter;Item_func_group_concat::unique_filter1374,45674
  TABLE *table;Item_func_group_concat::table1375,45699
  ORDER **order;Item_func_group_concat::order1376,45715
  Name_resolution_context *context;Item_func_group_concat::context1377,45732
  uint arg_count_order;Item_func_group_concat::arg_count_order1379,45807
  uint arg_count_field;Item_func_group_concat::arg_count_field1381,45889
  uint row_count;Item_func_group_concat::row_count1382,45913
  bool distinct;Item_func_group_concat::distinct1383,45931
  bool warning_for_row;Item_func_group_concat::warning_for_row1384,45948
  bool always_null;Item_func_group_concat::always_null1385,45972
  bool force_copy_fields;Item_func_group_concat::force_copy_fields1386,45992
  bool no_appended;Item_func_group_concat::no_appended1387,46018
  Item_func_group_concat *original;Item_func_group_concat::original1392,46152
  enum Sumfunctype sum_func Item_func_group_concat::sum_func1411,46903
  const char *func_name(Item_func_group_concat::func_name1412,46968
  virtual Item_result result_type Item_func_group_concat::result_type1413,47027
  enum_field_types field_type(Item_func_group_concat::field_type1415,47146
  void reset_field(Item_func_group_concat::reset_field1424,47373
  void update_field(Item_func_group_concat::update_field1425,47433
  double val_real(Item_func_group_concat::val_real1429,47573
  longlong val_int(Item_func_group_concat::val_int1434,47690
  my_decimal *val_decimal(Item_func_group_concat::val_decimal1444,47937
  void no_rows_in_result(Item_func_group_concat::no_rows_in_result1450,48113
  virtual bool change_context_processor(Item_func_group_concat::change_context_processor1452,48206

sql/item_timefunc.h,25533
#define ITEM_TIMEFUNC_INCLUDED2,31
enum date_time_format_types 28,950
  TIME_ONLY=date_time_format_types::TIME_ONLY30,982
  TIME_ONLY= 0, TIME_MICROSECOND,date_time_format_types::TIME_MICROSECOND30,982
  TIME_ONLY= 0, TIME_MICROSECOND, DATE_ONLY,date_time_format_types::DATE_ONLY30,982
  TIME_ONLY= 0, TIME_MICROSECOND, DATE_ONLY, DATE_TIME,date_time_format_types::DATE_TIME30,982
  TIME_ONLY= 0, TIME_MICROSECOND, DATE_ONLY, DATE_TIME, DATE_TIME_MICROSECONDdate_time_format_types::DATE_TIME_MICROSECOND30,982
class Item_func_period_add 36,1174
  Item_func_period_add(Item_func_period_add::Item_func_period_add39,1233
  const char *func_name(Item_func_period_add::func_name41,1318
  void fix_length_and_dec(Item_func_period_add::fix_length_and_dec42,1375
class Item_func_period_diff 49,1461
  Item_func_period_diff(Item_func_period_diff::Item_func_period_diff52,1521
  const char *func_name(Item_func_period_diff::func_name54,1607
  void fix_length_and_dec(Item_func_period_diff::fix_length_and_dec55,1665
class Item_func_to_days 63,1766
  Item_func_to_days(Item_func_to_days::Item_func_to_days66,1822
  const char *func_name(Item_func_to_days::func_name68,1894
  void fix_length_and_dec(Item_func_to_days::fix_length_and_dec69,1948
  bool check_partition_func_processor(Item_func_to_days::check_partition_func_processor77,2183
  bool check_valid_arguments_processor(Item_func_to_days::check_valid_arguments_processor78,2253
class Item_func_to_seconds 85,2350
  Item_func_to_seconds(Item_func_to_seconds::Item_func_to_seconds88,2409
  const char *func_name(Item_func_to_seconds::func_name90,2484
  void fix_length_and_dec(Item_func_to_seconds::fix_length_and_dec91,2541
  bool check_partition_func_processor(Item_func_to_seconds::check_partition_func_processor99,2776
  bool intro_version(Item_func_to_seconds::intro_version101,2849
  bool check_valid_arguments_processor(Item_func_to_seconds::check_valid_arguments_processor111,3144
class Item_func_dayofmonth 118,3241
  Item_func_dayofmonth(Item_func_dayofmonth::Item_func_dayofmonth121,3300
  const char *func_name(Item_func_dayofmonth::func_name123,3375
  void fix_length_and_dec(Item_func_dayofmonth::fix_length_and_dec124,3432
  bool check_partition_func_processor(Item_func_dayofmonth::check_partition_func_processor130,3549
  bool check_valid_arguments_processor(Item_func_dayofmonth::check_valid_arguments_processor131,3619
class Item_func_month 138,3716
  Item_func_month(Item_func_month::Item_func_month141,3766
  double val_real(Item_func_month::val_real143,3858
  String *val_str(Item_func_month::val_str145,3953
  const char *func_name(Item_func_month::func_name153,4112
  enum Item_result result_type Item_func_month::result_type154,4164
  void fix_length_and_dec(Item_func_month::fix_length_and_dec155,4227
  bool check_partition_func_processor(Item_func_month::check_partition_func_processor161,4325
  bool check_valid_arguments_processor(Item_func_month::check_valid_arguments_processor162,4395
class Item_func_monthname 169,4492
  MY_LOCALE *locale;Item_func_monthname::locale171,4542
  Item_func_monthname(Item_func_monthname::Item_func_monthname173,4571
  const char *func_name(Item_func_monthname::func_name174,4623
  bool check_partition_func_processor(Item_func_monthname::check_partition_func_processor177,4740
  bool check_valid_arguments_processor(Item_func_monthname::check_valid_arguments_processor178,4809
class Item_func_dayofyear 185,4906
  Item_func_dayofyear(Item_func_dayofyear::Item_func_dayofyear188,4964
  const char *func_name(Item_func_dayofyear::func_name190,5038
  void fix_length_and_dec(Item_func_dayofyear::fix_length_and_dec191,5094
  bool check_partition_func_processor(Item_func_dayofyear::check_partition_func_processor197,5192
  bool check_valid_arguments_processor(Item_func_dayofyear::check_valid_arguments_processor198,5262
class Item_func_hour 205,5359
  Item_func_hour(Item_func_hour::Item_func_hour208,5412
  const char *func_name(Item_func_hour::func_name210,5481
  void fix_length_and_dec(Item_func_hour::fix_length_and_dec211,5532
  bool check_partition_func_processor(Item_func_hour::check_partition_func_processor217,5645
  bool check_valid_arguments_processor(Item_func_hour::check_valid_arguments_processor218,5715
class Item_func_minute 225,5812
  Item_func_minute(Item_func_minute::Item_func_minute228,5867
  const char *func_name(Item_func_minute::func_name230,5938
  void fix_length_and_dec(Item_func_minute::fix_length_and_dec231,5991
  bool check_partition_func_processor(Item_func_minute::check_partition_func_processor237,6104
  bool check_valid_arguments_processor(Item_func_minute::check_valid_arguments_processor238,6174
class Item_func_quarter 245,6271
  Item_func_quarter(Item_func_quarter::Item_func_quarter248,6327
  const char *func_name(Item_func_quarter::func_name250,6399
  void fix_length_and_dec(Item_func_quarter::fix_length_and_dec251,6453
  bool check_partition_func_processor(Item_func_quarter::check_partition_func_processor257,6570
  bool check_valid_arguments_processor(Item_func_quarter::check_valid_arguments_processor258,6640
class Item_func_second 265,6737
  Item_func_second(Item_func_second::Item_func_second268,6792
  const char *func_name(Item_func_second::func_name270,6863
  void fix_length_and_dec(Item_func_second::fix_length_and_dec271,6916
  bool check_partition_func_processor(Item_func_second::check_partition_func_processor277,7031
  bool check_valid_arguments_processor(Item_func_second::check_valid_arguments_processor278,7101
class Item_func_week 285,7198
  Item_func_week(Item_func_week::Item_func_week288,7251
  const char *func_name(Item_func_week::func_name290,7330
  void fix_length_and_dec(Item_func_week::fix_length_and_dec291,7381
class Item_func_yearweek 299,7499
  Item_func_yearweek(Item_func_yearweek::Item_func_yearweek302,7556
  const char *func_name(Item_func_yearweek::func_name304,7639
  void fix_length_and_dec(Item_func_yearweek::fix_length_and_dec305,7694
  bool check_partition_func_processor(Item_func_yearweek::check_partition_func_processor311,7808
  bool check_valid_arguments_processor(Item_func_yearweek::check_valid_arguments_processor312,7878
class Item_func_year 319,7975
  Item_func_year(Item_func_year::Item_func_year322,8028
  const char *func_name(Item_func_year::func_name324,8097
  void fix_length_and_dec(Item_func_year::fix_length_and_dec327,8266
  bool check_partition_func_processor(Item_func_year::check_partition_func_processor333,8380
  bool check_valid_arguments_processor(Item_func_year::check_valid_arguments_processor334,8450
class Item_func_weekday 341,8547
  bool odbc_type;Item_func_weekday::odbc_type343,8591
  Item_func_weekday(Item_func_weekday::Item_func_weekday345,8617
  double val_real(Item_func_weekday::val_real348,8750
  String *val_str(Item_func_weekday::val_str349,8826
  const char *func_name(Item_func_weekday::func_name355,8969
  enum Item_result result_type Item_func_weekday::result_type359,9060
  void fix_length_and_dec(Item_func_weekday::fix_length_and_dec360,9123
  bool check_partition_func_processor(Item_func_weekday::check_partition_func_processor366,9219
  bool check_valid_arguments_processor(Item_func_weekday::check_valid_arguments_processor367,9289
class Item_func_dayname 373,9385
  MY_LOCALE *locale;Item_func_dayname::locale375,9437
  Item_func_dayname(Item_func_dayname::Item_func_dayname377,9467
  const char *func_name(Item_func_dayname::func_name378,9523
  enum Item_result result_type Item_func_dayname::result_type380,9609
  bool check_partition_func_processor(Item_func_dayname::check_partition_func_processor382,9704
class Item_func_unix_timestamp 386,9778
  String value;Item_func_unix_timestamp::value388,9833
  Item_func_unix_timestamp(Item_func_unix_timestamp::Item_func_unix_timestamp390,9857
  Item_func_unix_timestamp(Item_func_unix_timestamp::Item_func_unix_timestamp391,9906
  const char *func_name(Item_func_unix_timestamp::func_name393,9985
  bool check_partition_func_processor(Item_func_unix_timestamp::check_partition_func_processor396,10164
  bool check_valid_arguments_processor(Item_func_unix_timestamp::check_valid_arguments_processor402,10407
  void fix_length_and_dec(Item_func_unix_timestamp::fix_length_and_dec406,10504
class Item_func_time_to_sec 414,10605
  Item_func_time_to_sec(Item_func_time_to_sec::Item_func_time_to_sec417,10665
  const char *func_name(Item_func_time_to_sec::func_name419,10747
  void fix_length_and_dec(Item_func_time_to_sec::fix_length_and_dec420,10805
  bool check_partition_func_processor(Item_func_time_to_sec::check_partition_func_processor426,10923
  bool check_valid_arguments_processor(Item_func_time_to_sec::check_valid_arguments_processor427,10993
class Item_date 438,11175
  Item_date(Item_date::Item_date441,11219
  Item_date(Item_date::Item_date442,11249
  enum Item_result result_type Item_date::result_type443,11287
  enum_field_types field_type(Item_date::field_type444,11353
  CHARSET_INFO *charset_for_protocol(Item_date::charset_for_protocol445,11419
  double val_real(Item_date::val_real448,11550
  const char *func_name(Item_date::func_name449,11606
  void fix_length_and_dec(Item_date::fix_length_and_dec450,11657
  Field *tmp_table_field(Item_date::tmp_table_field455,11764
  bool result_as_longlong(Item_date::result_as_longlong459,11865
  my_decimal *val_decimal(Item_date::val_decimal460,11910
  int save_in_field(Item_date::save_in_field465,12050
class Item_date_func 472,12156
  Item_date_func(Item_date_func::Item_date_func475,12209
  Item_date_func(Item_date_func::Item_date_func476,12248
  Item_date_func(Item_date_func::Item_date_func477,12295
  Item_date_func(Item_date_func::Item_date_func478,12352
  enum_field_types field_type(Item_date_func::field_type479,12420
  CHARSET_INFO *charset_for_protocol(Item_date_func::charset_for_protocol480,12490
  Field *tmp_table_field(Item_date_func::tmp_table_field481,12567
  bool result_as_longlong(Item_date_func::result_as_longlong485,12668
  double val_real(Item_date_func::val_real486,12713
  my_decimal *val_decimal(Item_date_func::val_decimal487,12764
  int save_in_field(Item_date_func::save_in_field492,12904
class Item_str_timefunc 499,13010
  Item_str_timefunc(Item_str_timefunc::Item_str_timefunc502,13066
  Item_str_timefunc(Item_str_timefunc::Item_str_timefunc503,13108
  Item_str_timefunc(Item_str_timefunc::Item_str_timefunc504,13158
  Item_str_timefunc(Item_str_timefunc::Item_str_timefunc505,13218
  enum_field_types field_type(Item_str_timefunc::field_type506,13292
  CHARSET_INFO *charset_for_protocol(Item_str_timefunc::charset_for_protocol507,13358
  void fix_length_and_dec(Item_str_timefunc::fix_length_and_dec508,13435
  Field *tmp_table_field(Item_str_timefunc::tmp_table_field513,13552
  double val_real(Item_str_timefunc::val_real517,13653
  my_decimal *val_decimal(Item_str_timefunc::val_decimal518,13709
  int save_in_field(Item_str_timefunc::save_in_field523,13849
  longlong val_int(Item_str_timefunc::val_int527,13950
  bool result_as_longlong(Item_str_timefunc::result_as_longlong528,14006
class Item_func_curtime 534,14136
  longlong value;Item_func_curtime::value536,14188
  char buff[Item_func_curtime::buff537,14206
  uint buff_length;Item_func_curtime::buff_length538,14227
  Item_func_curtime(Item_func_curtime::Item_func_curtime540,14255
  Item_func_curtime(Item_func_curtime::Item_func_curtime541,14301
  double val_real(Item_func_curtime::val_real542,14355
  longlong val_int(Item_func_curtime::val_int543,14427
  bool result_as_longlong(Item_func_curtime::result_as_longlong552,14840
class Item_func_curtime_local 556,14890
  Item_func_curtime_local(Item_func_curtime_local::Item_func_curtime_local559,14956
  Item_func_curtime_local(Item_func_curtime_local::Item_func_curtime_local560,15008
  const char *func_name(Item_func_curtime_local::func_name561,15068
class Item_func_curtime_utc 566,15183
  Item_func_curtime_utc(Item_func_curtime_utc::Item_func_curtime_utc569,15247
  Item_func_curtime_utc(Item_func_curtime_utc::Item_func_curtime_utc570,15297
  const char *func_name(Item_func_curtime_utc::func_name571,15355
class Item_func_curdate 578,15533
  longlong value;Item_func_curdate::value580,15577
  MYSQL_TIME ltime;Item_func_curdate::ltime581,15595
  Item_func_curdate(Item_func_curdate::Item_func_curdate583,15623
  longlong val_int(Item_func_curdate::val_int584,15661
class Item_func_curdate_local 592,15903
  Item_func_curdate_local(Item_func_curdate_local::Item_func_curdate_local595,15969
  const char *func_name(Item_func_curdate_local::func_name596,16021
class Item_func_curdate_utc 601,16128
  Item_func_curdate_utc(Item_func_curdate_utc::Item_func_curdate_utc604,16192
  const char *func_name(Item_func_curdate_utc::func_name605,16242
class Item_func_now 612,16421
  longlong value;Item_func_now::value615,16477
  char buff[Item_func_now::buff616,16495
  uint buff_length;Item_func_now::buff_length617,16562
  MYSQL_TIME ltime;Item_func_now::ltime618,16582
  Item_func_now(Item_func_now::Item_func_now620,16610
  Item_func_now(Item_func_now::Item_func_now621,16649
  enum Item_result result_type Item_func_now::result_type622,16696
  longlong val_int(Item_func_now::val_int623,16762
class Item_func_now_local 632,17054
  Item_func_now_local(Item_func_now_local::Item_func_now_local635,17112
  Item_func_now_local(Item_func_now_local::Item_func_now_local636,17156
  const char *func_name(Item_func_now_local::func_name637,17208
  virtual enum Functype functype(Item_func_now_local::functype639,17314
class Item_func_now_utc 643,17381
  Item_func_now_utc(Item_func_now_utc::Item_func_now_utc646,17437
  Item_func_now_utc(Item_func_now_utc::Item_func_now_utc647,17479
  const char *func_name(Item_func_now_utc::func_name648,17529
class Item_func_sysdate_local 657,17776
  Item_func_sysdate_local(Item_func_sysdate_local::Item_func_sysdate_local660,17838
  Item_func_sysdate_local(Item_func_sysdate_local::Item_func_sysdate_local661,17886
  bool const_item(Item_func_sysdate_local::const_item662,17942
  const char *func_name(Item_func_sysdate_local::func_name663,17982
  void update_used_tables(Item_func_sysdate_local::update_used_tables671,18292
class Item_func_from_days 679,18414
  Item_func_from_days(Item_func_from_days::Item_func_from_days682,18468
  const char *func_name(Item_func_from_days::func_name683,18516
  bool check_partition_func_processor(Item_func_from_days::check_partition_func_processor685,18623
  bool check_valid_arguments_processor(Item_func_from_days::check_valid_arguments_processor686,18693
class Item_func_date_format 693,18808
  int fixed_length;Item_func_date_format::fixed_length695,18860
  const bool is_time_format;Item_func_date_format::is_time_format696,18880
  String value;Item_func_date_format::value697,18909
  Item_func_date_format(Item_func_date_format::Item_func_date_format699,18933
  const char *func_name(Item_func_date_format::func_name702,19092
class Item_func_from_unixtime 710,19317
  THD *thd;Item_func_from_unixtime::thd712,19372
  Item_func_from_unixtime(Item_func_from_unixtime::Item_func_from_unixtime714,19393
  const char *func_name(Item_func_from_unixtime::func_name717,19504
class Item_func_convert_tz 737,20134
  bool from_tz_cached,Item_func_convert_tz::from_tz_cached745,20422
  bool from_tz_cached, to_tz_cached;Item_func_convert_tz::to_tz_cached745,20422
  Time_zone *from_tz,Item_func_convert_tz::from_tz746,20459
  Time_zone *from_tz, *to_tz;Item_func_convert_tz::to_tz746,20459
  Item_func_convert_tz(Item_func_convert_tz::Item_func_convert_tz748,20498
  const char *func_name(Item_func_convert_tz::func_name752,20670
class Item_func_sec_to_time 759,20830
  Item_func_sec_to_time(Item_func_sec_to_time::Item_func_sec_to_time762,20894
  double val_real(Item_func_sec_to_time::val_real763,20958
  void fix_length_and_dec(Item_func_sec_to_time::fix_length_and_dec770,21120
  const char *func_name(Item_func_sec_to_time::func_name775,21220
  bool result_as_longlong(Item_func_sec_to_time::result_as_longlong776,21278
class Item_date_add_interval 780,21328
  String value;Item_date_add_interval::value782,21382
  enum_field_types cached_field_type;Item_date_add_interval::cached_field_type783,21398
  String ascii_buf;Item_date_add_interval::ascii_buf784,21436
  const interval_type int_type;Item_date_add_interval::int_type786,21464
  const bool date_sub_interval;Item_date_add_interval::date_sub_interval787,21514
  Item_date_add_interval(Item_date_add_interval::Item_date_add_interval788,21564
  String *val_str(Item_date_add_interval::val_str791,21755
  const char *func_name(Item_date_add_interval::func_name795,21850
  enum_field_types field_type(Item_date_add_interval::field_type797,21943
  CHARSET_INFO *charset_for_protocol(Item_date_add_interval::charset_for_protocol798,22011
class Item_extract 817,22676
  bool date_value;Item_extract::date_value819,22719
  const interval_type int_type;Item_extract::int_type821,22747
  Item_extract(Item_extract::Item_extract822,22797
  enum Functype functype(Item_extract::functype825,22912
  const char *func_name(Item_extract::func_name826,22970
  bool check_partition_func_processor(Item_extract::check_partition_func_processor830,23168
  bool check_valid_arguments_processor(Item_extract::check_valid_arguments_processor831,23238
class Item_typecast 870,24324
  Item_typecast(Item_typecast::Item_typecast873,24376
  String *val_str(Item_typecast::val_str874,24422
  void fix_length_and_dec(Item_typecast::fix_length_and_dec883,24635
class Item_typecast_maybe_null 893,24855
  Item_typecast_maybe_null(Item_typecast_maybe_null::Item_typecast_maybe_null896,24918
class Item_char_typecast 900,24996
  int cast_length;Item_char_typecast::cast_length902,25045
  CHARSET_INFO *cast_cs,Item_char_typecast::cast_cs903,25064
  CHARSET_INFO *cast_cs, *from_cs;Item_char_typecast::from_cs903,25064
  bool charset_conversion;Item_char_typecast::charset_conversion904,25099
  String tmp_value;Item_char_typecast::tmp_value905,25126
  Item_char_typecast(Item_char_typecast::Item_char_typecast907,25154
  enum Functype functype(Item_char_typecast::functype909,25289
  const char *func_name(Item_char_typecast::func_name911,25405
  const char* cast_type(Item_char_typecast::cast_type912,25464
class Item_date_typecast 919,25643
  Item_date_typecast(Item_date_typecast::Item_date_typecast922,25711
  const char *func_name(Item_date_typecast::func_name923,25773
  const char *cast_type(Item_date_typecast::cast_type927,25953
  enum_field_types field_type(Item_date_typecast::field_type928,26004
  CHARSET_INFO *charset_for_protocol(Item_date_typecast::charset_for_protocol929,26070
  Field *tmp_table_field(Item_date_typecast::tmp_table_field930,26147
  void fix_length_and_dec(Item_date_typecast::fix_length_and_dec934,26248
  bool result_as_longlong(Item_date_typecast::result_as_longlong935,26317
  double val_real(Item_date_typecast::val_real937,26384
  my_decimal *val_decimal(Item_date_typecast::val_decimal938,26435
  int save_in_field(Item_date_typecast::save_in_field943,26575
class Item_time_typecast 950,26681
  Item_time_typecast(Item_time_typecast::Item_time_typecast953,26749
  const char *func_name(Item_time_typecast::func_name954,26811
  const char *cast_type(Item_time_typecast::cast_type957,26938
  enum_field_types field_type(Item_time_typecast::field_type958,26989
  CHARSET_INFO *charset_for_protocol(Item_time_typecast::charset_for_protocol959,27055
  Field *tmp_table_field(Item_time_typecast::tmp_table_field960,27132
  bool result_as_longlong(Item_time_typecast::result_as_longlong964,27233
  double val_real(Item_time_typecast::val_real966,27300
  my_decimal *val_decimal(Item_time_typecast::val_decimal967,27356
  int save_in_field(Item_time_typecast::save_in_field972,27496
  void fix_length_and_dec(Item_time_typecast::fix_length_and_dec976,27597
class Item_datetime_typecast 981,27697
  Item_datetime_typecast(Item_datetime_typecast::Item_datetime_typecast984,27769
  const char *func_name(Item_datetime_typecast::func_name985,27835
  const char *cast_type(Item_datetime_typecast::cast_type987,27930
  enum_field_types field_type(Item_datetime_typecast::field_type988,27985
  CHARSET_INFO *charset_for_protocol(Item_datetime_typecast::charset_for_protocol989,28055
  Field *tmp_table_field(Item_datetime_typecast::tmp_table_field990,28132
  void fix_length_and_dec(Item_datetime_typecast::fix_length_and_dec994,28233
  bool result_as_longlong(Item_datetime_typecast::result_as_longlong999,28359
  double val_real(Item_datetime_typecast::val_real1001,28426
  double val(Item_datetime_typecast::val1002,28482
  my_decimal *val_decimal(Item_datetime_typecast::val_decimal1003,28528
  int save_in_field(Item_datetime_typecast::save_in_field1008,28668
class Item_func_makedate 1014,28773
  Item_func_makedate(Item_func_makedate::Item_func_makedate1017,28831
  const char *func_name(Item_func_makedate::func_name1019,28925
  enum_field_types field_type(Item_func_makedate::field_type1020,28980
  CHARSET_INFO *charset_for_protocol(Item_func_makedate::charset_for_protocol1021,29046
  void fix_length_and_dec(Item_func_makedate::fix_length_and_dec1022,29123
class Item_func_add_time 1032,29275
  const bool is_date;Item_func_add_time::is_date1034,29324
  int sign;Item_func_add_time::sign1035,29346
  enum_field_types cached_field_type;Item_func_add_time::cached_field_type1036,29358
  Item_func_add_time(Item_func_add_time::Item_func_add_time1039,29405
  enum_field_types field_type(Item_func_add_time::field_type1042,29577
  CHARSET_INFO *charset_for_protocol(Item_func_add_time::charset_for_protocol1044,29674
  Field *tmp_table_field(Item_func_add_time::tmp_table_field1046,29752
  const char *func_name(Item_func_add_time::func_name1051,29916
  double val_real(Item_func_add_time::val_real1052,29971
  my_decimal *val_decimal(Item_func_add_time::val_decimal1053,30027
  int save_in_field(Item_func_add_time::save_in_field1062,30371
class Item_func_timediff 1074,30778
  Item_func_timediff(Item_func_timediff::Item_func_timediff1077,30839
  const char *func_name(Item_func_timediff::func_name1080,30942
  void fix_length_and_dec(Item_func_timediff::fix_length_and_dec1081,30997
class Item_func_maketime 1088,31101
  Item_func_maketime(Item_func_maketime::Item_func_maketime1091,31162
  const char *func_name(Item_func_maketime::func_name1097,31305
class Item_func_microsecond 1100,31364
  Item_func_microsecond(Item_func_microsecond::Item_func_microsecond1103,31424
  const char *func_name(Item_func_microsecond::func_name1105,31500
  void fix_length_and_dec(Item_func_microsecond::fix_length_and_dec1106,31558
  bool check_partition_func_processor(Item_func_microsecond::check_partition_func_processor1111,31630
  bool check_valid_arguments_processor(Item_func_microsecond::check_valid_arguments_processor1112,31700
class Item_func_timestamp_diff 1119,31797
  const interval_type int_type;Item_func_timestamp_diff::int_type1121,31852
  Item_func_timestamp_diff(Item_func_timestamp_diff::Item_func_timestamp_diff1123,31892
  const char *func_name(Item_func_timestamp_diff::func_name1125,32006
  void fix_length_and_dec(Item_func_timestamp_diff::fix_length_and_dec1127,32088
enum date_time_format1136,32226
  USA_FORMAT,date_time_format::USA_FORMAT1138,32250
  USA_FORMAT, JIS_FORMAT,date_time_format::JIS_FORMAT1138,32250
  USA_FORMAT, JIS_FORMAT, ISO_FORMAT,date_time_format::ISO_FORMAT1138,32250
  USA_FORMAT, JIS_FORMAT, ISO_FORMAT, EUR_FORMAT,date_time_format::EUR_FORMAT1138,32250
  USA_FORMAT, JIS_FORMAT, ISO_FORMAT, EUR_FORMAT, INTERNAL_FORMATdate_time_format::INTERNAL_FORMAT1138,32250
class Item_func_get_format 1141,32320
  const timestamp_type type;Item_func_get_format::type1144,32385
  Item_func_get_format(Item_func_get_format::Item_func_get_format1145,32432
  const char *func_name(Item_func_get_format::func_name1149,32576
  void fix_length_and_dec(Item_func_get_format::fix_length_and_dec1150,32633
class Item_func_str_to_date 1160,32823
  enum_field_types cached_field_type;Item_func_str_to_date::cached_field_type1162,32875
  date_time_format_types cached_format_type;Item_func_str_to_date::cached_format_type1163,32913
  timestamp_type cached_timestamp_type;Item_func_str_to_date::cached_timestamp_type1164,32958
  bool const_item;Item_func_str_to_date::const_item1165,32998
  ulonglong sql_mode;Item_func_str_to_date::sql_mode1166,33017
  Item_func_str_to_date(Item_func_str_to_date::Item_func_str_to_date1168,33047
  const char *func_name(Item_func_str_to_date::func_name1173,33223
  enum_field_types field_type(Item_func_str_to_date::field_type1174,33281
  Field *tmp_table_field(Item_func_str_to_date::tmp_table_field1176,33378
  bool result_as_longlong(Item_func_str_to_date::result_as_longlong1181,33501
class Item_func_last_day 1185,33551
  Item_func_last_day(Item_func_last_day::Item_func_last_day1188,33604
  const char *func_name(Item_func_last_day::func_name1189,33651
  void fix_length_and_dec(Item_func_last_day::fix_length_and_dec1191,33757

sql/item_xmlfunc.h,960
#define ITEM_XMLFUNC_INCLUDED2,30
class Item_xml_str_func:Item_xml_str_func29,948
  String tmp_value,Item_xml_str_func::tmp_value32,1007
  String tmp_value, pxml;Item_xml_str_func::pxml32,1007
  Item *nodeset_func;Item_xml_str_func::nodeset_func33,1033
  Item_xml_str_func(Item_xml_str_func::Item_xml_str_func35,1063
  Item_xml_str_func(Item_xml_str_func::Item_xml_str_func40,1157
class Item_func_xml_extractvalue:Item_func_xml_extractvalue50,1358
  Item_func_xml_extractvalue(Item_func_xml_extractvalue::Item_func_xml_extractvalue53,1427
  const char *func_name(Item_func_xml_extractvalue::func_name54,1500
class Item_func_xml_update:Item_func_xml_update59,1593
  String tmp_value2,Item_func_xml_update::tmp_value261,1648
  String tmp_value2, tmp_value3;Item_func_xml_update::tmp_value361,1648
  Item_func_xml_update(Item_func_xml_update::Item_func_xml_update63,1689
  const char *func_name(Item_func_xml_update::func_name64,1766

sql/keycaches.h,134
#define KEYCACHES_INCLUDED2,27
  typedef int (*process_key_cache_t)process_key_cache_t24,858
class NAMED_ILIST:NAMED_ILIST29,947

sql/key.h,159
#define KEY_INCLUDED17,767
typedef struct st_bitmap MY_BITMAP;24,891
typedef struct st_key KEY;25,927
typedef struct st_key_part_info KEY_PART_INFO;26,954

sql/lex.h,299
#define LEX_INCLUDED2,21
SYM_GROUP sym_group_common=24,873
SYM_GROUP sym_group_geom=25,911
SYM_GROUP sym_group_rtree=26,977
#define SYM_OR_NULL(30,1123
#define SYM_OR_NULL(32,1154
#define SYM(35,1187
static SYMBOL symbols[symbols47,1555
static SYMBOL sql_functions[sql_functions634,22778

sql/lex_symbol.h,479
#define _lex_symbol_h20,791
typedef struct st_symbol 24,836
  const char *name;name25,863
  uint	tok;26,883
  uint length;27,895
  struct st_sym_group *group;group28,910
} SYMBOL;29,940
typedef struct st_lex_symbol31,951
  SYMBOL *symbol;symbol33,982
  char   *str;str34,1000
  uint   length;35,1015
} LEX_SYMBOL;36,1032
typedef struct st_sym_group 38,1047
  const char *name;name39,1077
  const char *needed_define;needed_define40,1097
} SYM_GROUP;41,1126

sql/lock.h,77
#define LOCK_INCLUDED17,761
typedef struct st_mysql_lock MYSQL_LOCK;26,938

sql/log_event.h,36284
#define _log_event_h29,977
#define PREFIX_SQL_LOAD 55,1490
#define LONG_FIND_ROW_THRESHOLD 56,1526
#define ASSERT_OR_RETURN_ERROR(68,1859
#define ASSERT_OR_RETURN_ERROR(71,1957
#define LOG_READ_EOF 75,2031
#define LOG_READ_BOGUS 76,2058
#define LOG_READ_IO 77,2085
#define LOG_READ_MEM 78,2112
#define LOG_READ_TRUNC 79,2139
#define LOG_READ_TOO_LARGE 80,2166
#define LOG_EVENT_OFFSET 82,2197
#define BINLOG_VERSION 114,3640
#define ST_SERVER_VER_LEN 121,3858
#define DUMPFILE_FLAG	134,4189
#define OPT_ENCLOSED_FLAG	135,4216
#define REPLACE_FLAG	136,4246
#define IGNORE_FLAG	137,4272
#define FIELD_TERM_EMPTY	139,4298
#define ENCLOSED_EMPTY	140,4327
#define LINE_TERM_EMPTY	141,4355
#define LINE_START_EMPTY	142,4384
#define ESCAPED_EMPTY	143,4413
struct old_sql_ex150,4622
  char field_term;old_sql_ex::field_term152,4642
  char enclosed;old_sql_ex::enclosed153,4661
  char line_term;old_sql_ex::line_term154,4678
  char line_start;old_sql_ex::line_start155,4696
  char escaped;old_sql_ex::escaped156,4715
  char opt_flags;old_sql_ex::opt_flags157,4731
  char empty_flags;old_sql_ex::empty_flags158,4749
#define NUM_LOAD_DELIM_STRS 161,4773
struct sql_ex_info168,4985
  sql_ex_info(sql_ex_info::sql_ex_info170,5006
  const char* field_term;sql_ex_info::field_term171,5077
  const char* enclosed;sql_ex_info::enclosed172,5103
  const char* line_term;sql_ex_info::line_term173,5127
  const char* line_start;sql_ex_info::line_start174,5152
  const char* escaped;sql_ex_info::escaped175,5178
  int cached_new_format;sql_ex_info::cached_new_format176,5201
  uint8 field_term_len,sql_ex_info::field_term_len177,5226
  uint8 field_term_len,enclosed_len,sql_ex_info::enclosed_len177,5226
  uint8 field_term_len,enclosed_len,line_term_len,sql_ex_info::line_term_len177,5226
  uint8 field_term_len,enclosed_len,line_term_len,line_start_len,sql_ex_info::line_start_len177,5226
  uint8 field_term_len,enclosed_len,line_term_len,line_start_len, escaped_len;sql_ex_info::escaped_len177,5226
  char opt_flags;sql_ex_info::opt_flags178,5305
  char empty_flags;sql_ex_info::empty_flags179,5323
  void force_new_format(sql_ex_info::force_new_format182,5393
  int data_size(sql_ex_info::data_size183,5445
  bool new_format(sql_ex_info::new_format191,5709
#define LOG_EVENT_HEADER_LEN 222,6810
#define OLD_HEADER_LEN 223,6876
#define LOG_EVENT_MINIMAL_HEADER_LEN 231,7307
#define QUERY_HEADER_MINIMAL_LEN 235,7420
#define QUERY_HEADER_LEN 237,7522
#define STOP_HEADER_LEN 238,7582
#define LOAD_HEADER_LEN 239,7613
#define SLAVE_HEADER_LEN 240,7665
#define START_V3_HEADER_LEN 241,7696
#define ROTATE_HEADER_LEN 242,7756
#define INTVAR_HEADER_LEN 243,7840
#define CREATE_FILE_HEADER_LEN 244,7873
#define APPEND_BLOCK_HEADER_LEN 245,7906
#define EXEC_LOAD_HEADER_LEN 246,7940
#define DELETE_FILE_HEADER_LEN 247,7973
#define NEW_LOAD_HEADER_LEN 248,8006
#define RAND_HEADER_LEN 249,8053
#define USER_VAR_HEADER_LEN 250,8086
#define FORMAT_DESCRIPTION_HEADER_LEN 251,8119
#define XID_HEADER_LEN 252,8197
#define BEGIN_LOAD_QUERY_HEADER_LEN 253,8230
#define ROWS_HEADER_LEN 254,8290
#define TABLE_MAP_HEADER_LEN 255,8323
#define EXECUTE_LOAD_QUERY_EXTRA_HEADER_LEN 256,8356
#define EXECUTE_LOAD_QUERY_HEADER_LEN 257,8416
#define INCIDENT_HEADER_LEN 258,8512
#define HEARTBEAT_HEADER_LEN 259,8545
#define MAX_SIZE_LOG_EVENT_STATUS 265,8767
#define MAX_LOG_EVENT_HEADER 276,9682
#define MAX_MAX_ALLOWED_PACKET 288,10214
#define EVENT_TYPE_OFFSET 295,10345
#define SERVER_ID_OFFSET 296,10376
#define EVENT_LEN_OFFSET 297,10407
#define LOG_POS_OFFSET 298,10438
#define FLAGS_OFFSET 299,10470
#define ST_BINLOG_VER_OFFSET 303,10550
#define ST_SERVER_VER_OFFSET 304,10582
#define ST_CREATED_OFFSET 305,10614
#define ST_COMMON_HEADER_LEN_OFFSET 306,10687
#define SL_MASTER_PORT_OFFSET 310,10809
#define SL_MASTER_POS_OFFSET 311,10843
#define SL_MASTER_HOST_OFFSET 312,10877
#define Q_THREAD_ID_OFFSET	316,10944
#define Q_EXEC_TIME_OFFSET	317,10973
#define Q_DB_LEN_OFFSET	318,11002
#define Q_ERR_CODE_OFFSET	319,11029
#define Q_STATUS_VARS_LEN_OFFSET 320,11057
#define Q_DATA_OFFSET	321,11093
#define Q_FLAGS2_CODE 323,11204
#define Q_SQL_MODE_CODE 324,11238
#define Q_CATALOG_CODE 330,11440
#define Q_AUTO_INCREMENT	331,11474
#define Q_CHARSET_CODE 332,11501
#define Q_TIME_ZONE_CODE 333,11535
#define Q_CATALOG_NZ_CODE 341,11936
#define Q_LC_TIME_NAMES_CODE 343,11971
#define Q_CHARSET_DATABASE_CODE 345,12006
#define Q_TABLE_MAP_FOR_UPDATE_CODE 347,12041
#define Q_MASTER_DATA_WRITTEN_CODE 349,12080
#define Q_INVOKER 351,12119
#define I_TYPE_OFFSET 356,12197
#define I_VAL_OFFSET 357,12228
#define RAND_SEED1_OFFSET 360,12282
#define RAND_SEED2_OFFSET 361,12310
#define UV_VAL_LEN_SIZE 364,12365
#define UV_VAL_IS_NULL 365,12398
#define UV_VAL_TYPE_SIZE 366,12431
#define UV_NAME_LEN_SIZE 367,12464
#define UV_CHARSET_NUMBER_SIZE 368,12497
#define L_THREAD_ID_OFFSET 371,12560
#define L_EXEC_TIME_OFFSET 372,12591
#define L_SKIP_LINES_OFFSET 373,12622
#define L_TBL_LEN_OFFSET 374,12653
#define L_DB_LEN_OFFSET 375,12685
#define L_NUM_FIELDS_OFFSET 376,12717
#define L_SQL_EX_OFFSET 377,12749
#define L_DATA_OFFSET 378,12781
#define R_POS_OFFSET 381,12858
#define R_IDENT_OFFSET 382,12887
#define CF_FILE_ID_OFFSET 387,12982
#define CF_DATA_OFFSET 388,13011
#define AB_FILE_ID_OFFSET 391,13088
#define AB_DATA_OFFSET 392,13117
#define EL_FILE_ID_OFFSET 395,13195
#define DF_FILE_ID_OFFSET 398,13250
#define TM_MAPID_OFFSET 401,13303
#define TM_FLAGS_OFFSET 402,13332
#define RW_MAPID_OFFSET 405,13380
#define RW_FLAGS_OFFSET 406,13409
#define ELQ_FILE_ID_OFFSET 409,13472
#define ELQ_FN_POS_START_OFFSET 410,13516
#define ELQ_FN_POS_END_OFFSET 411,13571
#define ELQ_DUP_HANDLING_OFFSET 412,13624
#define BINLOG_MAGIC 415,13731
#define LOG_EVENT_TIME_F 429,14288
#define LOG_EVENT_FORCED_ROTATE_F 430,14328
#define LOG_EVENT_BINLOG_IN_USE_F 455,15508
#define LOG_EVENT_THREAD_SPECIFIC_F 465,15847
#define LOG_EVENT_SUPPRESS_USE_F 480,16396
#define LOG_EVENT_ARTIFICIAL_F 497,16833
#define LOG_EVENT_RELAY_LOG_F 505,16999
#define OPTIONS_WRITTEN_TO_BIN_LOG 528,18067
#define EXPECTED_OPTIONS 533,18255
#undef EXPECTED_OPTIONS 539,18475
enum Log_event_type546,18630
  UNKNOWN_EVENT=Log_event_type::UNKNOWN_EVENT552,18803
  START_EVENT_V3=Log_event_type::START_EVENT_V3553,18823
  QUERY_EVENT=Log_event_type::QUERY_EVENT554,18844
  STOP_EVENT=Log_event_type::STOP_EVENT555,18862
  ROTATE_EVENT=Log_event_type::ROTATE_EVENT556,18879
  INTVAR_EVENT=Log_event_type::INTVAR_EVENT557,18898
  LOAD_EVENT=Log_event_type::LOAD_EVENT558,18917
  SLAVE_EVENT=Log_event_type::SLAVE_EVENT559,18934
  CREATE_FILE_EVENT=Log_event_type::CREATE_FILE_EVENT560,18952
  APPEND_BLOCK_EVENT=Log_event_type::APPEND_BLOCK_EVENT561,18976
  EXEC_LOAD_EVENT=Log_event_type::EXEC_LOAD_EVENT562,19001
  DELETE_FILE_EVENT=Log_event_type::DELETE_FILE_EVENT563,19024
  NEW_LOAD_EVENT=Log_event_type::NEW_LOAD_EVENT569,19228
  RAND_EVENT=Log_event_type::RAND_EVENT570,19250
  USER_VAR_EVENT=Log_event_type::USER_VAR_EVENT571,19268
  FORMAT_DESCRIPTION_EVENT=Log_event_type::FORMAT_DESCRIPTION_EVENT572,19290
  XID_EVENT=Log_event_type::XID_EVENT573,19322
  BEGIN_LOAD_QUERY_EVENT=Log_event_type::BEGIN_LOAD_QUERY_EVENT574,19339
  EXECUTE_LOAD_QUERY_EVENT=Log_event_type::EXECUTE_LOAD_QUERY_EVENT575,19369
  TABLE_MAP_EVENT Log_event_type::TABLE_MAP_EVENT577,19402
  PRE_GA_WRITE_ROWS_EVENT Log_event_type::PRE_GA_WRITE_ROWS_EVENT583,19524
  PRE_GA_UPDATE_ROWS_EVENT Log_event_type::PRE_GA_UPDATE_ROWS_EVENT584,19556
  PRE_GA_DELETE_ROWS_EVENT Log_event_type::PRE_GA_DELETE_ROWS_EVENT585,19589
  WRITE_ROWS_EVENT Log_event_type::WRITE_ROWS_EVENT590,19691
  UPDATE_ROWS_EVENT Log_event_type::UPDATE_ROWS_EVENT591,19716
  DELETE_ROWS_EVENT Log_event_type::DELETE_ROWS_EVENT592,19742
  INCIDENT_EVENT=Log_event_type::INCIDENT_EVENT597,19837
  HEARTBEAT_LOG_EVENT=Log_event_type::HEARTBEAT_LOG_EVENT603,19976
  ENUM_END_EVENT Log_event_type::ENUM_END_EVENT610,20147
#define LOG_EVENT_TYPES 618,20357
enum Int_event_type620,20401
  INVALID_INT_EVENT Int_event_type::INVALID_INT_EVENT622,20423
  INVALID_INT_EVENT = 0, LAST_INSERT_ID_EVENT Int_event_type::LAST_INSERT_ID_EVENT622,20423
  INVALID_INT_EVENT = 0, LAST_INSERT_ID_EVENT = 1, INSERT_ID_EVENT Int_event_type::INSERT_ID_EVENT622,20423
enum enum_base64_output_mode 636,20652
  BASE64_OUTPUT_NEVER=enum_base64_output_mode::BASE64_OUTPUT_NEVER637,20683
  BASE64_OUTPUT_AUTO=enum_base64_output_mode::BASE64_OUTPUT_AUTO638,20709
  BASE64_OUTPUT_ALWAYS=enum_base64_output_mode::BASE64_OUTPUT_ALWAYS639,20734
  BASE64_OUTPUT_UNSPEC=enum_base64_output_mode::BASE64_OUTPUT_UNSPEC640,20761
  BASE64_OUTPUT_DECODE_ROWS=enum_base64_output_mode::BASE64_OUTPUT_DECODE_ROWS641,20788
  BASE64_OUTPUT_MODE_COUNTenum_base64_output_mode::BASE64_OUTPUT_MODE_COUNT643,20857
typedef struct st_print_event_info658,21348
  char db[st_print_event_info::db666,21608
  bool flags2_inited;st_print_event_info::flags2_inited667,21680
  uint32 flags2;st_print_event_info::flags2668,21702
  bool sql_mode_inited;st_print_event_info::sql_mode_inited669,21719
  ulong sql_mode;st_print_event_info::sql_mode670,21743
  ulong auto_increment_increment,st_print_event_info::auto_increment_increment671,21807
  ulong auto_increment_increment, auto_increment_offset;st_print_event_info::auto_increment_offset671,21807
  bool charset_inited;st_print_event_info::charset_inited672,21864
  char charset[st_print_event_info::charset673,21887
  char time_zone_str[st_print_event_info::time_zone_str674,21955
  uint lc_time_names_number;st_print_event_info::lc_time_names_number675,22004
  uint charset_database_number;st_print_event_info::charset_database_number676,22033
  uint thread_id;st_print_event_info::thread_id677,22065
  bool thread_id_printed;st_print_event_info::thread_id_printed678,22083
  ~st_print_event_info(st_print_event_info::~st_print_event_info682,22136
  bool init_ok(st_print_event_info::init_ok686,22239
  bool short_form;st_print_event_info::short_form691,22414
  enum_base64_output_mode base64_output_mode;st_print_event_info::base64_output_mode692,22433
  bool printed_fd_event;st_print_event_info::printed_fd_event699,22749
  my_off_t hexdump_from;st_print_event_info::hexdump_from700,22774
  uint8 common_header_len;st_print_event_info::common_header_len701,22799
  char delimiter[st_print_event_info::delimiter702,22826
  uint verbose;st_print_event_info::verbose704,22849
  table_mapping m_table_map;st_print_event_info::m_table_map705,22865
  table_mapping m_table_map_ignored;st_print_event_info::m_table_map_ignored706,22894
  IO_CACHE head_cache;st_print_event_info::head_cache713,23109
  IO_CACHE body_cache;st_print_event_info::body_cache714,23132
} PRINT_EVENT_INFO;715,23155
typedef struct event_coordinates727,23596
  char * file_name;event_coordinates::file_name729,23631
  my_off_t  pos;event_coordinates::pos730,23694
} LOG_POS_COORD;731,23756
class Log_event863,27282
  enum enum_skip_reason Log_event::enum_skip_reason873,27482
    EVENT_SKIP_NOT,Log_event::enum_skip_reason::EVENT_SKIP_NOT877,27548
    EVENT_SKIP_IGNORE,Log_event::enum_skip_reason::EVENT_SKIP_IGNORE884,27686
    EVENT_SKIP_COUNTLog_event::enum_skip_reason::EVENT_SKIP_COUNT889,27770
  enum enum_event_cache_type Log_event::enum_event_cache_type892,27797
    EVENT_INVALID_CACHE,Log_event::enum_event_cache_type::EVENT_INVALID_CACHE894,27831
    EVENT_STMT_CACHE,Log_event::enum_event_cache_type::EVENT_STMT_CACHE900,28077
    EVENT_TRANSACTIONAL_CACHE,Log_event::enum_event_cache_type::EVENT_TRANSACTIONAL_CACHE906,28277
    EVENT_NO_CACHE,Log_event::enum_event_cache_type::EVENT_NO_CACHE911,28419
    EVENT_CACHE_COUNTLog_event::enum_event_cache_type::EVENT_CACHE_COUNT915,28529
  typedef unsigned char Byte;Log_event::Byte923,28769
  my_off_t log_pos;Log_event::log_pos935,29347
  char *temp_buf;Log_event::temp_buf940,29534
  time_t when;Log_event::when949,29955
  ulong exec_time;Log_event::exec_time951,30037
  ulong data_written;Log_event::data_written953,30108
  uint32 server_id;Log_event::server_id959,30266
  uint16 flags;Log_event::flags966,30469
  uint16 cache_type;Log_event::cache_type972,30606
  ulong slave_exec_mode;Log_event::slave_exec_mode978,30760
  THD* thd;Log_event::thd981,30806
  virtual const char* get_db(Log_event::get_db1019,32409
  Log_event(Log_event::Log_event1024,32484
  static void *operator new(Log_event::operator new1038,33167
  static void operator delete(Log_event::operator delete1043,33279
  static void *operator new(Log_event::operator new1049,33404
  static void operator delete(Log_event::operator delete1050,33467
  virtual bool write(Log_event::write1054,33592
  virtual bool write_data_header(Log_event::write_data_header1060,33763
  virtual bool write_data_body(Log_event::write_data_body1062,33828
  inline time_t get_time(Log_event::get_time1064,33915
  void set_artificial_event(Log_event::set_artificial_event1078,34223
  void set_relay_log_event(Log_event::set_relay_log_event1079,34290
  bool is_artificial_event(Log_event::is_artificial_event1080,34355
  bool is_relay_log_event(Log_event::is_relay_log_event1081,34433
  inline bool use_trans_cache(Log_event::use_trans_cache1082,34509
  inline void set_direct_logging(Log_event::set_direct_logging1086,34621
  inline bool use_direct_logging(Log_event::use_direct_logging1090,34708
  virtual ~Log_event(Log_event::~Log_event1096,34902
  void register_temp_buf(Log_event::register_temp_buf1097,34945
  void free_temp_buf(Log_event::free_temp_buf1098,35001
  virtual int get_data_size(Log_event::get_data_size1110,35224
  int apply_event(Log_event::apply_event1137,35988
  int update_pos(Log_event::update_pos1151,36278
  enum_skip_reason shall_skip(Log_event::shall_skip1162,36473
  virtual int do_apply_event(Log_event::do_apply_event1203,37617
class Query_log_event:Query_log_event1622,51536
  LEX_STRING user;Query_log_event::user1624,51578
  LEX_STRING host;Query_log_event::host1625,51597
  Log_event::Byte* data_buf;Query_log_event::data_buf1627,51627
  const char* query;Query_log_event::query1629,51664
  const char* catalog;Query_log_event::catalog1630,51685
  const char* db;Query_log_event::db1631,51708
  uint32 q_len;Query_log_event::q_len1637,51926
  uint32 db_len;Query_log_event::db_len1638,51942
  uint16 error_code;Query_log_event::error_code1639,51959
  ulong thread_id;Query_log_event::thread_id1640,51980
  ulong slave_proxy_id;Query_log_event::slave_proxy_id1647,52240
  uint catalog_len;Query_log_event::catalog_len1654,52373
  uint16 status_vars_len;Query_log_event::status_vars_len1676,53560
  bool flags2_inited;Query_log_event::flags2_inited1687,54039
  bool sql_mode_inited;Query_log_event::sql_mode_inited1688,54061
  bool charset_inited;Query_log_event::charset_inited1689,54085
  uint32 flags2;Query_log_event::flags21691,54109
  ulong sql_mode;Query_log_event::sql_mode1693,54198
  ulong auto_increment_increment,Query_log_event::auto_increment_increment1694,54216
  ulong auto_increment_increment, auto_increment_offset;Query_log_event::auto_increment_offset1694,54216
  char charset[Query_log_event::charset1695,54273
  uint time_zone_len;Query_log_event::time_zone_len1696,54292
  const char *time_zone_str;Query_log_event::time_zone_str1697,54337
  uint lc_time_names_number;Query_log_event::lc_time_names_number1698,54366
  uint charset_database_number;Query_log_event::charset_database_number1699,54415
  ulonglong table_map_for_update;Query_log_event::table_map_for_update1704,54590
  uint32 master_data_written;Query_log_event::master_data_written1714,55111
  const char* get_db(Query_log_event::get_db1720,55318
  ~Query_log_event(Query_log_event::~Query_log_event1733,55794
  Log_event_type get_type_code(Query_log_event::get_type_code1738,55866
  virtual bool write_post_header_for_derived(Query_log_event::write_post_header_for_derived1741,55973
  bool is_valid(Query_log_event::is_valid1743,56059
  virtual ulong get_post_header_size_for_derived(Query_log_event::get_post_header_size_for_derived1749,56248
  bool is_trans_keyword(Query_log_event::is_trans_keyword1766,56935
class Slave_log_event:Slave_log_event1837,58666
  char* mem_pool;Slave_log_event::mem_pool1840,58719
  my_off_t master_pos;Slave_log_event::master_pos1843,58787
  char* master_host;Slave_log_event::master_host1844,58810
  char* master_log;Slave_log_event::master_log1845,58831
  int master_host_len;Slave_log_event::master_host_len1846,58851
  int master_log_len;Slave_log_event::master_log_len1847,58874
  uint16 master_port;Slave_log_event::master_port1848,58896
  bool is_valid(Slave_log_event::is_valid1862,59295
  Log_event_type get_type_code(Slave_log_event::get_type_code1863,59348
class Load_log_event:Load_log_event2076,65907
  ulong thread_id;Load_log_event::thread_id2088,66305
  ulong slave_proxy_id;Load_log_event::slave_proxy_id2089,66324
  uint32 table_name_len;Load_log_event::table_name_len2090,66348
  uint32 db_len;Load_log_event::db_len2096,66558
  uint32 fname_len;Load_log_event::fname_len2097,66575
  uint32 num_fields;Load_log_event::num_fields2098,66595
  const char* fields;Load_log_event::fields2099,66616
  const uchar* field_lens;Load_log_event::field_lens2100,66638
  uint32 field_block_len;Load_log_event::field_block_len2101,66665
  const char* table_name;Load_log_event::table_name2103,66692
  const char* db;Load_log_event::db2104,66718
  const char* fname;Load_log_event::fname2105,66736
  uint32 skip_lines;Load_log_event::skip_lines2106,66757
  sql_ex_info sql_ex;Load_log_event::sql_ex2107,66778
  bool local_fname;Load_log_event::local_fname2108,66800
  bool is_concurrent;Load_log_event::is_concurrent2119,67256
  void set_fname_outside_temp_buf(Load_log_event::set_fname_outside_temp_buf2122,67345
  int  check_fname_outside_temp_buf(Load_log_event::check_fname_outside_temp_buf2129,67547
  String field_lens_buf;Load_log_event::field_lens_buf2135,67638
  String fields_buf;Load_log_event::fields_buf2136,67663
  const char* get_db(Load_log_event::get_db2146,68045
  ~Load_log_event(Load_log_event::~Load_log_event2163,68757
  Log_event_type get_type_code(Load_log_event::get_type_code2165,68782
  bool is_valid(Load_log_event::is_valid2173,68993
  int get_data_size(Load_log_event::get_data_size2174,69045
  virtual int do_apply_event(Load_log_event::do_apply_event2183,69330
class Start_log_event_v3:Start_log_event_v32210,70176
  time_t created;Start_log_event_v3::created2235,71452
  uint16 binlog_version;Start_log_event_v3::binlog_version2236,71470
  char server_version[Start_log_event_v3::server_version2237,71495
  bool dont_set_created;Start_log_event_v3::dont_set_created2242,71675
  Start_log_event_v3(Start_log_event_v3::Start_log_event_v32250,71843
  ~Start_log_event_v3(Start_log_event_v3::~Start_log_event_v32256,72054
  Log_event_type get_type_code(Start_log_event_v3::get_type_code2257,72081
  bool is_valid(Start_log_event_v3::is_valid2261,72197
  int get_data_size(Start_log_event_v3::get_data_size2262,72235
  virtual enum_skip_reason do_shall_skip(Start_log_event_v3::do_shall_skip2270,72446
class Format_description_log_event:Format_description_log_event2295,73029
  uint8 common_header_len;Format_description_log_event::common_header_len2304,73371
  uint8 number_of_event_types;Format_description_log_event::number_of_event_types2305,73398
  uint8 *post_header_len;Format_description_log_event::post_header_len2307,73472
  uchar server_version_split[Format_description_log_event::server_version_split2308,73498
  const uint8 *event_type_permutation;Format_description_log_event::event_type_permutation2309,73531
  ~Format_description_log_event(Format_description_log_event::~Format_description_log_event2315,73829
  Log_event_type get_type_code(Format_description_log_event::get_type_code2319,73901
  bool header_is_valid(Format_description_log_event::header_is_valid2323,74027
  bool version_is_valid(Format_description_log_event::version_is_valid2330,74250
  bool is_valid(Format_description_log_event::is_valid2338,74485
  int get_data_size(Format_description_log_event::get_data_size2343,74570
class Intvar_log_event:Intvar_log_event2402,75999
  ulonglong val;Intvar_log_event::val2405,76050
  uchar type;Intvar_log_event::type2406,76067
  Intvar_log_event(Intvar_log_event::Intvar_log_event2409,76102
  ~Intvar_log_event(Intvar_log_event::~Intvar_log_event2421,76509
  Log_event_type get_type_code(Intvar_log_event::get_type_code2422,76534
  int get_data_size(Intvar_log_event::get_data_size2424,76626
  bool is_valid(Intvar_log_event::is_valid2428,76753
class Rand_log_event:Rand_log_event2478,77944
  ulonglong seed1;Rand_log_event::seed12481,77994
  ulonglong seed2;Rand_log_event::seed22482,78013
  Rand_log_event(Rand_log_event::Rand_log_event2485,78053
  ~Rand_log_event(Rand_log_event::~Rand_log_event2497,78468
  Log_event_type get_type_code(Rand_log_event::get_type_code2498,78491
  int get_data_size(Rand_log_event::get_data_size2499,78546
  bool is_valid(Rand_log_event::is_valid2503,78667
typedef ulonglong my_xid;2522,79176
class Xid_log_event:Xid_log_event2525,79251
   my_xid xid;Xid_log_event::xid2528,79300
  Xid_log_event(Xid_log_event::Xid_log_event2531,79336
  ~Xid_log_event(Xid_log_event::~Xid_log_event2541,79689
  Log_event_type get_type_code(Xid_log_event::get_type_code2542,79711
  int get_data_size(Xid_log_event::get_data_size2543,79765
  bool is_valid(Xid_log_event::is_valid2547,79868
class User_var_log_event:User_var_log_event2565,80336
    UNDEF_F=User_var_log_event::UNDEF_F2569,80398
    UNSIGNED_F=User_var_log_event::UNSIGNED_F2570,80414
  char *name;User_var_log_event::name2572,80437
  uint name_len;User_var_log_event::name_len2573,80451
  char *val;User_var_log_event::val2574,80468
  ulong val_len;User_var_log_event::val_len2575,80481
  Item_result type;User_var_log_event::type2576,80498
  uint charset_number;User_var_log_event::charset_number2577,80518
  bool is_null;User_var_log_event::is_null2578,80541
  uchar flags;User_var_log_event::flags2579,80557
  bool deferred;User_var_log_event::deferred2581,80592
  User_var_log_event(User_var_log_event::User_var_log_event2582,80609
  ~User_var_log_event(User_var_log_event::~User_var_log_event2596,81272
  Log_event_type get_type_code(User_var_log_event::get_type_code2597,81299
  bool is_deferred(User_var_log_event::is_deferred2605,81580
  void set_deferred(User_var_log_event::set_deferred2606,81622
  bool is_valid(User_var_log_event::is_valid2608,81671
class Stop_log_event:Stop_log_event2627,82142
  Stop_log_event(Stop_log_event::Stop_log_event2631,82211
  Stop_log_event(Stop_log_event::Stop_log_event2637,82324
  ~Stop_log_event(Stop_log_event::~Stop_log_event2641,82474
  Log_event_type get_type_code(Stop_log_event::get_type_code2642,82497
  bool is_valid(Stop_log_event::is_valid2643,82552
  virtual enum_skip_reason do_shall_skip(Stop_log_event::do_shall_skip2648,82705
class Rotate_log_event:Rotate_log_event2711,83932
    DUP_NAME=Rotate_log_event::DUP_NAME2715,83992
    RELAY_LOG=Rotate_log_event::RELAY_LOG2716,84058
  const char* new_log_ident;Rotate_log_event::new_log_ident2718,84110
  ulonglong pos;Rotate_log_event::pos2719,84139
  uint ident_len;Rotate_log_event::ident_len2720,84156
  uint flags;Rotate_log_event::flags2721,84174
  ~Rotate_log_event(Rotate_log_event::~Rotate_log_event2735,84615
  Log_event_type get_type_code(Rotate_log_event::get_type_code2740,84709
  int get_data_size(Rotate_log_event::get_data_size2741,84766
  bool is_valid(Rotate_log_event::is_valid2742,84830
class Create_file_log_event:Create_file_log_event2763,85299
  bool fake_base;Create_file_log_event::fake_base2771,85518
  uchar* block;Create_file_log_event::block2773,85544
  const char *event_buf;Create_file_log_event::event_buf2774,85560
  uint block_len;Create_file_log_event::block_len2775,85585
  uint file_id;Create_file_log_event::file_id2776,85603
  bool inited_from_old;Create_file_log_event::inited_from_old2777,85619
  ~Create_file_log_event(Create_file_log_event::~Create_file_log_event2798,86353
  Log_event_type get_type_code(Create_file_log_event::get_type_code2803,86421
  int get_data_size(Create_file_log_event::get_data_size2807,86538
  bool is_valid(Create_file_log_event::is_valid2813,86690
class Append_block_log_event:Append_block_log_event2837,87233
  uchar* block;Append_block_log_event::block2840,87290
  uint block_len;Append_block_log_event::block_len2841,87306
  uint file_id;Append_block_log_event::file_id2842,87324
  const char* db;Append_block_log_event::db2854,87910
  ~Append_block_log_event(Append_block_log_event::~Append_block_log_event2870,88441
  Log_event_type get_type_code(Append_block_log_event::get_type_code2871,88472
  int get_data_size(Append_block_log_event::get_data_size2872,88535
  bool is_valid(Append_block_log_event::is_valid2873,88606
  const char* get_db(Append_block_log_event::get_db2876,88703
class Delete_file_log_event:Delete_file_log_event2892,88983
  uint file_id;Delete_file_log_event::file_id2895,89039
  const char* db;Delete_file_log_event::db2896,89055
  ~Delete_file_log_event(Delete_file_log_event::~Delete_file_log_event2911,89610
  Log_event_type get_type_code(Delete_file_log_event::get_type_code2912,89640
  int get_data_size(Delete_file_log_event::get_data_size2913,89702
  bool is_valid(Delete_file_log_event::is_valid2914,89759
  const char* get_db(Delete_file_log_event::get_db2917,89858
class Execute_load_log_event:Execute_load_log_event2933,90139
  uint file_id;Execute_load_log_event::file_id2936,90196
  const char* db;Execute_load_log_event::db2937,90212
  ~Execute_load_log_event(Execute_load_log_event::~Execute_load_log_event2951,90701
  Log_event_type get_type_code(Execute_load_log_event::get_type_code2952,90732
  int get_data_size(Execute_load_log_event::get_data_size2953,90792
  bool is_valid(Execute_load_log_event::is_valid2954,90848
  const char* get_db(Execute_load_log_event::get_db2957,90947
class Begin_load_query_log_event:Begin_load_query_log_event2976,91410
  ~Begin_load_query_log_event(Begin_load_query_log_event::~Begin_load_query_log_event2991,91995
  Log_event_type get_type_code(Begin_load_query_log_event::get_type_code2992,92030
enum enum_load_dup_handling 3003,92310
enum enum_load_dup_handling { LOAD_DUP_ERROR=enum_load_dup_handling::LOAD_DUP_ERROR3003,92310
enum enum_load_dup_handling { LOAD_DUP_ERROR= 0, LOAD_DUP_IGNORE,enum_load_dup_handling::LOAD_DUP_IGNORE3003,92310
                              LOAD_DUP_REPLACE enum_load_dup_handling::LOAD_DUP_REPLACE3004,92376
class Execute_load_query_log_event:Execute_load_query_log_event3015,92733
  uint file_id;Execute_load_query_log_event::file_id3018,92802
  uint fn_pos_start;Execute_load_query_log_event::fn_pos_start3019,92853
  uint fn_pos_end;Execute_load_query_log_event::fn_pos_end3021,92963
  enum_load_dup_handling dup_handling;Execute_load_query_log_event::dup_handling3028,93261
  ~Execute_load_query_log_event(Execute_load_query_log_event::~Execute_load_query_log_event3049,94223
  Log_event_type get_type_code(Execute_load_query_log_event::get_type_code3051,94261
  bool is_valid(Execute_load_query_log_event::is_valid3052,94331
class Unknown_log_event:Unknown_log_event3072,94783
  Unknown_log_event(Unknown_log_event::Unknown_log_event3080,95041
  ~Unknown_log_event(Unknown_log_event::~Unknown_log_event3084,95197
  Log_event_type get_type_code(Unknown_log_event::get_type_code3086,95285
  bool is_valid(Unknown_log_event::is_valid3087,95343
class Table_map_log_event 3406,103977
    TYPE_CODE Table_map_log_event::TYPE_CODE3412,104061
    TYPE_CODE = TABLE_MAP_EVENTTable_map_log_event::TABLE_MAP_EVENT3412,104061
  enum enum_errorTable_map_log_event::enum_error3418,104164
    ERR_OPEN_FAILURE Table_map_log_event::enum_error::ERR_OPEN_FAILURE3420,104186
    ERR_OK Table_map_log_event::enum_error::ERR_OK3421,104257
    ERR_TABLE_LIMIT_EXCEEDED Table_map_log_event::enum_error::ERR_TABLE_LIMIT_EXCEEDED3422,104322
    ERR_OUT_OF_MEM Table_map_log_event::enum_error::ERR_OUT_OF_MEM3423,104393
    ERR_BAD_TABLE_DEF Table_map_log_event::enum_error::ERR_BAD_TABLE_DEF3424,104463
    ERR_RBR_TO_SBR Table_map_log_event::enum_error::ERR_RBR_TO_SBR3425,104534
  enum enum_flagTable_map_log_event::enum_flag3428,104611
    ENUM_FLAG_COUNTTable_map_log_event::enum_flag::ENUM_FLAG_COUNT3436,104868
  typedef uint16 flag_set;Table_map_log_event::flag_set3439,104894
    TM_NO_FLAGS Table_map_log_event::TM_NO_FLAGS3444,104987
    TM_NO_FLAGS = 0U,Table_map_log_event::U3444,104987
    TM_BIT_LEN_EXACT_F Table_map_log_event::TM_BIT_LEN_EXACT_F3445,105009
    TM_BIT_LEN_EXACT_F = (1U Table_map_log_event::U3445,105009
  flag_set get_flags(Table_map_log_event::get_flags3448,105050
  table_def *create_table_def(Table_map_log_event::create_table_def3461,105439
  ulong get_table_id(Table_map_log_event::get_table_id3467,105621
  const char *get_table_name(Table_map_log_event::get_table_name3468,105680
  const char *get_db_name(Table_map_log_event::get_db_name3469,105738
  virtual Log_event_type get_type_code(Table_map_log_event::get_type_code3471,105796
  virtual bool is_valid(Table_map_log_event::is_valid3472,105865
  virtual int get_data_size(Table_map_log_event::get_data_size3474,105949
  virtual const char *get_db(Table_map_log_event::get_db3479,106166
  TABLE         *m_table;Table_map_log_event::m_table3499,106695
  char const    *m_dbnam;Table_map_log_event::m_dbnam3501,106728
  size_t         m_dblen;Table_map_log_event::m_dblen3502,106754
  char const    *m_tblnam;Table_map_log_event::m_tblnam3503,106780
  size_t         m_tbllen;Table_map_log_event::m_tbllen3504,106807
  ulong          m_colcnt;Table_map_log_event::m_colcnt3505,106834
  uchar         *m_coltype;Table_map_log_event::m_coltype3506,106861
  uchar         *m_memory;Table_map_log_event::m_memory3508,106890
  ulong          m_table_id;Table_map_log_event::m_table_id3509,106917
  flag_set       m_flags;Table_map_log_event::m_flags3510,106946
  size_t         m_data_size;Table_map_log_event::m_data_size3512,106973
  uchar          *m_field_metadata;Table_map_log_event::m_field_metadata3514,107004
  ulong          m_field_metadata_size;Table_map_log_event::m_field_metadata_size3518,107161
  uchar         *m_null_bits;Table_map_log_event::m_null_bits3519,107204
  uchar         *m_meta_memory;Table_map_log_event::m_meta_memory3520,107234
class Rows_log_event 3539,107625
  enum enum_errorRows_log_event::enum_error3545,107740
    ERR_OPEN_FAILURE Rows_log_event::enum_error::ERR_OPEN_FAILURE3547,107762
    ERR_OK Rows_log_event::enum_error::ERR_OK3548,107833
    ERR_TABLE_LIMIT_EXCEEDED Rows_log_event::enum_error::ERR_TABLE_LIMIT_EXCEEDED3549,107898
    ERR_OUT_OF_MEM Rows_log_event::enum_error::ERR_OUT_OF_MEM3550,107969
    ERR_BAD_TABLE_DEF Rows_log_event::enum_error::ERR_BAD_TABLE_DEF3551,108039
    ERR_RBR_TO_SBR Rows_log_event::enum_error::ERR_RBR_TO_SBR3552,108110
  enum enum_flagRows_log_event::enum_flag3562,108470
    STMT_END_F Rows_log_event::enum_flag::STMT_END_F3565,108527
    STMT_END_F = (1U Rows_log_event::enum_flag::U3565,108527
    NO_FOREIGN_KEY_CHECKS_F Rows_log_event::enum_flag::NO_FOREIGN_KEY_CHECKS_F3568,108629
    NO_FOREIGN_KEY_CHECKS_F = (1U Rows_log_event::enum_flag::U3568,108629
    RELAXED_UNIQUE_CHECKS_F Rows_log_event::enum_flag::RELAXED_UNIQUE_CHECKS_F3571,108744
    RELAXED_UNIQUE_CHECKS_F = (1U Rows_log_event::enum_flag::U3571,108744
    COMPLETE_ROWS_F Rows_log_event::enum_flag::COMPLETE_ROWS_F3577,108916
    COMPLETE_ROWS_F = (1U Rows_log_event::enum_flag::U3577,108916
  typedef uint16 flag_set;Rows_log_event::flag_set3580,108954
      RLE_NO_FLAGS Rows_log_event::RLE_NO_FLAGS3585,109047
      RLE_NO_FLAGS = 0URows_log_event::U3585,109047
  void set_flags(Rows_log_event::set_flags3590,109107
  void clear_flags(Rows_log_event::clear_flags3591,109170
  flag_set get_flags(Rows_log_event::get_flags3592,109236
  int add_row_data(Rows_log_event::add_row_data3610,109960
  MY_BITMAP const *get_cols(Rows_log_event::get_cols3619,110156
  size_t get_width(Rows_log_event::get_width3620,110212
  ulong get_table_id(Rows_log_event::get_table_id3621,110268
  virtual const char *get_db(Rows_log_event::get_db3626,110446
  virtual bool is_valid(Rows_log_event::is_valid3634,110740
  uint     m_row_count;Rows_log_event::m_row_count3639,110821
  TABLE *m_table;Rows_log_event::m_table3663,111521
  ulong       m_table_id;Rows_log_event::m_table_id3665,111582
  MY_BITMAP   m_cols;Rows_log_event::m_cols3666,111623
  ulong       m_width;Rows_log_event::m_width3667,111686
  MY_BITMAP   m_cols_ai;Rows_log_event::m_cols_ai3675,112058
  ulong       m_master_reclength;Rows_log_event::m_master_reclength3677,112084
  uchar    *m_rows_buf;Rows_log_event::m_rows_buf3683,112305
  uchar    *m_rows_cur;Rows_log_event::m_rows_cur3684,112362
  uchar    *m_rows_end;Rows_log_event::m_rows_end3685,112423
  flag_set m_flags;Rows_log_event::m_flags3687,112496
  const uchar *m_curr_row;Rows_log_event::m_curr_row3692,112632
  const uchar *m_curr_row_end;Rows_log_event::m_curr_row_end3693,112702
  uchar    *m_key;Rows_log_event::m_key3694,112776
  int unpack_current_row(Rows_log_event::unpack_current_row3700,113004
class Write_rows_log_event 3785,115833
    TYPE_CODE Write_rows_log_event::TYPE_CODE3791,115976
    TYPE_CODE = WRITE_ROWS_EVENTWrite_rows_log_event::WRITE_ROWS_EVENT3791,115976
  static bool binlog_row_logging_function(Write_rows_log_event::binlog_row_logging_function3803,116352
  virtual Log_event_type get_type_code(Write_rows_log_event::get_type_code3817,116947
class Update_rows_log_event 3843,117774
    TYPE_CODE Update_rows_log_event::TYPE_CODE3849,117918
    TYPE_CODE = UPDATE_ROWS_EVENTUpdate_rows_log_event::UPDATE_ROWS_EVENT3849,117918
  static bool binlog_row_logging_function(Update_rows_log_event::binlog_row_logging_function3873,118518
  virtual bool is_valid(Update_rows_log_event::is_valid3885,119055
  virtual Log_event_type get_type_code(Update_rows_log_event::get_type_code3891,119166
class Delete_rows_log_event 3924,120181
    TYPE_CODE Delete_rows_log_event::TYPE_CODE3930,120325
    TYPE_CODE = DELETE_ROWS_EVENTDelete_rows_log_event::DELETE_ROWS_EVENT3930,120325
  static bool binlog_row_logging_function(Delete_rows_log_event::binlog_row_logging_function3942,120656
  virtual Log_event_type get_type_code(Delete_rows_log_event::get_type_code3956,121258
class Incident_log_event 4008,122661
  Incident_log_event(Incident_log_event::Incident_log_event4011,122735
  Incident_log_event(Incident_log_event::Incident_log_event4022,123114
  virtual Log_event_type get_type_code(Incident_log_event::get_type_code4053,123980
  virtual bool is_valid(Incident_log_event::is_valid4055,124049
  virtual int get_data_size(Incident_log_event::get_data_size4059,124159
  Incident m_incident;Incident_log_event::m_incident4066,124303
  LEX_STRING m_message;Incident_log_event::m_message4067,124326
static inline bool copy_event_cache_to_file_and_reinit(4070,124354
class Heartbeat_log_event:Heartbeat_log_event4094,125325
  Log_event_type get_type_code(Heartbeat_log_event::get_type_code4099,125512
  bool is_valid(Heartbeat_log_event::is_valid4100,125577
  const char * get_log_ident(Heartbeat_log_event::get_log_ident4105,125695
  uint get_ident_len(Heartbeat_log_event::get_ident_len4106,125748
  const char* log_ident;Heartbeat_log_event::log_ident4109,125805
  uint ident_len;Heartbeat_log_event::ident_len4110,125830

sql/log_event_old.h,4667
#define LOG_EVENT_OLD_H17,738
class Old_rows_log_event 54,1912
  enum enum_errorOld_rows_log_event::enum_error61,2095
    ERR_OPEN_FAILURE Old_rows_log_event::enum_error::ERR_OPEN_FAILURE63,2117
    ERR_OK Old_rows_log_event::enum_error::ERR_OK64,2188
    ERR_TABLE_LIMIT_EXCEEDED Old_rows_log_event::enum_error::ERR_TABLE_LIMIT_EXCEEDED65,2253
    ERR_OUT_OF_MEM Old_rows_log_event::enum_error::ERR_OUT_OF_MEM66,2324
    ERR_BAD_TABLE_DEF Old_rows_log_event::enum_error::ERR_BAD_TABLE_DEF67,2394
    ERR_RBR_TO_SBR Old_rows_log_event::enum_error::ERR_RBR_TO_SBR68,2465
  enum enum_flagOld_rows_log_event::enum_flag78,2825
    STMT_END_F Old_rows_log_event::enum_flag::STMT_END_F81,2882
    STMT_END_F = (1U Old_rows_log_event::enum_flag::U81,2882
    NO_FOREIGN_KEY_CHECKS_F Old_rows_log_event::enum_flag::NO_FOREIGN_KEY_CHECKS_F84,2984
    NO_FOREIGN_KEY_CHECKS_F = (1U Old_rows_log_event::enum_flag::U84,2984
    RELAXED_UNIQUE_CHECKS_F Old_rows_log_event::enum_flag::RELAXED_UNIQUE_CHECKS_F87,3099
    RELAXED_UNIQUE_CHECKS_F = (1U Old_rows_log_event::enum_flag::U87,3099
    COMPLETE_ROWS_F Old_rows_log_event::enum_flag::COMPLETE_ROWS_F93,3271
    COMPLETE_ROWS_F = (1U Old_rows_log_event::enum_flag::U93,3271
  typedef uint16 flag_set;Old_rows_log_event::flag_set96,3309
      RLE_NO_FLAGS Old_rows_log_event::RLE_NO_FLAGS101,3402
      RLE_NO_FLAGS = 0UOld_rows_log_event::U101,3402
  void set_flags(Old_rows_log_event::set_flags106,3466
  void clear_flags(Old_rows_log_event::clear_flags107,3529
  flag_set get_flags(Old_rows_log_event::get_flags108,3595
  int add_row_data(Old_rows_log_event::add_row_data120,3971
  MY_BITMAP const *get_cols(Old_rows_log_event::get_cols129,4167
  size_t get_width(Old_rows_log_event::get_width130,4223
  ulong get_table_id(Old_rows_log_event::get_table_id131,4279
  virtual const char *get_db(Old_rows_log_event::get_db136,4458
  virtual bool is_valid(Old_rows_log_event::is_valid144,4760
  uint     m_row_count;Old_rows_log_event::m_row_count149,4841
  TABLE *m_table;Old_rows_log_event::m_table173,5604
  ulong       m_table_id;Old_rows_log_event::m_table_id175,5665
  MY_BITMAP   m_cols;Old_rows_log_event::m_cols176,5706
  ulong       m_width;Old_rows_log_event::m_width177,5769
  ulong       m_master_reclength;Old_rows_log_event::m_master_reclength179,5840
  uchar    *m_rows_buf;Old_rows_log_event::m_rows_buf185,6061
  uchar    *m_rows_cur;Old_rows_log_event::m_rows_cur186,6118
  uchar    *m_rows_end;Old_rows_log_event::m_rows_end187,6179
  flag_set m_flags;Old_rows_log_event::m_flags189,6252
  const uchar *m_curr_row;Old_rows_log_event::m_curr_row194,6389
  const uchar *m_curr_row_end;Old_rows_log_event::m_curr_row_end195,6459
  uchar    *m_key;Old_rows_log_event::m_key196,6533
  int unpack_current_row(Old_rows_log_event::unpack_current_row202,6761
class Write_rows_log_event_old 355,11925
  static bool binlog_row_logging_function(Write_rows_log_event_old::binlog_row_logging_function368,12431
    TYPE_CODE Write_rows_log_event_old::TYPE_CODE397,13561
    TYPE_CODE = PRE_GA_WRITE_ROWS_EVENTWrite_rows_log_event_old::PRE_GA_WRITE_ROWS_EVENT397,13561
  virtual Log_event_type get_type_code(Write_rows_log_event_old::get_type_code401,13616
  virtual int do_apply_event(Write_rows_log_event_old::do_apply_event405,13796
class Update_rows_log_event_old 429,14673
  static bool binlog_row_logging_function(Update_rows_log_event_old::binlog_row_logging_function445,15209
  uchar *m_after_image,Update_rows_log_event_old::m_after_image469,16262
  uchar *m_after_image, *m_memory;Update_rows_log_event_old::m_memory469,16262
    TYPE_CODE Update_rows_log_event_old::TYPE_CODE475,16390
    TYPE_CODE = PRE_GA_UPDATE_ROWS_EVENTUpdate_rows_log_event_old::PRE_GA_UPDATE_ROWS_EVENT475,16390
  virtual Log_event_type get_type_code(Update_rows_log_event_old::get_type_code479,16446
  virtual int do_apply_event(Update_rows_log_event_old::do_apply_event483,16626
class Delete_rows_log_event_old 506,17562
  static bool binlog_row_logging_function(Delete_rows_log_event_old::binlog_row_logging_function519,18059
  uchar *m_after_image,Delete_rows_log_event_old::m_after_image544,19105
  uchar *m_after_image, *m_memory;Delete_rows_log_event_old::m_memory544,19105
    TYPE_CODE Delete_rows_log_event_old::TYPE_CODE550,19232
    TYPE_CODE = PRE_GA_DELETE_ROWS_EVENTDelete_rows_log_event_old::PRE_GA_DELETE_ROWS_EVENT550,19232
  virtual Log_event_type get_type_code(Delete_rows_log_event_old::get_type_code554,19288
  virtual int do_apply_event(Delete_rows_log_event_old::do_apply_event558,19468

sql/log.h,10295
#define LOG_H17,760
class TC_LOG38,1442
  TC_LOG(TC_LOG::TC_LOG42,1500
  virtual ~TC_LOG(TC_LOG::~TC_LOG43,1514
class TC_LOG_DUMMY:TC_LOG_DUMMY51,1708
  TC_LOG_DUMMY(TC_LOG_DUMMY::TC_LOG_DUMMY54,1785
  int open(TC_LOG_DUMMY::open55,1805
  void close(TC_LOG_DUMMY::close56,1859
  int log_xid(TC_LOG_DUMMY::log_xid57,1903
  int unlog(TC_LOG_DUMMY::unlog58,1961
class TC_LOG_MMAP:TC_LOG_MMAP62,2035
    PS_POOL,TC_LOG_MMAP::PS_POOL66,2155
    PS_ERROR,TC_LOG_MMAP::PS_ERROR67,2203
    PS_DIRTY TC_LOG_MMAP::PS_DIRTY68,2252
  } PAGE_STATE;TC_LOG_MMAP::PAGE_STATE69,2315
  typedef struct st_page TC_LOG_MMAP::st_page72,2343
    struct st_page *next;TC_LOG_MMAP::st_page::next73,2370
    my_xid *start,TC_LOG_MMAP::st_page::start74,2429
    my_xid *start, *end;TC_LOG_MMAP::st_page::end74,2429
    my_xid *ptr;TC_LOG_MMAP::st_page::ptr75,2480
    int size,TC_LOG_MMAP::st_page::size76,2539
    int size, free;TC_LOG_MMAP::st_page::free76,2539
    int waiters;TC_LOG_MMAP::st_page::waiters77,2621
    PAGE_STATE state;TC_LOG_MMAP::st_page::state78,2681
    mysql_mutex_t lock;TC_LOG_MMAP::st_page::lock79,2720
    mysql_cond_t  cond;TC_LOG_MMAP::st_page::cond80,2788
  } PAGE;TC_LOG_MMAP::PAGE81,2834
  char logname[TC_LOG_MMAP::logname83,2845
  File fd;TC_LOG_MMAP::fd84,2872
  my_off_t file_length;TC_LOG_MMAP::file_length85,2883
  uint npages,TC_LOG_MMAP::npages86,2907
  uint npages, inited;TC_LOG_MMAP::inited86,2907
  uchar *data;TC_LOG_MMAP::data87,2930
  struct st_page *pages,TC_LOG_MMAP::pages88,2945
  struct st_page *pages, *syncing,TC_LOG_MMAP::syncing88,2945
  struct st_page *pages, *syncing, *active,TC_LOG_MMAP::active88,2945
  struct st_page *pages, *syncing, *active, *pool,TC_LOG_MMAP::pool88,2945
  struct st_page *pages, *syncing, *active, *pool, *pool_last;TC_LOG_MMAP::pool_last88,2945
  mysql_mutex_t LOCK_active,TC_LOG_MMAP::LOCK_active95,3208
  mysql_mutex_t LOCK_active, LOCK_pool,TC_LOG_MMAP::LOCK_pool95,3208
  mysql_mutex_t LOCK_active, LOCK_pool, LOCK_sync;TC_LOG_MMAP::LOCK_sync95,3208
  mysql_cond_t COND_pool,TC_LOG_MMAP::COND_pool96,3259
  mysql_cond_t COND_pool, COND_active;TC_LOG_MMAP::COND_active96,3259
  TC_LOG_MMAP(TC_LOG_MMAP::TC_LOG_MMAP99,3309
#define TC_LOG_MMAP 112,3566
#define LOG_INFO_EOF 120,3719
#define LOG_INFO_IO 121,3743
#define LOG_INFO_INVALID 122,3767
#define LOG_INFO_SEEK 123,3795
#define LOG_INFO_MEM 124,3820
#define LOG_INFO_FATAL 125,3844
#define LOG_INFO_IN_USE 126,3870
#define LOG_INFO_EMFILE 127,3897
#define LOG_CLOSE_INDEX	131,3959
#define LOG_CLOSE_TO_BE_OPENED	132,3986
#define LOG_CLOSE_STOP_EVENT	133,4019
#define MAX_LOG_UNIQUE_FN_EXT 140,4178
#define LOG_WARN_UNIQUE_FN_EXT_LEFT 146,4324
typedef struct st_log_info159,4655
  char log_file_name[st_log_info::log_file_name161,4684
  my_off_t index_file_offset,st_log_info::index_file_offset162,4717
  my_off_t index_file_offset, index_file_start_offset;st_log_info::index_file_start_offset162,4717
  my_off_t pos;st_log_info::pos163,4772
  bool fatal;st_log_info::fatal164,4788
  mysql_mutex_t lock;st_log_info::lock165,4855
  st_log_info(st_log_info::st_log_info166,4877
  ~st_log_info(st_log_info::~st_log_info173,5085
} LOG_INFO;174,5133
#define MAX_LOG_HANDLERS_NUM 180,5262
#define LOG_NONE 183,5324
#define LOG_FILE 184,5349
#define LOG_TABLE 185,5374
enum enum_log_type 190,5440
enum enum_log_type { LOG_UNKNOWN,enum_log_type::LOG_UNKNOWN190,5440
enum enum_log_type { LOG_UNKNOWN, LOG_NORMAL,enum_log_type::LOG_NORMAL190,5440
enum enum_log_type { LOG_UNKNOWN, LOG_NORMAL, LOG_BIN enum_log_type::LOG_BIN190,5440
enum enum_log_state 191,5497
enum enum_log_state { LOG_OPENED,enum_log_state::LOG_OPENED191,5497
enum enum_log_state { LOG_OPENED, LOG_CLOSED,enum_log_state::LOG_CLOSED191,5497
enum enum_log_state { LOG_OPENED, LOG_CLOSED, LOG_TO_BE_OPENED enum_log_state::LOG_TO_BE_OPENED191,5497
class MYSQL_LOG198,5670
  inline bool is_open(MYSQL_LOG::is_open219,6357
  mysql_mutex_t LOCK_log;MYSQL_LOG::LOCK_log225,6672
  char *name;MYSQL_LOG::name226,6698
  char log_file_name[MYSQL_LOG::log_file_name227,6712
  char time_buff[MYSQL_LOG::time_buff228,6745
  char time_buff[20], db[MYSQL_LOG::db228,6745
  bool write_error,MYSQL_LOG::write_error229,6785
  bool write_error, inited;MYSQL_LOG::inited229,6785
  IO_CACHE log_file;MYSQL_LOG::log_file230,6813
  enum_log_type log_type;MYSQL_LOG::log_type231,6834
  volatile enum_log_state log_state;MYSQL_LOG::log_state232,6860
  enum cache_type io_cache_type;MYSQL_LOG::io_cache_type233,6897
  PSI_file_key m_log_file_key;MYSQL_LOG::m_log_file_key237,7045
class MYSQL_QUERY_LOG:MYSQL_QUERY_LOG241,7087
  MYSQL_QUERY_LOG(MYSQL_QUERY_LOG::MYSQL_QUERY_LOG244,7137
  bool open_slow_log(MYSQL_QUERY_LOG::open_slow_log254,7671
  bool open_query_log(MYSQL_QUERY_LOG::open_query_log264,7939
  time_t last_time;MYSQL_QUERY_LOG::last_time276,8214
class MYSQL_BIN_LOG:MYSQL_BIN_LOG279,8238
  PSI_mutex_key m_key_LOCK_index;MYSQL_BIN_LOG::m_key_LOCK_index284,8388
  PSI_cond_key m_key_update_cond;MYSQL_BIN_LOG::m_key_update_cond286,8481
  PSI_file_key m_key_file_log;MYSQL_BIN_LOG::m_key_file_log288,8581
  PSI_file_key m_key_file_log_index;MYSQL_BIN_LOG::m_key_file_log_index290,8684
  mysql_mutex_t LOCK_index;MYSQL_BIN_LOG::LOCK_index293,8797
  mysql_mutex_t LOCK_prep_xids;MYSQL_BIN_LOG::LOCK_prep_xids294,8825
  mysql_cond_t  COND_prep_xids;MYSQL_BIN_LOG::COND_prep_xids295,8857
  mysql_cond_t update_cond;MYSQL_BIN_LOG::update_cond296,8889
  ulonglong bytes_written;MYSQL_BIN_LOG::bytes_written297,8917
  IO_CACHE index_file;MYSQL_BIN_LOG::index_file298,8944
  char index_file_name[MYSQL_BIN_LOG::index_file_name299,8967
  IO_CACHE purge_index_file;MYSQL_BIN_LOG::purge_index_file306,9305
  char purge_index_file_name[MYSQL_BIN_LOG::purge_index_file_name307,9334
  ulong max_size;MYSQL_BIN_LOG::max_size318,9832
  long prepared_xids;MYSQL_BIN_LOG::prepared_xids319,9850
  uint file_id;MYSQL_BIN_LOG::file_id321,9988
  uint open_count;MYSQL_BIN_LOG::open_count322,10004
  int readers_count;MYSQL_BIN_LOG::readers_count323,10045
  bool need_start_event;MYSQL_BIN_LOG::need_start_event324,10066
  bool no_auto_events;MYSQL_BIN_LOG::no_auto_events332,10432
  uint *sync_period_ptr;MYSQL_BIN_LOG::sync_period_ptr338,10606
  uint sync_counter;MYSQL_BIN_LOG::sync_counter339,10631
  inline uint get_sync_period(MYSQL_BIN_LOG::get_sync_period341,10653
  using MYSQL_LOG::generate_name;MYSQL_BIN_LOG::MYSQL_LOG::generate_name356,11009
  using MYSQL_LOG::is_open;MYSQL_BIN_LOG::MYSQL_LOG::is_open357,11043
  bool is_relay_log;MYSQL_BIN_LOG::is_relay_log360,11098
  ulong signal_cnt;MYSQL_BIN_LOG::signal_cnt361,11119
  Format_description_log_event *description_event_for_exec,MYSQL_BIN_LOG::description_event_for_exec370,11623
    *description_event_for_queue;MYSQL_BIN_LOG::description_event_for_queue371,11683
  void set_psi_keys(MYSQL_BIN_LOG::set_psi_keys381,11974
  void reset_bytes_written(MYSQL_BIN_LOG::reset_bytes_written405,12806
  void harvest_bytes_written(MYSQL_BIN_LOG::harvest_bytes_written409,12866
  void set_need_start_event(MYSQL_BIN_LOG::set_need_start_event425,13391
  inline char* get_index_fname(MYSQL_BIN_LOG::get_index_fname505,16482
  inline char* get_log_fname(MYSQL_BIN_LOG::get_log_fname506,16542
  inline char* get_name(MYSQL_BIN_LOG::get_name507,16599
  inline mysql_mutex_t* get_log_lock(MYSQL_BIN_LOG::get_log_lock508,16642
  inline mysql_cond_t* get_log_cond(MYSQL_BIN_LOG::get_log_cond509,16703
  inline IO_CACHE* get_log_file(MYSQL_BIN_LOG::get_log_file510,16766
  inline void lock_index(MYSQL_BIN_LOG::lock_index512,16823
  inline void unlock_index(MYSQL_BIN_LOG::unlock_index513,16884
  inline IO_CACHE *get_index_file(MYSQL_BIN_LOG::get_index_file514,16949
  inline uint32 get_open_count(MYSQL_BIN_LOG::get_open_count515,17008
class Log_event_handler518,17068
  Log_event_handler(Log_event_handler::Log_event_handler521,17102
  virtual ~Log_event_handler(Log_event_handler::~Log_event_handler537,17958
class Log_to_csv_event_handler:Log_to_csv_event_handler544,18145
#define QUERY_LOG_SLOW 572,19192
#define QUERY_LOG_GENERAL 573,19217
class Log_to_file_event_handler:Log_to_file_event_handler575,19246
  MYSQL_QUERY_LOG mysql_log;Log_to_file_event_handler::mysql_log577,19306
  MYSQL_QUERY_LOG mysql_slow_log;Log_to_file_event_handler::mysql_slow_log578,19335
  bool is_initialized;Log_to_file_event_handler::is_initialized579,19369
  Log_to_file_event_handler(Log_to_file_event_handler::Log_to_file_event_handler581,19400
  MYSQL_QUERY_LOG *get_mysql_slow_log(Log_to_file_event_handler::get_mysql_slow_log600,20321
  MYSQL_QUERY_LOG *get_mysql_log(Log_to_file_event_handler::get_mysql_log601,20389
class LOGGER606,20521
  mysql_rwlock_t LOCK_logger;LOGGER::LOCK_logger608,20536
  uint inited;LOGGER::inited610,20624
  Log_to_csv_event_handler *table_log_handler;LOGGER::table_log_handler613,20671
  Log_to_file_event_handler *file_log_handler;LOGGER::file_log_handler614,20718
  Log_event_handler *error_log_handler_list[LOGGER::error_log_handler_list617,20813
  Log_event_handler *slow_log_handler_list[LOGGER::slow_log_handler_list618,20884
  Log_event_handler *general_log_handler_list[LOGGER::general_log_handler_list619,20954
  bool is_log_tables_initialized;LOGGER::is_log_tables_initialized623,21037
  LOGGER(LOGGER::LOGGER625,21072
  void lock_shared(LOGGER::lock_shared628,21196
  void lock_exclusive(LOGGER::lock_exclusive629,21256
  void unlock(LOGGER::unlock630,21319
  MYSQL_QUERY_LOG *get_slow_log_file_handler(LOGGER::get_slow_log_file_handler667,22971
  MYSQL_QUERY_LOG *get_log_file_handler(LOGGER::get_log_file_handler673,23129
enum enum_binlog_format 681,23281
  BINLOG_FORMAT_MIXED=enum_binlog_format::BINLOG_FORMAT_MIXED682,23307
  BINLOG_FORMAT_STMT=enum_binlog_format::BINLOG_FORMAT_STMT683,23386
  BINLOG_FORMAT_ROW=enum_binlog_format::BINLOG_FORMAT_ROW684,23433
  BINLOG_FORMAT_UNSPEC=enum_binlog_format::BINLOG_FORMAT_UNSPEC685,23474
typedef void (*sql_print_message_func)sql_print_message_func696,23974
inline bool normalize_binlog_name(738,25463

sql/mdl.h,7612
#define MDL_H2,14
enum enum_mdl_type 45,1348
  MDL_INTENTION_EXCLUSIVE=enum_mdl_type::MDL_INTENTION_EXCLUSIVE53,1633
  MDL_SHARED,enum_mdl_type::MDL_SHARED76,2903
  MDL_SHARED_HIGH_PRIO,enum_mdl_type::MDL_SHARED_HIGH_PRIO93,3811
  MDL_SHARED_READ,enum_mdl_type::MDL_SHARED_READ104,4321
  MDL_SHARED_WRITE,enum_mdl_type::MDL_SHARED_WRITE114,4777
  MDL_SHARED_NO_WRITE,enum_mdl_type::MDL_SHARED_NO_WRITE128,5423
  MDL_SHARED_NO_READ_WRITE,enum_mdl_type::MDL_SHARED_NO_READ_WRITE140,5931
  MDL_EXCLUSIVE,enum_mdl_type::MDL_EXCLUSIVE148,6274
  MDL_TYPE_END}enum_mdl_type::MDL_TYPE_END150,6327
enum enum_mdl_duration 155,6381
  MDL_STATEMENT=enum_mdl_duration::MDL_STATEMENT160,6522
  MDL_TRANSACTION,enum_mdl_duration::MDL_TRANSACTION165,6647
  MDL_EXPLICIT,enum_mdl_duration::MDL_EXPLICIT170,6836
  MDL_DURATION_END enum_mdl_duration::MDL_DURATION_END172,6886
#define MAX_MDLKEY_LENGTH 176,6971
class MDL_key188,7312
  enum enum_mdl_namespace MDL_key::enum_mdl_namespace206,7931
  enum enum_mdl_namespace { GLOBAL=MDL_key::enum_mdl_namespace::GLOBAL206,7931
                            SCHEMA,MDL_key::enum_mdl_namespace::SCHEMA207,7969
                            TABLE,MDL_key::enum_mdl_namespace::TABLE208,8005
                            FUNCTION,MDL_key::enum_mdl_namespace::FUNCTION209,8040
                            PROCEDURE,MDL_key::enum_mdl_namespace::PROCEDURE210,8078
                            TRIGGER,MDL_key::enum_mdl_namespace::TRIGGER211,8117
                            EVENT,MDL_key::enum_mdl_namespace::EVENT212,8154
                            COMMIT,MDL_key::enum_mdl_namespace::COMMIT213,8189
                            NAMESPACE_END MDL_key::enum_mdl_namespace::NAMESPACE_END215,8285
  const uchar *ptr(MDL_key::ptr217,8331
  uint length(MDL_key::length218,8385
  const char *db_name(MDL_key::db_name220,8429
  uint db_name_length(MDL_key::db_name_length221,8481
  const char *name(MDL_key::name223,8541
  uint name_length(MDL_key::name_length224,8609
  enum_mdl_namespace mdl_namespace(MDL_key::mdl_namespace226,8681
  void mdl_key_init(MDL_key::mdl_key_init240,9194
  void mdl_key_init(MDL_key::mdl_key_init253,9722
  bool is_equal(MDL_key::is_equal259,9890
  int cmp(MDL_key::cmp267,10091
  MDL_key(MDL_key::MDL_key277,10376
  MDL_key(MDL_key::MDL_key281,10437
  MDL_key(MDL_key::MDL_key286,10592
  const char * get_wait_state_name(MDL_key::get_wait_state_name292,10759
  uint16 m_length;MDL_key::m_length298,10885
  uint16 m_db_name_length;MDL_key::m_db_name_length299,10904
  char m_ptr[MDL_key::m_ptr300,10931
  static const char * m_namespace_to_wait_state_name[MDL_key::m_namespace_to_wait_state_name301,10964
class MDL_request321,11656
  enum          enum_mdl_type type;MDL_request::type325,11716
  enum enum_mdl_duration duration;MDL_request::duration327,11790
  MDL_request *next_in_list;MDL_request::next_in_list332,11915
  MDL_request **prev_in_list;MDL_request::prev_in_list333,11944
  MDL_ticket *ticket;MDL_request::ticket338,12096
  MDL_key key;MDL_request::key341,12190
  static void *operator new(MDL_request::operator new344,12214
  static void operator delete(MDL_request::operator delete346,12325
  inline void set_type(MDL_request::set_type355,12774
  MDL_request& operator=(MDL_request::operator=374,13434
  MDL_request(MDL_request::MDL_request381,13652
  MDL_request(MDL_request::MDL_request383,13672
typedef void (*mdl_cached_object_release_hook)mdl_cached_object_release_hook392,13808
class MDL_wait_for_graph_visitor400,13958
  MDL_wait_for_graph_visitor(MDL_wait_for_graph_visitor::MDL_wait_for_graph_visitor408,14195
  uint m_lock_open_count;MDL_wait_for_graph_visitor::m_lock_open_count418,14609
class MDL_wait_for_subgraph426,14757
  enum enum_deadlock_weightMDL_wait_for_subgraph::enum_deadlock_weight437,15002
    DEADLOCK_WEIGHT_DML=MDL_wait_for_subgraph::enum_deadlock_weight::DEADLOCK_WEIGHT_DML439,15034
    DEADLOCK_WEIGHT_DDL=MDL_wait_for_subgraph::enum_deadlock_weight::DEADLOCK_WEIGHT_DDL440,15062
class MDL_ticket 467,16076
  MDL_ticket *next_in_context;MDL_ticket::next_in_context474,16244
  MDL_ticket **prev_in_context;MDL_ticket::prev_in_context475,16275
  MDL_ticket *next_in_lock;MDL_ticket::next_in_lock480,16432
  MDL_ticket **prev_in_lock;MDL_ticket::prev_in_lock481,16460
  MDL_context *get_ctx(MDL_ticket::get_ctx485,16543
  bool is_upgradable_or_exclusive(MDL_ticket::is_upgradable_or_exclusive486,16592
  enum_mdl_type get_type(MDL_ticket::get_type492,16771
  MDL_lock *get_lock(MDL_ticket::get_lock493,16823
  MDL_ticket(MDL_ticket::MDL_ticket508,17367
  enum enum_mdl_type m_type;MDL_ticket::m_type529,17928
  enum_mdl_duration m_duration;MDL_ticket::m_duration535,18067
  MDL_context *m_ctx;MDL_ticket::m_ctx540,18194
  MDL_lock *m_lock;MDL_ticket::m_lock545,18304
class MDL_savepoint560,18630
  MDL_savepoint(MDL_savepoint::MDL_savepoint563,18660
  MDL_savepoint(MDL_savepoint::MDL_savepoint566,18692
  MDL_ticket *m_stmt_ticket;MDL_savepoint::m_stmt_ticket577,18976
  MDL_ticket *m_trans_ticket;MDL_savepoint::m_trans_ticket582,19117
class MDL_wait590,19201
  enum enum_wait_status MDL_wait::enum_wait_status596,19256
  enum enum_wait_status { EMPTY MDL_wait::enum_wait_status::EMPTY596,19256
  enum enum_wait_status { EMPTY = 0, GRANTED,MDL_wait::enum_wait_status::GRANTED596,19256
  enum enum_wait_status { EMPTY = 0, GRANTED, VICTIM,MDL_wait::enum_wait_status::VICTIM596,19256
  enum enum_wait_status { EMPTY = 0, GRANTED, VICTIM, TIMEOUT,MDL_wait::enum_wait_status::TIMEOUT596,19256
  enum enum_wait_status { EMPTY = 0, GRANTED, VICTIM, TIMEOUT, KILLED MDL_wait::enum_wait_status::KILLED596,19256
  mysql_mutex_t m_LOCK_wait_status;MDL_wait::m_LOCK_wait_status611,19903
  mysql_cond_t m_COND_wait_status;MDL_wait::m_COND_wait_status612,19939
  enum_wait_status m_wait_status;MDL_wait::m_wait_status613,19974
typedef I_P_List<MDL_request,MDL_request617,20013
        MDL_request_list;621,20199
class MDL_context628,20326
  typedef I_P_List<MDL_ticket,MDL_context::MDL_ticket631,20354
                   I_P_List_adapter<MDL_context::I_P_List_adapter632,20385
          Ticket_list;MDL_context::Ticket_list635,20567
  typedef Ticket_list::Iterator Ticket_iterator;MDL_context::Ticket_iterator637,20591
  inline bool has_locks(MDL_context::has_locks659,21395
  MDL_savepoint mdl_savepoint(MDL_context::mdl_savepoint666,21592
  inline THD *get_thd(MDL_context::get_thd680,22067
  inline uint get_deadlock_weight(MDL_context::get_deadlock_weight683,22173
  void init(MDL_context::init693,22549
  void set_needs_thr_lock_abort(MDL_context::set_needs_thr_lock_abort695,22596
  bool get_needs_thr_lock_abort(MDL_context::get_needs_thr_lock_abort707,23135
  MDL_wait m_wait;MDL_context::m_wait716,23360
  Ticket_list m_tickets[MDL_context::m_tickets772,25843
  THD *m_thd;MDL_context::m_thd773,25886
  bool m_needs_thr_lock_abort;MDL_context::m_needs_thr_lock_abort783,26294
  mysql_prlock_t m_LOCK_waiting_for;MDL_context::m_LOCK_waiting_for792,26574
  MDL_wait_for_subgraph *m_waiting_for;MDL_context::m_waiting_for800,26924
  void will_wait_for(MDL_context::will_wait_for815,27516
  void done_waiting_for(MDL_context::done_waiting_for823,27790
  void lock_deadlock_victim(MDL_context::lock_deadlock_victim829,27941
  void unlock_deadlock_victim(MDL_context::unlock_deadlock_victim833,28025
static const ulong MDL_LOCKS_CACHE_SIZE_DEFAULT 867,28972
extern "C" ulong max_write_lock_count;874,29200

sql/mem_root_array.h,1062
#define MEM_ROOT_ARRAY_INCLUDED18,772
template<typename Element_type,46,1781
class Mem_root_array47,1842
  Mem_root_array(Mem_root_array::Mem_root_array50,1873
  ~Mem_root_array(Mem_root_array::~Mem_root_array56,2008
  Element_type &at(Mem_root_array::at61,2050
  const Element_type &at(Mem_root_array::at67,2140
  Element_type *begin(Mem_root_array::begin74,2300
  Element_type *end(Mem_root_array::end77,2414
  void clear(Mem_root_array::clear80,2500
  void chop(Mem_root_array::chop90,2676
  bool reserve(Mem_root_array::reserve111,3190
  bool push_back(Mem_root_array::push_back145,4149
  size_t capacity(Mem_root_array::capacity158,4531
  size_t element_size(Mem_root_array::element_size159,4584
  bool   empty(Mem_root_array::empty160,4647
  size_t size(Mem_root_array::size161,4701
  MEM_ROOT *const m_root;Mem_root_array::m_root164,4760
  Element_type   *m_array;Mem_root_array::m_array165,4786
  size_t          m_size;Mem_root_array::m_size166,4813
  size_t          m_capacity;Mem_root_array::m_capacity167,4839

sql/message.h,59
#define MESSAGE_INCLUDED2,26
#define MSG_DEFAULT 74,2098

sql/my_decimal.h,2522
#define my_decimal_h29,1121
typedef struct st_mysql_time MYSQL_TIME;40,1327
#define DECIMAL_LONGLONG_DIGITS 42,1369
#define DECIMAL_LONG_DIGITS 43,1404
#define DECIMAL_LONG3_DIGITS 44,1435
#define DECIMAL_BUFF_LENGTH 47,1527
#define DECIMAL_MAX_POSSIBLE_PRECISION 50,1622
#define DECIMAL_MAX_PRECISION 59,1965
#define DECIMAL_MAX_SCALE 60,2034
#define DECIMAL_NOT_SPECIFIED 61,2063
#define DECIMAL_MAX_STR_LENGTH 67,2251
#define DECIMAL_MAX_FIELD_SIZE 72,2360
inline uint my_decimal_size(75,2415
inline int my_decimal_int_part(85,2619
class my_decimal 99,3032
  int foo1;my_decimal::foo1108,3344
  decimal_digit_t buffer[my_decimal::buffer111,3364
  int foo2;my_decimal::foo2114,3435
  static const int test_value=my_decimal::test_value115,3447
  my_decimal(my_decimal::my_decimal120,3500
  my_decimal& operator=(my_decimal::operator=131,3744
  void init(my_decimal::init146,4073
  my_decimal(my_decimal::my_decimal156,4217
  ~my_decimal(my_decimal::~my_decimal160,4252
  void sanity_check(my_decimal::sanity_check165,4297
  void fix_buffer_pointer(my_decimal::fix_buffer_pointer171,4402
  bool sign(my_decimal::sign173,4448
  void sign(my_decimal::sign174,4496
  uint precision(my_decimal::precision175,4540
  void swap(my_decimal::swap178,4626
#define dbug_decimal_as_string(190,4927
inline int decimal_operation_results(202,5253
void max_my_decimal(209,5355
inline void max_internal_decimal(216,5554
inline int check_result(221,5656
inline int check_result_and_overflow(228,5785
inline uint my_decimal_length_to_precision(240,6054
inline uint32 my_decimal_precision_to_length_no_truncation(249,6399
inline uint32 my_decimal_precision_to_length(262,6900
int my_decimal_string_length(276,7405
int my_decimal_max_length(284,7568
int my_decimal_get_binary_size(292,7703
void my_decimal2decimal(299,7830
int binary2my_decimal(310,8019
int my_decimal_set_zero(318,8190
bool my_decimal_is_zero(331,8493
int my_decimal_round(338,8604
int my_decimal_floor(347,8837
int my_decimal_ceiling(354,8986
inline bool str_set_decimal(360,9132
int my_decimal2int(373,9487
int my_decimal2double(386,9850
int str2my_decimal(394,10029
int string2my_decimal(405,10377
int double2my_decimal(417,10665
int int2my_decimal(424,10807
void my_decimal_neg(433,11024
int my_decimal_add(445,11159
int my_decimal_sub(455,11407
int my_decimal_mul(465,11655
int my_decimal_div(475,11903
int my_decimal_mod(485,12185
int my_decimal_cmp(499,12488
int my_decimal_intg(506,12590

sql/mysqld.h,4784
#define MYSQLD_INCLUDED17,770
typedef struct st_mysql_const_lex_string LEX_CSTRING;33,1325
typedef struct st_mysql_show_var SHOW_VAR;34,1379
typedef struct charset_info_st CHARSET_INFO;43,1670
typedef Bitmap<64>  key_map;47,1773
typedef Bitmap<((MAX_INDEXES+MAX_INDEXES49,1845
#define TEST_PRINT_CACHED_TABLES 53,1954
#define TEST_NO_KEY_GROUP	54,1989
#define TEST_MIT_THREAD	55,2018
#define TEST_BLOCKING	56,2045
#define TEST_KEEP_TMP_TABLES	57,2070
#define TEST_READCHECK	58,2102
#define TEST_NO_EXTRA	59,2160
#define TEST_CORE_ON_SIGNAL	60,2187
#define TEST_NO_STACKTRACE	61,2247
#define TEST_SIGINT	62,2278
#define TEST_SYNCHRONIZATION 63,2336
extern "C" MYSQL_PLUGIN_IMPORT CHARSET_INFO *system_charset_info;system_charset_info76,2855
extern "C" MYSQL_PLUGIN_IMPORT ulong server_id;188,7783
extern "C" MYSQL_PLUGIN_IMPORT int orig_argc;210,8810
extern "C" MYSQL_PLUGIN_IMPORT char **orig_argv;orig_argv211,8856
extern "C" MYSQL_PLUGIN_IMPORT char server_version[server_version327,13468
#define mysql_tmpdir 333,13766
enum options_mysqld370,15149
  OPT_to_set_the_start_number=options_mysqld::OPT_to_set_the_start_number372,15171
  OPT_BIND_ADDRESS,options_mysqld::OPT_BIND_ADDRESS373,15206
  OPT_BINLOG_DO_DB,options_mysqld::OPT_BINLOG_DO_DB374,15226
  OPT_BINLOG_FORMAT,options_mysqld::OPT_BINLOG_FORMAT375,15246
  OPT_BINLOG_IGNORE_DB,options_mysqld::OPT_BINLOG_IGNORE_DB376,15267
  OPT_BIN_LOG,options_mysqld::OPT_BIN_LOG377,15291
  OPT_BOOTSTRAP,options_mysqld::OPT_BOOTSTRAP378,15306
  OPT_CONSOLE,options_mysqld::OPT_CONSOLE379,15323
  OPT_DEBUG_SYNC_TIMEOUT,options_mysqld::OPT_DEBUG_SYNC_TIMEOUT380,15338
  OPT_DELAY_KEY_WRITE_ALL,options_mysqld::OPT_DELAY_KEY_WRITE_ALL381,15364
  OPT_ISAM_LOG,options_mysqld::OPT_ISAM_LOG382,15391
  OPT_KEY_BUFFER_SIZE,options_mysqld::OPT_KEY_BUFFER_SIZE383,15407
  OPT_KEY_CACHE_AGE_THRESHOLD,options_mysqld::OPT_KEY_CACHE_AGE_THRESHOLD384,15430
  OPT_KEY_CACHE_BLOCK_SIZE,options_mysqld::OPT_KEY_CACHE_BLOCK_SIZE385,15461
  OPT_KEY_CACHE_DIVISION_LIMIT,options_mysqld::OPT_KEY_CACHE_DIVISION_LIMIT386,15489
  OPT_LOWER_CASE_TABLE_NAMES,options_mysqld::OPT_LOWER_CASE_TABLE_NAMES387,15521
  OPT_ONE_THREAD,options_mysqld::OPT_ONE_THREAD388,15551
  OPT_POOL_OF_THREADS,options_mysqld::OPT_POOL_OF_THREADS389,15569
  OPT_REPLICATE_DO_DB,options_mysqld::OPT_REPLICATE_DO_DB390,15592
  OPT_REPLICATE_DO_TABLE,options_mysqld::OPT_REPLICATE_DO_TABLE391,15615
  OPT_REPLICATE_IGNORE_DB,options_mysqld::OPT_REPLICATE_IGNORE_DB392,15641
  OPT_REPLICATE_IGNORE_TABLE,options_mysqld::OPT_REPLICATE_IGNORE_TABLE393,15668
  OPT_REPLICATE_REWRITE_DB,options_mysqld::OPT_REPLICATE_REWRITE_DB394,15698
  OPT_REPLICATE_WILD_DO_TABLE,options_mysqld::OPT_REPLICATE_WILD_DO_TABLE395,15726
  OPT_REPLICATE_WILD_IGNORE_TABLE,options_mysqld::OPT_REPLICATE_WILD_IGNORE_TABLE396,15757
  OPT_SAFE,options_mysqld::OPT_SAFE397,15792
  OPT_SERVER_ID,options_mysqld::OPT_SERVER_ID398,15804
  OPT_SKIP_HOST_CACHE,options_mysqld::OPT_SKIP_HOST_CACHE399,15821
  OPT_SKIP_LOCK,options_mysqld::OPT_SKIP_LOCK400,15844
  OPT_SKIP_NEW,options_mysqld::OPT_SKIP_NEW401,15861
  OPT_SKIP_PRIOR,options_mysqld::OPT_SKIP_PRIOR402,15877
  OPT_SKIP_RESOLVE,options_mysqld::OPT_SKIP_RESOLVE403,15895
  OPT_SKIP_STACK_TRACE,options_mysqld::OPT_SKIP_STACK_TRACE404,15915
  OPT_SKIP_SYMLINKS,options_mysqld::OPT_SKIP_SYMLINKS405,15939
  OPT_SLOW_QUERY_LOG,options_mysqld::OPT_SLOW_QUERY_LOG406,15960
  OPT_SSL_CA,options_mysqld::OPT_SSL_CA407,15982
  OPT_SSL_CAPATH,options_mysqld::OPT_SSL_CAPATH408,15996
  OPT_SSL_CERT,options_mysqld::OPT_SSL_CERT409,16014
  OPT_SSL_CIPHER,options_mysqld::OPT_SSL_CIPHER410,16030
  OPT_SSL_KEY,options_mysqld::OPT_SSL_KEY411,16048
  OPT_UPDATE_LOG,options_mysqld::OPT_UPDATE_LOG412,16063
  OPT_WANT_CORE,options_mysqld::OPT_WANT_CORE413,16081
  OPT_ENGINE_CONDITION_PUSHDOWN,options_mysqld::OPT_ENGINE_CONDITION_PUSHDOWN414,16098
  OPT_LOG_ERROR,options_mysqld::OPT_LOG_ERROR415,16131
  OPT_MAX_LONG_DATA_SIZEoptions_mysqld::OPT_MAX_LONG_DATA_SIZE416,16148
enum enum_query_type423,16235
  QT_ORDINARY=enum_query_type::QT_ORDINARY426,16302
  QT_TO_SYSTEM_CHARSET=enum_query_type::QT_TO_SYSTEM_CHARSET428,16335
  QT_WITHOUT_INTRODUCERS=enum_query_type::QT_WITHOUT_INTRODUCERS430,16410
typedef int64 query_id_t;434,16464
inline query_id_t next_query_id(441,16665
inline query_id_t get_query_id(450,16884
#define unireg_abort(467,17297
inline void table_case_convert(470,17402
inline ulong sql_rnd_with_mutex(477,17617
inc_thread_running(486,17846
dec_thread_running(496,18105
get_thread_running(506,18365
#define _current_thd(517,18699
inline THD *_current_thd(_current_thd524,18927
#define current_thd 529,19020

sql/mysqld_suffix.h,118
#define MYSQLD_SUFFIX_INCLUDED2,31
#define MYSQL_SERVER_SUFFIX_STR 30,1029
#define MYSQL_SERVER_SUFFIX_STR 32,1102

sql/nt_servc.h,1623
#define NT_SERVC_INCLUDED2,26
typedef void (*THREAD_FC)THREAD_FC15,264
class NTService17,300
    BOOL    bOsNT;NTService::bOsNT23,363
    DWORD   dwDesiredAccess;NTService::dwDesiredAccess25,449
    DWORD   dwServiceType;NTService::dwServiceType26,478
    DWORD   dwStartType;NTService::dwStartType27,505
    DWORD   dwErrorControl;NTService::dwErrorControl28,530
    LPSTR   szLoadOrderGroup;NTService::szLoadOrderGroup30,559
    LPDWORD lpdwTagID;NTService::lpdwTagID31,589
    LPSTR   szDependencies;NTService::szDependencies32,612
    OSVERSIONINFO osVer;NTService::osVer33,640
    int     nStartTimeOut;NTService::nStartTimeOut36,695
    int     nStopTimeOut;NTService::nStopTimeOut37,722
    int     nPauseTimeOut;NTService::nPauseTimeOut38,748
    int     nResumeTimeOut;NTService::nResumeTimeOut39,775
    DWORD   my_argc;NTService::my_argc42,811
    LPTSTR *my_argv;NTService::my_argv43,832
    HANDLE  hShutdownEvent;NTService::hShutdownEvent44,853
    int     nError;NTService::nError45,881
    DWORD   dwState;NTService::dwState46,901
    BOOL IsNT(NTService::IsNT49,972
    void SetShutdownEvent(NTService::SetShutdownEvent54,1126
    LPSTR		   ServiceName;NTService::ServiceName91,2353
    HANDLE		   hExitEvent;NTService::hExitEvent92,2380
    SERVICE_STATUS_HANDLE  hServiceStatusHandle;NTService::hServiceStatusHandle93,2407
    BOOL		   bPause;NTService::bPause94,2456
    BOOL		   bRunning;NTService::bRunning95,2477
    HANDLE		   hThreadHandle;NTService::hThreadHandle96,2500
    THREAD_FC		   fpServiceThread;NTService::fpServiceThread97,2530

sql/opt_range.h,11551
#define _opt_range_h20,816
typedef struct st_key_part 40,1441
  uint16           key,st_key_part::key41,1470
  uint16           key,part;st_key_part::part41,1470
  uint16           store_length,st_key_part::store_length43,1554
  uint16           store_length, length;st_key_part::length43,1554
  uint8            null_bit;st_key_part::null_bit44,1595
  uint8 flag;st_key_part::flag49,1754
  Field            *field;st_key_part::field50,1768
  Field::imagetype image_type;st_key_part::image_type51,1795
} KEY_PART;52,1826
class QUICK_RANGE 55,1840
  uchar *min_key,QUICK_RANGE::min_key57,1887
  uchar *min_key,*max_key;QUICK_RANGE::max_key57,1887
  uint16 min_length,QUICK_RANGE::min_length58,1914
  uint16 min_length,max_length,QUICK_RANGE::max_length58,1914
  uint16 min_length,max_length,flag;QUICK_RANGE::flag58,1914
  key_part_map min_keypart_map,QUICK_RANGE::min_keypart_map59,1951
               max_keypart_map;QUICK_RANGE::max_keypart_map60,2021
  uint16 dummy;QUICK_RANGE::dummy62,2110
  QUICK_RANGE(QUICK_RANGE::QUICK_RANGE65,2205
  void make_min_endpoint(QUICK_RANGE::make_min_endpoint97,3358
  void make_min_endpoint(QUICK_RANGE::make_min_endpoint113,3959
  void make_max_endpoint(QUICK_RANGE::make_max_endpoint135,4770
  void make_max_endpoint(QUICK_RANGE::make_max_endpoint151,5369
class QUICK_SELECT_I207,6762
  bool sorted;QUICK_SELECT_I::sorted210,6793
  ha_rows records;QUICK_SELECT_I::records211,6808
  double  read_time;QUICK_SELECT_I::read_time212,6875
  TABLE   *head;QUICK_SELECT_I::head213,6942
  uint index;QUICK_SELECT_I::index218,7061
  uint max_used_key_length;QUICK_SELECT_I::max_used_key_length224,7180
  uint used_key_parts;QUICK_SELECT_I::used_key_parts233,7478
  virtual ~QUICK_SELECT_I(QUICK_SELECT_I::~QUICK_SELECT_I236,7522
  virtual void range_end(QUICK_SELECT_I::range_end278,8802
  virtual bool unique_key_range(QUICK_SELECT_I::unique_key_range281,8870
  virtual bool clustered_pk_range(QUICK_SELECT_I::clustered_pk_range282,8922
    QS_TYPE_RANGE QUICK_SELECT_I::QS_TYPE_RANGE285,8986
    QS_TYPE_INDEX_MERGE QUICK_SELECT_I::QS_TYPE_INDEX_MERGE286,9009
    QS_TYPE_RANGE_DESC QUICK_SELECT_I::QS_TYPE_RANGE_DESC287,9038
    QS_TYPE_FULLTEXT QUICK_SELECT_I::QS_TYPE_FULLTEXT288,9066
    QS_TYPE_ROR_INTERSECT QUICK_SELECT_I::QS_TYPE_ROR_INTERSECT289,9094
    QS_TYPE_ROR_UNION QUICK_SELECT_I::QS_TYPE_ROR_UNION290,9125
    QS_TYPE_GROUP_MIN_MAX QUICK_SELECT_I::QS_TYPE_GROUP_MIN_MAX291,9152
  virtual int init_ror_merged_scan(QUICK_SELECT_I::init_ror_merged_scan310,9741
  virtual void save_last_pos(QUICK_SELECT_I::save_last_pos316,9916
  virtual void add_info_string(QUICK_SELECT_I::add_info_string332,10576
  virtual bool is_valid(QUICK_SELECT_I::is_valid344,10943
  uchar    *last_rowid;QUICK_SELECT_I::last_rowid350,11121
  uchar    *record;QUICK_SELECT_I::record355,11207
  virtual QUICK_SELECT_I *make_reverse(QUICK_SELECT_I::make_reverse367,11533
class QUICK_RANGE_SELECT 379,11772
  bool next,QUICK_RANGE_SELECT::next382,11834
  bool next,dont_free,QUICK_RANGE_SELECT::dont_free382,11834
  bool next,dont_free,in_ror_merged_scan;QUICK_RANGE_SELECT::in_ror_merged_scan382,11834
  int error;QUICK_RANGE_SELECT::error384,11884
  handler *file;QUICK_RANGE_SELECT::file386,11908
  bool free_file;QUICK_RANGE_SELECT::free_file391,12066
  bool in_range;QUICK_RANGE_SELECT::in_range392,12084
  uint multi_range_count;QUICK_RANGE_SELECT::multi_range_count393,12101
  uint multi_range_length;QUICK_RANGE_SELECT::multi_range_length394,12176
  uint multi_range_bufsiz;QUICK_RANGE_SELECT::multi_range_bufsiz395,12244
  KEY_MULTI_RANGE *multi_range;QUICK_RANGE_SELECT::multi_range396,12321
  HANDLER_BUFFER *multi_range_buff;QUICK_RANGE_SELECT::multi_range_buff398,12464
  MY_BITMAP column_bitmap,QUICK_RANGE_SELECT::column_bitmap400,12608
  MY_BITMAP column_bitmap, *save_read_set,QUICK_RANGE_SELECT::save_read_set400,12608
  MY_BITMAP column_bitmap, *save_read_set, *save_write_set;QUICK_RANGE_SELECT::save_write_set400,12608
  DYNAMIC_ARRAY ranges;QUICK_RANGE_SELECT::ranges420,13565
  QUICK_RANGE **cur_range;QUICK_RANGE_SELECT::cur_range421,13627
  QUICK_RANGE *last_range;QUICK_RANGE_SELECT::last_range423,13689
  KEY_PART *key_parts;QUICK_RANGE_SELECT::key_parts424,13716
  KEY_PART_INFO *key_part_info;QUICK_RANGE_SELECT::key_part_info425,13739
  MEM_ROOT alloc;QUICK_RANGE_SELECT::alloc430,13875
  bool reverse_sorted(QUICK_RANGE_SELECT::reverse_sorted442,14225
  void save_last_pos(QUICK_RANGE_SELECT::save_last_pos445,14338
  int get_type(QUICK_RANGE_SELECT::get_type447,14391
private:QUICK_RANGE_SELECT::private454,14666
class QUICK_RANGE_SELECT_GEOM:QUICK_RANGE_SELECT_GEOM459,14732
  QUICK_RANGE_SELECT_GEOM(QUICK_RANGE_SELECT_GEOM::QUICK_RANGE_SELECT_GEOM462,14799
class QUICK_INDEX_MERGE_SELECT 529,16997
  Unique *unique;QUICK_INDEX_MERGE_SELECT::unique531,17054
  bool reverse_sorted(QUICK_INDEX_MERGE_SELECT::reverse_sorted539,17218
  bool unique_key_range(QUICK_INDEX_MERGE_SELECT::unique_key_range540,17260
  int get_type(QUICK_INDEX_MERGE_SELECT::get_type541,17304
  List<QUICK_RANGE_SELECT> quick_selects;QUICK_INDEX_MERGE_SELECT::quick_selects552,17699
  QUICK_RANGE_SELECT* pk_quick_select;QUICK_INDEX_MERGE_SELECT::pk_quick_select555,17810
  bool  doing_pk_scan;QUICK_INDEX_MERGE_SELECT::doing_pk_scan558,17917
  MEM_ROOT alloc;QUICK_INDEX_MERGE_SELECT::alloc560,17941
  THD *thd;QUICK_INDEX_MERGE_SELECT::thd561,17959
  bool clustered_pk_range(QUICK_INDEX_MERGE_SELECT::clustered_pk_range564,18001
  virtual bool is_valid(QUICK_INDEX_MERGE_SELECT::is_valid566,18064
  READ_RECORD read_record;QUICK_INDEX_MERGE_SELECT::read_record583,18398
class QUICK_ROR_INTERSECT_SELECT 605,19178
  bool reverse_sorted(QUICK_ROR_INTERSECT_SELECT::reverse_sorted616,19494
  bool unique_key_range(QUICK_ROR_INTERSECT_SELECT::unique_key_range617,19536
  int get_type(QUICK_ROR_INTERSECT_SELECT::get_type618,19580
  List<QUICK_RANGE_SELECT> quick_selects;QUICK_ROR_INTERSECT_SELECT::quick_selects632,20056
  virtual bool is_valid(QUICK_ROR_INTERSECT_SELECT::is_valid634,20099
  QUICK_RANGE_SELECT *cpk_quick;QUICK_ROR_INTERSECT_SELECT::cpk_quick654,20546
  MEM_ROOT alloc;QUICK_ROR_INTERSECT_SELECT::alloc656,20580
  THD *thd;QUICK_ROR_INTERSECT_SELECT::thd657,20656
  bool need_to_fetch_row;QUICK_ROR_INTERSECT_SELECT::need_to_fetch_row658,20695
  bool scans_inited;QUICK_ROR_INTERSECT_SELECT::scans_inited660,20842
class QUICK_ROR_UNION_SELECT 677,21277
  bool reverse_sorted(QUICK_ROR_UNION_SELECT::reverse_sorted686,21474
  bool unique_key_range(QUICK_ROR_UNION_SELECT::unique_key_range687,21516
  int get_type(QUICK_ROR_UNION_SELECT::get_type688,21560
  List<QUICK_SELECT_I> quick_selects;QUICK_ROR_UNION_SELECT::quick_selects698,21887
  virtual bool is_valid(QUICK_ROR_UNION_SELECT::is_valid700,21953
  QUEUE queue;QUICK_ROR_UNION_SELECT::queue716,22234
  MEM_ROOT alloc;QUICK_ROR_UNION_SELECT::alloc717,22293
  THD *thd;QUICK_ROR_UNION_SELECT::thd719,22370
  uchar *cur_rowid;QUICK_ROR_UNION_SELECT::cur_rowid720,22415
  uchar *prev_rowid;QUICK_ROR_UNION_SELECT::prev_rowid721,22472
  bool have_prev_rowid;QUICK_ROR_UNION_SELECT::have_prev_rowid722,22544
  uint rowid_length;QUICK_ROR_UNION_SELECT::rowid_length723,22608
  bool scans_inited;QUICK_ROR_UNION_SELECT::scans_inited725,22666
class QUICK_GROUP_MIN_MAX_SELECT 762,23778
  handler * const file;QUICK_GROUP_MIN_MAX_SELECT::file765,23846
  JOIN *join;QUICK_GROUP_MIN_MAX_SELECT::join766,23908
  KEY  *index_info;QUICK_GROUP_MIN_MAX_SELECT::index_info767,23971
  uchar *record;QUICK_GROUP_MIN_MAX_SELECT::record768,24035
  uchar *tmp_record;QUICK_GROUP_MIN_MAX_SELECT::tmp_record769,24109
  uchar *group_prefix;QUICK_GROUP_MIN_MAX_SELECT::group_prefix770,24187
  const uint group_prefix_len;QUICK_GROUP_MIN_MAX_SELECT::group_prefix_len771,24262
  uint group_key_parts;QUICK_GROUP_MIN_MAX_SELECT::group_key_parts772,24327
  uchar *last_prefix;QUICK_GROUP_MIN_MAX_SELECT::last_prefix773,24399
  bool have_min;QUICK_GROUP_MIN_MAX_SELECT::have_min774,24475
  bool have_max;QUICK_GROUP_MIN_MAX_SELECT::have_max775,24539
  bool have_agg_distinct;QUICK_GROUP_MIN_MAX_SELECT::have_agg_distinct776,24603
  bool seen_first_key;QUICK_GROUP_MIN_MAX_SELECT::seen_first_key777,24671
  KEY_PART_INFO *min_max_arg_part;QUICK_GROUP_MIN_MAX_SELECT::min_max_arg_part778,24746
  uint min_max_arg_len;QUICK_GROUP_MIN_MAX_SELECT::min_max_arg_len780,24906
  uchar *key_infix;QUICK_GROUP_MIN_MAX_SELECT::key_infix781,24978
  uint key_infix_len;QUICK_GROUP_MIN_MAX_SELECT::key_infix_len782,25055
  DYNAMIC_ARRAY min_max_ranges;QUICK_GROUP_MIN_MAX_SELECT::min_max_ranges783,25077
  uint real_prefix_len;QUICK_GROUP_MIN_MAX_SELECT::real_prefix_len784,25158
  uint real_key_parts;QUICK_GROUP_MIN_MAX_SELECT::real_key_parts785,25234
  List<Item_sum> *min_functions;QUICK_GROUP_MIN_MAX_SELECT::min_functions786,25310
  List<Item_sum> *max_functions;QUICK_GROUP_MIN_MAX_SELECT::max_functions787,25343
  List_iterator<Item_sum> *min_functions_it;QUICK_GROUP_MIN_MAX_SELECT::min_functions_it788,25376
  List_iterator<Item_sum> *max_functions_it;QUICK_GROUP_MIN_MAX_SELECT::max_functions_it789,25421
  bool is_index_scan;QUICK_GROUP_MIN_MAX_SELECT::is_index_scan794,25578
  MEM_ROOT alloc;QUICK_GROUP_MIN_MAX_SELECT::alloc800,25722
  QUICK_RANGE_SELECT *quick_prefix_select;QUICK_GROUP_MIN_MAX_SELECT::quick_prefix_select801,25797
  bool reverse_sorted(QUICK_GROUP_MIN_MAX_SELECT::reverse_sorted827,26828
  bool unique_key_range(QUICK_GROUP_MIN_MAX_SELECT::unique_key_range828,26870
  int get_type(QUICK_GROUP_MIN_MAX_SELECT::get_type829,26914
  bool is_agg_distinct(QUICK_GROUP_MIN_MAX_SELECT::is_agg_distinct834,27103
  virtual void append_loose_scan_type(QUICK_GROUP_MIN_MAX_SELECT::append_loose_scan_type835,27158
class QUICK_SELECT_DESC:QUICK_SELECT_DESC843,27297
  bool reverse_sorted(QUICK_SELECT_DESC::reverse_sorted848,27441
  int get_type(QUICK_SELECT_DESC::get_type849,27479
  QUICK_SELECT_I *make_reverse(QUICK_SELECT_DESC::make_reverse850,27527
  int reset(QUICK_SELECT_DESC::reset856,27696
  List<QUICK_RANGE> rev_ranges;QUICK_SELECT_DESC::rev_ranges857,27771
  List_iterator<QUICK_RANGE> rev_it;QUICK_SELECT_DESC::rev_it858,27803
  uint used_key_parts;QUICK_SELECT_DESC::used_key_parts859,27840
class SQL_SELECT 863,27868
  QUICK_SELECT_I *quick;SQL_SELECT::quick865,27914
  COND		*cond;SQL_SELECT::cond866,27963
  TABLE	*head;SQL_SELECT::head867,27998
  IO_CACHE file;SQL_SELECT::file868,28013
  ha_rows records;SQL_SELECT::records869,28060
  double read_time;SQL_SELECT::read_time870,28116
  key_map quick_keys;SQL_SELECT::quick_keys871,28158
  key_map needed_reg;SQL_SELECT::needed_reg872,28204
  table_map const_tables,SQL_SELECT::const_tables873,28269
  table_map const_tables,read_tables;SQL_SELECT::read_tables873,28269
  bool	free_cond;SQL_SELECT::free_cond874,28307
  void set_quick(SQL_SELECT::set_quick879,28377
  bool check_quick(SQL_SELECT::check_quick880,28457
  inline bool skip_record(SQL_SELECT::skip_record886,28642
class FT_SELECT:FT_SELECT896,28911
  FT_SELECT(FT_SELECT::FT_SELECT898,28964
  ~FT_SELECT(FT_SELECT::~FT_SELECT900,29077
  int init(FT_SELECT::init901,29112
  int reset(FT_SELECT::reset902,29159
  int get_next(FT_SELECT::get_next903,29187
  int get_type(FT_SELECT::get_type904,29244

sql/parse_file.h,1458
#define _PARSE_FILE_H_18,786
typedef struct st_mem_root MEM_ROOT;26,1003
#define PARSE_FILE_TIMESTAMPLENGTH 28,1041
enum file_opt_type 30,1080
  FILE_OPTIONS_STRING,file_opt_type::FILE_OPTIONS_STRING31,1101
  FILE_OPTIONS_ESTRING,file_opt_type::FILE_OPTIONS_ESTRING32,1153
  FILE_OPTIONS_ULONGLONG,file_opt_type::FILE_OPTIONS_ULONGLONG33,1214
  FILE_OPTIONS_TIMESTAMP,file_opt_type::FILE_OPTIONS_TIMESTAMP34,1280
  FILE_OPTIONS_STRLIST,file_opt_type::FILE_OPTIONS_STRLIST36,1386
  FILE_OPTIONS_ULLLIST file_opt_type::FILE_OPTIONS_ULLLIST38,1504
struct File_option42,1626
  LEX_STRING name;File_option::name44,1647
  int offset;File_option::offset45,1694
  file_opt_type type;File_option::type46,1750
class Unknown_key_hook55,1904
  Unknown_key_hook(Unknown_key_hook::Unknown_key_hook58,1937
  virtual ~Unknown_key_hook(Unknown_key_hook::~Unknown_key_hook59,2008
class File_parser_dummy_hook:File_parser_dummy_hook67,2300
  File_parser_dummy_hook(File_parser_dummy_hook::File_parser_dummy_hook70,2364
class File_parser:File_parser96,3392
  char *buff,File_parser::buff98,3430
  char *buff, *start,File_parser::start98,3430
  char *buff, *start, *end;File_parser::end98,3430
  LEX_STRING file_type;File_parser::file_type99,3458
  my_bool content_ok;File_parser::content_ok100,3482
  File_parser(File_parser::File_parser102,3512
  my_bool ok(File_parser::ok105,3618
  LEX_STRING *type(File_parser::type106,3656

sql/partition_element.h,2389
#define PARTITION_ELEMENT_INCLUDED2,35
enum partition_type 25,1026
  NOT_A_PARTITION=26,1048
  RANGE_PARTITION,27,1070
  HASH_PARTITION,28,1089
  LIST_PARTITION29,1107
enum partition_state 32,1128
  PART_NORMAL=33,1151
  PART_IS_DROPPED=34,1169
  PART_TO_BE_DROPPED=35,1191
  PART_TO_BE_ADDED=36,1216
  PART_TO_BE_REORGED=37,1239
  PART_REORGED_DROPPED=38,1264
  PART_CHANGED=39,1291
  PART_IS_CHANGED=40,1310
  PART_IS_ADDED=41,1332
  PART_ADMIN=42,1352
typedef struct p_column_list_val62,2216
  void* column_value;64,2251
  Item* item_expression;65,2273
  partition_info *part_info;part_info66,2298
  uint partition_id;67,2327
  bool max_value;68,2348
  bool null_value;69,2366
  char fixed;70,2385
} part_column_list_val;71,2399
typedef struct p_elem_val81,2619
  longlong value;83,2647
  uint added_items;84,2665
  bool null_value;85,2685
  bool unsigned_flag;86,2704
  part_column_list_val *col_val_array;col_val_array87,2726
} part_elem_value;88,2765
class partition_element 92,2818
  List<partition_element> subpartitions;partition_element::subpartitions94,2870
  List<part_elem_value> list_val_list;partition_element::list_val_list95,2911
  ha_rows part_max_rows;partition_element::part_max_rows96,2950
  ha_rows part_min_rows;partition_element::part_min_rows97,2975
  longlong range_value;partition_element::range_value98,3000
  char *partition_name;partition_element::partition_name99,3024
  char *tablespace_name;partition_element::tablespace_name100,3048
  struct st_ddl_log_memory_entry *log_entry;partition_element::log_entry101,3073
  char* part_comment;partition_element::part_comment102,3118
  char* data_file_name;partition_element::data_file_name103,3140
  char* index_file_name;partition_element::index_file_name104,3164
  handlerton *engine_type;partition_element::engine_type105,3189
  enum partition_state part_state;partition_element::part_state106,3216
  uint16 nodegroup_id;partition_element::nodegroup_id107,3251
  bool has_null_value;partition_element::has_null_value108,3274
  bool signed_flag;partition_element::signed_flag110,3363
  bool max_value;partition_element::max_value111,3383
  partition_element(partition_element::partition_element113,3402
  partition_element(partition_element::partition_element123,3774
  ~partition_element(partition_element::~partition_element137,4301

sql/partition_info.h,6208
#define PARTITION_INFO_INCLUDED2,32
typedef int (*get_part_id_func)get_part_id_func28,982
typedef int (*get_subpart_id_func)get_subpart_id_func31,1147
class partition_info 36,1297
  List<partition_element> partitions;partition_info::partitions42,1434
  List<partition_element> temp_partitions;partition_info::temp_partitions43,1472
  List<char> part_field_list;partition_info::part_field_list45,1516
  List<char> subpart_field_list;partition_info::subpart_field_list46,1546
  get_part_id_func get_partition_id;partition_info::get_partition_id53,1799
  get_part_id_func get_part_partition_id;partition_info::get_part_partition_id56,1901
  get_subpart_id_func get_subpartition_id;partition_info::get_subpartition_id65,2207
  get_part_id_func get_part_partition_id_charset;partition_info::get_part_partition_id_charset73,2484
  get_subpart_id_func get_subpartition_id_charset;partition_info::get_subpartition_id_charset74,2534
  Field **part_field_array;partition_info::part_field_array77,2657
  Field **subpart_field_array;partition_info::subpart_field_array78,2685
  Field **part_charset_field_array;partition_info::part_charset_field_array79,2716
  Field **subpart_charset_field_array;partition_info::subpart_charset_field_array80,2752
  Field **full_part_field_array;partition_info::full_part_field_array85,2914
  MY_BITMAP full_part_field_set;partition_info::full_part_field_set92,3214
  uchar **part_field_buffers;partition_info::part_field_buffers99,3445
  uchar **subpart_field_buffers;partition_info::subpart_field_buffers100,3475
  uchar **restore_part_field_ptrs;partition_info::restore_part_field_ptrs101,3508
  uchar **restore_subpart_field_ptrs;partition_info::restore_subpart_field_ptrs102,3543
  Item *part_expr;partition_info::part_expr104,3582
  Item *subpart_expr;partition_info::subpart_expr105,3601
  Item *item_free_list;partition_info::item_free_list107,3624
  struct st_ddl_log_memory_entry *first_log_entry;partition_info::first_log_entry109,3649
  struct st_ddl_log_memory_entry *exec_log_entry;partition_info::exec_log_entry110,3700
  struct st_ddl_log_memory_entry *frm_log_entry;partition_info::frm_log_entry111,3750
  MY_BITMAP used_partitions;partition_info::used_partitions121,4085
    longlong *range_int_array;partition_info::range_int_array124,4125
    LIST_PART_ENTRY *list_array;partition_info::list_array125,4156
    part_column_list_val *range_col_array;partition_info::range_col_array126,4189
    part_column_list_val *list_col_array;partition_info::list_col_array127,4232
  get_partitions_in_range_iter get_part_iter_for_interval;partition_info::get_part_iter_for_interval137,4556
  get_partitions_in_range_iter get_subpart_iter_for_interval;partition_info::get_subpart_iter_for_interval142,4771
  longlong err_value;partition_info::err_value148,4963
  char* part_info_string;partition_info::part_info_string149,4985
  char *part_func_string;partition_info::part_func_string151,5012
  char *subpart_func_string;partition_info::subpart_func_string152,5038
  partition_element *curr_part_elem;partition_info::curr_part_elem154,5068
  partition_element *current_partition;partition_info::current_partition155,5105
  part_elem_value *curr_list_val;partition_info::curr_list_val156,5145
  uint curr_list_object;partition_info::curr_list_object157,5179
  uint num_columns;partition_info::num_columns158,5204
  key_map all_fields_in_PF,partition_info::all_fields_in_PF165,5426
  key_map all_fields_in_PF, all_fields_in_PPF,partition_info::all_fields_in_PPF165,5426
  key_map all_fields_in_PF, all_fields_in_PPF, all_fields_in_SPF;partition_info::all_fields_in_SPF165,5426
  key_map some_fields_in_PF;partition_info::some_fields_in_PF166,5492
  handlerton *default_engine_type;partition_info::default_engine_type168,5522
  partition_type part_type;partition_info::part_type169,5557
  partition_type subpart_type;partition_info::subpart_type170,5585
  uint part_info_len;partition_info::part_info_len172,5617
  uint part_func_len;partition_info::part_func_len173,5639
  uint subpart_func_len;partition_info::subpart_func_len174,5661
  uint num_parts;partition_info::num_parts176,5687
  uint num_subparts;partition_info::num_subparts177,5705
  uint count_curr_subparts;partition_info::count_curr_subparts178,5726
  uint part_error_code;partition_info::part_error_code180,5755
  uint num_list_values;partition_info::num_list_values182,5780
  uint num_part_fields;partition_info::num_part_fields184,5805
  uint num_subpart_fields;partition_info::num_subpart_fields185,5829
  uint num_full_part_fields;partition_info::num_full_part_fields186,5856
  uint has_null_part_id;partition_info::has_null_part_id188,5886
  uint16 linear_hash_mask;partition_info::linear_hash_mask194,6115
  bool use_default_partitions;partition_info::use_default_partitions196,6143
  bool use_default_num_partitions;partition_info::use_default_num_partitions197,6174
  bool use_default_subpartitions;partition_info::use_default_subpartitions198,6209
  bool use_default_num_subpartitions;partition_info::use_default_num_subpartitions199,6243
  bool default_partitions_setup;partition_info::default_partitions_setup200,6281
  bool defined_max_value;partition_info::defined_max_value201,6314
  bool list_of_part_fields;partition_info::list_of_part_fields202,6340
  bool list_of_subpart_fields;partition_info::list_of_subpart_fields203,6368
  bool linear_hash_ind;partition_info::linear_hash_ind204,6399
  bool fixed;partition_info::fixed205,6423
  bool is_auto_partitioned;partition_info::is_auto_partitioned206,6437
  bool from_openfrm;partition_info::from_openfrm207,6465
  bool has_null_value;partition_info::has_null_value208,6486
  bool column_list;partition_info::column_list209,6509
  partition_info(partition_info::partition_info211,6530
  ~partition_info(partition_info::~partition_info252,8322
  bool is_sub_partitioned(partition_info::is_sub_partitioned256,8453
  uint get_tot_partitions(partition_info::get_tot_partitions262,8617
static inline void init_single_partition_iterator(317,11088
void init_all_partitions_iterator(328,11527

sql/procedure.h,2610
#define PROCEDURE_INCLUDED2,27
#define PROC_NO_SORT 34,1236
#define PROC_GROUP 35,1284
class Item_proc 39,1427
  Item_proc(Item_proc::Item_proc42,1466
  enum Type type(Item_proc::type46,1550
  void set(Item_proc::set51,1788
  void make_field(Item_proc::make_field52,1868
  unsigned int size_of(Item_proc::size_of56,1962
class Item_proc_real 59,2018
  double value;Item_proc_real::value61,2059
  Item_proc_real(Item_proc_real::Item_proc_real63,2083
  enum Item_result result_type Item_proc_real::result_type67,2210
  enum_field_types field_type(Item_proc_real::field_type68,2274
  void set(Item_proc_real::set69,2342
  void set(Item_proc_real::set70,2378
  void set(Item_proc_real::set71,2425
  double val_real(Item_proc_real::val_real77,2612
  longlong val_int(Item_proc_real::val_int78,2650
  String *val_str(Item_proc_real::val_str79,2700
  unsigned int size_of(Item_proc_real::size_of85,2843
class Item_proc_int 88,2897
  longlong value;Item_proc_int::value90,2937
  Item_proc_int(Item_proc_int::Item_proc_int92,2963
  enum Item_result result_type Item_proc_int::result_type94,3043
  enum_field_types field_type(Item_proc_int::field_type95,3106
  void set(Item_proc_int::set96,3176
  void set(Item_proc_int::set97,3223
  void set(Item_proc_int::set98,3261
  double val_real(Item_proc_int::val_real100,3381
  longlong val_int(Item_proc_int::val_int101,3428
  String *val_str(Item_proc_int::val_str102,3467
  unsigned int size_of(Item_proc_int::size_of104,3585
class Item_proc_string 108,3640
  Item_proc_string(Item_proc_string::Item_proc_string111,3691
  enum Item_result result_type Item_proc_string::result_type113,3798
  enum_field_types field_type(Item_proc_string::field_type114,3864
  void set(Item_proc_string::set115,3933
  void set(Item_proc_string::set116,4005
  void set(Item_proc_string::set117,4071
  double val_real(Item_proc_string::val_real119,4167
  longlong val_int(Item_proc_string::val_int127,4394
  String *val_str(Item_proc_string::val_str133,4555
  unsigned int size_of(Item_proc_string::size_of138,4691
class Procedure 143,4786
  List<Item> *fields;Procedure::fields145,4815
  select_result *result;Procedure::result146,4837
  const uint flags;Procedure::flags148,4870
  ORDER *group,Procedure::group149,4890
  ORDER *group,*param_fields;Procedure::param_fields149,4890
  Procedure(Procedure::Procedure150,4920
  virtual ~Procedure(Procedure::~Procedure152,5030
  virtual void update_refs(Procedure::update_refs157,5249
  virtual int end_of_records(Procedure::end_of_records158,5285

sql/protocol.h,2298
#define PROTOCOL_INCLUDED2,26
typedef struct st_mysql_field MYSQL_FIELD;30,1032
typedef struct st_mysql_rows MYSQL_ROWS;31,1075
class Protocol33,1117
  THD	 *thd;Protocol::thd36,1145
  String *packet;Protocol::packet37,1158
  String *convert;Protocol::convert38,1176
  uint field_pos;Protocol::field_pos39,1195
  enum enum_field_types *field_types;Protocol::field_types41,1230
  uint field_count;Protocol::field_count43,1275
  char **next_field;Protocol::next_field48,1448
  MYSQL_FIELD *next_mysql_field;Protocol::next_mysql_field49,1469
  MEM_ROOT *alloc;Protocol::alloc50,1502
  Protocol(Protocol::Protocol67,2159
  Protocol(Protocol::Protocol68,2175
  virtual ~Protocol(Protocol::~Protocol69,2219
  enum { SEND_NUM_ROWS=Protocol::SEND_NUM_ROWS72,2272
  enum { SEND_NUM_ROWS= 1, SEND_DEFAULTS=Protocol::SEND_DEFAULTS72,2272
  enum { SEND_NUM_ROWS= 1, SEND_DEFAULTS= 2, SEND_EOF=Protocol::SEND_EOF72,2272
  String *storage_packet(Protocol::storage_packet78,2547
  inline void free(Protocol::free79,2593
  inline  bool store(Protocol::store81,2658
  inline  bool store(Protocol::store83,2731
  inline  bool store(Protocol::store85,2807
  inline  bool store(Protocol::store87,2892
  inline bool store(Protocol::store89,2978
  virtual bool prepare_for_send(Protocol::prepare_for_send92,3083
  virtual void remove_last_row(Protocol::remove_last_row120,4194
  void remove_last_row(Protocol::remove_last_row122,4236
  enum enum_protocol_typeProtocol::enum_protocol_type124,4271
    PROTOCOL_TEXT=Protocol::enum_protocol_type::PROTOCOL_TEXT130,4429
    PROTOCOL_TEXT= 0, PROTOCOL_BINARY=Protocol::enum_protocol_type::PROTOCOL_BINARY130,4429
    PROTOCOL_TEXT= 0, PROTOCOL_BINARY= 1, PROTOCOL_LOCAL=Protocol::enum_protocol_type::PROTOCOL_LOCAL130,4429
class Protocol_text 140,4622
  Protocol_text(Protocol_text::Protocol_text143,4669
  Protocol_text(Protocol_text::Protocol_text144,4690
  virtual enum enum_protocol_type type(Protocol_text::type166,5652
class Protocol_binary 170,5725
  uint bit_fields;Protocol_binary::bit_fields173,5775
  Protocol_binary(Protocol_binary::Protocol_binary175,5802
  Protocol_binary(Protocol_binary::Protocol_binary176,5825
  virtual enum enum_protocol_type type(Protocol_binary::type201,6896

sql/records.h,1719
#define SQL_RECORDS_H 2,22
struct READ_RECORD43,1318
  typedef int (*Read_func)READ_RECORD::Read_func45,1339
  typedef void (*Unlock_row_func)READ_RECORD::Unlock_row_func46,1381
  typedef int (*Setup_func)READ_RECORD::Setup_func47,1433
  TABLE *table;READ_RECORD::table49,1486
  handler *file;READ_RECORD::file50,1550
  TABLE **forms;READ_RECORD::forms51,1567
  Unlock_row_func unlock_row;READ_RECORD::unlock_row52,1640
  Read_func read_record;READ_RECORD::read_record53,1670
  THD *thd;READ_RECORD::thd54,1695
  SQL_SELECT *select;READ_RECORD::select55,1707
  uint cache_records;READ_RECORD::cache_records56,1729
  uint ref_length,READ_RECORD::ref_length57,1751
  uint ref_length,struct_length,READ_RECORD::struct_length57,1751
  uint ref_length,struct_length,reclength,READ_RECORD::reclength57,1751
  uint ref_length,struct_length,reclength,rec_cache_size,READ_RECORD::rec_cache_size57,1751
  uint ref_length,struct_length,reclength,rec_cache_size,error_offset;READ_RECORD::error_offset57,1751
  uint index;READ_RECORD::index58,1822
  uchar *ref_pos;READ_RECORD::ref_pos59,1836
  uchar *record;READ_RECORD::record60,1887
  uchar *rec_buf;READ_RECORD::rec_buf61,1904
  uchar	*cache,READ_RECORD::cache62,1980
  uchar	*cache,*cache_pos,READ_RECORD::cache_pos62,1980
  uchar	*cache,*cache_pos,*cache_end,READ_RECORD::cache_end62,1980
  uchar	*cache,*cache_pos,*cache_end,*read_positions;READ_RECORD::read_positions62,1980
  struct st_io_cache *io_cache;READ_RECORD::io_cache63,2034
  bool print_error,READ_RECORD::print_error64,2066
  bool print_error, ignore_not_found_rows;READ_RECORD::ignore_not_found_rows64,2066
  READ_RECORD(READ_RECORD::READ_RECORD67,2118

sql/repl_failsafe.h,485
#define REPL_FAILSAFE_INCLUDED2,31
typedef enum {RPL_AUTH_MASTER=RPL_AUTH_MASTER25,892
typedef enum {RPL_AUTH_MASTER=0,RPL_IDLE_SLAVE,25,892
typedef enum {RPL_AUTH_MASTER=0,RPL_IDLE_SLAVE,RPL_ACTIVE_SLAVE,25,892
	      RPL_LOST_SOLDIER,26,957
	      RPL_LOST_SOLDIER,RPL_TROOP_SOLDIER,26,957
	      RPL_RECOVERY_CAPTAIN,27,1000
	      RPL_RECOVERY_CAPTAIN,RPL_NULL 27,1000
	      RPL_ANY 28,1053
	      RPL_ANY /* wild card used by change_rpl_status */ } RPL_STATUS;28,1053

sql/replication.h,2166
#define REPLICATION_H17,767
typedef struct st_mysql MYSQL;21,810
enum Trans_flags 30,920
  TRANS_IS_REAL_TRANS 32,982
typedef struct Trans_param 38,1053
  uint32 server_id;39,1082
  uint32 flags;40,1102
  const char *log_file;log_file49,1421
  my_off_t log_pos;50,1445
} Trans_param;51,1465
typedef struct Trans_observer 56,1534
  uint32 len;57,1566
  int (*after_commit)after_commit76,2071
  int (*after_rollback)after_rollback95,2601
} Trans_observer;96,2646
enum Binlog_storage_flags 101,2696
  BINLOG_STORAGE_IS_SYNCED 103,2756
typedef struct Binlog_storage_param 109,2837
  uint32 server_id;110,2875
} Binlog_storage_param;111,2895
typedef struct Binlog_storage_observer 116,2961
  uint32 len;117,3002
  int (*after_flush)after_flush134,3533
} Binlog_storage_observer;137,3680
typedef struct Binlog_transmit_param 142,3783
  uint32 server_id;143,3822
  uint32 flags;144,3842
} Binlog_transmit_param;145,3858
typedef struct Binlog_transmit_observer 150,3941
  uint32 len;151,3983
  int (*transmit_start)transmit_start164,4267
  int (*transmit_stop)transmit_stop175,4549
  int (*reserve_header)reserve_header195,5253
  int (*before_send_event)before_send_event212,5835
  int (*after_send_event)after_send_event226,6306
  int (*after_reset_master)after_reset_master240,6718
} Binlog_transmit_observer;241,6777
enum Binlog_relay_IO_flags 246,6838
  BINLOG_RELAY_IS_SYNCED 248,6905
typedef struct Binlog_relay_IO_param 255,6995
  uint32 server_id;256,7034
  char *host;host259,7090
  char *user;user260,7104
  unsigned int port;261,7118
  char *master_log_name;master_log_name263,7140
  my_off_t master_log_pos;264,7165
  MYSQL *mysql;mysql266,7193
} Binlog_relay_IO_param;267,7263
typedef struct Binlog_relay_IO_observer 272,7352
  uint32 len;273,7394
  int (*thread_start)thread_start283,7568
  int (*thread_stop)thread_stop293,7780
  int (*before_request_transmit)before_request_transmit307,8152
  int (*after_read_event)after_read_event321,8644
  int (*after_queue_event)after_queue_event336,9181
  int (*after_reset_slave)after_reset_slave348,9530
} Binlog_relay_IO_observer;349,9588

sql/rpl_constants.h,134
#define RPL_CONSTANTS_H18,785
enum Incident 23,881
  INCIDENT_NONE 25,918
  INCIDENT_LOST_EVENTS 28,1006
  INCIDENT_COUNT31,1083

sql/rpl_filter.h,1084
#define RPL_FILTER_H17,775
typedef struct st_dynamic_array DYNAMIC_ARRAY;25,970
typedef struct st_table_rule_ent27,1018
  char* db;st_table_rule_ent::db29,1053
  char* tbl_name;st_table_rule_ent::tbl_name30,1065
  uint key_len;st_table_rule_ent::key_len31,1083
} TABLE_RULE_ENT;32,1099
class Rpl_filter 41,1266
  bool table_rules_on;Rpl_filter::table_rules_on84,2348
  HASH do_table;Rpl_filter::do_table103,3056
  HASH ignore_table;Rpl_filter::ignore_table104,3073
  DYNAMIC_ARRAY wild_do_table;Rpl_filter::wild_do_table105,3094
  DYNAMIC_ARRAY wild_ignore_table;Rpl_filter::wild_ignore_table106,3125
  bool do_table_inited;Rpl_filter::do_table_inited108,3161
  bool ignore_table_inited;Rpl_filter::ignore_table_inited109,3185
  bool wild_do_table_inited;Rpl_filter::wild_do_table_inited110,3213
  bool wild_ignore_table_inited;Rpl_filter::wild_ignore_table_inited111,3242
  I_List<i_string> do_db;Rpl_filter::do_db113,3276
  I_List<i_string> ignore_db;Rpl_filter::ignore_db114,3302
  I_List<i_string_pair> rewrite_db;Rpl_filter::rewrite_db116,3333

sql/rpl_handler.h,1744
#define RPL_HANDLER_H17,767
class Observer_info 25,903
  void *observer;Observer_info::observer27,933
  st_plugin_int *plugin_int;Observer_info::plugin_int28,951
  plugin_ref plugin;Observer_info::plugin29,980
  Observer_info(Observer_info::Observer_info31,1002
class Delegate 38,1134
  typedef List<Observer_info> Observer_info_list;Delegate::Observer_info_list40,1159
  typedef List_iterator<Observer_info> Observer_info_iterator;Delegate::Observer_info_iterator41,1209
  int add_observer(Delegate::add_observer43,1275
  int remove_observer(Delegate::remove_observer65,1787
  inline Observer_info_iterator observer_info_iter(Delegate::observer_info_iter86,2206
  inline bool is_empty(Delegate::is_empty91,2323
  inline int read_lock(Delegate::read_lock96,2399
  inline int write_lock(Delegate::write_lock103,2498
  inline int unlock(Delegate::unlock110,2598
  inline bool is_inited(Delegate::is_inited117,2694
  Delegate(Delegate::Delegate122,2750
  ~Delegate(Delegate::~Delegate130,2898
  Observer_info_list observer_info_list;Delegate::observer_info_list138,3009
  rw_lock_t lock;Delegate::lock139,3050
  MEM_ROOT memroot;Delegate::memroot140,3068
  bool inited;Delegate::inited141,3088
class Trans_delegate144,3107
  typedef Trans_observer Observer;Trans_delegate::Observer147,3157
class Binlog_storage_delegate154,3362
  typedef Binlog_storage_observer Observer;Binlog_storage_delegate::Observer157,3421
class Binlog_transmit_delegate163,3593
  typedef Binlog_transmit_observer Observer;Binlog_transmit_delegate::Observer166,3653
class Binlog_relay_IO_delegate179,4207
  typedef Binlog_relay_IO_observer Observer;Binlog_relay_IO_delegate::Observer182,4267
#define RUN_HOOK(212,5366

sql/rpl_injector.h,2234
#define INJECTOR_H17,765
class injector 44,1571
    class transaction injector::transaction73,2246
      typedef uchar* record_type;injector::transaction::record_type77,2347
      typedef uint32 server_id_type;injector::transaction::server_id_type78,2381
      class table injector::transaction::table117,3681
        table(injector::transaction::table::table120,3722
        char const *db_name(injector::transaction::table::db_name125,3863
        char const *table_name(injector::transaction::table::table_name126,3930
        TABLE *get_table(injector::transaction::table::get_table127,4008
        bool is_transactional(injector::transaction::table::is_transactional128,4061
        TABLE *m_table;injector::transaction::table::m_table131,4146
        bool m_is_transactional;injector::transaction::table::m_is_transactional132,4170
      class binlog_pos injector::transaction::binlog_pos138,4271
        char const *file_name(injector::transaction::binlog_pos::file_name141,4344
        my_off_t file_pos(injector::transaction::binlog_pos::file_pos142,4406
        char const *m_file_name;injector::transaction::binlog_pos::m_file_name145,4479
        my_off_t m_file_pos;injector::transaction::binlog_pos::m_file_pos146,4512
      transaction(injector::transaction::transaction149,4551
      void clear(injector::transaction::clear154,4725
      bool good(injector::transaction::good157,4810
      transaction& operator=(injector::transaction::operator=160,4926
      void swap(injector::transaction::swap227,6981
      enum enum_stateinjector::transaction::enum_state248,7472
        START_STATE,injector::transaction::enum_state::START_STATE250,7502
        TABLE_STATE,injector::transaction::enum_state::TABLE_STATE251,7568
        ROW_STATE,injector::transaction::enum_state::ROW_STATE252,7639
        STATE_COUNT injector::transaction::enum_state::STATE_COUNT253,7710
      } m_state;injector::transaction::m_state254,7777
      int check_state(injector::transaction::check_state286,8658
      binlog_pos m_start_pos;injector::transaction::m_start_pos306,9244
      THD *m_thd;injector::transaction::m_thd307,9274
    ~injector(injector::~injector331,10107

sql/rpl_mi.h,2345
#define RPL_MI_H17,762
typedef struct st_mysql MYSQL;25,874
class Master_info 59,1862
  char master_log_name[Master_info::master_log_name68,2147
  char host[Master_info::host69,2182
  char user[Master_info::user70,2214
  char password[Master_info::password71,2246
  my_bool ssl;Master_info::ssl72,2286
  char ssl_ca[Master_info::ssl_ca73,2342
  char ssl_ca[FN_REFLEN], ssl_capath[Master_info::ssl_capath73,2342
  char ssl_ca[FN_REFLEN], ssl_capath[FN_REFLEN], ssl_cert[Master_info::ssl_cert73,2342
  char ssl_cipher[Master_info::ssl_cipher74,2412
  char ssl_cipher[FN_REFLEN], ssl_key[Master_info::ssl_key74,2412
  my_bool ssl_verify_server_cert;Master_info::ssl_verify_server_cert75,2462
  my_off_t master_log_pos;Master_info::master_log_pos77,2497
  File fd;Master_info::fd78,2524
  IO_CACHE file;Master_info::file79,2601
  mysql_mutex_t data_lock,Master_info::data_lock81,2619
  mysql_mutex_t data_lock, run_lock,Master_info::run_lock81,2619
  mysql_mutex_t data_lock, run_lock, sleep_lock;Master_info::sleep_lock81,2619
  mysql_cond_t data_cond,Master_info::data_cond82,2668
  mysql_cond_t data_cond, start_cond,Master_info::start_cond82,2668
  mysql_cond_t data_cond, start_cond, stop_cond,Master_info::stop_cond82,2668
  mysql_cond_t data_cond, start_cond, stop_cond, sleep_cond;Master_info::sleep_cond82,2668
  THD *io_thd;Master_info::io_thd83,2729
  MYSQL* mysql;Master_info::mysql84,2744
  uint32 file_id;Master_info::file_id85,2760
  Relay_log_info rli;Master_info::rli86,2813
  uint port;Master_info::port87,2835
  uint connect_retry;Master_info::connect_retry88,2848
  int events_till_disconnect;Master_info::events_till_disconnect90,2887
  bool inited;Master_info::inited92,2924
  volatile bool abort_slave;Master_info::abort_slave93,2939
  volatile uint slave_running;Master_info::slave_running94,2968
  volatile ulong slave_run_id;Master_info::slave_run_id95,2999
  long clock_diff_with_master;Master_info::clock_diff_with_master105,3498
  uint sync_counter;Master_info::sync_counter111,3692
  float heartbeat_period;Master_info::heartbeat_period112,3713
  ulonglong received_heartbeats;Master_info::received_heartbeats113,3794
  DYNAMIC_ARRAY ignore_server_ids;Master_info::ignore_server_ids114,3868
  ulong master_id;Master_info::master_id115,3903

sql/rpl_record.h,71
#define RPL_RECORD_H17,766
typedef struct st_bitmap MY_BITMAP;24,912

sql/rpl_record_old.h,32
#define RPL_RECORD_OLD_H17,770

sql/rpl_reporting.h,811
#define RPL_REPORTING_H17,770
#define MAX_SLAVE_ERRMSG 24,924
class Slave_reporting_capability33,1175
  mutable mysql_mutex_t err_lock;Slave_reporting_capability::err_lock37,1289
  void clear_error(Slave_reporting_capability::clear_error62,2082
  class Error Slave_reporting_capability::Error71,2250
    Error(Slave_reporting_capability::Error::Error74,2321
    void clear(Slave_reporting_capability::Error::clear79,2361
    uint32 number;Slave_reporting_capability::Error::number86,2454
    char message[Slave_reporting_capability::Error::message88,2498
  Error const& last_error(Slave_reporting_capability::last_error91,2540
  mutable Error m_last_error;Slave_reporting_capability::m_last_error98,2729
  char const *const m_thread_name;Slave_reporting_capability::m_thread_name100,2760

sql/rpl_rli.h,7078
#define RPL_RLI_H17,763
class Relay_log_info 55,1805
  enum enum_state_flag Relay_log_info::enum_state_flag61,1929
    IN_STMT,Relay_log_info::enum_state_flag::IN_STMT63,2010
    STATE_FLAGS_COUNTRelay_log_info::enum_state_flag::STATE_FLAGS_COUNT66,2072
  bool no_storage;Relay_log_info::no_storage74,2286
  bool replicate_same_server_id;Relay_log_info::replicate_same_server_id83,2665
  File info_fd,Relay_log_info::info_fd92,2972
  File info_fd,cur_log_fd;Relay_log_info::cur_log_fd92,2972
  MYSQL_BIN_LOG relay_log;Relay_log_info::relay_log98,3093
  LOG_INFO linfo;Relay_log_info::linfo99,3120
  IO_CACHE cache_buf,Relay_log_info::cache_buf110,3399
  IO_CACHE cache_buf,*cur_log;Relay_log_info::cur_log110,3399
  uint sync_counter;Relay_log_info::sync_counter117,3624
  bool is_relay_log_recovery;Relay_log_info::is_relay_log_recovery123,3767
  IO_CACHE info_file;Relay_log_info::info_file128,3921
  TABLE *save_temporary_tables;Relay_log_info::save_temporary_tables135,4136
  mysql_mutex_t data_lock,Relay_log_info::data_lock141,4301
  mysql_mutex_t data_lock, run_lock,Relay_log_info::run_lock141,4301
  mysql_mutex_t data_lock, run_lock, sleep_lock;Relay_log_info::sleep_lock141,4301
  mysql_cond_t start_cond,Relay_log_info::start_cond147,4501
  mysql_cond_t start_cond, stop_cond,Relay_log_info::stop_cond147,4501
  mysql_cond_t start_cond, stop_cond, data_cond,Relay_log_info::data_cond147,4501
  mysql_cond_t start_cond, stop_cond, data_cond, sleep_cond;Relay_log_info::sleep_cond147,4501
  Master_info *mi;Relay_log_info::mi149,4599
  uint32 cur_log_old_open_count;Relay_log_info::cur_log_old_open_count155,4739
  char group_relay_log_name[Relay_log_info::group_relay_log_name175,5657
  ulonglong group_relay_log_pos;Relay_log_info::group_relay_log_pos176,5697
  char event_relay_log_name[Relay_log_info::event_relay_log_name177,5730
  ulonglong event_relay_log_pos;Relay_log_info::event_relay_log_pos178,5770
  ulonglong future_event_relay_log_pos;Relay_log_info::future_event_relay_log_pos179,5803
  bool is_fake;Relay_log_info::is_fake182,5863
  char group_master_log_name[Relay_log_info::group_master_log_name192,6283
  volatile my_off_t group_master_log_pos;Relay_log_info::group_master_log_pos193,6324
  ulonglong log_space_limit,Relay_log_info::log_space_limit201,6636
  ulonglong log_space_limit,log_space_total;Relay_log_info::log_space_total201,6636
  bool ignore_log_space_limit;Relay_log_info::ignore_log_space_limit202,6681
  bool sql_force_rotate_relay;Relay_log_info::sql_force_rotate_relay209,6869
  ulonglong future_master_log_pos;Relay_log_info::future_master_log_pos218,7177
  ulonglong future_group_master_log_pos;Relay_log_info::future_group_master_log_pos220,7218
  time_t last_master_timestamp;Relay_log_info::last_master_timestamp223,7267
  volatile uint32 slave_skip_counter;Relay_log_info::slave_skip_counter232,7536
  volatile ulong abort_pos_wait;Relay_log_info::abort_pos_wait233,7574
  volatile ulong slave_run_id;Relay_log_info::slave_run_id234,7642
  mysql_mutex_t log_space_lock;Relay_log_info::log_space_lock235,7707
  mysql_cond_t log_space_cond;Relay_log_info::log_space_cond236,7739
  THD * sql_thd;Relay_log_info::sql_thd237,7770
  int events_till_abort;Relay_log_info::events_till_abort239,7804
  volatile bool inited;Relay_log_info::inited249,8161
  volatile bool abort_slave;Relay_log_info::abort_slave250,8185
  volatile uint slave_running;Relay_log_info::slave_running251,8214
  enum {UNTIL_NONE=Relay_log_info::UNTIL_NONE264,8741
  enum {UNTIL_NONE= 0, UNTIL_MASTER_POS,Relay_log_info::UNTIL_MASTER_POS264,8741
  enum {UNTIL_NONE= 0, UNTIL_MASTER_POS, UNTIL_RELAY_POS}Relay_log_info::UNTIL_RELAY_POS264,8741
  char until_log_name[Relay_log_info::until_log_name265,8816
  ulonglong until_log_pos;Relay_log_info::until_log_pos266,8850
  ulong until_log_name_extension;Relay_log_info::until_log_name_extension268,8940
    UNTIL_LOG_NAMES_CMP_UNKNOWN=Relay_log_info::UNTIL_LOG_NAMES_CMP_UNKNOWN275,9130
    UNTIL_LOG_NAMES_CMP_UNKNOWN= -2, UNTIL_LOG_NAMES_CMP_LESS=Relay_log_info::UNTIL_LOG_NAMES_CMP_LESS275,9130
    UNTIL_LOG_NAMES_CMP_EQUAL=Relay_log_info::UNTIL_LOG_NAMES_CMP_EQUAL276,9197
    UNTIL_LOG_NAMES_CMP_EQUAL= 0, UNTIL_LOG_NAMES_CMP_GREATER=Relay_log_info::UNTIL_LOG_NAMES_CMP_GREATER276,9197
  char cached_charset[Relay_log_info::cached_charset279,9295
  ulong trans_retries,Relay_log_info::trans_retries287,9656
  ulong trans_retries, retried_trans;Relay_log_info::retried_trans287,9656
  char ign_master_log_name_end[Relay_log_info::ign_master_log_name_end297,10100
  ulonglong ign_master_log_pos_end;Relay_log_info::ign_master_log_pos_end298,10143
  char slave_patternload_file[Relay_log_info::slave_patternload_file304,10325
  size_t slave_patternload_file_size;Relay_log_info::slave_patternload_file_size305,10368
  inline void notify_group_relay_log_name_update(Relay_log_info::notify_group_relay_log_name_update315,10676
  inline void notify_group_master_log_name_update(Relay_log_info::notify_group_master_log_name_update324,10908
  inline void inc_event_relay_log_pos(Relay_log_info::inc_event_relay_log_pos330,11077
  inline ulonglong until_pos(Relay_log_info::until_pos344,11505
  RPL_TABLE_LIST *tables_to_lock;Relay_log_info::tables_to_lock350,11647
  uint tables_to_lock_count;Relay_log_info::tables_to_lock_count351,11718
  table_mapping m_table_map;Relay_log_info::m_table_map352,11789
  bool get_table_data(Relay_log_info::get_table_data354,11861
  time_t last_event_start_time;Relay_log_info::last_event_start_time389,13276
  Deferred_log_events *deferred_events;Relay_log_info::deferred_events397,13556
  bool deferred_events_collecting;Relay_log_info::deferred_events_collecting403,13731
  bool is_deferred_event(Relay_log_info::is_deferred_event409,13920
  inline void cleanup_after_query(Relay_log_info::cleanup_after_query414,14125
  void cleanup_after_session(Relay_log_info::cleanup_after_session420,14307
  void set_flag(Relay_log_info::set_flag453,15296
  bool get_flag(Relay_log_info::get_flag465,15535
  void clear_flag(Relay_log_info::clear_flag475,15712
  bool is_in_group(Relay_log_info::is_in_group490,16168
  time_t get_row_stmt_start_timestamp(Relay_log_info::get_row_stmt_start_timestamp495,16300
  time_t set_row_stmt_start_timestamp(Relay_log_info::set_row_stmt_start_timestamp500,16386
  void reset_row_stmt_start_timestamp(Relay_log_info::reset_row_stmt_start_timestamp508,16556
  void set_long_find_row_note_printed(Relay_log_info::set_long_find_row_note_printed513,16638
  void unset_long_find_row_note_printed(Relay_log_info::unset_long_find_row_note_printed518,16725
  bool is_long_find_row_note_printed(Relay_log_info::is_long_find_row_note_printed523,16815
  uint32 m_flags;Relay_log_info::m_flags530,16912
  time_t row_stmt_start_timestamp;Relay_log_info::row_stmt_start_timestamp536,17044
  bool long_find_row_note_printed;Relay_log_info::long_find_row_note_printed537,17079

sql/rpl_tblmap.h,866
#define TABLE_MAPPING_H17,769
typedef Table_map_log_event TABLE;24,889
class table_mapping 57,1998
  MEM_ROOT m_mem_root;table_mapping::m_mem_root60,2030
  enum enum_error table_mapping::enum_error64,2063
      ERR_NO_ERROR table_mapping::enum_error::ERR_NO_ERROR65,2083
      ERR_LIMIT_EXCEEDED,table_mapping::enum_error::ERR_LIMIT_EXCEEDED66,2107
      ERR_MEMORY_ALLOCATIONtable_mapping::enum_error::ERR_MEMORY_ALLOCATION67,2133
  ulong     count(table_mapping::count78,2367
  struct entry table_mapping::entry85,2558
    ulong table_id;table_mapping::entry::table_id86,2576
      TABLE *table;table_mapping::entry::table88,2608
      entry *next;table_mapping::entry::next89,2628
  entry *find_entry(table_mapping::find_entry93,2660
  entry *m_free;table_mapping::m_free106,3041
  HASH m_table_ids;table_mapping::m_table_ids109,3126

sql/rpl_utility.h,1395
#define RPL_UTILITY_H17,768
class table_def42,1381
  ulong size(table_def::size64,2014
  enum_field_types type(table_def::type76,2322
  uint16 field_metadata(table_def::field_metadata125,3974
  my_bool maybe_null(table_def::maybe_null138,4285
  ulong m_size;table_def::m_size211,6909
  unsigned char *m_type;table_def::m_type212,6976
  uint m_field_metadata_size;table_def::m_field_metadata_size213,7031
  uint16 *m_field_metadata;table_def::m_field_metadata214,7061
  uchar *m_null_bits;table_def::m_null_bits215,7089
  uint16 m_flags;table_def::m_flags216,7111
  uchar *m_memory;table_def::m_memory217,7152
struct RPL_TABLE_LIST226,7308
  bool m_tabledef_valid;RPL_TABLE_LIST::m_tabledef_valid229,7354
  table_def m_tabledef;RPL_TABLE_LIST::m_tabledef230,7379
  TABLE *m_conv_table;RPL_TABLE_LIST::m_conv_table231,7403
  class auto_afree_ptr249,7962
    Obj* m_ptr;auto_afree_ptr::m_ptr251,7989
    auto_afree_ptr(auto_afree_ptr::auto_afree_ptr253,8015
    ~auto_afree_ptr(auto_afree_ptr::~auto_afree_ptr254,8061
    void assign(auto_afree_ptr::assign255,8115
    Obj* get(auto_afree_ptr::get260,8271
class Deferred_log_events265,8330
  DYNAMIC_ARRAY array;Deferred_log_events::array268,8367
  Log_event *last_added;Deferred_log_events::last_added269,8390
  bool is_last(Deferred_log_events::is_last279,8660
#define DBUG_PRINT_BITSET(285,8798

sql/scheduler.h,516
#define SCHEDULER_INCLUDED2,27
struct scheduler_functions31,956
  uint max_threads;scheduler_functions::max_threads33,985
enum scheduler_types58,1838
  SCHEDULER_ONE_THREAD_PER_CONNECTION=scheduler_types::SCHEDULER_ONE_THREAD_PER_CONNECTION67,2163
  SCHEDULER_NO_THREADS,scheduler_types::SCHEDULER_NO_THREADS68,2204
  SCHEDULER_TYPES_COUNTscheduler_types::SCHEDULER_TYPES_COUNT69,2228
class thd_scheduler78,2410
  PSI_thread *m_psi;thd_scheduler::m_psi91,2802
  void *data;thd_scheduler::data93,2824

sql/set_var.h,4247
#define SET_VAR_INCLUDED2,25
struct sys_var_chain41,1322
  sys_var *first;sys_var_chain::first43,1345
  sys_var *last;sys_var_chain::last44,1363
class sys_var57,1803
  sys_var *next;sys_var::next60,1827
  LEX_CSTRING name;sys_var::name61,1844
  enum flag_enum sys_var::flag_enum62,1864
  enum flag_enum { GLOBAL,sys_var::flag_enum::GLOBAL62,1864
  enum flag_enum { GLOBAL, SESSION,sys_var::flag_enum::SESSION62,1864
  enum flag_enum { GLOBAL, SESSION, ONLY_SESSION,sys_var::flag_enum::ONLY_SESSION62,1864
  enum flag_enum { GLOBAL, SESSION, ONLY_SESSION, SCOPE_MASK=sys_var::flag_enum::SCOPE_MASK62,1864
                   READONLY=sys_var::flag_enum::READONLY63,1931
                   READONLY=1024, ALLOCATED=sys_var::flag_enum::ALLOCATED63,1931
  static const int PARSE_EARLY=sys_var::PARSE_EARLY64,1983
  static const int PARSE_NORMAL=sys_var::PARSE_NORMAL65,2018
  enum binlog_status_enum sys_var::binlog_status_enum70,2177
  enum binlog_status_enum { VARIABLE_NOT_IN_BINLOG,sys_var::binlog_status_enum::VARIABLE_NOT_IN_BINLOG70,2177
                            SESSION_VARIABLE_IN_BINLOG sys_var::binlog_status_enum::SESSION_VARIABLE_IN_BINLOG71,2229
                            SESSION_VARIABLE_IN_BINLOG } binlog_status;sys_var::binlog_status71,2229
  typedef bool (*on_check_function)sys_var::on_check_function74,2313
  typedef bool (*on_update_function)sys_var::on_update_function75,2389
  int flags;sys_var::flags77,2473
  int m_parse_flag;sys_var::m_parse_flag78,2525
  const SHOW_TYPE show_val_type;sys_var::show_val_type79,2590
  my_option option;sys_var::option80,2669
  PolyLock *guard;sys_var::guard81,2739
  ptrdiff_t offset;sys_var::offset82,2809
  on_check_function on_check;sys_var::on_check83,2887
  on_update_function on_update;sys_var::on_update84,2917
  const char *const deprecation_substitute;sys_var::deprecation_substitute85,2949
  bool is_os_charset;sys_var::is_os_charset86,2993
  virtual ~sys_var(sys_var::~sys_var96,3503
  virtual void cleanup(sys_var::cleanup101,3595
  virtual sys_var_pluginvar *cast_pluginvar(sys_var::cast_pluginvar106,3746
  SHOW_TYPE show_type(sys_var::show_type113,4003
  int scope(sys_var::scope114,4053
  bool is_readonly(sys_var::is_readonly116,4139
  bool is_struct(sys_var::is_struct121,4319
  bool is_written_to_binlog(sys_var::is_written_to_binlog122,4381
  bool check_type(sys_var::check_type125,4565
  bool register_option(sys_var::register_option135,4829
  uchar *session_var_ptr(sys_var::session_var_ptr168,6044
  uchar *global_var_ptr(sys_var::global_var_ptr171,6131
class set_var_base 186,6697
  set_var_base(set_var_base::set_var_base189,6744
  virtual ~set_var_base(set_var_base::~set_var_base190,6764
  virtual int light_check(set_var_base::light_check193,6941
class set_var 200,7094
  sys_var *var;set_var::var203,7139
  Item *value;set_var::value204,7190
  enum_var_type type;set_var::type205,7270
    ulonglong ulonglong_value;set_var::ulonglong_value208,7374
    double double_value;set_var::double_value209,7454
    plugin_ref plugin;set_var::plugin210,7518
    Time_zone *time_zone;set_var::time_zone211,7582
    LEX_STRING string_value;set_var::string_value212,7642
    void *ptr;set_var::ptr213,7718
  } save_result;set_var::save_result214,7782
  LEX_STRING base;set_var::base215,7799
  set_var(set_var::set_var217,7886
class set_var_user:set_var_user243,8733
  Item_func_set_user_var *user_var_item;set_var_user::user_var_item245,8775
  set_var_user(set_var_user::set_var_user247,8824
class set_var_password:set_var_password257,9003
  LEX_USER *user;set_var_password::user259,9049
  char *password;set_var_password::password260,9067
  set_var_password(set_var_password::set_var_password262,9093
class set_var_collation_client:set_var_collation_client272,9295
  CHARSET_INFO *character_set_client;set_var_collation_client::character_set_client274,9349
  CHARSET_INFO *character_set_results;set_var_collation_client::character_set_results275,9387
  CHARSET_INFO *collation_connection;set_var_collation_client::collation_connection276,9426
  set_var_collation_client(set_var_collation_client::set_var_collation_client278,9472

sql/slave.h,415
#define SLAVE_H17,761
#define SLAVE_MAX_HEARTBEAT_PERIOD 34,1014
#define SLAVE_NET_TIMEOUT 43,1170
#define MAX_SLAVE_ERROR 45,1203
#define MYSQL_SLAVE_NOT_RUN 132,4891
#define MYSQL_SLAVE_RUN_NOT_CONNECT 133,4929
#define MYSQL_SLAVE_RUN_CONNECT 134,4967
#define RPL_LOG_NAME 136,5006
#define IO_RPL_LOG_NAME 138,5100
#define SLAVE_FORCE_ALL 145,5302
#define SLAVE_IO 237,9067
#define SLAVE_SQL 238,9087

sql/spatial.h,5818
#define _spatial_h17,764
const uint SRID_SIZE=26,928
const uint SIZEOF_STORED_DOUBLE=27,953
const uint POINT_DATA_SIZE=28,989
const uint WKB_HEADER_SIZE=29,1042
const uint32 GET_SIZE_ERROR=30,1075
struct st_point_2d32,1120
  double x;st_point_2d::x34,1141
  double y;st_point_2d::y35,1153
struct st_linear_ring38,1169
  uint32 n_points;st_linear_ring::n_points40,1193
  st_point_2d points;st_linear_ring::points41,1212
struct MBR52,1403
  double xmin,MBR::xmin54,1416
  double xmin, ymin,MBR::ymin54,1416
  double xmin, ymin, xmax,MBR::xmax54,1416
  double xmin, ymin, xmax, ymax;MBR::ymax54,1416
  MBR(MBR::MBR56,1450
  MBR(MBR::MBR62,1518
  MBR(MBR::MBR67,1696
  inline void add_xy(MBR::add_xy71,1813
  void add_xy(MBR::add_xy83,2058
  void add_mbr(MBR::add_mbr90,2190
  int equals(MBR::equals102,2426
  int disjoint(MBR::disjoint109,2639
  int intersects(MBR::intersects116,2850
  int touches(MBR::touches121,2919
  int within(MBR::within132,3367
  int contains(MBR::contains139,3580
  bool inner_point(MBR::inner_point146,3795
  int dimension(MBR::dimension159,4124
  int overlaps(MBR::overlaps176,4338
class Geometry200,4950
  Geometry(Geometry::Geometry203,4975
  virtual ~Geometry(Geometry::~Geometry204,5046
  static void *operator new(Geometry::operator new205,5119
  static void operator delete(Geometry::operator delete210,5202
  static void operator delete(Geometry::operator delete213,5263
  static String bad_geometry_data;Geometry::bad_geometry_data216,5313
  enum wkbTypeGeometry::wkbType218,5349
    wkb_point=Geometry::wkbType::wkb_point220,5368
    wkb_linestring=Geometry::wkbType::wkb_linestring221,5386
    wkb_polygon=Geometry::wkbType::wkb_polygon222,5409
    wkb_multipoint=Geometry::wkbType::wkb_multipoint223,5429
    wkb_multilinestring=Geometry::wkbType::wkb_multilinestring224,5452
    wkb_multipolygon=Geometry::wkbType::wkb_multipolygon225,5480
    wkb_geometrycollection=Geometry::wkbType::wkb_geometrycollection226,5505
    wkb_last=Geometry::wkbType::wkb_last227,5536
  enum wkbByteOrderGeometry::wkbByteOrder229,5556
    wkb_xdr=Geometry::wkbByteOrder::wkb_xdr231,5580
    wkb_ndr=Geometry::wkbByteOrder::wkb_ndr232,5616
  typedef Geometry *(*create_geom_t)Geometry::create_geom_t236,5739
  class Class_infoGeometry::Class_info238,5786
    LEX_STRING m_name;Geometry::Class_info::m_name241,5819
    int m_type_id;Geometry::Class_info::m_type_id242,5842
    create_geom_t m_create_func;Geometry::Class_info::m_create_func243,5861
  virtual int get_x(Geometry::get_x257,6504
  virtual int get_y(Geometry::get_y258,6556
  virtual int geom_length(Geometry::geom_length259,6608
  virtual int area(Geometry::area260,6669
  virtual int is_closed(Geometry::is_closed261,6738
  virtual int num_interior_ring(Geometry::num_interior_ring262,6796
  virtual int num_points(Geometry::num_points263,6870
  virtual int num_geometries(Geometry::num_geometries264,6934
  virtual int start_point(Geometry::start_point265,6997
  virtual int end_point(Geometry::end_point266,7059
  virtual int exterior_ring(Geometry::exterior_ring267,7119
  virtual int centroid(Geometry::centroid268,7182
  virtual int point_n(Geometry::point_n269,7241
  virtual int interior_ring_n(Geometry::interior_ring_n270,7312
  virtual int geometry_n(Geometry::geometry_n271,7391
  int as_wkt(Geometry::as_wkt283,7938
  inline void set_data_ptr(Geometry::set_data_ptr296,8269
  inline void shift_wkb_header(Geometry::shift_wkb_header302,8391
  static Class_info *ci_collection[Geometry::ci_collection308,8502
  static Class_info *find_class(Geometry::find_class311,8562
  inline bool no_data(Geometry::no_data324,9093
  const char *m_data;Geometry::m_data328,9221
  const char *m_data_end;Geometry::m_data_end329,9243
class Gis_point:Gis_point335,9346
  Gis_point(Gis_point::Gis_point338,9389
  virtual ~Gis_point(Gis_point::~Gis_point339,9460
  int get_xy(Gis_point::get_xy346,9813
  int get_x(Gis_point::get_x356,10045
  int get_y(Gis_point::get_y364,10187
  bool dimension(Gis_point::dimension372,10376
class Gis_line_string:Gis_line_string384,10628
  static const uint32 max_n_points=Gis_line_string::max_n_points387,10738
  Gis_line_string(Gis_line_string::Gis_line_string391,10868
  virtual ~Gis_line_string(Gis_line_string::~Gis_line_string392,10939
  bool dimension(Gis_line_string::dimension404,11530
class Gis_polygon:Gis_polygon416,11779
  Gis_polygon(Gis_polygon::Gis_polygon419,11824
  virtual ~Gis_polygon(Gis_polygon::~Gis_polygon420,11895
  bool dimension(Gis_polygon::dimension432,12530
class Gis_multi_point:Gis_multi_point444,12782
  static const uint32 max_n_points=Gis_multi_point::max_n_points447,12892
  Gis_multi_point(Gis_multi_point::Gis_multi_point451,13042
  virtual ~Gis_multi_point(Gis_multi_point::~Gis_multi_point452,13113
  bool dimension(Gis_multi_point::dimension460,13556
class Gis_multi_line_string:Gis_multi_line_string472,13813
  Gis_multi_line_string(Gis_multi_line_string::Gis_multi_line_string475,13868
  virtual ~Gis_multi_line_string(Gis_multi_line_string::~Gis_multi_line_string476,13939
  bool dimension(Gis_multi_line_string::dimension486,14456
class Gis_multi_polygon:Gis_multi_polygon498,14710
  Gis_multi_polygon(Gis_multi_polygon::Gis_multi_polygon501,14761
  virtual ~Gis_multi_polygon(Gis_multi_polygon::~Gis_multi_polygon502,14832
  bool dimension(Gis_multi_polygon::dimension512,15361
class Gis_geometry_collection:Gis_geometry_collection524,15615
  Gis_geometry_collection(Gis_geometry_collection::Gis_geometry_collection527,15672
  virtual ~Gis_geometry_collection(Gis_geometry_collection::~Gis_geometry_collection528,15743
struct Geometry_buffer 540,16289

sql/sp_cache.h,28
#define _SP_CACHE_H_18,784

sql/sp.h,2236
#define _SP_H_18,778
typedef struct st_hash HASH;36,1117
#define SP_DEFAULT_ACCESS_MAPPING 41,1243
#define SP_OK 44,1354
#define SP_KEY_NOT_FOUND 45,1386
#define SP_OPEN_TABLE_FAILED 46,1418
#define SP_WRITE_ROW_FAILED 47,1450
#define SP_DELETE_ROW_FAILED 48,1482
#define SP_GET_FIELD_FAILED 49,1514
#define SP_PARSE_ERROR 50,1546
#define SP_INTERNAL_ERROR 51,1578
#define SP_NO_DB_ERROR 52,1610
#define SP_BAD_IDENTIFIER 53,1642
#define SP_BODY_TOO_LONG 54,1674
#define SP_FLD_STORE_FAILED 55,1706
  MYSQL_PROC_FIELD_DB ::MYSQL_PROC_FIELD_DB60,1798
  MYSQL_PROC_FIELD_NAME,::MYSQL_PROC_FIELD_NAME61,1825
  MYSQL_PROC_MYSQL_TYPE,::MYSQL_PROC_MYSQL_TYPE62,1850
  MYSQL_PROC_FIELD_SPECIFIC_NAME,::MYSQL_PROC_FIELD_SPECIFIC_NAME63,1875
  MYSQL_PROC_FIELD_LANGUAGE,::MYSQL_PROC_FIELD_LANGUAGE64,1909
  MYSQL_PROC_FIELD_ACCESS,::MYSQL_PROC_FIELD_ACCESS65,1938
  MYSQL_PROC_FIELD_DETERMINISTIC,::MYSQL_PROC_FIELD_DETERMINISTIC66,1965
  MYSQL_PROC_FIELD_SECURITY_TYPE,::MYSQL_PROC_FIELD_SECURITY_TYPE67,1999
  MYSQL_PROC_FIELD_PARAM_LIST,::MYSQL_PROC_FIELD_PARAM_LIST68,2033
  MYSQL_PROC_FIELD_RETURNS,::MYSQL_PROC_FIELD_RETURNS69,2064
  MYSQL_PROC_FIELD_BODY,::MYSQL_PROC_FIELD_BODY70,2092
  MYSQL_PROC_FIELD_DEFINER,::MYSQL_PROC_FIELD_DEFINER71,2117
  MYSQL_PROC_FIELD_CREATED,::MYSQL_PROC_FIELD_CREATED72,2145
  MYSQL_PROC_FIELD_MODIFIED,::MYSQL_PROC_FIELD_MODIFIED73,2173
  MYSQL_PROC_FIELD_SQL_MODE,::MYSQL_PROC_FIELD_SQL_MODE74,2202
  MYSQL_PROC_FIELD_COMMENT,::MYSQL_PROC_FIELD_COMMENT75,2231
  MYSQL_PROC_FIELD_CHARACTER_SET_CLIENT,::MYSQL_PROC_FIELD_CHARACTER_SET_CLIENT76,2259
  MYSQL_PROC_FIELD_COLLATION_CONNECTION,::MYSQL_PROC_FIELD_COLLATION_CONNECTION77,2300
  MYSQL_PROC_FIELD_DB_COLLATION,::MYSQL_PROC_FIELD_DB_COLLATION78,2341
  MYSQL_PROC_FIELD_BODY_UTF8,::MYSQL_PROC_FIELD_BODY_UTF879,2374
  MYSQL_PROC_FIELD_COUNT::MYSQL_PROC_FIELD_COUNT80,2404
class Sroutine_hash_entry133,3535
  MDL_request mdl_request;Sroutine_hash_entry::mdl_request140,3680
  Sroutine_hash_entry *next;Sroutine_hash_entry::next145,3852
  TABLE_LIST *belong_to_view;Sroutine_hash_entry::belong_to_view151,4082
  ulong m_sp_cache_version;Sroutine_hash_entry::m_sp_cache_version161,4458

sql/sp_head.h,12048
#define _SP_HEAD_H_18,783
#define TYPE_ENUM_FUNCTION 42,1486
#define TYPE_ENUM_PROCEDURE 43,1516
#define TYPE_ENUM_TRIGGER 44,1546
#define TYPE_ENUM_PROXY 45,1576
class Stored_program_creation_ctx 70,2104
  CHARSET_INFO *get_db_cl(Stored_program_creation_ctx::get_db_cl73,2184
  Stored_program_creation_ctx(Stored_program_creation_ctx::Stored_program_creation_ctx82,2331
  Stored_program_creation_ctx(Stored_program_creation_ctx::Stored_program_creation_ctx87,2467
  virtual void change_env(Stored_program_creation_ctx::change_env95,2732
  CHARSET_INFO *m_db_cl;Stored_program_creation_ctx::m_db_cl110,3144
class sp_name 115,3250
  LEX_STRING m_db;sp_name::m_db119,3294
  LEX_STRING m_name;sp_name::m_name120,3313
  LEX_STRING m_qname;sp_name::m_qname121,3334
  bool       m_explicit_name;sp_name::m_explicit_name122,3356
  sp_name(sp_name::sp_name124,3434
  ~sp_name(sp_name::~sp_name137,3834
class sp_head 145,3902
  MEM_ROOT main_mem_root;sp_head::main_mem_root150,4026
    HAS_RETURN=sp_head::HAS_RETURN154,4105
    MULTI_RESULTS=sp_head::MULTI_RESULTS155,4181
    CONTAINS_DYNAMIC_SQL=sp_head::CONTAINS_DYNAMIC_SQL156,4253
    IS_INVOKED=sp_head::IS_INVOKED157,4331
    HAS_SET_AUTOCOMMIT_STMT=sp_head::HAS_SET_AUTOCOMMIT_STMT158,4403
    HAS_COMMIT_OR_ROLLBACK=sp_head::HAS_COMMIT_OR_ROLLBACK160,4560
    LOG_SLOW_STATEMENTS=sp_head::LOG_SLOW_STATEMENTS161,4593
    LOG_GENERAL_LOG=sp_head::LOG_GENERAL_LOG162,4643
    HAS_SQLCOM_RESET=sp_head::HAS_SQLCOM_RESET163,4694
    HAS_SQLCOM_FLUSH=sp_head::HAS_SQLCOM_FLUSH164,4722
  int m_type;sp_head::m_type168,4825
  uint m_flags;sp_head::m_flags169,4839
  Create_field m_return_field_def;sp_head::m_return_field_def171,4914
  const char *m_tmp_query;sp_head::m_tmp_query173,4991
  st_sp_chistics *m_chistics;sp_head::m_chistics174,5061
  ulong m_sql_mode;sp_head::m_sql_mode175,5091
  LEX_STRING m_qname;sp_head::m_qname176,5147
  bool m_explicit_name;sp_head::m_explicit_name177,5183
  LEX_STRING m_db;sp_head::m_db178,5244
  LEX_STRING m_name;sp_head::m_name179,5263
  LEX_STRING m_params;sp_head::m_params180,5284
  LEX_STRING m_body;sp_head::m_body181,5307
  LEX_STRING m_body_utf8;sp_head::m_body_utf8182,5328
  LEX_STRING m_defstr;sp_head::m_defstr183,5354
  LEX_STRING m_definer_user;sp_head::m_definer_user184,5377
  LEX_STRING m_definer_host;sp_head::m_definer_host185,5406
  bool is_invoked(sp_head::is_invoked190,5483
  ulong sp_cache_version(sp_head::sp_cache_version196,5661
  void set_sp_cache_version(sp_head::set_sp_cache_version199,5775
  ulong m_sp_cache_version;sp_head::m_sp_cache_version214,6347
  Stored_program_creation_ctx *m_creation_ctx;sp_head::m_creation_ctx215,6375
  uint32 unsafe_flags;sp_head::unsafe_flags220,6531
  inline Stored_program_creation_ctx *get_creation_ctx(sp_head::get_creation_ctx223,6563
  inline void set_creation_ctx(sp_head::set_creation_ctx228,6656
  longlong m_created;sp_head::m_created233,6790
  longlong m_modified;sp_head::m_modified234,6812
  ulong m_recursion_level;sp_head::m_recursion_level236,6919
  sp_head *m_next_cached_sp;sp_head::m_next_cached_sp243,7202
  sp_head *m_first_instance;sp_head::m_first_instance247,7293
  sp_head *m_first_free_instance;sp_head::m_first_free_instance255,7678
  sp_head *m_last_cached_sp;sp_head::m_last_cached_sp260,7868
  HASH m_sroutines;sp_head::m_sroutines268,8257
  const char *m_param_begin;sp_head::m_param_begin270,8310
  const char *m_param_end;sp_head::m_param_end271,8339
  const char *m_body_begin;sp_head::m_body_begin274,8376
  Security_context m_security_ctx;sp_head::m_security_ctx281,8513
  instructions(sp_head::instructions328,9494
  last_instruction(sp_head::last_instruction334,9569
  char *name(sp_head::name380,10642
  get_instr(sp_head::get_instr423,11883
  bool is_not_allowed_in_function(sp_head::is_not_allowed_in_function444,12462
  void propagate_attributes(sp_head::propagate_attributes473,13588
  sp_pcontext *get_parse_context(sp_head::get_parse_context490,14310
  MEM_ROOT *m_thd_root;sp_head::m_thd_root494,14376
  THD *m_thd;sp_head::m_thd495,14437
  sp_pcontext *m_pcont;sp_head::m_pcont497,14489
  List<LEX> m_lex;sp_head::m_lex498,14533
  DYNAMIC_ARRAY m_instr;sp_head::m_instr499,14588
    struct sp_label *lab;sp_head::lab502,14658
    sp_instr *instr;sp_head::instr503,14684
  } bp_t;sp_head::bp_t504,14705
  List<bp_t> m_backpatch;sp_head::m_backpatch505,14715
  List<sp_instr_opt_meta> m_cont_backpatch;sp_head::m_cont_backpatch515,15249
  uint m_cont_level;sp_head::m_cont_level516,15293
  HASH m_sptabs;sp_head::m_sptabs527,15711
class sp_instr 550,16177
  uint marked;sp_instr::marked557,16331
  uint m_ip;sp_instr::m_ip558,16346
  sp_pcontext *m_ctx;sp_instr::m_ctx559,16375
  sp_instr(sp_instr::sp_instr562,16488
  virtual ~sp_instr(sp_instr::~sp_instr566,16610
  virtual void backpatch(sp_instr::backpatch617,18280
  virtual uint opt_mark(sp_instr::opt_mark625,18531
  virtual uint opt_shortcut_jump(sp_instr::opt_shortcut_jump637,18879
  virtual void opt_move(sp_instr::opt_move648,19237
class sp_lex_keeper669,19709
  sp_lex_keeper(sp_lex_keeper::sp_lex_keeper676,19845
  virtual ~sp_lex_keeper(sp_lex_keeper::~sp_lex_keeper682,20003
  inline uint sql_command(sp_lex_keeper::sql_command703,20564
  void disable_query_cache(sp_lex_keeper::disable_query_cache708,20644
  LEX *m_lex;sp_lex_keeper::m_lex714,20726
  bool m_lex_resp;sp_lex_keeper::m_lex_resp719,20836
  TABLE_LIST *prelocking_tables;sp_lex_keeper::prelocking_tables732,21232
  TABLE_LIST **lex_query_tables_own_last;sp_lex_keeper::lex_query_tables_own_last738,21406
class sp_instr_stmt 745,21503
  LEX_STRING m_query;sp_instr_stmt::m_query752,21657
  sp_instr_stmt(sp_instr_stmt::sp_instr_stmt754,21701
  virtual ~sp_instr_stmt(sp_instr_stmt::~sp_instr_stmt761,21855
  sp_lex_keeper m_lex_keeper;sp_instr_stmt::m_lex_keeper772,22031
class sp_instr_set 777,22108
  sp_instr_set(sp_instr_set::sp_instr_set784,22258
  virtual ~sp_instr_set(sp_instr_set::~sp_instr_set791,22519
  uint m_offset;sp_instr_set::m_offset802,22693
  Item *m_value;sp_instr_set::m_value803,22729
  enum enum_field_types m_type;sp_instr_set::m_type804,22746
  sp_lex_keeper m_lex_keeper;sp_instr_set::m_lex_keeper805,22801
class sp_instr_set_trigger_field 813,22945
  sp_instr_set_trigger_field(sp_instr_set_trigger_field::sp_instr_set_trigger_field820,23122
  virtual ~sp_instr_set_trigger_field(sp_instr_set_trigger_field::~sp_instr_set_trigger_field828,23389
  Item_trigger_field *trigger_field;sp_instr_set_trigger_field::trigger_field838,23576
  Item *value;sp_instr_set_trigger_field::value839,23613
  sp_lex_keeper m_lex_keeper;sp_instr_set_trigger_field::m_lex_keeper840,23628
class sp_instr_opt_meta 851,23965
  uint m_dest;sp_instr_opt_meta::m_dest855,24018
  uint m_cont_dest;sp_instr_opt_meta::m_cont_dest856,24057
  sp_instr_opt_meta(sp_instr_opt_meta::sp_instr_opt_meta858,24127
  sp_instr_opt_meta(sp_instr_opt_meta::sp_instr_opt_meta863,24270
  virtual ~sp_instr_opt_meta(sp_instr_opt_meta::~sp_instr_opt_meta868,24427
  sp_instr *m_optdest;sp_instr_opt_meta::m_optdest878,24580
  sp_instr *m_cont_optdest;sp_instr_opt_meta::m_cont_optdest879,24634
class sp_instr_jump 883,24746
  sp_instr_jump(sp_instr_jump::sp_instr_jump890,24909
  sp_instr_jump(sp_instr_jump::sp_instr_jump894,24991
  virtual ~sp_instr_jump(sp_instr_jump::~sp_instr_jump898,25090
  virtual void backpatch(sp_instr_jump::backpatch911,25390
  virtual void set_destination(sp_instr_jump::set_destination921,25637
class sp_instr_jump_if_not 930,25814
  sp_instr_jump_if_not(sp_instr_jump_if_not::sp_instr_jump_if_not937,26001
  sp_instr_jump_if_not(sp_instr_jump_if_not::sp_instr_jump_if_not942,26147
  virtual ~sp_instr_jump_if_not(sp_instr_jump_if_not::~sp_instr_jump_if_not947,26310
  virtual uint opt_shortcut_jump(sp_instr_jump_if_not::opt_shortcut_jump959,26601
  virtual void set_destination(sp_instr_jump_if_not::set_destination966,26747
  Item *m_expr;sp_instr_jump_if_not::m_expr975,26945
  sp_lex_keeper m_lex_keeper;sp_instr_jump_if_not::m_lex_keeper976,26982
class sp_instr_freturn 981,27071
  sp_instr_freturn(sp_instr_freturn::sp_instr_freturn988,27237
  virtual ~sp_instr_freturn(sp_instr_freturn::~sp_instr_freturn994,27434
  virtual uint opt_mark(sp_instr_freturn::opt_mark1003,27602
  Item *m_value;sp_instr_freturn::m_value1011,27719
  enum enum_field_types m_type;sp_instr_freturn::m_type1012,27736
  sp_lex_keeper m_lex_keeper;sp_instr_freturn::m_lex_keeper1013,27768
class sp_instr_hpush_jump 1018,27848
  sp_instr_hpush_jump(sp_instr_hpush_jump::sp_instr_hpush_jump1025,28031
  virtual ~sp_instr_hpush_jump(sp_instr_hpush_jump::~sp_instr_hpush_jump1031,28201
  virtual uint opt_shortcut_jump(sp_instr_hpush_jump::opt_shortcut_jump1043,28466
  virtual void backpatch(sp_instr_hpush_jump::backpatch1048,28555
  inline void add_condition(sp_instr_hpush_jump::add_condition1057,28733
  int m_type;sp_instr_hpush_jump::m_type1064,28836
  uint m_frame;sp_instr_hpush_jump::m_frame1065,28870
  uint m_opt_hpop;sp_instr_hpush_jump::m_opt_hpop1066,28886
  List<struct sp_cond_type> m_cond;sp_instr_hpush_jump::m_cond1067,28956
class sp_instr_hpop 1072,29050
  sp_instr_hpop(sp_instr_hpop::sp_instr_hpop1079,29204
  virtual ~sp_instr_hpop(sp_instr_hpop::~sp_instr_hpop1083,29305
  uint m_count;sp_instr_hpop::m_count1092,29431
class sp_instr_hreturn 1097,29494
  sp_instr_hreturn(sp_instr_hreturn::sp_instr_hreturn1104,29665
  virtual ~sp_instr_hreturn(sp_instr_hreturn::~sp_instr_hreturn1108,29768
  virtual uint opt_shortcut_jump(sp_instr_hreturn::opt_shortcut_jump1116,29945
  uint m_frame;sp_instr_hreturn::m_frame1125,30106
class sp_instr_cpush 1131,30207
  sp_instr_cpush(sp_instr_cpush::sp_instr_cpush1138,30365
  virtual ~sp_instr_cpush(sp_instr_cpush::~sp_instr_cpush1142,30505
  virtual void cleanup_stmt(sp_instr_cpush::cleanup_stmt1154,30809
  sp_lex_keeper m_lex_keeper;sp_instr_cpush::m_lex_keeper1157,30865
  uint m_cursor;sp_instr_cpush::m_cursor1158,30895
class sp_instr_cpop 1163,31012
  sp_instr_cpop(sp_instr_cpop::sp_instr_cpop1170,31166
  virtual ~sp_instr_cpop(sp_instr_cpop::~sp_instr_cpop1174,31267
  uint m_count;sp_instr_cpop::m_count1183,31393
class sp_instr_copen 1188,31456
  sp_instr_copen(sp_instr_copen::sp_instr_copen1195,31614
  virtual ~sp_instr_copen(sp_instr_copen::~sp_instr_copen1199,31709
  uint m_cursor;sp_instr_copen::m_cursor1210,31885
class sp_instr_cclose 1215,31973
  sp_instr_cclose(sp_instr_cclose::sp_instr_cclose1222,32135
  virtual ~sp_instr_cclose(sp_instr_cclose::~sp_instr_cclose1226,32231
  uint m_cursor;sp_instr_cclose::m_cursor1235,32359
class sp_instr_cfetch 1240,32425
  sp_instr_cfetch(sp_instr_cfetch::sp_instr_cfetch1247,32587
  virtual ~sp_instr_cfetch(sp_instr_cfetch::~sp_instr_cfetch1253,32709
  void add_to_varlist(sp_instr_cfetch::add_to_varlist1260,32827
  uint m_cursor;sp_instr_cfetch::m_cursor1267,32923
  List<struct sp_variable> m_varlist;sp_instr_cfetch::m_varlist1268,32940
class sp_instr_error 1273,33027
  sp_instr_error(sp_instr_error::sp_instr_error1280,33185
  virtual ~sp_instr_error(sp_instr_error::~sp_instr_error1284,33292
  virtual uint opt_mark(sp_instr_error::opt_mark1291,33409
  int m_errcode;sp_instr_error::m_errcode1299,33524
class sp_instr_set_case_expr 1304,33589
  sp_instr_set_case_expr(sp_instr_set_case_expr::sp_instr_set_case_expr1308,33656
  virtual ~sp_instr_set_case_expr(sp_instr_set_case_expr::~sp_instr_set_case_expr1315,33909
  virtual void set_destination(sp_instr_set_case_expr::set_destination1328,34202
  uint m_case_expr_id;sp_instr_set_case_expr::m_case_expr_id1336,34344
  Item *m_case_expr;sp_instr_set_case_expr::m_case_expr1337,34367
  sp_lex_keeper m_lex_keeper;sp_instr_set_case_expr::m_lex_keeper1338,34388

sql/sp_pcontext.h,3940
#define _SP_PCONTEXT_H_18,787
  sp_param_in,::sp_param_in32,1129
  sp_param_out,::sp_param_out33,1144
  sp_param_inout::sp_param_inout34,1160
} sp_param_mode_t;35,1177
typedef struct sp_variable37,1197
  LEX_STRING name;sp_variable::name39,1226
  enum enum_field_types type;sp_variable::type40,1245
  sp_param_mode_t mode;sp_variable::mode41,1275
  uint offset;sp_variable::offset49,1565
  Item *dflt;sp_variable::dflt51,1581
  Create_field field_def;sp_variable::field_def52,1595
} sp_variable_t;53,1621
#define SP_LAB_IMPL 56,1640
#define SP_LAB_BEGIN 57,1702
#define SP_LAB_ITER 58,1744
typedef struct sp_label69,2200
  char *name;sp_label::name71,2226
  uint ip;sp_label::ip72,2240
  int type;sp_label::type73,2274
  sp_pcontext *ctx;sp_label::ctx74,2315
} sp_label_t;75,2370
typedef struct sp_cond_type77,2385
  enum { number,sp_cond_type::number79,2415
  enum { number, state,sp_cond_type::state79,2415
  enum { number, state, warning,sp_cond_type::warning79,2415
  enum { number, state, warning, notfound,sp_cond_type::notfound79,2415
  enum { number, state, warning, notfound, exception sp_cond_type::exception79,2415
  enum { number, state, warning, notfound, exception } type;sp_cond_type::type79,2415
  char sqlstate[sp_cond_type::sqlstate80,2476
  uint mysqlerr;sp_cond_type::mysqlerr81,2512
} sp_cond_type_t;82,2529
typedef struct sp_cond91,2749
  LEX_STRING name;sp_cond::name93,2774
  sp_cond_type_t *val;sp_cond::val94,2793
} sp_cond_t;95,2816
enum label_scope_type101,2936
  LABEL_DEFAULT_SCOPE,label_scope_type::LABEL_DEFAULT_SCOPE106,3029
  LABEL_HANDLER_SCOPElabel_scope_type::LABEL_HANDLER_SCOPE110,3125
class sp_pcontext 129,3988
  parent_context(sp_pcontext::parent_context159,4508
  max_var_index(sp_pcontext::max_var_index185,5133
  current_var_count(sp_pcontext::current_var_count195,5313
  context_var_count(sp_pcontext::context_var_count202,5455
  var_context2runtime(sp_pcontext::var_context2runtime209,5581
  set_type(sp_pcontext::set_type216,5724
  set_default(sp_pcontext::set_default226,5937
  declare_var_boundary(sp_pcontext::declare_var_boundary258,6645
  register_case_expr(sp_pcontext::register_case_expr268,6759
  get_num_case_exprs(sp_pcontext::get_num_case_exprs274,6835
  push_case_expr_id(sp_pcontext::push_case_expr_id280,6916
  pop_case_expr_id(sp_pcontext::pop_case_expr_id286,7049
  get_current_case_expr_id(sp_pcontext::get_current_case_expr_id292,7130
  last_label(sp_pcontext::last_label313,7488
  pop_label(sp_pcontext::pop_label323,7649
  push_handler(sp_pcontext::push_handler343,7892
  max_handler_index(sp_pcontext::max_handler_index352,8044
  add_handlers(sp_pcontext::add_handlers358,8142
  max_cursor_index(sp_pcontext::max_cursor_index378,8452
  current_cursor_count(sp_pcontext::current_cursor_count384,8548
  uint m_max_var_index;sp_pcontext::m_max_var_index407,9175
  uint m_max_cursor_index;sp_pcontext::m_max_cursor_index410,9244
  uint m_max_handler_index;sp_pcontext::m_max_handler_index411,9271
  uint m_context_handlers;sp_pcontext::m_context_handlers412,9299
  sp_pcontext *m_parent;sp_pcontext::m_parent416,9377
  uint m_var_offset;sp_pcontext::m_var_offset427,9716
  uint m_cursor_offset;sp_pcontext::m_cursor_offset429,9738
  uint m_pboundary;sp_pcontext::m_pboundary437,10067
  int m_num_case_exprs;sp_pcontext::m_num_case_exprs439,10088
  DYNAMIC_ARRAY m_vars;sp_pcontext::m_vars441,10113
  DYNAMIC_ARRAY m_case_expr_id_lst;sp_pcontext::m_case_expr_id_lst442,10162
  DYNAMIC_ARRAY m_conds;sp_pcontext::m_conds443,10234
  DYNAMIC_ARRAY m_cursors;sp_pcontext::m_cursors444,10280
  DYNAMIC_ARRAY m_handlers;sp_pcontext::m_handlers445,10318
  List<sp_label_t> m_label;sp_pcontext::m_label447,10388
  List<sp_pcontext> m_children;sp_pcontext::m_children449,10435
  label_scope_type m_label_scope;sp_pcontext::m_label_scope454,10568

sql/sp_rcontext.h,3274
#define _SP_RCONTEXT_H_18,787
typedef class st_select_lex_unit SELECT_LEX_UNIT;35,1143
#define SP_HANDLER_NONE 38,1220
#define SP_HANDLER_EXIT 39,1251
#define SP_HANDLER_CONTINUE 40,1282
#define SP_HANDLER_UNDO 41,1313
  struct sp_cond_type *cond;::cond46,1405
  uint handler;::handler48,1495
  int type;::type50,1551
} sp_handler_t;51,1563
  uint ip;::ip56,1649
  uint index;::index58,1706
} sp_active_handler_t;59,1720
class Sql_condition_info 62,1745
  uint m_sql_errno;Sql_condition_info::m_sql_errno66,1824
  MYSQL_ERROR::enum_warning_level m_level;Sql_condition_info::m_level69,1867
  char m_sql_state[Sql_condition_info::m_sql_state72,1930
  char m_message[Sql_condition_info::m_message75,1995
  void set(Sql_condition_info::set77,2033
  void clear(Sql_condition_info::clear90,2359
class sp_rcontext 120,3302
  Query_arena *callers_arena;sp_rcontext::callers_arena133,3682
  bool end_partial_result_set;sp_rcontext::end_partial_result_set140,3904
  sp_head *sp;sp_rcontext::sp147,4102
  is_return_value_set(sp_rcontext::is_return_value_set169,4501
  pop_all_cursors(sp_rcontext::pop_all_cursors215,5342
  get_cursor(sp_rcontext::get_cursor221,5419
  sp_pcontext *m_root_parsing_ctx;sp_rcontext::m_root_parsing_ctx240,5698
  TABLE *m_var_table;sp_rcontext::m_var_table243,5779
  Item **m_var_items;sp_rcontext::m_var_items249,5917
  Field *m_return_value_fld;sp_rcontext::m_return_value_fld255,6096
  bool m_return_value_set;sp_rcontext::m_return_value_set261,6234
  bool in_sub_stmt;sp_rcontext::in_sub_stmt266,6329
  sp_handler_t *m_handler;sp_rcontext::m_handler268,6350
  Sql_condition_info *m_raised_conditions;sp_rcontext::m_raised_conditions274,6504
  uint m_hcount;sp_rcontext::m_hcount276,6548
  uint *m_hstack;sp_rcontext::m_hstack277,6611
  uint m_hsp;sp_rcontext::m_hsp278,6681
  sp_active_handler_t *m_in_handler;sp_rcontext::m_in_handler280,6774
  uint m_ihsp;sp_rcontext::m_ihsp281,6811
  int m_hfound;sp_rcontext::m_hfound282,6877
  sp_cursor **m_cstack;sp_rcontext::m_cstack284,6950
  uint m_ccount;sp_rcontext::m_ccount285,6974
  Item_cache **m_case_expr_holders;sp_rcontext::m_case_expr_holders287,6992
  sp_rcontext *m_prev_runtime_ctx;sp_rcontext::m_prev_runtime_ctx290,7077
class Select_fetch_into_spvars:Select_fetch_into_spvars307,7447
  List<struct sp_variable> *spvar_list;Select_fetch_into_spvars::spvar_list309,7514
  uint field_count;Select_fetch_into_spvars::field_count310,7554
  Select_fetch_into_spvars(Select_fetch_into_spvars::Select_fetch_into_spvars312,7582
  uint get_field_count(Select_fetch_into_spvars::get_field_count313,7653
  void set_spvar_list(Select_fetch_into_spvars::set_spvar_list314,7702
  virtual bool send_eof(Select_fetch_into_spvars::send_eof316,7779
class sp_cursor 324,8002
  virtual ~sp_cursor(sp_cursor::~sp_cursor330,8108
  get_lex_keeper(sp_cursor::get_lex_keeper336,8173
  is_open(sp_cursor::is_open345,8286
  get_instr(sp_cursor::get_instr354,8425
  Select_fetch_into_spvars result;sp_cursor::result361,8474
  sp_lex_keeper *m_lex_keeper;sp_cursor::m_lex_keeper362,8509
  Server_side_cursor *server_side_cursor;sp_cursor::server_side_cursor363,8540
  sp_instr_cpush *m_i;sp_cursor::m_i364,8582

sql/sql_acl.h,3466
#define SQL_ACL_INCLUDED2,25
#define SELECT_ACL	23,1005
#define INSERT_ACL	24,1034
#define UPDATE_ACL	25,1063
#define DELETE_ACL	26,1092
#define CREATE_ACL	27,1121
#define DROP_ACL	28,1150
#define RELOAD_ACL	29,1177
#define SHUTDOWN_ACL	30,1206
#define PROCESS_ACL	31,1237
#define FILE_ACL	32,1267
#define GRANT_ACL	33,1294
#define REFERENCES_ACL	34,1323
#define INDEX_ACL	35,1357
#define ALTER_ACL	36,1386
#define SHOW_DB_ACL	37,1415
#define SUPER_ACL	38,1446
#define CREATE_TMP_ACL	39,1475
#define LOCK_TABLES_ACL	40,1509
#define EXECUTE_ACL	41,1544
#define REPL_SLAVE_ACL	42,1575
#define REPL_CLIENT_ACL	43,1609
#define CREATE_VIEW_ACL	44,1644
#define SHOW_VIEW_ACL	45,1679
#define CREATE_PROC_ACL	46,1712
#define ALTER_PROC_ACL 47,1747
#define CREATE_USER_ACL 48,1782
#define EVENT_ACL 49,1817
#define TRIGGER_ACL 50,1852
#define CREATE_TABLESPACE_ACL 51,1887
#define NO_ACCESS	60,2268
#define DB_ACLS 61,2297
#define TABLE_ACLS 67,2598
#define COL_ACLS 72,2803
#define PROC_ACLS 75,2879
#define SHOW_PROC_ACLS 78,2943
#define GLOBAL_ACLS 81,3018
#define DEFAULT_CREATE_PROC_ACLS 90,3488
#define SHOW_CREATE_TABLE_ACLS 93,3555
#define DB_CHUNK0 104,3991
#define DB_CHUNK1 106,4106
#define DB_CHUNK2 107,4177
#define DB_CHUNK3 108,4230
#define DB_CHUNK4 110,4325
#define DB_CHUNK5 111,4357
#define fix_rights_for_db(113,4402
#define get_rights_for_db(119,4668
#define TBL_CHUNK0 125,4934
#define TBL_CHUNK1 126,4963
#define TBL_CHUNK2 127,4992
#define TBL_CHUNK3 128,5045
#define fix_rights_for_table(129,5076
#define get_rights_for_table(133,5325
#define fix_rights_for_column(137,5574
#define get_rights_for_column(138,5639
#define fix_rights_for_procedure(139,5697
#define get_rights_for_procedure(142,5845
enum mysql_db_table_field146,5995
  MYSQL_DB_FIELD_HOST 148,6023
  MYSQL_DB_FIELD_DB,149,6050
  MYSQL_DB_FIELD_USER,150,6071
  MYSQL_DB_FIELD_SELECT_PRIV,151,6094
  MYSQL_DB_FIELD_INSERT_PRIV,152,6124
  MYSQL_DB_FIELD_UPDATE_PRIV,153,6154
  MYSQL_DB_FIELD_DELETE_PRIV,154,6184
  MYSQL_DB_FIELD_CREATE_PRIV,155,6214
  MYSQL_DB_FIELD_DROP_PRIV,156,6244
  MYSQL_DB_FIELD_GRANT_PRIV,157,6272
  MYSQL_DB_FIELD_REFERENCES_PRIV,158,6301
  MYSQL_DB_FIELD_INDEX_PRIV,159,6335
  MYSQL_DB_FIELD_ALTER_PRIV,160,6364
  MYSQL_DB_FIELD_CREATE_TMP_TABLE_PRIV,161,6393
  MYSQL_DB_FIELD_LOCK_TABLES_PRIV,162,6433
  MYSQL_DB_FIELD_CREATE_VIEW_PRIV,163,6468
  MYSQL_DB_FIELD_SHOW_VIEW_PRIV,164,6503
  MYSQL_DB_FIELD_CREATE_ROUTINE_PRIV,165,6536
  MYSQL_DB_FIELD_ALTER_ROUTINE_PRIV,166,6574
  MYSQL_DB_FIELD_EXECUTE_PRIV,167,6611
  MYSQL_DB_FIELD_EVENT_PRIV,168,6642
  MYSQL_DB_FIELD_TRIGGER_PRIV,169,6671
  MYSQL_DB_FIELD_COUNT170,6702
#define check_grant(242,10449
#define check_grant_db(243,10484
enum ACL_internal_access_result259,10988
  ACL_INTERNAL_ACCESS_GRANTED,267,11216
  ACL_INTERNAL_ACCESS_DENIED,269,11300
  ACL_INTERNAL_ACCESS_CHECK_GRANT271,11378
class ACL_internal_table_access280,11598
  ACL_internal_table_access(ACL_internal_table_access::ACL_internal_table_access283,11640
  virtual ~ACL_internal_table_access(ACL_internal_table_access::~ACL_internal_table_access286,11676
class ACL_internal_schema_access319,12891
  ACL_internal_schema_access(ACL_internal_schema_access::ACL_internal_schema_access322,12934
  virtual ~ACL_internal_schema_access(ACL_internal_schema_access::~ACL_internal_schema_access325,12971
class ACL_internal_schema_registry358,14172

sql/sql_admin.h,864
#define SQL_TABLE_MAINTENANCE_H17,771
class Analyze_table_statement 29,1168
  Analyze_table_statement(Analyze_table_statement::Analyze_table_statement36,1357
  ~Analyze_table_statement(Analyze_table_statement::~Analyze_table_statement40,1424
class Check_table_statement 56,1686
  Check_table_statement(Check_table_statement::Check_table_statement63,1871
  ~Check_table_statement(Check_table_statement::~Check_table_statement67,1936
class Optimize_table_statement 83,2200
  Optimize_table_statement(Optimize_table_statement::Optimize_table_statement90,2391
  ~Optimize_table_statement(Optimize_table_statement::~Optimize_table_statement94,2459
class Repair_table_statement 110,2725
  Repair_table_statement(Repair_table_statement::Repair_table_statement117,2912
  ~Repair_table_statement(Repair_table_statement::~Repair_table_statement121,2978

sql/sql_alter.h,1804
#define SQL_ALTER_TABLE_H17,765
class Alter_table_common 24,960
  Alter_table_common(Alter_table_common::Alter_table_common31,1102
  virtual ~Alter_table_common(Alter_table_common::~Alter_table_common35,1164
class Alter_table_statement 44,1358
  Alter_table_statement(Alter_table_statement::Alter_table_statement51,1548
  ~Alter_table_statement(Alter_table_statement::~Alter_table_statement55,1618
class Alter_table_ctx67,1845
  bool is_database_changed(Alter_table_ctx::is_database_changed78,2122
  bool is_table_renamed(Alter_table_ctx::is_table_renamed84,2259
  const char *get_new_filename(Alter_table_ctx::get_new_filename90,2426
  const char *get_path(Alter_table_ctx::get_path99,2580
  const char *get_new_path(Alter_table_ctx::get_new_path108,2713
  const char *get_tmp_path(Alter_table_ctx::get_tmp_path117,2887
  Create_field *datetime_field;Alter_table_ctx::datetime_field121,2954
  bool         error_if_not_empty;Alter_table_ctx::error_if_not_empty122,2986
  uint         tables_opened;Alter_table_ctx::tables_opened123,3021
  char         *db;Alter_table_ctx::db124,3051
  char         *table_name;Alter_table_ctx::table_name125,3071
  char         *alias;Alter_table_ctx::alias126,3099
  char         *new_db;Alter_table_ctx::new_db127,3122
  char         *new_name;Alter_table_ctx::new_name128,3146
  char         *new_alias;Alter_table_ctx::new_alias129,3172
  char         tmp_name[Alter_table_ctx::tmp_name130,3199
  char new_filename[Alter_table_ctx::new_filename133,3238
  char new_alias_buff[Alter_table_ctx::new_alias_buff134,3274
  char path[Alter_table_ctx::path135,3312
  char new_path[Alter_table_ctx::new_path136,3340
  char tmp_path[Alter_table_ctx::tmp_path137,3372
  bool tmp_table;Alter_table_ctx::tmp_table141,3501

sql/sql_analyse.h,5612
#define SQL_ANALYSE_INCLUDED2,29
#define my_thd_charset	28,982
#define DEC_IN_AVG 30,1027
typedef struct st_number_info32,1049
  bool	    negative,35,1146
  bool	    negative, is_float,35,1146
  bool	    negative, is_float, zerofill,35,1146
  bool	    negative, is_float, zerofill, maybe_zerofill;35,1146
  int8	    integers;36,1203
  int8	    decimals;37,1224
  double    dval;38,1245
  ulonglong ullval;39,1263
} NUM_INFO;40,1283
typedef struct st_extreme_value_number_info42,1296
  ulonglong ullval;44,1342
  longlong  llval;45,1362
  double    max_dval,46,1381
  double    max_dval, min_dval;46,1381
} EV_NUM_INFO;47,1413
typedef struct st_tree_info49,1429
  bool	 found;51,1459
  String *str;str52,1474
  Item	 *item;item53,1489
} TREE_INFO;54,1504
class field_info 74,2426
  ulong   treemem,field_info::treemem77,2474
  ulong   treemem, tree_elements,field_info::tree_elements77,2474
  ulong   treemem, tree_elements, empty,field_info::empty77,2474
  ulong   treemem, tree_elements, empty, nulls,field_info::nulls77,2474
  ulong   treemem, tree_elements, empty, nulls, min_length,field_info::min_length77,2474
  ulong   treemem, tree_elements, empty, nulls, min_length, max_length;field_info::max_length77,2474
  uint	  room_in_tree;field_info::room_in_tree78,2546
  my_bool found;field_info::found79,2569
  TREE	  tree;field_info::tree80,2586
  Item	  *item;field_info::item81,2601
  analyse *pc;field_info::pc82,2617
  field_info(field_info::field_info85,2641
  virtual ~field_info(field_info::~field_info89,2811
  virtual uint decimals(field_info::decimals97,3165
class field_str 108,3409
  String      min_arg,field_str::min_arg110,3446
  String      min_arg, max_arg;field_str::max_arg110,3446
  ulonglong   sum;field_str::sum111,3478
  bool	      must_be_blob,field_str::must_be_blob112,3497
  bool	      must_be_blob, was_zero_fill,field_str::was_zero_fill112,3497
  bool	      must_be_blob, was_zero_fill, was_maybe_zerofill,field_str::was_maybe_zerofill112,3497
	      can_be_still_num;field_str::can_be_still_num113,3559
  NUM_INFO    num_info;field_str::num_info114,3584
  EV_NUM_INFO ev_num_info;field_str::ev_num_info115,3608
  field_str(field_str::field_str118,3644
  String *get_min_arg(field_str::get_min_arg128,4038
  String *get_max_arg(field_str::get_max_arg130,4125
  String *avg(field_str::avg132,4212
  tree_walk_action collect_enum(field_str::collect_enum143,4559
  String *std(field_str::std145,4641
class field_decimal 154,4862
  my_decimal min_arg,field_decimal::min_arg156,4903
  my_decimal min_arg, max_arg;field_decimal::max_arg156,4903
  my_decimal sum[field_decimal::sum157,4934
  my_decimal sum[2], sum_sqr[field_decimal::sum_sqr157,4934
  int cur_sum;field_decimal::cur_sum158,4967
  int bin_size;field_decimal::bin_size159,4982
  field_decimal(field_decimal::field_decimal161,5006
  tree_walk_action collect_enum(field_decimal::collect_enum175,5521
class field_real:field_real183,5723
  double min_arg,field_real::min_arg185,5761
  double min_arg, max_arg;field_real::max_arg185,5761
  double sum,field_real::sum186,5788
  double sum, sum_sqr;field_real::sum_sqr186,5788
  uint	 max_notzero_dec_len;field_real::max_notzero_dec_len187,5811
  field_real(field_real::field_real190,5849
  String *get_min_arg(field_real::get_min_arg197,6124
  String *get_max_arg(field_real::get_max_arg202,6237
  String *avg(field_real::avg207,6350
  String *std(field_real::std215,6587
  uint	 decimals(field_real::decimals228,6962
  tree_walk_action collect_enum(field_real::collect_enum231,7095
class field_longlong:field_longlong238,7265
  longlong min_arg,field_longlong::min_arg240,7307
  longlong min_arg, max_arg;field_longlong::max_arg240,7307
  longlong sum,field_longlong::sum241,7336
  longlong sum, sum_sqr;field_longlong::sum_sqr241,7336
  field_longlong(field_longlong::field_longlong244,7370
  String *get_min_arg(field_longlong::get_min_arg251,7629
  String *get_max_arg(field_longlong::get_max_arg252,7708
  String *avg(field_longlong::avg253,7787
  String *std(field_longlong::std261,8021
  tree_walk_action collect_enum(field_longlong::collect_enum276,8488
class field_ulonglong:field_ulonglong283,8665
  ulonglong min_arg,field_ulonglong::min_arg285,8708
  ulonglong min_arg, max_arg;field_ulonglong::max_arg285,8708
  ulonglong sum,field_ulonglong::sum286,8738
  ulonglong sum, sum_sqr;field_ulonglong::sum_sqr286,8738
  field_ulonglong(field_ulonglong::field_ulonglong289,8773
  String *get_min_arg(field_ulonglong::get_min_arg295,9033
  String *get_max_arg(field_ulonglong::get_max_arg296,9112
  String *avg(field_ulonglong::avg297,9191
  String *std(field_ulonglong::std306,9447
  tree_walk_action collect_enum(field_ulonglong::collect_enum322,9962
class analyse:analyse331,10170
  Item_proc    *func_items[analyse::func_items334,10215
  List<Item>   fields,analyse::fields335,10247
  List<Item>   fields, result_fields;analyse::result_fields335,10247
  field_info   **f_info,analyse::f_info336,10285
  field_info   **f_info, **f_end;analyse::f_end336,10285
  ha_rows      rows;analyse::rows337,10319
  uint	       output_str_length;analyse::output_str_length338,10340
  uint max_tree_elements,analyse::max_tree_elements341,10382
  uint max_tree_elements, max_treemem;analyse::max_treemem341,10382
  analyse(analyse::analyse343,10422
  ~analyse(analyse::~analyse346,10532
  virtual void add(analyse::add354,10646
  virtual void end_group(analyse::end_group357,10770

sql/sql_array.h,558
#define SQL_ARRAY_INCLUDED2,27
template <class Elem> class Dynamic_array26,897
  DYNAMIC_ARRAY  array;Dynamic_array::array28,941
  Dynamic_array(Dynamic_array::Dynamic_array30,973
  Elem& at(Dynamic_array::at35,1105
  Elem *front(Dynamic_array::front40,1177
  Elem *back(Dynamic_array::back45,1234
  bool append(Dynamic_array::append50,1309
  int elements(Dynamic_array::elements55,1392
  ~Dynamic_array(Dynamic_array::~Dynamic_array60,1445
  typedef int (*CMP_FUNC)Dynamic_array::CMP_FUNC65,1501
  void sort(Dynamic_array::sort67,1563

sql/sql_audit.h,395
#define SQL_AUDIT_INCLUDED2,27
#define mysql_audit_notify(41,1313
#define MAX_USER_HOST_SIZE 45,1396
static inline uint make_user_name(46,1427
void mysql_audit_general_log(70,2263
void mysql_audit_general(101,3311
#define MYSQL_AUDIT_NOTIFY_CONNECTION_CONNECT(136,4196
#define MYSQL_AUDIT_NOTIFY_CONNECTION_DISCONNECT(152,5050
#define MYSQL_AUDIT_NOTIFY_CONNECTION_CHANGE_USER(157,5286

sql/sql_base.h,5119
#define SQL_BASE_INCLUDED17,772
typedef class st_select_lex SELECT_LEX;34,1266
typedef struct st_lock_param_type ALTER_PARTITION_PARAM_TYPE;36,1307
enum enum_resolution_type 50,2012
  NOT_RESOLVED=enum_resolution_type::NOT_RESOLVED51,2040
  RESOLVED_IGNORING_ALIAS,enum_resolution_type::RESOLVED_IGNORING_ALIAS52,2058
  RESOLVED_BEHIND_ALIAS,enum_resolution_type::RESOLVED_BEHIND_ALIAS53,2085
  RESOLVED_WITH_NO_ALIAS,enum_resolution_type::RESOLVED_WITH_NO_ALIAS54,2110
  RESOLVED_AGAINST_ALIASenum_resolution_type::RESOLVED_AGAINST_ALIAS55,2136
enum find_item_error_report_type 58,2165
enum find_item_error_report_type {REPORT_ALL_ERRORS,find_item_error_report_type::REPORT_ALL_ERRORS58,2165
enum find_item_error_report_type {REPORT_ALL_ERRORS, REPORT_EXCEPT_NOT_FOUND,find_item_error_report_type::REPORT_EXCEPT_NOT_FOUND58,2165
				  IGNORE_ERRORS,find_item_error_report_type::IGNORE_ERRORS59,2243
				  IGNORE_ERRORS, REPORT_EXCEPT_NON_UNIQUE,find_item_error_report_type::REPORT_EXCEPT_NON_UNIQUE59,2243
                                  IGNORE_EXCEPT_NON_UNIQUE}find_item_error_report_type::IGNORE_EXCEPT_NON_UNIQUE60,2290
enum enum_tdc_remove_table_type 62,2352
enum enum_tdc_remove_table_type {TDC_RT_REMOVE_ALL,enum_tdc_remove_table_type::TDC_RT_REMOVE_ALL62,2352
enum enum_tdc_remove_table_type {TDC_RT_REMOVE_ALL, TDC_RT_REMOVE_NOT_OWN,enum_tdc_remove_table_type::TDC_RT_REMOVE_NOT_OWN62,2352
                                 TDC_RT_REMOVE_UNUSED}enum_tdc_remove_table_type::TDC_RT_REMOVE_UNUSED63,2427
#define RTFC_NO_FLAG 66,2542
#define RTFC_OWNED_BY_THD_FLAG 67,2585
#define RTFC_WAIT_OTHER_THREAD_FLAG 68,2628
#define RTFC_CHECK_KILLED_FLAG 69,2671
create_table_def_key(98,3529
#define MYSQL_OPEN_IGNORE_GLOBAL_READ_LOCK 119,4387
#define MYSQL_OPEN_IGNORE_FLUSH 120,4442
#define MYSQL_OPEN_TEMPORARY_ONLY 121,4497
#define MYSQL_LOCK_IGNORE_GLOBAL_READ_ONLY 122,4552
#define MYSQL_LOCK_LOG_TABLE 123,4607
#define MYSQL_OPEN_HAS_MDL_LOCK 128,4746
#define MYSQL_OPEN_GET_NEW_TABLE 133,4900
#define MYSQL_OPEN_SKIP_TEMPORARY 135,5019
#define MYSQL_OPEN_FAIL_ON_MDL_CONFLICT 137,5150
#define MYSQL_OPEN_FORCE_SHARED_MDL 139,5282
#define MYSQL_OPEN_FORCE_SHARED_HIGH_PRIO_MDL 144,5428
#define MYSQL_LOCK_IGNORE_TIMEOUT 149,5622
#define MYSQL_OPEN_SKIP_SCOPED_MDL_LOCK 154,5812
#define MYSQL_OPEN_REOPEN 157,5913
inline void setup_table_map(340,15649
inline TABLE_LIST *find_table_in_global_list(find_table_in_global_list361,16323
inline TABLE_LIST *find_table_in_local_list(find_table_in_local_list369,16638
inline bool setup_fields_with_no_wrap(378,16950
class Prelocking_strategy398,17703
  virtual ~Prelocking_strategy(Prelocking_strategy::~Prelocking_strategy401,17739
class DML_prelocking_strategy 421,18509
class Lock_tables_prelocking_strategy 439,19162
class Alter_table_prelocking_strategy 454,19608
  Alter_table_prelocking_strategy(Alter_table_prelocking_strategy::Alter_table_prelocking_strategy458,19686
  Alter_info *m_alter_info;Alter_table_prelocking_strategy::m_alter_info471,20284
open_tables(476,20329
inline TABLE *open_n_lock_single_table(open_n_lock_single_table484,20526
inline bool open_and_lock_tables(495,20898
class Open_table_context510,21305
  enum enum_open_table_actionOpen_table_context::enum_open_table_action513,21340
    OT_NO_ACTION=Open_table_context::enum_open_table_action::OT_NO_ACTION515,21374
    OT_BACKOFF_AND_RETRY,Open_table_context::enum_open_table_action::OT_BACKOFF_AND_RETRY516,21395
    OT_REOPEN_TABLES,Open_table_context::enum_open_table_action::OT_REOPEN_TABLES517,21421
    OT_DISCOVER,Open_table_context::enum_open_table_action::OT_DISCOVER518,21443
    OT_REPAIROpen_table_context::enum_open_table_action::OT_REPAIR519,21460
  bool can_recover_from_failed_open(Open_table_context::can_recover_from_failed_open527,21683
  const MDL_savepoint &start_of_statement_svp(Open_table_context::start_of_statement_svp536,21986
  inline ulong get_timeout(Open_table_context::get_timeout541,22086
  uint get_flags(Open_table_context::get_flags546,22152
  void set_has_protection_against_grl(Open_table_context::set_has_protection_against_grl552,22341
  bool has_protection_against_grl(Open_table_context::has_protection_against_grl557,22430
  TABLE_LIST *m_failed_table;Open_table_context::m_failed_table568,22700
  MDL_savepoint m_start_of_statement_svp;Open_table_context::m_start_of_statement_svp569,22730
  ulong m_timeout;Open_table_context::m_timeout574,22937
  uint m_flags;Open_table_context::m_flags576,22984
  enum enum_open_table_action m_action;Open_table_context::m_action578,23026
  bool m_has_locks;Open_table_context::m_has_locks584,23263
  bool m_has_protection_against_grl;Open_table_context::m_has_protection_against_grl589,23404
class No_such_table_error_handler 597,23512
  No_such_table_error_handler(No_such_table_error_handler::No_such_table_error_handler600,23588
  int m_handled_errors;No_such_table_error_handler::m_handled_errors618,24134
  int m_unhandled_errors;No_such_table_error_handler::m_unhandled_errors619,24158

sql/sql_binlog.h,35
#define SQL_BINLOG_INCLUDED17,774

sql/sql_bitmap.h,2423
#define SQL_BITMAP_INCLUDED23,953
template <uint default_width> class Bitmap28,1026
  MY_BITMAP map;Bitmap::map30,1071
  Bitmap(Bitmap::Bitmap33,1136
  Bitmap(Bitmap::Bitmap34,1159
  explicit Bitmap(Bitmap::Bitmap35,1204
  void init(Bitmap::init36,1267
  void init(Bitmap::init37,1330
  uint length(Bitmap::length38,1401
  Bitmap& operator=(Bitmap::operator=39,1449
  void set_bit(Bitmap::set_bit45,1576
  void clear_bit(Bitmap::clear_bit46,1628
  void set_prefix(Bitmap::set_prefix47,1684
  void set_all(Bitmap::set_all48,1742
  void clear_all(Bitmap::clear_all49,1785
  void intersect(Bitmap::intersect50,1832
  void intersect(Bitmap::intersect51,1902
  void intersect_extended(Bitmap::intersect_extended58,2135
  void subtract(Bitmap::subtract65,2387
  void merge(Bitmap::merge66,2455
  my_bool is_set(Bitmap::is_set67,2517
  my_bool is_prefix(Bitmap::is_prefix68,2583
  my_bool is_clear_all(Bitmap::is_clear_all69,2655
  my_bool is_set_all(Bitmap::is_set_all70,2724
  my_bool is_subset(Bitmap::is_subset71,2789
  my_bool is_overlapping(Bitmap::is_overlapping72,2881
  my_bool operator==(Bitmap::operator==73,2983
  char *print(Bitmap::print74,3070
  ulonglong to_ulonglong(Bitmap::to_ulonglong91,3440
template <> class Bitmap<Bitmap100,3626
  ulonglong map;Bitmap::map102,3657
  Bitmap<Bitmap::Bitmap104,3682
  explicit Bitmap<Bitmap::Bitmap105,3701
  void init(Bitmap::init106,3774
  void init(Bitmap::init107,3792
  uint length(Bitmap::length108,3855
  void set_bit(Bitmap::set_bit109,3892
  void clear_bit(Bitmap::clear_bit110,3946
  void set_prefix(Bitmap::set_prefix111,4005
  void set_all(Bitmap::set_all118,4124
  void clear_all(Bitmap::clear_all119,4164
  void intersect(Bitmap::intersect120,4205
  void intersect(Bitmap::intersect121,4260
  void intersect_extended(Bitmap::intersect_extended122,4309
  void subtract(Bitmap::subtract123,4367
  void merge(Bitmap::merge124,4422
  my_bool is_set(Bitmap::is_set125,4473
  my_bool is_prefix(Bitmap::is_prefix126,4550
  my_bool is_clear_all(Bitmap::is_clear_all127,4627
  my_bool is_set_all(Bitmap::is_set_all128,4690
  my_bool is_subset(Bitmap::is_subset129,4752
  my_bool is_overlapping(Bitmap::is_overlapping130,4833
  my_bool operator==(Bitmap::operator==131,4921
  char *print(Bitmap::print132,5000
  ulonglong to_ulonglong(Bitmap::to_ulonglong133,5073

sql/sql_cache.h,11833
#define _SQL_CACHE_H17,766
typedef struct st_changed_table_list CHANGED_TABLE_LIST;27,948
#define QUERY_CACHE_MIN_ALLOCATION_UNIT	37,1245
#define QUERY_CACHE_DEF_QUERY_HASH_SIZE	40,1321
#define QUERY_CACHE_DEF_TABLE_HASH_SIZE	41,1367
#define QUERY_CACHE_MIN_RESULT_DATA_SIZE	44,1465
#define QUERY_CACHE_MIN_ESTIMATED_QUERIES_NUMBER 50,1613
#define QUERY_CACHE_MEM_BIN_FIRST_STEP_PWR2	55,1746
#define QUERY_CACHE_MEM_BIN_STEP_PWR2	56,1792
#define QUERY_CACHE_MEM_BIN_PARTS_INC	57,1833
#define QUERY_CACHE_MEM_BIN_PARTS_MUL	58,1874
#define QUERY_CACHE_MEM_BIN_SPC_LIM_PWR2	59,1917
#define QUERY_CACHE_MEM_BIN_TRY 63,2066
#define QUERY_CACHE_PACK_ITERATION	66,2142
#define QUERY_CACHE_PACK_LIMIT	67,2180
#define TABLE_COUNTER_TYPE 69,2226
typedef my_bool (*qc_engine_callback)qc_engine_callback81,2463
struct Query_cache_block_table92,2874
  Query_cache_block_table(Query_cache_block_table::Query_cache_block_table94,2907
  TABLE_COUNTER_TYPE n;Query_cache_block_table::n100,3092
  Query_cache_block_table *next,Query_cache_block_table::next106,3218
  Query_cache_block_table *next, *prev;Query_cache_block_table::prev106,3218
  Query_cache_table *parent;Query_cache_block_table::parent112,3352
struct Query_cache_block123,3663
  Query_cache_block(Query_cache_block::Query_cache_block125,3690
  enum block_type Query_cache_block::block_type126,3761
  enum block_type {FREE,Query_cache_block::block_type::FREE126,3761
  enum block_type {FREE, QUERY,Query_cache_block::block_type::QUERY126,3761
  enum block_type {FREE, QUERY, RESULT,Query_cache_block::block_type::RESULT126,3761
  enum block_type {FREE, QUERY, RESULT, RES_CONT,Query_cache_block::block_type::RES_CONT126,3761
  enum block_type {FREE, QUERY, RESULT, RES_CONT, RES_BEG,Query_cache_block::block_type::RES_BEG126,3761
		   RES_INCOMPLETE,Query_cache_block::block_type::RES_INCOMPLETE127,3820
		   RES_INCOMPLETE, TABLE,Query_cache_block::block_type::TABLE127,3820
		   RES_INCOMPLETE, TABLE, INCOMPLETE}Query_cache_block::block_type::INCOMPLETE127,3820
  ulong length;Query_cache_block::length129,3862
  ulong used;Query_cache_block::used130,3905
  Query_cache_block *pnext,Query_cache_block::pnext136,4126
  Query_cache_block *pnext,*pprev,Query_cache_block::pprev136,4126
		    *next,Query_cache_block::next137,4194
		    *next,*prev;Query_cache_block::prev137,4194
  block_type type;Query_cache_block::type138,4245
  TABLE_COUNTER_TYPE n_tables;Query_cache_block::n_tables139,4264
  inline my_bool is_free(Query_cache_block::is_free141,4327
struct Query_cache_query152,4665
  ulonglong limit_found_rows;Query_cache_query::limit_found_rows154,4692
  mysql_rwlock_t lock;Query_cache_query::lock155,4722
  Query_cache_block *res;Query_cache_query::res156,4745
  Query_cache_tls *wri;Query_cache_query::wri157,4771
  ulong len;Query_cache_query::len158,4795
  uint8 tbls_type;Query_cache_query::tbls_type159,4808
  unsigned int last_pkt_nr;Query_cache_query::last_pkt_nr160,4827
  Query_cache_query(Query_cache_query::Query_cache_query162,4856
  inline ulonglong found_rows(Query_cache_query::found_rows165,4983
  inline void found_rows(Query_cache_query::found_rows166,5048
  inline Query_cache_block *result(Query_cache_query::result167,5119
  inline void result(Query_cache_query::result168,5175
  inline Query_cache_tls *writer(Query_cache_query::writer169,5230
  inline void writer(Query_cache_query::writer170,5284
  inline uint8 tables_type(Query_cache_query::tables_type171,5339
  inline void tables_type(Query_cache_query::tables_type172,5404
  inline ulong length(Query_cache_query::length173,5468
  inline ulong add(Query_cache_query::add174,5513
  inline void length(Query_cache_query::length175,5583
  inline uchar* query(Query_cache_query::query176,5646
struct Query_cache_table188,5878
  Query_cache_table(Query_cache_table::Query_cache_table190,5905
  char *tbl;Query_cache_table::tbl191,5976
  uint32 key_len;Query_cache_table::key_len192,5989
  uint8 table_type;Query_cache_table::table_type193,6007
  qc_engine_callback callback_func;Query_cache_table::callback_func195,6069
  ulonglong engine_data_buff;Query_cache_table::engine_data_buff197,6139
  int32 m_cached_query_count;Query_cache_table::m_cached_query_count202,6232
  inline char *db(Query_cache_table::db204,6263
  inline char *table(Query_cache_table::table205,6318
  inline void table(Query_cache_table::table206,6364
  inline uint32 key_length(Query_cache_table::key_length207,6426
  inline void key_length(Query_cache_table::key_length208,6491
  inline uint8 type(Query_cache_table::type209,6554
  inline void type(Query_cache_table::type210,6622
  inline qc_engine_callback callback(Query_cache_table::callback211,6686
  inline void callback(Query_cache_table::callback212,6757
  inline ulonglong engine_data(Query_cache_table::engine_data213,6825
  inline void engine_data(Query_cache_table::engine_data214,6899
  inline uchar* data(Query_cache_table::data215,6976
struct Query_cache_result222,7091
  Query_cache_result(Query_cache_result::Query_cache_result224,7119
  Query_cache_block *query;Query_cache_result::query225,7190
  inline uchar* data(Query_cache_result::data227,7219
  inline Query_cache_block *parent(Query_cache_result::parent233,7400
  inline void parent Query_cache_result::parent234,7458
struct Query_cache_memory_bin248,7872
  Query_cache_memory_bin(Query_cache_memory_bin::Query_cache_memory_bin250,7904
  ulong size;Query_cache_memory_bin::size252,7992
  uint number;Query_cache_memory_bin::number254,8013
  Query_cache_block *free_blocks;Query_cache_memory_bin::free_blocks255,8028
  inline void init(Query_cache_memory_bin::init257,8063
struct Query_cache_memory_bin_step267,8192
  Query_cache_memory_bin_step(Query_cache_memory_bin_step::Query_cache_memory_bin_step269,8229
  ulong size;Query_cache_memory_bin_step::size270,8300
  ulong increment;Query_cache_memory_bin_step::increment271,8314
  uint idx;Query_cache_memory_bin_step::idx272,8333
  inline void init(Query_cache_memory_bin_step::init273,8345
class Query_cache281,8498
  ulong query_cache_size,Query_cache::query_cache_size285,8539
  ulong query_cache_size, query_cache_limit;Query_cache::query_cache_limit285,8539
  ulong free_memory,Query_cache::free_memory287,8603
  ulong free_memory, queries_in_cache,Query_cache::queries_in_cache287,8603
  ulong free_memory, queries_in_cache, hits,Query_cache::hits287,8603
  ulong free_memory, queries_in_cache, hits, inserts,Query_cache::inserts287,8603
  ulong free_memory, queries_in_cache, hits, inserts, refused,Query_cache::refused287,8603
    free_memory_blocks,Query_cache::free_memory_blocks288,8666
    free_memory_blocks, total_blocks,Query_cache::total_blocks288,8666
    free_memory_blocks, total_blocks, lowmem_prunes;Query_cache::lowmem_prunes288,8666
  my_thread_id m_cache_lock_thread_id;Query_cache::m_cache_lock_thread_id293,8747
  mysql_cond_t COND_cache_status_changed;Query_cache::COND_cache_status_changed295,8793
  enum Cache_lock_status Query_cache::Cache_lock_status296,8835
  enum Cache_lock_status { UNLOCKED,Query_cache::Cache_lock_status::UNLOCKED296,8835
  enum Cache_lock_status { UNLOCKED, LOCKED_NO_WAIT,Query_cache::Cache_lock_status::LOCKED_NO_WAIT296,8835
  enum Cache_lock_status { UNLOCKED, LOCKED_NO_WAIT, LOCKED Query_cache::Cache_lock_status::LOCKED296,8835
  Cache_lock_status m_cache_lock_status;Query_cache::m_cache_lock_status297,8898
  bool m_query_cache_is_disabled;Query_cache::m_query_cache_is_disabled299,8940
  void disable_query_cache(Query_cache::disable_query_cache303,9104
  mysql_mutex_t structure_guard_mutex;Query_cache::structure_guard_mutex320,9846
  uchar *cache;Query_cache::cache321,9885
  Query_cache_block *first_block;Query_cache::first_block322,9921
  Query_cache_block *queries_blocks;Query_cache::queries_blocks323,9988
  Query_cache_block *tables_blocks;Query_cache::tables_blocks324,10047
  Query_cache_memory_bin *bins;Query_cache::bins326,10084
  Query_cache_memory_bin_step *steps;Query_cache::steps327,10138
  HASH queries,Query_cache::queries328,10198
  HASH queries, tables;Query_cache::tables328,10198
  ulong min_allocation_unit,Query_cache::min_allocation_unit330,10238
  ulong min_allocation_unit, min_result_data_size;Query_cache::min_result_data_size330,10238
  uint def_query_hash_size,Query_cache::def_query_hash_size331,10289
  uint def_query_hash_size, def_table_hash_size;Query_cache::def_table_hash_size331,10289
  uint mem_bin_num,Query_cache::mem_bin_num333,10341
  uint mem_bin_num, mem_bin_steps;Query_cache::mem_bin_steps333,10341
  my_bool initialized;Query_cache::initialized335,10410
  bool is_disabled(Query_cache::is_disabled447,15168
  inline void result_size_limit(Query_cache::result_size_limit454,15420
struct Query_cache_query_flags521,17676
  unsigned int client_long_flag:Query_cache_query_flags::client_long_flag523,17709
  unsigned int client_protocol_41:Query_cache_query_flags::client_protocol_41524,17744
  unsigned int protocol_type:Query_cache_query_flags::protocol_type525,17781
  unsigned int more_results_exists:Query_cache_query_flags::more_results_exists526,17813
  unsigned int in_trans:Query_cache_query_flags::in_trans527,17851
  unsigned int autocommit:Query_cache_query_flags::autocommit528,17878
  unsigned int pkt_nr;Query_cache_query_flags::pkt_nr529,17907
  uint character_set_client_num;Query_cache_query_flags::character_set_client_num530,17930
  uint character_set_results_num;Query_cache_query_flags::character_set_results_num531,17963
  uint collation_connection_num;Query_cache_query_flags::collation_connection_num532,17997
  ha_rows limit;Query_cache_query_flags::limit533,18030
  Time_zone *time_zone;Query_cache_query_flags::time_zone534,18047
  ulong sql_mode;Query_cache_query_flags::sql_mode535,18071
  ulong max_sort_length;Query_cache_query_flags::max_sort_length536,18089
  ulong group_concat_max_len;Query_cache_query_flags::group_concat_max_len537,18114
  ulong default_week_format;Query_cache_query_flags::default_week_format538,18144
  ulong div_precision_increment;Query_cache_query_flags::div_precision_increment539,18173
  MY_LOCALE *lc_time_names;Query_cache_query_flags::lc_time_names540,18206
#define QUERY_CACHE_FLAGS_SIZE 542,18237
#define query_cache_abort(544,18323
#define query_cache_end_of_result(545,18373
#define query_cache_store_query(546,18439
#define query_cache_destroy(547,18507
#define query_cache_result_size_limit(548,18559
#define query_cache_init(549,18633
#define query_cache_resize(550,18679
#define query_cache_set_min_res_unit(551,18731
#define query_cache_invalidate3(552,18803
#define query_cache_invalidate1(553,18876
#define query_cache_send_result_to_client(554,18937
#define query_cache_invalidate_by_MyISAM_filename_ref 556,19035
#define query_cache_maybe_disabled(559,19186
#define query_cache_is_cacheable_query(561,19334
#define QUERY_CACHE_FLAGS_SIZE 564,19452
#define query_cache_store_query(565,19485
#define query_cache_destroy(566,19523
#define query_cache_result_size_limit(567,19553
#define query_cache_init(568,19594
#define query_cache_resize(569,19621
#define query_cache_set_min_res_unit(570,19651
#define query_cache_invalidate3(571,19691
#define query_cache_invalidate1(572,19732
#define query_cache_send_result_to_client(573,19767
#define query_cache_invalidate_by_MyISAM_filename_ref 574,19820
#define query_cache_abort(576,19880
#define query_cache_end_of_result(577,19909
#define query_cache_invalidate_by_MyISAM_filename_ref 578,19946
#define query_cache_maybe_disabled(579,20005
#define query_cache_is_cacheable_query(580,20045

sql/sql_callback.h,106
#define SQL_CALLBACK_INCLUDED19,761
#define MYSQL_CALLBACK(33,1166
#define MYSQL_CALLBACK_ELSE(39,1389

sql/sql_class.h,63462
#define SQL_CLASS_INCLUDED18,773
enum enum_enable_or_disable 58,1910
enum enum_enable_or_disable { LEAVE_AS_IS,enum_enable_or_disable::LEAVE_AS_IS58,1910
enum enum_enable_or_disable { LEAVE_AS_IS, ENABLE,enum_enable_or_disable::ENABLE58,1910
enum enum_enable_or_disable { LEAVE_AS_IS, ENABLE, DISABLE enum_enable_or_disable::DISABLE58,1910
enum enum_ha_read_modes 59,1972
enum enum_ha_read_modes { RFIRST,enum_ha_read_modes::RFIRST59,1972
enum enum_ha_read_modes { RFIRST, RNEXT,enum_ha_read_modes::RNEXT59,1972
enum enum_ha_read_modes { RFIRST, RNEXT, RPREV,enum_ha_read_modes::RPREV59,1972
enum enum_ha_read_modes { RFIRST, RNEXT, RPREV, RLAST,enum_ha_read_modes::RLAST59,1972
enum enum_ha_read_modes { RFIRST, RNEXT, RPREV, RLAST, RKEY,enum_ha_read_modes::RKEY59,1972
enum enum_ha_read_modes { RFIRST, RNEXT, RPREV, RLAST, RKEY, RNEXT_SAME enum_ha_read_modes::RNEXT_SAME59,1972
enum enum_duplicates 60,2047
enum enum_duplicates { DUP_ERROR,enum_duplicates::DUP_ERROR60,2047
enum enum_duplicates { DUP_ERROR, DUP_REPLACE,enum_duplicates::DUP_REPLACE60,2047
enum enum_duplicates { DUP_ERROR, DUP_REPLACE, DUP_UPDATE enum_duplicates::DUP_UPDATE60,2047
enum enum_delay_key_write 61,2108
enum enum_delay_key_write { DELAY_KEY_WRITE_NONE,enum_delay_key_write::DELAY_KEY_WRITE_NONE61,2108
enum enum_delay_key_write { DELAY_KEY_WRITE_NONE, DELAY_KEY_WRITE_ON,enum_delay_key_write::DELAY_KEY_WRITE_ON61,2108
			    DELAY_KEY_WRITE_ALL enum_delay_key_write::DELAY_KEY_WRITE_ALL62,2178
enum enum_slave_exec_mode 63,2208
enum enum_slave_exec_mode { SLAVE_EXEC_MODE_STRICT,enum_slave_exec_mode::SLAVE_EXEC_MODE_STRICT63,2208
                            SLAVE_EXEC_MODE_IDEMPOTENT,enum_slave_exec_mode::SLAVE_EXEC_MODE_IDEMPOTENT64,2260
                            SLAVE_EXEC_MODE_LAST_BIT}enum_slave_exec_mode::SLAVE_EXEC_MODE_LAST_BIT65,2316
enum enum_slave_type_conversions 66,2371
enum enum_slave_type_conversions { SLAVE_TYPE_CONVERSIONS_ALL_LOSSY,enum_slave_type_conversions::SLAVE_TYPE_CONVERSIONS_ALL_LOSSY66,2371
                                   SLAVE_TYPE_CONVERSIONS_ALL_NON_LOSSY}enum_slave_type_conversions::SLAVE_TYPE_CONVERSIONS_ALL_NON_LOSSY67,2440
enum enum_mark_columns68,2514
{ MARK_COLUMNS_NONE,enum_mark_columns::MARK_COLUMNS_NONE69,2537
{ MARK_COLUMNS_NONE, MARK_COLUMNS_READ,enum_mark_columns::MARK_COLUMNS_READ69,2537
{ MARK_COLUMNS_NONE, MARK_COLUMNS_READ, MARK_COLUMNS_WRITE}enum_mark_columns::MARK_COLUMNS_WRITE69,2537
enum enum_filetype 70,2598
enum enum_filetype { FILETYPE_CSV,enum_filetype::FILETYPE_CSV70,2598
enum enum_filetype { FILETYPE_CSV, FILETYPE_XML enum_filetype::FILETYPE_XML70,2598
#define MODE_REAL_AS_FLOAT 73,2713
#define MODE_PIPES_AS_CONCAT 74,2755
#define MODE_ANSI_QUOTES 75,2797
#define MODE_IGNORE_SPACE 76,2839
#define MODE_NOT_USED 77,2881
#define MODE_ONLY_FULL_GROUP_BY 78,2924
#define MODE_NO_UNSIGNED_SUBTRACTION 79,2967
#define MODE_NO_DIR_IN_CREATE 80,3010
#define MODE_POSTGRESQL 81,3054
#define MODE_ORACLE 82,3098
#define MODE_MSSQL 83,3142
#define MODE_DB2 84,3187
#define MODE_MAXDB 85,3232
#define MODE_NO_KEY_OPTIONS 86,3277
#define MODE_NO_TABLE_OPTIONS 87,3322
#define MODE_NO_FIELD_OPTIONS 88,3368
#define MODE_MYSQL323 89,3414
#define MODE_MYSQL40 90,3461
#define MODE_ANSI 91,3519
#define MODE_NO_AUTO_VALUE_ON_ZERO 92,3576
#define MODE_NO_BACKSLASH_ESCAPES 93,3630
#define MODE_STRICT_TRANS_TABLES 94,3701
#define MODE_STRICT_ALL_TABLES 95,3771
#define MODE_NO_ZERO_IN_DATE 96,3840
#define MODE_NO_ZERO_DATE 97,3907
#define MODE_INVALID_DATES 98,3972
#define MODE_ERROR_FOR_DIVISION_BY_ZERO 99,4034
#define MODE_TRADITIONAL 100,4097
#define MODE_NO_AUTO_CREATE_USER 101,4173
#define MODE_HIGH_NOT_PRECEDENCE 102,4234
#define MODE_NO_ENGINE_SUBSTITUTION 103,4303
#define MODE_PAD_CHAR_TO_FULL_LENGTH 104,4372
class CSET_STRING119,4760
  LEX_STRING string;CSET_STRING::string122,4789
  CHARSET_INFO *cs;CSET_STRING::cs123,4810
  CSET_STRING(CSET_STRING::CSET_STRING125,4838
  CSET_STRING(CSET_STRING::CSET_STRING130,4928
  inline char *str(CSET_STRING::str138,5111
  inline uint32 length(CSET_STRING::length139,5161
  CHARSET_INFO *charset(CSET_STRING::charset140,5218
#define TC_LOG_PAGE_SIZE 147,5369
#define TC_LOG_MIN_SIZE 148,5401
#define TC_HEURISTIC_RECOVER_COMMIT 150,5450
#define TC_HEURISTIC_RECOVER_ROLLBACK 151,5490
typedef struct st_user_var_events154,5566
  user_var_entry *user_var_event;st_user_var_events::user_var_event156,5602
  char *value;st_user_var_events::value157,5636
  ulong length;st_user_var_events::length158,5651
  Item_result type;st_user_var_events::type159,5667
  uint charset_number;st_user_var_events::charset_number160,5687
  bool unsigned_flag;st_user_var_events::unsigned_flag161,5710
} BINLOG_USER_VAR_EVENT;162,5732
typedef struct st_copy_info 176,6346
  ha_rows records;st_copy_info::records177,6376
  ha_rows deleted;st_copy_info::deleted178,6431
  ha_rows updated;st_copy_info::updated179,6484
  ha_rows copied;st_copy_info::copied180,6537
  ha_rows error_count;st_copy_info::error_count181,6589
  ha_rows touched;st_copy_info::touched182,6612
  enum enum_duplicates handle_duplicates;st_copy_info::handle_duplicates183,6663
  int escape_char,st_copy_info::escape_char184,6705
  int escape_char, last_errno;st_copy_info::last_errno184,6705
  bool ignore;st_copy_info::ignore185,6736
  List<Item> *update_fields;st_copy_info::update_fields187,6781
  List<Item> *update_values;st_copy_info::update_values188,6810
  TABLE_LIST *view;st_copy_info::view190,6878
} COPY_INFO;191,6898
class Key_part_spec 194,6913
  LEX_STRING field_name;Key_part_spec::field_name196,6961
  uint length;Key_part_spec::length197,6986
  Key_part_spec(Key_part_spec::Key_part_spec198,7001
  Key_part_spec(Key_part_spec::Key_part_spec201,7092
  Key_part_spec *clone(Key_part_spec::clone214,7615
class Alter_drop 219,7719
  enum drop_type Alter_drop::drop_type221,7764
  enum drop_type {KEY,Alter_drop::drop_type::KEY221,7764
  enum drop_type {KEY, COLUMN Alter_drop::drop_type::COLUMN221,7764
  const char *name;Alter_drop::name222,7797
  enum drop_type type;Alter_drop::type223,7817
  Alter_drop(Alter_drop::Alter_drop224,7840
  Alter_drop *clone(Alter_drop::clone230,8053
class Alter_column 235,8153
  const char *name;Alter_column::name237,8200
  Item *def;Alter_column::def238,8220
  Alter_column(Alter_column::Alter_column239,8233
  Alter_column *clone(Alter_column::clone245,8436
class Key 250,8540
  enum Keytype Key::Keytype252,8578
  enum Keytype { PRIMARY,Key::Keytype::PRIMARY252,8578
  enum Keytype { PRIMARY, UNIQUE,Key::Keytype::UNIQUE252,8578
  enum Keytype { PRIMARY, UNIQUE, MULTIPLE,Key::Keytype::MULTIPLE252,8578
  enum Keytype { PRIMARY, UNIQUE, MULTIPLE, FULLTEXT,Key::Keytype::FULLTEXT252,8578
  enum Keytype { PRIMARY, UNIQUE, MULTIPLE, FULLTEXT, SPATIAL,Key::Keytype::SPATIAL252,8578
  enum Keytype { PRIMARY, UNIQUE, MULTIPLE, FULLTEXT, SPATIAL, FOREIGN_KEY,Key::Keytype::FOREIGN_KEY252,8578
  enum Keytype { PRIMARY, UNIQUE, MULTIPLE, FULLTEXT, SPATIAL, FOREIGN_KEY, CLUSTERING}Key::Keytype::CLUSTERING252,8578
  enum Keytype type;Key::type253,8667
  KEY_CREATE_INFO key_create_info;Key::key_create_info254,8688
  List<Key_part_spec> columns;Key::columns255,8723
  LEX_STRING name;Key::name256,8754
  bool generated;Key::generated257,8773
  Key(Key::Key259,8792
  Key(Key::Key265,9057
  virtual ~Key(Key::~Key275,9430
  virtual Key *clone(Key::clone282,9667
class Foreign_key:Foreign_key288,9790
  enum fk_match_opt Foreign_key::fk_match_opt290,9830
  enum fk_match_opt { FK_MATCH_UNDEF,Foreign_key::fk_match_opt::FK_MATCH_UNDEF290,9830
  enum fk_match_opt { FK_MATCH_UNDEF, FK_MATCH_FULL,Foreign_key::fk_match_opt::FK_MATCH_FULL290,9830
		      FK_MATCH_PARTIAL,Foreign_key::fk_match_opt::FK_MATCH_PARTIAL291,9883
		      FK_MATCH_PARTIAL, FK_MATCH_SIMPLE}Foreign_key::fk_match_opt::FK_MATCH_SIMPLE291,9883
  enum fk_option Foreign_key::fk_option292,9927
  enum fk_option { FK_OPTION_UNDEF,Foreign_key::fk_option::FK_OPTION_UNDEF292,9927
  enum fk_option { FK_OPTION_UNDEF, FK_OPTION_RESTRICT,Foreign_key::fk_option::FK_OPTION_RESTRICT292,9927
  enum fk_option { FK_OPTION_UNDEF, FK_OPTION_RESTRICT, FK_OPTION_CASCADE,Foreign_key::fk_option::FK_OPTION_CASCADE292,9927
		   FK_OPTION_SET_NULL,Foreign_key::fk_option::FK_OPTION_SET_NULL293,10002
		   FK_OPTION_SET_NULL, FK_OPTION_NO_ACTION,Foreign_key::fk_option::FK_OPTION_NO_ACTION293,10002
		   FK_OPTION_SET_NULL, FK_OPTION_NO_ACTION, FK_OPTION_DEFAULT}Foreign_key::fk_option::FK_OPTION_DEFAULT293,10002
  Table_ident *ref_table;Foreign_key::ref_table295,10069
  List<Key_part_spec> ref_columns;Foreign_key::ref_columns296,10095
  uint delete_opt,Foreign_key::delete_opt297,10130
  uint delete_opt, update_opt,Foreign_key::update_opt297,10130
  uint delete_opt, update_opt, match_opt;Foreign_key::match_opt297,10130
  Foreign_key(Foreign_key::Foreign_key298,10172
  virtual Key *clone(Foreign_key::clone311,10751
typedef struct st_mysql_lock315,10860
  TABLE **table;st_mysql_lock::table317,10891
  uint table_count,st_mysql_lock::table_count318,10908
  uint table_count,lock_count;st_mysql_lock::lock_count318,10908
  THR_LOCK_DATA **locks;st_mysql_lock::locks319,10939
} MYSQL_LOCK;320,10964
class LEX_COLUMN 323,10980
  String column;LEX_COLUMN::column326,11026
  uint rights;LEX_COLUMN::rights327,11043
  LEX_COLUMN LEX_COLUMN::LEX_COLUMN328,11058
struct Query_cache_tls339,11240
  Query_cache_block *first_query_block;Query_cache_tls::first_query_block345,11393
  void set_first_query_block(Query_cache_tls::set_first_query_block346,11433
  Query_cache_tls(Query_cache_tls::Query_cache_tls351,11559
typedef enum enum_diag_condition_item_name360,11758
  DIAG_CLASS_ORIGIN=enum_diag_condition_item_name::DIAG_CLASS_ORIGIN367,11914
  FIRST_DIAG_SET_PROPERTY=enum_diag_condition_item_name::FIRST_DIAG_SET_PROPERTY368,11938
  FIRST_DIAG_SET_PROPERTY= DIAG_CLASS_ORIGIN,enum_diag_condition_item_name::DIAG_CLASS_ORIGIN368,11938
  DIAG_SUBCLASS_ORIGIN=enum_diag_condition_item_name::DIAG_SUBCLASS_ORIGIN369,11984
  DIAG_CONSTRAINT_CATALOG=enum_diag_condition_item_name::DIAG_CONSTRAINT_CATALOG370,12011
  DIAG_CONSTRAINT_SCHEMA=enum_diag_condition_item_name::DIAG_CONSTRAINT_SCHEMA371,12041
  DIAG_CONSTRAINT_NAME=enum_diag_condition_item_name::DIAG_CONSTRAINT_NAME372,12070
  DIAG_CATALOG_NAME=enum_diag_condition_item_name::DIAG_CATALOG_NAME373,12097
  DIAG_SCHEMA_NAME=enum_diag_condition_item_name::DIAG_SCHEMA_NAME374,12121
  DIAG_TABLE_NAME=enum_diag_condition_item_name::DIAG_TABLE_NAME375,12144
  DIAG_COLUMN_NAME=enum_diag_condition_item_name::DIAG_COLUMN_NAME376,12166
  DIAG_CURSOR_NAME=enum_diag_condition_item_name::DIAG_CURSOR_NAME377,12189
  DIAG_MESSAGE_TEXT=enum_diag_condition_item_name::DIAG_MESSAGE_TEXT378,12212
  DIAG_MYSQL_ERRNO=enum_diag_condition_item_name::DIAG_MYSQL_ERRNO379,12237
  LAST_DIAG_SET_PROPERTY=enum_diag_condition_item_name::LAST_DIAG_SET_PROPERTY380,12261
  LAST_DIAG_SET_PROPERTY= DIAG_MYSQL_ERRNOenum_diag_condition_item_name::DIAG_MYSQL_ERRNO380,12261
} Diag_condition_item_name;381,12304
#define THD_SENTRY_MAGIC 395,12594
#define THD_SENTRY_GONE 396,12630
#define THD_CHECK_SENTRY(398,12667
typedef struct system_variables400,12748
  ulong dynamic_variables_version;system_variables::dynamic_variables_version411,13211
  char* dynamic_variables_ptr;system_variables::dynamic_variables_ptr412,13246
  uint dynamic_variables_head;system_variables::dynamic_variables_head413,13277
  uint dynamic_variables_size;system_variables::dynamic_variables_size414,13347
  LIST *dynamic_variables_allocs;system_variables::dynamic_variables_allocs415,13413
  ulonglong max_heap_table_size;system_variables::max_heap_table_size417,13493
  ulonglong tmp_table_size;system_variables::tmp_table_size418,13526
  ulonglong long_query_time;system_variables::long_query_time419,13554
  ulonglong optimizer_switch;system_variables::optimizer_switch420,13583
  ulonglong sql_mode;system_variables::sql_mode421,13613
  ulonglong option_bits;system_variables::option_bits422,13691
  ha_rows select_limit;system_variables::select_limit423,13765
  ha_rows max_join_size;system_variables::max_join_size424,13789
  ulong auto_increment_increment,system_variables::auto_increment_increment425,13814
  ulong auto_increment_increment, auto_increment_offset;system_variables::auto_increment_offset425,13814
  ulong bulk_insert_buff_size;system_variables::bulk_insert_buff_size426,13871
  ulong join_buff_size;system_variables::join_buff_size427,13902
  ulong lock_wait_timeout;system_variables::lock_wait_timeout428,13926
  ulong max_allowed_packet;system_variables::max_allowed_packet429,13953
  ulong max_error_count;system_variables::max_error_count430,13981
  ulong max_length_for_sort_data;system_variables::max_length_for_sort_data431,14006
  ulong max_sort_length;system_variables::max_sort_length432,14040
  ulong max_tmp_tables;system_variables::max_tmp_tables433,14065
  ulong max_insert_delayed_threads;system_variables::max_insert_delayed_threads434,14089
  ulong min_examined_row_limit;system_variables::min_examined_row_limit435,14125
  ulong multi_range_count;system_variables::multi_range_count436,14157
  ulong net_buffer_length;system_variables::net_buffer_length437,14184
  ulong net_interactive_timeout;system_variables::net_interactive_timeout438,14211
  ulong net_read_timeout;system_variables::net_read_timeout439,14244
  ulong net_retry_count;system_variables::net_retry_count440,14270
  ulong net_wait_timeout;system_variables::net_wait_timeout441,14295
  ulong net_write_timeout;system_variables::net_write_timeout442,14321
  ulong optimizer_prune_level;system_variables::optimizer_prune_level443,14348
  ulong optimizer_search_depth;system_variables::optimizer_search_depth444,14379
  ulong preload_buff_size;system_variables::preload_buff_size445,14411
  ulong profiling_history_size;system_variables::profiling_history_size446,14438
  ulong read_buff_size;system_variables::read_buff_size447,14470
  ulong read_rnd_buff_size;system_variables::read_rnd_buff_size448,14494
  ulong div_precincrement;system_variables::div_precincrement449,14522
  ulong sortbuff_size;system_variables::sortbuff_size450,14549
  ulong max_sp_recursion_depth;system_variables::max_sp_recursion_depth451,14572
  ulong default_week_format;system_variables::default_week_format452,14604
  ulong max_seeks_for_key;system_variables::max_seeks_for_key453,14633
  ulong range_alloc_block_size;system_variables::range_alloc_block_size454,14660
  ulong query_alloc_block_size;system_variables::query_alloc_block_size455,14692
  ulong query_prealloc_size;system_variables::query_prealloc_size456,14724
  ulong trans_alloc_block_size;system_variables::trans_alloc_block_size457,14753
  ulong trans_prealloc_size;system_variables::trans_prealloc_size458,14785
  ulong log_warnings;system_variables::log_warnings459,14814
  ulong group_concat_max_len;system_variables::group_concat_max_len460,14836
  ulong binlog_format;system_variables::binlog_format462,14867
  my_bool binlog_direct_non_trans_update;system_variables::binlog_direct_non_trans_update463,14947
  my_bool sql_log_bin;system_variables::sql_log_bin464,14989
  ulong completion_type;system_variables::completion_type465,15012
  ulong query_cache_type;system_variables::query_cache_type466,15037
  ulong tx_isolation;system_variables::tx_isolation467,15063
  ulong updatable_views_with_limit;system_variables::updatable_views_with_limit468,15085
  uint max_user_connections;system_variables::max_user_connections469,15121
  my_thread_id pseudo_thread_id;system_variables::pseudo_thread_id474,15284
  my_bool low_priority_updates;system_variables::low_priority_updates476,15318
  my_bool new_mode;system_variables::new_mode477,15350
  my_bool query_cache_wlock_invalidate;system_variables::query_cache_wlock_invalidate478,15370
  my_bool engine_condition_pushdown;system_variables::engine_condition_pushdown479,15410
  my_bool keep_files_on_create;system_variables::keep_files_on_create480,15447
  my_bool old_alter_table;system_variables::old_alter_table482,15480
  my_bool old_passwords;system_variables::old_passwords483,15507
  my_bool big_tables;system_variables::big_tables484,15532
  plugin_ref table_plugin;system_variables::table_plugin486,15555
  CHARSET_INFO  *character_set_filesystem;system_variables::character_set_filesystem489,15640
  CHARSET_INFO  *character_set_client;system_variables::character_set_client490,15683
  CHARSET_INFO  *character_set_results;system_variables::character_set_results491,15722
  CHARSET_INFO	*collation_server;system_variables::collation_server494,15837
  CHARSET_INFO	*collation_database;system_variables::collation_database495,15871
  CHARSET_INFO  *collation_connection;system_variables::collation_connection496,15907
  MY_LOCALE *lc_messages;system_variables::lc_messages499,15970
  MY_LOCALE *lc_time_names;system_variables::lc_time_names501,16019
  Time_zone *time_zone;system_variables::time_zone503,16048
  my_bool sysdate_is_now;system_variables::sysdate_is_now505,16073
  double long_query_time_double;system_variables::long_query_time_double507,16100
  my_bool pseudo_slave_mode;system_variables::pseudo_slave_mode509,16134
} SV;511,16164
typedef struct system_status_var520,16314
  ulong com_other;system_status_var::com_other522,16349
  ulong com_stat[system_status_var::com_stat523,16368
  ulong created_tmp_disk_tables;system_status_var::created_tmp_disk_tables524,16405
  ulong created_tmp_tables;system_status_var::created_tmp_tables525,16438
  ulong ha_commit_count;system_status_var::ha_commit_count526,16466
  ulong ha_delete_count;system_status_var::ha_delete_count527,16491
  ulong ha_read_first_count;system_status_var::ha_read_first_count528,16516
  ulong ha_read_last_count;system_status_var::ha_read_last_count529,16545
  ulong ha_read_key_count;system_status_var::ha_read_key_count530,16573
  ulong ha_read_next_count;system_status_var::ha_read_next_count531,16600
  ulong ha_read_prev_count;system_status_var::ha_read_prev_count532,16628
  ulong ha_read_rnd_count;system_status_var::ha_read_rnd_count533,16656
  ulong ha_read_rnd_next_count;system_status_var::ha_read_rnd_next_count534,16683
  ulong ha_rollback_count;system_status_var::ha_rollback_count535,16715
  ulong ha_update_count;system_status_var::ha_update_count536,16742
  ulong ha_write_count;system_status_var::ha_write_count537,16767
  ulong ha_prepare_count;system_status_var::ha_prepare_count538,16791
  ulong ha_discover_count;system_status_var::ha_discover_count539,16817
  ulong ha_savepoint_count;system_status_var::ha_savepoint_count540,16844
  ulong ha_savepoint_rollback_count;system_status_var::ha_savepoint_rollback_count541,16872
  ulong key_blocks_changed;system_status_var::key_blocks_changed544,16968
  ulong key_blocks_used;system_status_var::key_blocks_used545,16996
  ulong key_cache_r_requests;system_status_var::key_cache_r_requests546,17021
  ulong key_cache_read;system_status_var::key_cache_read547,17051
  ulong key_cache_w_requests;system_status_var::key_cache_w_requests548,17075
  ulong key_cache_write;system_status_var::key_cache_write549,17105
  ulong net_big_packet_count;system_status_var::net_big_packet_count552,17162
  ulong opened_tables;system_status_var::opened_tables553,17192
  ulong opened_shares;system_status_var::opened_shares554,17215
  ulong select_full_join_count;system_status_var::select_full_join_count555,17238
  ulong select_full_range_join_count;system_status_var::select_full_range_join_count556,17270
  ulong select_range_count;system_status_var::select_range_count557,17308
  ulong select_range_check_count;system_status_var::select_range_check_count558,17336
  ulong select_scan_count;system_status_var::select_scan_count559,17370
  ulong long_query_count;system_status_var::long_query_count560,17397
  ulong filesort_merge_passes;system_status_var::filesort_merge_passes561,17423
  ulong filesort_range_count;system_status_var::filesort_range_count562,17454
  ulong filesort_rows;system_status_var::filesort_rows563,17484
  ulong filesort_scan_count;system_status_var::filesort_scan_count564,17507
  ulong com_stmt_prepare;system_status_var::com_stmt_prepare566,17584
  ulong com_stmt_reprepare;system_status_var::com_stmt_reprepare567,17610
  ulong com_stmt_execute;system_status_var::com_stmt_execute568,17638
  ulong com_stmt_send_long_data;system_status_var::com_stmt_send_long_data569,17664
  ulong com_stmt_fetch;system_status_var::com_stmt_fetch570,17697
  ulong com_stmt_reset;system_status_var::com_stmt_reset571,17721
  ulong com_stmt_close;system_status_var::com_stmt_close572,17745
  ulong questions;system_status_var::questions576,17825
  ulonglong bytes_received;system_status_var::bytes_received578,17845
  ulonglong bytes_sent;system_status_var::bytes_sent579,17873
  double last_query_cost;system_status_var::last_query_cost586,18106
} STATUS_VAR;587,18132
#define last_system_status_var 595,18308
#define INIT_ARENA_DBUG_INFO 606,18556
#define INIT_ARENA_DBUG_INFO608,18633
class Query_arena611,18670
  Item *free_list;Query_arena::free_list618,18847
  MEM_ROOT *mem_root;Query_arena::mem_root619,18866
  bool is_backup_arena;Query_arena::is_backup_arena621,18953
  bool is_reprepared;Query_arena::is_reprepared622,19022
  enum enum_stateQuery_arena::enum_state631,19366
    STMT_INITIALIZED=Query_arena::enum_state::STMT_INITIALIZED633,19388
    STMT_INITIALIZED= 0, STMT_INITIALIZED_FOR_SP=Query_arena::enum_state::STMT_INITIALIZED_FOR_SP633,19388
    STMT_INITIALIZED= 0, STMT_INITIALIZED_FOR_SP= 1, STMT_PREPARED=Query_arena::enum_state::STMT_PREPARED633,19388
    STMT_CONVENTIONAL_EXECUTION=Query_arena::enum_state::STMT_CONVENTIONAL_EXECUTION634,19459
    STMT_CONVENTIONAL_EXECUTION= 3, STMT_EXECUTED=Query_arena::enum_state::STMT_EXECUTED634,19459
    STMT_CONVENTIONAL_EXECUTION= 3, STMT_EXECUTED= 4, STMT_ERROR=Query_arena::enum_state::STMT_ERROR634,19459
  enum_state state;Query_arena::state637,19534
  enum TypeQuery_arena::Type640,19617
    STATEMENT,Query_arena::Type::STATEMENT642,19633
    STATEMENT, PREPARED_STATEMENT,Query_arena::Type::PREPARED_STATEMENT642,19633
    STATEMENT, PREPARED_STATEMENT, STORED_PROCEDUREQuery_arena::Type::STORED_PROCEDURE642,19633
  Query_arena(Query_arena::Query_arena645,19691
  Query_arena(Query_arena::Query_arena652,19976
  virtual ~Query_arena(Query_arena::~Query_arena655,20048
  inline bool is_stmt_prepare(Query_arena::is_stmt_prepare657,20078
  inline bool is_stmt_prepare_or_first_sp_execute(Query_arena::is_stmt_prepare_or_first_sp_execute658,20154
  inline bool is_stmt_prepare_or_first_stmt_execute(Query_arena::is_stmt_prepare_or_first_stmt_execute660,20258
  inline bool is_conventional(Query_arena::is_conventional662,20365
  inline void* alloc(Query_arena::alloc665,20455
  inline void* calloc(Query_arena::calloc666,20527
  inline char *strdup(Query_arena::strdup673,20666
  inline char *strmake(Query_arena::strmake675,20745
  inline void *memdup(Query_arena::memdup677,20844
  inline void *memdup_w_gap(Query_arena::memdup_w_gap679,20941
class Statement:Statement713,22002
   ulong id;Statement::id722,22332
  enum enum_mark_columns mark_used_columns;Statement::mark_used_columns735,22921
  LEX_STRING name;Statement::name737,22966
  LEX *lex;Statement::lex738,23026
  CSET_STRING query_string;Statement::query_string755,23809
  inline char *query(Statement::query757,23838
  inline uint32 query_length(Statement::query_length758,23898
  CHARSET_INFO *query_charset(Statement::query_charset759,23969
  void set_query_inner(Statement::set_query_inner760,24042
  void set_query_inner(Statement::set_query_inner764,24134
  void reset_query_inner(Statement::reset_query_inner769,24323
  char *db;Statement::db786,24897
  size_t db_length;Statement::db_length787,24909
  Statement(Statement::Statement792,24996
class Statement_map818,25880
  Statement *find_by_name(Statement_map::find_by_name825,25977
  Statement *find(Statement_map::find833,26189
  HASH st_hash;Statement_map::st_hash856,26929
  HASH names_hash;Statement_map::names_hash857,26945
  I_List<Statement> transient_cursor_list;Statement_map::transient_cursor_list858,26964
  Statement *last_found_statement;Statement_map::last_found_statement859,27007
struct st_savepoint 862,27046
  struct st_savepoint *prev;st_savepoint::prev863,27068
  char                *name;st_savepoint::name864,27097
  uint                 length;st_savepoint::length865,27126
  Ha_trx_info         *ha_list;st_savepoint::ha_list866,27157
  MDL_savepoint        mdl_savepoint;st_savepoint::mdl_savepoint868,27253
enum xa_states 871,27295
enum xa_states {XA_NOTR=xa_states::XA_NOTR871,27295
enum xa_states {XA_NOTR=0, XA_ACTIVE,xa_states::XA_ACTIVE871,27295
enum xa_states {XA_NOTR=0, XA_ACTIVE, XA_IDLE,xa_states::XA_IDLE871,27295
enum xa_states {XA_NOTR=0, XA_ACTIVE, XA_IDLE, XA_PREPARED,xa_states::XA_PREPARED871,27295
enum xa_states {XA_NOTR=0, XA_ACTIVE, XA_IDLE, XA_PREPARED, XA_ROLLBACK_ONLY}xa_states::XA_ROLLBACK_ONLY871,27295
typedef struct st_xid_state 874,27412
  XID  xid;st_xid_state::xid876,27511
  enum xa_states xa_state;st_xid_state::xa_state877,27575
  bool in_thd;st_xid_state::in_thd878,27641
  uint rm_error;st_xid_state::rm_error880,27736
} XID_STATE;881,27753
class Security_context 897,28176
  Security_context(Security_context::Security_context899,28209
  char   *host,Security_context::host907,28514
  char   *host, *user,Security_context::user907,28514
  char   *host, *user, *ip;Security_context::ip907,28514
  char   priv_user[Security_context::priv_user908,28542
  char   proxy_user[Security_context::proxy_user909,28579
  char   priv_host[Security_context::priv_host911,28676
  char   *external_user;Security_context::external_user913,28751
  const char *host_or_ip;Security_context::host_or_ip915,28844
  ulong master_access;Security_context::master_access916,28870
  ulong db_access;Security_context::db_access917,28949
  inline char *priv_host_name(Security_context::priv_host_name922,29076
typedef I_List<Item_change_record> Item_change_list;952,29856
enum enum_locked_tables_mode960,30017
  LTM_NONE=enum_locked_tables_mode::LTM_NONE962,30048
  LTM_LOCK_TABLES,enum_locked_tables_mode::LTM_LOCK_TABLES963,30063
  LTM_PRELOCKED,enum_locked_tables_mode::LTM_PRELOCKED964,30082
  LTM_PRELOCKED_UNDER_LOCK_TABLESenum_locked_tables_mode::LTM_PRELOCKED_UNDER_LOCK_TABLES965,30099
class Open_tables_state975,30340
  Reprepare_observer *m_reprepare_observer;Open_tables_state::m_reprepare_observer990,30873
  TABLE *open_tables;Open_tables_state::open_tables996,31060
  TABLE *temporary_tables;Open_tables_state::temporary_tables1004,31403
  TABLE *derived_tables;Open_tables_state::derived_tables1005,31430
  MYSQL_LOCK *lock;Open_tables_state::lock1020,32188
  MYSQL_LOCK *extra_lock;Open_tables_state::extra_lock1027,32411
  enum enum_locked_tables_mode locked_tables_mode;Open_tables_state::locked_tables_mode1057,33852
  uint current_tablenr;Open_tables_state::current_tablenr1058,33903
  enum enum_flags Open_tables_state::enum_flags1060,33928
    BACKUPS_AVAIL Open_tables_state::enum_flags::BACKUPS_AVAIL1061,33948
    BACKUPS_AVAIL = (1U Open_tables_state::enum_flags::U1061,33948
  uint state_flags;Open_tables_state::state_flags1067,34088
  Open_tables_state(Open_tables_state::Open_tables_state1074,34381
  void set_open_tables_state(Open_tables_state::set_open_tables_state1076,34426
  void reset_open_tables_state(Open_tables_state::reset_open_tables_state1081,34509
class Open_tables_backup:Open_tables_backup1098,34872
  MDL_savepoint mdl_system_tables_svp;Open_tables_backup::mdl_system_tables_svp1108,35199
#define SUB_STMT_TRIGGER 1118,35403
#define SUB_STMT_FUNCTION 1119,35430
class Sub_statement_state1122,35460
  ulonglong option_bits;Sub_statement_state::option_bits1125,35496
  ulonglong first_successful_insert_id_in_prev_stmt;Sub_statement_state::first_successful_insert_id_in_prev_stmt1126,35521
  ulonglong first_successful_insert_id_in_cur_stmt,Sub_statement_state::first_successful_insert_id_in_cur_stmt1127,35574
  ulonglong first_successful_insert_id_in_cur_stmt, insert_id_for_cur_row;Sub_statement_state::insert_id_for_cur_row1127,35574
  Discrete_interval auto_inc_interval_for_cur_row;Sub_statement_state::auto_inc_interval_for_cur_row1128,35649
  Discrete_intervals_list auto_inc_intervals_forced;Sub_statement_state::auto_inc_intervals_forced1129,35700
  ulonglong limit_found_rows;Sub_statement_state::limit_found_rows1130,35753
  ha_rows    cuted_fields,Sub_statement_state::cuted_fields1131,35783
  ha_rows    cuted_fields, sent_row_count,Sub_statement_state::sent_row_count1131,35783
  ha_rows    cuted_fields, sent_row_count, examined_row_count;Sub_statement_state::examined_row_count1131,35783
  ulong client_capabilities;Sub_statement_state::client_capabilities1132,35846
  uint in_sub_stmt;Sub_statement_state::in_sub_stmt1133,35875
  bool enable_slow_log;Sub_statement_state::enable_slow_log1134,35895
  bool last_insert_id_used;Sub_statement_state::last_insert_id_used1135,35919
  SAVEPOINT *savepoints;Sub_statement_state::savepoints1136,35947
  enum enum_check_fields count_cuted_fields;Sub_statement_state::count_cuted_fields1137,35972
enum enum_thread_type1142,36070
  NON_SYSTEM_THREAD=enum_thread_type::NON_SYSTEM_THREAD1144,36094
  SYSTEM_THREAD_DELAYED_INSERT=enum_thread_type::SYSTEM_THREAD_DELAYED_INSERT1145,36118
  SYSTEM_THREAD_SLAVE_IO=enum_thread_type::SYSTEM_THREAD_SLAVE_IO1146,36153
  SYSTEM_THREAD_SLAVE_SQL=enum_thread_type::SYSTEM_THREAD_SLAVE_SQL1147,36182
  SYSTEM_THREAD_NDBCLUSTER_BINLOG=enum_thread_type::SYSTEM_THREAD_NDBCLUSTER_BINLOG1148,36212
  SYSTEM_THREAD_EVENT_SCHEDULER=enum_thread_type::SYSTEM_THREAD_EVENT_SCHEDULER1149,36250
  SYSTEM_THREAD_EVENT_WORKER=enum_thread_type::SYSTEM_THREAD_EVENT_WORKER1150,36287
show_system_thread(1154,36344
#define RETURN_NAME_AS_STRING(1156,36390
#undef RETURN_NAME_AS_STRING1170,36964
class Internal_error_handler1178,37156
  Internal_error_handler(Internal_error_handler::Internal_error_handler1181,37198
  virtual ~Internal_error_handler(Internal_error_handler::~Internal_error_handler1185,37267
  Internal_error_handler *m_prev_internal_handler;Internal_error_handler::m_prev_internal_handler1220,38757
class Dummy_error_handler 1230,38949
  bool handle_condition(Dummy_error_handler::handle_condition1233,39017
class Drop_table_error_handler 1253,39609
  Drop_table_error_handler(Drop_table_error_handler::Drop_table_error_handler1256,39682
private:Drop_table_error_handler::private1266,39998
class Locked_tables_list1295,40921
  MEM_ROOT m_locked_tables_root;Locked_tables_list::m_locked_tables_root1298,40957
  TABLE_LIST *m_locked_tables;Locked_tables_list::m_locked_tables1299,40990
  TABLE_LIST **m_locked_tables_last;Locked_tables_list::m_locked_tables_last1300,41021
  TABLE **m_reopen_array;Locked_tables_list::m_reopen_array1302,41116
  size_t m_locked_tables_count;Locked_tables_list::m_locked_tables_count1309,41367
  Locked_tables_list(Locked_tables_list::Locked_tables_list1311,41407
  ~Locked_tables_list(Locked_tables_list::~Locked_tables_list1320,41671
  TABLE_LIST *locked_tables(Locked_tables_list::locked_tables1325,41769
struct Ha_data1339,42178
  void *ha_ptr;Ha_data::ha_ptr1345,42288
  Ha_trx_info ha_info[Ha_data::ha_info1356,42642
  plugin_ref lock;Ha_data::lock1361,42796
  Ha_data(Ha_data::Ha_data1362,42815
class Global_read_lock1370,42937
  enum enum_grl_stateGlobal_read_lock::enum_grl_state1373,42970
    GRL_NONE,Global_read_lock::enum_grl_state::GRL_NONE1375,42996
    GRL_ACQUIRED,Global_read_lock::enum_grl_state::GRL_ACQUIRED1376,43010
    GRL_ACQUIRED_AND_BLOCKS_COMMITGlobal_read_lock::enum_grl_state::GRL_ACQUIRED_AND_BLOCKS_COMMIT1377,43028
  Global_read_lock(Global_read_lock::Global_read_lock1380,43069
  bool can_acquire_protection(Global_read_lock::can_acquire_protection1392,43387
  bool is_acquired(Global_read_lock::is_acquired1402,43606
  enum_grl_state m_state;Global_read_lock::m_state1405,43719
  MDL_ticket *m_mdl_global_shared_lock;Global_read_lock::m_mdl_global_shared_lock1411,43901
  MDL_ticket *m_mdl_blocks_commits_lock;Global_read_lock::m_mdl_blocks_commits_lock1417,44104
class THD 1429,44356
  inline bool is_stmt_prepare(THD::is_stmt_prepare1433,44432
  inline bool is_stmt_prepare_or_first_sp_execute(THD::is_stmt_prepare_or_first_sp_execute1436,44530
  inline bool is_stmt_prepare_or_first_stmt_execute(THD::is_stmt_prepare_or_first_stmt_execute1439,44668
  inline bool is_conventional(THD::is_conventional1442,44810
  MDL_context mdl_context;THD::mdl_context1446,44916
  Relay_log_info* rli_fake;THD::rli_fake1449,45011
  Relay_log_info* rli_slave;THD::rli_slave1451,45079
  static const char * const DEFAULT_WHERE;THD::DEFAULT_WHERE1460,45348
  struct st_mysql  *mysql;THD::mysql1463,45416
  unsigned long	 client_stmt_id;THD::client_stmt_id1464,45443
  unsigned long  client_param_count;THD::client_param_count1465,45476
  struct st_mysql_bind *client_params;THD::client_params1466,45513
  char *extra_data;THD::extra_data1467,45552
  ulong extra_length;THD::extra_length1468,45572
  struct st_mysql_data *cur_data;THD::cur_data1469,45594
  struct st_mysql_data *first_data;THD::first_data1470,45628
  struct st_mysql_data **data_tail;THD::data_tail1471,45664
  struct st_mysql_stmt *current_stmt;THD::current_stmt1479,45936
  Query_cache_tls query_cache_tls;THD::query_cache_tls1482,46005
  NET	  net;THD::net1484,46047
  Protocol *protocol;THD::protocol1485,46095
  Protocol_text   protocol_text;THD::protocol_text1486,46139
  Protocol_binary protocol_binary;THD::protocol_binary1487,46191
  HASH    user_vars;THD::user_vars1488,46245
  String  packet;THD::packet1489,46295
  String  convert_buffer;THD::convert_buffer1490,46349
  struct  rand_struct rand;THD::rand1491,46423
  struct  system_variables variables;THD::variables1492,46479
  struct  system_status_var status_var;THD::status_var1493,46547
  struct  system_status_var *initial_status_var;THD::initial_status_var1494,46616
  THR_LOCK_INFO lock_info;THD::lock_info1495,46691
  mysql_mutex_t LOCK_thd_data;THD::LOCK_thd_data1503,47020
  Statement_map stmt_map;THD::stmt_map1506,47115
  char	  *thread_stack;THD::thread_stack1511,47274
  char *catalog;THD::catalog1516,47342
  Security_context main_security_ctx;THD::main_security_ctx1531,47890
  Security_context *security_ctx;THD::security_ctx1532,47928
  const char *proc_info;THD::proc_info1546,48454
  const char *where;THD::where1553,48689
  ulong client_capabilities;THD::client_capabilities1555,48711
  ulong max_client_packet_length;THD::max_client_packet_length1556,48772
  HASH		handler_tables_hash;THD::handler_tables_hash1558,48807
  User_level_lock *ull;THD::ull1564,49068
  uint dbug_sentry;THD::dbug_sentry1566,49109
  struct st_my_thread_var *mysys_var;THD::mysys_var1568,49171
  enum enum_server_command command;THD::command1573,49334
  uint32     server_id;THD::server_id1574,49370
  uint32     file_id;THD::file_id1575,49394
  uint16 peer_port;THD::peer_port1577,49469
  time_t     start_time,THD::start_time1578,49489
  time_t     start_time, user_time;THD::user_time1578,49489
  ulonglong  prior_thr_create_utime,THD::prior_thr_create_utime1580,49561
  ulonglong  prior_thr_create_utime, thr_create_utime;THD::thr_create_utime1580,49561
  ulonglong  start_utime,THD::start_utime1581,49616
  ulonglong  start_utime, utime_after_lock;THD::utime_after_lock1581,49616
  thr_lock_type update_lock_default;THD::update_lock_default1583,49661
  Delayed_insert *di;THD::di1584,49698
  uint in_sub_stmt;THD::in_sub_stmt1587,49782
  Ha_data ha_data[THD::ha_data1590,49863
  void set_server_id(THD::set_server_id1611,50670
  inline int binlog_flush_pending_rows_event(THD::binlog_flush_pending_rows_event1625,51333
  int is_current_stmt_binlog_format_row(THD::is_current_stmt_binlog_format_row1641,51915
  enum_binlog_format current_stmt_binlog_format;THD::current_stmt_binlog_format1652,52315
  uint32 binlog_unsafe_warning_flags;THD::binlog_unsafe_warning_flags1666,52861
  uint binlog_table_maps;THD::binlog_table_maps1672,52995
  uint get_binlog_table_maps(THD::get_binlog_table_maps1676,53062
  void clear_binlog_table_maps(THD::clear_binlog_table_maps1679,53135
  struct st_transactions THD::st_transactions1686,53236
    SAVEPOINT *savepoints;THD::st_transactions::savepoints1687,53263
    THD_TRANS all;THD::st_transactions::all1688,53290
    THD_TRANS stmt;THD::st_transactions::stmt1689,53337
    bool on;THD::st_transactions::on1690,53390
    XID_STATE xid_state;THD::st_transactions::xid_state1691,53461
    Rows_log_event *m_pending_rows_event;THD::st_transactions::m_pending_rows_event1692,53486
    CHANGED_TABLE_LIST* changed_tables;THD::st_transactions::changed_tables1699,53770
    MEM_ROOT mem_root;THD::st_transactions::mem_root1700,53810
    void cleanup(THD::st_transactions::cleanup1701,53876
    my_bool is_active(THD::st_transactions::is_active1715,54317
    st_transactions(THD::st_transactions::st_transactions1719,54389
  } transaction;THD::transaction1725,54555
  Global_read_lock global_read_lock;THD::global_read_lock1726,54572
  Field      *dup_field;THD::dup_field1727,54609
  sigset_t signals;THD::signals1729,54650
  Vio* active_vio;THD::active_vio1732,54706
  Item_change_list change_list;THD::change_list1741,55008
  Query_arena *stmt_arena;THD::stmt_arena1755,55709
  table_map table_map_for_update;THD::table_map_for_update1761,55880
  bool arg_of_last_insert_id_function;THD::arg_of_last_insert_id_function1764,55987
  ulonglong  first_successful_insert_id_in_prev_stmt;THD::first_successful_insert_id_in_prev_stmt1777,56545
  ulonglong  first_successful_insert_id_in_prev_stmt_for_binlog;THD::first_successful_insert_id_in_prev_stmt_for_binlog1784,56903
  ulonglong  first_successful_insert_id_in_cur_stmt;THD::first_successful_insert_id_in_cur_stmt1790,57182
  bool       stmt_depends_on_first_successful_insert_id_in_prev_stmt;THD::stmt_depends_on_first_successful_insert_id_in_prev_stmt1819,58602
  Discrete_intervals_list auto_inc_intervals_in_cur_stmt_for_binlog;THD::auto_inc_intervals_in_cur_stmt_for_binlog1834,59420
  Discrete_intervals_list auto_inc_intervals_forced;THD::auto_inc_intervals_forced1836,59535
  inline void record_first_successful_insert_id_in_cur_stmt(THD::record_first_successful_insert_id_in_cur_stmt1873,61719
  inline ulonglong read_first_successful_insert_id_in_prev_stmt(THD::read_first_successful_insert_id_in_prev_stmt1878,61912
  inline void force_one_auto_inc_interval(THD::force_one_auto_inc_interval1894,62509
  ulonglong  limit_found_rows;THD::limit_found_rows1900,62720
  longlong m_row_count_func;THD::m_row_count_func1932,63931
  inline longlong get_row_count_func(THD::get_row_count_func1935,64007
  inline void set_row_count_func(THD::set_row_count_func1940,64090
  ha_rows    cuted_fields;THD::cuted_fields1945,64195
  ha_rows    sent_row_count;THD::sent_row_count1951,64330
  ha_rows    examined_row_count;THD::examined_row_count1963,64773
  USER_CONN *m_user_connect;THD::m_user_connect1966,64816
  const USER_CONN* get_user_connect(THD::get_user_connect1970,64894
  CHARSET_INFO *db_charset;THD::db_charset1985,65220
  Warning_info *warning_info;THD::warning_info1986,65248
  Diagnostics_area *stmt_da;THD::stmt_da1987,65278
  PROFILING  profiling;THD::profiling1989,65338
  query_id_t query_id;THD::query_id2000,65802
  ulong      col_access;THD::col_access2001,65825
  ulong      statement_id_counter;THD::statement_id_counter2004,65925
  ulong	     rand_saved_seed1,THD::rand_saved_seed12005,65960
  ulong	     rand_saved_seed1, rand_saved_seed2;THD::rand_saved_seed22005,65960
  pthread_t  real_id;THD::real_id2006,66009
  my_thread_id  thread_id;THD::thread_id2007,66077
  uint	     tmp_table;THD::tmp_table2008,66104
  uint	     server_status,THD::server_status2009,66127
  uint	     server_status,open_options;THD::open_options2009,66127
  enum enum_thread_type system_thread;THD::system_thread2010,66167
  uint       select_number;THD::select_number2011,66206
  enum_tx_isolation tx_isolation;THD::tx_isolation2036,67447
  enum_check_fields count_cuted_fields;THD::count_cuted_fields2037,67481
  DYNAMIC_ARRAY user_var_events;THD::user_var_events2039,67522
  MEM_ROOT      *user_var_events_alloc;THD::user_var_events_alloc2040,67599
  enum killed_stateTHD::killed_state2048,67923
    NOT_KILLED=THD::killed_state::NOT_KILLED2050,67947
    KILL_BAD_DATA=THD::killed_state::KILL_BAD_DATA2051,67965
    KILL_CONNECTION=THD::killed_state::KILL_CONNECTION2052,67986
    KILL_CONNECTION=ER_SERVER_SHUTDOWN,THD::killed_state::ER_SERVER_SHUTDOWN2052,67986
    KILL_QUERY=THD::killed_state::KILL_QUERY2053,68026
    KILL_QUERY=ER_QUERY_INTERRUPTED,THD::killed_state::ER_QUERY_INTERRUPTED2053,68026
    KILLED_NO_VALUE THD::killed_state::KILLED_NO_VALUE2054,68063
  killed_state volatile killed;THD::killed2056,68127
  char	     scramble[THD::scramble2059,68221
  bool       slave_thread,THD::slave_thread2061,68263
  bool       slave_thread, one_shot_set;THD::one_shot_set2061,68263
  bool	     no_errors;THD::no_errors2062,68304
  uchar      password;THD::password2063,68327
  bool is_fatal_error;THD::is_fatal_error2071,68646
  bool       transaction_rollback_request;THD::transaction_rollback_request2077,68824
  bool       is_fatal_sub_stmt_error;THD::is_fatal_sub_stmt_error2089,69402
  bool	     query_start_used,THD::query_start_used2090,69440
  bool	     query_start_used, rand_used,THD::rand_used2090,69440
  bool	     query_start_used, rand_used, time_zone_used;THD::time_zone_used2090,69440
  bool       substitute_null_with_insert_id;THD::substitute_null_with_insert_id2092,69564
  bool	     in_lock_tables;THD::in_lock_tables2093,69609
  bool       is_slave_error;THD::is_slave_error2100,69901
  bool       bootstrap,THD::bootstrap2101,69930
  bool       bootstrap, cleanup_done;THD::cleanup_done2101,69930
  bool       thread_specific_used;THD::thread_specific_used2104,70042
  bool	     charset_is_system_charset,THD::charset_is_system_charset2109,70188
  bool	     charset_is_system_charset, charset_is_collation_connection;THD::charset_is_collation_connection2109,70188
  bool       charset_is_character_set_filesystem;THD::charset_is_character_set_filesystem2110,70260
  bool       enable_slow_log;THD::enable_slow_log2111,70310
  bool	     abort_on_warning;THD::abort_on_warning2112,70386
  bool 	     got_warning;THD::got_warning2113,70416
  bool       derived_tables_processing;THD::derived_tables_processing2115,70536
  my_bool    tablespace_op;THD::tablespace_op2116,70576
  sp_rcontext *spcont;THD::spcont2118,70653
  sp_cache   *sp_proc_cache;THD::sp_proc_cache2119,70699
  sp_cache   *sp_func_cache;THD::sp_func_cache2120,70728
  uint       query_name_consts;THD::query_name_consts2123,70835
  LOG_INFO*  current_linfo;THD::current_linfo2130,71085
  NET*       slave_net;THD::slave_net2131,71113
    my_bool   my_bool_value;THD::my_bool_value2135,71250
    long      long_value;THD::long_value2136,71279
    ulong     ulong_value;THD::ulong_value2137,71305
    ulonglong ulonglong_value;THD::ulonglong_value2138,71332
  } sys_var_tmp;THD::sys_var_tmp2139,71363
    bool do_union;THD::do_union2147,71601
    bool unioned_events;THD::unioned_events2152,71771
    bool unioned_events_trans;THD::unioned_events_trans2158,71985
    query_id_t first_query_id;THD::first_query_id2164,72161
  } binlog_evt_union;THD::binlog_evt_union2165,72192
  Parser_state *m_parser_state;THD::m_parser_state2172,72405
  Locked_tables_list locked_tables_list;THD::locked_tables_list2174,72438
  partition_info *work_part_info;THD::work_part_info2177,72517
  DYNAMIC_ARRAY audit_class_plugins;THD::audit_class_plugins2186,72741
  unsigned long audit_class_mask[THD::audit_class_mask2191,72923
  struct st_debug_sync_control *debug_sync_control;THD::debug_sync_control2196,73074
  inline void set_active_vio(THD::set_active_vio2218,73852
  inline void clear_active_vio(THD::clear_active_vio2224,73999
  enum enum_binlog_query_type THD::enum_binlog_query_type2238,74321
    ROW_QUERY_TYPE,THD::enum_binlog_query_type::ROW_QUERY_TYPE2240,74425
    STMT_QUERY_TYPE,THD::enum_binlog_query_type::STMT_QUERY_TYPE2243,74508
    QUERY_TYPE_COUNTTHD::enum_binlog_query_type::QUERY_TYPE_COUNT2245,74534
  inline const char* enter_cond(THD::enter_cond2259,74987
  inline void exit_cond(THD::exit_cond2269,75307
  inline time_t query_start(THD::query_start2285,75868
  inline void set_time(THD::set_time2286,75941
  inline void	set_current_time(THD::set_current_time2296,76171
  inline void	set_time(THD::set_time2297,76240
  inline bool	is_valid_time(THD::is_valid_time2303,76440
  void set_time_after_lock(THD::set_time_after_lock2307,76536
  ulonglong current_utime(THD::current_utime2308,76605
  void update_server_status(THD::update_server_status2317,76929
  inline ulonglong found_rows(THD::found_rows2323,77138
  inline bool in_multi_stmt_transaction_mode(THD::in_multi_stmt_transaction_mode2350,78262
  inline bool in_active_multi_stmt_transaction(THD::in_active_multi_stmt_transaction2387,79634
  inline bool fill_derived_tables(THD::fill_derived_tables2391,79742
  inline bool fill_information_schema_tables(THD::fill_information_schema_tables2395,79860
  inline void* trans_alloc(THD::trans_alloc2399,79958
  inline void clear_error(THD::clear_error2426,80979
  inline bool vio_ok(THD::vio_ok2435,81186
  bool is_connected(THD::is_connected2437,81297
  inline bool vio_ok(THD::vio_ok2447,81582
  inline bool is_connected(THD::is_connected2448,81628
  inline void fatal_error(THD::fatal_error2455,81857
  inline bool is_error(THD::is_error2474,82430
  inline CHARSET_INFO *charset(THD::charset2475,82493
  inline Query_arena *activate_stmt_arena_if_needed(THD::activate_stmt_arena_if_needed2478,82595
  void change_item_tree(THD::change_item_tree2492,83025
  inline int killed_errno(THD::killed_errno2508,83600
  inline void send_kill_message(THD::send_kill_message2513,83775
  inline bool really_abort_on_warning(THD::really_abort_on_warning2524,84072
  inline void set_current_stmt_binlog_format_row_if_mixed(THD::set_current_stmt_binlog_format_row_if_mixed2542,84857
  inline void set_current_stmt_binlog_format_row(THD::set_current_stmt_binlog_format_row2568,85955
  inline void clear_current_stmt_binlog_format_row(THD::clear_current_stmt_binlog_format_row2574,86141
  inline void reset_current_stmt_binlog_format_row(THD::reset_current_stmt_binlog_format_row2580,86332
  bool set_db(THD::set_db2633,88576
  void reset_db(THD::reset_db2661,89497
  bool copy_db_to(THD::copy_db_to2671,89804
  thd_scheduler scheduler;THD::scheduler2682,90059
  inline Internal_error_handler *get_internal_handler(THD::get_internal_handler2685,90095
  void set_query(THD::set_query2786,93286
  void set_query(THD::set_query2791,93457
  void reset_query(THD::reset_query2796,93676
  void set_open_tables(THD::set_open_tables2801,93945
  void enter_locked_tables_mode(THD::enter_locked_tables_mode2808,94174
  void binlog_invoker(THD::binlog_invoker2829,94923
  bool need_binlog_invoker(THD::need_binlog_invoker2830,94975
  void set_invoker(THD::set_invoker2832,95072
  LEX_STRING get_invoker_user(THD::get_invoker_user2837,95197
  LEX_STRING get_invoker_host(THD::get_invoker_host2838,95254
  bool has_invoker(THD::has_invoker2839,95311
  Internal_error_handler *m_internal_handler;THD::m_internal_handler2843,95448
  LEX main_lex;THD::main_lex2851,95777
  MEM_ROOT main_mem_root;THD::main_mem_root2860,96161
  Warning_info main_warning_info;THD::main_warning_info2861,96187
  Diagnostics_area main_da;THD::main_da2862,96221
  bool m_binlog_invoker;THD::m_binlog_invoker2872,96599
  LEX_STRING invoker_user;THD::invoker_user2880,96869
  LEX_STRING invoker_host;THD::invoker_host2881,96896
my_ok(2888,96995
my_eof(2899,97271
#define tmp_disable_binlog(2905,97361
#define reenable_binlog(2909,97524
class sql_exchange 2923,97984
  enum enum_filetype filetype;sql_exchange::filetype2926,98031
  char *file_name;sql_exchange::file_name2927,98101
  String *field_term,sql_exchange::field_term2928,98120
  String *field_term,*enclosed,sql_exchange::enclosed2928,98120
  String *field_term,*enclosed,*line_term,sql_exchange::line_term2928,98120
  String *field_term,*enclosed,*line_term,*line_start,sql_exchange::line_start2928,98120
  String *field_term,*enclosed,*line_term,*line_start,*escaped;sql_exchange::escaped2928,98120
  bool opt_enclosed;sql_exchange::opt_enclosed2929,98184
  bool dumpfile;sql_exchange::dumpfile2930,98205
  ulong skip_lines;sql_exchange::skip_lines2931,98222
  CHARSET_INFO *cs;sql_exchange::cs2932,98242
class select_result 2944,98462
  THD *thd;select_result::thd2946,98513
  SELECT_LEX_UNIT *unit;select_result::unit2947,98525
  virtual ~select_result(select_result::~select_result2950,98577
  virtual int prepare(select_result::prepare2951,98608
  virtual int prepare2(select_result::prepare22956,98703
  virtual uint field_count(select_result::field_count2962,98941
  virtual bool initialize_tables select_result::initialize_tables2966,99144
  virtual void abort_result_set(select_result::abort_result_set2977,99564
  void set_thd(select_result::set_thd2983,99737
  virtual void begin_dataset(select_result::begin_dataset2985,99808
  void begin_dataset(select_result::begin_dataset2987,99848
class select_result_interceptor:select_result_interceptor2998,100088
  select_result_interceptor(select_result_interceptor::select_result_interceptor3001,100152
  uint field_count(select_result_interceptor::field_count3002,100223
  bool send_result_set_metadata(select_result_interceptor::send_result_set_metadata3003,100282
class select_send 3007,100368
  bool is_result_set_started;select_send::is_result_set_started3013,100581
  select_send(select_send::select_send3015,100619
  virtual bool check_simple_select(select_send::check_simple_select3019,100787
class select_to_file 3025,100906
  sql_exchange *exchange;select_to_file::exchange3027,100974
  File file;select_to_file::file3028,101000
  IO_CACHE cache;select_to_file::cache3029,101013
  ha_rows row_count;select_to_file::row_count3030,101031
  char path[select_to_file::path3031,101052
  select_to_file(select_to_file::select_to_file3034,101085
#define ESCAPE_CHARS 3043,101287
#define NUMERIC_CHARS 3049,101444
class select_export 3052,101485
  uint field_term_length;select_export::field_term_length3053,101530
  int field_sep_char,select_export::field_sep_char3054,101556
  int field_sep_char,escape_char,select_export::escape_char3054,101556
  int field_sep_char,escape_char,line_sep_char;select_export::line_sep_char3054,101556
  int field_term_char;select_export::field_term_char3055,101604
  bool is_ambiguous_field_sep;select_export::is_ambiguous_field_sep3061,101895
  bool is_ambiguous_field_term;select_export::is_ambiguous_field_term3067,102119
  bool is_unsafe_field_sep;select_export::is_unsafe_field_sep3073,102347
  bool fixed_row_size;select_export::fixed_row_size3074,102375
  CHARSET_INFO *write_cs;select_export::write_cs3075,102398
  select_export(select_export::select_export3077,102450
class select_dump 3084,102622
  select_dump(select_dump::select_dump3086,102673
class select_insert 3092,102823
  TABLE_LIST *table_list;select_insert::table_list3094,102888
  TABLE *table;select_insert::table3095,102914
  List<Item> *fields;select_insert::fields3096,102930
  ulonglong autoinc_value_of_last_inserted_row;select_insert::autoinc_value_of_last_inserted_row3097,102952
  COPY_INFO info;select_insert::info3098,103024
  bool insert_into_view;select_insert::insert_into_view3099,103042
  virtual bool can_rollback_data(select_insert::can_rollback_data3109,103440
class select_create:select_create3118,103694
  ORDER *group;select_create::group3119,103738
  TABLE_LIST *create_table;select_create::create_table3120,103754
  HA_CREATE_INFO *create_info;select_create::create_info3121,103782
  TABLE_LIST *select_tables;select_create::select_tables3122,103813
  Alter_info *alter_info;select_create::alter_info3123,103842
  Field **field;select_create::field3124,103868
  MYSQL_LOCK *m_lock;select_create::m_lock3126,103917
  MYSQL_LOCK **m_plock;select_create::m_plock3128,103973
  select_create select_create::select_create3130,104005
  virtual bool can_rollback_data(select_create::can_rollback_data3149,104727
  const THD *get_thd(select_create::get_thd3152,104863
  const HA_CREATE_INFO *get_create_info(select_create::get_create_info3153,104906
  int prepare2(select_create::prepare23154,104973
class TMP_TABLE_PARAM 3165,105165
  List<Item> copy_funcs;TMP_TABLE_PARAM::copy_funcs3173,105378
  List<Item> save_copy_funcs;TMP_TABLE_PARAM::save_copy_funcs3174,105403
  Copy_field *copy_field,TMP_TABLE_PARAM::copy_field3175,105433
  Copy_field *copy_field, *copy_field_end;TMP_TABLE_PARAM::copy_field_end3175,105433
  Copy_field *save_copy_field,TMP_TABLE_PARAM::save_copy_field3176,105476
  Copy_field *save_copy_field, *save_copy_field_end;TMP_TABLE_PARAM::save_copy_field_end3176,105476
  uchar	    *group_buff;TMP_TABLE_PARAM::group_buff3177,105529
  Item	    **items_to_copy;TMP_TABLE_PARAM::items_to_copy3178,105554
  MI_COLUMNDEF *recinfo,TMP_TABLE_PARAM::recinfo3179,105610
  MI_COLUMNDEF *recinfo,*start_recinfo;TMP_TABLE_PARAM::start_recinfo3179,105610
  KEY *keyinfo;TMP_TABLE_PARAM::keyinfo3180,105650
  ha_rows end_write_records;TMP_TABLE_PARAM::end_write_records3181,105666
  uint	field_count;TMP_TABLE_PARAM::field_count3189,105910
  uint  func_count;TMP_TABLE_PARAM::func_count3198,106227
  uint  sum_func_count;TMP_TABLE_PARAM::sum_func_count3207,106533
  uint  hidden_field_count;TMP_TABLE_PARAM::hidden_field_count3208,106560
  uint	group_parts,TMP_TABLE_PARAM::group_parts3209,106588
  uint	group_parts,group_length,TMP_TABLE_PARAM::group_length3209,106588
  uint	group_parts,group_length,group_null_parts;TMP_TABLE_PARAM::group_null_parts3209,106588
  uint	quick_group;TMP_TABLE_PARAM::quick_group3210,106638
  bool  using_indirect_summary_function;TMP_TABLE_PARAM::using_indirect_summary_function3211,106658
  uint  convert_blob_length;TMP_TABLE_PARAM::convert_blob_length3213,106769
  CHARSET_INFO *table_charset;TMP_TABLE_PARAM::table_charset3214,106799
  bool schema_table;TMP_TABLE_PARAM::schema_table3215,106831
  bool precomputed_group_by;TMP_TABLE_PARAM::precomputed_group_by3222,107115
  bool force_copy_fields;TMP_TABLE_PARAM::force_copy_fields3223,107144
  TMP_TABLE_PARAM(TMP_TABLE_PARAM::TMP_TABLE_PARAM3225,107171
  ~TMP_TABLE_PARAM(TMP_TABLE_PARAM::~TMP_TABLE_PARAM3230,107367
  inline void cleanup(TMP_TABLE_PARAM::cleanup3235,107430
class select_union 3245,107600
  TMP_TABLE_PARAM tmp_table_param;select_union::tmp_table_param3247,107655
  TABLE *table;select_union::table3249,107698
  select_union(select_union::select_union3251,107715
class select_subselect 3263,108086
  Item_subselect *item;select_subselect::item3266,108156
  bool send_eof(select_subselect::send_eof3270,108269
class select_singlerow_subselect 3274,108351
  select_singlerow_subselect(select_singlerow_subselect::select_singlerow_subselect3277,108419
class select_max_min_finder_subselect 3284,108599
  Item_cache *cache;select_max_min_finder_subselect::cache3286,108664
  bool fmax;select_max_min_finder_subselect::fmax3288,108734
  select_max_min_finder_subselect(select_max_min_finder_subselect::select_max_min_finder_subselect3290,108755
class select_exists_subselect 3302,109056
  select_exists_subselect(select_exists_subselect::select_exists_subselect3305,109121
typedef struct st_sort_field 3312,109281
  Field *field;st_sort_field::field3313,109312
  Item	*item;st_sort_field::item3314,109351
  uint	 length;st_sort_field::length3315,109401
  uint   suffix_length;st_sort_field::suffix_length3316,109446
  Item_result result_type;st_sort_field::result_type3317,109512
  bool reverse;st_sort_field::reverse3318,109559
  bool need_strxnfrm;st_sort_field::need_strxnfrm3319,109603
} SORT_FIELD;3320,109662
typedef struct st_sort_buffer 3323,109678
  uint index;st_sort_buffer::index3324,109710
  uint sort_orders;st_sort_buffer::sort_orders3325,109741
  uint change_pos;st_sort_buffer::change_pos3326,109761
  char **buff;st_sort_buffer::buff3327,109812
  SORT_FIELD *sortorder;st_sort_buffer::sortorder3328,109827
} SORT_BUFFER;3329,109852
class Table_ident 3333,109912
  LEX_STRING db;Table_ident::db3336,109958
  LEX_STRING table;Table_ident::table3337,109975
  SELECT_LEX_UNIT *sel;Table_ident::sel3338,109995
  inline Table_ident(Table_ident::Table_ident3339,110019
  inline Table_ident(Table_ident::Table_ident3348,110275
  inline Table_ident(Table_ident::Table_ident3359,110646
  bool is_derived_table(Table_ident::is_derived_table3367,110935
  inline void change_db(Table_ident::change_db3368,110989
class user_var_entry3375,111133
  user_var_entry(user_var_entry::user_var_entry3378,111165
  LEX_STRING name;user_var_entry::name3379,111236
  char *value;user_var_entry::value3380,111255
  ulong length;user_var_entry::length3381,111270
  query_id_t update_query_id,user_var_entry::update_query_id3382,111286
  query_id_t update_query_id, used_query_id;user_var_entry::used_query_id3382,111286
  Item_result type;user_var_entry::type3383,111331
  bool unsigned_flag;user_var_entry::unsigned_flag3384,111351
  DTCollation collation;user_var_entry::collation3390,111597
class Unique 3401,111962
  DYNAMIC_ARRAY file_ptrs;Unique::file_ptrs3403,111995
  ulong max_elements;Unique::max_elements3404,112022
  ulonglong max_in_memory_size;Unique::max_in_memory_size3405,112044
  IO_CACHE file;Unique::file3406,112076
  TREE tree;Unique::tree3407,112093
  uchar *record_pointers;Unique::record_pointers3408,112106
  uint size;Unique::size3410,112148
  ulong elements;Unique::elements3413,112170
  ulong elements_in_tree(Unique::elements_in_tree3417,112311
  inline bool unique_add(Unique::unique_add3418,112372
  inline static int get_cost_calc_buff_size(Unique::get_cost_calc_buff_size3430,112826
  uint get_size(Unique::get_size3441,113241
  ulonglong get_max_in_memory_size(Unique::get_max_in_memory_size3442,113282
class multi_delete 3449,113530
  TABLE_LIST *delete_tables,multi_delete::delete_tables3451,113585
  TABLE_LIST *delete_tables, *table_being_deleted;multi_delete::table_being_deleted3451,113585
  Unique **tempfiles;multi_delete::tempfiles3452,113636
  ha_rows deleted,multi_delete::deleted3453,113658
  ha_rows deleted, found;multi_delete::found3453,113658
  uint num_of_tables;multi_delete::num_of_tables3454,113684
  int error;multi_delete::error3455,113706
  bool do_delete;multi_delete::do_delete3456,113719
  bool transactional_tables;multi_delete::transactional_tables3458,113804
  bool normal_tables;multi_delete::normal_tables3460,113904
  bool delete_while_scanning;multi_delete::delete_while_scanning3461,113926
  bool error_handled;multi_delete::error_handled3466,114097
  inline ha_rows num_deleted(multi_delete::num_deleted3478,114467
class multi_update 3486,114566
  TABLE_LIST *all_tables;multi_update::all_tables3488,114621
  TABLE_LIST *leaves;multi_update::leaves3489,114681
  TABLE_LIST *update_tables,multi_update::update_tables3490,114746
  TABLE_LIST *update_tables, *table_being_updated;multi_update::table_being_updated3490,114746
  TABLE **tmp_tables,multi_update::tmp_tables3491,114797
  TABLE **tmp_tables, *main_table,multi_update::main_table3491,114797
  TABLE **tmp_tables, *main_table, *table_to_update;multi_update::table_to_update3491,114797
  TMP_TABLE_PARAM *tmp_table_param;multi_update::tmp_table_param3492,114850
  ha_rows updated,multi_update::updated3493,114886
  ha_rows updated, found;multi_update::found3493,114886
  List <Item> *fields,multi_update::fields3494,114912
  List <Item> *fields, *values;multi_update::values3494,114912
  List <Item> **fields_for_table,multi_update::fields_for_table3495,114944
  List <Item> **fields_for_table, **values_for_table;multi_update::values_for_table3495,114944
  uint table_count;multi_update::table_count3496,114998
  List <TABLE> unupdated_check_opt_tables;multi_update::unupdated_check_opt_tables3501,115140
  Copy_field *copy_field;multi_update::copy_field3502,115183
  enum enum_duplicates handle_duplicates;multi_update::handle_duplicates3503,115209
  bool do_update,multi_update::do_update3504,115251
  bool do_update, trans_safe;multi_update::trans_safe3504,115251
  bool transactional_tables;multi_update::transactional_tables3506,115361
  bool ignore;multi_update::ignore3507,115390
  bool error_handled;multi_update::error_handled3512,115547
  inline ha_rows num_found(multi_update::num_found3525,115976
  inline ha_rows num_updated(multi_update::num_updated3529,116031
class my_var 3536,116129
  LEX_STRING s;my_var::s3538,116172
  sp_head *sp;my_var::sp3544,116343
  bool local;my_var::local3546,116365
  uint offset;my_var::offset3547,116379
  enum_field_types type;my_var::type3548,116394
  my_var my_var::my_var3549,116419
  ~my_var(my_var::~my_var3552,116525
class select_dumpvar 3555,116544
  ha_rows row_count;select_dumpvar::row_count3556,116601
  List<my_var> var_list;select_dumpvar::var_list3558,116630
  select_dumpvar(select_dumpvar::select_dumpvar3559,116655
  ~select_dumpvar(select_dumpvar::~select_dumpvar3560,116710
#define CF_CHANGES_DATA 3570,116941
#define CF_STATUS_COMMAND 3572,117048
#define CF_SHOW_TABLE_COMMAND 3573,117092
#define CF_WRITE_LOGS_COMMAND 3574,117136
#define CF_REEXECUTION_FRAGILE 3588,117785
#define CF_IMPLICT_COMMIT_BEGIN 3600,118172
#define CF_IMPLICIT_COMMIT_END 3611,118551
#define CF_AUTO_COMMIT_TRANS 3618,118848
#define CF_DIAGNOSTIC_STMT 3628,119103
#define CF_CAN_GENERATE_ROW_EVENTS 3634,119249
#define CF_SKIP_QUERY_ID 3643,119495
#define CF_SKIP_QUESTIONS 3651,119786
inline bool add_item_to_list(3661,120084
inline bool add_value_to_list(3666,120204
inline bool add_order_to_list(3671,120310
inline bool add_group_to_list(3676,120447
#define thd_proc_info(3693,120972

sql/sql_connect.h,123
#define SQL_CONNECT_INCLUDED17,775
typedef struct st_lex_user LEX_USER;23,959
typedef struct user_conn USER_CONN;24,996

sql/sql_const.h,4042
#define SQL_CONST_INCLUDED24,921
#define LIBLEN 26,949
#define MAX_DBKEY_LENGTH 28,1049
#define MAX_ALIAS_NAME 29,1095
#define MAX_FIELD_NAME 30,1122
#define MAX_SYS_VAR_LENGTH 31,1181
#define MAX_KEY 32,1211
#define MAX_REF_PARTS 33,1279
#define MAX_KEY_LENGTH 34,1334
#define MAX_REFLENGTH 36,1408
#define MAX_REFLENGTH 38,1473
#define MAX_HOSTNAME 40,1539
#define MAX_MBWIDTH	42,1593
#define MAX_FIELD_CHARLENGTH	43,1646
#define MAX_FIELD_VARCHARLENGTH	44,1679
#define MAX_FIELD_BLOBLENGTH 45,1717
#define CONVERT_IF_BIGGER_TO_BLOB 46,1795
#define MAX_FIELD_WIDTH	49,1894
#define MAX_BIT_FIELD_LENGTH 51,1957
#define MAX_DATE_WIDTH	53,2038
#define MAX_TIME_WIDTH	54,2082
#define MAX_DATETIME_FULL_WIDTH 55,2139
#define MAX_DATETIME_WIDTH	56,2210
#define MAX_DATETIME_COMPRESSED_WIDTH 57,2266
#define MAX_TABLES	59,2330
#define PARAM_TABLE_BIT	60,2398
#define OUTER_REF_TABLE_BIT	61,2467
#define RAND_TABLE_BIT	62,2540
#define PSEUDO_TABLE_BITS 63,2608
#define MAX_FIELDS	65,2720
#define MAX_PARTITIONS 66,2775
#define MAX_SELECT_NESTING 68,2805
#define MAX_SORT_MEMORY 70,2859
#define MIN_SORT_MEMORY 71,2893
#define portable_sizeof_char_ptr 75,2955
#define STRING_BUFFER_USUAL_SIZE 76,2990
#define MEM_ROOT_BLOCK_SIZE 79,3096
#define MEM_ROOT_PREALLOC 80,3135
#define TRANS_MEM_ROOT_BLOCK_SIZE 81,3174
#define TRANS_MEM_ROOT_PREALLOC 82,3213
#define DEFAULT_ERROR_COUNT	84,3253
#define EXTRA_RECORDS	85,3284
#define SCROLL_EXTRA	86,3339
#define FIELD_NAME_USED 87,3389
#define FORM_NAME_USED	88,3461
#define FIELD_NR_MASK	89,3531
#define FERR	90,3586
#define CREATE_MODE	91,3635
#define NAMES_SEP_CHAR	92,3691
#define READ_RECORD_BUFFER	94,3749
#define DISK_BUFFER_SIZE	95,3821
#define FRM_VER_TRUE_VARCHAR 97,3892
#define ACL_CACHE_SIZE	103,4126
#define MAX_PASSWORD_LENGTH	104,4154
#define HOST_CACHE_SIZE	105,4185
#define MAX_ACCEPT_RETRY	106,4214
#define MAX_FIELDS_BEFORE_HASH	107,4273
#define USER_VARS_HASH_SIZE 108,4307
#define TABLE_OPEN_CACHE_MIN 109,4342
#define TABLE_OPEN_CACHE_DEFAULT 110,4378
#define TABLE_DEF_CACHE_DEFAULT 111,4415
#define TABLE_DEF_CACHE_MIN 125,5150
#define STACK_MIN_SIZE 132,5320
#define STACK_MIN_SIZE_FOR_OPEN 134,5397
#define STACK_BUFF_ALLOC 135,5437
#define MYSQLD_NET_RETRY_COUNT 137,5538
#define QUERY_ALLOC_BLOCK_SIZE	140,5618
#define QUERY_ALLOC_PREALLOC_SIZE 141,5655
#define TRANS_ALLOC_BLOCK_SIZE	142,5697
#define TRANS_ALLOC_PREALLOC_SIZE	143,5734
#define RANGE_ALLOC_BLOCK_SIZE	144,5773
#define ACL_ALLOC_BLOCK_SIZE	145,5810
#define UDF_ALLOC_BLOCK_SIZE	146,5845
#define TABLE_ALLOC_BLOCK_SIZE	147,5880
#define WARN_ALLOC_BLOCK_SIZE	148,5917
#define WARN_ALLOC_PREALLOC_SIZE	149,5953
#define MIN_FILE_LENGTH_TO_USE_ROW_CACHE 155,6126
#define MIN_ROWS_TO_USE_TABLE_CACHE	156,6183
#define MIN_ROWS_TO_USE_BULK_INSERT	157,6224
#define TIME_FOR_COMPARE 164,6486
#define TIME_FOR_COMPARE_ROWID 170,6636
#define DISK_SEEK_BASE_COST 179,6913
#define BLOCKS_IN_AVG_SEEK 181,6956
#define DISK_SEEK_PROP_COST 183,6989
#define MATCHING_ROWS_IN_OTHER_TABLE 191,7221
#define MY_CHARSET_BIN_MB_MAXLEN 193,7262
#define KEY_DEFAULT_PACK_LENGTH 196,7375
#define PROCESS_LIST_WIDTH 199,7473
#define PROCESS_LIST_INFO_WIDTH 201,7579
#define PRECISION_FOR_DOUBLE 203,7618
#define PRECISION_FOR_FLOAT 204,7650
#define MAX_FLOAT_STR_LENGTH 207,7704
#define MAX_DOUBLE_STR_LENGTH 209,7769
#define CONNECT_TIMEOUT	215,7943
#define DEFAULT_CONCURRENCY	218,8034
#define DELAYED_LIMIT	219,8065
#define DELAYED_QUEUE_SIZE	220,8125
#define DELAYED_WAIT_TIMEOUT	221,8157
#define FLUSH_TIME	222,8224
#define MAX_CONNECT_ERRORS	223,8274
#define LONG_TIMEOUT 225,8340
#define MAX_TIME_ZONE_NAME_LENGTH 231,8505
#undef	FLUSH_TIME234,8582
#define FLUSH_TIME	235,8600
#define INTERRUPT_PRIOR 237,8657
#define CONNECT_PRIOR	238,8684
#define WAIT_PRIOR	239,8709
#define QUERY_PRIOR	240,8730
#define INTERRUPT_PRIOR 242,8758
#define CONNECT_PRIOR	243,8785
#define WAIT_PRIOR	244,8809
#define QUERY_PRIOR	245,8830

sql/sql_crypt.h,499
#define SQL_CRYPT_INCLUDED2,27
class SQL_CRYPT 27,1020
  struct rand_struct rand,SQL_CRYPT::rand29,1056
  struct rand_struct rand,org_rand;SQL_CRYPT::org_rand29,1056
  char decode_buff[SQL_CRYPT::decode_buff30,1092
  char decode_buff[256],encode_buff[SQL_CRYPT::encode_buff30,1092
  uint shift;SQL_CRYPT::shift31,1134
  SQL_CRYPT(SQL_CRYPT::SQL_CRYPT33,1157
  SQL_CRYPT(SQL_CRYPT::SQL_CRYPT34,1174
  ~SQL_CRYPT(SQL_CRYPT::~SQL_CRYPT38,1223
  void reinit(SQL_CRYPT::reinit40,1267

sql/sql_cursor.h,212
#define _sql_cursor_h_17,768
class Server_side_cursor:Server_side_cursor42,1392
  select_result *result;Server_side_cursor::result46,1511
  Server_side_cursor(Server_side_cursor::Server_side_cursor48,1544

sql/sql_db.h,232
#define SQL_DB_INCLUDED17,770
typedef struct charset_info_st CHARSET_INFO;22,866
typedef struct st_ha_create_information HA_CREATE_INFO;23,911
typedef struct st_mysql_lex_string LEX_STRING;24,967
#define MY_DB_OPT_FILE 48,2054

sql/sql_delete.h,67
#define SQL_DELETE_INCLUDED17,774
typedef class Item COND;25,909

sql/sql_derived.h,36
#define SQL_DERIVED_INCLUDED17,775

sql/sql_do.h,31
#define SQL_DO_INCLUDED17,770

sql/sql_error.h,5631
#define SQL_ERROR_H17,764
class Diagnostics_area33,1194
  enum enum_diagnostics_statusDiagnostics_area::enum_diagnostics_status36,1227
    DA_EMPTY=Diagnostics_area::enum_diagnostics_status::DA_EMPTY39,1318
    DA_OK,Diagnostics_area::enum_diagnostics_status::DA_OK41,1378
    DA_EOF,Diagnostics_area::enum_diagnostics_status::DA_EOF43,1433
    DA_ERROR,Diagnostics_area::enum_diagnostics_status::DA_ERROR45,1507
    DA_DISABLEDDiagnostics_area::enum_diagnostics_status::DA_DISABLED47,1601
  bool is_sent;Diagnostics_area::is_sent50,1681
  bool can_overwrite_status;Diagnostics_area::can_overwrite_status52,1771
  bool is_set(Diagnostics_area::is_set65,2175
  bool is_error(Diagnostics_area::is_error66,2230
  bool is_eof(Diagnostics_area::is_eof67,2287
  bool is_ok(Diagnostics_area::is_ok68,2340
  bool is_disabled(Diagnostics_area::is_disabled69,2391
  enum_diagnostics_status status(Diagnostics_area::status70,2454
  const char *message(Diagnostics_area::message72,2517
  uint sql_errno(Diagnostics_area::sql_errno75,2628
  const char* get_sqlstate(Diagnostics_area::get_sqlstate78,2715
  ulonglong affected_rows(Diagnostics_area::affected_rows81,2811
  ulonglong last_insert_id(Diagnostics_area::last_insert_id84,2908
  uint statement_warn_count(Diagnostics_area::statement_warn_count87,3007
  Diagnostics_area(Diagnostics_area::Diagnostics_area93,3145
  char m_message[Diagnostics_area::m_message97,3266
  uint m_sql_errno;Diagnostics_area::m_sql_errno102,3405
  char m_sqlstate[Diagnostics_area::m_sqlstate104,3426
  ulonglong    m_affected_rows;Diagnostics_area::m_affected_rows117,3971
  ulonglong   m_last_insert_id;Diagnostics_area::m_last_insert_id123,4176
  uint	     m_statement_warn_count;Diagnostics_area::m_statement_warn_count130,4425
  enum_diagnostics_status m_status;Diagnostics_area::m_status131,4461
class MYSQL_ERROR 143,4877
  enum enum_warning_levelMYSQL_ERROR::enum_warning_level152,5110
  { WARN_LEVEL_NOTE,MYSQL_ERROR::enum_warning_level::WARN_LEVEL_NOTE153,5136
  { WARN_LEVEL_NOTE, WARN_LEVEL_WARN,MYSQL_ERROR::enum_warning_level::WARN_LEVEL_WARN153,5136
  { WARN_LEVEL_NOTE, WARN_LEVEL_WARN, WARN_LEVEL_ERROR,MYSQL_ERROR::enum_warning_level::WARN_LEVEL_ERROR153,5136
  { WARN_LEVEL_NOTE, WARN_LEVEL_WARN, WARN_LEVEL_ERROR, WARN_LEVEL_END}MYSQL_ERROR::enum_warning_level::WARN_LEVEL_END153,5136
  const char* get_sqlstate(MYSQL_ERROR::get_sqlstate170,5570
  uint get_sql_errno(MYSQL_ERROR::get_sql_errno177,5741
  MYSQL_ERROR::enum_warning_level get_level(MYSQL_ERROR::get_level184,5895
  ~MYSQL_ERROR(MYSQL_ERROR::~MYSQL_ERROR229,7277
  String m_class_origin;MYSQL_ERROR::m_class_origin267,8277
  String m_subclass_origin;MYSQL_ERROR::m_subclass_origin270,8348
  String m_constraint_catalog;MYSQL_ERROR::m_constraint_catalog273,8425
  String m_constraint_schema;MYSQL_ERROR::m_constraint_schema276,8504
  String m_constraint_name;MYSQL_ERROR::m_constraint_name279,8580
  String m_catalog_name;MYSQL_ERROR::m_catalog_name282,8651
  String m_schema_name;MYSQL_ERROR::m_schema_name285,8718
  String m_table_name;MYSQL_ERROR::m_table_name288,8783
  String m_column_name;MYSQL_ERROR::m_column_name291,8848
  String m_cursor_name;MYSQL_ERROR::m_cursor_name294,8914
  String m_message_text;MYSQL_ERROR::m_message_text297,9016
  uint m_sql_errno;MYSQL_ERROR::m_sql_errno300,9096
  char m_returned_sqlstate[MYSQL_ERROR::m_returned_sqlstate306,9212
  MYSQL_ERROR::enum_warning_level m_level;MYSQL_ERROR::m_level309,9320
  MEM_ROOT *m_mem_root;MYSQL_ERROR::m_mem_root312,9423
class Warning_info321,9592
  MEM_ROOT           m_warn_root;Warning_info::m_warn_root324,9668
  List <MYSQL_ERROR> m_warn_list;Warning_info::m_warn_list327,9757
  uint	             m_warn_count[Warning_info::m_warn_count330,9862
  uint	             m_statement_warn_count;Warning_info::m_statement_warn_count338,10183
  ulong              m_current_row_for_warning;Warning_info::m_current_row_for_warning344,10366
  ulonglong          m_warn_id;Warning_info::m_warn_id347,10483
  bool               m_allow_unlimited_warnings;Warning_info::m_allow_unlimited_warnings350,10590
  void opt_clear_warning_info(Warning_info::opt_clear_warning_info376,11487
  void append_warning_info(Warning_info::append_warning_info382,11613
  void append_warnings(Warning_info::append_warnings391,11828
  void reset_for_next_command(Warning_info::reset_for_next_command413,12488
  ulong warn_count(Warning_info::warn_count419,12672
  List<MYSQL_ERROR> &warn_list(Warning_info::warn_list434,13166
  ulong error_count(Warning_info::error_count440,13358
  ulonglong warn_id(Warning_info::warn_id446,13503
  bool is_empty(Warning_info::is_empty449,13618
  void inc_current_row_for_warning(Warning_info::inc_current_row_for_warning452,13750
  void reset_current_row_for_warning(Warning_info::reset_current_row_for_warning454,13895
  ulong current_row_for_warning(Warning_info::current_row_for_warning456,14011
  ulong statement_warn_count(Warning_info::statement_warn_count458,14090
  void set_read_only(Warning_info::set_read_only480,14949
  bool is_read_only(Warning_info::is_read_only487,15085
  bool m_read_only;Warning_info::m_read_only492,15176
class ErrConvString500,15369
  char err_buffer[ErrConvString::err_buffer502,15391
  ErrConvString(ErrConvString::ErrConvString505,15438
  ErrConvString(ErrConvString::ErrConvString511,15592
  ErrConvString(ErrConvString::ErrConvString517,15747
  ~ErrConvString(ErrConvString::~ErrConvString523,15910
  char *ptr(ErrConvString::ptr524,15934

sql/sql_handler.h,36
#define SQL_HANDLER_INCLUDED17,775

sql/sql_help.h,33
#define SQL_HELP_INCLUDED17,772

sql/sql_hset.h,740
#define SQL_HSET_INCLUDED2,26
template <typename T,26,883
class Hash_set27,924
  typedef T Value_type;Hash_set::Value_type30,949
  enum { START_SIZE=Hash_set::START_SIZE31,973
  Hash_set(Hash_set::Hash_set36,1142
  ~Hash_set(Hash_set::~Hash_set44,1301
  bool insert(Hash_set::insert57,1635
  bool is_empty(Hash_set::is_empty67,2020
  size_t size(Hash_set::size69,2124
  class IteratorHash_set::Iterator71,2257
    Iterator(Hash_set::Iterator::Iterator74,2288
    inline T *operator++(Hash_set::Iterator::operator++82,2482
    void rewind(Hash_set::Iterator::rewind88,2649
    HASH *m_hash;Hash_set::Iterator::m_hash90,2692
    uint m_idx;Hash_set::Iterator::m_idx91,2710
  HASH m_hash;Hash_set::m_hash94,2740

sql/sql_insert.h,160
#define SQL_INSERT_INCLUDED17,774
typedef List<Item> List_item;23,958
typedef struct st_copy_info COPY_INFO;24,988
inline void kill_delayed_threads(46,2161

sql/sql_lex.h,54168
#define SQL_LEX_INCLUDED21,826
struct sys_var_with_base101,2942
  sys_var *var;sys_var_with_base::var103,2969
  LEX_STRING base_name;sys_var_with_base::base_name104,2985
#define LEX_YYSTYPE 113,3163
#define LEX_YYSTYPE 119,3327
#define LEX_YYSTYPE 121,3363
enum enum_sql_command 136,3740
  SQLCOM_SELECT,enum_sql_command::SQLCOM_SELECT137,3764
  SQLCOM_SELECT, SQLCOM_CREATE_TABLE,enum_sql_command::SQLCOM_CREATE_TABLE137,3764
  SQLCOM_SELECT, SQLCOM_CREATE_TABLE, SQLCOM_CREATE_INDEX,enum_sql_command::SQLCOM_CREATE_INDEX137,3764
  SQLCOM_SELECT, SQLCOM_CREATE_TABLE, SQLCOM_CREATE_INDEX, SQLCOM_ALTER_TABLE,enum_sql_command::SQLCOM_ALTER_TABLE137,3764
  SQLCOM_UPDATE,enum_sql_command::SQLCOM_UPDATE138,3843
  SQLCOM_UPDATE, SQLCOM_INSERT,enum_sql_command::SQLCOM_INSERT138,3843
  SQLCOM_UPDATE, SQLCOM_INSERT, SQLCOM_INSERT_SELECT,enum_sql_command::SQLCOM_INSERT_SELECT138,3843
  SQLCOM_DELETE,enum_sql_command::SQLCOM_DELETE139,3897
  SQLCOM_DELETE, SQLCOM_TRUNCATE,enum_sql_command::SQLCOM_TRUNCATE139,3897
  SQLCOM_DELETE, SQLCOM_TRUNCATE, SQLCOM_DROP_TABLE,enum_sql_command::SQLCOM_DROP_TABLE139,3897
  SQLCOM_DELETE, SQLCOM_TRUNCATE, SQLCOM_DROP_TABLE, SQLCOM_DROP_INDEX,enum_sql_command::SQLCOM_DROP_INDEX139,3897
  SQLCOM_SHOW_DATABASES,enum_sql_command::SQLCOM_SHOW_DATABASES141,3970
  SQLCOM_SHOW_DATABASES, SQLCOM_SHOW_TABLES,enum_sql_command::SQLCOM_SHOW_TABLES141,3970
  SQLCOM_SHOW_DATABASES, SQLCOM_SHOW_TABLES, SQLCOM_SHOW_FIELDS,enum_sql_command::SQLCOM_SHOW_FIELDS141,3970
  SQLCOM_SHOW_KEYS,enum_sql_command::SQLCOM_SHOW_KEYS142,4035
  SQLCOM_SHOW_KEYS, SQLCOM_SHOW_VARIABLES,enum_sql_command::SQLCOM_SHOW_VARIABLES142,4035
  SQLCOM_SHOW_KEYS, SQLCOM_SHOW_VARIABLES, SQLCOM_SHOW_STATUS,enum_sql_command::SQLCOM_SHOW_STATUS142,4035
  SQLCOM_SHOW_ENGINE_LOGS,enum_sql_command::SQLCOM_SHOW_ENGINE_LOGS143,4098
  SQLCOM_SHOW_ENGINE_LOGS, SQLCOM_SHOW_ENGINE_STATUS,enum_sql_command::SQLCOM_SHOW_ENGINE_STATUS143,4098
  SQLCOM_SHOW_ENGINE_LOGS, SQLCOM_SHOW_ENGINE_STATUS, SQLCOM_SHOW_ENGINE_MUTEX,enum_sql_command::SQLCOM_SHOW_ENGINE_MUTEX143,4098
  SQLCOM_SHOW_PROCESSLIST,enum_sql_command::SQLCOM_SHOW_PROCESSLIST144,4178
  SQLCOM_SHOW_PROCESSLIST, SQLCOM_SHOW_MASTER_STAT,enum_sql_command::SQLCOM_SHOW_MASTER_STAT144,4178
  SQLCOM_SHOW_PROCESSLIST, SQLCOM_SHOW_MASTER_STAT, SQLCOM_SHOW_SLAVE_STAT,enum_sql_command::SQLCOM_SHOW_SLAVE_STAT144,4178
  SQLCOM_SHOW_GRANTS,enum_sql_command::SQLCOM_SHOW_GRANTS145,4254
  SQLCOM_SHOW_GRANTS, SQLCOM_SHOW_CREATE,enum_sql_command::SQLCOM_SHOW_CREATE145,4254
  SQLCOM_SHOW_GRANTS, SQLCOM_SHOW_CREATE, SQLCOM_SHOW_CHARSETS,enum_sql_command::SQLCOM_SHOW_CHARSETS145,4254
  SQLCOM_SHOW_COLLATIONS,enum_sql_command::SQLCOM_SHOW_COLLATIONS146,4318
  SQLCOM_SHOW_COLLATIONS, SQLCOM_SHOW_CREATE_DB,enum_sql_command::SQLCOM_SHOW_CREATE_DB146,4318
  SQLCOM_SHOW_COLLATIONS, SQLCOM_SHOW_CREATE_DB, SQLCOM_SHOW_TABLE_STATUS,enum_sql_command::SQLCOM_SHOW_TABLE_STATUS146,4318
  SQLCOM_SHOW_TRIGGERS,enum_sql_command::SQLCOM_SHOW_TRIGGERS147,4393
  SQLCOM_LOAD,enum_sql_command::SQLCOM_LOAD149,4418
  SQLCOM_LOAD,SQLCOM_SET_OPTION,enum_sql_command::SQLCOM_SET_OPTION149,4418
  SQLCOM_LOAD,SQLCOM_SET_OPTION,SQLCOM_LOCK_TABLES,enum_sql_command::SQLCOM_LOCK_TABLES149,4418
  SQLCOM_LOAD,SQLCOM_SET_OPTION,SQLCOM_LOCK_TABLES,SQLCOM_UNLOCK_TABLES,enum_sql_command::SQLCOM_UNLOCK_TABLES149,4418
  SQLCOM_GRANT,enum_sql_command::SQLCOM_GRANT150,4491
  SQLCOM_CHANGE_DB,enum_sql_command::SQLCOM_CHANGE_DB151,4507
  SQLCOM_CHANGE_DB, SQLCOM_CREATE_DB,enum_sql_command::SQLCOM_CREATE_DB151,4507
  SQLCOM_CHANGE_DB, SQLCOM_CREATE_DB, SQLCOM_DROP_DB,enum_sql_command::SQLCOM_DROP_DB151,4507
  SQLCOM_CHANGE_DB, SQLCOM_CREATE_DB, SQLCOM_DROP_DB, SQLCOM_ALTER_DB,enum_sql_command::SQLCOM_ALTER_DB151,4507
  SQLCOM_REPAIR,enum_sql_command::SQLCOM_REPAIR152,4578
  SQLCOM_REPAIR, SQLCOM_REPLACE,enum_sql_command::SQLCOM_REPLACE152,4578
  SQLCOM_REPAIR, SQLCOM_REPLACE, SQLCOM_REPLACE_SELECT,enum_sql_command::SQLCOM_REPLACE_SELECT152,4578
  SQLCOM_CREATE_FUNCTION,enum_sql_command::SQLCOM_CREATE_FUNCTION153,4634
  SQLCOM_CREATE_FUNCTION, SQLCOM_DROP_FUNCTION,enum_sql_command::SQLCOM_DROP_FUNCTION153,4634
  SQLCOM_REVOKE,enum_sql_command::SQLCOM_REVOKE154,4682
  SQLCOM_REVOKE,SQLCOM_OPTIMIZE,enum_sql_command::SQLCOM_OPTIMIZE154,4682
  SQLCOM_REVOKE,SQLCOM_OPTIMIZE, SQLCOM_CHECK,enum_sql_command::SQLCOM_CHECK154,4682
  SQLCOM_ASSIGN_TO_KEYCACHE,enum_sql_command::SQLCOM_ASSIGN_TO_KEYCACHE155,4729
  SQLCOM_ASSIGN_TO_KEYCACHE, SQLCOM_PRELOAD_KEYS,enum_sql_command::SQLCOM_PRELOAD_KEYS155,4729
  SQLCOM_FLUSH,enum_sql_command::SQLCOM_FLUSH156,4779
  SQLCOM_FLUSH, SQLCOM_KILL,enum_sql_command::SQLCOM_KILL156,4779
  SQLCOM_FLUSH, SQLCOM_KILL, SQLCOM_ANALYZE,enum_sql_command::SQLCOM_ANALYZE156,4779
  SQLCOM_ROLLBACK,enum_sql_command::SQLCOM_ROLLBACK157,4824
  SQLCOM_ROLLBACK, SQLCOM_ROLLBACK_TO_SAVEPOINT,enum_sql_command::SQLCOM_ROLLBACK_TO_SAVEPOINT157,4824
  SQLCOM_COMMIT,enum_sql_command::SQLCOM_COMMIT158,4873
  SQLCOM_COMMIT, SQLCOM_SAVEPOINT,enum_sql_command::SQLCOM_SAVEPOINT158,4873
  SQLCOM_COMMIT, SQLCOM_SAVEPOINT, SQLCOM_RELEASE_SAVEPOINT,enum_sql_command::SQLCOM_RELEASE_SAVEPOINT158,4873
  SQLCOM_SLAVE_START,enum_sql_command::SQLCOM_SLAVE_START159,4934
  SQLCOM_SLAVE_START, SQLCOM_SLAVE_STOP,enum_sql_command::SQLCOM_SLAVE_STOP159,4934
  SQLCOM_BEGIN,enum_sql_command::SQLCOM_BEGIN160,4975
  SQLCOM_BEGIN, SQLCOM_CHANGE_MASTER,enum_sql_command::SQLCOM_CHANGE_MASTER160,4975
  SQLCOM_RENAME_TABLE,enum_sql_command::SQLCOM_RENAME_TABLE161,5013
  SQLCOM_RESET,enum_sql_command::SQLCOM_RESET162,5036
  SQLCOM_RESET, SQLCOM_PURGE,enum_sql_command::SQLCOM_PURGE162,5036
  SQLCOM_RESET, SQLCOM_PURGE, SQLCOM_PURGE_BEFORE,enum_sql_command::SQLCOM_PURGE_BEFORE162,5036
  SQLCOM_RESET, SQLCOM_PURGE, SQLCOM_PURGE_BEFORE, SQLCOM_SHOW_BINLOGS,enum_sql_command::SQLCOM_SHOW_BINLOGS162,5036
  SQLCOM_SHOW_OPEN_TABLES,enum_sql_command::SQLCOM_SHOW_OPEN_TABLES163,5108
  SQLCOM_HA_OPEN,enum_sql_command::SQLCOM_HA_OPEN164,5135
  SQLCOM_HA_OPEN, SQLCOM_HA_CLOSE,enum_sql_command::SQLCOM_HA_CLOSE164,5135
  SQLCOM_HA_OPEN, SQLCOM_HA_CLOSE, SQLCOM_HA_READ,enum_sql_command::SQLCOM_HA_READ164,5135
  SQLCOM_SHOW_SLAVE_HOSTS,enum_sql_command::SQLCOM_SHOW_SLAVE_HOSTS165,5186
  SQLCOM_SHOW_SLAVE_HOSTS, SQLCOM_DELETE_MULTI,enum_sql_command::SQLCOM_DELETE_MULTI165,5186
  SQLCOM_SHOW_SLAVE_HOSTS, SQLCOM_DELETE_MULTI, SQLCOM_UPDATE_MULTI,enum_sql_command::SQLCOM_UPDATE_MULTI165,5186
  SQLCOM_SHOW_BINLOG_EVENTS,enum_sql_command::SQLCOM_SHOW_BINLOG_EVENTS166,5255
  SQLCOM_SHOW_BINLOG_EVENTS, SQLCOM_DO,enum_sql_command::SQLCOM_DO166,5255
  SQLCOM_SHOW_WARNS,enum_sql_command::SQLCOM_SHOW_WARNS167,5295
  SQLCOM_SHOW_WARNS, SQLCOM_EMPTY_QUERY,enum_sql_command::SQLCOM_EMPTY_QUERY167,5295
  SQLCOM_SHOW_WARNS, SQLCOM_EMPTY_QUERY, SQLCOM_SHOW_ERRORS,enum_sql_command::SQLCOM_SHOW_ERRORS167,5295
  SQLCOM_SHOW_STORAGE_ENGINES,enum_sql_command::SQLCOM_SHOW_STORAGE_ENGINES168,5356
  SQLCOM_SHOW_STORAGE_ENGINES, SQLCOM_SHOW_PRIVILEGES,enum_sql_command::SQLCOM_SHOW_PRIVILEGES168,5356
  SQLCOM_HELP,enum_sql_command::SQLCOM_HELP169,5411
  SQLCOM_HELP, SQLCOM_CREATE_USER,enum_sql_command::SQLCOM_CREATE_USER169,5411
  SQLCOM_HELP, SQLCOM_CREATE_USER, SQLCOM_DROP_USER,enum_sql_command::SQLCOM_DROP_USER169,5411
  SQLCOM_HELP, SQLCOM_CREATE_USER, SQLCOM_DROP_USER, SQLCOM_RENAME_USER,enum_sql_command::SQLCOM_RENAME_USER169,5411
  SQLCOM_REVOKE_ALL,enum_sql_command::SQLCOM_REVOKE_ALL170,5484
  SQLCOM_REVOKE_ALL, SQLCOM_CHECKSUM,enum_sql_command::SQLCOM_CHECKSUM170,5484
  SQLCOM_CREATE_PROCEDURE,enum_sql_command::SQLCOM_CREATE_PROCEDURE171,5522
  SQLCOM_CREATE_PROCEDURE, SQLCOM_CREATE_SPFUNCTION,enum_sql_command::SQLCOM_CREATE_SPFUNCTION171,5522
  SQLCOM_CREATE_PROCEDURE, SQLCOM_CREATE_SPFUNCTION, SQLCOM_CALL,enum_sql_command::SQLCOM_CALL171,5522
  SQLCOM_DROP_PROCEDURE,enum_sql_command::SQLCOM_DROP_PROCEDURE172,5588
  SQLCOM_DROP_PROCEDURE, SQLCOM_ALTER_PROCEDURE,enum_sql_command::SQLCOM_ALTER_PROCEDURE172,5588
  SQLCOM_DROP_PROCEDURE, SQLCOM_ALTER_PROCEDURE,SQLCOM_ALTER_FUNCTION,enum_sql_command::SQLCOM_ALTER_FUNCTION172,5588
  SQLCOM_SHOW_CREATE_PROC,enum_sql_command::SQLCOM_SHOW_CREATE_PROC173,5659
  SQLCOM_SHOW_CREATE_PROC, SQLCOM_SHOW_CREATE_FUNC,enum_sql_command::SQLCOM_SHOW_CREATE_FUNC173,5659
  SQLCOM_SHOW_STATUS_PROC,enum_sql_command::SQLCOM_SHOW_STATUS_PROC174,5711
  SQLCOM_SHOW_STATUS_PROC, SQLCOM_SHOW_STATUS_FUNC,enum_sql_command::SQLCOM_SHOW_STATUS_FUNC174,5711
  SQLCOM_PREPARE,enum_sql_command::SQLCOM_PREPARE175,5763
  SQLCOM_PREPARE, SQLCOM_EXECUTE,enum_sql_command::SQLCOM_EXECUTE175,5763
  SQLCOM_PREPARE, SQLCOM_EXECUTE, SQLCOM_DEALLOCATE_PREPARE,enum_sql_command::SQLCOM_DEALLOCATE_PREPARE175,5763
  SQLCOM_CREATE_VIEW,enum_sql_command::SQLCOM_CREATE_VIEW176,5824
  SQLCOM_CREATE_VIEW, SQLCOM_DROP_VIEW,enum_sql_command::SQLCOM_DROP_VIEW176,5824
  SQLCOM_CREATE_TRIGGER,enum_sql_command::SQLCOM_CREATE_TRIGGER177,5864
  SQLCOM_CREATE_TRIGGER, SQLCOM_DROP_TRIGGER,enum_sql_command::SQLCOM_DROP_TRIGGER177,5864
  SQLCOM_XA_START,enum_sql_command::SQLCOM_XA_START178,5910
  SQLCOM_XA_START, SQLCOM_XA_END,enum_sql_command::SQLCOM_XA_END178,5910
  SQLCOM_XA_START, SQLCOM_XA_END, SQLCOM_XA_PREPARE,enum_sql_command::SQLCOM_XA_PREPARE178,5910
  SQLCOM_XA_COMMIT,enum_sql_command::SQLCOM_XA_COMMIT179,5963
  SQLCOM_XA_COMMIT, SQLCOM_XA_ROLLBACK,enum_sql_command::SQLCOM_XA_ROLLBACK179,5963
  SQLCOM_XA_COMMIT, SQLCOM_XA_ROLLBACK, SQLCOM_XA_RECOVER,enum_sql_command::SQLCOM_XA_RECOVER179,5963
  SQLCOM_SHOW_PROC_CODE,enum_sql_command::SQLCOM_SHOW_PROC_CODE180,6022
  SQLCOM_SHOW_PROC_CODE, SQLCOM_SHOW_FUNC_CODE,enum_sql_command::SQLCOM_SHOW_FUNC_CODE180,6022
  SQLCOM_ALTER_TABLESPACE,enum_sql_command::SQLCOM_ALTER_TABLESPACE181,6070
  SQLCOM_INSTALL_PLUGIN,enum_sql_command::SQLCOM_INSTALL_PLUGIN182,6097
  SQLCOM_INSTALL_PLUGIN, SQLCOM_UNINSTALL_PLUGIN,enum_sql_command::SQLCOM_UNINSTALL_PLUGIN182,6097
  SQLCOM_SHOW_AUTHORS,enum_sql_command::SQLCOM_SHOW_AUTHORS183,6147
  SQLCOM_SHOW_AUTHORS, SQLCOM_BINLOG_BASE64_EVENT,enum_sql_command::SQLCOM_BINLOG_BASE64_EVENT183,6147
  SQLCOM_SHOW_PLUGINS,enum_sql_command::SQLCOM_SHOW_PLUGINS184,6198
  SQLCOM_SHOW_CONTRIBUTORS,enum_sql_command::SQLCOM_SHOW_CONTRIBUTORS185,6221
  SQLCOM_CREATE_SERVER,enum_sql_command::SQLCOM_CREATE_SERVER186,6249
  SQLCOM_CREATE_SERVER, SQLCOM_DROP_SERVER,enum_sql_command::SQLCOM_DROP_SERVER186,6249
  SQLCOM_CREATE_SERVER, SQLCOM_DROP_SERVER, SQLCOM_ALTER_SERVER,enum_sql_command::SQLCOM_ALTER_SERVER186,6249
  SQLCOM_CREATE_EVENT,enum_sql_command::SQLCOM_CREATE_EVENT187,6314
  SQLCOM_CREATE_EVENT, SQLCOM_ALTER_EVENT,enum_sql_command::SQLCOM_ALTER_EVENT187,6314
  SQLCOM_CREATE_EVENT, SQLCOM_ALTER_EVENT, SQLCOM_DROP_EVENT,enum_sql_command::SQLCOM_DROP_EVENT187,6314
  SQLCOM_SHOW_CREATE_EVENT,enum_sql_command::SQLCOM_SHOW_CREATE_EVENT188,6376
  SQLCOM_SHOW_CREATE_EVENT, SQLCOM_SHOW_EVENTS,enum_sql_command::SQLCOM_SHOW_EVENTS188,6376
  SQLCOM_SHOW_CREATE_TRIGGER,enum_sql_command::SQLCOM_SHOW_CREATE_TRIGGER189,6424
  SQLCOM_ALTER_DB_UPGRADE,enum_sql_command::SQLCOM_ALTER_DB_UPGRADE190,6454
  SQLCOM_SHOW_PROFILE,enum_sql_command::SQLCOM_SHOW_PROFILE191,6481
  SQLCOM_SHOW_PROFILE, SQLCOM_SHOW_PROFILES,enum_sql_command::SQLCOM_SHOW_PROFILES191,6481
  SQLCOM_SIGNAL,enum_sql_command::SQLCOM_SIGNAL192,6526
  SQLCOM_SIGNAL, SQLCOM_RESIGNAL,enum_sql_command::SQLCOM_RESIGNAL192,6526
  SQLCOM_SHOW_RELAYLOG_EVENTS,enum_sql_command::SQLCOM_SHOW_RELAYLOG_EVENTS193,6560
  SQLCOM_BACKUP,enum_sql_command::SQLCOM_BACKUP194,6592
  SQLCOM_ENDenum_sql_command::SQLCOM_END200,6775
#define DESCRIBE_NORMAL	204,6818
#define DESCRIBE_EXTENDED	205,6845
#define DESCRIBE_PARTITIONS	210,7033
enum enum_sp_suid_behaviour214,7085
  SP_IS_DEFAULT_SUID=enum_sp_suid_behaviour::SP_IS_DEFAULT_SUID216,7115
  SP_IS_NOT_SUID,enum_sp_suid_behaviour::SP_IS_NOT_SUID217,7140
  SP_IS_SUIDenum_sp_suid_behaviour::SP_IS_SUID218,7158
enum enum_sp_data_access221,7175
  SP_DEFAULT_ACCESS=enum_sp_data_access::SP_DEFAULT_ACCESS223,7202
  SP_CONTAINS_SQL,enum_sp_data_access::SP_CONTAINS_SQL224,7226
  SP_NO_SQL,enum_sp_data_access::SP_NO_SQL225,7245
  SP_READS_SQL_DATA,enum_sp_data_access::SP_READS_SQL_DATA226,7258
  SP_MODIFIES_SQL_DATAenum_sp_data_access::SP_MODIFIES_SQL_DATA227,7279
const LEX_STRING sp_data_access_name[sp_data_access_name230,7306
#define DERIVED_SUBQUERY	239,7545
#define DERIVED_VIEW	240,7572
enum enum_view_create_mode242,7597
  VIEW_CREATE_NEW,enum_view_create_mode::VIEW_CREATE_NEW244,7626
  VIEW_ALTER,enum_view_create_mode::VIEW_ALTER245,7690
  VIEW_CREATE_OR_REPLACE	enum_view_create_mode::VIEW_CREATE_OR_REPLACE246,7752
enum enum_drop_mode249,7825
  DROP_DEFAULT,enum_drop_mode::DROP_DEFAULT251,7847
  DROP_CASCADE,enum_drop_mode::DROP_CASCADE252,7888
  DROP_RESTRICT enum_drop_mode::DROP_RESTRICT253,7922
#define TL_OPTION_UPDATING	257,7998
#define TL_OPTION_FORCE_INDEX	258,8027
#define TL_OPTION_IGNORE_LEAVES 259,8059
#define TL_OPTION_ALIAS 260,8093
typedef List<Item> List_item;262,8128
typedef Mem_root_array<ORDER*ORDER263,8158
typedef Mem_root_array<ORDER*, true> Group_list_ptrs;263,8158
typedef struct st_lex_server_options266,8241
  long port;st_lex_server_options::port268,8280
  uint server_name_length;st_lex_server_options::server_name_length269,8293
  char *server_name,st_lex_server_options::server_name270,8320
  char *server_name, *host,st_lex_server_options::host270,8320
  char *server_name, *host, *db,st_lex_server_options::db270,8320
  char *server_name, *host, *db, *username,st_lex_server_options::username270,8320
  char *server_name, *host, *db, *username, *password,st_lex_server_options::password270,8320
  char *server_name, *host, *db, *username, *password, *scheme,st_lex_server_options::scheme270,8320
  char *server_name, *host, *db, *username, *password, *scheme, *socket,st_lex_server_options::socket270,8320
  char *server_name, *host, *db, *username, *password, *scheme, *socket, *owner;st_lex_server_options::owner270,8320
} LEX_SERVER_OPTIONS;271,8401
typedef struct st_lex_master_info281,8713
  char *host,st_lex_master_info::host283,8749
  char *host, *user,st_lex_master_info::user283,8749
  char *host, *user, *password,st_lex_master_info::password283,8749
  char *host, *user, *password, *log_file_name;st_lex_master_info::log_file_name283,8749
  uint port,st_lex_master_info::port284,8797
  uint port, connect_retry;st_lex_master_info::connect_retry284,8797
  float heartbeat_period;st_lex_master_info::heartbeat_period285,8825
  ulonglong pos;st_lex_master_info::pos286,8851
  ulong server_id;st_lex_master_info::server_id287,8868
  enum {LEX_MI_UNCHANGED,st_lex_master_info::LEX_MI_UNCHANGED292,9018
  enum {LEX_MI_UNCHANGED, LEX_MI_DISABLE,st_lex_master_info::LEX_MI_DISABLE292,9018
  enum {LEX_MI_UNCHANGED, LEX_MI_DISABLE, LEX_MI_ENABLE}st_lex_master_info::LEX_MI_ENABLE292,9018
    ssl,st_lex_master_info::ssl293,9075
    ssl, ssl_verify_server_cert,st_lex_master_info::ssl_verify_server_cert293,9075
    ssl, ssl_verify_server_cert, heartbeat_opt,st_lex_master_info::heartbeat_opt293,9075
    ssl, ssl_verify_server_cert, heartbeat_opt, repl_ignore_server_ids_opt;st_lex_master_info::repl_ignore_server_ids_opt293,9075
  char *ssl_key,st_lex_master_info::ssl_key294,9151
  char *ssl_key, *ssl_cert,st_lex_master_info::ssl_cert294,9151
  char *ssl_key, *ssl_cert, *ssl_ca,st_lex_master_info::ssl_ca294,9151
  char *ssl_key, *ssl_cert, *ssl_ca, *ssl_capath,st_lex_master_info::ssl_capath294,9151
  char *ssl_key, *ssl_cert, *ssl_ca, *ssl_capath, *ssl_cipher;st_lex_master_info::ssl_cipher294,9151
  char *relay_log_name;st_lex_master_info::relay_log_name295,9214
  ulong relay_log_pos;st_lex_master_info::relay_log_pos296,9238
  DYNAMIC_ARRAY repl_ignore_server_ids;st_lex_master_info::repl_ignore_server_ids297,9261
  ulong server_ids_buffer[st_lex_master_info::server_ids_buffer298,9301
} LEX_MASTER_INFO;299,9331
typedef struct st_lex_reset_slave301,9351
  bool all;st_lex_reset_slave::all303,9387
} LEX_RESET_SLAVE;304,9399
enum sub_select_type306,9419
  UNSPECIFIED_TYPE,sub_select_type::UNSPECIFIED_TYPE308,9442
  UNSPECIFIED_TYPE,UNION_TYPE,sub_select_type::UNION_TYPE308,9442
  UNSPECIFIED_TYPE,UNION_TYPE, INTERSECT_TYPE,sub_select_type::INTERSECT_TYPE308,9442
  EXCEPT_TYPE,sub_select_type::EXCEPT_TYPE309,9489
  EXCEPT_TYPE, GLOBAL_OPTIONS_TYPE,sub_select_type::GLOBAL_OPTIONS_TYPE309,9489
  EXCEPT_TYPE, GLOBAL_OPTIONS_TYPE, DERIVED_TABLE_TYPE,sub_select_type::DERIVED_TABLE_TYPE309,9489
  EXCEPT_TYPE, GLOBAL_OPTIONS_TYPE, DERIVED_TABLE_TYPE, OLAP_TYPEsub_select_type::OLAP_TYPE309,9489
enum olap_type 312,9559
  UNSPECIFIED_OLAP_TYPE,olap_type::UNSPECIFIED_OLAP_TYPE314,9577
  UNSPECIFIED_OLAP_TYPE, CUBE_TYPE,olap_type::CUBE_TYPE314,9577
  UNSPECIFIED_OLAP_TYPE, CUBE_TYPE, ROLLUP_TYPEolap_type::ROLLUP_TYPE314,9577
enum tablespace_op_type317,9629
  NO_TABLESPACE_OP,tablespace_op_type::NO_TABLESPACE_OP319,9655
  NO_TABLESPACE_OP, DISCARD_TABLESPACE,tablespace_op_type::DISCARD_TABLESPACE319,9655
  NO_TABLESPACE_OP, DISCARD_TABLESPACE, IMPORT_TABLESPACEtablespace_op_type::IMPORT_TABLESPACE319,9655
typedef uchar index_clause_map;327,9864
#define INDEX_HINT_MASK_JOIN 333,10018
#define INDEX_HINT_MASK_GROUP 334,10052
#define INDEX_HINT_MASK_ORDER 335,10091
#define INDEX_HINT_MASK_ALL 337,10131
class Index_hint 341,10342
  enum index_hint_type type;Index_hint::type345,10436
  index_clause_map clause;Index_hint::clause347,10543
  LEX_STRING key_name;Index_hint::key_name352,10675
  Index_hint Index_hint::Index_hint354,10699
class st_select_lex_node 488,15261
  st_select_lex_node *next,st_select_lex_node::next490,15299
  st_select_lex_node *next, **prev,st_select_lex_node::prev490,15299
    *master,st_select_lex_node::master491,15357
    *master, *slave,st_select_lex_node::slave491,15357
    *link_next,st_select_lex_node::link_next492,15416
    *link_next, **link_prev;st_select_lex_node::link_prev492,15416
  ulonglong options;st_select_lex_node::options495,15494
  enum e_sql_cache st_select_lex_node::e_sql_cache501,15657
  enum e_sql_cache { SQL_CACHE_UNSPECIFIED,st_select_lex_node::e_sql_cache::SQL_CACHE_UNSPECIFIED501,15657
  enum e_sql_cache { SQL_CACHE_UNSPECIFIED, SQL_NO_CACHE,st_select_lex_node::e_sql_cache::SQL_NO_CACHE501,15657
  enum e_sql_cache { SQL_CACHE_UNSPECIFIED, SQL_NO_CACHE, SQL_CACHE st_select_lex_node::e_sql_cache::SQL_CACHE501,15657
  e_sql_cache sql_cache;st_select_lex_node::sql_cache502,15728
  uint8 uncacheable;st_select_lex_node::uncacheable512,15958
  enum sub_select_type linkage;st_select_lex_node::linkage513,15979
  bool no_table_names_allowed;st_select_lex_node::no_table_names_allowed514,16011
  bool no_error;st_select_lex_node::no_error515,16073
  static void *operator new(st_select_lex_node::operator new517,16145
  static void *operator new(st_select_lex_node::operator new521,16231
  static void operator delete(st_select_lex_node::operator delete523,16357
  static void operator delete(st_select_lex_node::operator delete524,16432
  st_select_lex_node(st_select_lex_node::st_select_lex_node527,16575
  virtual ~st_select_lex_node(st_select_lex_node::~st_select_lex_node534,16741
  inline st_select_lex_node* get_master(st_select_lex_node::get_master536,16777
  virtual void set_lock_for_tables(st_select_lex_node::set_lock_for_tables562,17855
typedef class st_select_lex_node SELECT_LEX_NODE;571,18170
class st_select_lex_unit:st_select_lex_unit584,18394
  TABLE_LIST result_table_list;st_select_lex_unit::result_table_list586,18459
  select_union *union_result;st_select_lex_unit::union_result587,18491
  TABLE *table;st_select_lex_unit::table588,18521
  select_result *result;st_select_lex_unit::result590,18594
  ulonglong found_rows_for_union;st_select_lex_unit::found_rows_for_union591,18619
  bool saved_error;st_select_lex_unit::saved_error592,18653
  st_select_lex_unit(st_select_lex_unit::st_select_lex_unit596,18760
  bool  prepared,st_select_lex_unit::prepared603,18895
    optimized,st_select_lex_unit::optimized604,18965
    executed,st_select_lex_unit::executed605,19033
    cleaned;st_select_lex_unit::cleaned606,19067
  List<Item> item_list;st_select_lex_unit::item_list609,19143
  List<Item> types;st_select_lex_unit::types617,19448
  st_select_lex *global_parameters;st_select_lex_unit::global_parameters622,19571
  st_select_lex *return_to;st_select_lex_unit::return_to624,19687
  ha_rows select_limit_cnt,st_select_lex_unit::select_limit_cnt626,19753
  ha_rows select_limit_cnt, offset_limit_cnt;st_select_lex_unit::offset_limit_cnt626,19753
  Item_subselect *item;st_select_lex_unit::item628,19867
  THD *thd;st_select_lex_unit::thd630,19914
  st_select_lex *fake_select_lex;st_select_lex_unit::fake_select_lex635,20022
  st_select_lex *union_distinct;st_select_lex_unit::union_distinct637,20057
  bool describe;st_select_lex_unit::describe638,20131
  Procedure *last_procedure;st_select_lex_unit::last_procedure639,20186
  st_select_lex* first_select(st_select_lex_unit::first_select644,20351
  st_select_lex_unit* next_unit(st_select_lex_unit::next_unit648,20443
  st_select_lex* return_after_parsing(st_select_lex_unit::return_after_parsing652,20541
  inline void unclean(st_select_lex_unit::unclean660,20781
  inline bool is_prepared(st_select_lex_unit::is_prepared667,20995
  void set_thd(st_select_lex_unit::set_thd670,21163
typedef class st_select_lex_unit SELECT_LEX_UNIT;679,21363
class st_select_lex:st_select_lex684,21479
  Name_resolution_context context;st_select_lex::context687,21536
  char *db;st_select_lex::db688,21571
  Item *where,st_select_lex::where689,21583
  Item *where, *having;st_select_lex::having689,21583
  Item *prep_where;st_select_lex::prep_where690,21660
  Item *prep_having;st_select_lex::prep_having691,21739
  Item::cond_result cond_value,st_select_lex::cond_value693,21871
  Item::cond_result cond_value, having_value;st_select_lex::having_value693,21871
  LEX *parent_lex;st_select_lex::parent_lex695,21995
  enum olap_type olap;st_select_lex::olap696,22014
  SQL_I_List<TABLE_LIST>  table_list;st_select_lex::table_list698,22119
  SQL_I_List<ORDER>       group_list;st_select_lex::group_list706,22415
  Group_list_ptrs        *group_list_ptrs;st_select_lex::group_list_ptrs707,22453
  List<Item>          item_list;st_select_lex::item_list709,22497
  List<String>        interval_list;st_select_lex::interval_list710,22566
  bool	              is_item_list_lookup;st_select_lex::is_item_list_lookup711,22603
  List<Item_func_match> *ftfunc_list;st_select_lex::ftfunc_list716,22799
  List<Item_func_match> ftfunc_list_alloc;st_select_lex::ftfunc_list_alloc717,22837
  JOIN *join;st_select_lex::join718,22880
  List<TABLE_LIST> top_join_list;st_select_lex::top_join_list719,22956
  List<TABLE_LIST> *join_list;st_select_lex::join_list720,23032
  TABLE_LIST *embedding;st_select_lex::embedding721,23108
  TABLE_LIST *leaf_tables;st_select_lex::leaf_tables727,23416
  const char *type;st_select_lex::type728,23443
  SQL_I_List<ORDER> order_list;st_select_lex::order_list730,23520
  SQL_I_List<ORDER> *gorder_list;st_select_lex::gorder_list731,23573
  Item *select_limit,st_select_lex::select_limit732,23607
  Item *select_limit, *offset_limit;st_select_lex::offset_limit732,23607
  Item **ref_pointer_array;st_select_lex::ref_pointer_array734,23734
  uint select_n_having_items;st_select_lex::select_n_having_items741,23948
  uint cond_count;st_select_lex::cond_count742,23978
  uint between_count;st_select_lex::between_count743,24059
  uint max_equal_elems;st_select_lex::max_equal_elems744,24140
  uint select_n_where_fields;st_select_lex::select_n_where_fields749,24339
  enum_parsing_place parsing_place;st_select_lex::parsing_place750,24369
  bool with_sum_func;st_select_lex::with_sum_func751,24443
  ulong table_join_options;st_select_lex::table_join_options753,24497
  uint in_sum_expr;st_select_lex::in_sum_expr754,24525
  uint select_number;st_select_lex::select_number755,24545
  int nest_level;st_select_lex::nest_level756,24609
  Item_sum *inner_sum_func_list;st_select_lex::inner_sum_func_list757,24661
  uint with_wild;st_select_lex::with_wild758,24736
  bool  braces;st_select_lex::braces759,24782
  bool having_fix_field;st_select_lex::having_fix_field761,24924
  bool group_fix_field;st_select_lex::group_fix_field763,25022
  List<Item_outer_ref> inner_refs_list;st_select_lex::inner_refs_list765,25113
  uint n_sum_items;st_select_lex::n_sum_items767,25211
  uint n_child_sum_items;st_select_lex::n_child_sum_items769,25309
  bool explicit_limit;st_select_lex::explicit_limit772,25375
  bool subquery_in_having;st_select_lex::subquery_in_having777,25536
  bool is_correlated;st_select_lex::is_correlated779,25634
  bool first_execution;st_select_lex::first_execution792,26335
  bool first_natural_join_processing;st_select_lex::first_natural_join_processing793,26359
  bool first_cond_optimization;st_select_lex::first_cond_optimization794,26397
  bool no_wrap_view_item;st_select_lex::no_wrap_view_item796,26475
  bool exclude_from_table_unique_test;st_select_lex::exclude_from_table_unique_test798,26558
  List<Item_field> non_agg_fields;st_select_lex::non_agg_fields800,26660
  int cur_pos_in_select_list;st_select_lex::cur_pos_in_select_list802,26768
  List<udf_func>     udf_list;st_select_lex::udf_list804,26799
  List<String> *prev_join_using;st_select_lex::prev_join_using819,27508
  st_select_lex_unit* first_inner_unit(st_select_lex::first_inner_unit824,27622
  st_select_lex* next_select(st_select_lex::next_select829,27747
  st_select_lex* next_select_in_list(st_select_lex::next_select_in_list830,27812
  st_select_lex_node** next_select_in_list_addr(st_select_lex::next_select_in_list_addr834,27899
  st_select_lex* return_after_parsing(st_select_lex::return_after_parsing838,27980
  inline void init_order(st_select_lex::init_order869,29077
  void cut_subtree(st_select_lex::cut_subtree881,29501
  st_select_lex(st_select_lex::st_select_lex885,29593
  void make_empty_select(st_select_lex::make_empty_select887,29678
  List<Index_hint>* pop_index_hints(st_select_lex::pop_index_hints921,30851
  void clear_index_hints(st_select_lex::clear_index_hints928,30986
  bool non_agg_field_used(st_select_lex::non_agg_field_used936,31282
  bool agg_func_used(st_select_lex::agg_func_used937,31349
  void set_non_agg_field_used(st_select_lex::set_non_agg_field_used939,31412
  void set_agg_func_used(st_select_lex::set_agg_func_used940,31483
  bool m_non_agg_field_used;st_select_lex::m_non_agg_field_used943,31559
  bool m_agg_func_used;st_select_lex::m_agg_func_used944,31588
  enum index_hint_type current_index_hint_type;st_select_lex::current_index_hint_type947,31677
  index_clause_map current_index_hint_clause;st_select_lex::current_index_hint_clause948,31725
  List<Index_hint> *index_hints;st_select_lex::index_hints950,31812
typedef class st_select_lex SELECT_LEX;952,31848
inline bool st_select_lex_unit::is_union 954,31889
#define ALTER_ADD_COLUMN	960,32040
#define ALTER_DROP_COLUMN	961,32075
#define ALTER_CHANGE_COLUMN	962,32111
#define ALTER_ADD_INDEX	963,32149
#define ALTER_DROP_INDEX	964,32184
#define ALTER_RENAME	965,32219
#define ALTER_ORDER	966,32251
#define ALTER_OPTIONS	967,32282
#define ALTER_CHANGE_COLUMN_DEFAULT 968,32315
#define ALTER_KEYS_ONOFF 969,32361
#define ALTER_CONVERT 970,32403
#define ALTER_RECREATE 971,32446
#define ALTER_ADD_PARTITION 972,32489
#define ALTER_DROP_PARTITION 973,32532
#define ALTER_COALESCE_PARTITION 974,32575
#define ALTER_REORGANIZE_PARTITION 975,32619
#define ALTER_PARTITION 976,32665
#define ALTER_ADMIN_PARTITION 977,32709
#define ALTER_TABLE_REORG 978,32753
#define ALTER_REBUILD_PARTITION 979,32797
#define ALTER_ALL_PARTITION 980,32841
#define ALTER_REMOVE_PARTITIONING 981,32885
#define ALTER_FOREIGN_KEY 982,32930
#define ALTER_TRUNCATE_PARTITION 983,32974
enum enum_alter_table_change_level985,33019
  ALTER_TABLE_METADATA_ONLY=enum_alter_table_change_level::ALTER_TABLE_METADATA_ONLY987,33056
  ALTER_TABLE_DATA_CHANGED=enum_alter_table_change_level::ALTER_TABLE_DATA_CHANGED988,33088
  ALTER_TABLE_INDEX_CHANGED=enum_alter_table_change_level::ALTER_TABLE_INDEX_CHANGED989,33119
class Alter_table_change_level999,33345
  typedef enum enum_alter_table_change_level enum_type;Alter_table_change_level::enum_type1002,33387
  enum_type value;Alter_table_change_level::value1003,33443
  void operator = Alter_table_change_level::operator =1005,33470
  operator enum_type Alter_table_change_level::operator enum_type1006,33517
class Alter_info1017,33714
  List<Alter_drop>              drop_list;Alter_info::drop_list1020,33741
  List<Alter_column>            alter_list;Alter_info::alter_list1021,33784
  List<Key>                     key_list;Alter_info::key_list1022,33828
  List<Create_field>            create_list;Alter_info::create_list1023,33870
  uint                          flags;Alter_info::flags1024,33915
  enum enum_enable_or_disable   keys_onoff;Alter_info::keys_onoff1025,33954
  enum tablespace_op_type       tablespace_op;Alter_info::tablespace_op1026,33998
  List<char>                    partition_names;Alter_info::partition_names1027,34045
  uint                          num_parts;Alter_info::num_parts1028,34094
  enum_alter_table_change_level change_level;Alter_info::change_level1029,34137
  Create_field                 *datetime_field;Alter_info::datetime_field1030,34183
  bool                          error_if_not_empty;Alter_info::error_if_not_empty1031,34231
  Alter_info(Alter_info::Alter_info1034,34285
  void reset(Alter_info::reset1044,34507
struct st_sp_chistics1065,35054
  LEX_STRING comment;st_sp_chistics::comment1067,35078
  enum enum_sp_suid_behaviour suid;st_sp_chistics::suid1068,35100
  bool detistic;st_sp_chistics::detistic1069,35136
  enum enum_sp_data_access daccess;st_sp_chistics::daccess1070,35153
struct st_trg_chistics1076,35271
  enum trg_action_time_type action_time;st_trg_chistics::action_time1078,35296
  enum trg_event_type event;st_trg_chistics::event1079,35337
enum xa_option_words 1084,35409
enum xa_option_words {XA_NONE,xa_option_words::XA_NONE1084,35409
enum xa_option_words {XA_NONE, XA_JOIN,xa_option_words::XA_JOIN1084,35409
enum xa_option_words {XA_NONE, XA_JOIN, XA_RESUME,xa_option_words::XA_RESUME1084,35409
enum xa_option_words {XA_NONE, XA_JOIN, XA_RESUME, XA_ONE_PHASE,xa_option_words::XA_ONE_PHASE1084,35409
                      XA_SUSPEND,xa_option_words::XA_SUSPEND1085,35474
                      XA_SUSPEND, XA_FOR_MIGRATE}xa_option_words::XA_FOR_MIGRATE1085,35474
class Query_tables_list1105,36115
  enum_sql_command sql_command;Query_tables_list::sql_command1114,36374
  TABLE_LIST *query_tables;Query_tables_list::query_tables1116,36463
  TABLE_LIST **query_tables_last;Query_tables_list::query_tables_last1118,36567
  TABLE_LIST **query_tables_own_last;Query_tables_list::query_tables_own_last1125,36893
  enum { START_SROUTINES_HASH_SIZE=Query_tables_list::START_SROUTINES_HASH_SIZE1130,37047
  HASH sroutines;Query_tables_list::sroutines1131,37089
  SQL_I_List<Sroutine_hash_entry> sroutines_list;Query_tables_list::sroutines_list1141,37608
  Sroutine_hash_entry **sroutines_list_own_last;Query_tables_list::sroutines_list_own_last1142,37658
  uint sroutines_list_own_elements;Query_tables_list::sroutines_list_own_elements1143,37707
  Query_tables_list(Query_tables_list::Query_tables_list1149,37891
  ~Query_tables_list(Query_tables_list::~Query_tables_list1150,37916
  void set_query_tables_list(Query_tables_list::set_query_tables_list1155,38095
  void add_to_query_tables(Query_tables_list::add_to_query_tables1165,38364
  bool requires_prelocking(Query_tables_list::requires_prelocking1170,38515
  void mark_as_requiring_prelocking(Query_tables_list::mark_as_requiring_prelocking1174,38592
  TABLE_LIST* first_not_own_table(Query_tables_list::first_not_own_table1179,38777
  void chop_off_not_own_tables(Query_tables_list::chop_off_not_own_tables1183,38887
  TABLE_LIST *last_table(Query_tables_list::last_table1194,39152
  enum enum_binlog_stmt_unsafe Query_tables_list::enum_binlog_stmt_unsafe1211,39728
    BINLOG_STMT_UNSAFE_LIMIT=Query_tables_list::enum_binlog_stmt_unsafe::BINLOG_STMT_UNSAFE_LIMIT1216,39866
    BINLOG_STMT_UNSAFE_INSERT_DELAYED,Query_tables_list::enum_binlog_stmt_unsafe::BINLOG_STMT_UNSAFE_INSERT_DELAYED1221,40012
    BINLOG_STMT_UNSAFE_SYSTEM_TABLE,Query_tables_list::enum_binlog_stmt_unsafe::BINLOG_STMT_UNSAFE_SYSTEM_TABLE1226,40165
    BINLOG_STMT_UNSAFE_AUTOINC_COLUMNS,Query_tables_list::enum_binlog_stmt_unsafe::BINLOG_STMT_UNSAFE_AUTOINC_COLUMNS1236,40672
    BINLOG_STMT_UNSAFE_UDF,Query_tables_list::enum_binlog_stmt_unsafe::BINLOG_STMT_UNSAFE_UDF1240,40780
    BINLOG_STMT_UNSAFE_SYSTEM_VARIABLE,Query_tables_list::enum_binlog_stmt_unsafe::BINLOG_STMT_UNSAFE_SYSTEM_VARIABLE1245,40932
    BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION,Query_tables_list::enum_binlog_stmt_unsafe::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION1249,41038
    BINLOG_STMT_UNSAFE_NONTRANS_AFTER_TRANS,Query_tables_list::enum_binlog_stmt_unsafe::BINLOG_STMT_UNSAFE_NONTRANS_AFTER_TRANS1256,41282
    BINLOG_STMT_UNSAFE_MULTIPLE_ENGINES_AND_SELF_LOGGING_ENGINE,Query_tables_list::enum_binlog_stmt_unsafe::BINLOG_STMT_UNSAFE_MULTIPLE_ENGINES_AND_SELF_LOGGING_ENGINE1262,41430
    BINLOG_STMT_UNSAFE_MIXED_STATEMENT,Query_tables_list::enum_binlog_stmt_unsafe::BINLOG_STMT_UNSAFE_MIXED_STATEMENT1268,41634
    BINLOG_STMT_UNSAFE_INSERT_IGNORE_SELECT,Query_tables_list::enum_binlog_stmt_unsafe::BINLOG_STMT_UNSAFE_INSERT_IGNORE_SELECT1275,41899
    BINLOG_STMT_UNSAFE_INSERT_SELECT_UPDATE,Query_tables_list::enum_binlog_stmt_unsafe::BINLOG_STMT_UNSAFE_INSERT_SELECT_UPDATE1282,42171
    BINLOG_STMT_UNSAFE_WRITE_AUTOINC_SELECT,Query_tables_list::enum_binlog_stmt_unsafe::BINLOG_STMT_UNSAFE_WRITE_AUTOINC_SELECT1289,42430
    BINLOG_STMT_UNSAFE_REPLACE_SELECT,Query_tables_list::enum_binlog_stmt_unsafe::BINLOG_STMT_UNSAFE_REPLACE_SELECT1296,42702
    BINLOG_STMT_UNSAFE_CREATE_IGNORE_SELECT,Query_tables_list::enum_binlog_stmt_unsafe::BINLOG_STMT_UNSAFE_CREATE_IGNORE_SELECT1303,42976
    BINLOG_STMT_UNSAFE_CREATE_REPLACE_SELECT,Query_tables_list::enum_binlog_stmt_unsafe::BINLOG_STMT_UNSAFE_CREATE_REPLACE_SELECT1310,43258
    BINLOG_STMT_UNSAFE_CREATE_SELECT_AUTOINC,Query_tables_list::enum_binlog_stmt_unsafe::BINLOG_STMT_UNSAFE_CREATE_SELECT_AUTOINC1318,43574
    BINLOG_STMT_UNSAFE_UPDATE_IGNORE,Query_tables_list::enum_binlog_stmt_unsafe::BINLOG_STMT_UNSAFE_UPDATE_IGNORE1325,43826
    BINLOG_STMT_UNSAFE_INSERT_TWO_KEYS,Query_tables_list::enum_binlog_stmt_unsafe::BINLOG_STMT_UNSAFE_INSERT_TWO_KEYS1331,43980
    BINLOG_STMT_UNSAFE_AUTOINC_NOT_FIRST,Query_tables_list::enum_binlog_stmt_unsafe::BINLOG_STMT_UNSAFE_AUTOINC_NOT_FIRST1337,44130
    BINLOG_STMT_UNSAFE_COUNTQuery_tables_list::enum_binlog_stmt_unsafe::BINLOG_STMT_UNSAFE_COUNT1340,44226
  static const int BINLOG_STMT_UNSAFE_ALL_FLAGS=Query_tables_list::BINLOG_STMT_UNSAFE_ALL_FLAGS1346,44360
  static const int binlog_stmt_unsafe_errcode[Query_tables_list::binlog_stmt_unsafe_errcode1352,44525
  inline bool is_stmt_unsafe(Query_tables_list::is_stmt_unsafe1360,44778
  inline void set_stmt_unsafe(Query_tables_list::set_stmt_unsafe1371,45114
  inline void set_stmt_unsafe_flags(Query_tables_list::set_stmt_unsafe_flags1386,45671
  inline uint32 get_stmt_unsafe_flags(Query_tables_list::get_stmt_unsafe_flags1399,46144
  inline void clear_stmt_unsafe(Query_tables_list::clear_stmt_unsafe1409,46462
  inline bool is_stmt_row_injection(Query_tables_list::is_stmt_row_injection1421,46791
  inline void set_stmt_row_injection(Query_tables_list::set_stmt_row_injection1431,47123
  enum enum_stmt_accessed_tableQuery_tables_list::enum_stmt_accessed_table1438,47332
    STMT_READS_TRANS_TABLE=Query_tables_list::enum_stmt_accessed_table::STMT_READS_TRANS_TABLE1444,47476
    STMT_READS_NON_TRANS_TABLE,Query_tables_list::enum_stmt_accessed_table::STMT_READS_NON_TRANS_TABLE1449,47619
    STMT_READS_TEMP_TRANS_TABLE,Query_tables_list::enum_stmt_accessed_table::STMT_READS_TEMP_TRANS_TABLE1454,47769
    STMT_READS_TEMP_NON_TRANS_TABLE,Query_tables_list::enum_stmt_accessed_table::STMT_READS_TEMP_NON_TRANS_TABLE1459,47923
    STMT_WRITES_TRANS_TABLE,Query_tables_list::enum_stmt_accessed_table::STMT_WRITES_TRANS_TABLE1463,48030
    STMT_WRITES_NON_TRANS_TABLE,Query_tables_list::enum_stmt_accessed_table::STMT_WRITES_NON_TRANS_TABLE1467,48133
    STMT_WRITES_TEMP_TRANS_TABLE,Query_tables_list::enum_stmt_accessed_table::STMT_WRITES_TEMP_TRANS_TABLE1471,48246
    STMT_WRITES_TEMP_NON_TRANS_TABLE,Query_tables_list::enum_stmt_accessed_table::STMT_WRITES_TEMP_NON_TRANS_TABLE1475,48364
    STMT_ACCESS_TABLE_COUNTQuery_tables_list::enum_stmt_accessed_table::STMT_ACCESS_TABLE_COUNT1480,48512
  static inline const char *stmt_accessed_table_string(Query_tables_list::stmt_accessed_table_string1484,48563
  #define BINLOG_DIRECT_ON 1522,49669
  #define BINLOG_DIRECT_OFF 1526,49839
  #define TRX_CACHE_EMPTY 1530,50010
  #define TRX_CACHE_NOT_EMPTY 1532,50083
  #define IL_LT_REPEATABLE 1534,50160
  #define IL_GTE_REPEATABLE 1536,50236
  inline void set_stmt_accessed_table(Query_tables_list::set_stmt_accessed_table1545,50568
  inline bool stmt_accessed_table(Query_tables_list::stmt_accessed_table1566,51213
  inline bool stmt_accessed_non_trans_temp_table(Query_tables_list::stmt_accessed_non_trans_temp_table1584,51764
  inline bool is_mixed_stmt_unsafe(Query_tables_list::is_mixed_stmt_unsafe1608,52547
  bool uses_stored_routines(Query_tables_list::uses_stored_routines1655,54269
  enum enum_binlog_stmt_type Query_tables_list::enum_binlog_stmt_type1665,54480
    BINLOG_STMT_TYPE_ROW_INJECTION Query_tables_list::enum_binlog_stmt_type::BINLOG_STMT_TYPE_ROW_INJECTION1670,54654
    BINLOG_STMT_TYPE_COUNTQuery_tables_list::enum_binlog_stmt_type::BINLOG_STMT_TYPE_COUNT1673,54749
  uint32 binlog_stmt_flags;Query_tables_list::binlog_stmt_flags1691,55297
  uint32 stmt_accessed_table_flag;Query_tables_list::stmt_accessed_table_flag1697,55452
struct st_parsing_options1706,55602
  bool allows_variable;st_parsing_options::allows_variable1708,55630
  bool allows_select_into;st_parsing_options::allows_select_into1709,55654
  bool allows_select_procedure;st_parsing_options::allows_select_procedure1710,55681
  bool allows_derived;st_parsing_options::allows_derived1711,55713
  st_parsing_options(st_parsing_options::st_parsing_options1713,55737
enum enum_comment_state1721,55859
  NO_COMMENT,enum_comment_state::NO_COMMENT1726,55922
  PRESERVE_COMMENT,enum_comment_state::PRESERVE_COMMENT1731,56055
  DISCARD_COMMENTenum_comment_state::DISCARD_COMMENT1738,56307
class Lex_input_stream1756,56931
  Lex_input_stream(Lex_input_stream::Lex_input_stream1759,56964
  ~Lex_input_stream(Lex_input_stream::~Lex_input_stream1763,56994
  void set_echo(Lex_input_stream::set_echo1784,57447
  void save_in_comment_state(Lex_input_stream::save_in_comment_state1789,57501
  void restore_in_comment_state(Lex_input_stream::restore_in_comment_state1795,57601
  void skip_binary(Lex_input_stream::skip_binary1805,57794
  unsigned char yyGet(Lex_input_stream::yyGet1819,58030
  unsigned char yyGetLast(Lex_input_stream::yyGetLast1831,58228
  unsigned char yyPeek(Lex_input_stream::yyPeek1839,58361
  unsigned char yyPeekn(Lex_input_stream::yyPeekn1848,58518
  void yyUnget(Lex_input_stream::yyUnget1858,58785
  void yySkip(Lex_input_stream::yySkip1868,58925
  void yySkipn(Lex_input_stream::yySkipn1880,59121
  char *yyUnput(Lex_input_stream::yyUnput1896,59469
  bool eof(Lex_input_stream::eof1908,59698
  bool eof(Lex_input_stream::eof1918,59929
  const char *get_buf(Lex_input_stream::get_buf1924,60035
  const char *get_cpp_buf(Lex_input_stream::get_cpp_buf1930,60131
  const char *get_end_of_query(Lex_input_stream::get_end_of_query1936,60236
  void start_token(Lex_input_stream::start_token1942,60368
  void restart_token(Lex_input_stream::restart_token1957,60707
  const char *get_tok_start(Lex_input_stream::get_tok_start1964,60853
  const char *get_cpp_tok_start(Lex_input_stream::get_cpp_tok_start1970,60984
  const char *get_tok_end(Lex_input_stream::get_tok_end1976,61111
  const char *get_cpp_tok_end(Lex_input_stream::get_cpp_tok_end1982,61236
  const char *get_tok_start_prev(Lex_input_stream::get_tok_start_prev1988,61370
  const char *get_ptr(Lex_input_stream::get_ptr1994,61503
  const char *get_cpp_ptr(Lex_input_stream::get_cpp_ptr2000,61624
  uint yyLength(Lex_input_stream::yyLength2006,61748
  const char *get_body_utf8_str(Lex_input_stream::get_body_utf8_str2017,62020
  uint get_body_utf8_length(Lex_input_stream::get_body_utf8_length2023,62122
  THD *m_thd;Lex_input_stream::m_thd2037,62605
  uint yylineno;Lex_input_stream::yylineno2040,62650
  uint yytoklen;Lex_input_stream::yytoklen2043,62710
  LEX_YYSTYPE yylval;Lex_input_stream::yylval2046,62791
  int lookahead_token;Lex_input_stream::lookahead_token2054,63012
  LEX_YYSTYPE lookahead_yylval;Lex_input_stream::lookahead_yylval2057,63095
  char *m_ptr;Lex_input_stream::m_ptr2061,63203
  const char *m_tok_start;Lex_input_stream::m_tok_start2064,63291
  const char *m_tok_end;Lex_input_stream::m_tok_end2067,63393
  const char *m_end_of_query;Lex_input_stream::m_end_of_query2070,63490
  const char *m_tok_start_prev;Lex_input_stream::m_tok_start_prev2073,63597
  const char *m_buf;Lex_input_stream::m_buf2076,63706
  uint m_buf_length;Lex_input_stream::m_buf_length2079,63763
  bool m_echo;Lex_input_stream::m_echo2082,63846
  bool m_echo_saved;Lex_input_stream::m_echo_saved2083,63861
  char *m_cpp_buf;Lex_input_stream::m_cpp_buf2086,63914
  char *m_cpp_ptr;Lex_input_stream::m_cpp_ptr2089,64010
  const char *m_cpp_tok_start;Lex_input_stream::m_cpp_tok_start2095,64122
  const char *m_cpp_tok_start_prev;Lex_input_stream::m_cpp_tok_start_prev2101,64250
  const char *m_cpp_tok_end;Lex_input_stream::m_cpp_tok_end2107,64381
  char *m_body_utf8;Lex_input_stream::m_body_utf82110,64461
  char *m_body_utf8_ptr;Lex_input_stream::m_body_utf8_ptr2113,64549
  const char *m_cpp_utf8_processed_ptr;Lex_input_stream::m_cpp_utf8_processed_ptr2119,64711
  enum my_lex_states next_state;Lex_input_stream::next_state2124,64809
  const char *found_semicolon;Lex_input_stream::found_semicolon2130,64959
  uchar tok_bitmap;Lex_input_stream::tok_bitmap2133,65049
  bool ignore_space;Lex_input_stream::ignore_space2136,65104
  bool stmt_prepare_mode;Lex_input_stream::stmt_prepare_mode2142,65232
  bool multi_statements;Lex_input_stream::multi_statements2146,65315
  enum_comment_state in_comment;Lex_input_stream::in_comment2149,65394
  enum_comment_state in_comment_saved;Lex_input_stream::in_comment_saved2150,65427
  const char *m_cpp_text_start;Lex_input_stream::m_cpp_text_start2158,65630
  const char *m_cpp_text_end;Lex_input_stream::m_cpp_text_end2166,65826
  CHARSET_INFO *m_underscore_cs;Lex_input_stream::m_underscore_cs2173,65998
class Sql_statement 2190,66774
  Sql_statement(Sql_statement::Sql_statement2205,67079
  virtual ~Sql_statement(Sql_statement::~Sql_statement2210,67149
  LEX *m_lex;Sql_statement::m_lex2230,67865
struct LEX:LEX2235,67952
  SELECT_LEX_UNIT unit;LEX::unit2237,67991
  SELECT_LEX select_lex;LEX::select_lex2238,68061
  SELECT_LEX *current_select;LEX::current_select2240,68170
  SELECT_LEX *all_selects_list;LEX::all_selects_list2242,68231
  char *length,LEX::length2244,68264
  char *length,*dec,LEX::dec2244,68264
  char *length,*dec,*change;LEX::change2244,68264
  LEX_STRING name;LEX::name2245,68293
  char *help_arg;LEX::help_arg2246,68312
  char *backup_dir;LEX::backup_dir2247,68330
  char* to_log;LEX::to_log2248,68378
  char* x509_subject,LEX::x509_subject2249,68457
  char* x509_subject,*x509_issuer,LEX::x509_issuer2249,68457
  char* x509_subject,*x509_issuer,*ssl_cipher;LEX::ssl_cipher2249,68457
  String *wild;LEX::wild2250,68504
  sql_exchange *exchange;LEX::exchange2251,68520
  select_result *result;LEX::result2252,68546
  Item *default_value,LEX::default_value2253,68571
  Item *default_value, *on_update_value;LEX::on_update_value2253,68571
  LEX_STRING comment,LEX::comment2254,68612
  LEX_STRING comment, ident;LEX::ident2254,68612
  LEX_USER *grant_user;LEX::grant_user2255,68641
  XID *xid;LEX::xid2256,68665
  THD *thd;LEX::thd2257,68677
  DYNAMIC_ARRAY plugins;LEX::plugins2260,68743
  plugin_ref plugins_static_buffer[LEX::plugins_static_buffer2261,68768
  CHARSET_INFO *charset;LEX::charset2263,68835
  bool text_string_is_7bit;LEX::text_string_is_7bit2264,68860
  TABLE_LIST *leaf_tables_insert;LEX::leaf_tables_insert2266,68951
  LEX_STRING create_view_select;LEX::create_view_select2269,69027
  const char* raw_trg_on_table_name_begin;LEX::raw_trg_on_table_name_begin2272,69115
  const char* raw_trg_on_table_name_end;LEX::raw_trg_on_table_name_end2274,69209
  partition_info *part_info;LEX::part_info2277,69321
  LEX_USER *definer;LEX::definer2283,69476
  List<Key_part_spec> col_list;LEX::col_list2285,69498
  List<Key_part_spec> ref_list;LEX::ref_list2286,69530
  List<String>	      interval_list;LEX::interval_list2287,69562
  List<String>        mc_key_list;LEX::mc_key_list2288,69598
  List<LEX_USER>      users_list;LEX::users_list2289,69633
  List<LEX_COLUMN>    columns;LEX::columns2290,69667
  List<Item>	      *insert_list,LEX::insert_list2291,69698
  List<Item>	      *insert_list,field_list,LEX::field_list2291,69698
  List<Item>	      *insert_list,field_list,value_list,LEX::value_list2291,69698
  List<Item>	      *insert_list,field_list,value_list,update_list;LEX::update_list2291,69698
  List<List_item>     many_values;LEX::many_values2292,69765
  List<set_var_base>  var_list;LEX::var_list2293,69800
  List<Item_func_set_user_var> set_var_list;LEX::set_var_list2294,69832
  List<Item_param>    param_list;LEX::param_list2295,69905
  List<LEX_STRING>    view_list;LEX::view_list2296,69939
  List<Name_resolution_context> context_stack;LEX::context_stack2310,70837
  SQL_I_List<ORDER> proc_list;LEX::proc_list2312,70885
  SQL_I_List<TABLE_LIST> auxiliary_table_list,LEX::auxiliary_table_list2313,70916
  SQL_I_List<TABLE_LIST> auxiliary_table_list, save_list;LEX::save_list2313,70916
  Create_field	      *last_field;LEX::last_field2314,70974
  Item_sum *in_sum_func;LEX::in_sum_func2315,71008
  udf_func udf;LEX::udf2316,71033
  HA_CHECK_OPT   check_opt;LEX::check_opt2317,71049
  HA_CREATE_INFO create_info;LEX::create_info2318,71103
  KEY_CREATE_INFO key_create_info;LEX::key_create_info2319,71133
  LEX_MASTER_INFO mi;LEX::mi2320,71168
  LEX_SERVER_OPTIONS server_options;LEX::server_options2321,71218
  USER_RESOURCES mqh;LEX::mqh2322,71255
  LEX_RESET_SLAVE reset_slave_info;LEX::reset_slave_info2323,71277
  ulong type;LEX::type2324,71313
  nesting_map allow_sum_func;LEX::allow_sum_func2334,71788
  Sql_statement *m_stmt;LEX::m_stmt2336,71819
  bool expr_allows_subselect;LEX::expr_allows_subselect2344,72090
  enum SSL_type ssl_type;LEX::ssl_type2346,72121
  enum enum_duplicates duplicates;LEX::duplicates2347,72176
  enum enum_tx_isolation tx_isolation;LEX::tx_isolation2348,72211
  enum enum_ha_read_modes ha_read_mode;LEX::ha_read_mode2349,72250
    enum ha_rkey_function ha_rkey_mode;LEX::ha_rkey_mode2351,72300
    enum xa_option_words xa_opt;LEX::xa_opt2352,72340
  enum enum_var_type option_type;LEX::option_type2354,72378
  enum enum_view_create_mode create_view_mode;LEX::create_view_mode2355,72412
  enum enum_drop_mode drop_mode;LEX::drop_mode2356,72459
  uint profile_query_id;LEX::profile_query_id2358,72493
  uint profile_options;LEX::profile_options2359,72518
  uint uint_geom_type;LEX::uint_geom_type2360,72542
  uint grant,LEX::grant2361,72565
  uint grant, grant_tot_col,LEX::grant_tot_col2361,72565
  uint grant, grant_tot_col, which_columns;LEX::which_columns2361,72565
  enum Foreign_key::fk_match_opt fk_match_option;LEX::fk_match_option2362,72609
  enum Foreign_key::fk_option fk_update_opt;LEX::fk_update_opt2363,72659
  enum Foreign_key::fk_option fk_delete_opt;LEX::fk_delete_opt2364,72704
  uint slave_thd_opt,LEX::slave_thd_opt2365,72749
  uint slave_thd_opt, start_transaction_opt;LEX::start_transaction_opt2365,72749
  int nest_level;LEX::nest_level2366,72794
  uint table_count;LEX::table_count2372,73023
  uint8 describe;LEX::describe2373,73043
  uint8 derived_tables;LEX::derived_tables2379,73253
  uint8 create_view_algorithm;LEX::create_view_algorithm2380,73277
  uint8 create_view_check;LEX::create_view_check2381,73308
  uint8 context_analysis_only;LEX::context_analysis_only2382,73335
  bool drop_if_exists,LEX::drop_if_exists2383,73366
  bool drop_if_exists, drop_temporary,LEX::drop_temporary2383,73366
  bool drop_if_exists, drop_temporary, local_file,LEX::local_file2383,73366
  bool drop_if_exists, drop_temporary, local_file, one_shot_set;LEX::one_shot_set2383,73366
  bool autocommit;LEX::autocommit2384,73431
  bool verbose,LEX::verbose2385,73450
  bool verbose, no_write_to_binlog;LEX::no_write_to_binlog2385,73450
  enum enum_yes_no_unknown tx_chain,LEX::tx_chain2387,73487
  enum enum_yes_no_unknown tx_chain, tx_release;LEX::tx_release2387,73487
  bool safe_to_cache_query;LEX::safe_to_cache_query2388,73536
  bool subqueries,LEX::subqueries2389,73564
  bool subqueries, ignore;LEX::ignore2389,73564
  bool noar;LEX::noar2390,73591
  st_parsing_options parsing_options;LEX::parsing_options2391,73604
  Alter_info alter_info;LEX::alter_info2392,73642
  TABLE_LIST *create_last_non_select_table;LEX::create_last_non_select_table2398,73878
  LEX_STRING prepared_stmt_name;LEX::prepared_stmt_name2400,73961
  LEX_STRING prepared_stmt_code;LEX::prepared_stmt_code2405,74159
  bool prepared_stmt_code_is_varref;LEX::prepared_stmt_code_is_varref2407,74271
  List<LEX_STRING> prepared_stmt_params;LEX::prepared_stmt_params2409,74372
  sp_head *sphead;LEX::sphead2410,74413
  sp_name *spname;LEX::spname2411,74432
  bool sp_lex_in_use;LEX::sp_lex_in_use2412,74451
  bool all_privileges;LEX::all_privileges2413,74529
  bool proxy_priv;LEX::proxy_priv2414,74552
  sp_pcontext *spcont;LEX::spcont2415,74571
  st_sp_chistics sp_chistics;LEX::sp_chistics2417,74595
  Event_parse_data *event_parse_data;LEX::event_parse_data2419,74626
  bool only_view;LEX::only_view2421,74665
  bool empty_field_list_on_rset;LEX::empty_field_list_on_rset2426,74822
  uint8 create_view_suid;LEX::create_view_suid2430,74926
  st_trg_chistics trg_chistics;LEX::trg_chistics2432,75000
  SQL_I_List<Item_trigger_field> trg_table_fields;LEX::trg_table_fields2440,75387
    const char *stmt_definition_begin;LEX::stmt_definition_begin2458,76120
    uint keyword_delayed_begin_offset;LEX::keyword_delayed_begin_offset2459,76159
    const char *stmt_definition_end;LEX::stmt_definition_end2463,76214
    uint keyword_delayed_end_offset;LEX::keyword_delayed_end_offset2464,76251
  bool use_only_table_context;LEX::use_only_table_context2473,76526
  st_alter_tablespace *alter_tablespace_info;LEX::alter_tablespace_info2479,76684
  bool escape_used;LEX::escape_used2481,76733
  bool is_lex_started;LEX::is_lex_started2482,76753
  table_map  used_tables;LEX::used_tables2492,77170
  virtual ~LEX(LEX::~LEX2496,77207
  inline bool is_ps_or_view_context_analysis(LEX::is_ps_or_view_context_analysis2503,77374
  inline void uncacheable(LEX::uncacheable2510,77554
  inline bool which_check_option_applicable(LEX::which_check_option_applicable2551,78700
  bool push_context(LEX::push_context2569,79068
  void pop_context(LEX::pop_context2574,79177
  Name_resolution_context *current_context(LEX::current_context2581,79292
  bool is_single_level_stmt(LEX::is_single_level_stmt2603,79997
class Set_signal_information2625,80577
 Set_signal_information(Set_signal_information::Set_signal_information2629,80664
  ~Set_signal_information(Set_signal_information::~Set_signal_information2635,80805
  Item *m_item[Set_signal_information::m_item2646,81082
class Yacc_state2655,81295
  Yacc_state(Yacc_state::Yacc_state2658,81322
  void reset(Yacc_state::reset2663,81359
  void reset_before_substatement(Yacc_state::reset_before_substatement2678,81635
  uchar *yacc_yyss;Yacc_state::yacc_yyss2688,81849
  uchar *yacc_yyvs;Yacc_state::yacc_yyvs2694,81982
  Set_signal_information m_set_signal_info;Yacc_state::m_set_signal_info2700,82096
  thr_lock_type m_lock_type;Yacc_state::m_lock_type2719,82899
  enum_mdl_type m_mdl_type;Yacc_state::m_mdl_type2725,83030
class Parser_state2738,83295
  Parser_state(Parser_state::Parser_state2741,83324
  bool init(Parser_state::init2751,83475
  ~Parser_state(Parser_state::~Parser_state2756,83581
  Lex_input_stream m_lip;Parser_state::m_lip2759,83605
  Yacc_state m_yacc;Parser_state::m_yacc2760,83631
  void reset(Parser_state::reset2762,83653
struct st_lex_local:st_lex_local2770,83785
  static void *operator new(st_lex_local::operator new2772,83819
  static void *operator new(st_lex_local::operator new2776,83904
  static void operator delete(st_lex_local::operator delete2780,84035
  static void operator delete(st_lex_local::operator delete2782,84112

sql/sql_list.h,8221
#define INCLUDES_MYSQL_SQL_LIST_H2,34
class Sql_alloc36,1319
  static void *operator new(Sql_alloc::operator new39,1345
  static void *operator new[](Sql_alloc::operator new[]43,1431
  static void *operator new[](Sql_alloc::operator new[]47,1519
  static void *operator new(Sql_alloc::operator new49,1632
  static void operator delete(Sql_alloc::operator delete51,1743
  static void operator delete(Sql_alloc::operator delete52,1819
  static void operator delete[](Sql_alloc::operator delete[]54,1905
  static void operator delete[](Sql_alloc::operator delete[]56,1993
  bool dummy;Sql_alloc::dummy58,2090
  inline Sql_alloc(Sql_alloc::Sql_alloc59,2104
  inline ~Sql_alloc(Sql_alloc::~Sql_alloc60,2138
  inline Sql_alloc(Sql_alloc::Sql_alloc62,2169
  inline ~Sql_alloc(Sql_alloc::~Sql_alloc63,2193
class SQL_I_List 77,2470
  uint elements;SQL_I_List::elements80,2515
  T *first;SQL_I_List::first82,2572
  T **next;SQL_I_List::next84,2638
  SQL_I_List(SQL_I_List::SQL_I_List86,2651
  SQL_I_List(SQL_I_List::SQL_I_List88,2680
  inline void empty(SQL_I_List::empty95,2829
  inline void link_in_list(SQL_I_List::link_in_list102,2912
  inline void save_and_clear(SQL_I_List::save_and_clear110,3049
  inline void push_front(SQL_I_List::push_front116,3139
  inline void push_back(SQL_I_List::push_back124,3306
struct list_node 152,3948
  list_node *next;list_node::next154,3985
  void *info;list_node::info155,4004
  list_node(list_node::list_node156,4018
  list_node(list_node::list_node159,4106
class base_list 169,4239
  list_node *first,base_list::first172,4286
  list_node *first,**last;base_list::last172,4286
  uint elements;base_list::elements175,4322
  bool operator==(base_list::operator==177,4340
  inline void empty(base_list::empty185,4492
  inline base_list(base_list::base_list186,4563
  inline base_list(base_list::base_list196,5071
  inline base_list(base_list::base_list209,5533
  inline bool push_back(base_list::push_back210,5568
  inline bool push_back(base_list::push_back220,5753
  inline bool push_front(base_list::push_front230,5969
  void remove(base_list::remove243,6199
  inline void concat(base_list::concat253,6404
  inline void *pop(base_list::pop262,6572
  inline void disjoin(base_list::disjoin271,6758
  inline void prepand(base_list::prepand286,7071
  inline void swap(base_list::swap298,7273
  inline list_node* last_node(base_list::last_node304,7467
  inline list_node* first_node(base_list::first_node305,7517
  inline void *head(base_list::head306,7567
  inline void **head_ref(base_list::head_ref307,7613
  inline bool is_empty(base_list::is_empty308,7693
  inline list_node *last_ref(base_list::last_ref309,7753
  bool check_list(base_list::check_list330,8311
  void after(base_list::after363,9097
class base_list_iterator374,9308
  base_list *list;base_list_iterator::list377,9346
  list_node **el,base_list_iterator::el378,9365
  list_node **el,**prev,base_list_iterator::prev378,9365
  list_node **el,**prev,*current;base_list_iterator::current378,9365
  void sublist(base_list_iterator::sublist379,9399
  base_list_iterator(base_list_iterator::base_list_iterator386,9521
  base_list_iterator(base_list_iterator::base_list_iterator390,9592
  inline void init(base_list_iterator::init393,9658
  inline void *next(base_list_iterator::next401,9782
  inline void *next_fast(base_list_iterator::next_fast408,9897
  inline void rewind(base_list_iterator::rewind415,10012
  inline void *replace(base_list_iterator::replace419,10069
  void *replace(base_list_iterator::replace426,10251
  inline void remove(base_list_iterator::remove440,10680
  void after(base_list_iterator::after446,10804
  inline void **ref(base_list_iterator::ref452,10959
  inline bool is_last(base_list_iterator::is_last456,11047
template <class T> class List 463,11165
  inline List(List::List466,11223
  inline List(List::List467,11255
  inline List(List::List468,11308
  inline bool push_back(List::push_back470,11396
  inline bool push_back(List::push_back471,11462
  inline bool push_front(List::push_front473,11560
  inline T* head(List::head474,11628
  inline T** head_ref(List::head_ref475,11681
  inline T* pop(List::pop476,11744
  inline void concat(List::concat477,11796
  inline void disjoin(List::disjoin478,11861
  inline void prepand(List::prepand479,11928
  void delete_elements(List::delete_elements480,11995
template <class T> class List_iterator 493,12214
  List_iterator(List_iterator::List_iterator496,12290
  List_iterator(List_iterator::List_iterator497,12345
  inline void init(List_iterator::init498,12389
  inline T* operator++(List_iterator::operator++499,12453
  inline T *replace(List_iterator::replace500,12525
  inline T *replace(List_iterator::replace501,12601
  inline void rewind(List_iterator::rewind502,12681
  inline void remove(List_iterator::remove503,12743
  inline void after(List_iterator::after504,12805
  inline T** ref(List_iterator::ref505,12867
template <class T> class List_iterator_fast 509,12943
  inline T *replace(List_iterator_fast::replace512,13027
  inline T *replace(List_iterator_fast::replace513,13074
  inline void remove(List_iterator_fast::remove514,13125
  inline void after(List_iterator_fast::after515,13157
  inline T** ref(List_iterator_fast::ref516,13189
  inline List_iterator_fast(List_iterator_fast::List_iterator_fast519,13245
  inline List_iterator_fast(List_iterator_fast::List_iterator_fast520,13312
  inline void init(List_iterator_fast::init521,13368
  inline T* operator++(List_iterator_fast::operator++522,13432
  inline void rewind(List_iterator_fast::rewind523,13509
  void sublist(List_iterator_fast::sublist524,13571
struct ilink536,13789
  struct ilink **prev,ilink::prev538,13804
  struct ilink **prev,*next;ilink::next538,13804
  static void *operator new(ilink::operator new539,13833
  static void operator delete(ilink::operator delete543,13970
  inline ilink(ilink::ilink548,14060
  inline void unlink(ilink::unlink552,14105
  virtual ~ilink(ilink::~ilink559,14279
class i_string:i_string565,14409
  const char* ptr;i_string::ptr568,14448
  i_string(i_string::i_string569,14467
  i_string(i_string::i_string570,14491
class i_string_pair:i_string_pair574,14602
  const char* key;i_string_pair::key577,14646
  const char* val;i_string_pair::val578,14665
  i_string_pair(i_string_pair::i_string_pair579,14684
  i_string_pair(i_string_pair::i_string_pair580,14720
class base_ilist588,14863
  struct ilink *first;base_ilist::first590,14882
  struct ilink last;base_ilist::last591,14905
  inline void empty(base_ilist::empty593,14934
  base_ilist(base_ilist::base_ilist594,14993
  inline bool is_empty(base_ilist::is_empty595,15021
  inline bool is_last(base_ilist::is_last598,15178
  inline void append(base_ilist::append599,15258
  inline void push_back(base_ilist::push_back604,15369
  inline struct ilink *get(base_ilist::get611,15499
  inline struct ilink *head(base_ilist::head619,15688
  void move_elements_to(base_ilist::move_elements_to631,15982
class base_ilist_iterator651,16470
  base_ilist *list;base_ilist_iterator::list653,16498
  struct ilink **el,base_ilist_iterator::el654,16518
  struct ilink **el,*current;base_ilist_iterator::current654,16518
  base_ilist_iterator(base_ilist_iterator::base_ilist_iterator656,16556
  void *next(base_ilist_iterator::next658,16656
class I_List 670,16872
  I_List(I_List::I_List673,16915
  inline bool is_last(I_List::is_last674,16943
  inline void empty(I_List::empty675,17010
  inline bool is_empty(I_List::is_empty676,17058
  inline void append(I_List::append677,17126
  inline void push_back(I_List::push_back678,17180
  inline T* get(I_List::get679,17240
  inline T* head(I_List::head680,17294
  inline void move_elements_to(I_List::move_elements_to681,17350
template <class T> class I_List_iterator 690,17515
  I_List_iterator(I_List_iterator::I_List_iterator693,17594
  inline T* operator++(I_List_iterator::operator++694,17654
list_copy_and_replace_each_value(715,18335

sql/sql_load.h,33
#define SQL_LOAD_INCLUDED17,772

sql/sql_locale.h,1064
#define SQL_LOCALE_INCLUDED17,774
typedef struct my_locale_errmsgs19,803
  const char *language;language21,838
  const char **errmsgs;errmsgs22,862
} MY_LOCALE_ERRMSGS;23,886
typedef struct st_typelib TYPELIB;27,968
class MY_LOCALE29,1004
  uint  number;MY_LOCALE::number32,1030
  const char *name;MY_LOCALE::name33,1046
  const char *description;MY_LOCALE::description34,1066
  const bool is_ascii;MY_LOCALE::is_ascii35,1093
  TYPELIB *month_names;MY_LOCALE::month_names36,1116
  TYPELIB *ab_month_names;MY_LOCALE::ab_month_names37,1140
  TYPELIB *day_names;MY_LOCALE::day_names38,1167
  TYPELIB *ab_day_names;MY_LOCALE::ab_day_names39,1189
  uint max_month_name_length;MY_LOCALE::max_month_name_length40,1214
  uint max_day_name_length;MY_LOCALE::max_day_name_length41,1244
  uint decimal_point;MY_LOCALE::decimal_point42,1272
  uint thousand_sep;MY_LOCALE::thousand_sep43,1294
  const char *grouping;MY_LOCALE::grouping44,1315
  MY_LOCALE_ERRMSGS *errmsgs;MY_LOCALE::errmsgs45,1339
  MY_LOCALE(MY_LOCALE::MY_LOCALE46,1369

sql/sql_manager.h,36
#define SQL_MANAGER_INCLUDED17,775

sql/sql_parse.h,1006
#define SQL_PARSE_INCLUDED17,773
enum enum_mysql_completiontype 31,1089
  ROLLBACK_RELEASE=enum_mysql_completiontype::ROLLBACK_RELEASE32,1122
  ROLLBACK_RELEASE=-2, ROLLBACK=enum_mysql_completiontype::ROLLBACK32,1122
  ROLLBACK_RELEASE=-2, ROLLBACK=1,  ROLLBACK_AND_CHAIN=enum_mysql_completiontype::ROLLBACK_AND_CHAIN32,1122
  COMMIT_RELEASE=enum_mysql_completiontype::COMMIT_RELEASE33,1180
  COMMIT_RELEASE=-1,   COMMIT=enum_mysql_completiontype::COMMIT33,1180
  COMMIT_RELEASE=-1,   COMMIT=0,    COMMIT_AND_CHAIN=enum_mysql_completiontype::COMMIT_AND_CHAIN33,1180
inline bool check_identifier_name(139,5927
inline bool check_identifier_name(144,6064
inline bool check_one_table_access(165,7094
inline bool check_single_table_access(167,7194
inline bool check_routine_access(170,7319
inline bool check_some_access(173,7482
inline bool check_some_routine_access(178,7619
inline bool check_access(181,7771
check_table_access(189,7980
inline bool is_supported_parser_charset(200,8345

sql/sql_partition_admin.h,3520
#define SQL_PARTITION_ADMIN_H17,769
class Partition_statement_unsupported 25,932
  Partition_statement_unsupported(Partition_statement_unsupported::Partition_statement_unsupported28,1003
  ~Partition_statement_unsupported(Partition_statement_unsupported::~Partition_statement_unsupported32,1078
class Alter_table_analyze_partition_statement 39,1152
  Alter_table_analyze_partition_statement(Alter_table_analyze_partition_statement::Alter_table_analyze_partition_statement43,1251
  ~Alter_table_analyze_partition_statement(Alter_table_analyze_partition_statement::~Alter_table_analyze_partition_statement47,1352
class Alter_table_check_partition_statement 52,1407
  Alter_table_check_partition_statement(Alter_table_check_partition_statement::Alter_table_check_partition_statement56,1504
  ~Alter_table_check_partition_statement(Alter_table_check_partition_statement::~Alter_table_check_partition_statement60,1603
class Alter_table_optimize_partition_statement 65,1656
  Alter_table_optimize_partition_statement(Alter_table_optimize_partition_statement::Alter_table_optimize_partition_statement69,1756
  ~Alter_table_optimize_partition_statement(Alter_table_optimize_partition_statement::~Alter_table_optimize_partition_statement73,1858
class Alter_table_repair_partition_statement 78,1914
  Alter_table_repair_partition_statement(Alter_table_repair_partition_statement::Alter_table_repair_partition_statement82,2012
  ~Alter_table_repair_partition_statement(Alter_table_repair_partition_statement::~Alter_table_repair_partition_statement86,2112
class Alter_table_truncate_partition_statement 91,2166
  Alter_table_truncate_partition_statement(Alter_table_truncate_partition_statement::Alter_table_truncate_partition_statement95,2266
  ~Alter_table_truncate_partition_statement(Alter_table_truncate_partition_statement::~Alter_table_truncate_partition_statement99,2368
class Alter_table_analyze_partition_statement 109,2512
  Alter_table_analyze_partition_statement(Alter_table_analyze_partition_statement::Alter_table_analyze_partition_statement116,2743
  ~Alter_table_analyze_partition_statement(Alter_table_analyze_partition_statement::~Alter_table_analyze_partition_statement120,2836
class Alter_table_check_partition_statement 135,3139
  Alter_table_check_partition_statement(Alter_table_check_partition_statement::Alter_table_check_partition_statement142,3364
  ~Alter_table_check_partition_statement(Alter_table_check_partition_statement::~Alter_table_check_partition_statement146,3453
class Alter_table_optimize_partition_statement 161,3755
  Alter_table_optimize_partition_statement(Alter_table_optimize_partition_statement::Alter_table_optimize_partition_statement168,3989
  ~Alter_table_optimize_partition_statement(Alter_table_optimize_partition_statement::~Alter_table_optimize_partition_statement172,4084
class Alter_table_repair_partition_statement 187,4390
  Alter_table_repair_partition_statement(Alter_table_repair_partition_statement::Alter_table_repair_partition_statement194,4618
  ~Alter_table_repair_partition_statement(Alter_table_repair_partition_statement::~Alter_table_repair_partition_statement198,4709
class Alter_table_truncate_partition_statement 213,5013
  Alter_table_truncate_partition_statement(Alter_table_truncate_partition_statement::Alter_table_truncate_partition_statement220,5236
  virtual ~Alter_table_truncate_partition_statement(Alter_table_truncate_partition_statement::~Alter_table_truncate_partition_statement224,5320

sql/sql_partition.h,3036
#define SQL_PARTITION_INCLUDED2,31
typedef struct st_bitmap MY_BITMAP;33,1114
typedef struct st_ha_create_information HA_CREATE_INFO;34,1150
typedef struct st_key KEY;35,1206
typedef struct st_key_range key_range;36,1233
#define HA_CAN_PARTITION 39,1308
#define HA_CAN_UPDATE_PARTITION_KEY 40,1372
#define HA_CAN_PARTITION_UNIQUE 41,1417
#define HA_USE_AUTO_PARTITION 42,1458
#define NORMAL_PART_NAME 44,1498
#define TEMP_PART_NAME 45,1525
#define RENAMED_PART_NAME 46,1550
typedef struct st_lock_param_type48,1579
  TABLE_LIST *table_list;st_lock_param_type::table_list50,1615
  ulonglong copied;st_lock_param_type::copied51,1641
  ulonglong deleted;st_lock_param_type::deleted52,1661
  THD *thd;st_lock_param_type::thd53,1682
  HA_CREATE_INFO *create_info;st_lock_param_type::create_info54,1694
  Alter_info *alter_info;st_lock_param_type::alter_info55,1725
  TABLE *table;st_lock_param_type::table56,1751
  TABLE *old_table;st_lock_param_type::old_table57,1767
  KEY *key_info_buffer;st_lock_param_type::key_info_buffer58,1787
  const char *db;st_lock_param_type::db59,1811
  const char *table_name;st_lock_param_type::table_name60,1829
  uchar *pack_frm_data;st_lock_param_type::pack_frm_data61,1855
  uint key_count;st_lock_param_type::key_count62,1879
  uint db_options;st_lock_param_type::db_options63,1897
  size_t pack_frm_len;st_lock_param_type::pack_frm_len64,1916
  partition_info *part_info;st_lock_param_type::part_info65,1939
} ALTER_PARTITION_PARAM_TYPE;66,1968
  longlong list_value;::list_value69,2016
  uint32 partition_id;::partition_id70,2039
} LIST_PART_ENTRY;71,2062
  uint32 start_part;::start_part74,2099
  uint32 end_part;::end_part75,2120
} part_id_range;76,2139
#define NOT_A_PARTITION_ID 79,2183
typedef uint32 (*partition_iter_func)partition_iter_func152,5933
typedef struct st_partition_iter170,6513
  partition_iter_func get_next;st_partition_iter::get_next172,6548
  bool ret_null_part,st_partition_iter::ret_null_part177,6735
  bool ret_null_part, ret_null_part_orig;st_partition_iter::ret_null_part_orig177,6735
  struct st_part_num_rangest_partition_iter::st_part_num_range178,6777
    uint32 start;st_partition_iter::st_part_num_range::start180,6808
    uint32 cur;st_partition_iter::st_part_num_range::cur181,6826
    uint32 end;st_partition_iter::st_part_num_range::end182,6842
  struct st_field_value_rangest_partition_iter::st_field_value_range185,6864
    longlong start;st_partition_iter::st_field_value_range::start187,6898
    longlong cur;st_partition_iter::st_field_value_range::cur188,6918
    longlong end;st_partition_iter::st_field_value_range::end189,6936
    struct st_part_num_range     part_nums;st_partition_iter::part_nums194,6972
    struct st_field_value_range  field_vals;st_partition_iter::field_vals195,7016
  partition_info *part_info;st_partition_iter::part_info197,7066
} PARTITION_ITERATOR;198,7095
typedef int (*get_partitions_in_range_iter)get_partitions_in_range_iter239,8773

sql/sql_plist.h,1961
#define SQL_PLIST_H2,20
template <typename T,21,810
template <typename T, typename B,21,810
template <typename T, typename B, typename C,21,810
template <typename T,64,2397
template <typename T, typename B,64,2397
          typename C 65,2431
  typedef I_P_List_iterator<T, B, C, I> Iterator;157,4602
template <typename T,165,4691
template <typename T, typename B,165,4691
          typename C 166,4725
  inline T* operator++(182,5197
  inline T* operator++(189,5330
template <typename T,206,5611
template <typename T, T* T::*next,next206,5611
struct I_P_List_adapter207,5660
  static inline T **next_ptr(I_P_List_adapter::next_ptr209,5686
  static inline T ***prev_ptr(I_P_List_adapter::prev_ptr211,5748
class I_P_List_null_counter220,5931
  void reset(I_P_List_null_counter::reset223,5972
  void inc(I_P_List_null_counter::inc224,5990
  void dec(I_P_List_null_counter::dec225,6006
  void swap(I_P_List_null_counter::swap226,6022
class I_P_List_counter235,6164
  uint m_counter;I_P_List_counter::m_counter237,6189
  I_P_List_counter(I_P_List_counter::I_P_List_counter239,6218
  void reset(I_P_List_counter::reset240,6258
  void inc(I_P_List_counter::inc241,6289
  void dec(I_P_List_counter::dec242,6317
  void swap(I_P_List_counter::swap243,6345
  uint elements(I_P_List_counter::elements246,6442
template <typename T> class I_P_List_no_push_back255,6613
  I_P_List_no_push_back(I_P_List_no_push_back::I_P_List_no_push_back258,6676
  void set_last(I_P_List_no_push_back::set_last259,6711
  void swap(I_P_List_no_push_back::swap265,6904
template <typename T> class I_P_List_fast_push_back274,7069
  T **m_last;I_P_List_fast_push_back::m_last276,7123
  I_P_List_fast_push_back(I_P_List_fast_push_back::I_P_List_fast_push_back278,7148
  void set_last(I_P_List_fast_push_back::set_last279,7198
  T** get_last(I_P_List_fast_push_back::get_last280,7236
  void swap(I_P_List_fast_push_back::swap281,7278

sql/sql_plugin.h,3266
#define _sql_plugin_h17,767
#define SHOW_always_last 25,924
#undef SHOW_always_last30,1207
enum SHOW_COMP_OPTION 36,1368
enum SHOW_COMP_OPTION { SHOW_OPTION_YES,SHOW_COMP_OPTION::SHOW_OPTION_YES36,1368
enum SHOW_COMP_OPTION { SHOW_OPTION_YES, SHOW_OPTION_NO,SHOW_COMP_OPTION::SHOW_OPTION_NO36,1368
enum SHOW_COMP_OPTION { SHOW_OPTION_YES, SHOW_OPTION_NO, SHOW_OPTION_DISABLED}SHOW_COMP_OPTION::SHOW_OPTION_DISABLED36,1368
enum enum_plugin_load_option 37,1448
enum enum_plugin_load_option { PLUGIN_OFF,enum_plugin_load_option::PLUGIN_OFF37,1448
enum enum_plugin_load_option { PLUGIN_OFF, PLUGIN_ON,enum_plugin_load_option::PLUGIN_ON37,1448
enum enum_plugin_load_option { PLUGIN_OFF, PLUGIN_ON, PLUGIN_FORCE,enum_plugin_load_option::PLUGIN_FORCE37,1448
  PLUGIN_FORCE_PLUS_PERMANENT enum_plugin_load_option::PLUGIN_FORCE_PLUS_PERMANENT38,1516
#define plugin_ref_to_int(44,1637
#define plugin_int_to_ref(45,1668
#define plugin_ref_to_int(47,1705
#define plugin_int_to_ref(48,1752
#define PLUGIN_INIT_SKIP_DYNAMIC_LOADING 54,1850
#define PLUGIN_INIT_SKIP_PLUGIN_TABLE 55,1893
#define PLUGIN_INIT_SKIP_INITIALIZATION 56,1936
#define INITIAL_LEX_PLUGIN_LIST_SIZE 58,1980
typedef enum enum_mysql_show_type SHOW_TYPE;60,2024
typedef struct st_mysql_show_var SHOW_VAR;61,2069
typedef struct st_mysql_lex_string LEX_STRING;62,2112
#define MYSQL_ANY_PLUGIN 64,2160
#define PLUGIN_IS_FREED 73,2457
#define PLUGIN_IS_DELETED 74,2491
#define PLUGIN_IS_UNINITIALIZED 75,2525
#define PLUGIN_IS_READY 76,2559
#define PLUGIN_IS_DYING 77,2593
#define PLUGIN_IS_DISABLED 78,2628
struct st_plugin_dl82,2736
  LEX_STRING dl;st_plugin_dl::dl84,2758
  void *handle;st_plugin_dl::handle85,2775
  struct st_mysql_plugin *plugins;st_plugin_dl::plugins86,2791
  int version;st_plugin_dl::version87,2826
  uint ref_count;st_plugin_dl::ref_count88,2841
struct st_plugin_int93,2950
  LEX_STRING name;st_plugin_int::name95,2973
  struct st_mysql_plugin *plugin;st_plugin_int::plugin96,2992
  struct st_plugin_dl *plugin_dl;st_plugin_int::plugin_dl97,3026
  uint state;st_plugin_int::state98,3060
  uint ref_count;st_plugin_int::ref_count99,3074
  void *data;st_plugin_int::data100,3147
  MEM_ROOT mem_root;st_plugin_int::mem_root101,3223
  sys_var *system_vars;st_plugin_int::system_vars102,3298
  enum enum_plugin_load_option load_option;st_plugin_int::load_option103,3369
typedef struct st_plugin_int *plugin_ref;plugin_ref112,3569
#define plugin_decl(113,3611
#define plugin_dlib(114,3650
#define plugin_data(115,3692
#define plugin_name(116,3742
#define plugin_state(117,3782
#define plugin_load_option(118,3821
#define plugin_equals(119,3872
typedef struct st_plugin_int **plugin_ref;plugin_ref121,3922
#define plugin_decl(122,3965
#define plugin_dlib(123,4007
#define plugin_data(124,4052
#define plugin_name(125,4105
#define plugin_state(126,4148
#define plugin_load_option(127,4190
#define plugin_equals(128,4244
typedef int (*plugin_type_init)plugin_type_init131,4318
#define my_plugin_lock_by_name(142,4755
#define my_plugin_lock_by_name_ci(143,4820
#define my_plugin_lock(144,4888
#define my_plugin_lock_ci(145,4933
typedef my_bool (plugin_foreach_func)160,5780
#define plugin_foreach(163,5935

sql/sql_plugin_services.h,454
struct st_service_ref 19,803
  const char *name;name20,827
  uint version;21,847
  void *service;service22,863
static struct my_snprintf_service_st my_snprintf_handler 25,884
static struct thd_alloc_service_st thd_alloc_handler=30,979
static struct thd_wait_service_st thd_wait_handler=39,1131
static struct my_thread_scheduler_service my_thread_scheduler_handler=44,1222
static struct st_service_ref list_of_services[list_of_services50,1356

sql/sql_prepare.h,2348
#define SQL_PREPARE_H2,22
class Reprepare_observer52,1940
  bool is_invalidated(Reprepare_observer::is_invalidated62,2252
  void reset_reprepare_observer(Reprepare_observer::reset_reprepare_observer63,2308
  bool m_invalidated;Reprepare_observer::m_invalidated65,2377
class Server_runnable87,3204
class Ed_result_set:Ed_result_set109,3562
  operator List<Ed_row>&(Ed_result_set::operator List<Ed_row>&112,3610
  unsigned int size(Ed_result_set::size113,3657
  ~Ed_result_set(Ed_result_set::~Ed_result_set119,3885
  size_t get_field_count(Ed_result_set::get_field_count121,3908
  MEM_ROOT m_mem_root;Ed_result_set::m_mem_root128,4189
  size_t m_column_count;Ed_result_set::m_column_count129,4212
  List<Ed_row> *m_rows;Ed_result_set::m_rows130,4237
  Ed_result_set *m_next_rset;Ed_result_set::m_next_rset131,4261
class Ed_connection136,4326
  ulong get_field_count(Ed_connection::get_field_count218,7018
  ulonglong get_affected_rows(Ed_connection::get_affected_rows231,7352
  ulonglong get_last_insert_id(Ed_connection::get_last_insert_id241,7539
  ulong get_warn_count(Ed_connection::get_warn_count254,7880
  List<MYSQL_ERROR> *get_warn_list(Ed_connection::get_warn_list265,8154
  const char *get_last_error(Ed_connection::get_last_error272,8464
  unsigned int get_last_errno(Ed_connection::get_last_errno273,8542
  const char *get_last_sqlstate(Ed_connection::get_last_sqlstate274,8623
  Ed_result_set *use_result_set(Ed_connection::use_result_set284,9078
  bool has_next_result(Ed_connection::has_next_result300,9591
  bool move_to_next_result(Ed_connection::move_to_next_result305,9777
  ~Ed_connection(Ed_connection::~Ed_connection311,9897
  Diagnostics_area m_diagnostics_area;Ed_connection::m_diagnostics_area313,9948
  Warning_info m_warning_info;Ed_connection::m_warning_info314,9987
  THD *m_thd;Ed_connection::m_thd322,10349
  Ed_result_set *m_rsets;Ed_connection::m_rsets323,10363
  Ed_result_set *m_current_rset;Ed_connection::m_current_rset324,10389
struct Ed_column:Ed_column337,10724
class Ed_row:Ed_row345,10871
  const Ed_column *get_column(Ed_row::get_column352,11027
  size_t size(Ed_row::size357,11186
  Ed_row(Ed_row::Ed_row359,11236
  Ed_column *m_column_array;Ed_row::m_column_array364,11389
  size_t m_column_count;Ed_row::m_column_count365,11418

sql/sql_priv.h,3664
#define SQL_PRIV_INCLUDED27,1082
#define WARN_DEPRECATED(48,1611
#define SELECT_DISTINCT 84,3274
#define SELECT_STRAIGHT_JOIN 85,3338
#define SELECT_DESCRIBE 86,3402
#define SELECT_SMALL_RESULT 87,3466
#define SELECT_BIG_RESULT 88,3530
#define OPTION_FOUND_ROWS 89,3594
#define OPTION_TO_QUERY_CACHE 90,3658
#define SELECT_NO_JOIN_CACHE 91,3722
#define OPTION_AUTOCOMMIT 93,3864
#define OPTION_BIG_SELECTS 94,3924
#define OPTION_LOG_OFF 95,3985
#define OPTION_QUOTE_SHOW_CREATE 96,4046
#define TMP_TABLE_ALL_COLUMNS 97,4115
#define OPTION_WARNINGS 98,4181
#define OPTION_AUTO_IS_NULL 99,4242
#define OPTION_FOUND_COMMENT 100,4311
#define OPTION_SAFE_UPDATES 101,4385
#define OPTION_BUFFER_RESULT 102,4446
#define OPTION_BIN_LOG 103,4510
#define OPTION_NOT_AUTOCOMMIT 104,4571
#define OPTION_BEGIN 105,4632
#define OPTION_TABLE_LOCK 106,4695
#define OPTION_QUICK 107,4758
#define OPTION_KEEP_LOG 108,4829
#define SELECT_ALL 111,4954
#define OPTION_NO_FOREIGN_KEY_CHECKS 114,5133
#define OPTION_RELAXED_UNIQUE_CHECKS 117,5313
#define SELECT_NO_UNLOCK 118,5387
#define OPTION_SCHEMA_TABLE 119,5458
#define OPTION_SETUP_TABLES_DONE 121,5574
#define OPTION_SQL_NOTES 123,5714
#define TMP_TABLE_FORCE_MYISAM 128,5905
#define OPTION_PROFILING 129,5958
#define SELECT_HIGH_PRIORITY 135,6173
#define OPTION_MASTER_SQL_ERROR 145,6593
#define OPTION_ALLOW_BATCH 152,6782
template <class T> T available_buffer(163,7131
template <class T> bool valid_buffer_range(181,7714
#define OPTIMIZER_SWITCH_INDEX_MERGE 193,8192
#define OPTIMIZER_SWITCH_INDEX_MERGE_UNION 194,8255
#define OPTIMIZER_SWITCH_INDEX_MERGE_SORT_UNION 195,8318
#define OPTIMIZER_SWITCH_INDEX_MERGE_INTERSECT 196,8381
#define OPTIMIZER_SWITCH_ENGINE_CONDITION_PUSHDOWN 197,8444
#define OPTIMIZER_SWITCH_LAST 198,8507
#define OPTIMIZER_SWITCH_DEFAULT 201,8651
#define CONTEXT_ANALYSIS_ONLY_PREPARE 232,9838
#define CONTEXT_ANALYSIS_ONLY_VIEW 240,10200
#define CONTEXT_ANALYSIS_ONLY_DERIVED 245,10337
#define UNCACHEABLE_DEPENDENT 248,10398
#define UNCACHEABLE_RAND 249,10432
#define UNCACHEABLE_SIDEEFFECT	250,10466
#define UNCACHEABLE_EXPLAIN 252,10536
#define UNCACHEABLE_UNITED 254,10641
#define UNCACHEABLE_CHECKOPTION 255,10675
#define UNDEF_POS 258,10781
#define BINLOG_DUMP_NON_BLOCK 262,10832
#define IS_EQUAL_NO 267,10935
#define IS_EQUAL_YES 268,10957
#define IS_EQUAL_PACK_LENGTH 269,10980
enum enum_parsing_place271,11012
  NO_MATTER,enum_parsing_place::NO_MATTER273,11038
  IN_HAVING,enum_parsing_place::IN_HAVING274,11051
  SELECT_LIST,enum_parsing_place::SELECT_LIST275,11064
  IN_WHERE,enum_parsing_place::IN_WHERE276,11079
  IN_ONenum_parsing_place::IN_ON277,11091
enum enum_var_type281,11104
  OPT_DEFAULT=enum_var_type::OPT_DEFAULT283,11125
  OPT_DEFAULT= 0, OPT_SESSION,enum_var_type::OPT_SESSION283,11125
  OPT_DEFAULT= 0, OPT_SESSION, OPT_GLOBALenum_var_type::OPT_GLOBAL283,11125
enum enum_yes_no_unknown288,11187
  TVL_YES,enum_yes_no_unknown::TVL_YES290,11214
  TVL_YES, TVL_NO,enum_yes_no_unknown::TVL_NO290,11214
  TVL_YES, TVL_NO, TVL_UNKNOWNenum_yes_no_unknown::TVL_UNKNOWN290,11214
inline int hexchar_to_int(312,11468
#define ER_NOT_RW_DIR_PATHSIZE 323,11700
#define IS_TABLESPACES_TABLESPACE_NAME 325,11736
#define IS_TABLESPACES_ENGINE 326,11780
#define IS_TABLESPACES_TABLESPACE_TYPE 327,11824
#define IS_TABLESPACES_LOGFILE_GROUP_NAME 328,11868
#define IS_TABLESPACES_EXTENT_SIZE 329,11912
#define IS_TABLESPACES_AUTOEXTEND_SIZE 330,11956
#define IS_TABLESPACES_MAXIMUM_SIZE 331,12000
#define IS_TABLESPACES_NODEGROUP_ID 332,12044
#define IS_TABLESPACES_TABLESPACE_COMMENT 333,12088

sql/sql_profile.h,2862
#define _SQL_PROFILE_H17,768
typedef struct st_field_info ST_FIELD_INFO;22,834
typedef struct st_schema_table ST_SCHEMA_TABLE;23,878
#define PROFILE_NONE 30,1139
#define PROFILE_CPU 31,1176
#define PROFILE_MEMORY 32,1218
#define PROFILE_BLOCK_IO 33,1260
#define PROFILE_CONTEXT 34,1302
#define PROFILE_PAGE_FAULTS 35,1344
#define PROFILE_IPC 36,1386
#define PROFILE_SWAPS 37,1428
#define PROFILE_SOURCE 38,1470
#define PROFILE_ALL 39,1513
template <class T> class Queue60,1895
  struct queue_itemQueue::queue_item64,1938
    T *payload;Queue::queue_item::payload66,1962
    struct queue_item *next,Queue::queue_item::next67,1978
    struct queue_item *next, *previous;Queue::queue_item::previous67,1978
  struct queue_item *first,Queue::first70,2024
  struct queue_item *first, *last;Queue::last70,2024
  Queue(Queue::Queue73,2068
  void empty(Queue::empty79,2127
  ulong elements;Queue::elements90,2300
  void push_back(Queue::push_back92,2379
  T *pop(Queue::pop114,2807
  bool is_empty(Queue::is_empty138,3216
  void *new_iterator(Queue::new_iterator144,3365
  void *iterator_next(Queue::iterator_next149,3415
  T *iterator_value(Queue::iterator_value154,3511
class PROF_MEASUREMENT165,3658
  QUERY_PROFILE *profile;PROF_MEASUREMENT::profile171,3749
  char *status;PROF_MEASUREMENT::status172,3775
  struct rusage rusage;PROF_MEASUREMENT::rusage174,3813
  FILETIME ftKernel,PROF_MEASUREMENT::ftKernel176,3859
  FILETIME ftKernel, ftUser;PROF_MEASUREMENT::ftUser176,3859
  char *function;PROF_MEASUREMENT::function179,3896
  char *file;PROF_MEASUREMENT::file180,3914
  unsigned int line;PROF_MEASUREMENT::line181,3928
  ulong m_seq;PROF_MEASUREMENT::m_seq183,3950
  double time_usecs;PROF_MEASUREMENT::time_usecs184,3965
  char *allocated_status_memory;PROF_MEASUREMENT::allocated_status_memory185,3986
class QUERY_PROFILE205,4585
  PROFILING *profiling;QUERY_PROFILE::profiling210,4643
  query_id_t profiling_query_id;QUERY_PROFILE::profiling_query_id212,4668
  char *query_source;QUERY_PROFILE::query_source213,4735
  double m_start_time_usecs;QUERY_PROFILE::m_start_time_usecs215,4758
  double m_end_time_usecs;QUERY_PROFILE::m_end_time_usecs216,4787
  ulong m_seq_counter;QUERY_PROFILE::m_seq_counter217,4814
  Queue<PROF_MEASUREMENT> entries;QUERY_PROFILE::entries218,4837
class PROFILING242,5478
  query_id_t profile_id_counter;PROFILING::profile_id_counter251,5645
  THD *thd;PROFILING::thd252,5683
  bool keeping;PROFILING::keeping253,5695
  bool enabled;PROFILING::enabled254,5711
  QUERY_PROFILE *current;PROFILING::current256,5728
  QUERY_PROFILE *last;PROFILING::last257,5754
  Queue<QUERY_PROFILE> history;PROFILING::history258,5777
  query_id_t next_profile_id(PROFILING::next_profile_id260,5811
  inline void set_thd(PROFILING::set_thd277,6278

sql/sql_reload.h,33
#define SQL_RELOAD_INCLUDED2,28

sql/sql_rename.h,35
#define SQL_RENAME_INCLUDED17,774

sql/sql_repl.h,531
#define SQL_REPL_INCLUDED17,771
typedef struct st_slave_info24,867
  uint32 server_id;26,898
  uint32 rpl_recovery_rank,27,918
  uint32 rpl_recovery_rank, master_id;27,918
  char host[host28,957
  char user[user29,989
  char password[password30,1021
  uint16 port;31,1061
  THD* thd;32,1076
} SLAVE_INFO;33,1088
typedef struct st_load_file_info57,1984
  THD* thd;59,2019
  my_off_t last_pos_in_file;60,2031
  bool wrote_create_file,61,2060
  bool wrote_create_file, log_delayed;61,2060
} LOAD_FILE_INFO;62,2099

sql/sql_select.h,16526
#define SQL_SELECT_INCLUDED2,28
typedef struct keyuse_t 38,1198
  TABLE *table;table39,1224
  Item	*val;val40,1240
  table_map used_tables;41,1285
  uint	key,42,1310
  uint	key, keypart,42,1310
  uint	key, keypart, optimize;42,1310
  key_part_map keypart_map;43,1341
  ha_rows      ref_table_rows;44,1369
  bool null_rejecting;49,1518
  bool *cond_guard;cond_guard60,2020
} KEYUSE;61,2040
typedef struct st_table_ref65,2069
  bool		key_err;st_table_ref::key_err67,2099
  bool          has_record;st_table_ref::has_record69,2183
  uint          key_parts;st_table_ref::key_parts70,2211
  uint          key_length;st_table_ref::key_length71,2269
  int           key;st_table_ref::key72,2335
  uchar         *key_buff;st_table_ref::key_buff73,2389
  uchar         *key_buff2;st_table_ref::key_buff274,2463
  store_key     **key_copy;st_table_ref::key_copy75,2530
  Item          **items;st_table_ref::items76,2575
  bool          **cond_guards;st_table_ref::cond_guards88,3157
  key_part_map  null_rejecting;st_table_ref::null_rejecting93,3345
  table_map	depend_map;st_table_ref::depend_map94,3377
  uchar          *null_ref_key;st_table_ref::null_ref_key96,3517
  ha_rows       use_count;st_table_ref::use_count101,3645
} TABLE_REF;102,3672
#define CACHE_BLOB 106,3688
#define CACHE_STRIPPED 107,3739
typedef struct st_cache_field 114,3905
  uchar *str;st_cache_field::str115,3937
  uint length,st_cache_field::length116,3951
  uint length, blob_length;st_cache_field::blob_length116,3951
  Field *field;st_cache_field::field117,3979
  uint type;st_cache_field::type118,3995
} CACHE_FIELD;119,4075
typedef struct st_join_cache 122,4092
  uchar *buff,st_join_cache::buff123,4123
  uchar *buff,*pos,st_join_cache::pos123,4123
  uchar *buff,*pos,*end;st_join_cache::end123,4123
  uint records,st_join_cache::records124,4148
  uint records,record_nr,st_join_cache::record_nr124,4148
  uint records,record_nr,ptr_record,st_join_cache::ptr_record124,4148
  uint records,record_nr,ptr_record,fields,st_join_cache::fields124,4148
  uint records,record_nr,ptr_record,fields,length,st_join_cache::length124,4148
  uint records,record_nr,ptr_record,fields,length,blobs;st_join_cache::blobs124,4148
  CACHE_FIELD *field,st_join_cache::field125,4205
  CACHE_FIELD *field,**blob_ptr;st_join_cache::blob_ptr125,4205
  SQL_SELECT *select;st_join_cache::select126,4238
} JOIN_CACHE;127,4260
enum join_type 133,4345
enum join_type { JT_UNKNOWN,join_type::JT_UNKNOWN133,4345
enum join_type { JT_UNKNOWN,JT_SYSTEM,join_type::JT_SYSTEM133,4345
enum join_type { JT_UNKNOWN,JT_SYSTEM,JT_CONST,join_type::JT_CONST133,4345
enum join_type { JT_UNKNOWN,JT_SYSTEM,JT_CONST,JT_EQ_REF,join_type::JT_EQ_REF133,4345
enum join_type { JT_UNKNOWN,JT_SYSTEM,JT_CONST,JT_EQ_REF,JT_REF,join_type::JT_REF133,4345
enum join_type { JT_UNKNOWN,JT_SYSTEM,JT_CONST,JT_EQ_REF,JT_REF,JT_MAYBE_REF,join_type::JT_MAYBE_REF133,4345
		 JT_ALL,join_type::JT_ALL134,4423
		 JT_ALL, JT_RANGE,join_type::JT_RANGE134,4423
		 JT_ALL, JT_RANGE, JT_NEXT,join_type::JT_NEXT134,4423
		 JT_ALL, JT_RANGE, JT_NEXT, JT_FT,join_type::JT_FT134,4423
		 JT_ALL, JT_RANGE, JT_NEXT, JT_FT, JT_REF_OR_NULL,join_type::JT_REF_OR_NULL134,4423
		 JT_UNIQUE_SUBQUERY,join_type::JT_UNIQUE_SUBQUERY135,4476
		 JT_UNIQUE_SUBQUERY, JT_INDEX_SUBQUERY,join_type::JT_INDEX_SUBQUERY135,4476
		 JT_UNIQUE_SUBQUERY, JT_INDEX_SUBQUERY, JT_INDEX_MERGE}join_type::JT_INDEX_MERGE135,4476
enum enum_nested_loop_state139,4549
  NESTED_LOOP_KILLED=enum_nested_loop_state::NESTED_LOOP_KILLED141,4579
  NESTED_LOOP_KILLED= -2, NESTED_LOOP_ERROR=enum_nested_loop_state::NESTED_LOOP_ERROR141,4579
  NESTED_LOOP_OK=enum_nested_loop_state::NESTED_LOOP_OK142,4628
  NESTED_LOOP_OK= 0, NESTED_LOOP_NO_MORE_ROWS=enum_nested_loop_state::NESTED_LOOP_NO_MORE_ROWS142,4628
  NESTED_LOOP_QUERY_LIMIT=enum_nested_loop_state::NESTED_LOOP_QUERY_LIMIT143,4678
  NESTED_LOOP_QUERY_LIMIT= 3, NESTED_LOOP_CURSOR_LIMIT=enum_nested_loop_state::NESTED_LOOP_CURSOR_LIMIT143,4678
#define TAB_INFO_HAVE_VALUE 148,4780
#define TAB_INFO_USING_INDEX 149,4810
#define TAB_INFO_USING_WHERE 150,4841
#define TAB_INFO_FULL_SCAN_ON_NULL 151,4872
(*Next_select_func)Next_select_func154,4941
typedef struct st_join_table 158,5054
  st_join_table(st_join_table::st_join_table159,5085
  TABLE		*table;st_join_table::table160,5156
  KEYUSE	*keyuse;st_join_table::keyuse161,5173
  SQL_SELECT	*select;st_join_table::select162,5227
  SQL_SELECT    *saved_select;st_join_table::saved_select176,5999
  COND		*select_cond;st_join_table::select_cond177,6030
  QUICK_SELECT_I *quick;st_join_table::quick178,6052
  Item	       **on_expr_ref;st_join_table::on_expr_ref179,6077
  COND_EQUAL    *cond_equal;st_join_table::cond_equal180,6158
  st_join_table *first_inner;st_join_table::first_inner181,6240
  bool           found;st_join_table::found182,6322
  bool           not_null_compl;st_join_table::not_null_compl183,6404
  st_join_table *last_inner;st_join_table::last_inner184,6486
  st_join_table *first_upper;st_join_table::first_upper185,6568
  st_join_table *first_unmatched;st_join_table::first_unmatched186,6650
  const char	*info;st_join_table::info189,6802
  uint          packed_info;st_join_table::packed_info194,6947
  READ_RECORD::Setup_func read_first_record;st_join_table::read_first_record196,6977
  Next_select_func next_select;st_join_table::next_select197,7022
  READ_RECORD	read_record;st_join_table::read_record198,7054
  READ_RECORD::Setup_func save_read_first_record;st_join_table::save_read_first_record204,7301
  READ_RECORD::Read_func save_read_record;st_join_table::save_read_record205,7382
  double	worst_seeks;st_join_table::worst_seeks206,7462
  key_map	const_keys;st_join_table::const_keys207,7484
  key_map	checked_keys;st_join_table::checked_keys208,7540
  key_map	needed_reg;st_join_table::needed_reg209,7600
  key_map       keys;st_join_table::keys210,7622
  ha_rows	records;st_join_table::records213,7762
  ha_rows       found_records;st_join_table::found_records218,7942
  ha_rows       read_time;st_join_table::read_time224,8169
  table_map	dependent,st_join_table::dependent226,8199
  table_map	dependent,key_dependent;st_join_table::key_dependent226,8199
  uint		use_quick,st_join_table::use_quick227,8236
  uint		use_quick,index;st_join_table::index227,8236
  uint		status;st_join_table::status228,8261
  uint		used_fields,st_join_table::used_fields229,8307
  uint		used_fields,used_fieldlength,st_join_table::used_fieldlength229,8307
  uint		used_fields,used_fieldlength,used_blobs;st_join_table::used_blobs229,8307
  enum join_type type;st_join_table::type230,8356
  bool		cached_eq_ref_table,st_join_table::cached_eq_ref_table231,8379
  bool		cached_eq_ref_table,eq_ref_table,st_join_table::eq_ref_table231,8379
  bool		cached_eq_ref_table,eq_ref_table,not_used_in_distinct;st_join_table::not_used_in_distinct231,8379
  bool		sorted;st_join_table::sorted232,8442
  ha_rows       limit;st_join_table::limit238,8654
  TABLE_REF	ref;st_join_table::ref239,8678
  JOIN_CACHE	cache;st_join_table::cache240,8695
  JOIN		*join;st_join_table::join241,8715
  nested_join_map embedding_map;st_join_table::embedding_map243,8784
  inline bool is_using_loose_index_scan(st_join_table::is_using_loose_index_scan246,8836
  bool is_using_agg_loose_index_scan st_join_table::is_using_agg_loose_index_scan252,9021
} JOIN_TAB;257,9191
typedef struct st_position268,9557
  double records_read;st_position::records_read275,9762
  double read_time;st_position::read_time282,9997
  JOIN_TAB *table;st_position::table283,10017
  KEYUSE *key;st_position::key289,10199
  table_map ref_depend_map;st_position::ref_depend_map292,10292
} POSITION;293,10320
typedef struct st_rollup296,10334
  enum State st_rollup::State298,10361
  enum State { STATE_NONE,st_rollup::State::STATE_NONE298,10361
  enum State { STATE_NONE, STATE_INITED,st_rollup::State::STATE_INITED298,10361
  enum State { STATE_NONE, STATE_INITED, STATE_READY st_rollup::State::STATE_READY298,10361
  State state;st_rollup::state299,10417
  Item_null_result **null_items;st_rollup::null_items300,10432
  Item ***ref_pointer_arrays;st_rollup::ref_pointer_arrays301,10465
  List<Item> *fields;st_rollup::fields302,10495
} ROLLUP;303,10517
class JOIN 306,10529
  JOIN_TAB *join_tab,JOIN::join_tab311,10712
  JOIN_TAB *join_tab,**best_ref;JOIN::best_ref311,10712
  JOIN_TAB **map2table;JOIN::map2table312,10745
  JOIN_TAB *join_tab_save;JOIN::join_tab_save313,10821
  TABLE    **all_tables,JOIN::all_tables314,10893
  TABLE    **all_tables,*sort_by_table;JOIN::sort_by_table314,10893
  uint	   tables,JOIN::tables315,10933
  uint	   tables,const_tables;JOIN::const_tables315,10933
  uint	   send_group_parts;JOIN::send_group_parts316,10964
  bool     sort_and_group;JOIN::sort_and_group323,11194
  bool     first_record,JOIN::first_record324,11222
  bool     first_record,full_join,JOIN::full_join324,11222
  bool     first_record,full_join,group,JOIN::group324,11222
  bool     first_record,full_join,group, no_field_update;JOIN::no_field_update324,11222
  bool	   do_send_rows;JOIN::do_send_rows325,11280
  table_map const_table_map,JOIN::const_table_map326,11304
  table_map const_table_map,found_const_table_map;JOIN::found_const_table_map326,11304
  table_map outer_join;JOIN::outer_join330,11414
  ha_rows  send_records,JOIN::send_records331,11438
  ha_rows  send_records,found_records,JOIN::found_records331,11438
  ha_rows  send_records,found_records,examined_rows,JOIN::examined_rows331,11438
  ha_rows  send_records,found_records,examined_rows,row_limit,JOIN::row_limit331,11438
  ha_rows  send_records,found_records,examined_rows,row_limit, select_limit;JOIN::select_limit331,11438
  ha_rows  fetch_limit;JOIN::fetch_limit341,11915
  POSITION positions[JOIN::positions342,11939
  POSITION positions[MAX_TABLES+1],best_positions[JOIN::best_positions342,11939
  nested_join_map cur_embedding_map;JOIN::cur_embedding_map348,12153
  double   best_read;JOIN::best_read350,12191
  List<Item> *fields;JOIN::fields351,12213
  List<Cached_item> group_fields,JOIN::group_fields352,12235
  List<Cached_item> group_fields, group_fields_cache;JOIN::group_fields_cache352,12235
  TABLE    *tmp_table;JOIN::tmp_table353,12289
  TABLE    *exec_tmp_table1,JOIN::exec_tmp_table1355,12363
  TABLE    *exec_tmp_table1, *exec_tmp_table2;JOIN::exec_tmp_table2355,12363
  THD	   *thd;JOIN::thd356,12410
  Item_sum  **sum_funcs,JOIN::sum_funcs357,12425
  Item_sum  **sum_funcs, ***sum_funcs_end;JOIN::sum_funcs_end357,12425
  Item_sum  **sum_funcs2,JOIN::sum_funcs2359,12538
  Item_sum  **sum_funcs2, ***sum_funcs_end2;JOIN::sum_funcs_end2359,12538
  Procedure *procedure;JOIN::procedure360,12583
  Item	    *having;JOIN::having361,12607
  Item      *tmp_having;JOIN::tmp_having362,12627
  Item      *having_history;JOIN::having_history363,12704
  ulonglong  select_options;JOIN::select_options364,12763
  select_result *result;JOIN::result365,12792
  TMP_TABLE_PARAM tmp_table_param;JOIN::tmp_table_param366,12817
  MYSQL_LOCK *lock;JOIN::lock367,12852
  SELECT_LEX_UNIT *unit;JOIN::unit369,12934
  SELECT_LEX *select_lex;JOIN::select_lex371,12987
  bool no_const_tables;JOIN::no_const_tables379,13397
  JOIN *tmp_join;JOIN::tmp_join399,14406
  ROLLUP rollup;JOIN::rollup400,14424
  bool select_distinct;JOIN::select_distinct402,14467
  bool group_optimized_away;JOIN::group_optimized_away410,14728
  bool simple_order,JOIN::simple_order419,15047
  bool simple_order, simple_group;JOIN::simple_group419,15047
  bool no_order;JOIN::no_order424,15205
  bool          skip_sort_order;JOIN::skip_sort_order426,15296
  bool need_tmp,JOIN::need_tmp428,15330
  bool need_tmp, hidden_group_fields;JOIN::hidden_group_fields428,15330
  DYNAMIC_ARRAY keyuse;JOIN::keyuse429,15368
  Item::cond_result cond_value,JOIN::cond_value430,15392
  Item::cond_result cond_value, having_value;JOIN::having_value430,15392
  List<Item> all_fields;JOIN::all_fields431,15438
  List<Item> tmp_all_fields1,JOIN::tmp_all_fields1433,15554
  List<Item> tmp_all_fields1, tmp_all_fields2,JOIN::tmp_all_fields2433,15554
  List<Item> tmp_all_fields1, tmp_all_fields2, tmp_all_fields3;JOIN::tmp_all_fields3433,15554
  List<Item> tmp_fields_list1,JOIN::tmp_fields_list1435,15676
  List<Item> tmp_fields_list1, tmp_fields_list2,JOIN::tmp_fields_list2435,15676
  List<Item> tmp_fields_list1, tmp_fields_list2, tmp_fields_list3;JOIN::tmp_fields_list3435,15676
  List<Item> &fields_list;JOIN::fields_list436,15743
  List<Item> procedure_fields_list;JOIN::procedure_fields_list437,15814
  int error;JOIN::error438,15850
  ORDER *order,JOIN::order440,15864
  ORDER *order, *group_list,JOIN::group_list440,15864
  ORDER *order, *group_list, *proc_param;JOIN::proc_param440,15864
  COND *conds;JOIN::conds441,15940
  Item *conds_history;JOIN::conds_history442,15993
  TABLE_LIST *tables_list;JOIN::tables_list443,16062
  List<TABLE_LIST> *join_list;JOIN::join_list444,16143
  COND_EQUAL *cond_equal;JOIN::cond_equal445,16224
  SQL_SELECT *select;JOIN::select446,16250
  JOIN_TAB *return_tab;JOIN::return_tab447,16321
  Item **ref_pointer_array;JOIN::ref_pointer_array448,16388
  Item **items0,JOIN::items0450,16510
  Item **items0, **items1,JOIN::items1450,16510
  Item **items0, **items1, **items2,JOIN::items2450,16510
  Item **items0, **items1, **items2, **items3,JOIN::items3450,16510
  Item **items0, **items1, **items2, **items3, **current_ref_pointer_array;JOIN::current_ref_pointer_array450,16510
  uint ref_pointer_array_size;JOIN::ref_pointer_array_size451,16586
  const char *zero_result_cause;JOIN::zero_result_cause452,16645
  bool union_part;JOIN::union_part454,16724
  bool optimized;JOIN::optimized455,16781
  SORT_FIELD *sortorder;JOIN::sortorder467,17356
  TABLE *table_reexec[JOIN::table_reexec468,17431
  JOIN_TAB *join_tab_reexec;JOIN::join_tab_reexec469,17501
  JOIN(JOIN::JOIN472,17614
  void init(JOIN::init479,17824
  inline void set_items_ref_array(JOIN::set_items_ref_array550,19825
  inline void init_items_ref_array(JOIN::init_items_ref_array555,19991
  bool send_row_on_empty_set(JOIN::send_row_on_empty_set581,20893
  bool is_top_level_join(JOIN::is_top_level_join587,21099
  bool implicit_grouping;JOIN::implicit_grouping598,21423
typedef struct st_select_check 604,21561
  uint const_ref,st_select_check::const_ref605,21594
  uint const_ref,reg_ref;st_select_check::reg_ref605,21594
} SELECT_CHECK;606,21620
class store_key 645,23471
  bool null_key;store_key::null_key648,23515
  enum store_key_result store_key::store_key_result649,23584
  enum store_key_result { STORE_KEY_OK,store_key::store_key_result::STORE_KEY_OK649,23584
  enum store_key_result { STORE_KEY_OK, STORE_KEY_FATAL,store_key::store_key_result::STORE_KEY_FATAL649,23584
  enum store_key_result { STORE_KEY_OK, STORE_KEY_FATAL, STORE_KEY_CONV store_key::store_key_result::STORE_KEY_CONV649,23584
  store_key(store_key::store_key650,23659
  virtual ~store_key(store_key::~store_key669,24407
  enum store_key_result copy(store_key::copy678,24749
  Field *to_field;store_key::to_field697,25263
  uchar *null_ptr;store_key::null_ptr698,25304
  uchar err;store_key::err699,25323
class store_key_field:store_key_field705,25390
  Copy_field copy_field;store_key_field::copy_field707,25432
  const char *field_name;store_key_field::field_name708,25457
  store_key_field(store_key_field::store_key_field710,25492
  const char *name(store_key_field::name722,25893
  enum store_key_result copy_inner(store_key_field::copy_inner725,25957
class store_key_item 738,26371
  Item *item;store_key_item::item741,26424
  store_key_item(store_key_item::store_key_item743,26446
  const char *name(store_key_item::name749,26729
  enum store_key_result copy_inner(store_key_item::copy_inner752,26790
class store_key_const_item 772,27512
  bool inited;store_key_const_item::inited774,27564
  store_key_const_item(store_key_const_item::store_key_const_item776,27587
  const char *name(store_key_const_item::name784,27885
  enum store_key_result copy_inner(store_key_const_item::copy_inner787,27946
inline bool optimizer_flag(856,30886

sql/sql_servers.h,1041
#define SQL_SERVERS_INCLUDED2,29
typedef struct st_lex_server_options LEX_SERVER_OPTIONS;23,918
typedef struct st_mem_root MEM_ROOT;24,975
typedef struct st_federated_server27,1027
  char *server_name;st_federated_server::server_name29,1064
  long port;st_federated_server::port30,1085
  uint server_name_length;st_federated_server::server_name_length31,1098
  char *db,st_federated_server::db32,1125
  char *db, *scheme,st_federated_server::scheme32,1125
  char *db, *scheme, *username,st_federated_server::username32,1125
  char *db, *scheme, *username, *password,st_federated_server::password32,1125
  char *db, *scheme, *username, *password, *socket,st_federated_server::socket32,1125
  char *db, *scheme, *username, *password, *socket, *owner,st_federated_server::owner32,1125
  char *db, *scheme, *username, *password, *socket, *owner, *host,st_federated_server::host32,1125
  char *db, *scheme, *username, *password, *socket, *owner, *host, *sport;st_federated_server::sport32,1125
} FOREIGN_SERVER;33,1200

sql/sql_show.h,1972
#define SQL_SHOW_H17,765
typedef class st_select_lex SELECT_LEX;30,1127
typedef st_ha_create_information HA_CREATE_INFO;31,1167
typedef struct st_mysql_show_var SHOW_VAR;33,1228
typedef struct st_schema_table ST_SCHEMA_TABLE;34,1271
typedef struct system_status_var STATUS_VAR;36,1333
enum find_files_result 38,1379
  FIND_FILES_OK,find_files_result::FIND_FILES_OK39,1404
  FIND_FILES_OOM,find_files_result::FIND_FILES_OOM40,1421
  FIND_FILES_DIRfind_files_result::FIND_FILES_DIR41,1439
#define IS_FILES_FILE_ID 45,1516
#define IS_FILES_FILE_NAME 46,1556
#define IS_FILES_FILE_TYPE 47,1596
#define IS_FILES_TABLESPACE_NAME 48,1636
#define IS_FILES_TABLE_CATALOG 49,1676
#define IS_FILES_TABLE_SCHEMA 50,1716
#define IS_FILES_TABLE_NAME 51,1756
#define IS_FILES_LOGFILE_GROUP_NAME 52,1796
#define IS_FILES_LOGFILE_GROUP_NUMBER 53,1836
#define IS_FILES_ENGINE 54,1876
#define IS_FILES_FULLTEXT_KEYS 55,1916
#define IS_FILES_DELETED_ROWS 56,1956
#define IS_FILES_UPDATE_COUNT 57,1996
#define IS_FILES_FREE_EXTENTS 58,2036
#define IS_FILES_TOTAL_EXTENTS 59,2076
#define IS_FILES_EXTENT_SIZE 60,2116
#define IS_FILES_INITIAL_SIZE 61,2156
#define IS_FILES_MAXIMUM_SIZE 62,2196
#define IS_FILES_AUTOEXTEND_SIZE 63,2236
#define IS_FILES_CREATION_TIME 64,2276
#define IS_FILES_LAST_UPDATE_TIME 65,2316
#define IS_FILES_LAST_ACCESS_TIME 66,2356
#define IS_FILES_RECOVER_TIME 67,2396
#define IS_FILES_TRANSACTION_COUNTER 68,2436
#define IS_FILES_VERSION 69,2476
#define IS_FILES_ROW_FORMAT 70,2516
#define IS_FILES_TABLE_ROWS 71,2556
#define IS_FILES_AVG_ROW_LENGTH 72,2596
#define IS_FILES_DATA_LENGTH 73,2636
#define IS_FILES_MAX_DATA_LENGTH 74,2676
#define IS_FILES_INDEX_LENGTH 75,2716
#define IS_FILES_DATA_FREE 76,2756
#define IS_FILES_CREATE_TIME 77,2796
#define IS_FILES_UPDATE_TIME 78,2836
#define IS_FILES_CHECK_TIME 79,2876
#define IS_FILES_CHECKSUM 80,2916
#define IS_FILES_STATUS 81,2956
#define IS_FILES_EXTRA 82,2996

sql/sql_signal.h,690
#define SQL_SIGNAL_H18,782
class Signal_common 24,901
  Signal_common(Signal_common::Signal_common33,1158
  virtual ~Signal_common(Signal_common::~Signal_common41,1367
  const sp_cond_type_t *m_cond;Signal_common::m_cond85,2743
  Set_signal_information m_set_signal_information;Signal_common::m_set_signal_information91,2874
class Signal_statement 97,2986
  Signal_statement(Signal_statement::Signal_statement106,3281
  virtual ~Signal_statement(Signal_statement::~Signal_statement112,3447
class Resignal_statement 126,3701
  Resignal_statement(Resignal_statement::Resignal_statement135,4017
  virtual ~Resignal_statement(Resignal_statement::~Resignal_statement141,4195

sql/sql_sort.h,2102
#define SQL_SORT_INCLUDED2,26
typedef struct st_buffpek BUFFPEK;23,986
typedef struct st_queue QUEUE;24,1021
typedef struct st_sort_field SORT_FIELD;25,1052
#define MERGEBUFF	33,1167
#define MERGEBUFF2	34,1188
typedef struct st_sort_addon_field 52,1995
  Field *field;st_sort_addon_field::field53,2063
  uint   offset;st_sort_addon_field::offset54,2109
  uint   null_offset;st_sort_addon_field::null_offset55,2174
  uint   length;st_sort_addon_field::length56,2254
  uint8  null_bit;st_sort_addon_field::null_bit57,2311
} SORT_ADDON_FIELD;58,2370
typedef struct st_buffpek 60,2391
  my_off_t file_pos;st_buffpek::file_pos61,2458
  uchar *base,st_buffpek::base62,2517
  uchar *base,*key;st_buffpek::key62,2517
  ha_rows count;st_buffpek::count63,2558
  ulong mem_count;st_buffpek::mem_count64,2607
  ulong max_keys;st_buffpek::max_keys65,2660
} BUFFPEK;66,2706
struct BUFFPEK_COMPARE_CONTEXT68,2718
  qsort_cmp2 key_compare;BUFFPEK_COMPARE_CONTEXT::key_compare70,2751
  void *key_compare_arg;BUFFPEK_COMPARE_CONTEXT::key_compare_arg71,2777
typedef struct st_sort_param 74,2806
  uint rec_length;st_sort_param::rec_length75,2837
  uint sort_length;st_sort_param::sort_length76,2896
  uint ref_length;st_sort_param::ref_length77,2949
  uint addon_length;st_sort_param::addon_length78,2998
  uint res_length;st_sort_param::res_length79,3062
  uint keys;st_sort_param::keys80,3142
  ha_rows max_rows,st_sort_param::max_rows81,3182
  ha_rows max_rows,examined_rows;st_sort_param::examined_rows81,3182
  TABLE *sort_form;st_sort_param::sort_form82,3216
  SORT_FIELD *local_sortorder;st_sort_param::local_sortorder83,3269
  SORT_FIELD *end;st_sort_param::end84,3300
  SORT_ADDON_FIELD *addon_field;st_sort_param::addon_field85,3319
  uchar *unique_buff;st_sort_param::unique_buff86,3391
  bool not_killable;st_sort_param::not_killable87,3413
  char* tmp_buffer;st_sort_param::tmp_buffer88,3434
  qsort2_cmp compare;st_sort_param::compare90,3509
  BUFFPEK_COMPARE_CONTEXT cmp_context;st_sort_param::cmp_context91,3531
} SORTPARAM;92,3570

sql/sql_string.h,2804
#define SQL_STRING_INCLUDED2,28
typedef struct charset_info_st CHARSET_INFO;30,1179
typedef struct st_io_cache IO_CACHE;31,1224
typedef struct st_mem_root MEM_ROOT;32,1261
class String54,2413
  char *Ptr;String::Ptr56,2428
  uint32 str_length,String::str_length57,2441
  uint32 str_length,Alloced_length;String::Alloced_length57,2441
  bool alloced;String::alloced58,2477
  CHARSET_INFO *str_charset;String::str_charset59,2493
  String(String::String61,2530
  String(String::String66,2637
  String(String::String71,2773
  String(String::String76,2927
  String(String::String81,3077
  String(String::String86,3218
  static void *operator new(String::operator new92,3385
  static void operator delete(String::operator delete94,3511
  static void operator delete(String::operator delete100,3640
  ~String(String::~String102,3715
  inline void set_charset(String::set_charset104,3740
  inline CHARSET_INFO *charset(String::charset106,3825
  inline uint32 length(String::length107,3888
  inline uint32 alloced_length(String::alloced_length108,3941
  inline char& operator [] String::operator []109,4006
  inline void length(String::length110,4069
  inline bool is_empty(String::is_empty111,4123
  inline void mark_as_const(String::mark_as_const112,4184
  inline const char *ptr(String::ptr113,4236
  inline char *c_ptr(String::c_ptr114,4285
  inline char *c_ptr_quick(String::c_ptr_quick123,4533
  inline char *c_ptr_safe(String::c_ptr_safe129,4655
  LEX_STRING lex_string(String::lex_string137,4819
  void set(String::set143,4940
  inline void set(String::set164,5618
  inline void set(String::set170,5794
  inline void set_quick(String::set_quick177,6033
  bool set(String::set186,6291
  bool set(String::set188,6372
  inline void chop(String::chop214,7247
  inline void free(String::free219,7307
  inline bool alloc(String::alloc230,7475
  inline void shrink(String::shrink240,7773
  bool is_alloced(String::is_alloced259,8123
  inline String& operator = String::operator =260,8169
  bool append(String::append289,9213
  inline bool append(String::append303,9925
  int reserve(String::reserve325,10478
  void q_append(String::q_append336,10805
  void q_append(String::q_append340,10870
  void q_append(String::q_append345,10967
  void q_append(String::q_append350,11060
  void q_append(String::q_append355,11155
  void write_at_position(String::write_at_position361,11289
  inline void qs_append(String::qs_append369,11492
  inline char *prep_append(String::prep_append379,11701
  inline bool append(String::append392,12046
  inline bool uses_buffer_owned_by(String::uses_buffer_owned_by406,12493
  bool is_ascii(String::is_ascii410,12633
static inline bool check_if_only_end_space(425,12907

sql/sql_table.h,2760
#define SQL_TABLE_INCLUDED17,773
typedef struct st_ha_check_opt HA_CHECK_OPT;28,1032
typedef struct st_ha_create_information HA_CREATE_INFO;29,1077
typedef struct st_key KEY;30,1133
typedef struct st_key_cache KEY_CACHE;31,1160
typedef struct st_lock_param_type ALTER_PARTITION_PARAM_TYPE;32,1199
typedef struct st_mysql_lex_string LEX_STRING;33,1261
typedef struct st_order ORDER;34,1308
enum ddl_log_entry_code37,1372
  DDL_LOG_EXECUTE_CODE ddl_log_entry_code::DDL_LOG_EXECUTE_CODE50,1767
  DDL_LOG_ENTRY_CODE ddl_log_entry_code::DDL_LOG_ENTRY_CODE51,1797
  DDL_IGNORE_LOG_ENTRY_CODE ddl_log_entry_code::DDL_IGNORE_LOG_ENTRY_CODE52,1825
enum ddl_log_action_code55,1863
  DDL_LOG_DELETE_ACTION ddl_log_action_code::DDL_LOG_DELETE_ACTION68,2212
  DDL_LOG_RENAME_ACTION ddl_log_action_code::DDL_LOG_RENAME_ACTION69,2243
  DDL_LOG_REPLACE_ACTION ddl_log_action_code::DDL_LOG_REPLACE_ACTION70,2274
typedef struct st_ddl_log_entry74,2310
  const char *name;st_ddl_log_entry::name76,2344
  const char *from_name;st_ddl_log_entry::from_name77,2364
  const char *handler_name;st_ddl_log_entry::handler_name78,2389
  uint next_entry;st_ddl_log_entry::next_entry79,2417
  uint entry_pos;st_ddl_log_entry::entry_pos80,2436
  enum ddl_log_entry_code entry_type;st_ddl_log_entry::entry_type81,2454
  enum ddl_log_action_code action_type;st_ddl_log_entry::action_type82,2492
  char phase;st_ddl_log_entry::phase89,2770
} DDL_LOG_ENTRY;90,2784
typedef struct st_ddl_log_memory_entry92,2802
  uint entry_pos;st_ddl_log_memory_entry::entry_pos94,2843
  struct st_ddl_log_memory_entry *next_log_entry;st_ddl_log_memory_entry::next_log_entry95,2861
  struct st_ddl_log_memory_entry *prev_log_entry;st_ddl_log_memory_entry::prev_log_entry96,2911
  struct st_ddl_log_memory_entry *next_active_log_entry;st_ddl_log_memory_entry::next_active_log_entry97,2961
} DDL_LOG_MEMORY_ENTRY;98,3018
enum enum_explain_filename_mode101,3044
  EXPLAIN_ALL_VERBOSE=enum_explain_filename_mode::EXPLAIN_ALL_VERBOSE103,3078
  EXPLAIN_PARTITIONS_VERBOSE,enum_explain_filename_mode::EXPLAIN_PARTITIONS_VERBOSE104,3104
  EXPLAIN_PARTITIONS_AS_COMMENTenum_explain_filename_mode::EXPLAIN_PARTITIONS_AS_COMMENT105,3134
#define EXPLAIN_FILENAME_MAX_EXTRA_LENGTH 109,3227
#define MYSQL50_TABLE_NAME_PREFIX 111,3273
#define MYSQL50_TABLE_NAME_PREFIX_LENGTH 112,3327
#define WFRM_WRITE_SHADOW 114,3372
#define WFRM_INSTALL_SHADOW 115,3400
#define WFRM_PACK_FRM 116,3430
#define WFRM_KEEP_SHARE 117,3454
static const uint FN_FROM_IS_TMP=120,3519
static const uint FN_TO_IS_TMP=121,3562
static const uint FN_IS_TMP=122,3605
static const uint NO_FRM_RENAME=123,3671
static const uint FRM_ONLY=124,3714
static const uint NO_HA_TABLE=126,3833

sql/sql_tablespace.h,39
#define SQL_TABLESPACE_INCLUDED17,778

sql/sql_test.h,160
#define SQL_TEST_INCLUDED17,772
typedef class Item COND;23,851
typedef class st_select_lex SELECT_LEX;24,876
typedef struct st_sort_field SORT_FIELD;25,916

sql/sql_time.h,372
#define SQL_TIME_INCLUDED17,772
typedef enum enum_mysql_timestamp_type timestamp_type;25,1079
typedef struct st_date_time_format DATE_TIME_FORMAT;26,1134
typedef struct st_known_date_time_format KNOWN_DATE_TIME_FORMAT;27,1187
#define WEEK_MONDAY_FIRST 30,1292
#define WEEK_YEAR 31,1323
#define WEEK_FIRST_WEEKDAY 32,1354
inline bool parse_date_time_format(85,4136

sql/sql_trigger.h,2313
#define SQL_TRIGGER_INCLUDED2,29
enum trg_event_type30,1003
  TRG_EVENT_INSERT=trg_event_type::TRG_EVENT_INSERT32,1025
  TRG_EVENT_UPDATE=trg_event_type::TRG_EVENT_UPDATE33,1048
  TRG_EVENT_DELETE=trg_event_type::TRG_EVENT_DELETE34,1071
  TRG_EVENT_MAXtrg_event_type::TRG_EVENT_MAX35,1094
enum trg_action_time_type47,1405
  TRG_ACTION_BEFORE=trg_action_time_type::TRG_ACTION_BEFORE49,1433
  TRG_ACTION_BEFORE= 0, TRG_ACTION_AFTER=trg_action_time_type::TRG_ACTION_AFTER49,1433
  TRG_ACTION_BEFORE= 0, TRG_ACTION_AFTER= 1, TRG_ACTION_MAXtrg_action_time_type::TRG_ACTION_MAX49,1433
class Table_triggers_list:Table_triggers_list59,1618
  sp_head *bodies[Table_triggers_list::bodies62,1719
  Item_trigger_field *trigger_fields[Table_triggers_list::trigger_fields67,1887
  Field             **record1_field;Table_triggers_list::record1_field73,2178
  Field             **new_field;Table_triggers_list::new_field79,2455
  Field             **old_field;Table_triggers_list::old_field80,2488
  TABLE *trigger_table;Table_triggers_list::trigger_table83,2593
  List<LEX_STRING>  names_list;Table_triggers_list::names_list89,2779
  List<LEX_STRING>  on_table_names_list;Table_triggers_list::on_table_names_list94,2943
  GRANT_INFO        subject_table_grants[Table_triggers_list::subject_table_grants99,3075
  bool m_has_unparseable_trigger;Table_triggers_list::m_has_unparseable_trigger112,3689
  char m_parse_error_message[Table_triggers_list::m_parse_error_message120,3988
  List<LEX_STRING>  definitions_list;Table_triggers_list::definitions_list127,4192
  List<ulonglong> definition_modes_list;Table_triggers_list::definition_modes_list131,4276
  List<LEX_STRING>  definers_list;Table_triggers_list::definers_list133,4318
  List<LEX_STRING> client_cs_names;Table_triggers_list::client_cs_names137,4427
  List<LEX_STRING> connection_cl_names;Table_triggers_list::connection_cl_names138,4463
  List<LEX_STRING> db_cl_names;Table_triggers_list::db_cl_names139,4503
  Table_triggers_list(Table_triggers_list::Table_triggers_list143,4575
  bool has_triggers(Table_triggers_list::has_triggers187,6574
  bool has_delete_triggers(Table_triggers_list::has_delete_triggers192,6738
  bool check_for_broken_triggers(Table_triggers_list::check_for_broken_triggers222,7910

sql/sql_truncate.h,297
#define SQL_TRUNCATE_INCLUDED2,30
class Truncate_statement 24,893
  MDL_ticket *m_ticket_downgrade;Truncate_statement::m_ticket_downgrade28,1017
  Truncate_statement(Truncate_statement::Truncate_statement35,1184
  virtual ~Truncate_statement(Truncate_statement::~Truncate_statement39,1246

sql/sql_udf.h,1950
#define SQL_UDF_INCLUDED2,25
enum Item_udftype 27,938
enum Item_udftype {UDFTYPE_FUNCTION=UDFTYPE_FUNCTION27,938
enum Item_udftype {UDFTYPE_FUNCTION=1,UDFTYPE_AGGREGATE}UDFTYPE_AGGREGATE27,938
typedef void (*Udf_func_clear)Udf_func_clear29,997
typedef void (*Udf_func_add)Udf_func_add30,1059
typedef void (*Udf_func_deinit)Udf_func_deinit31,1131
typedef my_bool (*Udf_func_init)Udf_func_init32,1175
typedef void (*Udf_func_any)Udf_func_any33,1242
typedef double (*Udf_func_double)Udf_func_double34,1274
typedef longlong (*Udf_func_longlong)Udf_func_longlong35,1351
typedef struct st_udf_func38,1471
  LEX_STRING name;40,1500
  Item_result returns;41,1519
  Item_udftype type;42,1542
  char *dl;dl43,1563
  void *dlhandle;dlhandle44,1575
  Udf_func_any func;45,1593
  Udf_func_init func_init;46,1614
  Udf_func_deinit func_deinit;47,1641
  Udf_func_clear func_clear;48,1672
  Udf_func_add func_add;49,1701
  ulong usage_count;50,1726
} udf_func;51,1747
class udf_handler 55,1786
  udf_func *u_d;udf_handler::u_d58,1836
  String *buffers;udf_handler::buffers59,1853
  UDF_ARGS f_args;udf_handler::f_args60,1872
  UDF_INIT initid;udf_handler::initid61,1891
  char *num_buffer;udf_handler::num_buffer62,1910
  uchar error,udf_handler::error63,1930
  uchar error, is_null;udf_handler::is_null63,1930
  bool initialized;udf_handler::initialized64,1954
  Item **args;udf_handler::args65,1974
  table_map used_tables_cache;udf_handler::used_tables_cache68,1999
  bool const_item_cache;udf_handler::const_item_cache69,2030
  bool not_original;udf_handler::not_original70,2055
  udf_handler(udf_handler::udf_handler71,2076
  const char *name(udf_handler::name75,2217
  Item_result result_type udf_handler::result_type76,2282
  double val(udf_handler::val82,2494
  longlong val_int(udf_handler::val_int100,2852
  void clear(udf_handler::clear119,3295
  void add(udf_handler::add125,3413

sql/sql_union.h,91
#define SQL_UNION_INCLUDED17,773
typedef class st_select_lex_unit SELECT_LEX_UNIT;25,907

sql/sql_update.h,139
#define SQL_UPDATE_INCLUDED17,774
typedef class st_select_lex SELECT_LEX;25,917
typedef class st_select_lex_unit SELECT_LEX_UNIT;26,957

sql/sql_view.h,61
#define SQL_VIEW_INCLUDED2,26
#define VIEW_ANY_ACL 54,1861

sql/strfunc.h,180
#define STRFUNC_INCLUDED17,771
typedef struct charset_info_st CHARSET_INFO;21,868
typedef struct st_mysql_lex_string LEX_STRING;22,913
typedef struct st_typelib TYPELIB;23,960

sql/structs.h,8398
#define STRUCTS_INCLUDED2,25
typedef struct st_date_time_format 34,1205
  uchar positions[st_date_time_format::positions35,1242
  char  time_separator;st_date_time_format::time_separator36,1264
  uint flag;st_date_time_format::flag37,1330
  LEX_STRING format;st_date_time_format::format38,1363
} DATE_TIME_FORMAT;39,1384
typedef struct st_keyfile_info 42,1406
  uchar ref[st_keyfile_info::ref43,1465
  uchar dupp_ref[st_keyfile_info::dupp_ref44,1523
  uint ref_length;st_keyfile_info::ref_length45,1582
  uint block_size;st_keyfile_info::block_size46,1629
  File filenr;st_keyfile_info::filenr47,1673
  ha_rows records;st_keyfile_info::records48,1721
  ha_rows deleted;st_keyfile_info::deleted49,1768
  ulonglong data_file_length;st_keyfile_info::data_file_length50,1811
  ulonglong max_data_file_length;st_keyfile_info::max_data_file_length51,1869
  ulonglong index_file_length;st_keyfile_info::index_file_length52,1930
  ulonglong max_index_file_length;st_keyfile_info::max_index_file_length53,1961
  ulonglong delete_length;st_keyfile_info::delete_length54,1996
  ulonglong auto_increment_value;st_keyfile_info::auto_increment_value55,2041
  int errkey,st_keyfile_info::errkey56,2075
  int errkey,sortkey;st_keyfile_info::sortkey56,2075
  time_t create_time;st_keyfile_info::create_time57,2133
  time_t check_time;st_keyfile_info::check_time58,2186
  time_t update_time;st_keyfile_info::update_time59,2207
  ulong mean_rec_length;st_keyfile_info::mean_rec_length60,2229
} KEYFILE_INFO;61,2280
typedef struct st_key_part_info 64,2298
  Field *field;st_key_part_info::field65,2360
  uint	offset;st_key_part_info::offset66,2376
  uint	null_offset;st_key_part_info::null_offset67,2426
  uint16 length;st_key_part_info::length68,2483
  uint16 store_length;st_key_part_info::store_length75,2832
  uint16 key_type;st_key_part_info::key_type76,2855
  uint16 fieldnr;st_key_part_info::fieldnr77,2874
  uint16 key_part_flag;st_key_part_info::key_part_flag78,2919
  uint8 type;st_key_part_info::type79,2972
  uint8 null_bit;st_key_part_info::null_bit80,2986
} KEY_PART_INFO 81,3033
typedef struct st_key 84,3053
  uint	key_length;st_key::key_length85,3077
  ulong flags;st_key::flags86,3122
  uint	key_parts;st_key::key_parts87,3192
  uint  extra_length;st_key::extra_length88,3237
  uint	usable_key_parts;st_key::usable_key_parts89,3259
  uint  block_size;st_key::block_size90,3322
  enum  ha_key_alg algorithm;st_key::algorithm91,3342
    plugin_ref parser;st_key::parser98,3518
    LEX_STRING *parser_name;st_key::parser_name99,3585
  KEY_PART_INFO *key_part;st_key::key_part101,3662
  char	*name;st_key::name102,3689
  ulong *rec_per_key;st_key::rec_per_key108,3889
    int  bdb_return_if_eq;st_key::bdb_return_if_eq110,3921
  } handler;st_key::handler111,3948
  TABLE *table;st_key::table112,3961
  LEX_STRING comment;st_key::comment113,3977
} KEY;114,3999
typedef struct st_reginfo 119,4031
  struct st_join_table *join_tab;st_reginfo::join_tab120,4087
  enum thr_lock_type lock_type;st_reginfo::lock_type121,4144
  bool not_exists_optimize;st_reginfo::not_exists_optimize122,4204
  bool impossible_range;st_reginfo::impossible_range127,4332
} REGINFO;128,4357
typedef enum enum_mysql_timestamp_type timestamp_type;137,4564
  ulong year,::year141,4638
  ulong year,month,::month141,4638
  ulong year,month,day,::day141,4638
  ulong year,month,day,hour;::hour141,4638
  ulonglong minute,::minute142,4667
  ulonglong minute,second,::second142,4667
  ulonglong minute,second,second_part;::second_part142,4667
  bool neg;::neg143,4706
} INTERVAL;144,4718
typedef struct st_known_date_time_format 147,4732
  const char *format_name;st_known_date_time_format::format_name148,4775
  const char *date_format;st_known_date_time_format::date_format149,4802
  const char *datetime_format;st_known_date_time_format::datetime_format150,4829
  const char *time_format;st_known_date_time_format::time_format151,4860
} KNOWN_DATE_TIME_FORMAT;152,4887
typedef int *(*update_var)update_var156,4959
typedef struct	st_lex_user 158,5023
  LEX_STRING user,st_lex_user::user159,5052
  LEX_STRING user, host,st_lex_user::host159,5052
  LEX_STRING user, host, password,st_lex_user::password159,5052
  LEX_STRING user, host, password, plugin,st_lex_user::plugin159,5052
  LEX_STRING user, host, password, plugin, auth;st_lex_user::auth159,5052
} LEX_USER;160,5101
typedef struct user_resources 167,5270
  uint questions;user_resources::questions169,5357
  uint updates;user_resources::updates174,5513
  uint conn_per_hour;user_resources::conn_per_hour176,5589
  uint user_conn;user_resources::user_conn178,5661
  enum {QUERIES_PER_HOUR=user_resources::QUERIES_PER_HOUR183,5832
  enum {QUERIES_PER_HOUR= 1, UPDATES_PER_HOUR=user_resources::UPDATES_PER_HOUR183,5832
  enum {QUERIES_PER_HOUR= 1, UPDATES_PER_HOUR= 2, CONNECTIONS_PER_HOUR=user_resources::CONNECTIONS_PER_HOUR183,5832
        USER_CONNECTIONS=user_resources::USER_CONNECTIONS184,5907
  uint specified_limits;user_resources::specified_limits185,5937
} USER_RESOURCES;186,5962
typedef struct  user_conn 193,6100
  char *user;user_conn::user200,6430
  char *host;user_conn::host202,6485
  ulonglong reset_utime;user_conn::reset_utime207,6654
  uint len;user_conn::len209,6712
  uint connections;user_conn::connections211,6791
  uint conn_per_hour,user_conn::conn_per_hour216,6968
  uint conn_per_hour, updates,user_conn::updates216,6968
  uint conn_per_hour, updates, questions;user_conn::questions216,6968
  USER_RESOURCES user_resources;user_conn::user_resources218,7083
} USER_CONN;219,7116
#define REG_MAKE_DUPP	222,7158
#define REG_NEW_RECORD	223,7221
#define REG_UPDATE	224,7285
#define REG_DELETE	225,7328
#define REG_PROG	226,7376
#define REG_CLEAR_AFTER_WRITE	227,7429
#define REG_MAY_BE_UPDATED	228,7462
#define REG_AUTO_UPDATE	229,7492
#define REG_OVERWRITE	230,7560
#define REG_SKIP_DUP	231,7587
#define STATUS_NO_RECORD	234,7642
#define STATUS_GARBAGE	235,7699
#define STATUS_NOT_FOUND	236,7725
#define STATUS_NO_PARENT	237,7792
#define STATUS_NOT_READ	238,7852
#define STATUS_UPDATED	239,7903
#define STATUS_NULL_ROW	240,7965
#define STATUS_DELETED	241,8022
class Discrete_interval 252,8472
  ulonglong interval_min;Discrete_interval::interval_min254,8507
  ulonglong interval_values;Discrete_interval::interval_values255,8533
  ulonglong  interval_max;Discrete_interval::interval_max256,8562
  Discrete_interval *next;Discrete_interval::next258,8630
  void replace(Discrete_interval::replace259,8709
  Discrete_interval(Discrete_interval::Discrete_interval265,8906
  Discrete_interval(Discrete_interval::Discrete_interval267,9023
  ulonglong minimum(Discrete_interval::minimum268,9081
  ulonglong values(Discrete_interval::values269,9138
  ulonglong maximum(Discrete_interval::maximum270,9195
  bool merge_if_contiguous(Discrete_interval::merge_if_contiguous276,9477
class Discrete_intervals_list 296,9878
  Discrete_interval        *head;Discrete_intervals_list::head298,9919
  Discrete_interval        *tail;Discrete_intervals_list::tail299,9953
  Discrete_interval        *current;Discrete_intervals_list::current306,10260
  uint                  elements;Discrete_intervals_list::elements307,10297
  void set_members(Discrete_intervals_list::set_members308,10353
  Discrete_intervals_list(Discrete_intervals_list::Discrete_intervals_list320,10678
  void empty_no_free(Discrete_intervals_list::empty_no_free321,10751
  void empty(Discrete_intervals_list::empty325,10820
  void copy_shallow(Discrete_intervals_list::copy_shallow335,10988
  void swap Discrete_intervals_list::swap342,11174
  const Discrete_interval* get_next(Discrete_intervals_list::get_next353,11435
  ~Discrete_intervals_list(Discrete_intervals_list::~Discrete_intervals_list360,11589
  ulonglong minimum(Discrete_intervals_list::minimum363,11739
  ulonglong maximum(Discrete_intervals_list::maximum364,11813
  uint      nb_elements(Discrete_intervals_list::nb_elements365,11887
  Discrete_interval* get_head(Discrete_intervals_list::get_head366,11940
  Discrete_interval* get_tail(Discrete_intervals_list::get_tail367,11996
  Discrete_interval* get_current(Discrete_intervals_list::get_current368,12052

sql/sys_vars.h,13333
#define VALID_RANGE(36,1258
#define DEFAULT(37,1287
#define BLOCK_SIZE(38,1308
#define GLOBAL_VAR(39,1332
#define SESSION_VAR(40,1430
#define SESSION_ONLY(41,1509
#define NO_CMD_LINE 42,1594
#define NO_MUTEX_GUARD 47,1770
#define IN_BINLOG 48,1808
#define NOT_IN_BINLOG 49,1862
#define ON_READ(50,1916
#define ON_CHECK(51,1937
#define ON_UPDATE(52,1959
#define READ_ONLY 53,1982
#define PREALLOCATED 55,2083
#define REVERSE(60,2229
#define DEPRECATED(61,2253
#define session_var(63,2278
#define global_var(64,2340
#define GET_HA_ROWS 67,2437
#define GET_HA_ROWS 69,2471
enum charset_enum 72,2509
enum charset_enum {IN_SYSTEM_CHARSET,IN_SYSTEM_CHARSET72,2509
enum charset_enum {IN_SYSTEM_CHARSET, IN_FS_CHARSET}IN_FS_CHARSET72,2509
static const char *bool_values[bool_values74,2564
struct CMD_LINE81,2792
  int id;83,2810
  enum get_opt_arg_type arg_type;84,2820
  CMD_LINE(85,2854
template <typename T,100,3476
template <typename T, ulong ARGT,100,3476
class Sys_var_unsigned:Sys_var_unsigned101,3543
  Sys_var_unsigned(Sys_var_unsigned::Sys_var_unsigned104,3592
  bool do_check(Sys_var_unsigned::do_check133,4771
  bool session_update(Sys_var_unsigned::session_update155,5424
  bool global_update(Sys_var_unsigned::global_update160,5555
  bool check_update_type(Sys_var_unsigned::check_update_type165,5679
  void session_save_default(Sys_var_unsigned::session_save_default167,5755
  void global_save_default(Sys_var_unsigned::global_save_default169,5889
  T *max_var_ptr(Sys_var_unsigned::max_var_ptr172,6009
typedef Sys_var_unsigned<uint,uint179,6154
typedef Sys_var_unsigned<uint, GET_UINT,179,6154
typedef Sys_var_unsigned<uint, GET_UINT, SHOW_INT> Sys_var_uint;179,6154
typedef Sys_var_unsigned<ulong,ulong180,6219
typedef Sys_var_unsigned<ulong, GET_ULONG,180,6219
typedef Sys_var_unsigned<ulong, GET_ULONG, SHOW_LONG> Sys_var_ulong;180,6219
typedef Sys_var_unsigned<ha_rows,ha_rows181,6288
typedef Sys_var_unsigned<ha_rows, GET_HA_ROWS,181,6288
typedef Sys_var_unsigned<ha_rows, GET_HA_ROWS, SHOW_HA_ROWS> Sys_var_harows;181,6288
typedef Sys_var_unsigned<ulonglong,ulonglong182,6365
typedef Sys_var_unsigned<ulonglong, GET_ULL,182,6365
typedef Sys_var_unsigned<ulonglong, GET_ULL, SHOW_LONGLONG> Sys_var_ulonglong;182,6365
class Sys_var_typelib:Sys_var_typelib187,6513
  TYPELIB typelib;Sys_var_typelib::typelib190,6564
  Sys_var_typelib(Sys_var_typelib::Sys_var_typelib192,6591
  bool do_check(Sys_var_typelib::do_check211,7506
  bool check_update_type(Sys_var_typelib::check_update_type238,8224
class Sys_var_enum:Sys_var_enum256,8763
  Sys_var_enum(Sys_var_enum::Sys_var_enum259,8816
  bool session_update(Sys_var_enum::session_update277,9602
  bool global_update(Sys_var_enum::global_update282,9737
  void session_save_default(Sys_var_enum::session_save_default287,9865
  void global_save_default(Sys_var_enum::global_save_default289,9976
  uchar *session_value_ptr(Sys_var_enum::session_value_ptr291,10085
  uchar *global_value_ptr(Sys_var_enum::global_value_ptr293,10206
class Sys_var_mybool:Sys_var_mybool303,10469
  Sys_var_mybool(Sys_var_mybool::Sys_var_mybool306,10524
  bool session_update(Sys_var_mybool::session_update326,11409
  bool global_update(Sys_var_mybool::global_update331,11546
  void session_save_default(Sys_var_mybool::session_save_default336,11676
  void global_save_default(Sys_var_mybool::global_save_default338,11817
class Sys_var_charptr:Sys_var_charptr358,12540
  Sys_var_charptr(Sys_var_charptr::Sys_var_charptr361,12588
  void cleanup(Sys_var_charptr::cleanup387,13780
  bool do_check(Sys_var_charptr::do_check393,13890
  bool session_update(Sys_var_charptr::session_update419,14695
  bool global_update(Sys_var_charptr::global_update424,14790
  void session_save_default(Sys_var_charptr::session_save_default442,15255
  void global_save_default(Sys_var_charptr::global_save_default444,15333
  bool check_update_type(Sys_var_charptr::check_update_type450,15549
class Sys_var_proxy_user:Sys_var_proxy_user455,15633
  Sys_var_proxy_user(Sys_var_proxy_user::Sys_var_proxy_user458,15684
  bool do_check(Sys_var_proxy_user::do_check468,16110
  bool session_update(Sys_var_proxy_user::session_update473,16199
  bool global_update(Sys_var_proxy_user::global_update478,16294
  void session_save_default(Sys_var_proxy_user::session_save_default483,16389
  void global_save_default(Sys_var_proxy_user::global_save_default485,16467
  bool check_update_type(Sys_var_proxy_user::check_update_type487,16544
  virtual uchar *session_value_ptr(Sys_var_proxy_user::session_value_ptr490,16617
class Sys_var_external_user 497,16798
  Sys_var_external_user(Sys_var_external_user::Sys_var_external_user500,16864
  virtual uchar *session_value_ptr(Sys_var_external_user::session_value_ptr506,17069
class Sys_var_lexstring:Sys_var_lexstring525,17584
  Sys_var_lexstring(Sys_var_lexstring::Sys_var_lexstring528,17642
  bool global_update(Sys_var_lexstring::global_update545,18456
class Sys_var_dbug:Sys_var_dbug566,19065
  Sys_var_dbug(Sys_var_dbug::Sys_var_dbug569,19110
  bool do_check(Sys_var_dbug::do_check583,19828
  bool session_update(Sys_var_dbug::session_update594,20196
  bool global_update(Sys_var_dbug::global_update603,20393
  void session_save_default(Sys_var_dbug::session_save_default609,20547
  void global_save_default(Sys_var_dbug::global_save_default611,20605
  uchar *session_value_ptr(Sys_var_dbug::session_value_ptr616,20756
  uchar *global_value_ptr(Sys_var_dbug::global_value_ptr622,20912
  bool check_update_type(Sys_var_dbug::check_update_type628,21075
#define KEYCACHE_VAR(633,21165
#define keycache_var_ptr(634,21257
#define keycache_var(635,21314
typedef bool (*keycache_update_function)keycache_update_function636,21385
class Sys_var_keycache:Sys_var_keycache649,21732
  keycache_update_function keycache_update;Sys_var_keycache::keycache_update651,21783
  Sys_var_keycache(Sys_var_keycache::Sys_var_keycache653,21835
  bool global_update(Sys_var_keycache::global_update673,22699
  uchar *global_value_ptr(Sys_var_keycache::global_value_ptr703,23714
class Sys_var_double:Sys_var_double719,24052
  Sys_var_double(Sys_var_double::Sys_var_double722,24099
  bool do_check(Sys_var_double::do_check745,25186
  bool session_update(Sys_var_double::session_update753,25432
  bool global_update(Sys_var_double::global_update758,25565
  bool check_update_type(Sys_var_double::check_update_type763,25691
  void session_save_default(Sys_var_double::session_save_default767,25822
  void global_save_default(Sys_var_double::global_save_default769,25931
class Sys_var_max_user_conn:Sys_var_max_user_conn783,26293
  Sys_var_max_user_conn(Sys_var_max_user_conn::Sys_var_max_user_conn786,26352
  uchar *session_value_ptr(Sys_var_max_user_conn::session_value_ptr800,27021
#define MAX_SET(810,27305
class Sys_var_flagset:Sys_var_flagset826,27804
  Sys_var_flagset(Sys_var_flagset::Sys_var_flagset829,27860
  bool do_check(Sys_var_flagset::do_check850,28814
  bool session_update(Sys_var_flagset::session_update902,30269
  bool global_update(Sys_var_flagset::global_update907,30408
  void session_save_default(Sys_var_flagset::session_save_default912,30540
  void global_save_default(Sys_var_flagset::global_save_default914,30655
  uchar *session_value_ptr(Sys_var_flagset::session_value_ptr916,30764
  uchar *global_value_ptr(Sys_var_flagset::global_value_ptr921,30959
class Sys_var_set:Sys_var_set937,31408
  Sys_var_set(Sys_var_set::Sys_var_set940,31460
  bool do_check(Sys_var_set::do_check960,32340
  bool session_update(Sys_var_set::session_update1003,33560
  bool global_update(Sys_var_set::global_update1008,33699
  void session_save_default(Sys_var_set::session_save_default1013,33831
  void global_save_default(Sys_var_set::global_save_default1015,33946
  uchar *session_value_ptr(Sys_var_set::session_value_ptr1017,34055
  uchar *global_value_ptr(Sys_var_set::global_value_ptr1022,34242
class Sys_var_plugin:Sys_var_plugin1042,34812
  int plugin_type;Sys_var_plugin::plugin_type1044,34851
  Sys_var_plugin(Sys_var_plugin::Sys_var_plugin1046,34878
  bool do_check(Sys_var_plugin::do_check1065,35741
  void do_update(Sys_var_plugin::do_update1095,36690
  bool session_update(Sys_var_plugin::session_update1104,36905
  bool global_update(Sys_var_plugin::global_update1110,37066
  void session_save_default(Sys_var_plugin::session_save_default1116,37222
  void global_save_default(Sys_var_plugin::global_save_default1121,37388
  bool check_update_type(Sys_var_plugin::check_update_type1137,37888
  uchar *session_value_ptr(Sys_var_plugin::session_value_ptr1139,37967
  uchar *global_value_ptr(Sys_var_plugin::global_value_ptr1145,38228
class Sys_var_debug_sync 1157,38576
  Sys_var_debug_sync(Sys_var_debug_sync::Sys_var_debug_sync1160,38627
  bool do_check(Sys_var_debug_sync::do_check1177,39399
  bool session_update(Sys_var_debug_sync::session_update1188,39767
  bool global_update(Sys_var_debug_sync::global_update1193,39951
  void session_save_default(Sys_var_debug_sync::session_save_default1198,40045
  void global_save_default(Sys_var_debug_sync::global_save_default1203,40212
  uchar *session_value_ptr(Sys_var_debug_sync::session_value_ptr1207,40295
  uchar *global_value_ptr(Sys_var_debug_sync::global_value_ptr1212,40446
  bool check_update_type(Sys_var_debug_sync::check_update_type1217,40546
class Sys_var_bit:Sys_var_bit1241,41281
  ulonglong bitmask;Sys_var_bit::bitmask1243,41325
  bool reverse_semantics;Sys_var_bit::reverse_semantics1244,41346
  void set(Sys_var_bit::set1245,41372
  Sys_var_bit(Sys_var_bit::Sys_var_bit1253,41554
  bool session_update(Sys_var_bit::session_update1274,42518
  bool global_update(Sys_var_bit::global_update1279,42655
  void session_save_default(Sys_var_bit::session_save_default1284,42787
  void global_save_default(Sys_var_bit::global_save_default1286,42912
  uchar *session_value_ptr(Sys_var_bit::session_value_ptr1288,43021
  uchar *global_value_ptr(Sys_var_bit::global_value_ptr1294,43247
class Sys_var_session_special:Sys_var_session_special1317,43983
  typedef bool (*session_special_update_function)Sys_var_session_special::session_special_update_function1319,44041
  typedef ulonglong (*session_special_read_function)Sys_var_session_special::session_special_read_function1320,44116
  session_special_read_function read_func;Sys_var_session_special::read_func1322,44181
  session_special_update_function update_func;Sys_var_session_special::update_func1323,44224
  Sys_var_session_special(Sys_var_session_special::Sys_var_session_special1325,44279
  bool session_update(Sys_var_session_special::session_update1343,45175
  bool global_update(Sys_var_session_special::global_update1345,45257
  void session_save_default(Sys_var_session_special::session_save_default1350,45351
  void global_save_default(Sys_var_session_special::global_save_default1352,45424
  uchar *session_value_ptr(Sys_var_session_special::session_value_ptr1354,45501
  uchar *global_value_ptr(Sys_var_session_special::global_value_ptr1359,45673
class Sys_var_have:Sys_var_have1376,46061
  Sys_var_have(Sys_var_have::Sys_var_have1379,46106
  bool do_check(Sys_var_have::do_check1401,47073
  bool session_update(Sys_var_have::session_update1405,47160
  bool global_update(Sys_var_have::global_update1410,47255
  void session_save_default(Sys_var_have::session_save_default1415,47349
  void global_save_default(Sys_var_have::global_save_default1416,47405
  uchar *session_value_ptr(Sys_var_have::session_value_ptr1417,47460
  uchar *global_value_ptr(Sys_var_have::global_value_ptr1422,47561
  bool check_update_type(Sys_var_have::check_update_type1426,47700
class Sys_var_struct:Sys_var_struct1444,48343
  ptrdiff_t name_offset;Sys_var_struct::name_offset1446,48382
  Sys_var_struct(Sys_var_struct::Sys_var_struct1448,48465
  bool do_check(Sys_var_struct::do_check1475,49617
  bool session_update(Sys_var_struct::session_update1477,49677
  bool global_update(Sys_var_struct::global_update1482,49800
  void session_save_default(Sys_var_struct::session_save_default1487,49916
  void global_save_default(Sys_var_struct::global_save_default1489,50015
  bool check_update_type(Sys_var_struct::check_update_type1494,50186
  uchar *session_value_ptr(Sys_var_struct::session_value_ptr1496,50287
  uchar *global_value_ptr(Sys_var_struct::global_value_ptr1501,50442
class Sys_var_tz:Sys_var_tz1518,50895
  Sys_var_tz(Sys_var_tz::Sys_var_tz1521,50938
  bool do_check(Sys_var_tz::do_check1538,51721
  bool session_update(Sys_var_tz::session_update1555,52143
  bool global_update(Sys_var_tz::global_update1560,52277
  void session_save_default(Sys_var_tz::session_save_default1565,52404
  void global_save_default(Sys_var_tz::global_save_default1569,52520
  uchar *session_value_ptr(Sys_var_tz::session_value_ptr1574,52657
  uchar *global_value_ptr(Sys_var_tz::global_value_ptr1587,53235
  bool check_update_type(Sys_var_tz::check_update_type1591,53362
class Sys_var_tx_isolation:Sys_var_tx_isolation1596,53446
  Sys_var_tx_isolation(Sys_var_tx_isolation::Sys_var_tx_isolation1599,53504

sql/sys_vars_shared.h,1014
#define SYS_VARS_SHARED_INCLUDED2,33
class PolyLock40,1550
  virtual ~PolyLock(PolyLock::~PolyLock46,1659
class PolyLock_mutex:PolyLock_mutex49,1688
  mysql_mutex_t *mutex;PolyLock_mutex::mutex51,1728
  PolyLock_mutex(PolyLock_mutex::PolyLock_mutex53,1760
  void rdlock(PolyLock_mutex::rdlock54,1812
  void wrlock(PolyLock_mutex::wrlock55,1857
  void unlock(PolyLock_mutex::unlock56,1902
class PolyLock_rwlock:PolyLock_rwlock59,1953
  mysql_rwlock_t *rwlock;PolyLock_rwlock::rwlock61,1994
  PolyLock_rwlock(PolyLock_rwlock::PolyLock_rwlock63,2028
  void rdlock(PolyLock_rwlock::rdlock64,2083
  void wrlock(PolyLock_rwlock::wrlock65,2132
  void unlock(PolyLock_rwlock::unlock66,2181
class AutoWLock69,2234
  PolyLock *lock;AutoWLock::lock71,2252
  AutoWLock(AutoWLock::AutoWLock73,2278
  ~AutoWLock(AutoWLock::~AutoWLock74,2343
class AutoRLock77,2392
  PolyLock *lock;AutoRLock::lock79,2410
  AutoRLock(AutoRLock::AutoRLock81,2436
  ~AutoRLock(AutoRLock::~AutoRLock82,2501

sql/table.h,35246
#define TABLE_INCLUDED2,23
typedef ulonglong nested_join_map;53,1779
#define tmp_file_prefix 56,1816
#define tmp_file_prefix_length 57,1879
#define TMP_TABLE_KEY_EXTRA 58,1912
enum enum_table_ref_type75,2449
  TABLE_REF_NULL=enum_table_ref_type::TABLE_REF_NULL78,2517
  TABLE_REF_VIEW,enum_table_ref_type::TABLE_REF_VIEW79,2538
  TABLE_REF_BASE_TABLE,enum_table_ref_type::TABLE_REF_BASE_TABLE80,2556
  TABLE_REF_I_S_TABLE,enum_table_ref_type::TABLE_REF_I_S_TABLE81,2580
  TABLE_REF_TMP_TABLEenum_table_ref_type::TABLE_REF_TMP_TABLE82,2603
class Object_creation_ctx95,2984
  Object_creation_ctx(Object_creation_ctx::Object_creation_ctx103,3143
  virtual ~Object_creation_ctx(Object_creation_ctx::~Object_creation_ctx109,3297
class Default_object_creation_ctx 120,3505
  CHARSET_INFO *get_client_cs(Default_object_creation_ctx::get_client_cs123,3578
  CHARSET_INFO *get_connection_cl(Default_object_creation_ctx::get_connection_cl128,3643
  CHARSET_INFO *m_client_cs;Default_object_creation_ctx::m_client_cs154,4394
  CHARSET_INFO *m_connection_cl;Default_object_creation_ctx::m_connection_cl164,4755
class View_creation_ctx 172,4857
  View_creation_ctx(View_creation_ctx::View_creation_ctx182,5128
typedef struct st_order 191,5317
  struct st_order *next;st_order::next192,5343
  Item	 **item;st_order::item193,5368
  Item	 *item_ptr;st_order::item_ptr194,5423
  int    counter;st_order::counter195,5475
  bool	 asc;st_order::asc197,5625
  bool	 free_me;st_order::free_me198,5665
  bool	 in_field_list;st_order::in_field_list199,5717
  bool   counter_used;st_order::counter_used200,5777
  Field  *field;st_order::field201,5856
  char	 *buff;st_order::buff202,5900
  table_map used,st_order::used203,5943
  table_map used, depend_map;st_order::depend_map203,5943
} ORDER;204,5973
struct st_grant_internal_info212,6146
  bool m_schema_lookup_done;st_grant_internal_info::m_schema_lookup_done215,6240
  const ACL_internal_schema_access *m_schema_access;st_grant_internal_info::m_schema_access217,6309
  bool m_table_lookup_done;st_grant_internal_info::m_table_lookup_done219,6423
  const ACL_internal_table_access *m_table_access;st_grant_internal_info::m_table_access221,6490
typedef struct st_grant_internal_info GRANT_INTERNAL_INFO;223,6544
typedef struct st_grant_info239,7233
  GRANT_TABLE *grant_table;st_grant_info::grant_table247,7457
  uint version;st_grant_info::version263,8151
  ulong privilege;st_grant_info::privilege275,8632
  ulong want_privilege;st_grant_info::want_privilege280,8787
  ulong orig_want_privilege;st_grant_info::orig_want_privilege285,8955
  GRANT_INTERNAL_INFO m_internal;st_grant_info::m_internal287,9030
} GRANT_INFO;288,9064
enum tmp_table_type290,9079
  NO_TMP_TABLE,tmp_table_type::NO_TMP_TABLE292,9101
  NO_TMP_TABLE, NON_TRANSACTIONAL_TMP_TABLE,tmp_table_type::NON_TRANSACTIONAL_TMP_TABLE292,9101
  NO_TMP_TABLE, NON_TRANSACTIONAL_TMP_TABLE, TRANSACTIONAL_TMP_TABLE,tmp_table_type::TRANSACTIONAL_TMP_TABLE292,9101
  INTERNAL_TMP_TABLE,tmp_table_type::INTERNAL_TMP_TABLE293,9171
  INTERNAL_TMP_TABLE, SYSTEM_TMP_TABLEtmp_table_type::SYSTEM_TMP_TABLE293,9171
enum release_type 295,9213
enum release_type { RELEASE_NORMAL,release_type::RELEASE_NORMAL295,9213
enum release_type { RELEASE_NORMAL, RELEASE_WAIT_FOR_DROP release_type::RELEASE_WAIT_FOR_DROP295,9213
typedef struct st_filesort_info297,9275
  IO_CACHE *io_cache;st_filesort_info::io_cache299,9309
  uchar     **sort_keys;st_filesort_info::sort_keys300,9374
  size_t    sort_keys_size;st_filesort_info::sort_keys_size301,9436
  uchar     *buffpek;st_filesort_info::buffpek302,9500
  uint      buffpek_len;st_filesort_info::buffpek_len303,9568
  uchar     *addon_buf;st_filesort_info::addon_buf304,9643
  size_t    addon_length;st_filesort_info::addon_length305,9723
  struct st_sort_addon_field *addon_field;st_filesort_info::addon_field306,9782
  uchar     *record_pointers;st_filesort_info::record_pointers308,9943
  ha_rows   found_records;st_filesort_info::found_records309,10002
} FILESORT_INFO;310,10065
enum timestamp_auto_set_type323,10592
  TIMESTAMP_NO_AUTO_SET=timestamp_auto_set_type::TIMESTAMP_NO_AUTO_SET325,10623
  TIMESTAMP_NO_AUTO_SET= 0, TIMESTAMP_AUTO_SET_ON_INSERT=timestamp_auto_set_type::TIMESTAMP_AUTO_SET_ON_INSERT325,10623
  TIMESTAMP_AUTO_SET_ON_UPDATE=timestamp_auto_set_type::TIMESTAMP_AUTO_SET_ON_UPDATE326,10684
  TIMESTAMP_AUTO_SET_ON_UPDATE= 2, TIMESTAMP_AUTO_SET_ON_BOTH=timestamp_auto_set_type::TIMESTAMP_AUTO_SET_ON_BOTH326,10684
#define clear_timestamp_auto_bits(328,10752
enum enum_table_category338,11008
  TABLE_UNKNOWN_CATEGORY=enum_table_category::TABLE_UNKNOWN_CATEGORY343,11065
  TABLE_CATEGORY_TEMPORARY=enum_table_category::TABLE_CATEGORY_TEMPORARY356,11418
  TABLE_CATEGORY_USER=enum_table_category::TABLE_CATEGORY_USER366,11650
  TABLE_CATEGORY_SYSTEM=enum_table_category::TABLE_CATEGORY_SYSTEM378,12020
  TABLE_CATEGORY_INFORMATION=enum_table_category::TABLE_CATEGORY_INFORMATION400,12759
  TABLE_CATEGORY_LOG=enum_table_category::TABLE_CATEGORY_LOG422,13481
  TABLE_CATEGORY_PERFORMANCE=enum_table_category::TABLE_CATEGORY_PERFORMANCE444,14287
typedef enum enum_table_category TABLE_CATEGORY;446,14321
typedef struct st_table_field_type456,14540
  LEX_STRING name;st_table_field_type::name458,14577
  LEX_STRING type;st_table_field_type::type459,14596
  LEX_STRING cset;st_table_field_type::cset460,14615
} TABLE_FIELD_TYPE;461,14634
typedef struct st_table_field_def464,14656
  uint count;st_table_field_def::count466,14692
  const TABLE_FIELD_TYPE *field;st_table_field_def::field467,14706
} TABLE_FIELD_DEF;468,14739
typedef struct st_ha_data_partition475,14841
  bool auto_inc_initialized;st_ha_data_partition::auto_inc_initialized477,14879
  mysql_mutex_t LOCK_auto_inc;st_ha_data_partition::LOCK_auto_inc478,14908
  ulonglong next_auto_inc_val;st_ha_data_partition::next_auto_inc_val479,14987
} HA_DATA_PARTITION;480,15067
class Table_check_intact484,15097
  Table_check_intact(Table_check_intact::Table_check_intact490,15209
  virtual ~Table_check_intact(Table_check_intact::~Table_check_intact491,15235
class Wait_for_flush 504,15553
  MDL_context *m_ctx;Wait_for_flush::m_ctx506,15607
  TABLE_SHARE *m_share;Wait_for_flush::m_share507,15629
  uint m_deadlock_weight;Wait_for_flush::m_deadlock_weight508,15653
  Wait_for_flush(Wait_for_flush::Wait_for_flush510,15687
  MDL_context *get_ctx(Wait_for_flush::get_ctx516,15884
  Wait_for_flush *next_in_share;Wait_for_flush::next_in_share525,16131
  Wait_for_flush **prev_in_share;Wait_for_flush::prev_in_share526,16164
typedef I_P_List <Wait_for_flush,Wait_for_flush530,16203
                 Wait_for_flush_list;534,16424
struct TABLE_SHARE542,16602
  TABLE_SHARE(TABLE_SHARE::TABLE_SHARE544,16623
  TABLE_CATEGORY table_category;TABLE_SHARE::table_category547,16720
  HASH	name_hash;TABLE_SHARE::name_hash550,16829
  MEM_ROOT mem_root;TABLE_SHARE::mem_root551,16875
  TYPELIB keynames;TABLE_SHARE::keynames552,16896
  TYPELIB fieldnames;TABLE_SHARE::fieldnames553,16945
  TYPELIB *intervals;TABLE_SHARE::intervals554,16997
  mysql_mutex_t LOCK_ha_data;TABLE_SHARE::LOCK_ha_data555,17052
  TABLE_SHARE *next,TABLE_SHARE::next556,17127
  TABLE_SHARE *next, **prev;TABLE_SHARE::prev556,17127
  I_P_List TABLE_SHARE::I_P_List562,17297
  I_P_List <TABLE, TABLE_share> used_tables;TABLE_SHARE::used_tables562,17297
  I_P_List TABLE_SHARE::I_P_List563,17342
  I_P_List <TABLE, TABLE_share> free_tables;TABLE_SHARE::free_tables563,17342
  Field **field;TABLE_SHARE::field566,17442
  Field **found_next_number_field;TABLE_SHARE::found_next_number_field567,17459
  Field *timestamp_field;TABLE_SHARE::timestamp_field568,17494
  KEY  *key_info;TABLE_SHARE::key_info569,17562
  uint	*blob_field;TABLE_SHARE::blob_field570,17613
  uchar	*default_values;TABLE_SHARE::default_values572,17672
  LEX_STRING comment;TABLE_SHARE::comment573,17728
  CHARSET_INFO *table_charset;TABLE_SHARE::table_charset574,17778
  MY_BITMAP all_set;TABLE_SHARE::all_set576,17850
  LEX_STRING table_cache_key;TABLE_SHARE::table_cache_key587,18320
  LEX_STRING db;TABLE_SHARE::db588,18350
  LEX_STRING table_name;TABLE_SHARE::table_name589,18410
  LEX_STRING path;TABLE_SHARE::path590,18478
  LEX_STRING normalized_path;TABLE_SHARE::normalized_path591,18552
  LEX_STRING connect_string;TABLE_SHARE::connect_string592,18611
  key_map keys_in_use;TABLE_SHARE::keys_in_use598,18763
  key_map keys_for_keyread;TABLE_SHARE::keys_for_keyread599,18786
  ha_rows min_rows,TABLE_SHARE::min_rows600,18814
  ha_rows min_rows, max_rows;TABLE_SHARE::max_rows600,18814
  ulong   avg_row_length;TABLE_SHARE::avg_row_length601,18870
  ulong   version,TABLE_SHARE::version602,18922
  ulong   version, mysql_version;TABLE_SHARE::mysql_version602,18922
  ulong   reclength;TABLE_SHARE::reclength603,18956
  plugin_ref db_plugin;TABLE_SHARE::db_plugin605,18999
  inline handlerton *db_type(TABLE_SHARE::db_type606,19053
  enum row_type row_type;TABLE_SHARE::row_type611,19226
  enum tmp_table_type tmp_table;TABLE_SHARE::tmp_table612,19279
  uint ref_count;TABLE_SHARE::ref_count614,19313
  uint blob_ptr_size;TABLE_SHARE::blob_ptr_size615,19392
  uint key_block_size;TABLE_SHARE::key_block_size616,19429
  uint null_bytes,TABLE_SHARE::null_bytes617,19491
  uint null_bytes, last_null_bit_pos;TABLE_SHARE::last_null_bit_pos617,19491
  uint fields;TABLE_SHARE::fields618,19529
  uint rec_buff_length;TABLE_SHARE::rec_buff_length619,19570
  uint keys,TABLE_SHARE::keys620,19647
  uint keys, key_parts;TABLE_SHARE::key_parts620,19647
  uint max_key_length,TABLE_SHARE::max_key_length621,19671
  uint max_key_length, max_unique_length,TABLE_SHARE::max_unique_length621,19671
  uint max_key_length, max_unique_length, total_key_length;TABLE_SHARE::total_key_length621,19671
  uint uniques;TABLE_SHARE::uniques622,19731
  uint null_fields;TABLE_SHARE::null_fields623,19800
  uint blob_fields;TABLE_SHARE::blob_fields624,19850
  uint timestamp_field_offset;TABLE_SHARE::timestamp_field_offset625,19900
  uint varchar_fields;TABLE_SHARE::varchar_fields626,19971
  uint db_create_options;TABLE_SHARE::db_create_options627,20042
  uint db_options_in_use;TABLE_SHARE::db_options_in_use628,20104
  uint db_record_offset;TABLE_SHARE::db_record_offset629,20152
  uint rowid_field_offset;TABLE_SHARE::rowid_field_offset630,20201
  uint primary_key;TABLE_SHARE::primary_key632,20322
  uint next_number_index;TABLE_SHARE::next_number_index633,20363
  uint next_number_key_offset;TABLE_SHARE::next_number_key_offset634,20434
  uint next_number_keypart;TABLE_SHARE::next_number_keypart635,20512
  uint error,TABLE_SHARE::error636,20590
  uint error, open_errno,TABLE_SHARE::open_errno636,20590
  uint error, open_errno, errarg;TABLE_SHARE::errarg636,20590
  uint column_bitmap_size;TABLE_SHARE::column_bitmap_size637,20664
  uchar frm_version;TABLE_SHARE::frm_version638,20691
  bool null_field_first;TABLE_SHARE::null_field_first639,20712
  bool system;TABLE_SHARE::system640,20737
  bool crypted;TABLE_SHARE::crypted641,20816
  bool db_low_byte_first;TABLE_SHARE::db_low_byte_first642,20886
  bool crashed;TABLE_SHARE::crashed643,20939
  bool is_view;TABLE_SHARE::is_view644,20955
  ulong table_map_id;TABLE_SHARE::table_map_id645,20971
  int cached_row_logging_check;TABLE_SHARE::cached_row_logging_check653,21294
  enum ha_storage_media default_storage_media;TABLE_SHARE::default_storage_media660,21497
  char *tablespace;TABLE_SHARE::tablespace663,21596
  bool auto_partitioned;TABLE_SHARE::auto_partitioned667,21694
  char *partition_info_str;TABLE_SHARE::partition_info_str668,21719
  uint  partition_info_str_len;TABLE_SHARE::partition_info_str_len669,21747
  uint  partition_info_buffer_size;TABLE_SHARE::partition_info_buffer_size670,21779
  handlerton *default_part_db_type;TABLE_SHARE::default_part_db_type671,21815
  const TABLE_FIELD_DEF *table_field_def_cache;TABLE_SHARE::table_field_def_cache684,22209
  void *ha_data;TABLE_SHARE::ha_data687,22311
  HA_DATA_PARTITION *ha_part_data;TABLE_SHARE::ha_part_data692,22521
  PSI_table_share *m_psi;TABLE_SHARE::m_psi699,22701
  Wait_for_flush_list m_flush_tickets;TABLE_SHARE::m_flush_tickets704,22817
  void set_table_cache_key(TABLE_SHARE::set_table_cache_key722,23400
  void set_table_cache_key(TABLE_SHARE::set_table_cache_key752,24318
  inline bool honor_global_locks(TABLE_SHARE::honor_global_locks758,24490
  inline bool require_write_privileges(TABLE_SHARE::require_write_privileges764,24645
  inline ulong get_table_def_version(TABLE_SHARE::get_table_def_version769,24746
  inline bool has_old_version(TABLE_SHARE::has_old_version776,24898
  enum enum_table_ref_type get_table_ref_type(TABLE_SHARE::get_table_ref_type786,25145
  ulong get_table_ref_version(TABLE_SHARE::get_table_ref_version874,29063
enum index_hint_type890,29547
  INDEX_HINT_IGNORE,index_hint_type::INDEX_HINT_IGNORE892,29570
  INDEX_HINT_USE,index_hint_type::INDEX_HINT_USE893,29591
  INDEX_HINT_FORCEindex_hint_type::INDEX_HINT_FORCE894,29609
struct TABLE897,29632
  TABLE(TABLE::TABLE899,29647
  TABLE_SHARE	*s;TABLE::s901,29716
  handler	*file;TABLE::file902,29734
  TABLE *next,TABLE::next903,29751
  TABLE *next, *prev;TABLE::prev903,29751
  TABLE *share_next,TABLE::share_next911,29996
  TABLE *share_next, **share_prev;TABLE::share_prev911,29996
  THD	*in_use;TABLE::in_use917,30071
  Field **field;TABLE::field918,30138
  uchar *record[TABLE::record920,30182
  uchar *write_row_record;TABLE::write_row_record921,30229
  uchar *insert_values;TABLE::insert_values923,30310
  key_map covering_keys;TABLE::covering_keys928,30514
  key_map quick_keys,TABLE::quick_keys929,30539
  key_map quick_keys, merge_keys;TABLE::merge_keys929,30539
  key_map keys_in_use_for_query;TABLE::keys_in_use_for_query941,31000
  key_map keys_in_use_for_group_by;TABLE::keys_in_use_for_group_by943,31108
  key_map keys_in_use_for_order_by;TABLE::keys_in_use_for_order_by945,31219
  KEY  *key_info;TABLE::key_info946,31255
  Field *next_number_field;TABLE::next_number_field948,31307
  Field *found_next_number_field;TABLE::found_next_number_field949,31374
  Field_timestamp *timestamp_field;TABLE::timestamp_field950,31426
  Table_triggers_list *triggers;TABLE::triggers953,31515
  TABLE_LIST *pos_in_table_list;TABLE::pos_in_table_list954,31548
  TABLE_LIST *pos_in_locked_tables;TABLE::pos_in_locked_tables956,31679
  ORDER		*group;TABLE::group957,31715
  const char	*alias;TABLE::alias958,31732
  uchar		*null_flags;TABLE::null_flags959,31793
  my_bitmap_map	*bitmap_init_value;TABLE::bitmap_init_value960,31815
  MY_BITMAP     def_read_set,TABLE::def_read_set961,31851
  MY_BITMAP     def_read_set, def_write_set,TABLE::def_write_set961,31851
  MY_BITMAP     def_read_set, def_write_set, tmp_set;TABLE::tmp_set961,31851
  MY_BITMAP     *read_set,TABLE::read_set962,31922
  MY_BITMAP     *read_set, *write_set;TABLE::write_set962,31922
  query_id_t	query_id;TABLE::query_id981,32759
  ha_rows	quick_rows[TABLE::quick_rows987,32925
  key_part_map  const_key_parts[TABLE::const_key_parts990,33019
  uint		quick_key_parts[TABLE::quick_key_parts992,33062
  uint		quick_n_ranges[TABLE::quick_n_ranges993,33096
  ha_rows       quick_condition_rows;TABLE::quick_condition_rows1003,33489
  timestamp_auto_set_type timestamp_field_type;TABLE::timestamp_field_type1017,34144
  table_map	map;TABLE::map1018,34192
  uint          lock_position;TABLE::lock_position1020,34267
  uint          lock_data_start;TABLE::lock_data_start1021,34342
  uint          lock_count;TABLE::lock_count1022,34419
  uint		tablenr,TABLE::tablenr1023,34481
  uint		tablenr,used_fields;TABLE::used_fields1023,34481
  uint          temp_pool_slot;TABLE::temp_pool_slot1024,34510
  uint		status;TABLE::status1025,34576
  uint		db_stat;TABLE::db_stat1026,34634
  uint          derived_select_number;TABLE::derived_select_number1028,34735
  int		current_lock;TABLE::current_lock1029,34774
  my_bool copy_blobs;TABLE::copy_blobs1030,34833
  uint maybe_null;TABLE::maybe_null1037,35076
  my_bool null_row;TABLE::null_row1042,35251
  my_bool force_index;TABLE::force_index1049,35460
  my_bool force_index_order;TABLE::force_index_order1055,35604
  my_bool force_index_group;TABLE::force_index_group1061,35754
  my_bool distinct,TABLE::distinct1062,35783
  my_bool distinct,const_table,TABLE::const_table1062,35783
  my_bool distinct,const_table,no_rows;TABLE::no_rows1062,35783
  my_bool key_read;TABLE::key_read1068,35929
  my_bool no_keyread;TABLE::no_keyread1069,35949
  my_bool locked_by_logger;TABLE::locked_by_logger1070,35971
  my_bool no_replicate;TABLE::no_replicate1071,35999
  my_bool locked_by_name;TABLE::locked_by_name1072,36023
  my_bool fulltext_searched;TABLE::fulltext_searched1073,36049
  my_bool no_cache;TABLE::no_cache1074,36078
  my_bool open_by_handler;TABLE::open_by_handler1076,36170
  my_bool auto_increment_field_not_null;TABLE::auto_increment_field_not_null1082,36394
  my_bool insert_or_update;TABLE::insert_or_update1083,36435
  my_bool alias_name_used;TABLE::alias_name_used1084,36508
  my_bool get_fields_in_item_tree;TABLE::get_fields_in_item_tree1085,36570
  my_bool m_needs_reopen;TABLE::m_needs_reopen1086,36636
  REGINFO reginfo;TABLE::reginfo1088,36663
  MEM_ROOT mem_root;TABLE::mem_root1089,36708
  GRANT_INFO grant;TABLE::grant1090,36729
  FILESORT_INFO sort;TABLE::sort1091,36749
  partition_info *part_info;TABLE::part_info1093,36808
  bool no_partitions_used;TABLE::no_partitions_used1094,36884
  MDL_ticket *mdl_ticket;TABLE::mdl_ticket1096,36970
  inline void column_bitmaps_set(TABLE::column_bitmaps_set1111,37604
  inline void column_bitmaps_set_no_signal(TABLE::column_bitmaps_set_no_signal1119,37838
  inline void use_all_columns(TABLE::use_all_columns1125,38041
  inline void default_column_bitmaps(TABLE::default_column_bitmaps1129,38131
  inline bool needs_reopen(TABLE::needs_reopen1135,38294
  inline void set_keyread(TABLE::set_keyread1138,38365
struct TABLE_share1162,38830
  static inline TABLE **next_ptr(TABLE_share::next_ptr1164,38851
  static inline TABLE ***prev_ptr(TABLE_share::prev_ptr1168,38929
enum enum_schema_table_state1175,39013
  NOT_PROCESSED=enum_schema_table_state::NOT_PROCESSED1177,39045
  PROCESSED_BY_CREATE_SORT_INDEX,enum_schema_table_state::PROCESSED_BY_CREATE_SORT_INDEX1178,39065
  PROCESSED_BY_JOIN_EXECenum_schema_table_state::PROCESSED_BY_JOIN_EXEC1179,39099
typedef struct st_foreign_key_info1182,39128
  LEX_STRING *foreign_id;st_foreign_key_info::foreign_id1184,39165
  LEX_STRING *foreign_db;st_foreign_key_info::foreign_db1185,39191
  LEX_STRING *foreign_table;st_foreign_key_info::foreign_table1186,39217
  LEX_STRING *referenced_db;st_foreign_key_info::referenced_db1187,39246
  LEX_STRING *referenced_table;st_foreign_key_info::referenced_table1188,39275
  LEX_STRING *update_method;st_foreign_key_info::update_method1189,39307
  LEX_STRING *delete_method;st_foreign_key_info::delete_method1190,39336
  LEX_STRING *referenced_key_name;st_foreign_key_info::referenced_key_name1191,39365
  List<LEX_STRING> foreign_fields;st_foreign_key_info::foreign_fields1192,39400
  List<LEX_STRING> referenced_fields;st_foreign_key_info::referenced_fields1193,39435
} FOREIGN_KEY_INFO;1194,39473
#define MY_I_S_MAYBE_NULL 1196,39494
#define MY_I_S_UNSIGNED 1197,39522
#define SKIP_OPEN_TABLE 1200,39552
#define OPEN_FRM_ONLY 1201,39614
#define OPEN_FULL_TABLE 1202,39677
typedef struct st_field_info1204,39746
  const char* field_name;st_field_info::field_name1209,39825
  uint field_length;st_field_info::field_length1214,39993
  enum enum_field_types field_type;st_field_info::field_type1220,40232
  int value;st_field_info::value1221,40268
  uint field_flags;st_field_info::field_flags1230,40652
  const char* old_name;st_field_info::old_name1231,40733
  uint open_method;st_field_info::open_method1236,40860
} ST_FIELD_INFO;1237,40880
typedef class Item COND;1241,40918
typedef struct st_schema_table1243,40944
  const char* table_name;st_schema_table::table_name1245,40977
  ST_FIELD_INFO *fields_info;st_schema_table::fields_info1246,41003
  int idx_field1,st_schema_table::idx_field11255,41481
  int idx_field1, idx_field2;st_schema_table::idx_field21255,41481
  bool hidden;st_schema_table::hidden1256,41512
  uint i_s_requested_object;st_schema_table::i_s_requested_object1257,41527
} ST_SCHEMA_TABLE;1258,41604
#define JOIN_TYPE_LEFT	1261,41625
#define JOIN_TYPE_RIGHT	1262,41650
#define VIEW_ALGORITHM_UNDEFINED 1264,41677
#define VIEW_ALGORITHM_TMPTABLE 1265,41719
#define VIEW_ALGORITHM_MERGE 1266,41761
#define VIEW_SUID_INVOKER 1268,41804
#define VIEW_SUID_DEFINER 1269,41846
#define VIEW_SUID_DEFAULT 1270,41888
#define VIEW_CHECK_NONE 1273,41978
#define VIEW_CHECK_LOCAL 1274,42010
#define VIEW_CHECK_CASCADED 1275,42042
#define VIEW_CHECK_OK 1278,42130
#define VIEW_CHECK_ERROR 1279,42162
#define VIEW_CHECK_SKIP 1280,42194
#define MAX_TDC_BLOB_SIZE 1283,42292
struct Field_translator1291,42483
  Item *item;Field_translator::item1293,42509
  const char *name;Field_translator::name1294,42523
class Natural_join_column:Natural_join_column1304,42755
  Field_translator *view_field;Natural_join_column::view_field1307,42809
  Item_field       *table_field;Natural_join_column::table_field1308,42880
  TABLE_LIST *table_ref;Natural_join_column::table_ref1309,42959
  bool is_common;Natural_join_column::is_common1317,43376
enum enum_open_type1334,43763
  OT_TEMPORARY_OR_BASE=enum_open_type::OT_TEMPORARY_OR_BASE1336,43785
  OT_TEMPORARY_OR_BASE= 0, OT_TEMPORARY_ONLY,enum_open_type::OT_TEMPORARY_ONLY1336,43785
  OT_TEMPORARY_OR_BASE= 0, OT_TEMPORARY_ONLY, OT_BASE_ONLYenum_open_type::OT_BASE_ONLY1336,43785
struct TABLE_LIST1374,45153
  TABLE_LIST(TABLE_LIST::TABLE_LIST1376,45173
  inline void init_one_table(TABLE_LIST::init_one_table1382,45354
  TABLE_LIST *next_local;TABLE_LIST::next_local1407,46375
  TABLE_LIST *next_global,TABLE_LIST::next_global1409,46453
  TABLE_LIST *next_global, **prev_global;TABLE_LIST::prev_global1409,46453
  char		*db,TABLE_LIST::db1410,46495
  char		*db, *alias,TABLE_LIST::alias1410,46495
  char		*db, *alias, *table_name,TABLE_LIST::table_name1410,46495
  char		*db, *alias, *table_name, *schema_table_name;TABLE_LIST::schema_table_name1410,46495
  char          *option;TABLE_LIST::option1411,46549
  Item		*on_expr;TABLE_LIST::on_expr1412,46616
  Item          *prep_on_expr;TABLE_LIST::prep_on_expr1421,47034
  COND_EQUAL    *cond_equal;TABLE_LIST::cond_equal1422,47065
  TABLE_LIST *natural_join;TABLE_LIST::natural_join1429,47423
  bool is_natural_join;TABLE_LIST::is_natural_join1435,47637
  List<String> *join_using_fields;TABLE_LIST::join_using_fields1437,47719
  List<Natural_join_column> *join_columns;TABLE_LIST::join_columns1442,47869
  bool is_join_columns_complete;TABLE_LIST::is_join_columns_complete1444,47987
  TABLE_LIST *next_name_resolution_table;TABLE_LIST::next_name_resolution_table1453,48365
  List<Index_hint> *index_hints;TABLE_LIST::index_hints1455,48476
  TABLE        *table;TABLE_LIST::table1456,48509
  uint          table_id;TABLE_LIST::table_id1457,48576
  select_union  *derived_result;TABLE_LIST::derived_result1462,48756
  TABLE_LIST	*correspondent_table;TABLE_LIST::correspondent_table1470,49064
  st_select_lex_unit *derived;TABLE_LIST::derived1492,49964
  ST_SCHEMA_TABLE *schema_table;TABLE_LIST::schema_table1493,50035
  st_select_lex	*schema_select_lex;TABLE_LIST::schema_select_lex1494,50106
  bool schema_table_reformed;TABLE_LIST::schema_table_reformed1499,50289
  TMP_TABLE_PARAM *schema_table_param;TABLE_LIST::schema_table_param1500,50319
  st_select_lex	*select_lex;TABLE_LIST::select_lex1502,50411
  LEX *view;TABLE_LIST::view1503,50440
  Field_translator *field_translation;TABLE_LIST::field_translation1504,50507
  Field_translator *field_translation_end;TABLE_LIST::field_translation_end1506,50642
  TABLE_LIST	*merge_underlying_list;TABLE_LIST::merge_underlying_list1512,50867
  List<TABLE_LIST> *view_tables;TABLE_LIST::view_tables1518,51070
  TABLE_LIST	*belong_to_view;TABLE_LIST::belong_to_view1520,51149
  TABLE_LIST	*referencing_view;TABLE_LIST::referencing_view1525,51294
  TABLE_LIST    *parent_l;TABLE_LIST::parent_l1527,51406
  Security_context *security_ctx;TABLE_LIST::security_ctx1532,51543
  Security_context *view_sctx;TABLE_LIST::view_sctx1537,51674
  bool allowed_show;TABLE_LIST::allowed_show1543,51910
  TABLE_LIST	*next_leaf;TABLE_LIST::next_leaf1544,51931
  Item          *where;TABLE_LIST::where1545,51956
  Item          *check_option;TABLE_LIST::check_option1546,52030
  LEX_STRING	select_stmt;TABLE_LIST::select_stmt1547,52104
  LEX_STRING	md5;TABLE_LIST::md51548,52171
  LEX_STRING	source;TABLE_LIST::source1549,52215
  LEX_STRING	view_db;TABLE_LIST::view_db1550,52266
  LEX_STRING	view_name;TABLE_LIST::view_name1551,52315
  LEX_STRING	timestamp;TABLE_LIST::timestamp1552,52362
  st_lex_user   definer;TABLE_LIST::definer1553,52426
  ulonglong	file_version;TABLE_LIST::file_version1554,52488
  ulonglong     updatable_view;TABLE_LIST::updatable_view1555,52549
  ulonglong	algorithm;TABLE_LIST::algorithm1564,52834
  ulonglong     view_suid;TABLE_LIST::view_suid1565,52857
  ulonglong     with_check;TABLE_LIST::with_check1566,52934
  uint8         effective_with_check;TABLE_LIST::effective_with_check1571,53092
  uint8         effective_algorithm;TABLE_LIST::effective_algorithm1580,53367
  GRANT_INFO	grant;TABLE_LIST::grant1581,53404
  ulonglong     engine_data;TABLE_LIST::engine_data1583,53472
  qc_engine_callback callback_func;TABLE_LIST::callback_func1585,53576
  thr_lock_type lock_type;TABLE_LIST::lock_type1586,53612
  uint		outer_join;TABLE_LIST::outer_join1587,53639
  uint		shared;TABLE_LIST::shared1588,53682
  size_t        db_length;TABLE_LIST::db_length1589,53724
  size_t        table_name_length;TABLE_LIST::table_name_length1590,53751
  bool          updatable;TABLE_LIST::updatable1591,53786
  bool		straight;TABLE_LIST::straight1592,53850
  bool          updating;TABLE_LIST::updating1593,53900
  bool		force_index;TABLE_LIST::force_index1594,53976
  bool          ignore_leaves;TABLE_LIST::ignore_leaves1595,54033
  table_map     dep_tables;TABLE_LIST::dep_tables1596,54107
  table_map     on_expr_dep_tables;TABLE_LIST::on_expr_dep_tables1597,54186
  struct st_nested_join *nested_join;TABLE_LIST::nested_join1598,54265
  TABLE_LIST *embedding;TABLE_LIST::embedding1599,54344
  List<TABLE_LIST> *join_list;TABLE_LIST::join_list1600,54420
  bool		cacheable_table;TABLE_LIST::cacheable_table1601,54489
  bool		table_in_first_from_clause;TABLE_LIST::table_in_first_from_clause1603,54584
  enum enum_open_type open_type;TABLE_LIST::open_type1608,54718
  bool          contain_auto_increment;TABLE_LIST::contain_auto_increment1610,54813
  bool          multitable_view;TABLE_LIST::multitable_view1611,54853
  bool          compact_view_format;TABLE_LIST::compact_view_format1612,54932
  bool          where_processed;TABLE_LIST::where_processed1614,55047
  bool          check_option_processed;TABLE_LIST::check_option_processed1616,55145
  enum frm_type_enum required_type;TABLE_LIST::required_type1618,55233
  handlerton	*db_type;TABLE_LIST::db_type1619,55269
  char		timestamp_buffer[TABLE_LIST::timestamp_buffer1620,55322
  bool          prelocking_placeholder;TABLE_LIST::prelocking_placeholder1625,55546
    OPEN_NORMAL=TABLE_LIST::OPEN_NORMAL1633,55740
    OPEN_IF_EXISTS,TABLE_LIST::OPEN_IF_EXISTS1635,55824
    OPEN_STUBTABLE_LIST::OPEN_STUB1637,55885
  int           lock_timeout;TABLE_LIST::lock_timeout1640,55953
  bool          lock_transactional;TABLE_LIST::lock_transactional1641,56032
  bool          internal_tmp_table;TABLE_LIST::internal_tmp_table1642,56111
  bool          is_alias;TABLE_LIST::is_alias1644,56214
  bool          is_fqtn;TABLE_LIST::is_fqtn1648,56362
  View_creation_ctx *view_creation_ctx;TABLE_LIST::view_creation_ctx1653,56421
  LEX_STRING view_client_cs_name;TABLE_LIST::view_client_cs_name1665,56827
  LEX_STRING view_connection_cl_name;TABLE_LIST::view_connection_cl_name1666,56861
  LEX_STRING view_body_utf8;TABLE_LIST::view_body_utf81672,56967
  uint8 trg_event_map;TABLE_LIST::trg_event_map1681,57209
  bool optimized_away;TABLE_LIST::optimized_away1683,57299
  uint i_s_requested_object;TABLE_LIST::i_s_requested_object1685,57323
  bool has_db_lookup_value;TABLE_LIST::has_db_lookup_value1686,57352
  bool has_table_lookup_value;TABLE_LIST::has_table_lookup_value1687,57380
  uint table_open_method;TABLE_LIST::table_open_method1688,57411
  enum enum_schema_table_state schema_table_state;TABLE_LIST::schema_table_state1689,57437
  MDL_request mdl_request;TABLE_LIST::mdl_request1691,57489
  bool placeholder(TABLE_LIST::placeholder1698,57694
  inline TABLE_LIST *top_table(TABLE_LIST::top_table1711,58212
  inline bool prepare_check_option(TABLE_LIST::prepare_check_option1713,58300
  inline bool prepare_where(TABLE_LIST::prepare_where1720,58477
  bool is_table_ref_id_equal(TABLE_LIST::is_table_ref_id_equal1756,59576
  void set_table_ref_id(TABLE_LIST::set_table_ref_id1769,59943
  void set_table_ref_id(TABLE_LIST::set_table_ref_id1773,60070
  bool is_anonymous_derived_table(TABLE_LIST::is_anonymous_derived_table1784,60409
  char *get_db_name(TABLE_LIST::get_db_name1790,60580
  char *get_table_name(TABLE_LIST::get_table_name1798,60829
  enum enum_table_ref_type m_table_ref_type;TABLE_LIST::m_table_ref_type1804,61085
  ulong m_table_ref_version;TABLE_LIST::m_table_ref_version1806,61174
class Field_iterator:Field_iterator1815,61284
  Field_iterator(Field_iterator::Field_iterator1818,61333
  virtual ~Field_iterator(Field_iterator::~Field_iterator1819,61404
class Field_iterator_table:Field_iterator_table1834,61776
  Field **ptr;Field_iterator_table::ptr1836,61828
  Field_iterator_table(Field_iterator_table::Field_iterator_table1838,61851
  void set(Field_iterator_table::set1839,61887
  void set_table(Field_iterator_table::set_table1840,61947
  void next(Field_iterator_table::next1841,62001
  bool end_of_fields(Field_iterator_table::end_of_fields1842,62026
  Field *field(Field_iterator_table::field1845,62124
class Field_iterator_view:Field_iterator_view1851,62212
  Field_translator *ptr,Field_iterator_view::ptr1853,62263
  Field_translator *ptr, *array_end;Field_iterator_view::array_end1853,62263
  TABLE_LIST *view;Field_iterator_view::view1854,62300
  Field_iterator_view(Field_iterator_view::Field_iterator_view1856,62328
  void next(Field_iterator_view::next1858,62408
  bool end_of_fields(Field_iterator_view::end_of_fields1859,62433
  Item **item_ptr(Field_iterator_view::item_ptr1862,62538
  Field *field(Field_iterator_view::field1863,62580
  inline Item *item(Field_iterator_view::item1864,62611
  Field_translator *field_translator(Field_iterator_view::field_translator1865,62655
class Field_iterator_natural_join:Field_iterator_natural_join1874,62811
  List_iterator_fast<Natural_join_column> column_ref_it;Field_iterator_natural_join::column_ref_it1876,62870
  Natural_join_column *cur_column_ref;Field_iterator_natural_join::cur_column_ref1877,62927
  Field_iterator_natural_join(Field_iterator_natural_join::Field_iterator_natural_join1879,62974
  ~Field_iterator_natural_join(Field_iterator_natural_join::~Field_iterator_natural_join1880,63031
  bool end_of_fields(Field_iterator_natural_join::end_of_fields1883,63113
  const char *name(Field_iterator_natural_join::name1884,63164
  Item *create_item(Field_iterator_natural_join::create_item1885,63220
  Field *field(Field_iterator_natural_join::field1886,63295
  Natural_join_column *column_ref(Field_iterator_natural_join::column_ref1887,63348
class Field_iterator_table_ref:Field_iterator_table_ref1907,64030
  TABLE_LIST *table_ref,Field_iterator_table_ref::table_ref1909,64086
  TABLE_LIST *table_ref, *first_leaf,Field_iterator_table_ref::first_leaf1909,64086
  TABLE_LIST *table_ref, *first_leaf, *last_leaf;Field_iterator_table_ref::last_leaf1909,64086
  Field_iterator_table        table_field_it;Field_iterator_table_ref::table_field_it1910,64136
  Field_iterator_view         view_field_it;Field_iterator_table_ref::view_field_it1911,64182
  Field_iterator_natural_join natural_join_it;Field_iterator_table_ref::natural_join_it1912,64227
  Field_iterator *field_it;Field_iterator_table_ref::field_it1913,64274
  Field_iterator_table_ref(Field_iterator_table_ref::Field_iterator_table_ref1916,64339
  bool end_of_fields(Field_iterator_table_ref::end_of_fields1919,64433
  const char *name(Field_iterator_table_ref::name1921,64524
  Item *create_item(Field_iterator_table_ref::create_item1925,64658
  Field *field(Field_iterator_table_ref::field1926,64727
typedef struct st_nested_join1932,64917
  List<TABLE_LIST>  join_list;st_nested_join::join_list1934,64949
  table_map         used_tables;st_nested_join::used_tables1935,65028
  table_map         not_null_tables;st_nested_join::not_null_tables1936,65107
  struct st_join_table *first_nested;st_nested_join::first_nested1941,65342
  uint              counter;st_nested_join::counter1949,65662
  nested_join_map   nj_map;st_nested_join::nj_map1950,65691
  bool is_fully_covered(st_nested_join::is_fully_covered1959,66014
} NESTED_JOIN;1960,66088
typedef struct st_changed_table_list1963,66105
  struct	st_changed_table_list *next;st_changed_table_list::next1965,66144
  char		*key;st_changed_table_list::key1966,66182
  uint32        key_length;st_changed_table_list::key_length1967,66196
} CHANGED_TABLE_LIST;1968,66224
typedef struct st_open_table_list{st_open_table_list1971,66248
  struct st_open_table_list *next;st_open_table_list::next1972,66283
  char	*db,st_open_table_list::db1973,66318
  char	*db,*table;st_open_table_list::table1973,66318
  uint32 in_use,st_open_table_list::in_use1974,66337
  uint32 in_use,locked;st_open_table_list::locked1974,66337
} OPEN_TABLE_LIST;1975,66361
static inline my_bitmap_map *tmp_use_all_columns(tmp_use_all_columns1978,66382
static inline void tmp_restore_column_map(1987,66615
static inline my_bitmap_map *dbug_tmp_use_all_columns(dbug_tmp_use_all_columns1995,66816
static inline void dbug_tmp_restore_column_map(2005,67049
static inline void dbug_tmp_use_all_columns(2018,67393
static inline void dbug_tmp_restore_column_maps(2032,67832
inline bool is_infoschema_db(2093,70424
inline bool is_infoschema_db(2100,70647
inline bool is_user_table(2111,70924
inline void mark_as_null_row(2117,71081

sql/thr_malloc.h,131
#define THR_MALLOC_INCLUDED17,774
typedef struct charset_info_st CHARSET_INFO;21,868
typedef struct st_mem_root MEM_ROOT;22,913

sql/transaction.h,29
#define TRANSACTION_H18,783

sql/tzfile.h,1029
#define TZFILE_INCLUDED2,24
#define TZDIR	31,1098
#define	TZ_MAGIC	38,1237
struct tzhead 40,1262
 	uchar	tzh_magic[tzh_magic41,1278
	uchar	tzh_reserved[tzh_reserved42,1316
	uchar	tzh_ttisgmtcnt[tzh_ttisgmtcnt43,1371
	uchar	tzh_ttisstdcnt[tzh_ttisstdcnt44,1437
	uchar	tzh_leapcnt[tzh_leapcnt45,1503
	uchar	tzh_timecnt[tzh_timecnt46,1562
	uchar	tzh_typecnt[tzh_typecnt47,1625
	uchar	tzh_charcnt[tzh_charcnt48,1688
#define TZ_MAX_TIMES	88,3525
#define TZ_MAX_TYPES	93,3620
#define TZ_MAX_TYPES	99,3812
#define TZ_MAX_CHARS	104,3961
#define TZ_MAX_LEAPS	109,4142
#define TZ_MAX_REV_RANGES 115,4367
#define TZ_MAX_REV_RANGES 117,4433
#define SECS_PER_MIN	121,4504
#define MINS_PER_HOUR	122,4528
#define HOURS_PER_DAY	123,4553
#define DAYS_PER_WEEK	124,4578
#define DAYS_PER_NYEAR	125,4602
#define DAYS_PER_LYEAR	126,4629
#define SECS_PER_HOUR	127,4656
#define SECS_PER_DAY	128,4709
#define MONS_PER_YEAR	129,4769
#define TM_YEAR_BASE	131,4795
#define EPOCH_YEAR	133,4822
#define isleap(140,4929

sql/tztime.h,203
#define TZTIME_INCLUDED2,24
class Time_zone:Time_zone41,1436
  Time_zone(Time_zone::Time_zone44,1481
  virtual ~Time_zone(Time_zone::~Time_zone69,2522
static const int MY_TZ_TABLES_COUNT=90,3249

sql/unireg.h,2144
#define UNIREG_INCLUDED2,24
typedef struct st_ha_create_information HA_CREATE_INFO;25,969
#define NO_ALARM_LOOP	28,1048
#define LANGUAGE	33,1185
#define ERRMSG_FILE	34,1213
#define TEMP_PREFIX	35,1246
#define LOG_PREFIX	36,1271
#define PROGDIR	37,1295
#define MYSQL_DATADIR	39,1341
#define SHAREDIR	42,1396
#define PLUGINDIR	45,1447
#define CURRENT_THD_ERRMSGS 48,1486
#define DEFAULT_ERRMSGS 49,1567
#define ER(51,1637
#define ER_DEFAULT(52,1701
#define ER_SAFE(53,1761
#define ER_THD(54,1861
#define ER_THD_OR_DEFAULT(56,1979
#define ME_INFO 59,2055
#define ME_ERROR 60,2108
#define MYF_RW 61,2158
#define SPECIAL_USE_LOCKS	63,2224
#define SPECIAL_NO_NEW_FUNC	64,2279
#define SPECIAL_SKIP_SHOW_DB 65,2335
#define SPECIAL_WAIT_IF_LOCKED	66,2411
#define SPECIAL_SAME_DB_NAME 67,2475
#define SPECIAL_ENGLISH 68,2538
#define SPECIAL_NO_RESOLVE 69,2602
#define SPECIAL_NO_PRIOR	70,2665
#define SPECIAL_BIG_SELECTS	71,2710
#define SPECIAL_NO_HOST_CACHE	72,2771
#define SPECIAL_SHORT_LOG_FORMAT 73,2830
#define SPECIAL_SAFE_MODE	74,2868
#define SPECIAL_LOG_QUERIES_NOT_USING_INDEXES 75,2899
#define store_record(78,2988
#define restore_record(79,3071
#define cmp_record(80,3156
#define empty_record(81,3237
#define READ_ALL	88,3491
#define CHANGE_FRM	89,3546
#define READ_KEYINFO	90,3603
#define EXTRA_RECORD	91,3659
#define DONT_OPEN_TABLES	92,3722
#define DONT_OPEN_MASTER_REG	93,3787
#define EXTRA_LONG_RECORD	94,3857
#define COMPUTE_TYPES	95,3920
#define SEARCH_PRG	96,3981
#define READ_USED_NAMES	97,4042
#define DONT_GIVE_ERROR	98,4102
#define READ_SCREENS	99,4168
#define DELAYED_OPEN	100,4233
#define OPEN_VIEW	101,4283
#define OPEN_VIEW_NO_PARSE 102,4332
#define OPEN_FRM_FILE_ONLY 109,4700
#define OPEN_TABLE_ONLY 116,4985
#define OPEN_VIEW_ONLY 123,5285
#define OPEN_VIEW_FULL 130,5576
#define OPTIMIZE_I_S_TABLE 136,5831
#define OPEN_TRIGGER_ONLY 141,5947
#define SC_INFO_LENGTH 143,6000
#define TE_INFO_LENGTH 144,6053
#define MTYP_NOEMPTY_BIT 145,6078
#define MIN_TURBOBM_PATTERN_LEN 152,6265
#define BIN_LOG_HEADER_SIZE 160,6441
#define DEFAULT_KEY_CACHE_NAME 162,6476

strings/t_ctype.h,5100
#define _t_ctype_h32,1303
typedef unsigned char tchar;34,1323
#define TOT_LEVELS 36,1353
#define LAST_LEVEL 37,1374
#define IGNORE 39,1418
enum l1_symbols 43,1467
    L1_08 44,1485
    L1_08 = TOT_LEVELS,44,1485
    L1_18,45,1509
    L1_28,46,1520
    L1_38,47,1531
    L1_48,48,1542
    L1_58,49,1553
    L1_68,50,1564
    L1_78,51,1575
    L1_88,52,1586
    L1_98,53,1597
    L1_A8,54,1608
    L1_B8,55,1619
    L1_C8,56,1630
    L1_D8,57,1641
    L1_E8,58,1652
    L1_F8,59,1663
    L1_G8,60,1674
    L1_H8,61,1685
    L1_I8,62,1696
    L1_J8,63,1707
    L1_K8,64,1718
    L1_L8,65,1729
    L1_M8,66,1740
    L1_N8,67,1751
    L1_O8,68,1762
    L1_P8,69,1773
    L1_Q8,70,1784
    L1_R8,71,1795
    L1_S8,72,1806
    L1_T8,73,1817
    L1_U8,74,1828
    L1_V8,75,1839
    L1_W8,76,1850
    L1_X8,77,1861
    L1_Y8,78,1872
    L1_Z8,79,1883
    L1_KO_KAI,80,1894
    L1_KHO_KHAI,81,1909
    L1_KHO_KHUAT,82,1926
    L1_KHO_KHWAI,83,1944
    L1_KHO_KHON,84,1962
    L1_KHO_RAKHANG,85,1979
    L1_NGO_NGU,86,1999
    L1_CHO_CHAN,87,2015
    L1_CHO_CHING,88,2032
    L1_CHO_CHANG,89,2050
    L1_SO_SO,90,2068
    L1_CHO_CHOE,91,2082
    L1_YO_YING,92,2099
    L1_DO_CHADA,93,2115
    L1_TO_PATAK,94,2132
    L1_THO_THAN,95,2149
    L1_THO_NANGMONTHO,96,2166
    L1_THO_PHUTHAO,97,2189
    L1_NO_NEN,98,2209
    L1_DO_DEK,99,2224
    L1_TO_TAO,100,2239
    L1_THO_THUNG,101,2254
    L1_THO_THAHAN,102,2272
    L1_THO_THONG,103,2291
    L1_NO_NU,104,2309
    L1_BO_BAIMAI,105,2323
    L1_PO_PLA,106,2341
    L1_PHO_PHUNG,107,2356
    L1_FO_FA,108,2374
    L1_PHO_PHAN,109,2388
    L1_FO_FAN,110,2405
    L1_PHO_SAMPHAO,111,2420
    L1_MO_MA,112,2440
    L1_YO_YAK,113,2454
    L1_RO_RUA,114,2469
    L1_RU,115,2484
    L1_LO_LING,116,2495
    L1_LU,117,2511
    L1_WO_WAEN,118,2522
    L1_SO_SALA,119,2538
    L1_SO_RUSI,120,2554
    L1_SO_SUA,121,2570
    L1_HO_HIP,122,2585
    L1_LO_CHULA,123,2600
    L1_O_ANG,124,2617
    L1_HO_NOKHUK,125,2631
    L1_NKHIT,126,2649
    L1_SARA_A,127,2663
    L1_MAI_HAN_AKAT,128,2678
    L1_SARA_AA,129,2699
    L1_SARA_AM,130,2715
    L1_SARA_I,131,2731
    L1_SARA_II,132,2746
    L1_SARA_UE,133,2762
    L1_SARA_UEE,134,2778
    L1_SARA_U,135,2795
    L1_SARA_UU,136,2810
    L1_SARA_E,137,2826
    L1_SARA_AE,138,2841
    L1_SARA_O,139,2857
    L1_SARA_AI_MAIMUAN,140,2872
    L1_SARA_AI_MAIMALAI141,2896
enum l2_symbols 145,2954
    L2_BLANK 146,2972
    L2_BLANK = TOT_LEVELS,146,2972
    L2_THAII,147,2999
    L2_YAMAK,148,3013
    L2_PINTHU,149,3027
    L2_GARAN,150,3042
    L2_TYKHU,151,3056
    L2_TONE1,152,3070
    L2_TONE2,153,3084
    L2_TONE3,154,3098
    L2_TONE4155,3112
enum l3_symbols 159,3159
	L3_BLANK 160,3177
	L3_BLANK = TOT_LEVELS,160,3177
    L3_SPACE,161,3201
    L3_NB_SACE,162,3215
    L3_LOW_LINE,163,3231
    L3_HYPHEN,164,3248
    L3_COMMA,165,3263
    L3_SEMICOLON,166,3277
    L3_COLON,167,3295
    L3_EXCLAMATION,168,3309
    L3_QUESTION,169,3329
    L3_SOLIDUS,170,3346
    L3_FULL_STOP,171,3362
    L3_PAIYAN_NOI,172,3380
    L3_MAI_YAMOK,173,3399
    L3_GRAVE,174,3417
    L3_CIRCUMFLEX,175,3431
    L3_TILDE,176,3450
    L3_APOSTROPHE,177,3464
    L3_QUOTATION,178,3483
    L3_L_PARANTHESIS,179,3501
    L3_L_BRACKET,180,3523
    L3_L_BRACE,181,3541
    L3_R_BRACE,182,3557
    L3_R_BRACKET,183,3573
    L3_R_PARENTHESIS,184,3591
    L3_AT,185,3613
    L3_BAHT,186,3624
    L3_DOLLAR,187,3637
    L3_FONGMAN,188,3652
    L3_ANGKHANKHU,189,3668
    L3_KHOMUT,190,3687
    L3_ASTERISK,191,3702
    L3_BK_SOLIDUS,192,3719
    L3_AMPERSAND,193,3738
    L3_NUMBER,194,3756
    L3_PERCENT,195,3771
    L3_PLUS,196,3787
    L3_LESS_THAN,197,3800
    L3_EQUAL,198,3818
    L3_GREATER_THAN,199,3832
    L3_V_LINE200,3853
enum l4_symbols 204,3901
    L4_BLANK 205,3919
    L4_BLANK = TOT_LEVELS,205,3919
    L4_MIN,206,3946
    L4_CAP,207,3958
    L4_EXT208,3970
enum level_symbols 211,3985
    L_UPRUPR 212,4006
    L_UPRUPR = TOT_LEVELS,212,4006
    L_UPPER,213,4033
    L_MIDDLE,214,4046
    L_LOWER215,4060
#define	_is(218,4076
#define _level	219,4120
#define _consnt	220,4139
#define _ldvowel	221,4160
#define _fllwvowel	222,4181
#define _uprvowel	223,4204
#define _lwrvowel	224,4227
#define _tone	225,4250
#define _diacrt1	226,4270
#define _diacrt2	227,4293
#define _combine	228,4316
#define _stone	229,4339
#define _tdig	230,4361
#define _rearvowel	231,4383
#define _diacrt	232,4440
#define levelof(233,4480
#define isthai(234,4520
#define istalpha(235,4554
#define isconsnt(237,4669
#define isldvowel(238,4711
#define isfllwvowel(239,4754
#define ismidvowel(240,4801
#define isuprvowel(241,4858
#define islwrvowel(242,4903
#define isuprlwrvowel(243,4948
#define isrearvowel(244,5009
#define isvowel(245,5056
#define istone(246,5115
#define isunldable(247,5158
#define iscombinable(248,5232
#define istdigit(249,5278
#define isstone(250,5321
#define isdiacrt1(251,5365
#define isdiacrt2(252,5407
#define isdiacrt(253,5449

vio/vio_priv.h,59
#define VIO_PRIV_INCLUDED2,26
#define DONT_MAP_VIO21,857

zlib/crc32.h,56
local const unsigned long FAR crc_table[crc_table5,90

zlib/deflate.h,3305
#define DEFLATE_H14,395
#  define GZIP23,705
#define LENGTH_CODES 30,843
#define LITERALS 33,938
#define L_CODES 36,998
#define D_CODES 39,1111
#define BL_CODES 42,1164
#define HEAP_SIZE 45,1241
#define MAX_BITS 48,1298
#define INIT_STATE 51,1365
#define EXTRA_STATE 52,1390
#define NAME_STATE 53,1415
#define COMMENT_STATE 54,1440
#define HCRC_STATE 55,1465
#define BUSY_STATE 56,1490
#define FINISH_STATE 57,1515
typedef struct ct_data_s 62,1630
        ush  freq;64,1669
        ush  code;65,1716
    } fc;66,1758
        ush  dad;68,1780
        ush  len;69,1839
    } dl;70,1891
} FAR ct_data;71,1901
#define Freq 73,1917
#define Code 74,1938
#define Dad 75,1959
#define Len 76,1979
typedef struct static_tree_desc_s  static_tree_desc;78,2000
typedef struct tree_desc_s 80,2054
    ct_data *dyn_tree;dyn_tree81,2083
    int     max_code;82,2139
    static_tree_desc *stat_desc;stat_desc83,2215
} FAR tree_desc;84,2284
typedef ush Pos;86,2302
typedef Pos FAR Posf;87,2319
typedef unsigned IPos;88,2341
typedef struct internal_state 94,2525
    z_streamp strm;95,2557
    int   status;96,2621
    Bytef *pending_buf;pending_buf97,2672
    ulg   pending_buf_size;98,2724
    Bytef *pending_out;pending_out99,2778
    uInt   pending;100,2851
    int   wrap;101,2916
    gz_headerp  gzhead;102,2988
    uInt   gzindex;103,3052
    Byte  method;104,3116
    int   last_flush;105,3181
    uInt  w_size;109,3302
    uInt  w_bits;110,3367
    uInt  w_mask;111,3420
    Bytef *window;window113,3463
    ulg window_size;123,3987
    Posf *prev;prev128,4133
    Posf *head;head134,4375
    uInt  ins_h;136,4431
    uInt  hash_size;137,4499
    uInt  hash_bits;138,4564
    uInt  hash_mask;139,4612
    uInt  hash_shift;141,4657
    long block_start;148,4927
    uInt match_length;153,5084
    IPos prev_match;154,5144
    int match_available;155,5198
    uInt strstart;156,5266
    uInt match_start;157,5331
    uInt lookahead;158,5395
    uInt prev_length;160,5473
    uInt max_chain_length;165,5649
    uInt max_lazy_match;171,5847
#   define max_insert_length 176,6054
    int level;182,6326
    int strategy;183,6375
    uInt good_match;185,6429
    int nice_match;188,6525
    struct ct_data_s dyn_ltree[dyn_ltree192,6709
    struct ct_data_s dyn_dtree[dyn_dtree193,6784
    struct ct_data_s bl_tree[bl_tree194,6849
    struct tree_desc_s l_desc;196,6930
    struct tree_desc_s d_desc;197,7004
    struct tree_desc_s bl_desc;198,7079
    ush bl_count[bl_count200,7157
    int heap[heap203,7253
    int heap_len;204,7328
    int heap_max;205,7397
    uch depth[depth210,7607
    uchf *l_buf;l_buf214,7722
    uInt  lit_bufsize;216,7786
    uInt last_lit;236,8939
    ushf *d_buf;d_buf238,8993
    ulg opt_len;244,9200
    ulg static_len;245,9277
    uInt matches;246,9353
    int last_eob_len;247,9425
    ulg compressed_len;250,9507
    ulg bits_sent;251,9582
    ush bi_buf;254,9664
    int bi_valid;258,9784
} FAR deflate_state;263,9909
#define put_byte(268,10021
#define MIN_LOOKAHEAD 271,10084
#define MAX_DIST(276,10257
#define d_code(290,10849
# define _tr_tally_lit(308,11348
# define _tr_tally_dist(315,11560
# define _tr_tally_lit(326,11913
# define _tr_tally_dist(327,11976

zlib/inffixed.h,91
    static const code lenfix[lenfix10,318
    static const code distfix[distfix87,5905

zlib/inflate.h,1676
#  define GUNZIP16,632
    HEAD,21,725
    FLAGS,22,775
    TIME,23,836
    OS,24,898
    EXLEN,25,975
    EXTRA,26,1032
    NAME,27,1088
    COMMENT,28,1149
    HCRC,29,1208
    DICTID,30,1263
    DICT,31,1323
        TYPE,32,1385
        TYPEDO,33,1461
        STORED,34,1540
        COPY,35,1617
        TABLE,36,1697
        LENLENS,37,1766
        CODELENS,38,1832
            LEN,39,1910
            LENEXT,40,1971
            DIST,41,2034
            DISTEXT,42,2093
            MATCH,43,2158
            LIT,44,2231
    CHECK,45,2306
    LENGTH,46,2362
    DONE,47,2420
    BAD,48,2490
    MEM,49,2556
    SYNC 50,2635
} inflate_mode;51,2712
struct inflate_state 77,3516
    inflate_mode mode;78,3539
    int last;79,3598
    int wrap;80,3666
    int havedict;81,3745
    int flags;82,3811
    unsigned dmax;83,3890
    unsigned long check;84,3970
    unsigned long total;85,4038
    gz_headerp head;86,4107
    unsigned wbits;88,4212
    unsigned wsize;89,4286
    unsigned whave;90,4364
    unsigned write;91,4428
    unsigned char FAR *window;window92,4485
    unsigned long hold;94,4589
    unsigned bits;95,4649
    unsigned length;97,4760
    unsigned offset;98,4832
    unsigned extra;100,4946
    code const FAR *lencode;lencode102,5046
    code const FAR *distcode;distcode103,5124
    unsigned lenbits;104,5196
    unsigned distbits;105,5257
    unsigned ncode;107,5356
    unsigned nlen;108,5429
    unsigned ndist;109,5497
    unsigned have;110,5567
    code FAR *next;next111,5638
    unsigned short lens[lens112,5708
    unsigned short work[work113,5781
    code codes[codes114,5853

zlib/inftrees.h,231
    unsigned char op;25,1233
    unsigned char bits;26,1305
    unsigned short val;27,1373
} code;28,1441
#define ENOUGH 43,2018
#define MAXD 44,2038
    CODES,48,2114
    LENS,49,2125
    DISTS50,2135
} codetype;51,2145

zlib/trees.h,290
local const ct_data static_ltree[static_ltree3,55
local const ct_data static_dtree[static_dtree64,4426
const uch _dist_code[_dist_code73,4865
const uch _length_code[_length_code102,6956
local const int base_length[base_length118,8032
local const int base_dist[base_dist123,8192

zlib/zconf.h,3295
#define ZCONF_H9,217
#  define deflateInit_ 20,462
#  define deflate 21,509
#  define deflateEnd 22,551
#  define inflateInit_ 23,596
#  define inflate 24,643
#  define inflateEnd 25,685
#  define deflateInit2_ 26,730
#  define deflateSetDictionary 27,778
#  define deflateCopy 28,833
#  define deflateReset 29,879
#  define deflateParams 30,926
#  define deflateBound 31,974
#  define deflatePrime 32,1021
#  define inflateInit2_ 33,1068
#  define inflateSetDictionary 34,1116
#  define inflateSync 35,1171
#  define inflateSyncPoint 36,1217
#  define inflateCopy 37,1268
#  define inflateReset 38,1314
#  define inflateBack 39,1361
#  define inflateBackEnd 40,1407
#  define compress 41,1456
#  define compress2 42,1499
#  define compressBound 43,1543
#  define uncompress 44,1591
#  define adler32 45,1636
#  define crc32 46,1678
#  define get_crc_table 47,1718
#  define zError 48,1766
#  define alloc_func 50,1808
#  define free_func 51,1853
#  define in_func 52,1897
#  define out_func 53,1939
#  define Byte 54,1982
#  define uInt 55,2021
#  define uLong 56,2060
#  define Bytef 57,2100
#  define charf 58,2140
#  define intf 59,2180
#  define uIntf 60,2219
#  define uLongf 61,2259
#  define voidpf 62,2300
#  define voidp 63,2341
#  define MSDOS67,2431
#  define OS270,2511
#  define WINDOWS73,2575
#    define WIN3277,2681
#      define SYS16BIT83,2880
#  define MAXSEG_64K93,3091
#  define UNALIGNED_OK96,3132
#    define STDC101,3202
#      define STDC99105,3281
#  define STDC110,3395
#  define STDC113,3484
#  define STDC116,3583
#  define STDC119,3666
#  define STDC123,3766
#    define const 128,3876
#  define NO_DUMMY_DECL134,4095
#    define MAX_MEM_LEVEL 140,4218
#    define MAX_MEM_LEVEL 142,4254
#  define MAX_WBITS 152,4544
#    define OF(172,5324
#    define OF(174,5359
#    define SMALL_MEDIUM187,5818
#      define FAR 189,5863
#      define FAR 191,5896
#    define SMALL_MEDIUM196,6029
#      define FAR 198,6078
#      define FAR 200,6111
#        define ZEXTERN 212,6463
#        define ZEXTERN 214,6528
#      undef FAR224,6848
#    define ZEXPORT 229,7029
#      define ZEXPORTVA 231,7073
#      define ZEXPORTVA 233,7115
#      define ZEXPORT 241,7243
#      define ZEXPORTVA 242,7289
#      define ZEXPORT 244,7345
#      define ZEXPORTVA 245,7391
#  define ZEXTERN 251,7481
#  define ZEXPORT254,7529
#  define ZEXPORTVA257,7572
#  define FAR261,7612
typedef unsigned char  Byte;265,7661
typedef unsigned int   uInt;267,7711
typedef unsigned long  uLong;268,7763
#  define Bytef 272,7911
   typedef Byte  FAR Bytef;274,7942
typedef char  FAR charf;276,7977
typedef int   FAR intf;277,8002
typedef uInt  FAR uIntf;278,8026
typedef uLong FAR uLongf;279,8051
   typedef void const *voidpc;voidpc282,8090
   typedef void FAR   *voidpf;voidpf283,8121
   typedef void       *voidp;voidp284,8152
   typedef Byte const *voidpc;voidpc286,8188
   typedef Byte FAR   *voidpf;voidpf287,8219
   typedef Byte       *voidp;voidp288,8250
#  define z_off_t 297,8466
#  define SEEK_SET 300,8514
#  define SEEK_CUR 301,8584
#  define SEEK_END 302,8653
#  define z_off_t 305,8754
#  define NO_vsnprintf309,8808
#  define NO_vsnprintf313,8860
#    undef FAR315,8896

zlib/zlib.h,2567
#define ZLIB_H32,1350
#define ZLIB_VERSION 40,1426
#define ZLIB_VERNUM 41,1455
typedef voidpf (*alloc_func)alloc_func77,3233
typedef void   (*free_func)free_func78,3306
typedef struct z_stream_s 82,3397
    Bytef    *next_in;next_in83,3425
    uInt     avail_in;84,3471
    uLong    total_in;85,3538
    Bytef    *next_out;next_out87,3605
    uInt     avail_out;88,3672
    uLong    total_out;89,3735
    char     *msg;msg91,3798
    struct internal_state FAR *state;state92,3865
    alloc_func zalloc;94,3938
    free_func  zfree;95,4004
    voidpf     opaque;96,4066
    int     data_type;98,4144
    uLong   adler;99,4221
    uLong   reserved;100,4290
} z_stream;101,4344
typedef z_stream FAR *z_streamp;z_streamp103,4357
typedef struct gz_header_s 109,4526
    int     text;110,4555
    uLong   time;111,4629
    int     xflags;112,4677
    int     os;113,4755
    Bytef   *extra;extra114,4802
    uInt    extra_len;115,4873
    uInt    extra_max;116,4949
    Bytef   *name;name117,5021
    uInt    name_max;118,5098
    Bytef   *comment;comment119,5169
    uInt    comm_max;120,5244
    int     hcrc;121,5318
    int     done;122,5390
} gz_header;124,5518
typedef gz_header FAR *gz_headerp;gz_headerp126,5532
#define Z_NO_FLUSH 162,7286
#define Z_PARTIAL_FLUSH 163,7312
#define Z_SYNC_FLUSH 164,7386
#define Z_FULL_FLUSH 165,7412
#define Z_FINISH 166,7438
#define Z_BLOCK 167,7464
#define Z_OK 170,7565
#define Z_STREAM_END 171,7591
#define Z_NEED_DICT 172,7617
#define Z_ERRNO 173,7643
#define Z_STREAM_ERROR 174,7671
#define Z_DATA_ERROR 175,7699
#define Z_MEM_ERROR 176,7727
#define Z_BUF_ERROR 177,7755
#define Z_VERSION_ERROR 178,7783
#define Z_NO_COMPRESSION 183,7965
#define Z_BEST_SPEED 184,8000
#define Z_BEST_COMPRESSION 185,8035
#define Z_DEFAULT_COMPRESSION 186,8070
#define Z_FILTERED 189,8132
#define Z_HUFFMAN_ONLY 190,8164
#define Z_RLE 191,8196
#define Z_FIXED 192,8228
#define Z_DEFAULT_STRATEGY 193,8260
#define Z_BINARY 196,8358
#define Z_TEXT 197,8379
#define Z_ASCII 198,8400
#define Z_UNKNOWN 199,8475
#define Z_DEFLATED 202,8565
#define Z_NULL 205,8667
#define zlib_version 207,8732
typedef unsigned (*in_func)in_func877,44416
typedef int (*out_func)out_func878,44489
typedef voidp gzFile;1066,53977
#define deflateInit(1331,65115
#define inflateInit(1333,65226
#define deflateInit2(1335,65330
#define inflateInit2(1338,65554
#define inflateBackInit(1340,65671
    struct internal_state 1346,65873
    struct internal_state {int dummy;1346,65873

zlib/zutil.h,2035
#define ZUTIL_H14,429
#define ZLIB_INTERNAL16,446
#     define errno 33,942
#  define local 43,1082
typedef unsigned char  uch;47,1183
typedef uch FAR uchf;48,1211
typedef unsigned short ush;49,1233
typedef ush FAR ushf;50,1261
typedef unsigned long  ulg;51,1283
#define ERR_MSG(56,1442
#define ERR_RETURN(58,1492
#  define DEF_WBITS 65,1682
#  define DEF_MEM_LEVEL 70,1821
#  define DEF_MEM_LEVEL 72,1853
#define STORED_BLOCK 76,1923
#define STATIC_TREES 77,1946
#define DYN_TREES 78,1969
#define MIN_MATCH 81,2029
#define MAX_MATCH 82,2050
#define PRESET_DICT 85,2118
#  define OS_CODE 90,2283
#  define OS_CODE 105,2717
#  define OS_CODE 109,2783
#  define F_OPEN(110,2807
#  define OS_CODE 115,2955
#  define OS_CODE 119,2998
#  define OS_CODE 126,3124
#      define fdopen(131,3291
#  define OS_CODE 137,3386
#    define OS_CODE 142,3485
#  define OS_CODE 147,3565
#  define fdopen(151,3636
#    define fdopen(156,3763
       typedef int ptrdiff_t;158,3845
#      define _PTRDIFF_T_DEFINED159,3875
#    define fdopen(162,3927
#  define OS_CODE 169,4037
#  define F_OPEN(173,4103
#    define HAVE_VSNPRINTF180,4281
#    define HAVE_VSNPRINTF185,4373
#    define NO_vsnprintf192,4567
#    define NO_vsnprintf195,4621
#      define vsnprintf 200,4847
#    define NO_vsnprintf204,4918
#  define NO_vsnprintf208,4970
#  define NO_MEMCPY212,5018
#  define NO_MEMCPY219,5294
#  define HAVE_MEMCPY222,5387
#    define zmemcpy 226,5491
#    define zmemcmp 227,5520
#    define zmemzero(228,5549
#    define zmemcpy 230,5612
#    define zmemcmp 231,5639
#    define zmemzero(232,5666
#  define Assert(245,6070
#  define Trace(246,6125
#  define Tracev(247,6176
#  define Tracevv(248,6227
#  define Tracec(249,6279
#  define Tracecv(250,6339
#  define Assert(252,6406
#  define Trace(253,6433
#  define Tracev(254,6452
#  define Tracevv(255,6472
#  define Tracec(256,6493
#  define Tracecv(257,6515
#define ZALLOC(264,6663
#define ZFREE(266,6763
#define TRY_FREE(267,6841

client/completion_hash.cc,401
uint hashpjw(28,1062
int completion_hash_init(42,1301
int completion_hash_update(60,1674
static Bucket *completion_hash_find(completion_hash_find113,2688
int completion_hash_exists(136,3117
Bucket *find_all_matches(find_all_matches158,3504
Bucket *find_longest_match(find_longest_match173,3770
void completion_hash_clean(205,4308
void completion_hash_free(212,4455
void add_word(219,4557

client/mysqladmin.cc,3921
#define ADMIN_VERSION 27,1035
#define MAX_MYSQL_VAR 28,1064
#define SHUTDOWN_DEF_TIMEOUT 29,1090
#define MAX_TRUNC_LENGTH 30,1149
char *host=host32,1177
char truncated_var_names[truncated_var_names34,1285
char ex_var_names[ex_var_names35,1344
ulonglong last_values[last_values36,1389
static int interval=37,1427
static my_bool option_force=38,1450
static my_bool debug_info_flag=41,1628
static uint tcp_port 42,1684
static uint opt_count_iterations=43,1759
static ulong opt_connect_timeout,44,1808
static ulong opt_connect_timeout, opt_shutdown_timeout;44,1808
static char * unix_port=45,1864
static char *opt_plugin_dir=opt_plugin_dir46,1891
static uint opt_enable_cleartext_plugin=47,1945
static my_bool using_opt_enable_cleartext_plugin=48,1989
static char *shared_memory_base_name=shared_memory_base_name51,2060
static uint opt_protocol=53,2107
static myf error_flags;54,2135
static uint ex_val_max_len[ex_val_max_len62,2433
static my_bool ex_status_printed 63,2476
static uint ex_var_count,64,2550
static uint ex_var_count, max_var_length,64,2550
static uint ex_var_count, max_var_length, max_val_length;64,2550
enum commands 94,3784
  ADMIN_ERROR,commands::ADMIN_ERROR95,3800
  ADMIN_CREATE,commands::ADMIN_CREATE96,3815
  ADMIN_CREATE,           ADMIN_DROP,commands::ADMIN_DROP96,3815
  ADMIN_CREATE,           ADMIN_DROP,            ADMIN_SHUTDOWN,commands::ADMIN_SHUTDOWN96,3815
  ADMIN_RELOAD,commands::ADMIN_RELOAD97,3880
  ADMIN_RELOAD,           ADMIN_REFRESH,commands::ADMIN_REFRESH97,3880
  ADMIN_RELOAD,           ADMIN_REFRESH,         ADMIN_VER,commands::ADMIN_VER97,3880
  ADMIN_PROCESSLIST,commands::ADMIN_PROCESSLIST98,3940
  ADMIN_PROCESSLIST,      ADMIN_STATUS,commands::ADMIN_STATUS98,3940
  ADMIN_PROCESSLIST,      ADMIN_STATUS,          ADMIN_KILL,commands::ADMIN_KILL98,3940
  ADMIN_DEBUG,commands::ADMIN_DEBUG99,4001
  ADMIN_DEBUG,            ADMIN_VARIABLES,commands::ADMIN_VARIABLES99,4001
  ADMIN_DEBUG,            ADMIN_VARIABLES,       ADMIN_FLUSH_LOGS,commands::ADMIN_FLUSH_LOGS99,4001
  ADMIN_FLUSH_HOSTS,commands::ADMIN_FLUSH_HOSTS100,4068
  ADMIN_FLUSH_HOSTS,      ADMIN_FLUSH_TABLES,commands::ADMIN_FLUSH_TABLES100,4068
  ADMIN_FLUSH_HOSTS,      ADMIN_FLUSH_TABLES,    ADMIN_PASSWORD,commands::ADMIN_PASSWORD100,4068
  ADMIN_PING,commands::ADMIN_PING101,4133
  ADMIN_PING,             ADMIN_EXTENDED_STATUS,commands::ADMIN_EXTENDED_STATUS101,4133
  ADMIN_PING,             ADMIN_EXTENDED_STATUS, ADMIN_FLUSH_STATUS,commands::ADMIN_FLUSH_STATUS101,4133
  ADMIN_FLUSH_PRIVILEGES,commands::ADMIN_FLUSH_PRIVILEGES102,4202
  ADMIN_FLUSH_PRIVILEGES, ADMIN_START_SLAVE,commands::ADMIN_START_SLAVE102,4202
  ADMIN_FLUSH_PRIVILEGES, ADMIN_START_SLAVE,     ADMIN_STOP_SLAVE,commands::ADMIN_STOP_SLAVE102,4202
  ADMIN_FLUSH_THREADS,commands::ADMIN_FLUSH_THREADS103,4269
  ADMIN_FLUSH_THREADS,    ADMIN_OLD_PASSWORDcommands::ADMIN_OLD_PASSWORD103,4269
static const char *command_names[command_names105,4317
static TYPELIB command_typelib=117,4831
static struct my_option my_long_options[my_long_options120,4932
static const char *load_default_groups[load_default_groups226,9876
get_one_option(229,9956
int main(305,11522
sig_handler endprog(485,16524
static my_bool sql_connect(502,16914
static int execute_commands(595,19365
static void print_version(1093,32191
static void usage(1100,32355
static int drop_db(1140,34001
static void nice_time(1170,34824
static void print_header(1199,35388
static void print_top(1215,35680
static void print_row(1237,36152
static void print_relative_row(1255,36544
static void print_relative_row_vert(1273,37025
static void store_values(1295,37615
static void print_relative_header(1317,38101
static void print_relative_line(1328,38293
static void truncate_names(1344,38520
static my_bool get_pidfile(1380,39432
static my_bool wait_pidfile(1405,39985

client/mysqlbinlog.cc,4596
#define MYSQL_CLIENT31,1176
#undef MYSQL_SERVER32,1197
#define BIN_LOG_HEADER_SIZE	42,1502
#define PROBE_HEADER_LEN	43,1532
#define CLIENT_CAPABILITIES	46,1580
char server_version[server_version48,1672
ulong server_id 49,1716
ulong bytes_sent 52,1762
ulong mysqld_net_retry_count 53,1806
ulong open_files_limit;54,1842
uint test_flags 55,1866
static uint opt_protocol=56,1888
static FILE *result_file;result_file57,1917
static const char* default_dbug_option 60,1961
static const char *load_default_groups[load_default_groups62,2041
static bool one_database=67,2267
static bool opt_hexdump=68,2338
const char *base64_output_mode_names[base64_output_mode_names69,2366
TYPELIB base64_output_mode_typelib=71,2467
static enum_base64_output_mode opt_base64_output_mode=74,2595
static char *opt_base64_output_mode_str=opt_base64_output_mode_str75,2672
static char* database=76,2720
static my_bool force_opt=77,2746
static my_bool debug_info_flag,78,2805
static my_bool debug_info_flag, debug_check_flag;78,2805
static my_bool force_if_open_opt=79,2855
static ulonglong offset 80,2892
static char* host 81,2921
static int port=82,2944
static uint my_end_arg;83,2964
static const char* sock=84,2988
static char *opt_plugin_dir=opt_plugin_dir85,3016
static char *shared_memory_base_name=shared_memory_base_name88,3088
static char* user 90,3136
static char* pass 91,3159
static char *charset=charset92,3182
static uint verbose=94,3208
static ulonglong start_position,96,3233
static ulonglong start_position, stop_position;96,3233
#define start_position_mot 97,3281
#define stop_position_mot 98,3335
static char *start_datetime_str,start_datetime_str100,3389
static char *start_datetime_str, *stop_datetime_str;stop_datetime_str100,3389
static my_time_t start_datetime=101,3442
static ulonglong rec_count=102,3508
static short binlog_flags 103,3539
static MYSQL* mysql 104,3571
static char* dirname_for_local_load=105,3599
static Format_description_log_event* glob_description_event=113,3868
enum Exit_status 118,3985
  OK_CONTINUE=Exit_status::OK_CONTINUE120,4062
  ERROR_STOP,Exit_status::ERROR_STOP122,4134
  OK_STOPExit_status::OK_STOP124,4202
class Load_log_processor135,4597
  char target_dir_name[Load_log_processor::target_dir_name137,4624
  size_t target_dir_name_len;Load_log_processor::target_dir_name_len138,4659
  struct File_name_recordLoad_log_processor::File_name_record150,5223
    char *fname;Load_log_processor::File_name_record::fname152,5253
    Create_file_log_event *event;Load_log_processor::File_name_record::event153,5270
  DYNAMIC_ARRAY file_names;Load_log_processor::file_names162,5639
  File create_unique_file(Load_log_processor::create_unique_file179,6212
  Load_log_processor(Load_log_processor::Load_log_processor194,6620
  ~Load_log_processor(Load_log_processor::~Load_log_processor195,6646
  int init(Load_log_processor::init197,6674
  void init_by_dir_name(Load_log_processor::init_by_dir_name203,6785
  void init_by_cur_dir(Load_log_processor::init_by_cur_dir208,6938
  void destroy(Load_log_processor::destroy214,7110
  Create_file_log_event *grab_event(Load_log_processor::grab_event246,8115
  char *grab_fname(Load_log_processor::grab_fname274,9147
File Load_log_processor::prepare_new_file_for_old_format(312,10506
Exit_status Load_log_processor::load_old_format_file(350,11428
Exit_status Load_log_processor::process_first_event(420,13582
Exit_status  Load_log_processor::process(499,15803
Exit_status Load_log_processor::process(519,16452
Exit_status Load_log_processor::process(548,17548
static Load_log_processor load_processor;589,18727
static void convert_path_to_forward_slashes(606,19219
static bool shall_skip_database(626,19606
write_event_header_and_base64(651,20399
Exit_status process_event(693,21931
static struct my_option my_long_options[my_long_options1040,33330
static void error_or_warning(1211,42023
static void error(1225,42375
static void sql_print_error(1240,42664
static void warning(1255,43000
static void cleanup(1266,43209
static void print_version(1280,43415
static void usage(1286,43528
static my_time_t convert_str_to_timestamp(1299,43879
get_one_option(1323,44606
static int parse_args(1397,46395
static Exit_status safe_connect(1419,46943
static Exit_status dump_log_entries(1465,48216
static Exit_status check_master_version(1501,49304
static Exit_status dump_remote_log_entries(1579,51488
static Exit_status check_header(1772,58204
static Exit_status dump_local_log_entries(1945,64510
int main(2069,67978

client/mysql.cc,7339
#define __GNU_LIBRARY__	38,1244
const char *VER=VER48,1467
#define MAX_COLUMN_LENGTH	51,1554
static char *server_version=server_version54,1644
#define MAX_SERVER_ARGS 57,1725
#undef VOID74,2194
#undef SYSV	81,2309
#define HAVE_READLINE92,2490
#define USE_POPEN93,2512
#undef vidattr99,2638
#define vidattr(100,2653
#define cmp_database(104,2735
#define cmp_database(106,2800
#define PROMPT_CHAR 112,2956
#define DEFAULT_DELIMITER 113,2981
#define MAX_BATCH_BUFFER_SIZE 115,3012
typedef struct st_status117,3067
  int exit_status;st_status::exit_status119,3094
  ulong query_start_line;st_status::query_start_line120,3113
  char *file_name;st_status::file_name121,3139
  LINE_BUFFER *line_buff;st_status::line_buff122,3158
  bool batch,st_status::batch123,3184
  bool batch,add_to_history;st_status::add_to_history123,3184
} STATUS;124,3213
static HashTable ht;127,3225
static char **defaults_argv;defaults_argv128,3246
enum enum_info_type 130,3276
enum enum_info_type { INFO_INFO,enum_info_type::INFO_INFO130,3276
enum enum_info_type { INFO_INFO,INFO_ERROR,enum_info_type::INFO_ERROR130,3276
enum enum_info_type { INFO_INFO,INFO_ERROR,INFO_RESULT}enum_info_type::INFO_RESULT130,3276
typedef enum enum_info_type INFO_TYPE;131,3333
static MYSQL mysql;133,3373
static my_bool ignore_errors=134,3416
static my_bool debug_info_flag,146,4081
static my_bool debug_info_flag, debug_check_flag;146,4081
static my_bool column_types_flag;147,4131
static my_bool preserve_comments=148,4165
static ulong opt_max_allowed_packet,149,4202
static ulong opt_max_allowed_packet, opt_net_buffer_length;149,4202
static uint verbose=150,4262
static uint opt_enable_cleartext_plugin=151,4335
static my_bool using_opt_enable_cleartext_plugin=152,4379
static uint my_end_arg;153,4432
static char * opt_mysql_unix_port=154,4456
static int connect_flag=155,4493
static char *current_host,current_host156,4537
static char *current_host,*current_db,current_db156,4537
static char *current_host,*current_db,*current_user=current_user156,4537
static char *histfile;histfile160,4761
static char *histfile_tmp;histfile_tmp161,4784
static String glob_buffer,162,4811
static String glob_buffer,old_buffer;162,4811
static String processed_prompt;163,4849
static char *full_username=full_username164,4881
static int wait_time 165,4946
static STATUS status;166,4972
static ulong select_limit,167,4994
static ulong select_limit,max_join_size,167,4994
static ulong select_limit,max_join_size,opt_connect_timeout=167,4994
static char mysql_charsets_dir[mysql_charsets_dir168,5057
static char *opt_plugin_dir=opt_plugin_dir169,5102
static const char *xmlmeta[xmlmeta170,5156
static const char *day_names[day_names179,5350
static const char *month_names[month_names180,5426
static char default_pager[default_pager182,5542
static char pager[pager183,5580
static char pager[FN_REFLEN], outfile[outfile183,5580
static FILE *PAGER,PAGER184,5630
static FILE *PAGER, *OUTFILE;OUTFILE184,5630
static MEM_ROOT hash_mem_root;185,5660
static uint prompt_counter;186,5691
static char delimiter[delimiter187,5719
static uint delimiter_length=188,5765
unsigned short terminal_width=189,5798
static char *shared_memory_base_name=shared_memory_base_name192,5851
static uint opt_protocol=194,5898
static CHARSET_INFO *charset_info=charset_info195,5926
const char *default_dbug_option=default_dbug_option199,6008
  const char *name;::name252,8408
  char cmd_char;::cmd_char253,8472
  bool takes_params;::takes_params255,8592
  const char *doc;::doc256,8647
} COMMANDS;257,8707
static COMMANDS commands[commands259,8720
static const char *load_default_groups[load_default_groups1023,32280
static int         embedded_server_arg_count=1025,32347
static char       *embedded_server_args[embedded_server_args1026,32396
static const char *embedded_server_groups[embedded_server_groups1027,32454
typedef struct _hist_entry 1036,32718
  const char      *line;_hist_entry::line1037,32747
  const char      *data;_hist_entry::data1038,32772
} HIST_ENTRY;1039,32797
extern "C" int history_length;1046,33045
int main(1073,34146
sig_handler mysql_end(1243,38994
sig_handler handle_sigint(1295,40335
sig_handler window_resize(1350,42085
static struct my_option my_long_options[my_long_options1359,42262
static void usage(1587,53946
get_one_option(1615,54680
static int get_options(1781,58726
static int read_and_execute(1845,60223
static COMMANDS *find_command(find_command1979,63633
static bool add_line(2037,65243
extern "C" char *no_completion(no_completion2335,74118
static void fix_history(2342,74267
static int not_in_history(2398,75630
static int fake_magic_space(2411,75876
static void initialize_readline 2421,76013
static char **new_mysql_completion(new_mysql_completion2452,77178
static char *new_command_generator(new_command_generator2466,77633
static void build_completion_hash(2547,78974
char *index(index2674,82439
char *rindex(rindex2683,82569
static int reconnect(2696,82749
static void get_current_db(2712,83112
int mysql_real_query_for_lazy(2737,83785
int mysql_store_result_for_lazy(2753,84148
static void print_help_item(2763,84336
static int com_server_help(2775,84636
com_help(2882,87384
com_clear(2922,88733
com_charset(2934,88941
com_go(2966,89699
static void init_pager(3138,93909
static void end_pager(3154,94163
static void init_tee(3163,94256
static void end_tee(3181,94683
com_ego(3191,94794
static const char *fieldtype2str(fieldtype2str3202,94963
static char *fieldflags2str(fieldflags2str3235,96411
#define ff2s_check_flag(3239,96497
#undef ff2s_check_flag3260,97156
print_field_types(3267,97255
print_table_data(3297,98243
static int get_field_disp_length(3424,102544
static int get_result_width(3447,103085
tee_print_sized_data(3469,103554
print_table_data_html(3499,104321
print_table_data_xml(3538,105302
print_table_data_vertically(3577,106388
static void print_warnings(3630,107659
static const char *array_value(array_value3673,108718
xmlencode_print(3683,108884
safe_put_field(3702,109188
print_tab_data(3744,110096
com_tee(3775,110779
com_notee(3820,111888
com_pager(3835,112160
com_nopager(3879,113348
com_edit(3897,113667
com_quit(3941,114888
com_rehash(3949,115027
com_shell(3961,115221
com_print(3989,115783
com_connect(4001,116131
static int com_source(4054,117337
com_delimiter(4109,118994
com_use(4138,119609
normalize_dbname(4246,122442
com_warnings(4283,123278
com_nowarnings(4292,123467
char *get_arg(get_arg4310,124109
get_quote_count(4365,125196
sql_real_connect(4377,125400
sql_connect(4465,128042
com_status(4500,128689
server_version_string(4625,132952
put_info(4666,134067
put_error(4737,135744
static void remove_cntrl(4744,135866
void tee_fprintf(4754,136092
void tee_fputs(4771,136353
void tee_puts(4779,136461
void tee_putc(4790,136622
#undef CLOCKS_PER_SEC4802,136828
#define CLOCKS_PER_SEC 4803,136850
static ulong start_timer(4807,136911
static void nice_time(4823,137209
static void end_timer(4854,137920
static void mysql_end_timer(4861,138058
static const char* construct_prompt(4869,138210
static void add_int_to_prompt(5034,141933
static void init_username(5041,142066
static int com_prompt(5058,142491

client/mysqltest.cc,27593
#define MTEST_VERSION 27,985
#define SIGNAL_FMT 52,1520
#define SIGNAL_FMT 54,1562
#define USE_CYGWIN59,1682
#define MAX_VAR_NAME_LENGTH 62,1709
#define MAX_COLUMNS 63,1744
#define MAX_EMBEDDED_SERVER_ARGS 64,1779
#define MAX_DELIMITER_LENGTH 65,1815
#define DEFAULT_MAX_CONN 66,1847
#define QUERY_SEND_FLAG 69,1921
#define QUERY_REAP_FLAG 70,1948
  OPT_PS_PROTOCOL=::OPT_PS_PROTOCOL83,2265
  OPT_PS_PROTOCOL=OPT_MAX_CLIENT_OPTION,::OPT_MAX_CLIENT_OPTION83,2265
  OPT_PS_PROTOCOL=OPT_MAX_CLIENT_OPTION, OPT_SP_PROTOCOL,::OPT_SP_PROTOCOL83,2265
  OPT_CURSOR_PROTOCOL,::OPT_CURSOR_PROTOCOL84,2323
  OPT_CURSOR_PROTOCOL, OPT_VIEW_PROTOCOL,::OPT_VIEW_PROTOCOL84,2323
  OPT_CURSOR_PROTOCOL, OPT_VIEW_PROTOCOL, OPT_MAX_CONNECT_RETRIES,::OPT_MAX_CONNECT_RETRIES84,2323
  OPT_MAX_CONNECTIONS,::OPT_MAX_CONNECTIONS85,2390
  OPT_MAX_CONNECTIONS, OPT_MARK_PROGRESS,::OPT_MARK_PROGRESS85,2390
  OPT_MAX_CONNECTIONS, OPT_MARK_PROGRESS, OPT_LOG_DIR,::OPT_LOG_DIR85,2390
  OPT_TAIL_LINES,::OPT_TAIL_LINES86,2445
  OPT_TAIL_LINES, OPT_RESULT_FORMAT_VERSION::OPT_RESULT_FORMAT_VERSION86,2445
static int record=89,2493
static char *opt_db=opt_db90,2530
const char *opt_user=opt_user91,2568
static char *shared_memory_base_name=shared_memory_base_name92,2642
const char *opt_logdir=opt_logdir93,2682
const char *opt_include=opt_include94,2710
static int opt_port=95,2757
static int opt_max_connect_retries;96,2781
static int opt_result_format_version;97,2817
static int opt_max_connections=98,2855
static my_bool opt_compress=99,2905
static my_bool debug_info_flag=100,2960
static my_bool tty_password=101,3016
static my_bool opt_mark_progress=102,3048
static my_bool ps_protocol=103,3085
static my_bool sp_protocol=104,3140
static my_bool view_protocol=105,3195
static my_bool cursor_protocol=106,3254
static my_bool parsing_disabled=107,3317
static my_bool display_result_vertically=108,3353
static my_bool disable_query_log=110,3488
static my_bool disable_connect_log=111,3548
static my_bool disable_warnings=112,3587
static my_bool disable_info=113,3623
static my_bool abort_on_error=114,3655
static my_bool server_initialized=115,3689
static my_bool is_windows=116,3727
static char **default_argv;default_argv117,3757
static const char *load_default_groups[load_default_groups118,3785
static char line_buffer[line_buffer119,3857
static char line_buffer[MAX_DELIMITER_LENGTH], *line_buffer_pos=line_buffer_pos119,3857
struct property 123,4010
  my_bool *var;property::var124,4028
  my_bool set;property::set125,4068
  my_bool old;property::old126,4120
  my_bool reverse;property::reverse127,4173
  const char *env_name;property::env_name128,4227
static struct property prop_list[prop_list131,4281
static my_bool once_property=142,4777
enum enum_prop 144,4815
  P_ABORT=enum_prop::P_ABORT145,4832
  P_CONNECT,enum_prop::P_CONNECT146,4846
  P_INFO,enum_prop::P_INFO147,4859
  P_META,enum_prop::P_META148,4869
  P_PS,enum_prop::P_PS149,4879
  P_QUERY,enum_prop::P_QUERY150,4887
  P_RESULT,enum_prop::P_RESULT151,4898
  P_WARN,enum_prop::P_WARN152,4910
  P_MAXenum_prop::P_MAX153,4920
static uint start_lineno=156,4932
static uint my_end_arg=157,4997
static uint opt_tail_lines=160,5090
static uint opt_connect_timeout=162,5122
static char delimiter[delimiter164,5159
static uint delimiter_length=165,5209
static char TMPDIR[TMPDIR167,5243
enum block_cmd 170,5293
  cmd_none,block_cmd::cmd_none171,5310
  cmd_if,block_cmd::cmd_if172,5322
  cmd_whileblock_cmd::cmd_while173,5332
struct st_block176,5348
  int             line;st_block::line178,5366
  my_bool         ok;st_block::ok179,5416
  enum block_cmd  cmd;st_block::cmd180,5471
  char            delim[st_block::delim181,5526
static struct st_block block_stack[block_stack184,5607
static struct st_block *cur_block,cur_block185,5647
static struct st_block *cur_block, *block_stack_end;block_stack_end185,5647
struct st_test_file188,5723
  FILE* file;st_test_file::file190,5745
  char *file_name;st_test_file::file_name191,5759
  uint lineno;st_test_file::lineno192,5778
static struct st_test_file file_stack[file_stack195,5824
static struct st_test_file* cur_file;196,5867
static struct st_test_file* file_stack_end;197,5905
static CHARSET_INFO *charset_info=charset_info200,5951
static const char *embedded_server_groups[embedded_server_groups202,6029
static int embedded_server_arg_count=210,6136
static char *embedded_server_args[embedded_server_args211,6176
static char *timer_file timer_file217,6318
static ulonglong timer_start;218,6350
static ulong connection_retry_sleep=223,6448
static char *opt_plugin_dir=opt_plugin_dir225,6513
static my_regex_t ps_re;228,6569
static my_regex_t sp_re;229,6643
static my_regex_t view_re;230,6707
static uint opt_protocol=236,6871
DYNAMIC_ARRAY q_lines;238,6900
struct Parser242,6950
  int read_lines,Parser::read_lines244,6966
  int read_lines,current_line;Parser::current_line244,6966
} parser;245,6997
struct MasterPos247,7008
  char file[MasterPos::file249,7027
  ulong pos;MasterPos::pos250,7051
} master_pos;251,7064
const char *result_file_name=result_file_name254,7149
  char *name;::name258,7200
  int name_len;::name_len259,7214
  char *str_val;::str_val260,7230
  int str_val_len;::str_val_len261,7247
  int int_val;::int_val262,7266
  int alloced_len;::alloced_len263,7281
  bool int_dirty;::int_dirty264,7300
  bool is_int;::is_int265,7380
  bool alloced;::alloced266,7395
} VAR;267,7411
VAR var_reg[var_reg270,7459
HASH var_hash;272,7477
struct st_connection274,7493
  MYSQL mysql;st_connection::mysql276,7516
  MYSQL* util_mysql;st_connection::util_mysql278,7597
  char *name;st_connection::name279,7618
  size_t name_len;st_connection::name_len280,7632
  MYSQL_STMT* stmt;st_connection::stmt281,7651
  my_bool pending;st_connection::pending283,7732
  pthread_t tid;st_connection::tid286,7776
  const char *cur_query;st_connection::cur_query287,7793
  int cur_query_len;st_connection::cur_query_len288,7818
  int command,st_connection::command289,7839
  int command, result;st_connection::result289,7839
  pthread_mutex_t query_mutex;st_connection::query_mutex290,7862
  pthread_cond_t query_cond;st_connection::query_cond291,7893
  pthread_mutex_t result_mutex;st_connection::result_mutex292,7922
  pthread_cond_t result_cond;st_connection::result_cond293,7954
  int query_done;st_connection::query_done294,7984
  my_bool has_thread;st_connection::has_thread295,8002
struct st_connection *connections=connections299,8056
struct st_connection* cur_con=300,8097
enum enum_commands 307,8278
  Q_CONNECTION=enum_commands::Q_CONNECTION308,8299
  Q_CONNECTION=1,     Q_QUERY,enum_commands::Q_QUERY308,8299
  Q_CONNECT,enum_commands::Q_CONNECT309,8330
  Q_CONNECT,	    Q_SLEEP,enum_commands::Q_SLEEP309,8330
  Q_CONNECT,	    Q_SLEEP, Q_REAL_SLEEP,enum_commands::Q_REAL_SLEEP309,8330
  Q_INC,enum_commands::Q_INC310,8370
  Q_INC,		    Q_DEC,enum_commands::Q_DEC310,8370
  Q_SOURCE,enum_commands::Q_SOURCE311,8391
  Q_SOURCE,	    Q_DISCONNECT,enum_commands::Q_DISCONNECT311,8391
  Q_LET,enum_commands::Q_LET312,8421
  Q_LET,		    Q_ECHO,enum_commands::Q_ECHO312,8421
  Q_WHILE,enum_commands::Q_WHILE313,8443
  Q_WHILE,	    Q_END_BLOCK,enum_commands::Q_END_BLOCK313,8443
  Q_SYSTEM,enum_commands::Q_SYSTEM314,8471
  Q_SYSTEM,	    Q_RESULT,enum_commands::Q_RESULT314,8471
  Q_REQUIRE,enum_commands::Q_REQUIRE315,8497
  Q_REQUIRE,	    Q_SAVE_MASTER_POS,enum_commands::Q_SAVE_MASTER_POS315,8497
  Q_SYNC_WITH_MASTER,enum_commands::Q_SYNC_WITH_MASTER316,8533
  Q_SYNC_SLAVE_WITH_MASTER,enum_commands::Q_SYNC_SLAVE_WITH_MASTER317,8555
  Q_ERROR,enum_commands::Q_ERROR318,8583
  Q_SEND,enum_commands::Q_SEND319,8594
  Q_SEND,		    Q_REAP,enum_commands::Q_REAP319,8594
  Q_DIRTY_CLOSE,enum_commands::Q_DIRTY_CLOSE320,8617
  Q_DIRTY_CLOSE,	    Q_REPLACE,enum_commands::Q_REPLACE320,8617
  Q_DIRTY_CLOSE,	    Q_REPLACE, Q_REPLACE_COLUMN,enum_commands::Q_REPLACE_COLUMN320,8617
  Q_PING,enum_commands::Q_PING321,8667
  Q_PING,		    Q_EVAL,enum_commands::Q_EVAL321,8667
  Q_EVAL_RESULT,enum_commands::Q_EVAL_RESULT322,8690
  Q_ENABLE_QUERY_LOG,enum_commands::Q_ENABLE_QUERY_LOG323,8707
  Q_ENABLE_QUERY_LOG, Q_DISABLE_QUERY_LOG,enum_commands::Q_DISABLE_QUERY_LOG323,8707
  Q_ENABLE_RESULT_LOG,enum_commands::Q_ENABLE_RESULT_LOG324,8750
  Q_ENABLE_RESULT_LOG, Q_DISABLE_RESULT_LOG,enum_commands::Q_DISABLE_RESULT_LOG324,8750
  Q_ENABLE_CONNECT_LOG,enum_commands::Q_ENABLE_CONNECT_LOG325,8795
  Q_ENABLE_CONNECT_LOG, Q_DISABLE_CONNECT_LOG,enum_commands::Q_DISABLE_CONNECT_LOG325,8795
  Q_WAIT_FOR_SLAVE_TO_STOP,enum_commands::Q_WAIT_FOR_SLAVE_TO_STOP326,8842
  Q_ENABLE_WARNINGS,enum_commands::Q_ENABLE_WARNINGS327,8870
  Q_ENABLE_WARNINGS, Q_DISABLE_WARNINGS,enum_commands::Q_DISABLE_WARNINGS327,8870
  Q_ENABLE_INFO,enum_commands::Q_ENABLE_INFO328,8911
  Q_ENABLE_INFO, Q_DISABLE_INFO,enum_commands::Q_DISABLE_INFO328,8911
  Q_ENABLE_METADATA,enum_commands::Q_ENABLE_METADATA329,8944
  Q_ENABLE_METADATA, Q_DISABLE_METADATA,enum_commands::Q_DISABLE_METADATA329,8944
  Q_EXEC,enum_commands::Q_EXEC330,8985
  Q_EXEC, Q_DELIMITER,enum_commands::Q_DELIMITER330,8985
  Q_DISABLE_ABORT_ON_ERROR,enum_commands::Q_DISABLE_ABORT_ON_ERROR331,9008
  Q_DISABLE_ABORT_ON_ERROR, Q_ENABLE_ABORT_ON_ERROR,enum_commands::Q_ENABLE_ABORT_ON_ERROR331,9008
  Q_DISPLAY_VERTICAL_RESULTS,enum_commands::Q_DISPLAY_VERTICAL_RESULTS332,9061
  Q_DISPLAY_VERTICAL_RESULTS, Q_DISPLAY_HORIZONTAL_RESULTS,enum_commands::Q_DISPLAY_HORIZONTAL_RESULTS332,9061
  Q_QUERY_VERTICAL,enum_commands::Q_QUERY_VERTICAL333,9121
  Q_QUERY_VERTICAL, Q_QUERY_HORIZONTAL,enum_commands::Q_QUERY_HORIZONTAL333,9121
  Q_QUERY_VERTICAL, Q_QUERY_HORIZONTAL, Q_SORTED_RESULT,enum_commands::Q_SORTED_RESULT333,9121
  Q_LOWERCASE,enum_commands::Q_LOWERCASE334,9178
  Q_START_TIMER,enum_commands::Q_START_TIMER335,9193
  Q_START_TIMER, Q_END_TIMER,enum_commands::Q_END_TIMER335,9193
  Q_CHARACTER_SET,enum_commands::Q_CHARACTER_SET336,9223
  Q_CHARACTER_SET, Q_DISABLE_PS_PROTOCOL,enum_commands::Q_DISABLE_PS_PROTOCOL336,9223
  Q_CHARACTER_SET, Q_DISABLE_PS_PROTOCOL, Q_ENABLE_PS_PROTOCOL,enum_commands::Q_ENABLE_PS_PROTOCOL336,9223
  Q_DISABLE_RECONNECT,enum_commands::Q_DISABLE_RECONNECT337,9287
  Q_DISABLE_RECONNECT, Q_ENABLE_RECONNECT,enum_commands::Q_ENABLE_RECONNECT337,9287
  Q_IF,enum_commands::Q_IF338,9330
  Q_DISABLE_PARSING,enum_commands::Q_DISABLE_PARSING339,9338
  Q_DISABLE_PARSING, Q_ENABLE_PARSING,enum_commands::Q_ENABLE_PARSING339,9338
  Q_REPLACE_REGEX,enum_commands::Q_REPLACE_REGEX340,9377
  Q_REPLACE_REGEX, Q_REMOVE_FILE,enum_commands::Q_REMOVE_FILE340,9377
  Q_REPLACE_REGEX, Q_REMOVE_FILE, Q_FILE_EXIST,enum_commands::Q_FILE_EXIST340,9377
  Q_WRITE_FILE,enum_commands::Q_WRITE_FILE341,9425
  Q_WRITE_FILE, Q_COPY_FILE,enum_commands::Q_COPY_FILE341,9425
  Q_WRITE_FILE, Q_COPY_FILE, Q_PERL,enum_commands::Q_PERL341,9425
  Q_WRITE_FILE, Q_COPY_FILE, Q_PERL, Q_DIE,enum_commands::Q_DIE341,9425
  Q_WRITE_FILE, Q_COPY_FILE, Q_PERL, Q_DIE, Q_EXIT,enum_commands::Q_EXIT341,9425
  Q_WRITE_FILE, Q_COPY_FILE, Q_PERL, Q_DIE, Q_EXIT, Q_SKIP,enum_commands::Q_SKIP341,9425
  Q_CHMOD_FILE,enum_commands::Q_CHMOD_FILE342,9485
  Q_CHMOD_FILE, Q_APPEND_FILE,enum_commands::Q_APPEND_FILE342,9485
  Q_CHMOD_FILE, Q_APPEND_FILE, Q_CAT_FILE,enum_commands::Q_CAT_FILE342,9485
  Q_CHMOD_FILE, Q_APPEND_FILE, Q_CAT_FILE, Q_DIFF_FILES,enum_commands::Q_DIFF_FILES342,9485
  Q_SEND_QUIT,enum_commands::Q_SEND_QUIT343,9542
  Q_SEND_QUIT, Q_CHANGE_USER,enum_commands::Q_CHANGE_USER343,9542
  Q_SEND_QUIT, Q_CHANGE_USER, Q_MKDIR,enum_commands::Q_MKDIR343,9542
  Q_SEND_QUIT, Q_CHANGE_USER, Q_MKDIR, Q_RMDIR,enum_commands::Q_RMDIR343,9542
  Q_LIST_FILES,enum_commands::Q_LIST_FILES344,9590
  Q_LIST_FILES, Q_LIST_FILES_WRITE_FILE,enum_commands::Q_LIST_FILES_WRITE_FILE344,9590
  Q_LIST_FILES, Q_LIST_FILES_WRITE_FILE, Q_LIST_FILES_APPEND_FILE,enum_commands::Q_LIST_FILES_APPEND_FILE344,9590
  Q_SEND_SHUTDOWN,enum_commands::Q_SEND_SHUTDOWN345,9657
  Q_SEND_SHUTDOWN, Q_SHUTDOWN_SERVER,enum_commands::Q_SHUTDOWN_SERVER345,9657
  Q_RESULT_FORMAT_VERSION,enum_commands::Q_RESULT_FORMAT_VERSION346,9695
  Q_MOVE_FILE,enum_commands::Q_MOVE_FILE347,9722
  Q_MOVE_FILE, Q_REMOVE_FILES_WILDCARD,enum_commands::Q_REMOVE_FILES_WILDCARD347,9722
  Q_MOVE_FILE, Q_REMOVE_FILES_WILDCARD, Q_SEND_EVAL,enum_commands::Q_SEND_EVAL347,9722
  Q_UNKNOWN,enum_commands::Q_UNKNOWN348,9775
  Q_COMMENT,enum_commands::Q_COMMENT349,9822
  Q_COMMENT_WITH_COMMAND,enum_commands::Q_COMMENT_WITH_COMMAND350,9869
  Q_EMPTY_LINEenum_commands::Q_EMPTY_LINE351,9895
const char *command_names[command_names355,9915
enum match_err_type460,12033
  ERR_EMPTY=match_err_type::ERR_EMPTY462,12055
  ERR_ERRNO,match_err_type::ERR_ERRNO463,12071
  ERR_SQLSTATEmatch_err_type::ERR_SQLSTATE464,12084
struct st_match_err467,12103
  enum match_err_type type;st_match_err::type469,12125
    uint errnum;st_match_err::errnum472,12165
    char sqlstate[st_match_err::sqlstate473,12182
  } code;st_match_err::code474,12248
struct st_expected_errors477,12262
  struct st_match_err err[st_expected_errors::err479,12290
  uint count;st_expected_errors::count480,12321
static struct st_expected_errors saved_expected_errors;482,12338
struct st_command484,12395
  char *query,st_command::query486,12415
  char *query, *query_buf,st_command::query_buf486,12415
  char *query, *query_buf,*first_argument,st_command::first_argument486,12415
  char *query, *query_buf,*first_argument,*last_argument,st_command::last_argument486,12415
  char *query, *query_buf,*first_argument,*last_argument,*end;st_command::end486,12415
  DYNAMIC_STRING content;st_command::content487,12478
  int first_word_len,st_command::first_word_len488,12504
  int first_word_len, query_len;st_command::query_len488,12504
  my_bool abort_on_error,st_command::abort_on_error489,12537
  my_bool abort_on_error, used_replace;st_command::used_replace489,12537
  struct st_expected_errors expected_errors;st_command::expected_errors490,12577
  char require_file[st_command::require_file491,12622
  enum enum_commands type;st_command::type492,12654
TYPELIB command_typelib=495,12685
DYNAMIC_STRING ds_res;498,12770
DYNAMIC_STRING *ds_warn=ds_warn500,12853
struct st_command *curr_command=curr_command501,12881
char builtin_echo[builtin_echo503,12918
struct st_replace_regex505,12949
DYNAMIC_ARRAY regex_arr;st_replace_regex::regex_arr507,12975
char* buf;st_replace_regex::buf516,13370
char* even_buf;st_replace_regex::even_buf517,13381
char* odd_buf;st_replace_regex::odd_buf518,13397
int even_buf_len;st_replace_regex::even_buf_len519,13412
int odd_buf_len;st_replace_regex::odd_buf_len520,13430
struct st_replace_regex *glob_replace_regex=glob_replace_regex523,13451
struct st_replace *glob_replace=glob_replace526,13519
static char *replace_column[replace_column568,15133
static uint max_replace_column=569,15175
void free_all_replace(584,15547
class LogFile 591,15643
  FILE* m_file;LogFile::m_file592,15659
  char m_file_name[LogFile::m_file_name593,15675
  size_t m_bytes_written;LogFile::m_bytes_written594,15706
  LogFile(LogFile::LogFile596,15740
  ~LogFile(LogFile::~LogFile600,15839
  const char* file_name(LogFile::file_name604,15872
  size_t bytes_written(LogFile::bytes_written605,15928
  void open(LogFile::open607,15988
  void close(LogFile::close630,16591
  void flush(LogFile::flush641,16744
  void write(LogFile::write650,16910
  void show_tail(LogFile::show_tail666,17322
LogFile log_file;761,19833
LogFile progress_file;762,19851
#define EMB_SEND_QUERY 781,20623
#define EMB_READ_QUERY_RESULT 782,20648
#define EMB_END_CONNECTION 783,20680
pthread_attr_t cn_thd_attrib;786,20747
pthread_handler_t connection_thread(796,21002
static void wait_query_thread_done(837,22024
static void signal_connection_thd(850,22339
static int do_send_query(868,22883
static int do_read_query_result(878,23144
static void emb_close_connection(889,23373
static void init_connection_thd(904,23778
#define do_send_query(919,24255
#define do_read_query_result(920,24328
void do_eval(924,24427
static void show_query(996,25993
static void show_warnings_before_error(1061,27498
enum arg_type1119,28744
  ARG_STRING,arg_type::ARG_STRING1121,28760
  ARG_RESTarg_type::ARG_REST1122,28774
struct command_arg 1125,28789
  const char *argname;command_arg::argname1126,28810
  enum arg_type type;command_arg::type1127,28864
  my_bool required;command_arg::required1128,28918
  DYNAMIC_STRING *ds;command_arg::ds1129,28972
  const char *description;command_arg::description1130,29028
void check_command_args(1134,29096
void handle_command_error(1222,31554
void close_connections(1260,32799
void close_statements(1281,33262
void close_files(1295,33503
void free_used_memory(1312,33854
static void cleanup_and_exit(1359,34927
void print_file_stack(1384,35329
void die(1395,35570
void abort_not_supported_test(1446,36646
void abort_not_in_this_version(1473,37255
void verbose_msg(1479,37347
void log_msg(1501,37827
int cat_file(1529,38298
static int run_command(1574,39315
static int run_tool(1616,40216
static int diff_check(1671,41567
void show_diff(1707,42345
enum compare_files_result_enum 1818,45371
   RESULT_OK=compare_files_result_enum::RESULT_OK1819,45404
   RESULT_CONTENT_MISMATCH=compare_files_result_enum::RESULT_CONTENT_MISMATCH1820,45421
   RESULT_LENGTH_MISMATCH=compare_files_result_enum::RESULT_LENGTH_MISMATCH1821,45452
int compare_files2(1838,45756
int compare_files(1899,46987
int dyn_string_cmp(1927,47510
void check_result(1973,48598
void check_require(2041,50334
static int strip_surrounding(2060,50751
static void strip_parentheses(2091,51314
static uchar *get_var_key(get_var_key2101,51590
static void var_free(2111,51817
void var_check_int(2121,51949
VAR *var_init(var_init2139,52356
VAR* var_from_env(2181,53435
VAR* var_get(2194,53685
VAR *var_obtain(var_obtain2251,55129
void var_set(2268,55554
void var_set_string(2310,56593
void var_set_int(2316,56724
void var_set_errno(2329,56995
void set_once_property(2337,57207
void set_property(2347,57417
void revert_properties(2362,57759
void var_query_set(2403,58627
set_result_format_version(2495,61037
do_result_format_version(2519,61510
void var_set_query_get_value(2569,63067
void var_copy(2678,66123
void eval_expr(2700,66755
int open_file(2777,68812
void do_source(2828,69889
char tmp_sh_name[tmp_sh_name2861,70767
char tmp_sh_name[64], tmp_sh_cmd[tmp_sh_cmd2861,70767
void init_tmp_sh_file(2864,70813
void free_tmp_sh_file(2875,71148
FILE* my_popen(2884,71244
static void init_builtin_echo(2896,71558
static int replace(2936,72390
void do_exec(2976,73576
enum enum_operator3086,76732
  DO_DEC,enum_operator::DO_DEC3088,76753
  DO_INCenum_operator::DO_INC3089,76763
int do_modify_var(3107,76972
int my_system(3148,78021
void do_system(3173,78505
void set_wild_chars 3225,79893
void do_remove_file(3259,80450
void do_remove_files_wildcard(3290,81277
void do_copy_file(3372,83696
void do_move_file(3409,84792
void do_chmod_file(3446,85783
void do_file_exist(3489,86934
void do_mkdir(3521,87734
void do_rmdir(3551,88475
static int get_list_files(3583,89281
static void do_list_files(3626,90483
static void do_list_files_write_file_command(3664,91621
int my_getc(3706,93125
void my_ungetc(3714,93246
void read_until_delimiter(3720,93306
void do_write_file_command(3769,94615
void do_write_file(3843,96581
void do_append_file(3874,97070
void do_cat_file(3892,97299
void do_diff_files(3928,98106
struct st_connection * find_connection_by_name(3973,99508
void do_send_quit(3997,99911
void do_change_user(4040,100804
void do_perl(4107,102478
int do_echo(4220,105685
void do_wait_for_slave_to_stop(4235,106093
void do_sync_with_master2(4264,106813
void do_sync_with_master(4331,108772
int do_save_master_pos(4354,109353
void do_let(4534,114919
int do_sleep(4596,116691
void do_get_file_name(4639,118099
void do_set_charset(4655,118459
int query_get_string(4680,119078
static int my_kill(4705,119706
void do_shutdown_server(4741,120290
  const char *name;::name4819,122400
  uint        code;::code4820,122420
  const char *text;::text4821,122440
} st_error;4822,122460
static st_error global_error_names[global_error_names4824,122473
uint get_errcode_from_name(4831,122588
const char *get_errname_from_code get_errname_from_code4858,123370
void do_get_errcodes(4880,123811
char *get_string(get_string5017,127157
void set_reconnect(5090,128760
void set_current_connection(5108,129206
void select_connection_name(5119,129576
void select_connection(5144,130145
void do_close_connection(5162,130774
void safe_connect(5267,133639
int connect_n_handle_errors(5337,135868
void do_connect(5454,139624
int do_done(5687,146804
enum block_op 5721,147652
  EQ_OP,block_op::EQ_OP5722,147668
  NE_OP,block_op::NE_OP5723,147677
  GT_OP,block_op::GT_OP5724,147686
  GE_OP,block_op::GE_OP5725,147695
  LT_OP,block_op::LT_OP5726,147704
  LE_OP,block_op::LE_OP5727,147713
  ILLEG_OPblock_op::ILLEG_OP5728,147722
enum block_op find_operand(5732,147738
void do_block(5787,148876
void do_delimiter(5977,153792
my_bool match_delimiter(5998,154298
my_bool end_of_query(6022,154739
int read_line(6052,155570
  enum {R_NORMAL,::R_NORMAL6059,155749
  enum {R_NORMAL, R_Q,::R_Q6059,155749
  enum {R_NORMAL, R_Q, R_SLASH_IN_Q,::R_SLASH_IN_Q6059,155749
        R_COMMENT,::R_COMMENT6060,155786
        R_COMMENT, R_LINE_START}::R_LINE_START6060,155786
void convert_to_format_v1(6270,160989
void check_eol_junk_line(6317,161881
void check_eol_junk(6337,162359
bool is_delimiter(6368,162943
#define MAX_QUERY 6399,163695
static char read_command_buf[read_command_buf6400,163766
int read_command(6402,163808
static struct my_option my_long_options[my_long_options6474,165728
void print_version(6599,171920
void usage(6605,172075
void read_embedded_server_arguments(6622,172575
get_one_option(6664,173588
int parse_args(6764,176160
void str_to_file2(6810,177166
void str_to_file(6844,178119
void check_regerr(6850,178223
DYNAMIC_ARRAY patterns;6864,178416
void init_win_path_patterns(6875,178604
void free_win_path_patterns(6926,179799
void fix_win_paths(6951,180400
void append_field(6987,181171
void append_result(7050,182714
void append_stmt_result(7075,183335
void append_metadata(7138,185254
void append_info(7190,187105
void append_table_headings(7209,187511
int append_warnings(7230,187976
void run_query_normal(7275,189075
static int match_expected_error(7421,192892
void handle_error(7467,194171
void handle_no_error(7564,197099
void run_query_stmt(7601,198237
int util_query(7812,204267
void run_query(7854,205385
char *re_eprint(re_eprint8080,211543
void init_re_comp(8089,211736
void init_re(8102,212092
int match_re(8141,213098
void free_re(8169,213691
void get_command_type(8179,213881
void mark_progress(8243,215496
static void dump_backtrace(8287,216607
static void dump_backtrace(8309,217200
static sig_handler signal_handler(8316,217293
LONG WINAPI exception_filter(8331,217598
static void init_signal_handling(8347,217910
static void init_signal_handling(8368,218580
int main(8396,219121
void timer_output(9083,240036
ulonglong timer_now(9097,240339
void do_get_replace_column(9111,240674
void free_replace_column(9144,241675
typedef struct st_pointer_array 9166,242039
  TYPELIB typelib;st_pointer_array::typelib9167,242105
  uchar	*str;st_pointer_array::str9168,242152
  uint8 *flag;st_pointer_array::flag9169,242192
  uint	array_allocs,st_pointer_array::array_allocs9170,242238
  uint	array_allocs,max_count,st_pointer_array::max_count9170,242238
  uint	array_allocs,max_count,length,st_pointer_array::length9170,242238
  uint	array_allocs,max_count,length,max_length;st_pointer_array::max_length9170,242238
} POINTER_ARRAY;9171,242287
void do_get_replace(9186,242732
void free_replace(9233,244106
typedef struct st_replace 9242,244229
  my_bool found;st_replace::found9243,244257
  struct st_replace *next[st_replace::next9244,244274
} REPLACE;9245,244306
typedef struct st_replace_found 9247,244318
  my_bool found;st_replace_found::found9248,244352
  char *replace_string;st_replace_found::replace_string9249,244369
  uint to_offset;st_replace_found::to_offset9250,244393
  int from_offset;st_replace_found::from_offset9251,244411
} REPLACE_STRING;9252,244430
void replace_strings_append(9255,244450
struct st_regex9314,246154
  char* pattern;st_regex::pattern9316,246172
  char* replace;st_regex::replace9317,246218
  int icase;st_regex::icase9318,246290
#define PARSE_REGEX_ARG 9331,246598
struct st_replace_regex* init_replace_regex(9361,247912
int multi_reg_replace(9461,250404
void do_get_replace_regex(9515,251619
void free_replace_regex(9530,252061
#define SECURE_REG_BUF 9548,252421
int reg_replace(9568,253374
#define WORD_BIT 9742,257526
#define SET_MALLOC_HUNC 9745,257568
#define LAST_CHAR_CODE 9746,257595
typedef struct st_rep_set 9748,257623
  uint	*bits;st_rep_set::bits9749,257651
  short next[st_rep_set::next9750,257695
  uint	found_len;st_rep_set::found_len9751,257753
  int	found_offset;st_rep_set::found_offset9752,257798
  uint	table_offset;st_rep_set::table_offset9753,257818
  uint	size_of_bits;st_rep_set::size_of_bits9754,257839
} REP_SET;9755,257884
typedef struct st_rep_sets 9757,257896
  uint		count;st_rep_sets::count9758,257925
  uint		extra;st_rep_sets::extra9759,257963
  uint		invisible;st_rep_sets::invisible9760,258007
  uint		size_of_bits;st_rep_sets::size_of_bits9761,258048
  REP_SET	*set,st_rep_sets::set9762,258070
  REP_SET	*set,*set_buffer;st_rep_sets::set_buffer9762,258070
  uint		*bit_buffer;st_rep_sets::bit_buffer9763,258098
} REP_SETS;9764,258119
typedef struct st_found_set 9766,258132
  uint table_offset;st_found_set::table_offset9767,258162
  int found_offset;st_found_set::found_offset9768,258183
} FOUND_SET;9769,258203
typedef struct st_follow 9771,258217
  int chr;st_follow::chr9772,258244
  uint table_offset;st_follow::table_offset9773,258255
  uint len;st_follow::len9774,258276
} FOLLOWS;9775,258288
static uint found_sets=9795,258957
uint replace_len(9798,258985
REPLACE *init_replace(init_replace9811,259142
int init_sets(10066,266360
void make_sets_invisible(10084,266823
REP_SET *make_new_set(make_new_set10091,266943
void free_last_set(10128,268005
void free_sets(10135,268089
void internal_set_bit(10142,268193
void internal_clear_bit(10148,268308
void or_bits(10155,268430
void copy_bits(10163,268573
int cmp_bits(10169,268715
int get_next_bit(10178,268889
int find_set(10203,269443
int find_found(10224,270017
uint start_at_word(10239,270462
uint end_of_word(10245,270591
#define PC_MALLOC	10256,270952
#define PS_MALLOC	10257,271000
int insert_pointer_name(10259,271045
void free_pointer_array(10332,273594
void replace_dynstr_append_mem(10347,273921
void replace_dynstr_append(10387,274776
void replace_dynstr_append_uint(10393,274943
static int comp_lines(10414,275438
void dynstr_append_sorted(10419,275523
static int setenv(10471,276756

client/readline.cc,372
LINE_BUFFER *batch_readline_init(batch_readline_init33,1180
char *batch_readline(batch_readline57,1736
void batch_readline_end(73,2149
LINE_BUFFER *batch_readline_command(batch_readline_command83,2284
init_line_buffer(103,2855
static bool init_line_buffer_from_string(121,3408
static size_t fill_buffer(148,4215
char *intern_read_line(intern_read_line218,6035

client/sql_string.cc,1279
bool String::real_alloc(36,1233
bool String::realloc(61,1767
bool String::set(93,2593
bool String::set(104,2814
bool String::set(115,3035
bool String::copy(133,3504
bool String::copy(143,3643
bool String::copy(154,3884
bool String::needs_conversion(188,4671
bool String::copy_aligned(230,5626
bool String::set_or_copy_aligned(256,6382
bool String::copy(272,6784
bool String::set_ascii(315,7861
bool String::fill(329,8154
void String::strip_sp(343,8441
bool String::append(349,8555
bool String::append(366,8851
bool String::append(401,9640
bool String::append(412,9809
bool String::append(437,10451
bool String::append(451,10745
bool String::append_with_prefill(464,11013
uint32 String::numchars(481,11441
int String::charpos(486,11544
int String::strstr(493,11696
int String::strrstr(524,12375
bool String::replace(556,13077
bool String::replace(561,13211
int String::reserve(593,13954
void String::qs_append(603,14175
void String::qs_append(609,14295
void String::qs_append(616,14475
void String::qs_append(623,14572
void String::qs_append(630,14713
int sortcmp(656,15109
int stringcmp(682,15604
String *copy_if_not_alloced(copy_if_not_alloced690,15814
copy_and_convert(732,16841
void String::print(786,18083
void String::swap(829,18875

libmysqld/emb_qcache.cc,836
void Querycache_stream::store_uchar(25,976
void Querycache_stream::store_short(35,1141
void Querycache_stream::store_int(58,1546
void Querycache_stream::store_ll(85,2037
void Querycache_stream::store_str_only(110,2509
void Querycache_stream::store_str(131,2930
void Querycache_stream::store_safe_str(137,3054
uchar Querycache_stream::load_uchar(148,3233
ushort Querycache_stream::load_short(155,3355
uint Querycache_stream::load_int(177,3772
ulonglong Querycache_stream::load_ll(203,4275
void Querycache_stream::load_str_only(227,4765
char *Querycache_stream::load_str(Querycache_stream::load_str247,5180
int Querycache_stream::load_safe_str(257,5415
int Querycache_stream::load_column(271,5701
uint emb_count_querycache_size(288,6041
void emb_store_querycache_result(340,7375
int emb_load_querycache_result(404,9266

libmysqld/lib_sql.cc,1940
#define main 22,662
#define mysql_unix_port 23,681
#define mysql_port 24,722
#undef ER36,894
extern "C" void unireg_clear(45,1107
static void embedded_error_handler(58,1488
void embedded_get_error(87,2332
emb_advanced_command(99,2712
static void emb_flush_use_result(174,4637
emb_read_rows(207,5242
static MYSQL_FIELD *emb_list_fields(emb_list_fields222,5630
static my_bool emb_read_prepare_result(235,5939
static void emb_fetch_lengths(271,7032
static my_bool emb_read_query_result(280,7274
static int emb_stmt_execute(321,8308
int emb_read_binary_rows(351,9205
int emb_read_rows_from_cursor(365,9486
int emb_unbuffered_fetch(387,10058
static void emb_free_embedded_thd(415,10594
static const char * emb_read_statistics(427,10835
static MYSQL_RES * emb_store_result(434,10982
int emb_read_change_user_result(439,11073
MYSQL_METHODS embedded_methods=445,11258
char **copy_arguments(copy_arguments469,11737
char **		copy_arguments_ptr=491,12233
int init_embedded_server(493,12266
void end_embedded_server(620,15094
void init_embedded_mysql(628,15197
void *create_embedded_thd(create_embedded_thd648,15824
int check_embedded_connection(694,16892
int check_embedded_connection(717,17710
void THD::clear_data_list(780,19287
static char *dup_str_aux(dup_str_aux794,19512
MYSQL_DATA *THD::alloc_new_dataset(THD::alloc_new_dataset835,20508
write_eof_packet(865,21164
int Protocol::begin_dataset(898,22111
void Protocol_text::remove_last_row(922,22604
bool Protocol::send_result_set_metadata(939,22977
bool Protocol::write(1049,27092
bool Protocol_binary::write(1058,27230
net_send_ok(1102,28504
net_send_eof(1137,29362
bool net_send_error_packet(1145,29548
void Protocol_text::prepare_for_resend(1177,30491
bool Protocol_text::store_null(1205,31175
bool Protocol::net_store_data(1212,31276
#define vsnprintf 1232,31857
int vprint_msg_to_log(1235,31894
bool Protocol::net_store_data(1245,32179

mysys/my_new.cc,213
void *operator new operator new26,952
void *operator new[] operator new[]31,1028
void operator delete operator delete36,1106
void operator delete[] operator delete[]42,1170
int __cxa_pure_virtual(50,1259

sql/datadict.cc,148
frm_type_enum dd_frm_type(34,1167
bool dd_frm_storage_engine(82,2695
bool dd_check_storage_engine_flag(137,4287
bool dd_recreate_table(163,4883

sql/debug_sync.cc,3206
struct st_debug_sync_action339,12941
  ulong         activation_count;st_debug_sync_action::activation_count341,12971
  ulong         hit_limit;st_debug_sync_action::hit_limit342,13041
  ulong         execute;st_debug_sync_action::execute343,13110
  ulong         timeout;st_debug_sync_action::timeout344,13183
  String        signal;st_debug_sync_action::signal345,13246
  String        wait_for;st_debug_sync_action::wait_for346,13307
  String        sync_point;st_debug_sync_action::sync_point347,13372
  bool          need_sort;st_debug_sync_action::need_sort348,13434
struct st_debug_sync_control352,13561
  st_debug_sync_action  *ds_action;st_debug_sync_control::ds_action354,13592
  uint                  ds_active;st_debug_sync_control::ds_active355,13663
  uint                  ds_allocated;st_debug_sync_control::ds_allocated356,13734
  ulonglong             dsp_hits;st_debug_sync_control::dsp_hits357,13808
  ulonglong             dsp_executed;st_debug_sync_control::dsp_executed358,13873
  ulonglong             dsp_max_active;st_debug_sync_control::dsp_max_active359,13938
  char                  ds_proc_info[st_debug_sync_control::ds_proc_info364,14119
struct st_debug_sync_globals374,14434
  String                ds_signal;st_debug_sync_globals::ds_signal376,14465
  mysql_cond_t          ds_cond;st_debug_sync_globals::ds_cond377,14535
  mysql_mutex_t         ds_mutex;st_debug_sync_globals::ds_mutex378,14608
  ulonglong             dsp_hits;st_debug_sync_globals::dsp_hits379,14677
  ulonglong             dsp_executed;st_debug_sync_globals::dsp_executed380,14742
  ulonglong             dsp_max_active;st_debug_sync_globals::dsp_max_active381,14807
static st_debug_sync_globals debug_sync_global;383,14875
static void debug_sync_C_callback(429,16690
static PSI_mutex_key key_debug_sync_globals_ds_mutex;437,16931
static PSI_mutex_info all_debug_sync_mutexes[all_debug_sync_mutexes439,16986
static PSI_cond_key key_debug_sync_globals_ds_cond;444,17116
static PSI_cond_info all_debug_sync_conds[all_debug_sync_conds446,17169
static void init_debug_sync_psi_keys(451,17294
int debug_sync_init(476,17832
void debug_sync_end(512,18704
static void debug_sync_emergency_disable(553,19901
void debug_sync_init_thread(575,20353
void debug_sync_end_thread(604,20985
static char *debug_sync_bmove_len(debug_sync_bmove_len659,22545
static void debug_sync_action_string(681,23098
static void debug_sync_print_actions(739,24784
static int debug_sync_qsort_cmp(777,25838
static st_debug_sync_action *debug_sync_find(debug_sync_find809,26810
static void debug_sync_reset(861,28030
static void debug_sync_remove_action(893,28907
static st_debug_sync_action *debug_sync_get_action(debug_sync_get_action965,31409
static bool debug_sync_set_action(1075,35690
static char *debug_sync_token(debug_sync_token1194,40191
static char *debug_sync_number(debug_sync_number1264,41914
static bool debug_sync_eval_action(1318,43401
bool debug_sync_update(1592,50318
uchar *debug_sync_value_ptr(debug_sync_value_ptr1623,51114
static void debug_sync_execute(1673,52467
void debug_sync(1859,59343
bool debug_sync_set_action(1916,61004

sql/derror.cc,161
static const char **get_server_errmsgs(get_server_errmsgs35,1130
bool init_errmessage(57,1604
bool read_texts(99,2783
static void init_myfunc_errs(199,5846

sql/des_key_file.cc,149
struct st_des_keyschedule des_keyschedule[des_keyschedule24,974
uint   des_default_key;25,1021
#define des_cs	27,1046
load_des_key_file(41,1251

sql/discover.cc,44
int readfrm(48,1300
int writefrm(109,2707

sql/event_data_objects.cc,1424
#define MYSQL_LEX 16,745
class Event_creation_ctx 46,1821
  virtual Stored_program_creation_ctx *clone(Event_creation_ctx::clone58,2242
  virtual Object_creation_ctx *create_backup_ctx(Event_creation_ctx::create_backup_ctx65,2427
  Event_creation_ctx(Event_creation_ctx::Event_creation_ctx77,2741
Event_creation_ctx::load_from_db(89,3151
Event_queue_element_for_exec::init(173,5552
Event_queue_element_for_exec::~Event_queue_element_for_exec(193,5957
Event_basic::Event_basic(207,6133
Event_basic::~Event_basic(226,6437
Event_basic::load_string_fields(246,6884
Event_basic::load_time_zone(276,7561
Event_queue_element::Event_queue_element(292,7825
Event_queue_element::~Event_queue_element(312,8272
Event_timed::Event_timed(324,8386
Event_timed::~Event_timed(340,8595
Event_job_data::Event_job_data(352,8699
Event_timed::init(365,8828
Event_job_data::load_from_row(391,9418
Event_queue_element::load_from_row(452,10991
Event_timed::load_from_row(590,15184
add_interval(653,16994
bool get_next_time(689,17997
Event_queue_element::compute_next_execution_time(910,25778
Event_queue_element::mark_last_executed(1138,32282
append_datetime(1148,32421
Event_timed::get_create_event(1182,33448
Event_job_data::construct_sp_sql(1250,35479
Event_job_data::construct_drop_event_sql(1299,36895
Event_job_data::execute(1329,37704
event_basic_db_equal(1506,42928
event_basic_identifier_equal(1527,43281

sql/event_db_repository.cc,859
const TABLE_FIELD_TYPE event_table_fields[event_table_fields39,1530
  event_table_def=165,4958
class Event_db_intact 167,5016
  void report_error(Event_db_intact::report_error170,5079
static Event_db_intact table_intact;180,5312
mysql_event_fill_row(199,5740
Event_db_repository::index_read_for_db_for_i_s(405,12137
Event_db_repository::table_scan_all_for_i_s(491,14565
Event_db_repository::fill_schema_events(535,15814
Event_db_repository::open_event_table(602,18086
Event_db_repository::create_event(649,19525
Event_db_repository::update_event(768,23103
Event_db_repository::drop_event(882,26652
Event_db_repository::find_named_event(943,28220
Event_db_repository::drop_schema_events(988,29622
Event_db_repository::load_named_event(1046,31432
update_timing_fields_for_event(1100,33102
Event_db_repository::check_system_tables(1178,35332

sql/event_parse_data.cc,563
Event_parse_data::new_instance(37,1102
Event_parse_data::Event_parse_data(50,1270
Event_parse_data::init_name(80,1983
Event_parse_data::check_if_in_the_past(114,3098
Event_parse_data::check_dates(174,4811
Event_parse_data::init_execute_at(202,5379
Event_parse_data::init_interval(257,6634
Event_parse_data::init_starts(372,9670
Event_parse_data::init_ends(426,10896
Event_parse_data::report_bad_value(475,11992
Event_parse_data::check_parse_data(497,12503
Event_parse_data::init_definer(525,13172
void Event_parse_data::check_originator_id(566,14540

sql/event_queue.cc,1076
#define EVENT_QUEUE_INITIAL_SIZE 32,1116
#define EVENT_QUEUE_EXTENT 33,1152
#define SCHED_FUNC 37,1223
#define SCHED_FUNC 40,1268
#define LOCK_QUEUE_DATA(43,1307
#define UNLOCK_QUEUE_DATA(44,1367
int event_queue_element_compare_q(68,2045
Event_queue::Event_queue(92,2612
Event_queue::~Event_queue(109,3153
Event_queue::init_queue(134,3711
Event_queue::deinit_queue(167,4379
Event_queue::create_event(199,5194
Event_queue::update_event(240,6335
Event_queue::drop_event(289,7583
Event_queue::drop_matching_events(327,8483
Event_queue::drop_schema_events(379,10113
Event_queue::find_n_remove_event(403,10672
Event_queue::recalculate_activation_times(439,11691
Event_queue::empty_queue(495,13207
Event_queue::dbug_dump_queue(522,13818
static const char *queue_empty_msg=queue_empty_msg547,14803
static const char *queue_wait_msg=queue_wait_msg548,14865
Event_queue::get_top_for_execution_if_time(566,15372
Event_queue::lock_data(693,18914
Event_queue::unlock_data(724,19736
Event_queue::cond_wait(749,20423
Event_queue::dump_internal_status(792,21410

sql/events.cc,1545
Event_queue *Events::event_queue;Events::event_queue78,3343
Event_scheduler *Events::scheduler;Events::scheduler79,3377
Event_db_repository *Events::db_repository;Events::db_repository80,3413
ulong Events::opt_event_scheduler=81,3457
bool Events::check_system_tables_error=82,3512
int sortcmp_lex_string(100,3778
bool Events::check_if_system_tables_error(112,4065
Events::reconstruct_interval_expression(145,4800
create_query_string(272,8208
Events::create_event(306,9217
Events::update_event(428,13247
Events::drop_event(548,17431
Events::drop_schema_events(599,19007
send_show_create_event(624,19551
Events::show_create_event(703,22067
Events::fill_schema_events(753,23629
Events::init(797,24938
Events::deinit(905,27675
PSI_mutex_key key_LOCK_event_queue,924,28085
              key_event_scheduler_LOCK_scheduler_state;925,28121
static PSI_mutex_info all_events_mutexes[all_events_mutexes927,28178
PSI_cond_key key_event_scheduler_COND_state,933,28398
PSI_cond_key key_event_scheduler_COND_state, key_COND_queue_state;933,28398
static PSI_cond_info all_events_conds[all_events_conds935,28466
PSI_thread_key key_thread_event_scheduler,941,28664
PSI_thread_key key_thread_event_scheduler, key_thread_event_worker;941,28664
static PSI_thread_info all_events_threads[all_events_threads943,28733
static void init_events_psi_keys(949,28903
Events::init_mutexes(977,29490
Events::dump_internal_status(996,29849
bool Events::start(1020,30493
bool Events::stop(1025,30548
Events::load_events_from_db(1049,31163

sql/event_scheduler.cc,1164
#define SCHED_FUNC 33,1121
#define SCHED_FUNC 36,1166
#define LOCK_DATA(39,1205
#define UNLOCK_DATA(40,1263
#define COND_STATE_WAIT(41,1323
Event_db_repository *Event_worker_thread::db_repository;Event_worker_thread::db_repository47,1475
const LEX_STRING scheduler_states_names[scheduler_states_names51,1541
struct scheduler_param 58,1703
  THD *thd;scheduler_param::thd59,1728
  Event_scheduler *scheduler;scheduler_param::scheduler60,1740
Event_worker_thread::print_warnings(76,2046
post_init_event_thread(126,3578
deinit_event_thread(153,4052
pre_init_event_thread(183,4817
event_scheduler_thread(227,5932
event_worker_thread(264,6784
Event_worker_thread::run(292,7420
Event_scheduler::Event_scheduler(337,8603
Event_scheduler::~Event_scheduler(355,9150
Event_scheduler::start(379,9780
Event_scheduler::run(457,11851
Event_scheduler::execute_top(523,13530
Event_scheduler::is_running(588,15302
Event_scheduler::stop(613,15764
Event_scheduler::workers_count(678,18141
Event_scheduler::lock_data(706,18804
Event_scheduler::unlock_data(729,19391
Event_scheduler::cond_wait(754,20098
Event_scheduler::dump_internal_status(795,21167

sql/field.cc,17375
#define MAX_EXPONENT 46,1838
uchar Field_null::null[Field_null::null57,2200
const char field_separator=58,2231
#define DOUBLE_TO_STRING_CONVERSION_BUFFER_SIZE 60,2264
#define LONGLONG_TO_STRING_CONVERSION_BUFFER_SIZE 61,2334
#define DECIMAL_TO_STRING_CONVERSION_BUFFER_SIZE 62,2388
#define BLOB_PACK_LENGTH_TO_MAX_LENGH(63,2441
#define ASSERT_COLUMN_MARKED_FOR_READ 66,2534
#define ASSERT_COLUMN_MARKED_FOR_WRITE 67,2661
#define FLAGSTR(69,2792
#define FIELDTYPE_TEAR_FROM 78,3087
#define FIELDTYPE_TEAR_TO 79,3136
#define FIELDTYPE_NUM 80,3192
inline int field_type2index 81,3264
static enum_field_types field_types_merge_rules 89,3474
enum_field_types Field::field_type_merge(940,39653
static Item_result field_types_result_type 950,40020
test_if_important_data(1000,41665
int compare(1016,42053
Item_result Field::result_merge_type(1036,42370
static void push_numerical_conversion_warning(1060,43306
bool Field::type_can_have_key_part(1092,44423
Field_num::Field_num(1113,44832
void Field_num::prepend_zeros(1128,45345
int Field_num::check_int(1164,46185
bool Field_num::get_int(1211,47603
int Field::warn_if_overflow(1265,48886
String *Field::val_int_as_str(Field::val_int_as_str1287,49404
Field::Field(1306,50073
void Field::hash(1324,50655
Field::do_last_null_byte(1339,50888
void Field::copy_from_tmp(1348,51094
bool Field::send_binary(1359,51324
bool Field::compatible_field_size(1402,52960
int Field::store(1416,53564
Field::pack(1466,55398
Field::unpack(1506,56851
my_decimal *Field::val_decimal(Field::val_decimal1537,57593
void Field_num::add_zerofill_and_unsigned(1545,57718
void Field::make_field(1554,57914
longlong Field::convert_decimal2longlong(1598,59173
int Field_num::store_decimal(1643,60236
my_decimal* Field_num::val_decimal(1666,60809
Field_str::Field_str(1676,61075
void Field_num::make_field(1689,61530
int Field_str::store_decimal(1715,62075
my_decimal *Field_str::val_decimal(Field_str::val_decimal1726,62378
uint Field::fill_cache_field(1735,62588
bool Field::get_date(1763,63139
bool Field::get_time(1774,63477
int Field::store_time(1791,63870
bool Field::optimize_range(1802,64268
Field *Field::new_field(Field::new_field1808,64393
Field *Field::new_key_field(Field::new_key_field1829,64989
Field *Field::clone(Field::clone1846,65426
void Field_null::sql_type(1863,65956
Field_decimal::reset(1875,66313
void Field_decimal::overflow(1881,66419
int Field_decimal::store(1920,67294
int Field_decimal::store(2286,78956
int Field_decimal::store(2325,79619
double Field_decimal::val_real(2361,80349
longlong Field_decimal::val_int(2370,80573
String *Field_decimal::val_str(Field_decimal::val_str2382,80888
int Field_decimal::cmp(2404,81489
void Field_decimal::sort_string(2437,82284
void Field_decimal::sql_type(2463,82827
Field_new_decimal::Field_new_decimal(2481,83315
Field_new_decimal::Field_new_decimal(2499,84179
Field *Field_new_decimal::create_from_item Field_new_decimal::create_from_item2516,84875
int Field_new_decimal::reset(2560,86094
void Field_new_decimal::set_value_on_overflow(2574,86347
bool Field_new_decimal::store_value(2605,87057
int Field_new_decimal::store(2649,88492
int Field_new_decimal::store(2711,90604
int Field_new_decimal::store(2735,91249
int Field_new_decimal::store_decimal(2757,91867
int Field_new_decimal::store_time(2764,92014
double Field_new_decimal::val_real(2771,92190
longlong Field_new_decimal::val_int(2781,92401
my_decimal* Field_new_decimal::val_decimal(2792,92638
String *Field_new_decimal::val_str(Field_new_decimal::val_str2804,93048
int Field_new_decimal::cmp(2817,93493
void Field_new_decimal::sort_string(2823,93589
void Field_new_decimal::sql_type(2830,93748
int Field_new_decimal::do_save_field_metadata(2850,94355
uint Field_new_decimal::pack_length_from_metadata(2870,94935
bool Field_new_decimal::compatible_field_size(2880,95297
uint Field_new_decimal::is_equal(2893,95855
Field_new_decimal::unpack(2918,96698
int Field_tiny::store(2962,98359
int Field_tiny::store(2974,98631
int Field_tiny::store(3017,99458
double Field_tiny::val_real(3062,100424
longlong Field_tiny::val_int(3071,100597
String *Field_tiny::val_str(Field_tiny::val_str3080,100773
bool Field_tiny::send_binary(3104,101428
int Field_tiny::cmp(3109,101539
void Field_tiny::sort_string(3118,101815
void Field_tiny::sql_type(3126,102003
int Field_short::store(3138,102425
int Field_short::store(3159,102885
int Field_short::store(3211,103908
double Field_short::val_real(3266,105060
longlong Field_short::val_int(3279,105326
String *Field_short::val_str(Field_short::val_str3293,105598
bool Field_short::send_binary(3323,106359
int Field_short::cmp(3329,106471
void Field_short::sort_string(3351,106910
void Field_short::sql_type(3373,107351
int Field_medium::store(3386,107778
int Field_medium::store(3400,108117
int Field_medium::store(3446,109138
double Field_medium::val_real(3495,110302
longlong Field_medium::val_int(3503,110464
String *Field_medium::val_str(Field_medium::val_str3511,110629
bool Field_medium::send_binary(3531,111227
int Field_medium::cmp(3538,111373
void Field_medium::sort_string(3554,111633
void Field_medium::sql_type(3565,111859
int Field_long::store(3577,112267
int Field_long::store(3598,112720
int Field_long::store(3650,113608
double Field_long::val_real(3703,114553
longlong Field_long::val_int(3716,114809
String *Field_long::val_str(Field_long::val_str3731,115171
bool Field_long::send_binary(3760,115901
int Field_long::cmp(3766,116042
void Field_long::sort_string(3786,116441
void Field_long::sql_type(3813,116970
int Field_longlong::store(3825,117392
int Field_longlong::store(3855,118033
int Field_longlong::store(3907,118933
double Field_longlong::val_real(3938,119625
longlong Field_longlong::val_int(3960,120022
String *Field_longlong::val_str(Field_longlong::val_str3974,120244
bool Field_longlong::send_binary(4000,120881
int Field_longlong::cmp(4007,121050
void Field_longlong::sort_string(4028,121480
void Field_longlong::sql_type(4063,122189
Field_real::pack(4077,122468
Field_real::unpack(4096,122946
int Field_float::store(4117,123574
int Field_float::store(4134,124038
int Field_float::store(4152,124324
double Field_float::val_real(4159,124505
longlong Field_float::val_int(4174,124746
String *Field_float::val_str(Field_float::val_str4189,124962
int Field_float::cmp(4233,126002
#define FLT_EXP_DIG 4251,126334
void Field_float::sort_string(4253,126386
bool Field_float::send_binary(4296,127327
int Field_float::do_save_field_metadata(4312,127700
void Field_float::sql_type(4319,127811
int Field_double::store(4339,128354
int Field_double::store(4356,128823
int Field_double::store(4373,129082
int Field_real::truncate(4385,129441
int Field_real::store_decimal(4441,130618
double Field_double::val_real(4448,130760
longlong Field_double::val_int(4463,130982
my_decimal *Field_real::val_decimal(Field_real::val_decimal4504,131899
String *Field_double::val_str(Field_double::val_str4512,132092
bool Field_double::send_binary(4548,132948
int Field_double::cmp(4554,133084
#define DBL_EXP_DIG 4573,133393
void Field_double::sort_string(4577,133488
int Field_double::do_save_field_metadata(4602,134010
void Field_double::sql_type(4609,134122
Field_timestamp::Field_timestamp(4669,136913
Field_timestamp::Field_timestamp(4691,137635
timestamp_auto_set_type Field_timestamp::get_auto_set_type(4711,138279
int Field_timestamp::store(4740,139051
int Field_timestamp::store(4787,140564
int Field_timestamp::store(4803,140967
double Field_timestamp::val_real(4846,142284
longlong Field_timestamp::val_int(4852,142407
String *Field_timestamp::val_str(Field_timestamp::val_str4878,143072
bool Field_timestamp::get_date(4952,144929
bool Field_timestamp::get_time(4976,145474
bool Field_timestamp::send_binary(4982,145575
int Field_timestamp::cmp(4990,145720
void Field_timestamp::sort_string(5009,146066
void Field_timestamp::sql_type(5030,146412
void Field_timestamp::set_time(5036,146515
int Field_time::store(5051,146947
int Field_time::store_time(5093,148009
int Field_time::store(5103,148299
int Field_time::store(5141,149233
double Field_time::val_real(5179,150231
longlong Field_time::val_int(5186,150361
String *Field_time::val_str(Field_time::val_str5199,150578
bool Field_time::get_date(5229,151312
bool Field_time::get_time(5244,151774
bool Field_time::send_binary(5264,152181
int Field_time::cmp(5274,152388
void Field_time::sort_string(5282,152567
void Field_time::sql_type(5289,152718
int Field_year::store(5300,153059
int Field_year::store(5337,153863
int Field_year::store(5348,154058
bool Field_year::send_binary(5369,154531
double Field_year::val_real(5377,154696
longlong Field_year::val_int(5383,154777
String *Field_year::val_str(Field_year::val_str5396,155052
void Field_year::sql_type(5409,155433
int Field_date::store(5424,155899
int Field_date::store(5460,156811
int Field_date::store(5479,157268
bool Field_date::send_binary(5520,158388
double Field_date::val_real(5531,158641
longlong Field_date::val_int(5545,158878
String *Field_date::val_str(Field_date::val_str5559,159118
bool Field_date::get_time(5582,159729
int Field_date::cmp(5589,159836
void Field_date::sort_string(5608,160181
void Field_date::sql_type(5628,160521
int Field_newdate::store(5659,161417
int Field_newdate::store(5696,162604
int Field_newdate::store(5709,162926
int Field_newdate::store_time(5745,164020
bool Field_newdate::send_binary(5790,165561
double Field_newdate::val_real(5798,165706
longlong Field_newdate::val_int(5805,165826
String *Field_newdate::val_str(Field_newdate::val_str5814,166013
bool Field_newdate::get_date(5844,166845
bool Field_newdate::get_time(5857,167258
int Field_newdate::cmp(5863,167355
void Field_newdate::sort_string(5872,167541
void Field_newdate::sql_type(5880,167680
int Field_datetime::store(5893,168109
int Field_datetime::store(5930,169216
int Field_datetime::store(5946,169592
int Field_datetime::store_time(5984,170592
bool Field_datetime::send_binary(6029,171949
double Field_datetime::val_real(6037,172106
longlong Field_datetime::val_int(6042,172194
String *Field_datetime::val_str(Field_datetime::val_str6056,172425
bool Field_datetime::get_date(6106,173934
bool Field_datetime::get_time(6125,174560
int Field_datetime::cmp(6130,174658
void Field_datetime::sort_string(6149,175033
void Field_datetime::sql_type(6178,175538
check_string_copy_error(6215,176651
Field_longstr::report_if_important_data(6262,178196
int Field_string::store(6287,178934
int Field_str::store(6328,180380
uint Field::is_equal(6351,181059
uint Field_str::is_equal(6357,181158
int Field_string::store(6368,181439
int Field_longstr::store_decimal(6379,181727
uint32 Field_longstr::max_data_length(6387,181994
double Field_string::val_real(6393,182100
longlong Field_string::val_int(6417,182836
String *Field_string::val_str(Field_string::val_str6441,183579
my_decimal *Field_string::val_decimal(Field_string::val_decimal6460,184256
struct Check_field_param 6478,184844
  Field *field;Check_field_param::field6479,184871
check_field_for_37426(6484,184927
Field_string::compatible_field_size(6497,185373
int Field_string::cmp(6512,185969
void Field_string::sort_string(6535,186689
void Field_string::sql_type(6543,186878
uchar *Field_string::pack(Field_string::pack6563,187632
Field_string::unpack(6621,189652
int Field_string::do_save_field_metadata(6689,192094
uint Field_string::packed_col_length(6701,192473
uint Field_string::max_packed_col_length(6709,192637
uint Field_string::get_key_image(6715,192749
Field *Field_string::new_field(Field_string::new_field6728,193208
const uint Field_varstring::MAX_SIZE=6771,194819
int Field_varstring::do_save_field_metadata(6784,195200
int Field_varstring::store(6791,195368
int Field_varstring::store(6821,196420
double Field_varstring::val_real(6835,196996
longlong Field_varstring::val_int(6858,197704
String *Field_varstring::val_str(Field_varstring::val_str6880,198440
my_decimal *Field_varstring::val_decimal(Field_varstring::val_decimal6890,198733
int Field_varstring::cmp_max(6908,199334
int Field_varstring::key_cmp(6942,200208
int Field_varstring::key_cmp(6967,201149
void Field_varstring::sort_string(6978,201562
enum ha_base_keytype Field_varstring::key_type(6999,202095
void Field_varstring::sql_type(7011,202370
uint32 Field_varstring::data_length(7028,202954
uchar *Field_varstring::pack(Field_varstring::pack7038,203173
Field_varstring::unpack(7075,204237
uint Field_varstring::packed_col_length(7101,204838
uint Field_varstring::max_packed_col_length(7109,205005
uint Field_varstring::get_key_image(7114,205119
void Field_varstring::set_key_image(7137,205886
int Field_varstring::cmp_binary(7145,206138
Field *Field_varstring::new_field(Field_varstring::new_field7168,206655
Field *Field_varstring::new_key_field(Field_varstring::new_key_field7179,206990
uint Field_varstring::is_equal(7198,207688
void Field_varstring::hash(7214,208190
Field_blob::Field_blob(7235,208757
void Field_blob::store_length(7251,209401
uint32 Field_blob::get_length(7286,210084
void Field_blob::put_length(7332,211066
int Field_blob::store(7351,211348
int Field_blob::store(7436,214096
int Field_blob::store(7444,214273
double Field_blob::val_real(7452,214470
longlong Field_blob::val_int(7469,214812
String *Field_blob::val_str(Field_blob::val_str7481,215086
my_decimal *Field_blob::val_decimal(Field_blob::val_decimal7495,215451
int Field_blob::cmp(7515,215850
int Field_blob::cmp_max(7524,216119
int Field_blob::cmp_binary(7537,216539
uint Field_blob::get_key_image(7558,217104
void Field_blob::set_key_image(7613,218532
int Field_blob::key_cmp(7621,218744
int Field_blob::key_cmp(7636,219271
int Field_blob::do_save_field_metadata(7653,219697
uint32 Field_blob::sort_length(7662,219949
void Field_blob::sort_string(7669,220128
void Field_blob::sql_type(7712,221016
uchar *Field_blob::pack(Field_blob::pack7731,221454
const uchar *Field_blob::unpack(Field_blob::unpack7775,222882
uint Field_blob::packed_col_length(7795,223772
uint Field_blob::max_packed_col_length(7803,223934
uint Field_blob::is_equal(7809,224044
void Field_geom::sql_type(7822,224392
int Field_geom::store(7854,225195
int Field_geom::store(7862,225350
int Field_geom::store_decimal(7870,225526
int Field_geom::store(7878,225698
enum ha_base_keytype Field_enum::key_type(7919,226970
void Field_enum::store_type(7930,227244
int Field_enum::store(7974,228029
int Field_enum::store(8017,229251
int Field_enum::store(8023,229340
double Field_enum::val_real(8041,229727
longlong Field_enum::val_int(8047,229808
int Field_enum::do_save_field_metadata(8104,230913
String *Field_enum::val_str(Field_enum::val_str8112,231059
int Field_enum::cmp(8125,231413
void Field_enum::sort_string(8136,231670
void Field_enum::sql_type(8148,231911
Field *Field_enum::new_field(Field_enum::new_field8172,232510
int Field_set::store(8192,233031
int Field_set::store(8232,234240
String *Field_set::val_str(Field_set::val_str8254,234680
void Field_set::sql_type(8291,235499
bool Field::eq_def(8321,236203
static bool compare_type_names(8336,236515
bool Field_enum::eq_def(8353,236962
uint Field_enum::is_equal(8379,237564
uchar *Field_enum::pack(Field_enum::pack8409,238472
const uchar *Field_enum::unpack(Field_enum::unpack8432,239127
bool Field_num::eq_def(8461,239875
uint Field_num::is_equal(8481,240351
Field_bit::Field_bit(8521,241510
void Field_bit::hash(8543,242419
Field_bit::do_last_null_byte(8561,242716
Field *Field_bit::new_key_field(Field_bit::new_key_field8587,243427
uint Field_bit::is_equal(8607,244088
int Field_bit::store(8614,244270
int Field_bit::store(8661,245419
int Field_bit::store(8667,245506
int Field_bit::store_decimal(8676,245636
double Field_bit::val_real(8684,245799
longlong Field_bit::val_int(8690,245878
String *Field_bit::val_str(Field_bit::val_str8714,246507
my_decimal *Field_bit::val_decimal(Field_bit::val_decimal8731,246987
int Field_bit::cmp_max(8752,247691
int Field_bit::key_cmp(8768,248096
int Field_bit::cmp_offset(8783,248366
uint Field_bit::get_key_image(8797,248697
int Field_bit::do_save_field_metadata(8822,249327
uint Field_bit::pack_length_from_metadata(8850,250258
Field_bit::compatible_field_size(8860,250531
void Field_bit::sql_type(8891,251617
Field_bit::pack(8901,251886
Field_bit::unpack(8949,253268
void Field_bit::set_default(9011,255588
Field_bit_as_char::Field_bit_as_char(9026,255917
int Field_bit_as_char::store(9039,256387
void Field_bit_as_char::sql_type(9066,257164
void Create_field::create_length_to_internal_length(9083,257714
void Create_field::init_for_tmp_table(9134,259010
bool Create_field::init(9262,262768
enum_field_types get_blob_type_from_length(9629,274203
uint32 calc_pack_length(9648,274567
uint pack_length_to_packflag(9685,275868
Field *make_field(make_field9698,276253
Create_field::Create_field(9884,282821
uint32 Field_blob::char_length(9995,286379
uint32 Field_blob::max_display_length(10021,286722
Field::set_warning(10065,287950
Field::set_datetime_warning(10101,289155
Field::set_datetime_warning(10130,290277
Field::set_datetime_warning(10161,291349

sql/field_conv.cc,1436
static void do_field_eq(31,1014
static void do_field_1(36,1118
static void do_field_2(41,1201
static void do_field_3(47,1321
static void do_field_4(54,1478
static void do_field_6(62,1672
static void do_field_8(72,1963
static void do_field_to_null_str(85,2306
static void do_outer_field_to_null_str(100,2607
set_field_to_null(117,2970
set_field_to_null_with_conversions(160,4179
static void do_skip(206,5377
static void do_copy_null(211,5445
static void do_outer_field_null(226,5697
static void do_copy_not_null(242,6008
static void do_copy_maybe_null(255,6297
static void do_copy_timestamp(263,6492
static void do_copy_next_number(275,6745
static void do_copy_blob(288,7041
static void do_conv_blob(295,7263
static void do_save_blob(305,7509
static void do_field_string(317,7811
static void do_field_enum(328,8083
static void do_field_varbinary_pre50(337,8271
static void do_field_int(352,8773
static void do_field_real(359,8971
static void do_field_decimal(366,9098
static void do_cut_string(378,9342
static void do_cut_string_complex(400,10002
static void do_expand_binary(432,11213
static void do_expand_string(442,11497
static void do_varstring1(451,11779
static void do_varstring1_mb(466,12232
static void do_varstring2(487,13011
static void do_varstring2_mb(503,13524
void Copy_field::set(536,14825
void Copy_field::set(579,16017
Copy_field::get_copy_func(642,17416
int field_conv(771,21579

sql/filesort.cc,881
#define WRITE_REF(38,1231
ha_rows filesort(103,3781
void filesort_free_buffers(368,12298
static size_t char_array_size(393,12889
static uchar **make_char_array(make_char_array399,12996
static uchar *read_buffpek_from_file(read_buffpek_from_file426,13645
static void dbug_print_record(456,14477
static ha_rows find_all_keys(535,16656
write_keys(709,21740
static inline void store_length(751,23104
static void make_sortkey(772,23450
static void register_used_fields(1011,30042
static bool save_index(1049,30884
int merge_many_buff(1075,31684
uint read_to_buffer(1133,33367
void reuse_freed_buff(1165,34331
int merge_buffers(1205,35401
static int merge_index(1413,41724
static uint suffix_length(1425,42095
sortlength(1457,42884
get_addon_fields(1567,46417
unpack_addon_fields(1655,48791
#define DBL_EXP_DIG 1677,49297
void change_double_for_sort(1679,49350

sql/frm_crypt.cc,99
ulong password_seed[password_seed30,1049
SQL_CRYPT *get_crypt_for_frm(get_crypt_for_frm32,1099

sql/gen_lex_hash.cc,1017
#define NO_YACC_SYMBOLS80,2407
struct hash_lex_struct90,2635
  int first_char;hash_lex_struct::first_char92,2660
  char last_char;hash_lex_struct::last_char93,2678
    hash_lex_struct *char_tails;hash_lex_struct::char_tails95,2705
    int iresult;hash_lex_struct::iresult96,2738
  int ithis;hash_lex_struct::ithis98,2760
hash_lex_struct *get_hash_struct_by_len(get_hash_struct_by_len101,2777
void insert_into_hash(115,3236
hash_lex_struct *root_by_len=root_by_len176,5021
int max_len=177,5054
hash_lex_struct *root_by_len2=root_by_len2179,5070
int max_len2=180,5104
void insert_symbols(182,5121
void insert_sql_functions(193,5387
void calc_length(205,5675
void generate_find_structs(215,5977
char *hash_map=hash_map232,6194
int size_hash_map=233,6213
void add_struct_to_map(235,6236
void add_structs_to_map(257,6980
void set_links(269,7303
void print_hash_map(285,7693
void print_find_structs(308,8134
int check_dup_symbols(325,8450
int check_duplicates(340,8849
int main(373,9464

sql/gstream.cc,267
enum Gis_read_stream::enum_tok_types Gis_read_stream::get_next_toc_type(25,976
bool Gis_read_stream::get_next_word(44,1410
bool Gis_read_stream::get_next_number(72,2047
bool Gis_read_stream::check_next_symbol(96,2479
void Gis_read_stream::set_error_msg(116,2779

sql/ha_ndbcluster_binlog.cc,6241
#undef assert44,1690
#define assert(45,1704
#define NDB_APPLY_TABLE_FILE 54,2087
#define NDB_SCHEMA_TABLE_FILE 55,2152
static const int DEFAULT_SYNC_TIMEOUT=61,2327
static int ndb_binlog_thread_running=69,2523
my_bool ndb_binlog_running=75,2652
my_bool ndb_binlog_tables_inited=76,2687
THD *injector_thd=injector_thd84,2881
static Ndb *injector_ndb=injector_ndb96,3274
static Ndb *schema_ndb=schema_ndb97,3303
static int ndbcluster_binlog_inited=99,3331
static int ndbcluster_binlog_terminating=114,3833
pthread_t ndb_binlog_thread;120,3976
mysql_mutex_t injector_mutex;121,4005
mysql_cond_t  injector_cond;122,4035
static ulonglong ndb_latest_applied_binlog_epoch=125,4118
static ulonglong ndb_latest_handled_binlog_epoch=126,4171
static ulonglong ndb_latest_received_binlog_epoch=127,4224
NDB_SHARE *ndb_apply_status_share=ndb_apply_status_share129,4279
NDB_SHARE *ndb_schema_share=ndb_schema_share130,4317
mysql_mutex_t ndb_schema_share_mutex;131,4349
static my_bool g_ndb_log_slave_updates;134,4426
HASH ndb_schema_objects;137,4509
typedef struct st_ndb_schema_object 138,4534
  mysql_mutex_t mutex;st_ndb_schema_object::mutex139,4572
  char *key;st_ndb_schema_object::key140,4595
  uint key_length;st_ndb_schema_object::key_length141,4608
  uint use_count;st_ndb_schema_object::use_count142,4627
  MY_BITMAP slock_bitmap;st_ndb_schema_object::slock_bitmap143,4645
} NDB_SCHEMA_OBJECT;145,4732
static Uint64 *p_latest_trans_gci=p_latest_trans_gci152,5091
static TABLE *ndb_binlog_index=ndb_binlog_index157,5204
static TABLE_LIST binlog_tables;158,5239
static void print_records(166,5346
#define print_records(187,5911
static void dbug_print_table(192,5964
#define dbug_print_table(246,8059
static void run_query(257,8223
ndbcluster_binlog_close_table(336,11084
ndbcluster_binlog_open_table(358,11484
int ndbcluster_binlog_init_share(424,13704
static void ndbcluster_binlog_wait(514,16477
static int ndbcluster_reset_logs(540,17115
ndbcluster_binlog_index_purge_file(567,17653
ndbcluster_binlog_log_query(587,18186
static int ndbcluster_binlog_end(642,19491
static void ndbcluster_reset_slave(690,21107
static bool ndbcluster_flush_logs(711,21644
static int ndbcluster_binlog_func(717,21756
void ndbcluster_binlog_init_handlerton(742,22331
static NDB_SHARE *ndbcluster_check_ndb_apply_status_share(ndbcluster_check_ndb_apply_status_share759,22702
static NDB_SHARE *ndbcluster_check_ndb_schema_share(ndbcluster_check_ndb_schema_share777,23322
static int ndbcluster_create_ndb_apply_status_table(793,23843
static int ndbcluster_create_schema_table(851,25640
int ndbcluster_setup_binlog_table_shares(909,27516
#define SCHEMA_DB_I 950,28646
#define SCHEMA_NAME_I 951,28669
#define SCHEMA_SLOCK_I 952,28694
#define SCHEMA_QUERY_I 953,28720
#define SCHEMA_NODE_ID_I 954,28746
#define SCHEMA_EPOCH_I 955,28774
#define SCHEMA_ID_I 956,28800
#define SCHEMA_VERSION_I 957,28823
#define SCHEMA_TYPE_I 958,28851
#define SCHEMA_SIZE 959,28876
#define SCHEMA_SLOCK_SIZE 960,28899
struct Cluster_schema962,28930
  uchar db_length;Cluster_schema::db_length964,28954
  char db[Cluster_schema::db965,28973
  uchar name_length;Cluster_schema::name_length966,28988
  char name[Cluster_schema::name967,29009
  uchar slock_length;Cluster_schema::slock_length968,29026
  unsigned short query_length;Cluster_schema::query_length970,29085
  char *query;Cluster_schema::query971,29116
  Uint64 epoch;Cluster_schema::epoch972,29131
  uint32 node_id;Cluster_schema::node_id973,29147
  uint32 id;Cluster_schema::id974,29165
  uint32 version;Cluster_schema::version975,29178
  uint32 type;Cluster_schema::type976,29196
  uint32 any_value;Cluster_schema::any_value977,29211
static void print_could_not_discover_error(980,29235
static void ndbcluster_get_schema(998,29925
char *ndb_pack_varchar(ndb_pack_varchar1072,32204
ndbcluster_update_slock(1096,32717
static void ndb_report_waiting(1247,36733
int ndbcluster_log_schema_op(1272,37679
ndb_handle_schema_change(1669,50169
static void ndb_binlog_query(1876,57331
ndb_binlog_thread_handle_schema_event(1904,58310
ndb_binlog_thread_handle_schema_event_post_epoch(2182,69255
struct ndb_binlog_index_row 2332,74646
  ulonglong gci;ndb_binlog_index_row::gci2333,74676
  const char *master_log_file;ndb_binlog_index_row::master_log_file2334,74693
  ulonglong master_log_pos;ndb_binlog_index_row::master_log_pos2335,74724
  ulonglong n_inserts;ndb_binlog_index_row::n_inserts2336,74752
  ulonglong n_updates;ndb_binlog_index_row::n_updates2337,74775
  ulonglong n_deletes;ndb_binlog_index_row::n_deletes2338,74798
  ulonglong n_schemaops;ndb_binlog_index_row::n_schemaops2339,74821
static int open_ndb_binlog_index(2345,74890
int ndb_add_ndb_binlog_index(2380,75921
enum Binlog_thread_state2435,77803
  BCCC_running=Binlog_thread_state::BCCC_running2437,77830
  BCCC_exit=Binlog_thread_state::BCCC_exit2438,77849
  BCCC_restart=Binlog_thread_state::BCCC_restart2439,77865
static enum Binlog_thread_state do_ndbcluster_binlog_close_connection=2442,77887
int ndbcluster_binlog_start(2444,77973
ndb_rep_event_name(2496,79591
ndbcluster_check_if_local_table(2508,79812
ndbcluster_check_if_local_tables_in_db(2530,80472
int ndbcluster_create_binlog_setup(2559,81331
ndbcluster_create_event(2711,86028
inline int is_ndb_compatible_type(2859,91252
ndbcluster_create_event_ops(2875,91605
ndbcluster_handle_drop_table(3104,99603
#define SYNC_DROP_3155,101421
static int ndb_binlog_thread_handle_error(3205,102771
ndb_binlog_thread_handle_non_data_event(3246,104014
ndb_binlog_thread_handle_data_event(3325,107034
class Timer3516,114116
  Timer(Timer::Timer3519,114138
  void start(Timer::start3520,114161
  void stop(Timer::stop3521,114207
  ulong elapsed_ms(Timer::elapsed_ms3522,114251
  struct timeval m_start,Timer::m_start3530,114466
  struct timeval m_start,m_stop;Timer::m_stop3530,114466
ndb_schema_objects_get_key(3539,114686
static NDB_SCHEMA_OBJECT *ndb_get_schema_object(ndb_get_schema_object3547,114940
static void ndb_free_schema_object(3600,116774
pthread_handler_t ndb_binlog_thread_func(3627,117659
ndbcluster_show_status_binlog(4397,144513

sql/ha_ndbcluster.cc,14761
int ha_ndb_dummy;47,1805
#undef assert66,2371
#define assert(67,2385
static const int DEFAULT_PARALLELISM=74,2729
static const ha_rows DEFAULT_AUTO_PREFETCH=75,2770
static const ulong ONE_YEAR_IN_SECONDS=76,2818
ulong opt_ndb_extra_logging;78,2883
static ulong opt_ndb_cache_check_time;79,2912
static char* opt_ndb_connectstring;80,2951
static char* opt_ndb_mgmd_host;81,2987
static uint opt_ndb_nodeid;82,3019
static const int parallelism=191,6659
static const int max_transactions=195,6785
handlerton *ndbcluster_hton;ndbcluster_hton217,7944
static handler *ndbcluster_create_handler(ndbcluster_create_handler219,7974
static uint ndbcluster_partition_flags(226,8215
static uint ndbcluster_alter_table_flags(232,8380
#define NDB_AUTO_INCREMENT_RETRIES 243,8670
#define ERR_PRINT(245,8709
#define ERR_RETURN(248,8801
#define ERR_RETURN_PREPARE(255,9019
#define ERR_BREAK(262,9240
static int ndbcluster_inited=270,9501
int ndbcluster_terminating=271,9534
static Ndb* g_ndb=273,9566
Ndb_cluster_connection* g_ndb_cluster_connection=274,9591
uchar g_node_id_map[g_node_id_map275,9647
mysql_mutex_t ndbcluster_mutex;278,9712
HASH ndbcluster_open_tables;281,9769
pthread_t ndb_util_thread;293,10205
int ndb_util_thread_running=294,10232
mysql_mutex_t LOCK_ndb_util_thread;295,10264
mysql_cond_t COND_ndb_util_thread;296,10300
mysql_cond_t COND_ndb_util_ready;297,10335
static uint32 dummy_buf;304,10505
struct Ndb_statistics 310,10579
  Uint64 row_count;Ndb_statistics::row_count311,10603
  Uint64 commit_count;Ndb_statistics::commit_count312,10623
  Uint64 row_size;Ndb_statistics::row_size313,10646
  Uint64 fragment_memory;Ndb_statistics::fragment_memory314,10665
static long ndb_cluster_node_id=319,10755
static const char * ndb_connected_host=320,10791
static long ndb_connected_port=321,10834
static long ndb_number_of_replicas=322,10869
long ndb_number_of_data_nodes=323,10908
long ndb_number_of_ready_data_nodes=324,10942
long ndb_connect_count=325,10982
static int update_status_variables(327,11010
SHOW_VAR ndb_status_variables[ndb_status_variables339,11428
static int ndb_to_mysql_error(354,11998
int execute_no_commit_ignore_no_key(392,13069
int execute_no_commit(409,13551
int execute_commit(421,13889
int execute_commit(429,14103
int execute_no_commit_ie(437,14317
typedef struct st_thd_ndb_share 449,14675
  const void *key;st_thd_ndb_share::key450,14709
  struct Ndb_local_table_statistics stat;st_thd_ndb_share::stat451,14728
} THD_NDB_SHARE;452,14770
uchar *thd_ndb_share_get_key(thd_ndb_share_get_key454,14794
Thd_ndb::Thd_ndb(461,15022
Thd_ndb::~Thd_ndb(476,15375
Thd_ndb::init_open_tables(501,15905
Ndb *ha_ndbcluster::get_ndb(ha_ndbcluster::get_ndb510,16025
void ha_ndbcluster::set_rec_per_key(519,16186
ha_rows ha_ndbcluster::records(529,16424
int ha_ndbcluster::records_update(557,17179
void ha_ndbcluster::no_uncommitted_rows_execute_failure(593,18218
void ha_ndbcluster::no_uncommitted_rows_update(603,18497
void ha_ndbcluster::no_uncommitted_rows_reset(616,18970
static void set_ndb_err(632,19385
int ha_ndbcluster::ndb_err(663,20267
bool ha_ndbcluster::get_error_message(735,22123
static bool ndb_supported_type(758,22737
static bool field_type_forces_var_part(799,23727
bool ha_ndbcluster::set_hidden_key(820,24145
int ha_ndbcluster::set_ndb_key(832,24445
int ha_ndbcluster::set_ndb_value(853,25132
NdbBlob::ActiveHook g_get_ndb_blobs_value;945,28120
int g_get_ndb_blobs_value(961,28634
int get_ndb_blobs_value(978,29218
int ha_ndbcluster::get_ndb_value(1062,31851
int ha_ndbcluster::get_ndb_partition_id(1114,33479
bool ha_ndbcluster::uses_blob_value(1125,33776
int cmp_frm(1156,34472
int ha_ndbcluster::get_metadata(1169,34801
static int fix_unique_index_attr_order(1230,36376
int ha_ndbcluster::create_indexes(1275,37736
static void ndb_init_index(1299,38321
static void ndb_clear_index(1312,38641
int ha_ndbcluster::add_index_handle(1329,38959
int ha_ndbcluster::open_indexes(1413,42134
void ha_ndbcluster::renumber_indexes(1464,43378
int ha_ndbcluster::drop_indexes(1500,44304
NDB_INDEX_TYPE ha_ndbcluster::get_index_type_from_table(1556,45824
NDB_INDEX_TYPE ha_ndbcluster::get_index_type_from_key(1562,46029
bool ha_ndbcluster::check_index_fields_not_null(1576,46567
void ha_ndbcluster::release_metadata(1592,46961
int ha_ndbcluster::get_ndb_lock_type(1635,47998
static const ulong index_type_flags[index_type_flags1645,48284
static const int index_flags_size=1681,48964
inline NDB_INDEX_TYPE ha_ndbcluster::get_index_type(1683,49040
inline bool ha_ndbcluster::has_null_in_unique_index(1689,49180
inline ulong ha_ndbcluster::index_flags(1703,49432
static void shrink_varchar(1713,49830
int ha_ndbcluster::set_primary_key(1732,50339
int ha_ndbcluster::set_primary_key_from_record(1754,50945
bool ha_ndbcluster::check_index_fields_in_write_set(1771,51464
int ha_ndbcluster::set_index_key_from_record(1791,51946
ha_ndbcluster::set_index_key(1811,52650
int ha_ndbcluster::define_read_attrs(1834,53378
int ha_ndbcluster::pk_read(1876,54342
int ha_ndbcluster::complemented_read(1945,56214
bool ha_ndbcluster::check_all_operations_for_error(2025,58292
check_null_in_record(2082,59876
int ha_ndbcluster::peek_indexed_rows(2109,60579
int ha_ndbcluster::unique_index_read(2218,63736
inline int ha_ndbcluster::fetch_next(2260,64947
inline int ha_ndbcluster::next_result(2367,67755
int ha_ndbcluster::set_bounds(2401,68380
    struct part_st 2443,69521
      bool part_last;part_st::part_last2444,69542
      const key_range *key;part_st::key2445,69564
      const uchar *part_ptr;part_st::part_ptr2446,69592
      bool part_null;part_st::part_null2447,69621
      int bound_type;part_st::bound_type2448,69643
      const uchar* bound_ptr;part_st::bound_ptr2449,69665
int ha_ndbcluster::ordered_index_scan(2582,73908
guess_scan_flags(2663,76543
int ha_ndbcluster::unique_index_scan(2690,77244
int ha_ndbcluster::full_table_scan(2766,79690
ha_ndbcluster::set_auto_inc(2831,81848
int ha_ndbcluster::write_row(2859,82680
int ha_ndbcluster::key_cmp(3079,88632
int ha_ndbcluster::update_row(3115,89623
int ha_ndbcluster::delete_row(3345,96633
void ndb_unpack_record(3468,100148
void ha_ndbcluster::unpack_record(3600,104660
void ha_ndbcluster::print_results(3629,105487
int ha_ndbcluster::index_init(3686,106713
int ha_ndbcluster::index_end(3702,107114
check_null_in_key(3713,107269
int ha_ndbcluster::index_read(3730,107674
int ha_ndbcluster::index_next(3763,108619
int ha_ndbcluster::index_prev(3775,108929
int ha_ndbcluster::index_first(3787,109239
int ha_ndbcluster::index_last(3802,109701
int ha_ndbcluster::index_read_last(3813,110040
int ha_ndbcluster::read_range_first_to_buf(3819,110241
int ha_ndbcluster::read_range_first(3898,112996
int ha_ndbcluster::read_range_next(3912,113511
int ha_ndbcluster::rnd_init(3923,113781
int ha_ndbcluster::close_scan(3943,114198
int ha_ndbcluster::rnd_end(3993,115492
int ha_ndbcluster::rnd_next(4000,115581
int ha_ndbcluster::rnd_pos(4023,116106
void ha_ndbcluster::position(4074,117721
int ha_ndbcluster::info(4163,120054
void ha_ndbcluster::get_dynamic_partition_info(4252,122390
int ha_ndbcluster::extra(4265,122746
int ha_ndbcluster::reset(4318,124465
void ha_ndbcluster::start_bulk_insert(4354,125311
int ha_ndbcluster::end_bulk_insert(4404,126713
int ha_ndbcluster::extra_opt(4447,127763
static const char *ha_ndbcluster_exts[ha_ndbcluster_exts4454,127965
const char** ha_ndbcluster::bas_ext(4459,128033
double ha_ndbcluster::scan_time(4471,128312
THR_LOCK_DATA **ha_ndbcluster::store_lock(ha_ndbcluster::store_lock4488,128840
#define PRINT_OPTION_FLAGS(4525,130004
#define PRINT_OPTION_FLAGS(4534,130443
static int ndbcluster_update_apply_status(4556,131254
void ha_ndbcluster::transaction_checks(4606,132697
int ha_ndbcluster::start_statement(4621,133138
int ha_ndbcluster::init_handler_for_statement(4664,134449
int ha_ndbcluster::external_lock(4745,137305
void ha_ndbcluster::unlock_row(4859,140536
int ha_ndbcluster::start_stmt(4876,140970
static int ndbcluster_commit(4902,141491
static int ndbcluster_rollback(4973,143624
static int create_ndb_column(5022,144914
int ha_ndbcluster::create(5311,152404
int ha_ndbcluster::create_handler_files(5714,164191
int ha_ndbcluster::create_index(5782,166224
int ha_ndbcluster::create_ordered_index(5840,168054
int ha_ndbcluster::create_unique_index(5847,168282
int ha_ndbcluster::create_ndb_index(5863,168604
void ha_ndbcluster::prepare_for_alter(5910,169850
int ha_ndbcluster::add_index(5922,170195
int ha_ndbcluster::prepare_drop_index(5961,171482
int ha_ndbcluster::final_drop_index(5984,172145
int ha_ndbcluster::rename_table(6008,172811
ha_ndbcluster::delete_table(6193,178431
int ha_ndbcluster::delete_table(6378,184017
void ha_ndbcluster::get_auto_increment(6408,184714
#define HA_NDBCLUSTER_TABLE_FLAGS 6471,186749
ha_ndbcluster::ha_ndbcluster(6486,187328
int ha_ndbcluster::ha_initialise(6540,188602
ha_ndbcluster::~ha_ndbcluster(6554,188830
int ha_ndbcluster::open(6604,189797
void ha_ndbcluster::set_part_info(6702,192152
int ha_ndbcluster::close(6715,192483
Thd_ndb* ha_ndbcluster::seize_thd_ndb(6736,193053
void ha_ndbcluster::release_thd_ndb(6763,193624
Ndb* check_ndb_in_thd(6778,193922
int ha_ndbcluster::check_ndb_connection(6792,194148
static int ndbcluster_close_connection(6807,194433
int ndbcluster_discover(6824,194799
int ndbcluster_table_exists_in_engine(6933,197458
extern "C" uchar* tables_get_key(6962,198413
int ndbcluster_drop_database_impl(6976,198752
static void ndbcluster_drop_database(7034,200493
int ndb_create_table_from_engine(7061,201211
int ndbcluster_find_all_files(7075,201571
int ndbcluster_find_files(7205,205617
static int connect_callback(7460,214284
PSI_mutex_key key_injector_mutex,7481,214843
PSI_mutex_key key_injector_mutex, key_ndb_schema_share_mutex,7481,214843
              key_ndb_schema_object_mutex;7482,214905
PSI_mutex_key key_NDB_SHARE_mutex,7485,214978
PSI_mutex_key key_NDB_SHARE_mutex, key_ndbcluster_mutex,7485,214978
              key_LOCK_ndb_util_thread;7486,215035
static PSI_mutex_info all_ndbcluster_mutexes[all_ndbcluster_mutexes7488,215076
PSI_cond_key key_injector_cond;7501,215623
PSI_cond_key key_COND_ndb_util_thread,7504,215685
PSI_cond_key key_COND_ndb_util_thread, key_COND_ndb_util_ready;7504,215685
static PSI_cond_info all_ndbcluster_conds[all_ndbcluster_conds7506,215750
PSI_thread_key key_thread_ndb_binlog;7516,216078
PSI_thread_key key_thread_ndb_util;7518,216145
static PSI_thread_info all_ndbcluster_threads[all_ndbcluster_threads7520,216182
PSI_file_key key_file_ndb;7528,216404
static PSI_file_info all_ndbcluster_files[all_ndbcluster_files7530,216432
void init_ndbcluster_psi_keys(7535,216512
static int ndbcluster_init(7557,217146
static int ndbcluster_fill_is_table(7751,223805
static int ndbcluster_end(7768,224243
void ha_ndbcluster::print_error(7835,226048
void ndbcluster_print_error(7853,226478
void ha_ndbcluster::set_dbname(7871,227007
void ha_ndbcluster::set_dbname(7907,227749
ha_ndbcluster::set_tabname(7917,227913
void ha_ndbcluster::set_tabname(7948,228568
ha_ndbcluster::records_in_range(7955,228675
ulonglong ha_ndbcluster::table_flags(8057,232124
const char * ha_ndbcluster::table_type(8071,232569
uint ha_ndbcluster::max_supported_record_length(8075,232645
uint ha_ndbcluster::max_supported_keys(8079,232735
uint ha_ndbcluster::max_supported_key_parts(8083,232804
uint ha_ndbcluster::max_supported_key_length(8087,232903
uint ha_ndbcluster::max_supported_key_part_length(8091,232987
bool ha_ndbcluster::low_byte_first(8095,233076
const char* ha_ndbcluster::index_type(8103,233191
uint8 ha_ndbcluster::table_cache_type(8117,233477
uint ndb_get_commitcount(8124,233638
ndbcluster_cache_retrieval_allowed(8248,237723
ha_ndbcluster::register_query_cache_table(8317,239894
static uchar *ndbcluster_get_key(ndbcluster_get_key8357,241132
static void print_share(8367,241357
static void print_ndbcluster_open_tables(8387,241929
#define dbug_print_open_tables(8401,242279
#define dbug_print_share(8405,242429
int handle_trailing_share(8423,243131
static int rename_share(8529,246548
NDB_SHARE *ndbcluster_get_share(ndbcluster_get_share8604,248961
NDB_SHARE *ndbcluster_get_share(ndbcluster_get_share8631,249607
void ndbcluster_real_free_share(8715,252435
void ndbcluster_free_share(8748,253333
ndb_get_table_statistics(8770,253781
int ha_ndbcluster::write_ndb_file(8912,257291
ha_ndbcluster::release_completed_operations(8935,257823
ha_ndbcluster::null_value_index_search(8959,258375
ha_ndbcluster::read_multi_range_first(8983,259074
#define DBUG_MULTI_RANGE(9223,267089
#define DBUG_MULTI_RANGE(9225,267184
ha_ndbcluster::read_multi_range_next(9229,267224
int ha_ndbcluster::loc_read_multi_range_next(9244,267689
ha_ndbcluster::setup_recattr(9396,271712
ha_ndbcluster::update_table_comment(9427,272305
pthread_handler_t ndb_util_thread_func(9470,273351
ha_ndbcluster::cond_push(9779,283329
ha_ndbcluster::cond_pop(9797,283766
char* ha_ndbcluster::get_tablespace_name(9807,283889
ndbcluster_show_status(9850,285047
static uint get_no_fragments(9908,286761
static bool adjusted_frag_count(9935,287550
int ha_ndbcluster::get_default_no_partitions(9946,287898
enum ndb_distribution_enum 9991,289080
enum ndb_distribution_enum { ND_KEYHASH=ndb_distribution_enum::ND_KEYHASH9991,289080
enum ndb_distribution_enum { ND_KEYHASH= 0, ND_LINHASH=ndb_distribution_enum::ND_LINHASH9991,289080
static const char* distribution_names[distribution_names9992,289141
static ulong default_ndb_distribution=9993,289215
static TYPELIB distribution_typelib=9994,289266
void ha_ndbcluster::set_auto_partitions(10011,289794
int ha_ndbcluster::set_range_data(10029,290200
int ha_ndbcluster::set_list_data(10068,291283
uint ha_ndbcluster::set_up_partition_info(10118,293027
bool ha_ndbcluster::check_if_incompatible_data(10245,296932
bool set_up_tablespace(10347,299983
bool set_up_datafile(10356,300282
bool set_up_logfile_group(10370,300669
bool set_up_undofile(10378,300922
int ndbcluster_alter_tablespace(10387,301202
bool ha_ndbcluster::get_no_parts(10619,307094
static int ndbcluster_fill_files_table(10649,307752
SHOW_VAR ndb_status_variables_export[ndb_status_variables_export10879,317534
ulong opt_ndb_report_thresh_binlog_epoch_slip;10915,318832
ulong opt_ndb_report_thresh_binlog_mem_usage;10934,319639
static struct st_mysql_sys_var* system_variables[system_variables10987,321661
struct st_mysql_storage_engine ndbcluster_storage_engine=11010,322340
mysql_declare_plugin(11013,322439
mysql_declare_plugin_end;11029,322992

sql/ha_ndbcluster_cond.cc,684
typedef NdbDictionary::Column NDBCOL;35,1206
typedef NdbDictionary::Table NDBTAB;36,1244
static void ndb_serialize_const(48,1533
void ndb_serialize_cond(148,4532
ha_ndbcluster_cond::cond_push(944,36022
ha_ndbcluster_cond::cond_pop(975,36629
ha_ndbcluster_cond::cond_clear(990,36885
ha_ndbcluster_cond::serialize_cond(1000,37016
ha_ndbcluster_cond::build_scan_filter_predicate(1016,37613
ha_ndbcluster_cond::build_scan_filter_group(1257,45244
ha_ndbcluster_cond::build_scan_filter(1332,47146
ha_ndbcluster_cond::generate_scan_filter(1362,47813
ha_ndbcluster_cond::generate_scan_filter_from_cond(1396,48556
int ha_ndbcluster_cond::generate_scan_filter_from_key(1427,49230

sql/handler.cc,10826
st_plugin_int *hton2plugin[hton2plugin54,1845
static handlerton *installed_htons[installed_htons56,1882
#define BITMAP_STACKBUF_SIZE 58,1924
KEY_CREATE_INFO default_key_create_info=60,1962
ulong total_ha=64,2096
ulong total_ha_2pc=66,2185
ulong savepoint_alloc_size=68,2259
static const LEX_STRING sys_table_aliases[sys_table_aliases70,2291
const char *ha_row_type[ha_row_type79,2647
const char *tx_isolation_names[tx_isolation_names87,2919
TYPELIB tx_isolation_typelib=90,3039
static TYPELIB known_extensions=93,3149
uint known_extensions_id=94,3212
const char* mysqld_system_database=101,3415
st_system_tablename mysqld_system_tables[mysqld_system_tables104,3517
static const char **known_system_databases=known_system_databases133,4681
struct st_sys_tbl_chk_params150,5397
  const char *db;st_sys_tbl_chk_params::db152,5428
  const char *table_name;st_sys_tbl_chk_params::table_name153,5486
  bool is_sql_layer_system_table;st_sys_tbl_chk_params::is_sql_layer_system_table154,5544
  legacy_db_type db_type;st_sys_tbl_chk_params::db_type155,5602
  enum enum_sys_tbl_chk_statusst_sys_tbl_chk_params::enum_sys_tbl_chk_status157,5661
    NOT_KNOWN_SYSTEM_TABLE,st_sys_tbl_chk_params::enum_sys_tbl_chk_status::NOT_KNOWN_SYSTEM_TABLE160,5750
    KNOWN_SYSTEM_TABLE,st_sys_tbl_chk_params::enum_sys_tbl_chk_status::KNOWN_SYSTEM_TABLE165,5869
    SUPPORTED_SYSTEM_TABLEst_sys_tbl_chk_params::enum_sys_tbl_chk_status::SUPPORTED_SYSTEM_TABLE170,5976
  }status;st_sys_tbl_chk_params::status171,6003
static plugin_ref ha_default_plugin(175,6067
handlerton *ha_default_handlerton(ha_default_handlerton193,6445
plugin_ref ha_resolve_by_name(214,6902
plugin_ref ha_lock_engine(256,8086
handlerton *ha_resolve_by_legacy_type(ha_resolve_by_legacy_type272,8356
handlerton *ha_checktype(ha_checktype292,8876
handler *get_new_handler(get_new_handler322,9616
handler *get_ha_partition(get_ha_partition345,10297
static const char **handler_errmsgs;handler_errmsgs368,10782
static const char **get_handler_errmsgs(get_handler_errmsgs371,10833
int ha_init_errors(387,11047
#define SETMSG(389,11074
static int ha_finish_errors(458,15046
int ha_finalize_handlerton(470,15291
int ha_initialize_handlerton(527,16648
int ha_init(659,20237
int ha_end(683,20833
static my_bool dropdb_handlerton(700,21108
void ha_drop_database(710,21402
static my_bool closecon_handlerton(716,21520
void ha_close_connection(739,22130
void trans_register_ha(1050,36072
int ha_prepare(1084,36862
ha_check_and_coalesce_trx_read_only(1141,38508
int ha_commit_trans(1195,40172
int ha_commit_one_phase(1368,45879
int ha_rollback_trans(1422,47645
struct xahton_st 1514,51122
  XID *xid;xahton_st::xid1515,51141
  int result;xahton_st::result1516,51153
static my_bool xacommit_handlerton(1519,51171
static my_bool xarollback_handlerton(1531,51529
int ha_commit_or_rollback_by_xid(1544,51894
static char* xid_to_str(1562,52260
struct xarecover_st1629,53956
  int len,xarecover_st::len1631,53978
  int len, found_foreign_xids,xarecover_st::found_foreign_xids1631,53978
  int len, found_foreign_xids, found_my_xids;xarecover_st::found_my_xids1631,53978
  XID *list;xarecover_st::list1632,54024
  HASH *commit_list;xarecover_st::commit_list1633,54037
  bool dry_run;xarecover_st::dry_run1634,54058
static my_bool xarecover_handlerton(1637,54078
int ha_recover(1696,55929
bool mysql_xa_recover(1769,58477
int ha_release_temporary_latches(1829,60685
int ha_rollback_to_savepoint(1848,61266
int ha_savepoint(1905,63040
int ha_release_savepoint(1940,63966
static my_bool snapshot_handlerton(1965,64584
int ha_start_consistent_snapshot(1978,64932
static my_bool flush_handlerton(1996,65393
bool ha_flush_logs(2007,65682
const char *get_canonical_filename(get_canonical_filename2047,66728
struct Ha_delete_table_error_handler:Ha_delete_table_error_handler2079,67576
  char buff[Ha_delete_table_error_handler::buff2088,67976
handle_condition(2094,68050
int ha_delete_table(2112,68494
handler *handler::clone(handler::clone2172,70557
double handler::keyread_time(2197,71501
void handler::ha_statistic_increment(2206,71791
void **handler::ha_data(handler::ha_data2211,71918
THD *handler::ha_thd(handler::ha_thd2216,71994
PSI_table_share *handler::ha_table_share_psi(handler::ha_table_share_psi2222,72170
int handler::ha_open(2234,72436
int handler::read_first_row(2289,74011
compute_next_insert_id(2340,75479
void handler::adjust_next_insert_id_after_explicit_value(2362,76044
prev_insert_id(2390,76901
#define AUTO_INC_DEFAULT_NB_ROWS 2488,81263
#define AUTO_INC_DEFAULT_NB_MAX_BITS 2489,81323
#define AUTO_INC_DEFAULT_NB_MAX 2490,81363
int handler::update_auto_increment(2492,81438
void handler::column_bitmaps_signal(2679,88539
void handler::get_auto_increment(2705,89415
void handler::ha_release_auto_increment(2777,91615
void handler::print_keydup_error(2795,92043
void handler::print_error(2832,93016
bool handler::get_error_message(3058,99064
int handler::check_collation_compatibility(3073,99336
int handler::ha_check_for_upgrade(3111,100773
int handler::check_old_types(3150,101768
static bool update_frm_version(3173,102186
uint handler::get_dup_key(3215,103196
int handler::delete_table(3242,103956
int handler::rename_table(3273,104769
void handler::drop_table(3297,105233
int handler::ha_check(3319,105733
handler::mark_trx_read_write(3349,106415
int handler::ha_repair(3379,107297
handler::ha_bulk_update_row(3402,107706
handler::ha_delete_all_rows(3418,107999
handler::ha_truncate(3433,108164
handler::ha_reset_auto_increment(3448,108333
handler::ha_optimize(3463,108528
handler::ha_analyze(3478,108724
handler::ha_check_and_repair(3493,108937
handler::ha_disable_indexes(3508,109123
handler::ha_enable_indexes(3523,109307
handler::ha_discard_or_import_tablespace(3538,109517
handler::ha_prepare_for_alter(3555,109783
handler::ha_rename_table(3570,109947
handler::ha_delete_table(3585,110148
handler::ha_drop_table(3600,110340
handler::ha_create(3615,110527
handler::ha_create_handler_files(3630,110776
handler::ha_change_partitions(3646,111097
handler::ha_drop_partitions(3667,111616
handler::ha_rename_partitions(3682,111813
int ha_enable_transaction(3698,112315
int handler::index_next_same(3718,112899
void handler::get_dynamic_partition_info(3770,114461
int ha_create_table(3803,115648
int ha_create_table_from_engine(3851,116897
ha_check_if_table_exists(3916,118536
bool ha_check_if_supported_system_table(3955,120005
static my_bool check_engine_system_table_handlerton(4033,122498
const char** ha_known_system_databases(4096,124696
static my_bool system_databases_handlerton(4134,125816
void st_ha_check_opt::init(4152,126239
int ha_init_key_cache(4171,126794
int ha_resize_key_cache(4195,127453
int ha_change_key_cache_param(4218,128125
int ha_change_key_cache(4234,128590
struct st_discover_args4252,128958
  const char *db;st_discover_args::db4254,128984
  const char *name;st_discover_args::name4255,129002
  uchar **frmblob;st_discover_args::frmblob4256,129022
  size_t *frmlen;st_discover_args::frmlen4257,129042
static my_bool discover_handlerton(4260,129064
int ha_discover(4274,129521
struct st_find_files_args4300,130327
  const char *db;st_find_files_args::db4302,130355
  const char *path;st_find_files_args::path4303,130373
  const char *wild;st_find_files_args::wild4304,130393
  bool dir;st_find_files_args::dir4305,130413
  List<LEX_STRING> *files;st_find_files_args::files4306,130425
static my_bool find_files_handlerton(4309,130456
ha_find_files(4325,130915
struct st_table_exists_in_engine_args4349,131635
  const char *db;st_table_exists_in_engine_args::db4351,131675
  const char *name;st_table_exists_in_engine_args::name4352,131693
  int err;st_table_exists_in_engine_args::err4353,131713
static my_bool table_exists_in_engine_handlerton(4356,131728
int ha_table_exists_in_engine(4374,132267
#define MAX_HTON_LIST_ST 4392,132916
struct hton_list_st4393,132944
  handlerton *hton[hton_list_st::hton4395,132966
  uint sz;hton_list_st::sz4396,133004
struct binlog_func_st4399,133019
  enum_binlog_func fn;binlog_func_st::fn4401,133043
  void *arg;binlog_func_st::arg4402,133066
static my_bool binlog_func_list(4408,133163
static my_bool binlog_func_foreach(4426,133598
int ha_reset_logs(4440,133969
void ha_reset_slave(4447,134091
void ha_binlog_wait(4453,134204
int ha_binlog_end(4459,134317
int ha_binlog_index_purge_file(4466,134439
struct binlog_log_query_st4473,134610
  enum_binlog_command binlog_command;binlog_log_query_st::binlog_command4475,134639
  const char *query;binlog_log_query_st::query4476,134677
  uint query_length;binlog_log_query_st::query_length4477,134698
  const char *db;binlog_log_query_st::db4478,134719
  const char *table_name;binlog_log_query_st::table_name4479,134737
static my_bool binlog_log_query_handlerton2(4482,134767
static my_bool binlog_log_query_handlerton(4497,135334
void ha_binlog_log_query(4504,135594
int handler::read_multi_range_first(4547,137013
int handler::read_multi_range_next(4597,138677
int handler::read_range_first(4670,140869
int handler::read_range_next(4729,142227
int handler::compare_key(4776,143263
int handler::index_read_idx_map(4788,143494
static my_bool exts_handlerton(4813,144165
TYPELIB *ha_known_exts(ha_known_exts4842,144878
static bool stat_print(4873,145725
static my_bool showstat_handlerton(4888,146214
bool ha_show_status(4899,146586
static bool check_table_binlog_row_based(4951,148095
static int write_locked_table_maps(4990,149130
typedef bool Log_func(5050,151327
static int binlog_log_row(5053,151439
int handler::ha_external_lock(5104,153333
int handler::ha_reset(5168,155074
int handler::ha_write_row(5188,155720
int handler::ha_update_row(5210,156265
int handler::ha_delete_row(5233,156915
int handler::ha_fast_update(5250,157348
int handler::ha_upsert(5258,157590
void handler::use_hidden_primary_key(5271,157986
void signal_log_not_needed(5282,158228
int example_of_iterator_using_for_logs_cleanup(5297,158592
#define fl_dir 5335,159712
enum log_status fl_get_log_status(5343,159912
struct fl_buff5352,160113
  LEX_STRING *names;fl_buff::names5354,160130
  enum log_status *statuses;fl_buff::statuses5355,160151
  uint32 entries;fl_buff::entries5356,160180
  uint32 current;fl_buff::current5357,160198
int fl_log_iterator_next(5361,160221
void fl_log_iterator_destroy(5376,160664
fl_log_iterator_buffer_init(5386,160873
fl_create_iterator(5447,162868
handler::check_if_supported_inplace_alter(5465,163295
void handler::notify_table_changed(5513,165189
bool handler::ha_prepare_inplace_alter_table(5518,165306
bool handler::ha_commit_inplace_alter_table(5526,165552

sql/ha_partition.cc,9172
static const char *ha_par_ext=ha_par_ext68,2804
static int partition_initialize(86,3530
static handler *partition_create_handler(partition_create_handler115,4267
static uint partition_flags(147,5175
static uint alter_table_flags(152,5237
const uint ha_partition::NO_CURRENT_PART_ID=158,5389
ha_partition::ha_partition(171,5576
ha_partition::ha_partition(191,5905
ha_partition::ha_partition(215,6598
void ha_partition::init_handler_variables(241,7242
const char *ha_partition::table_type(ha_partition::table_type302,8728
ha_partition::~ha_partition(319,8962
bool ha_partition::initialize_partition(381,11182
int ha_partition::delete_table(472,14065
int ha_partition::rename_table(502,14795
int ha_partition::create_handler_files(530,15574
int ha_partition::create(593,17559
int ha_partition::drop_partitions(626,18338
int ha_partition::rename_partitions(715,21356
#define OPTIMIZE_PARTS 896,28456
#define ANALYZE_PARTS 897,28481
#define CHECK_PARTS 898,28505
#define REPAIR_PARTS 899,28529
#define ASSIGN_KEYCACHE_PARTS 900,28552
#define PRELOAD_KEYS_PARTS 901,28584
static const char *opt_op_name[opt_op_name903,28614
int ha_partition::optimize(920,29029
int ha_partition::analyze(941,29428
int ha_partition::check(962,29820
int ha_partition::repair(983,30208
int ha_partition::assign_to_keycache(1001,30575
int ha_partition::preload_keys(1020,30977
static int handle_opt_part(1043,31559
static bool print_admin_msg(1082,32810
int ha_partition::handle_opt_partitions(1144,34661
bool ha_partition::check_and_repair(1238,37871
bool ha_partition::auto_repair(1259,38265
bool ha_partition::is_crashed(1278,38620
int ha_partition::prepare_new_partition(1307,39235
void ha_partition::cleanup_new_partition(1385,42018
int ha_partition::change_partitions(1437,43689
int ha_partition::copy_partitions(1739,53489
void ha_partition::update_create_info(1825,55734
void ha_partition::change_table_ptr(1845,56306
char *ha_partition::update_table_comment(ha_partition::update_table_comment1889,57207
uint ha_partition::del_ren_cre_table(1919,58068
partition_element *ha_partition::find_partition_element(ha_partition::find_partition_element2043,62073
int ha_partition::set_up_table_before_create(2094,63356
static uint name_add(2151,65149
bool ha_partition::create_handler_file(2171,65605
void ha_partition::clear_handler_file(2315,70625
bool ha_partition::create_handlers(2336,71025
bool ha_partition::new_handlers_from_part_info(2384,72297
bool ha_partition::read_par_file(2456,74331
bool ha_partition::setup_engine_array(2527,76628
bool ha_partition::get_from_handler_file(2586,78116
void ha_data_partition_destroy(2614,78817
int ha_partition::open(2645,79645
handler *ha_partition::clone(ha_partition::clone2856,86818
int ha_partition::close(2900,88099
int ha_partition::external_lock(2971,90277
THR_LOCK_DATA **ha_partition::store_lock(ha_partition::store_lock3058,92962
int ha_partition::start_stmt(3090,93709
uint ha_partition::lock_count(3122,94407
void ha_partition::unlock_row(3144,94815
bool ha_partition::was_semi_consistent_read(3174,95822
void ha_partition::try_semi_consistent_read(3201,96654
int ha_partition::write_row(3256,98217
int ha_partition::update_row(3382,102384
int ha_partition::delete_row(3506,106688
int ha_partition::delete_all_rows(3547,107740
int ha_partition::truncate(3570,108094
int ha_partition::truncate_partition(3603,108796
void ha_partition::start_bulk_insert(3677,110864
void ha_partition::start_part_bulk_insert(3693,111296
long ha_partition::estimate_read_buffer_size(3725,112596
ha_rows ha_partition::guess_bulk_insert_rows(3760,113710
int ha_partition::end_bulk_insert(3797,114711
int ha_partition::rnd_init(3847,116210
int ha_partition::rnd_end(3951,118899
int ha_partition::rnd_next(4000,120161
void ha_partition::position(4096,122661
void ha_partition::column_bitmaps_signal(4113,123131
int ha_partition::rnd_pos(4142,124004
int ha_partition::rnd_pos_by_record(4175,124782
bool ha_partition::init_record_priority_queue(4210,125992
void ha_partition::destroy_record_priority_queue(4265,127703
int ha_partition::index_init(4295,128391
int ha_partition::index_end(4385,131066
int ha_partition::index_read_map(4431,132459
int ha_partition::common_index_read(4474,134177
int ha_partition::index_first(4553,136661
int ha_partition::index_last(4584,137406
int ha_partition::common_first_last(4601,137709
int ha_partition::index_read_last_map(4632,138461
int ha_partition::index_read_idx_map(4651,139006
int ha_partition::index_next(4720,141029
int ha_partition::index_next_same(4758,142022
int ha_partition::index_prev(4785,142680
int ha_partition::read_range_first(4816,143562
int ha_partition::read_range_next(4858,144489
int ha_partition::partition_scan_set_up(4896,145567
int ha_partition::handle_unordered_next(4979,148367
int ha_partition::handle_unordered_scan_next_partition(5050,150115
int ha_partition::handle_ordered_index_scan(5146,153373
void ha_partition::return_top_record(5276,157532
int ha_partition::handle_ordered_index_scan_key_not_found(5297,158072
int ha_partition::handle_ordered_next(5356,159804
int ha_partition::handle_ordered_prev(5447,162192
int ha_partition::compare_number_of_records(5491,163327
int ha_partition::info(5570,165651
void ha_partition::get_dynamic_partition_info(5802,173938
int ha_partition::extra(6136,189315
int ha_partition::reset(6299,193895
int ha_partition::extra_opt(6328,194525
void ha_partition::prepare_extra_cache(6349,194941
int ha_partition::prepare_for_rename(6375,195481
int ha_partition::loop_extra(6407,196205
void ha_partition::late_extra_cache(6439,196853
void ha_partition::late_extra_no_cache(6477,197794
const key_map *ha_partition::keys_to_use_for_scanning(ha_partition::keys_to_use_for_scanning6506,198527
ha_rows ha_partition::min_rows_for_estimate(6518,198764
uint ha_partition::get_biggest_used_partition(6580,201169
double ha_partition::scan_time(6603,201589
ha_rows ha_partition::records_in_range(6629,202246
ha_rows ha_partition::estimate_rows_upper_bound(6689,204386
double ha_partition::read_time(6728,205337
ha_rows ha_partition::records(6746,205653
bool ha_partition::can_switch_engines(6779,206271
uint8 ha_partition::table_cache_type(6802,206592
const char *ha_partition::index_type(ha_partition::index_type6814,206927
enum row_type ha_partition::get_row_type(6822,207066
void ha_partition::print_error(6838,207370
bool ha_partition::get_error_message(6868,208100
uint ha_partition::alter_table_flags(6889,208831
bool ha_partition::check_if_incompatible_data(6933,210616
class ha_partition_add_index 6957,211284
  handler_add_index **add_array;ha_partition_add_index::add_array6960,211350
  ha_partition_add_index(ha_partition_add_index::ha_partition_add_index6961,211383
  ~ha_partition_add_index(ha_partition_add_index::~ha_partition_add_index6965,211563
int ha_partition::add_index(6982,212004
int ha_partition::final_add_index(7048,213939
int ha_partition::prepare_drop_index(7151,217243
int ha_partition::final_drop_index(7167,217599
static const char *ha_partition_ext[ha_partition_ext7185,218038
const char **ha_partition::bas_ext(ha_partition::bas_ext7190,218103
uint ha_partition::min_of_the_max_uint(7194,218177
uint ha_partition::max_supported_key_parts(7209,218524
uint ha_partition::max_supported_key_length(7215,218646
uint ha_partition::max_supported_key_part_length(7221,218770
uint ha_partition::max_supported_record_length(7227,218904
uint ha_partition::max_supported_keys(7233,219034
uint ha_partition::extra_rec_buf_length(7239,219146
uint ha_partition::min_record_length(7251,219415
int ha_partition::cmp_ref(7286,220468
int ha_partition::reset_auto_increment(7324,221313
void ha_partition::get_auto_increment(7351,222165
void ha_partition::release_auto_increment(7441,225815
void ha_partition::init_table_handle_for_HANDLER(7490,227525
int ha_partition::disable_indexes(7510,227990
int ha_partition::enable_indexes(7534,228388
int ha_partition::indexes_are_disabled(7558,228786
class ha_partition_inplace_ctx 7579,229094
  inplace_alter_handler_ctx **handler_ctx_array;ha_partition_inplace_ctx::handler_ctx_array7582,229170
  bool rollback_done;ha_partition_inplace_ctx::rollback_done7583,229219
  uint m_tot_parts;ha_partition_inplace_ctx::m_tot_parts7585,229250
  ha_partition_inplace_ctx(ha_partition_inplace_ctx::ha_partition_inplace_ctx7588,229279
  ~ha_partition_inplace_ctx(ha_partition_inplace_ctx::~ha_partition_inplace_ctx7595,229461
ha_partition::try_hot_alter_table(7606,229644
ha_partition::check_if_supported_inplace_alter(7615,229845
bool ha_partition::prepare_inplace_alter_table(7656,231160
bool ha_partition::inplace_alter_table(7682,232007
bool ha_partition::commit_inplace_alter_table(7715,233149
void ha_partition::notify_table_changed(7842,238510
int ha_partition::new_alter_table_frm_data(7854,238726
int ha_partition::discover(7872,239111
static int partition_discover(7931,240669
struct st_mysql_storage_engine partition_storage_engine=7943,241104
mysql_declare_plugin(7946,241202
mysql_declare_plugin_end;7962,241765

sql/hostname.cc,769
#define HOST_ENTRY_KEY_SIZE 56,1678
class Host_entry 69,1994
  char ip_key[Host_entry::ip_key80,2291
  uint connect_errors;Host_entry::connect_errors85,2404
  const char *hostname;Host_entry::hostname90,2498
static hash_filo *hostname_cache;hostname_cache93,2526
void hostname_cache_refresh(95,2561
bool hostname_cache_init(100,2623
void hostname_cache_free(116,3047
static void prepare_hostname_cache_key(122,3128
static inline Host_entry *hostname_cache_search(hostname_cache_search132,3436
static bool add_hostname_impl(137,3578
static bool add_hostname(176,4530
void inc_host_errors(190,4832
void reset_host_errors(209,5184
static inline bool is_ip_loopback(228,5539
static inline bool is_hostname_valid(252,6063
bool ip_to_hostname(297,7330

sql/init.cc,26
void unireg_init(32,1110

sql/item_buff.cc,411
Cached_item *new_Cached_item(new_Cached_item37,1173
Cached_item::~Cached_item(58,1804
Cached_item_str::Cached_item_str(67,1953
bool Cached_item_str::cmp(73,2127
Cached_item_str::~Cached_item_str(95,2644
bool Cached_item_real::cmp(100,2709
bool Cached_item_int::cmp(112,2920
bool Cached_item_field::cmp(125,3131
Cached_item_decimal::Cached_item_decimal(139,3396
bool Cached_item_decimal::cmp(146,3496

sql/item.cc,19679
void Hybrid_type_traits::fix_length_and_dec(51,2188
static const Hybrid_type_traits real_traits_instance;57,2354
const Hybrid_type_traits *Hybrid_type_traits::instance(Hybrid_type_traits::instance59,2409
Hybrid_type_traits::val_decimal(66,2517
Hybrid_type_traits::val_str(74,2692
static const Hybrid_type_traits_decimal decimal_traits_instance;81,2877
const Hybrid_type_traits_decimal *Hybrid_type_traits_decimal::instance(Hybrid_type_traits_decimal::instance83,2943
Hybrid_type_traits_decimal::fix_length_and_dec(90,3062
void Hybrid_type_traits_decimal::set_zero(98,3293
void Hybrid_type_traits_decimal::add(105,3433
void Hybrid_type_traits_decimal::div(119,3778
Hybrid_type_traits_decimal::val_int(132,4182
Hybrid_type_traits_decimal::val_real(142,4426
Hybrid_type_traits_decimal::val_str(151,4631
static const Hybrid_type_traits_integer integer_traits_instance;161,5007
const Hybrid_type_traits_integer *Hybrid_type_traits_integer::instance(Hybrid_type_traits_integer::instance163,5073
Hybrid_type_traits_integer::fix_length_and_dec(169,5191
void item_init(184,5579
bool Item::val_bool(196,5708
String *Item::val_str_ascii(Item::val_str_ascii228,6501
String *Item::val_string_from_real(Item::val_string_from_real249,6944
String *Item::val_string_from_int(Item::val_string_from_int259,7145
String *Item::val_string_from_decimal(Item::val_string_from_decimal269,7322
my_decimal *Item::val_decimal_from_real(Item::val_decimal_from_real280,7611
my_decimal *Item::val_decimal_from_int(Item::val_decimal_from_int290,7826
my_decimal *Item::val_decimal_from_string(Item::val_decimal_from_string300,8051
my_decimal *Item::val_decimal_from_date(Item::val_decimal_from_date321,8647
my_decimal *Item::val_decimal_from_time(Item::val_decimal_from_time335,8997
double Item::val_real_from_decimal(348,9252
longlong Item::val_int_from_decimal(360,9554
int Item::save_time_in_field(371,9858
int Item::save_date_in_field(381,10090
int Item::save_str_value_in_field(412,10897
Item::Item(422,11131
Item::Item(459,12152
uint Item::decimal_precision(483,12792
void Item::print_item_w_name(498,13180
void Item::cleanup(511,13432
bool Item::cleanup_processor(528,13667
void Item::rename(542,13867
Item* Item::transform(583,15224
Item_ident::Item_ident(591,15391
Item_ident::Item_ident(605,15915
Item_ident::Item_ident(621,16437
void Item_ident::cleanup(636,16923
bool Item_ident::remove_dependence_processor(655,17517
bool Item_field::collect_item_field_processor(683,18412
bool Item_field::find_item_in_field_list_processor(716,19404
bool Item_field::register_field_in_read_map(739,19949
bool Item::check_cols(748,20157
void Item::set_name(759,20286
bool Item::eq(811,21787
Item *Item::safe_charset_converter(Item::safe_charset_converter823,22151
Item *Item_num::safe_charset_converter(Item_num::safe_charset_converter841,22700
Item *Item_static_float_func::safe_charset_converter(Item_static_float_func::safe_charset_converter881,24089
Item *Item_string::safe_charset_converter(Item_string::safe_charset_converter897,24498
Item *Item_param::safe_charset_converter(Item_param::safe_charset_converter925,25489
Item *Item_static_string_func::safe_charset_converter(Item_static_string_func::safe_charset_converter943,25981
bool Item_string::eq(970,26923
bool Item::get_date(988,27405
bool Item::get_time(1030,28440
CHARSET_INFO *Item::default_charset(Item::default_charset1043,28745
int Item::save_in_field_no_warnings(1057,29050
Item_sp_variable::Item_sp_variable(1081,29863
bool Item_sp_variable::fix_fields(1093,30104
double Item_sp_variable::val_real(1112,30477
longlong Item_sp_variable::val_int(1122,30640
String *Item_sp_variable::val_str(Item_sp_variable::val_str1132,30805
my_decimal *Item_sp_variable::val_decimal(Item_sp_variable::val_decimal1168,31861
bool Item_sp_variable::is_null(1178,32078
Item_splocal::Item_splocal(1188,32332
Item_splocal::this_item(1206,32866
Item_splocal::this_item(1214,32998
Item_splocal::this_item_addr(1223,33132
void Item_splocal::print(1231,33275
bool Item_splocal::set_value(1240,33460
Item_case_expr::Item_case_expr(1250,33770
Item_case_expr::this_item(1258,33919
Item_case_expr::this_item(1268,34065
Item_case_expr::this_item_addr(1277,34211
void Item_case_expr::print(1285,34366
double Item_name_const::val_real(1298,34831
longlong Item_name_const::val_int(1307,34984
String *Item_name_const::val_str(Item_name_const::val_str1316,35139
my_decimal *Item_name_const::val_decimal(Item_name_const::val_decimal1325,35304
bool Item_name_const::is_null(1334,35511
Item_name_const::Item_name_const(1340,35581
Item::Type Item_name_const::type(1357,36287
bool Item_name_const::fix_fields(1395,37577
void Item_name_const::print(1423,38347
class Item_aggregate_ref 1438,38798
  Item_aggregate_ref(Item_aggregate_ref::Item_aggregate_ref1441,38851
  virtual inline void print Item_aggregate_ref::print1445,39066
  virtual Ref_Type ref_type(Item_aggregate_ref::ref_type1452,39246
void Item::split_sum_func2(1475,39902
left_is_superset(1523,41906
bool DTCollation::aggregate(1582,44461
void my_coll_agg_error(1677,46571
void my_coll_agg_error(1687,46832
void my_coll_agg_error(1699,47159
bool agg_item_collations(1712,47580
bool agg_item_collations_for_comparison(1758,48689
bool agg_item_set_converter(1766,48962
bool agg_item_charsets(1899,53601
void Item_ident_for_show::make_field(1909,53906
Item_field::Item_field(1924,54449
Item_field::Item_field(1945,54954
Item_field::Item_field(1986,56541
Item_field::Item_field(2003,57165
adjust_max_effective_column_length(2035,58312
void Item_field::set_field(2070,59246
void Item_field::reset_field(2098,60138
const char *Item_ident::full_name(Item_ident::full_name2105,60290
void Item_ident::print(2130,60915
String *Item_field::val_str(Item_field::val_str2185,62545
double Item_field::val_real(2195,62752
longlong Item_field::val_int(2204,62896
my_decimal *Item_field::val_decimal(Item_field::val_decimal2213,63038
String *Item_field::str_result(Item_field::str_result2221,63203
bool Item_field::get_date(2229,63399
bool Item_field::get_date_result(2239,63612
bool Item_field::get_time(2250,63852
double Item_field::val_result(2260,64040
longlong Item_field::val_int_result(2267,64172
my_decimal *Item_field::val_decimal_result(Item_field::val_decimal_result2275,64308
bool Item_field::val_bool_result(2283,64494
bool Item_field::is_null_result(2309,65098
bool Item_field::eq(2315,65185
table_map Item_field::used_tables(2345,66313
Item *Item_field::get_tmp_table_item(Item_field::get_tmp_table_item2353,66494
longlong Item_field::val_int_endpoint(2361,66677
Item_int::Item_int(2373,67003
my_decimal *Item_int::val_decimal(Item_int::val_decimal2384,67247
String *Item_int::val_str(Item_int::val_str2390,67411
void Item_int::print(2398,67631
Item_uint::Item_uint(2406,67832
Item_uint::Item_uint(2413,67942
String *Item_uint::val_str(Item_uint::val_str2420,68067
void Item_uint::print(2429,68282
Item_decimal::Item_decimal(2437,68471
Item_decimal::Item_decimal(2450,69036
Item_decimal::Item_decimal(2462,69505
Item_decimal::Item_decimal(2474,69982
Item_decimal::Item_decimal(2485,70252
Item_decimal::Item_decimal(2497,70702
longlong Item_decimal::val_int(2508,71085
double Item_decimal::val_real(2515,71236
String *Item_decimal::val_str(Item_decimal::val_str2522,71372
void Item_decimal::print(2529,71557
bool Item_decimal::eq(2536,71732
void Item_decimal::set_decimal_value(2554,72251
String *Item_float::val_str(Item_float::val_str2566,72739
my_decimal *Item_float::val_decimal(Item_float::val_decimal2575,72952
void Item_string::print(2584,73212
double_from_string_with_check 2649,75137
double Item_string::val_real(2673,75804
longlong_from_string_with_check 2682,76045
longlong Item_string::val_int(2711,76809
my_decimal *Item_string::val_decimal(Item_string::val_decimal2719,77029
bool Item_null::eq(2725,77148
double Item_null::val_real(2729,77245
longlong Item_null::val_int(2736,77411
String *Item_null::val_str(Item_null::val_str2744,77591
my_decimal *Item_null::val_decimal(Item_null::val_decimal2752,77767
Item *Item_null::safe_charset_converter(Item_null::safe_charset_converter2758,77847
default_set_param_func(2772,78157
Item_param::Item_param(2780,78344
void Item_param::set_null(2803,79056
void Item_param::set_int(2820,79529
void Item_param::set_double(2831,79764
void Item_param::set_decimal(2855,80251
void Item_param::set_decimal(2871,80720
void Item_param::set_time(2896,81572
bool Item_param::set_str(2924,82401
bool Item_param::set_longdata(2944,82987
bool Item_param::set_from_user_var(2988,84224
void Item_param::reset(3068,86631
int Item_param::save_in_field(3099,87554
bool Item_param::get_time(3127,88265
bool Item_param::get_date(3142,88539
double Item_param::val_real(3153,88716
longlong Item_param::val_int(3189,89522
my_decimal *Item_param::val_decimal(Item_param::val_decimal3220,90186
String *Item_param::val_str(Item_param::val_str3250,90868
const String *Item_param::query_val_str(Item_param::query_val_str3294,92010
bool Item_param::convert_str_value(3350,93357
bool Item_param::basic_const_item(3387,94702
Item_param::clone_item(3396,94838
Item_param::eq(3423,95504
void Item_param::print(3455,96299
Item_param::set_param_type_and_swap_value(3494,97328
Item_param::set_value(3530,98197
Item_param::set_out_param_info(3607,99754
Item_param::get_out_param_info(3625,100222
void Item_param::make_field(3639,100532
Item_copy *Item_copy::create Item_copy::create3667,101416
double Item_copy_string::val_real(3691,102072
longlong Item_copy_string::val_int(3700,102324
int Item_copy_string::save_in_field(3709,102584
void Item_copy_string::copy(3715,102714
String *Item_copy_string::val_str(Item_copy_string::val_str3724,102894
my_decimal *Item_copy_string::val_decimal(Item_copy_string::val_decimal3733,103064
void Item_copy_int::copy(3747,103506
int Item_copy_int::save_in_field(3756,103741
String *Item_copy_int::val_str(Item_copy_int::val_str3763,103931
my_decimal *Item_copy_int::val_decimal(Item_copy_int::val_decimal3773,104082
String *Item_copy_uint::val_str(Item_copy_uint::val_str3787,104481
String *Item_copy_float::val_str(Item_copy_float::val_str3801,104820
my_decimal *Item_copy_float::val_decimal(Item_copy_float::val_decimal3814,105022
int Item_copy_float::save_in_field(3827,105272
int Item_copy_decimal::save_in_field(3840,105641
String *Item_copy_decimal::val_str(Item_copy_decimal::val_str3849,105844
double Item_copy_decimal::val_real(3859,106073
longlong Item_copy_decimal::val_int(3872,106269
void Item_copy_decimal::copy(3885,106482
bool Item::fix_fields(3899,106770
double Item_ref_null_helper::val_real(3908,106961
longlong Item_ref_null_helper::val_int(3917,107136
my_decimal *Item_ref_null_helper::val_decimal(Item_ref_null_helper::val_decimal3926,107318
bool Item_ref_null_helper::val_bool(3935,107552
String* Item_ref_null_helper::val_str(3944,107728
bool Item_ref_null_helper::get_date(3953,107914
static void mark_as_dependent(3971,108499
void mark_select_range_as_dependent(4015,110303
static Item** find_field_in_group_list(4074,112336
resolve_ref_in_select_and_group(4202,116517
Item_field::fix_outer_field(4315,120223
bool Item_field::fix_fields(4618,131448
Item *Item_field::safe_charset_converter(Item_field::safe_charset_converter4843,139326
void Item_field::cleanup(4850,139459
Item_equal *Item_field::find_item_equal(Item_field::find_item_equal4883,140445
bool Item_field::subst_argument_checker(4934,141721
static void convert_zerofill_number_to_string(4952,142259
Item *Item_field::equal_fields_propagator(Item_field::equal_fields_propagator4993,143517
bool Item_field::set_no_const_sub(5034,144925
Item *Item_field::replace_equal_field(Item_field::replace_equal_field5067,145879
void Item::init_make_field(5086,146298
void Item::make_field(5106,147040
enum_field_types Item::string_field_type(5112,147135
void Item_empty_string::make_field(5123,147389
enum_field_types Item::field_type(5129,147504
String *Item::check_well_formed_result(Item::check_well_formed_result5144,147868
bool Item::eq_by_collation(5202,149616
Field *Item::make_string_field(Item::make_string_field5235,150409
Field *Item::tmp_table_field_from_field_type(Item::tmp_table_field_from_field_type5268,151369
void Item_field::make_field(5376,154886
void Item_field::save_org_in_field(5393,155236
int Item_field::save_in_field(5408,155466
int Item_null::save_in_field(5448,156263
int Item_null::save_safe_in_field(5465,156555
int Item::save_in_field(5480,156967
int Item_string::save_in_field(5540,158693
int Item_uint::save_in_field(5548,158862
static int save_int_value_in_field 5554,159054
int Item_int::save_in_field(5564,159318
int Item_decimal::save_in_field(5570,159467
bool Item_int::eq(5577,159611
Item *Item_int_with_ref::clone_item(Item_int_with_ref::clone_item5593,160044
Item_num *Item_uint::neg(Item_uint::neg5606,160389
static uint nr_of_decimals(5613,160494
Item_float::Item_float(5667,162337
int Item_float::save_in_field(5686,162845
void Item_float::print(5696,163047
bool Item_float::eq(5716,163441
inline uint char_val(5731,163765
Item_hex_string::Item_hex_string(5738,163898
Item_hex_string::Item_hex_string(5743,163964
void Item_hex_string::hex_string_init(5748,164072
longlong Item_hex_string::val_int(5772,164694
my_decimal *Item_hex_string::val_decimal(Item_hex_string::val_decimal5786,165081
int Item_hex_string::save_in_field(5796,165390
void Item_hex_string::print(5829,166238
bool Item_hex_string::eq(5842,166602
Item *Item_hex_string::safe_charset_converter(Item_hex_string::safe_charset_converter5854,166898
Item_bin_string::Item_bin_string(5873,167297
bool Item_null::send(5915,168084
bool Item::send(5924,168252
bool Item::cache_const_expr_analyzer(6043,170690
Item* Item::cache_const_expr_transformer(6080,171665
bool Item_field::send(6096,171945
void Item_field::update_null_value(6102,172049
Item *Item_field::update_value_transformer(Item_field::update_value_transformer6140,173069
void Item_field::print(6163,173705
Item_ref::Item_ref(6184,174131
Item_ref::Item_ref(6200,174630
bool Item_ref::fix_fields(6278,177212
void Item_ref::set_properties(6511,186409
void Item_ref::cleanup(6533,187032
void Item_ref::print(6542,187162
bool Item_ref::send(6561,187625
double Item_ref::val_result(6569,187772
bool Item_ref::is_null_result(6581,187959
longlong Item_ref::val_int_result(6590,188087
String *Item_ref::str_result(Item_ref::str_result6602,188276
my_decimal *Item_ref::val_decimal_result(Item_ref::val_decimal_result6615,188532
bool Item_ref::val_bool_result(6627,188787
double Item_ref::val_real(6656,189406
longlong Item_ref::val_int(6665,189544
bool Item_ref::val_bool(6674,189689
String *Item_ref::val_str(Item_ref::val_str6683,189830
bool Item_ref::is_null(6692,189975
bool Item_ref::get_date(6701,190112
my_decimal *Item_ref::val_decimal(Item_ref::val_decimal6707,190240
int Item_ref::save_in_field(6714,190416
void Item_ref::save_org_in_field(6724,190621
void Item_ref::make_field(6730,190710
Item *Item_ref::get_tmp_table_item(Item_ref::get_tmp_table_item6747,191093
void Item_ref_null_helper::print(6762,191357
double Item_direct_ref::val_real(6773,191587
longlong Item_direct_ref::val_int(6781,191708
String *Item_direct_ref::val_str(Item_direct_ref::val_str6789,191831
my_decimal *Item_direct_ref::val_decimal(Item_direct_ref::val_decimal6797,191958
bool Item_direct_ref::val_bool(6805,192134
bool Item_direct_ref::is_null(6813,192252
bool Item_direct_ref::get_date(6819,192318
bool Item_direct_view_ref::fix_fields(6839,192724
bool Item_outer_ref::fix_fields(6880,193891
bool Item_direct_view_ref::eq(6912,194799
bool Item_default_value::eq(6926,195136
bool Item_default_value::fix_fields(6933,195319
void Item_default_value::print(6977,196365
int Item_default_value::save_in_field(6990,196615
Item *Item_default_value::transform(Item_default_value::transform7036,198028
bool Item_insert_value::eq(7063,198786
bool Item_insert_value::fix_fields(7070,198966
void Item_insert_value::print(7121,200488
void Item_trigger_field::setup_field(7149,201557
bool Item_trigger_field::eq(7173,202478
void Item_trigger_field::set_required_privilege(7182,202793
bool Item_trigger_field::set_value(7192,203058
bool Item_trigger_field::fix_fields(7219,203623
void Item_trigger_field::print(7263,204825
void Item_trigger_field::cleanup(7271,205010
Item_result item_cmp_type(7282,205259
void resolve_const_item(7297,205676
int stored_field_cmp_to_item(7409,209488
Item_cache* Item_cache::get_cache(7480,211869
Item_cache* Item_cache::get_cache(7495,212125
void Item_cache::store(7520,212882
void Item_cache::print(7528,212997
bool  Item_cache_int::cache_value(7538,213223
void Item_cache_int::store(7550,213448
String *Item_cache_int::val_str(Item_cache_int::val_str7560,213667
my_decimal *Item_cache_int::val_decimal(Item_cache_int::val_decimal7570,213853
double Item_cache_int::val_real(7579,214081
longlong Item_cache_int::val_int(7587,214208
bool  Item_cache_datetime::cache_value_int(7595,214325
bool  Item_cache_datetime::cache_value(7638,215186
void Item_cache_datetime::store(7686,216354
void Item_cache_datetime::store(7696,216582
String *Item_cache_datetime::val_str(Item_cache_datetime::val_str7702,216685
my_decimal *Item_cache_datetime::val_decimal(Item_cache_datetime::val_decimal7762,218351
double Item_cache_datetime::val_real(7771,218588
longlong Item_cache_datetime::val_int(7779,218763
bool Item_cache_real::cache_value(7787,218928
double Item_cache_real::val_real(7798,219108
longlong Item_cache_real::val_int(7806,219227
String* Item_cache_real::val_str(7815,219363
my_decimal *Item_cache_real::val_decimal(Item_cache_real::val_decimal7825,219546
bool Item_cache_decimal::cache_value(7835,219764
double Item_cache_decimal::val_real(7846,220055
longlong Item_cache_decimal::val_int(7856,220246
String* Item_cache_decimal::val_str(7866,220450
my_decimal *Item_cache_decimal::val_decimal(Item_cache_decimal::val_decimal7877,220754
bool Item_cache_str::cache_value(7886,220905
double Item_cache_str::val_real(7911,221574
longlong Item_cache_str::val_int(7925,221871
String* Item_cache_str::val_str(7939,222132
my_decimal *Item_cache_str::val_decimal(Item_cache_str::val_decimal7948,222260
int Item_cache_str::save_in_field(7961,222519
bool Item_cache_row::allocate(7971,222889
bool Item_cache_row::setup(7980,223069
void Item_cache_row::store(7997,223395
bool Item_cache_row::cache_value(8010,223598
void Item_cache_row::illegal_method_call(8026,223870
bool Item_cache_row::check_cols(8036,224145
bool Item_cache_row::null_inside(8047,224293
void Item_cache_row::bring_value(8067,224586
Item_type_holder::Item_type_holder(8078,224785
Item_result Item_type_holder::result_type(8103,225485
enum_field_types Item_type_holder::get_real_type(8116,225699
bool Item_type_holder::join_types(8190,227712
uint32 Item_type_holder::display_length(8306,231631
Field *Item_type_holder::make_field_by_type(Item_type_holder::make_field_by_type8366,232959
void Item_type_holder::get_full_info(8408,234209
double Item_type_holder::val_real(8436,235215
longlong Item_type_holder::val_int(8443,235315
my_decimal *Item_type_holder::val_decimal(Item_type_holder::val_decimal8449,235413
String *Item_type_holder::val_str(Item_type_holder::val_str8455,235530
void Item_result_field::cleanup(8461,235634
void dummy_error_processor(8476,235877
void view_error_processor(8487,236086

sql/item_cmpfunc.cc,11486
static Item_result item_store_type(39,1311
static void agg_result_type(55,1785
static int cmp_row_type(101,3040
static int agg_cmp_type(140,4162
enum_field_types agg_field_type(179,5431
static uint collect_cmp_types(208,6347
static void my_coll_agg_error(235,7217
Item_bool_func2* Eq_creator::create(245,7509
Item_bool_func2* Ne_creator::create(251,7608
Item_bool_func2* Gt_creator::create(257,7707
Item_bool_func2* Lt_creator::create(263,7806
Item_bool_func2* Ge_creator::create(269,7905
Item_bool_func2* Le_creator::create(275,8004
longlong Item_func_not::val_int(286,8212
void Item_func_not::print(303,8731
longlong Item_func_not_all::val_int(315,8921
bool Item_func_not_all::empty_underlying_subquery(332,9272
void Item_func_not_all::print(338,9448
longlong Item_func_nop_all::val_int(356,9863
static bool convert_constant_item(400,11233
void Item_bool_func2::fix_length_and_dec(471,13771
int Arg_comparator::set_compare_func(552,16268
bool get_mysql_time_from_str(679,20164
static ulonglong get_date_from_str(733,21952
Arg_comparator::can_compare_as_dates(779,23838
get_time_value(868,26711
int Arg_comparator::set_cmp_func(906,27774
bool Arg_comparator::try_year_cmp_func(992,30267
Item** Arg_comparator::cache_converted_constant(1045,31609
void Arg_comparator::set_datetime_cmp_func(1062,32156
get_datetime_value(1111,33890
get_year_value(1202,36887
int Arg_comparator::compare_datetime(1267,38742
int Arg_comparator::compare_string(1301,39574
int Arg_comparator::compare_binary_string(1330,40049
int Arg_comparator::compare_e_string(1356,40612
int Arg_comparator::compare_e_binary_string(1367,40862
int Arg_comparator::compare_real(1378,41096
int Arg_comparator::compare_decimal(1404,41666
int Arg_comparator::compare_e_real(1424,42077
int Arg_comparator::compare_e_decimal(1433,42313
int Arg_comparator::compare_real_fixed(1444,42639
int Arg_comparator::compare_e_real_fixed(1473,43265
int Arg_comparator::compare_int_signed(1483,43541
int Arg_comparator::compare_int_unsigned(1508,43966
int Arg_comparator::compare_int_signed_unsigned(1533,44399
int Arg_comparator::compare_int_unsigned_signed(1560,44904
int Arg_comparator::compare_e_int(1585,45386
int Arg_comparator::compare_e_int_diff_signedness(1597,45698
int Arg_comparator::compare_row(1606,45966
int Arg_comparator::compare_e_row(1659,47317
void Item_func_truth::fix_length_and_dec(1673,47528
void Item_func_truth::print(1682,47643
bool Item_func_truth::val_bool(1697,48001
longlong Item_func_truth::val_int(1720,48422
bool Item_in_optimizer::fix_left(1726,48495
bool Item_in_optimizer::fix_fields(1760,49417
longlong Item_in_optimizer::val_int(1857,52847
void Item_in_optimizer::keep_top_level_cache(1945,55556
void Item_in_optimizer::cleanup(1952,55649
bool Item_in_optimizer::is_null(1962,55815
longlong Item_func_eq::val_int(1969,55889
void Item_func_equal::fix_length_and_dec(1979,56059
longlong Item_func_equal::val_int(1985,56175
longlong Item_func_ne::val_int(1991,56267
longlong Item_func_ge::val_int(1999,56405
longlong Item_func_gt::val_int(2007,56528
longlong Item_func_le::val_int(2014,56649
longlong Item_func_lt::val_int(2022,56787
longlong Item_func_strcmp::val_int(2030,56924
bool Item_func_opt_neg::eq(2046,57273
void Item_func_interval::fix_length_and_dec(2066,57806
longlong Item_func_interval::val_int(2144,59818
bool Item_func_between::fix_fields(2251,62858
void Item_func_between::fix_length_and_dec(2271,63390
longlong Item_func_between::val_int(2344,65386
void Item_func_between::print(2454,68656
Item_func_ifnull::fix_length_and_dec(2468,69025
uint Item_func_ifnull::decimal_precision(2509,70105
enum_field_types Item_func_ifnull::field_type(2519,70405
Field *Item_func_ifnull::tmp_table_field(Item_func_ifnull::tmp_table_field2524,70493
Item_func_ifnull::real_op(2530,70612
Item_func_ifnull::int_op(2546,70892
my_decimal *Item_func_ifnull::decimal_op(Item_func_ifnull::decimal_op2562,71159
Item_func_ifnull::str_op(2579,71517
Item_func_if::fix_fields(2624,72734
void Item_func_if::cache_type_info(2639,73021
Item_func_if::fix_length_and_dec(2652,73375
uint Item_func_if::decimal_precision(2705,74834
Item_func_if::val_real(2715,75085
Item_func_if::val_int(2725,75284
Item_func_if::val_str(2735,75482
Item_func_if::val_decimal(2748,75748
Item_func_nullif::fix_length_and_dec(2759,75994
Item_func_nullif::val_real(2787,76678
Item_func_nullif::val_int(2802,76908
Item_func_nullif::val_str(2817,77135
Item_func_nullif::val_decimal(2833,77374
Item_func_nullif::is_null(2849,77644
Item *Item_func_case::find_item(Item_func_case::find_item2876,78629
String *Item_func_case::val_str(Item_func_case::val_str2916,79817
longlong Item_func_case::val_int(2934,80076
double Item_func_case::val_real(2952,80404
my_decimal *Item_func_case::val_decimal(Item_func_case::val_decimal2971,80732
bool Item_func_case::fix_fields(2991,81119
void Item_func_case::agg_str_lengths(3009,81667
void Item_func_case::agg_num_lengths(3017,81884
static void change_item_tree_if_needed(3038,82590
void Item_func_case::fix_length_and_dec(3049,82837
uint Item_func_case::decimal_precision(3196,87467
void Item_func_case::print(3213,87881
void Item_func_case::cleanup(3239,88524
String *Item_func_coalesce::str_op(Item_func_coalesce::str_op3257,88808
longlong Item_func_coalesce::int_op(3271,89051
double Item_func_coalesce::real_op(3285,89297
my_decimal *Item_func_coalesce::decimal_op(Item_func_coalesce::decimal_op3300,89543
void Item_func_coalesce::fix_length_and_dec(3315,89843
static inline int cmp_longs 3364,91196
static inline int cmp_ulongs 3388,91879
int cmp_longlong(3417,92894
static int cmp_double(3442,93737
static int cmp_row(3447,93842
static int cmp_decimal(3453,93940
int in_vector::find(3465,94257
in_string::in_string(3487,94721
in_string::~in_string(3492,94897
void in_string::set(3502,95085
uchar *in_string::get_value(in_string::get_value3525,95571
in_row::in_row(3530,95655
in_row::~in_row(3543,95978
uchar *in_row::get_value(in_row::get_value3549,96049
void in_row::set(3557,96177
in_longlong::in_longlong(3565,96405
void in_longlong::set(3569,96525
uchar *in_longlong::get_value(in_longlong::get_value3577,96715
void in_datetime::set(3586,96894
uchar *in_datetime::get_value(in_datetime::get_value3596,97150
in_double::in_double(3607,97434
void in_double::set(3611,97539
uchar *in_double::get_value(in_double::get_value3616,97628
in_decimal::in_decimal(3625,97790
void in_decimal::set(3630,97904
uchar *in_decimal::get_value(in_decimal::get_value3643,98320
cmp_item* cmp_item::get_comparator(3652,98478
cmp_item* cmp_item_sort_string::make_same(3674,98957
cmp_item* cmp_item_int::make_same(3679,99064
cmp_item* cmp_item_real::make_same(3684,99134
cmp_item* cmp_item_row::make_same(3689,99206
cmp_item_row::~cmp_item_row(3695,99277
void cmp_item_row::alloc_comparators(3711,99537
void cmp_item_row::store_value(3718,99676
void cmp_item_row::store_value_by_template(3742,100319
int cmp_item_row::cmp(3767,100974
int cmp_item_row::compare(3790,101383
void cmp_item_decimal::store_value(3803,101614
int cmp_item_decimal::cmp(3812,101819
int cmp_item_decimal::compare(3821,101993
cmp_item* cmp_item_decimal::make_same(3828,102144
void cmp_item_datetime::store_value(3834,102223
int cmp_item_datetime::cmp(3842,102425
int cmp_item_datetime::compare(3851,102592
cmp_item *cmp_item_datetime::make_same(cmp_item_datetime::make_same3858,102770
bool Item_func_in::nulls_in_row(3864,102860
Item_func_in::fix_fields(3905,104081
static int srtcmp_in(3925,104626
void Item_func_in::fix_length_and_dec(3933,104869
void Item_func_in::print(4169,111765
longlong Item_func_in::val_int(4206,112944
longlong Item_func_bit_or::val_int(4249,114033
longlong Item_func_bit_and::val_int(4269,114438
Item_cond::Item_cond(4288,114893
void Item_cond::copy_andor_arguments(4299,115131
Item_cond::fix_fields(4308,115325
bool Item_cond::walk(4379,117694
Item *Item_cond::transform(Item_cond::transform4408,118650
Item *Item_cond::compile(Item_cond::compile4457,120348
void Item_cond::traverse_cond(4479,120987
void Item_cond::split_sum_func(4520,122024
Item_cond::used_tables(4531,122302
void Item_cond::update_used_tables(4537,122399
void Item_cond::print(4553,122689
void Item_cond::neg_arguments(4571,123040
longlong Item_cond_and::val_int(4608,123860
longlong Item_cond_or::val_int(4626,124183
Item *and_expressions(and_expressions4665,125030
longlong Item_func_isnull::val_int(4687,125612
longlong Item_is_not_null_test::val_int(4699,125920
void Item_is_not_null_test::update_used_tables(4722,126418
longlong Item_func_isnotnull::val_int(4741,126839
void Item_func_isnotnull::print(4748,126949
longlong Item_func_like::val_int(4756,127132
Item_func::optimize_type Item_func_like::select_optimize(4785,127778
bool Item_func_like::fix_fields(4805,128193
void Item_func_like::cleanup(4916,131876
int Item_func_regex::regcomp(4935,132294
Item_func_regex::fix_fields(4980,133263
longlong Item_func_regex::val_int(5032,134845
void Item_func_regex::cleanup(5059,135528
#define likeconv(5074,135783
#define likeconv(5076,135837
void Item_func_like::turboBM_compute_suffixes(5084,135963
void Item_func_like::turboBM_compute_good_suffix_shifts(5140,136968
void Item_func_like::turboBM_compute_bad_character_shifts(5184,137729
bool Item_func_like::turboBM_matches(5215,138293
longlong Item_cond_xor::val_int(5309,140350
Item *Item_func_not::neg_transformer(Item_func_not::neg_transformer5354,141378
Item *Item_bool_rowready_func2::neg_transformer(Item_bool_rowready_func2::neg_transformer5360,141469
Item *Item_func_isnull::neg_transformer(Item_func_isnull::neg_transformer5370,141617
Item *Item_func_isnotnull::neg_transformer(Item_func_isnotnull::neg_transformer5380,141775
Item *Item_cond_and::neg_transformer(Item_cond_and::neg_transformer5387,141894
Item *Item_cond_or::neg_transformer(Item_cond_or::neg_transformer5396,142086
Item *Item_func_nop_all::neg_transformer(Item_func_nop_all::neg_transformer5405,142278
Item *Item_func_not_all::neg_transformer(Item_func_not_all::neg_transformer5416,142661
Item *Item_func_eq::negated_item(Item_func_eq::negated_item5427,143043
Item *Item_func_ne::negated_item(Item_func_ne::negated_item5433,143154
Item *Item_func_lt::negated_item(Item_func_lt::negated_item5439,143265
Item *Item_func_ge::negated_item(Item_func_ge::negated_item5445,143376
Item *Item_func_gt::negated_item(Item_func_gt::negated_item5451,143487
Item *Item_func_le::negated_item(Item_func_le::negated_item5457,143598
Item *Item_bool_rowready_func2::negated_item(Item_bool_rowready_func2::negated_item5465,143759
Item_equal::Item_equal(5471,143841
Item_equal::Item_equal(5480,144066
Item_equal::Item_equal(5490,144270
void Item_equal::compare_const(5506,144658
void Item_equal::add(5525,145025
void Item_equal::add(5540,145244
void Item_equal::add(5552,145387
uint Item_equal::members(5557,145451
bool Item_equal::contains(5576,145824
void Item_equal::merge(5600,146425
void Item_equal::sort(5634,147492
void Item_equal::update_const(5676,148419
bool Item_equal::fix_fields(5704,149357
void Item_equal::update_used_tables(5724,149827
longlong Item_equal::val_int(5740,150258
void Item_equal::fix_length_and_dec(5762,150801
bool Item_equal::walk(5769,150996
Item *Item_equal::transform(Item_equal::transform5781,151295
void Item_equal::print(5805,152004

sql/item_create.cc,65290
class Create_native_func 49,1637
  Create_native_func(Create_native_func::Create_native_func66,2168
  virtual ~Create_native_func(Create_native_func::~Create_native_func68,2215
class Create_func_arg0 76,2322
  Create_func_arg0(Create_func_arg0::Create_func_arg090,2663
  virtual ~Create_func_arg0(Create_func_arg0::~Create_func_arg092,2708
class Create_func_arg1 100,2811
  Create_func_arg1(Create_func_arg1::Create_func_arg1115,3215
  virtual ~Create_func_arg1(Create_func_arg1::~Create_func_arg1117,3260
class Create_func_arg2 125,3364
  Create_func_arg2(Create_func_arg2::Create_func_arg2141,3833
  virtual ~Create_func_arg2(Create_func_arg2::~Create_func_arg2143,3878
class Create_func_arg3 151,3984
  Create_func_arg3(Create_func_arg3::Create_func_arg3168,4518
  virtual ~Create_func_arg3(Create_func_arg3::~Create_func_arg3170,4563
class Create_sp_func 178,4650
  static Create_sp_func s_singleton;Create_sp_func::s_singleton184,4840
  Create_sp_func(Create_sp_func::Create_sp_func188,4911
  virtual ~Create_sp_func(Create_sp_func::~Create_sp_func190,4954
class Create_func_no_geom 201,5159
  static Create_func_no_geom s_singleton;Create_func_no_geom::s_singleton207,5316
  Create_func_no_geom(Create_func_no_geom::Create_func_no_geom211,5392
  virtual ~Create_func_no_geom(Create_func_no_geom::~Create_func_no_geom213,5440
class Create_func_abs 224,5677
  static Create_func_abs s_singleton;Create_func_abs::s_singleton229,5782
  Create_func_abs(Create_func_abs::Create_func_abs232,5832
  virtual ~Create_func_abs(Create_func_abs::~Create_func_abs233,5855
class Create_func_acos 237,5892
  static Create_func_acos s_singleton;Create_func_acos::s_singleton242,5998
  Create_func_acos(Create_func_acos::Create_func_acos245,6049
  virtual ~Create_func_acos(Create_func_acos::~Create_func_acos246,6073
class Create_func_addtime 250,6111
  static Create_func_addtime s_singleton;Create_func_addtime::s_singleton255,6232
  Create_func_addtime(Create_func_addtime::Create_func_addtime258,6286
  virtual ~Create_func_addtime(Create_func_addtime::~Create_func_addtime259,6313
class Create_func_aes_encrypt 263,6354
  static Create_func_aes_encrypt s_singleton;Create_func_aes_encrypt::s_singleton268,6479
  Create_func_aes_encrypt(Create_func_aes_encrypt::Create_func_aes_encrypt271,6537
  virtual ~Create_func_aes_encrypt(Create_func_aes_encrypt::~Create_func_aes_encrypt272,6568
class Create_func_aes_decrypt 276,6613
  static Create_func_aes_decrypt s_singleton;Create_func_aes_decrypt::s_singleton281,6738
  Create_func_aes_decrypt(Create_func_aes_decrypt::Create_func_aes_decrypt284,6796
  virtual ~Create_func_aes_decrypt(Create_func_aes_decrypt::~Create_func_aes_decrypt285,6827
class Create_func_area 290,6892
  static Create_func_area s_singleton;Create_func_area::s_singleton295,6998
  Create_func_area(Create_func_area::Create_func_area298,7049
  virtual ~Create_func_area(Create_func_area::~Create_func_area299,7073
class Create_func_as_wkb 305,7138
  static Create_func_as_wkb s_singleton;Create_func_as_wkb::s_singleton310,7246
  Create_func_as_wkb(Create_func_as_wkb::Create_func_as_wkb313,7299
  virtual ~Create_func_as_wkb(Create_func_as_wkb::~Create_func_as_wkb314,7325
class Create_func_as_wkt 320,7392
  static Create_func_as_wkt s_singleton;Create_func_as_wkt::s_singleton325,7500
  Create_func_as_wkt(Create_func_as_wkt::Create_func_as_wkt328,7553
  virtual ~Create_func_as_wkt(Create_func_as_wkt::~Create_func_as_wkt329,7579
class Create_func_asin 334,7626
  static Create_func_asin s_singleton;Create_func_asin::s_singleton339,7732
  Create_func_asin(Create_func_asin::Create_func_asin342,7783
  virtual ~Create_func_asin(Create_func_asin::~Create_func_asin343,7807
class Create_func_atan 347,7845
  static Create_func_atan s_singleton;Create_func_atan::s_singleton352,7988
  Create_func_atan(Create_func_atan::Create_func_atan355,8039
  virtual ~Create_func_atan(Create_func_atan::~Create_func_atan356,8063
class Create_func_benchmark 360,8101
  static Create_func_benchmark s_singleton;Create_func_benchmark::s_singleton365,8224
  Create_func_benchmark(Create_func_benchmark::Create_func_benchmark368,8280
  virtual ~Create_func_benchmark(Create_func_benchmark::~Create_func_benchmark369,8309
class Create_func_bin 373,8352
  static Create_func_bin s_singleton;Create_func_bin::s_singleton378,8457
  Create_func_bin(Create_func_bin::Create_func_bin381,8507
  virtual ~Create_func_bin(Create_func_bin::~Create_func_bin382,8530
class Create_func_bit_count 386,8567
  static Create_func_bit_count s_singleton;Create_func_bit_count::s_singleton391,8678
  Create_func_bit_count(Create_func_bit_count::Create_func_bit_count394,8734
  virtual ~Create_func_bit_count(Create_func_bit_count::~Create_func_bit_count395,8763
class Create_func_bit_length 399,8806
  static Create_func_bit_length s_singleton;Create_func_bit_length::s_singleton404,8918
  Create_func_bit_length(Create_func_bit_length::Create_func_bit_length407,8975
  virtual ~Create_func_bit_length(Create_func_bit_length::~Create_func_bit_length408,9005
class Create_func_ceiling 412,9049
  static Create_func_ceiling s_singleton;Create_func_ceiling::s_singleton417,9158
  Create_func_ceiling(Create_func_ceiling::Create_func_ceiling420,9212
  virtual ~Create_func_ceiling(Create_func_ceiling::~Create_func_ceiling421,9239
class Create_func_centroid 426,9300
  static Create_func_centroid s_singleton;Create_func_centroid::s_singleton431,9410
  Create_func_centroid(Create_func_centroid::Create_func_centroid434,9465
  virtual ~Create_func_centroid(Create_func_centroid::~Create_func_centroid435,9493
class Create_func_char_length 440,9542
  static Create_func_char_length s_singleton;Create_func_char_length::s_singleton445,9655
  Create_func_char_length(Create_func_char_length::Create_func_char_length448,9713
  virtual ~Create_func_char_length(Create_func_char_length::~Create_func_char_length449,9744
class Create_func_coercibility 453,9789
  static Create_func_coercibility s_singleton;Create_func_coercibility::s_singleton458,9903
  Create_func_coercibility(Create_func_coercibility::Create_func_coercibility461,9962
  virtual ~Create_func_coercibility(Create_func_coercibility::~Create_func_coercibility462,9994
class Create_func_compress 466,10040
  static Create_func_compress s_singleton;Create_func_compress::s_singleton471,10150
  Create_func_compress(Create_func_compress::Create_func_compress474,10205
  virtual ~Create_func_compress(Create_func_compress::~Create_func_compress475,10233
class Create_func_concat 479,10275
  static Create_func_concat s_singleton;Create_func_concat::s_singleton484,10420
  Create_func_concat(Create_func_concat::Create_func_concat487,10473
  virtual ~Create_func_concat(Create_func_concat::~Create_func_concat488,10499
class Create_func_concat_ws 492,10539
  static Create_func_concat_ws s_singleton;Create_func_concat_ws::s_singleton497,10687
  Create_func_concat_ws(Create_func_concat_ws::Create_func_concat_ws500,10743
  virtual ~Create_func_concat_ws(Create_func_concat_ws::~Create_func_concat_ws501,10772
class Create_func_connection_id 505,10815
  static Create_func_connection_id s_singleton;Create_func_connection_id::s_singleton510,10918
  Create_func_connection_id(Create_func_connection_id::Create_func_connection_id513,10978
  virtual ~Create_func_connection_id(Create_func_connection_id::~Create_func_connection_id514,11011
class Create_func_contains 519,11078
  static Create_func_contains s_singleton;Create_func_contains::s_singleton524,11200
  Create_func_contains(Create_func_contains::Create_func_contains527,11255
  virtual ~Create_func_contains(Create_func_contains::~Create_func_contains528,11283
class Create_func_conv 533,11332
  static Create_func_conv s_singleton;Create_func_conv::s_singleton538,11462
  Create_func_conv(Create_func_conv::Create_func_conv541,11513
  virtual ~Create_func_conv(Create_func_conv::~Create_func_conv542,11537
class Create_func_convert_tz 546,11575
  static Create_func_convert_tz s_singleton;Create_func_convert_tz::s_singleton551,11711
  Create_func_convert_tz(Create_func_convert_tz::Create_func_convert_tz554,11768
  virtual ~Create_func_convert_tz(Create_func_convert_tz::~Create_func_convert_tz555,11798
class Create_func_cos 559,11842
  static Create_func_cos s_singleton;Create_func_cos::s_singleton564,11947
  Create_func_cos(Create_func_cos::Create_func_cos567,11997
  virtual ~Create_func_cos(Create_func_cos::~Create_func_cos568,12020
class Create_func_cot 572,12057
  static Create_func_cot s_singleton;Create_func_cot::s_singleton577,12162
  Create_func_cot(Create_func_cot::Create_func_cot580,12212
  virtual ~Create_func_cot(Create_func_cot::~Create_func_cot581,12235
class Create_func_crc32 585,12272
  static Create_func_crc32 s_singleton;Create_func_crc32::s_singleton590,12379
  Create_func_crc32(Create_func_crc32::Create_func_crc32593,12431
  virtual ~Create_func_crc32(Create_func_crc32::~Create_func_crc32594,12456
class Create_func_crosses 599,12515
  static Create_func_crosses s_singleton;Create_func_crosses::s_singleton604,12636
  Create_func_crosses(Create_func_crosses::Create_func_crosses607,12690
  virtual ~Create_func_crosses(Create_func_crosses::~Create_func_crosses608,12717
class Create_func_date_format 613,12765
  static Create_func_date_format s_singleton;Create_func_date_format::s_singleton618,12890
  Create_func_date_format(Create_func_date_format::Create_func_date_format621,12948
  virtual ~Create_func_date_format(Create_func_date_format::~Create_func_date_format622,12979
class Create_func_datediff 626,13024
  static Create_func_datediff s_singleton;Create_func_datediff::s_singleton631,13146
  Create_func_datediff(Create_func_datediff::Create_func_datediff634,13201
  virtual ~Create_func_datediff(Create_func_datediff::~Create_func_datediff635,13229
class Create_func_dayname 639,13271
  static Create_func_dayname s_singleton;Create_func_dayname::s_singleton644,13380
  Create_func_dayname(Create_func_dayname::Create_func_dayname647,13434
  virtual ~Create_func_dayname(Create_func_dayname::~Create_func_dayname648,13461
class Create_func_dayofmonth 652,13502
  static Create_func_dayofmonth s_singleton;Create_func_dayofmonth::s_singleton657,13614
  Create_func_dayofmonth(Create_func_dayofmonth::Create_func_dayofmonth660,13671
  virtual ~Create_func_dayofmonth(Create_func_dayofmonth::~Create_func_dayofmonth661,13701
class Create_func_dayofweek 665,13745
  static Create_func_dayofweek s_singleton;Create_func_dayofweek::s_singleton670,13856
  Create_func_dayofweek(Create_func_dayofweek::Create_func_dayofweek673,13912
  virtual ~Create_func_dayofweek(Create_func_dayofweek::~Create_func_dayofweek674,13941
class Create_func_dayofyear 678,13984
  static Create_func_dayofyear s_singleton;Create_func_dayofyear::s_singleton683,14095
  Create_func_dayofyear(Create_func_dayofyear::Create_func_dayofyear686,14151
  virtual ~Create_func_dayofyear(Create_func_dayofyear::~Create_func_dayofyear687,14180
class Create_func_decode 691,14223
  static Create_func_decode s_singleton;Create_func_decode::s_singleton696,14343
  Create_func_decode(Create_func_decode::Create_func_decode699,14396
  virtual ~Create_func_decode(Create_func_decode::~Create_func_decode700,14422
class Create_func_degrees 704,14462
  static Create_func_degrees s_singleton;Create_func_degrees::s_singleton709,14571
  Create_func_degrees(Create_func_degrees::Create_func_degrees712,14625
  virtual ~Create_func_degrees(Create_func_degrees::~Create_func_degrees713,14652
class Create_func_des_decrypt 717,14693
  static Create_func_des_decrypt s_singleton;Create_func_des_decrypt::s_singleton722,14843
  Create_func_des_decrypt(Create_func_des_decrypt::Create_func_des_decrypt725,14901
  virtual ~Create_func_des_decrypt(Create_func_des_decrypt::~Create_func_des_decrypt726,14932
class Create_func_des_encrypt 730,14977
  static Create_func_des_encrypt s_singleton;Create_func_des_encrypt::s_singleton735,15127
  Create_func_des_encrypt(Create_func_des_encrypt::Create_func_des_encrypt738,15185
  virtual ~Create_func_des_encrypt(Create_func_des_encrypt::~Create_func_des_encrypt739,15216
class Create_func_dimension 744,15281
  static Create_func_dimension s_singleton;Create_func_dimension::s_singleton749,15392
  Create_func_dimension(Create_func_dimension::Create_func_dimension752,15448
  virtual ~Create_func_dimension(Create_func_dimension::~Create_func_dimension753,15477
class Create_func_disjoint 759,15547
  static Create_func_disjoint s_singleton;Create_func_disjoint::s_singleton764,15669
  Create_func_disjoint(Create_func_disjoint::Create_func_disjoint767,15724
  virtual ~Create_func_disjoint(Create_func_disjoint::~Create_func_disjoint768,15752
class Create_func_elt 773,15801
  static Create_func_elt s_singleton;Create_func_elt::s_singleton778,15943
  Create_func_elt(Create_func_elt::Create_func_elt781,15993
  virtual ~Create_func_elt(Create_func_elt::~Create_func_elt782,16016
class Create_func_encode 786,16053
  static Create_func_encode s_singleton;Create_func_encode::s_singleton791,16173
  Create_func_encode(Create_func_encode::Create_func_encode794,16226
  virtual ~Create_func_encode(Create_func_encode::~Create_func_encode795,16252
class Create_func_encrypt 799,16292
  static Create_func_encrypt s_singleton;Create_func_encrypt::s_singleton804,16438
  Create_func_encrypt(Create_func_encrypt::Create_func_encrypt807,16492
  virtual ~Create_func_encrypt(Create_func_encrypt::~Create_func_encrypt808,16519
class Create_func_endpoint 813,16580
  static Create_func_endpoint s_singleton;Create_func_endpoint::s_singleton818,16690
  Create_func_endpoint(Create_func_endpoint::Create_func_endpoint821,16745
  virtual ~Create_func_endpoint(Create_func_endpoint::~Create_func_endpoint822,16773
class Create_func_envelope 828,16842
  static Create_func_envelope s_singleton;Create_func_envelope::s_singleton833,16952
  Create_func_envelope(Create_func_envelope::Create_func_envelope836,17007
  virtual ~Create_func_envelope(Create_func_envelope::~Create_func_envelope837,17035
class Create_func_equals 843,17104
  static Create_func_equals s_singleton;Create_func_equals::s_singleton848,17224
  Create_func_equals(Create_func_equals::Create_func_equals851,17277
  virtual ~Create_func_equals(Create_func_equals::~Create_func_equals852,17303
class Create_func_exp 857,17350
  static Create_func_exp s_singleton;Create_func_exp::s_singleton862,17455
  Create_func_exp(Create_func_exp::Create_func_exp865,17505
  virtual ~Create_func_exp(Create_func_exp::~Create_func_exp866,17528
class Create_func_export_set 870,17565
  static Create_func_export_set s_singleton;Create_func_export_set::s_singleton875,17714
  Create_func_export_set(Create_func_export_set::Create_func_export_set878,17771
  virtual ~Create_func_export_set(Create_func_export_set::~Create_func_export_set879,17801
class Create_func_exteriorring 884,17865
  static Create_func_exteriorring s_singleton;Create_func_exteriorring::s_singleton889,17979
  Create_func_exteriorring(Create_func_exteriorring::Create_func_exteriorring892,18038
  virtual ~Create_func_exteriorring(Create_func_exteriorring::~Create_func_exteriorring893,18070
class Create_func_field 898,18123
  static Create_func_field s_singleton;Create_func_field::s_singleton903,18267
  Create_func_field(Create_func_field::Create_func_field906,18319
  virtual ~Create_func_field(Create_func_field::~Create_func_field907,18344
class Create_func_find_in_set 911,18383
  static Create_func_find_in_set s_singleton;Create_func_find_in_set::s_singleton916,18508
  Create_func_find_in_set(Create_func_find_in_set::Create_func_find_in_set919,18566
  virtual ~Create_func_find_in_set(Create_func_find_in_set::~Create_func_find_in_set920,18597
class Create_func_floor 924,18642
  static Create_func_floor s_singleton;Create_func_floor::s_singleton929,18749
  Create_func_floor(Create_func_floor::Create_func_floor932,18801
  virtual ~Create_func_floor(Create_func_floor::~Create_func_floor933,18826
class Create_func_format 937,18865
  static Create_func_format s_singleton;Create_func_format::s_singleton942,19010
  Create_func_format(Create_func_format::Create_func_format945,19063
  virtual ~Create_func_format(Create_func_format::~Create_func_format946,19089
class Create_func_found_rows 950,19129
  static Create_func_found_rows s_singleton;Create_func_found_rows::s_singleton955,19229
  Create_func_found_rows(Create_func_found_rows::Create_func_found_rows958,19286
  virtual ~Create_func_found_rows(Create_func_found_rows::~Create_func_found_rows959,19316
class Create_func_from_days 963,19360
  static Create_func_from_days s_singleton;Create_func_from_days::s_singleton968,19471
  Create_func_from_days(Create_func_from_days::Create_func_from_days971,19527
  virtual ~Create_func_from_days(Create_func_from_days::~Create_func_from_days972,19556
class Create_func_from_unixtime 976,19599
  static Create_func_from_unixtime s_singleton;Create_func_from_unixtime::s_singleton981,19751
  Create_func_from_unixtime(Create_func_from_unixtime::Create_func_from_unixtime984,19811
  virtual ~Create_func_from_unixtime(Create_func_from_unixtime::~Create_func_from_unixtime985,19844
class Create_func_geometry_from_text 990,19911
  static Create_func_geometry_from_text s_singleton;Create_func_geometry_from_text::s_singleton995,20068
  Create_func_geometry_from_text(Create_func_geometry_from_text::Create_func_geometry_from_text998,20133
  virtual ~Create_func_geometry_from_text(Create_func_geometry_from_text::~Create_func_geometry_from_text999,20171
class Create_func_geometry_from_wkb 1005,20250
  static Create_func_geometry_from_wkb s_singleton;Create_func_geometry_from_wkb::s_singleton1010,20406
  Create_func_geometry_from_wkb(Create_func_geometry_from_wkb::Create_func_geometry_from_wkb1013,20470
  virtual ~Create_func_geometry_from_wkb(Create_func_geometry_from_wkb::~Create_func_geometry_from_wkb1014,20507
class Create_func_geometry_type 1020,20585
  static Create_func_geometry_type s_singleton;Create_func_geometry_type::s_singleton1025,20700
  Create_func_geometry_type(Create_func_geometry_type::Create_func_geometry_type1028,20760
  virtual ~Create_func_geometry_type(Create_func_geometry_type::~Create_func_geometry_type1029,20793
class Create_func_geometryn 1035,20867
  static Create_func_geometryn s_singleton;Create_func_geometryn::s_singleton1040,20990
  Create_func_geometryn(Create_func_geometryn::Create_func_geometryn1043,21046
  virtual ~Create_func_geometryn(Create_func_geometryn::~Create_func_geometryn1044,21075
class Create_func_get_lock 1049,21125
  static Create_func_get_lock s_singleton;Create_func_get_lock::s_singleton1054,21247
  Create_func_get_lock(Create_func_get_lock::Create_func_get_lock1057,21302
  virtual ~Create_func_get_lock(Create_func_get_lock::~Create_func_get_lock1058,21330
class Create_func_glength 1063,21392
  static Create_func_glength s_singleton;Create_func_glength::s_singleton1068,21501
  Create_func_glength(Create_func_glength::Create_func_glength1071,21555
  virtual ~Create_func_glength(Create_func_glength::~Create_func_glength1072,21582
class Create_func_greatest 1077,21630
  static Create_func_greatest s_singleton;Create_func_greatest::s_singleton1082,21777
  Create_func_greatest(Create_func_greatest::Create_func_greatest1085,21832
  virtual ~Create_func_greatest(Create_func_greatest::~Create_func_greatest1086,21860
class Create_func_hex 1090,21902
  static Create_func_hex s_singleton;Create_func_hex::s_singleton1095,22007
  Create_func_hex(Create_func_hex::Create_func_hex1098,22057
  virtual ~Create_func_hex(Create_func_hex::~Create_func_hex1099,22080
class Create_func_ifnull 1103,22117
  static Create_func_ifnull s_singleton;Create_func_ifnull::s_singleton1108,22237
  Create_func_ifnull(Create_func_ifnull::Create_func_ifnull1111,22290
  virtual ~Create_func_ifnull(Create_func_ifnull::~Create_func_ifnull1112,22316
class Create_func_inet_ntoa 1116,22356
  static Create_func_inet_ntoa s_singleton;Create_func_inet_ntoa::s_singleton1121,22467
  Create_func_inet_ntoa(Create_func_inet_ntoa::Create_func_inet_ntoa1124,22523
  virtual ~Create_func_inet_ntoa(Create_func_inet_ntoa::~Create_func_inet_ntoa1125,22552
class Create_func_inet_aton 1129,22595
  static Create_func_inet_aton s_singleton;Create_func_inet_aton::s_singleton1134,22706
  Create_func_inet_aton(Create_func_inet_aton::Create_func_inet_aton1137,22762
  virtual ~Create_func_inet_aton(Create_func_inet_aton::~Create_func_inet_aton1138,22791
class Create_func_instr 1142,22834
  static Create_func_instr s_singleton;Create_func_instr::s_singleton1147,22953
  Create_func_instr(Create_func_instr::Create_func_instr1150,23005
  virtual ~Create_func_instr(Create_func_instr::~Create_func_instr1151,23030
class Create_func_interiorringn 1156,23089
  static Create_func_interiorringn s_singleton;Create_func_interiorringn::s_singleton1161,23216
  Create_func_interiorringn(Create_func_interiorringn::Create_func_interiorringn1164,23276
  virtual ~Create_func_interiorringn(Create_func_interiorringn::~Create_func_interiorringn1165,23309
class Create_func_intersects 1171,23383
  static Create_func_intersects s_singleton;Create_func_intersects::s_singleton1176,23507
  Create_func_intersects(Create_func_intersects::Create_func_intersects1179,23564
  virtual ~Create_func_intersects(Create_func_intersects::~Create_func_intersects1180,23594
class Create_func_is_free_lock 1185,23645
  static Create_func_is_free_lock s_singleton;Create_func_is_free_lock::s_singleton1190,23759
  Create_func_is_free_lock(Create_func_is_free_lock::Create_func_is_free_lock1193,23818
  virtual ~Create_func_is_free_lock(Create_func_is_free_lock::~Create_func_is_free_lock1194,23850
class Create_func_is_used_lock 1198,23896
  static Create_func_is_used_lock s_singleton;Create_func_is_used_lock::s_singleton1203,24010
  Create_func_is_used_lock(Create_func_is_used_lock::Create_func_is_used_lock1206,24069
  virtual ~Create_func_is_used_lock(Create_func_is_used_lock::~Create_func_is_used_lock1207,24101
class Create_func_isclosed 1212,24167
  static Create_func_isclosed s_singleton;Create_func_isclosed::s_singleton1217,24277
  Create_func_isclosed(Create_func_isclosed::Create_func_isclosed1220,24332
  virtual ~Create_func_isclosed(Create_func_isclosed::~Create_func_isclosed1221,24360
class Create_func_isempty 1227,24429
  static Create_func_isempty s_singleton;Create_func_isempty::s_singleton1232,24538
  Create_func_isempty(Create_func_isempty::Create_func_isempty1235,24592
  virtual ~Create_func_isempty(Create_func_isempty::~Create_func_isempty1236,24619
class Create_func_isnull 1241,24667
  static Create_func_isnull s_singleton;Create_func_isnull::s_singleton1246,24775
  Create_func_isnull(Create_func_isnull::Create_func_isnull1249,24828
  virtual ~Create_func_isnull(Create_func_isnull::~Create_func_isnull1250,24854
class Create_func_issimple 1255,24914
  static Create_func_issimple s_singleton;Create_func_issimple::s_singleton1260,25024
  Create_func_issimple(Create_func_issimple::Create_func_issimple1263,25079
  virtual ~Create_func_issimple(Create_func_issimple::~Create_func_issimple1264,25107
class Create_func_last_day 1269,25156
  static Create_func_last_day s_singleton;Create_func_last_day::s_singleton1274,25266
  Create_func_last_day(Create_func_last_day::Create_func_last_day1277,25321
  virtual ~Create_func_last_day(Create_func_last_day::~Create_func_last_day1278,25349
class Create_func_last_insert_id 1282,25391
  static Create_func_last_insert_id s_singleton;Create_func_last_insert_id::s_singleton1287,25544
  Create_func_last_insert_id(Create_func_last_insert_id::Create_func_last_insert_id1290,25605
  virtual ~Create_func_last_insert_id(Create_func_last_insert_id::~Create_func_last_insert_id1291,25639
class Create_func_lcase 1295,25687
  static Create_func_lcase s_singleton;Create_func_lcase::s_singleton1300,25794
  Create_func_lcase(Create_func_lcase::Create_func_lcase1303,25846
  virtual ~Create_func_lcase(Create_func_lcase::~Create_func_lcase1304,25871
class Create_func_least 1308,25910
  static Create_func_least s_singleton;Create_func_least::s_singleton1313,26054
  Create_func_least(Create_func_least::Create_func_least1316,26106
  virtual ~Create_func_least(Create_func_least::~Create_func_least1317,26131
class Create_func_length 1321,26170
  static Create_func_length s_singleton;Create_func_length::s_singleton1326,26278
  Create_func_length(Create_func_length::Create_func_length1329,26331
  virtual ~Create_func_length(Create_func_length::~Create_func_length1330,26357
class Create_func_like_range_min 1335,26414
  static Create_func_like_range_min s_singleton;Create_func_like_range_min::s_singleton1340,26542
  Create_func_like_range_min(Create_func_like_range_min::Create_func_like_range_min1343,26603
  virtual ~Create_func_like_range_min(Create_func_like_range_min::~Create_func_like_range_min1344,26637
class Create_func_like_range_max 1348,26685
  static Create_func_like_range_max s_singleton;Create_func_like_range_max::s_singleton1353,26813
  Create_func_like_range_max(Create_func_like_range_max::Create_func_like_range_max1356,26874
  virtual ~Create_func_like_range_max(Create_func_like_range_max::~Create_func_like_range_max1357,26908
class Create_func_ln 1362,26963
  static Create_func_ln s_singleton;Create_func_ln::s_singleton1367,27067
  Create_func_ln(Create_func_ln::Create_func_ln1370,27116
  virtual ~Create_func_ln(Create_func_ln::~Create_func_ln1371,27138
class Create_func_load_file 1375,27174
  static Create_func_load_file s_singleton;Create_func_load_file::s_singleton1380,27285
  Create_func_load_file(Create_func_load_file::Create_func_load_file1383,27341
  virtual ~Create_func_load_file(Create_func_load_file::~Create_func_load_file1384,27370
class Create_func_locate 1388,27413
  static Create_func_locate s_singleton;Create_func_locate::s_singleton1393,27558
  Create_func_locate(Create_func_locate::Create_func_locate1396,27611
  virtual ~Create_func_locate(Create_func_locate::~Create_func_locate1397,27637
class Create_func_log 1401,27677
  static Create_func_log s_singleton;Create_func_log::s_singleton1406,27819
  Create_func_log(Create_func_log::Create_func_log1409,27869
  virtual ~Create_func_log(Create_func_log::~Create_func_log1410,27892
class Create_func_log10 1414,27929
  static Create_func_log10 s_singleton;Create_func_log10::s_singleton1419,28036
  Create_func_log10(Create_func_log10::Create_func_log101422,28088
  virtual ~Create_func_log10(Create_func_log10::~Create_func_log101423,28113
class Create_func_log2 1427,28152
  static Create_func_log2 s_singleton;Create_func_log2::s_singleton1432,28258
  Create_func_log2(Create_func_log2::Create_func_log21435,28309
  virtual ~Create_func_log2(Create_func_log2::~Create_func_log21436,28333
class Create_func_lpad 1440,28371
  static Create_func_lpad s_singleton;Create_func_lpad::s_singleton1445,28501
  Create_func_lpad(Create_func_lpad::Create_func_lpad1448,28552
  virtual ~Create_func_lpad(Create_func_lpad::~Create_func_lpad1449,28576
class Create_func_ltrim 1453,28614
  static Create_func_ltrim s_singleton;Create_func_ltrim::s_singleton1458,28721
  Create_func_ltrim(Create_func_ltrim::Create_func_ltrim1461,28773
  virtual ~Create_func_ltrim(Create_func_ltrim::~Create_func_ltrim1462,28798
class Create_func_makedate 1466,28837
  static Create_func_makedate s_singleton;Create_func_makedate::s_singleton1471,28959
  Create_func_makedate(Create_func_makedate::Create_func_makedate1474,29014
  virtual ~Create_func_makedate(Create_func_makedate::~Create_func_makedate1475,29042
class Create_func_maketime 1479,29084
  static Create_func_maketime s_singleton;Create_func_maketime::s_singleton1484,29218
  Create_func_maketime(Create_func_maketime::Create_func_maketime1487,29273
  virtual ~Create_func_maketime(Create_func_maketime::~Create_func_maketime1488,29301
class Create_func_make_set 1492,29343
  static Create_func_make_set s_singleton;Create_func_make_set::s_singleton1497,29490
  Create_func_make_set(Create_func_make_set::Create_func_make_set1500,29545
  virtual ~Create_func_make_set(Create_func_make_set::~Create_func_make_set1501,29573
class Create_func_master_pos_wait 1505,29615
  static Create_func_master_pos_wait s_singleton;Create_func_master_pos_wait::s_singleton1510,29769
  Create_func_master_pos_wait(Create_func_master_pos_wait::Create_func_master_pos_wait1513,29831
  virtual ~Create_func_master_pos_wait(Create_func_master_pos_wait::~Create_func_master_pos_wait1514,29866
class Create_func_md5 1518,29915
  static Create_func_md5 s_singleton;Create_func_md5::s_singleton1523,30020
  Create_func_md5(Create_func_md5::Create_func_md51526,30070
  virtual ~Create_func_md5(Create_func_md5::~Create_func_md51527,30093
class Create_func_monthname 1531,30130
  static Create_func_monthname s_singleton;Create_func_monthname::s_singleton1536,30241
  Create_func_monthname(Create_func_monthname::Create_func_monthname1539,30297
  virtual ~Create_func_monthname(Create_func_monthname::~Create_func_monthname1540,30326
class Create_func_name_const 1544,30369
  static Create_func_name_const s_singleton;Create_func_name_const::s_singleton1549,30493
  Create_func_name_const(Create_func_name_const::Create_func_name_const1552,30550
  virtual ~Create_func_name_const(Create_func_name_const::~Create_func_name_const1553,30580
class Create_func_nullif 1557,30624
  static Create_func_nullif s_singleton;Create_func_nullif::s_singleton1562,30744
  Create_func_nullif(Create_func_nullif::Create_func_nullif1565,30797
  virtual ~Create_func_nullif(Create_func_nullif::~Create_func_nullif1566,30823
class Create_func_numgeometries 1571,30883
  static Create_func_numgeometries s_singleton;Create_func_numgeometries::s_singleton1576,30998
  Create_func_numgeometries(Create_func_numgeometries::Create_func_numgeometries1579,31058
  virtual ~Create_func_numgeometries(Create_func_numgeometries::~Create_func_numgeometries1580,31091
class Create_func_numinteriorring 1586,31165
  static Create_func_numinteriorring s_singleton;Create_func_numinteriorring::s_singleton1591,31282
  Create_func_numinteriorring(Create_func_numinteriorring::Create_func_numinteriorring1594,31344
  virtual ~Create_func_numinteriorring(Create_func_numinteriorring::~Create_func_numinteriorring1595,31379
class Create_func_numpoints 1601,31455
  static Create_func_numpoints s_singleton;Create_func_numpoints::s_singleton1606,31566
  Create_func_numpoints(Create_func_numpoints::Create_func_numpoints1609,31622
  virtual ~Create_func_numpoints(Create_func_numpoints::~Create_func_numpoints1610,31651
class Create_func_oct 1615,31701
  static Create_func_oct s_singleton;Create_func_oct::s_singleton1620,31806
  Create_func_oct(Create_func_oct::Create_func_oct1623,31856
  virtual ~Create_func_oct(Create_func_oct::~Create_func_oct1624,31879
class Create_func_ord 1628,31916
  static Create_func_ord s_singleton;Create_func_ord::s_singleton1633,32021
  Create_func_ord(Create_func_ord::Create_func_ord1636,32071
  virtual ~Create_func_ord(Create_func_ord::~Create_func_ord1637,32094
class Create_func_overlaps 1642,32151
  static Create_func_overlaps s_singleton;Create_func_overlaps::s_singleton1647,32273
  Create_func_overlaps(Create_func_overlaps::Create_func_overlaps1650,32328
  virtual ~Create_func_overlaps(Create_func_overlaps::~Create_func_overlaps1651,32356
class Create_func_period_add 1656,32405
  static Create_func_period_add s_singleton;Create_func_period_add::s_singleton1661,32529
  Create_func_period_add(Create_func_period_add::Create_func_period_add1664,32586
  virtual ~Create_func_period_add(Create_func_period_add::~Create_func_period_add1665,32616
class Create_func_period_diff 1669,32660
  static Create_func_period_diff s_singleton;Create_func_period_diff::s_singleton1674,32785
  Create_func_period_diff(Create_func_period_diff::Create_func_period_diff1677,32843
  virtual ~Create_func_period_diff(Create_func_period_diff::~Create_func_period_diff1678,32874
class Create_func_pi 1682,32919
  static Create_func_pi s_singleton;Create_func_pi::s_singleton1687,33011
  Create_func_pi(Create_func_pi::Create_func_pi1690,33060
  virtual ~Create_func_pi(Create_func_pi::~Create_func_pi1691,33082
class Create_func_pointn 1696,33138
  static Create_func_pointn s_singleton;Create_func_pointn::s_singleton1701,33258
  Create_func_pointn(Create_func_pointn::Create_func_pointn1704,33311
  virtual ~Create_func_pointn(Create_func_pointn::~Create_func_pointn1705,33337
class Create_func_pow 1710,33384
  static Create_func_pow s_singleton;Create_func_pow::s_singleton1715,33501
  Create_func_pow(Create_func_pow::Create_func_pow1718,33551
  virtual ~Create_func_pow(Create_func_pow::~Create_func_pow1719,33574
class Create_func_quote 1723,33611
  static Create_func_quote s_singleton;Create_func_quote::s_singleton1728,33718
  Create_func_quote(Create_func_quote::Create_func_quote1731,33770
  virtual ~Create_func_quote(Create_func_quote::~Create_func_quote1732,33795
class Create_func_radians 1736,33834
  static Create_func_radians s_singleton;Create_func_radians::s_singleton1741,33943
  Create_func_radians(Create_func_radians::Create_func_radians1744,33997
  virtual ~Create_func_radians(Create_func_radians::~Create_func_radians1745,34024
class Create_func_rand 1749,34065
  static Create_func_rand s_singleton;Create_func_rand::s_singleton1754,34208
  Create_func_rand(Create_func_rand::Create_func_rand1757,34259
  virtual ~Create_func_rand(Create_func_rand::~Create_func_rand1758,34283
class Create_func_release_lock 1762,34321
  static Create_func_release_lock s_singleton;Create_func_release_lock::s_singleton1767,34435
  Create_func_release_lock(Create_func_release_lock::Create_func_release_lock1770,34494
  virtual ~Create_func_release_lock(Create_func_release_lock::~Create_func_release_lock1771,34526
class Create_func_reverse 1775,34572
  static Create_func_reverse s_singleton;Create_func_reverse::s_singleton1780,34681
  Create_func_reverse(Create_func_reverse::Create_func_reverse1783,34735
  virtual ~Create_func_reverse(Create_func_reverse::~Create_func_reverse1784,34762
class Create_func_round 1788,34803
  static Create_func_round s_singleton;Create_func_round::s_singleton1793,34947
  Create_func_round(Create_func_round::Create_func_round1796,34999
  virtual ~Create_func_round(Create_func_round::~Create_func_round1797,35024
class Create_func_row_count 1801,35063
  static Create_func_row_count s_singleton;Create_func_row_count::s_singleton1806,35162
  Create_func_row_count(Create_func_row_count::Create_func_row_count1809,35218
  virtual ~Create_func_row_count(Create_func_row_count::~Create_func_row_count1810,35247
class Create_func_rpad 1814,35290
  static Create_func_rpad s_singleton;Create_func_rpad::s_singleton1819,35420
  Create_func_rpad(Create_func_rpad::Create_func_rpad1822,35471
  virtual ~Create_func_rpad(Create_func_rpad::~Create_func_rpad1823,35495
class Create_func_rtrim 1827,35533
  static Create_func_rtrim s_singleton;Create_func_rtrim::s_singleton1832,35640
  Create_func_rtrim(Create_func_rtrim::Create_func_rtrim1835,35692
  virtual ~Create_func_rtrim(Create_func_rtrim::~Create_func_rtrim1836,35717
class Create_func_sec_to_time 1840,35756
  static Create_func_sec_to_time s_singleton;Create_func_sec_to_time::s_singleton1845,35869
  Create_func_sec_to_time(Create_func_sec_to_time::Create_func_sec_to_time1848,35927
  virtual ~Create_func_sec_to_time(Create_func_sec_to_time::~Create_func_sec_to_time1849,35958
class Create_func_sha 1853,36003
  static Create_func_sha s_singleton;Create_func_sha::s_singleton1858,36108
  Create_func_sha(Create_func_sha::Create_func_sha1861,36158
  virtual ~Create_func_sha(Create_func_sha::~Create_func_sha1862,36181
class Create_func_sha2 1866,36218
  static Create_func_sha2 s_singleton;Create_func_sha2::s_singleton1871,36336
  Create_func_sha2(Create_func_sha2::Create_func_sha21874,36387
  virtual ~Create_func_sha2(Create_func_sha2::~Create_func_sha21875,36411
class Create_func_sign 1879,36449
  static Create_func_sign s_singleton;Create_func_sign::s_singleton1884,36555
  Create_func_sign(Create_func_sign::Create_func_sign1887,36606
  virtual ~Create_func_sign(Create_func_sign::~Create_func_sign1888,36630
class Create_func_sin 1892,36668
  static Create_func_sin s_singleton;Create_func_sin::s_singleton1897,36773
  Create_func_sin(Create_func_sin::Create_func_sin1900,36823
  virtual ~Create_func_sin(Create_func_sin::~Create_func_sin1901,36846
class Create_func_sleep 1905,36883
  static Create_func_sleep s_singleton;Create_func_sleep::s_singleton1910,36990
  Create_func_sleep(Create_func_sleep::Create_func_sleep1913,37042
  virtual ~Create_func_sleep(Create_func_sleep::~Create_func_sleep1914,37067
class Create_func_soundex 1918,37106
  static Create_func_soundex s_singleton;Create_func_soundex::s_singleton1923,37215
  Create_func_soundex(Create_func_soundex::Create_func_soundex1926,37269
  virtual ~Create_func_soundex(Create_func_soundex::~Create_func_soundex1927,37296
class Create_func_space 1931,37337
  static Create_func_space s_singleton;Create_func_space::s_singleton1936,37444
  Create_func_space(Create_func_space::Create_func_space1939,37496
  virtual ~Create_func_space(Create_func_space::~Create_func_space1940,37521
class Create_func_sqrt 1944,37560
  static Create_func_sqrt s_singleton;Create_func_sqrt::s_singleton1949,37666
  Create_func_sqrt(Create_func_sqrt::Create_func_sqrt1952,37717
  virtual ~Create_func_sqrt(Create_func_sqrt::~Create_func_sqrt1953,37741
class Create_func_srid 1958,37799
  static Create_func_srid s_singleton;Create_func_srid::s_singleton1963,37905
  Create_func_srid(Create_func_srid::Create_func_srid1966,37956
  virtual ~Create_func_srid(Create_func_srid::~Create_func_srid1967,37980
class Create_func_startpoint 1973,38045
  static Create_func_startpoint s_singleton;Create_func_startpoint::s_singleton1978,38157
  Create_func_startpoint(Create_func_startpoint::Create_func_startpoint1981,38214
  virtual ~Create_func_startpoint(Create_func_startpoint::~Create_func_startpoint1982,38244
class Create_func_str_to_date 1987,38295
  static Create_func_str_to_date s_singleton;Create_func_str_to_date::s_singleton1992,38420
  Create_func_str_to_date(Create_func_str_to_date::Create_func_str_to_date1995,38478
  virtual ~Create_func_str_to_date(Create_func_str_to_date::~Create_func_str_to_date1996,38509
class Create_func_strcmp 2000,38554
  static Create_func_strcmp s_singleton;Create_func_strcmp::s_singleton2005,38674
  Create_func_strcmp(Create_func_strcmp::Create_func_strcmp2008,38727
  virtual ~Create_func_strcmp(Create_func_strcmp::~Create_func_strcmp2009,38753
class Create_func_substr_index 2013,38793
  static Create_func_substr_index s_singleton;Create_func_substr_index::s_singleton2018,38931
  Create_func_substr_index(Create_func_substr_index::Create_func_substr_index2021,38990
  virtual ~Create_func_substr_index(Create_func_substr_index::~Create_func_substr_index2022,39022
class Create_func_subtime 2026,39068
  static Create_func_subtime s_singleton;Create_func_subtime::s_singleton2031,39189
  Create_func_subtime(Create_func_subtime::Create_func_subtime2034,39243
  virtual ~Create_func_subtime(Create_func_subtime::~Create_func_subtime2035,39270
class Create_func_tan 2039,39311
  static Create_func_tan s_singleton;Create_func_tan::s_singleton2044,39416
  Create_func_tan(Create_func_tan::Create_func_tan2047,39466
  virtual ~Create_func_tan(Create_func_tan::~Create_func_tan2048,39489
class Create_func_time_format 2052,39526
  static Create_func_time_format s_singleton;Create_func_time_format::s_singleton2057,39651
  Create_func_time_format(Create_func_time_format::Create_func_time_format2060,39709
  virtual ~Create_func_time_format(Create_func_time_format::~Create_func_time_format2061,39740
class Create_func_time_to_sec 2065,39785
  static Create_func_time_to_sec s_singleton;Create_func_time_to_sec::s_singleton2070,39898
  Create_func_time_to_sec(Create_func_time_to_sec::Create_func_time_to_sec2073,39956
  virtual ~Create_func_time_to_sec(Create_func_time_to_sec::~Create_func_time_to_sec2074,39987
class Create_func_timediff 2078,40032
  static Create_func_timediff s_singleton;Create_func_timediff::s_singleton2083,40154
  Create_func_timediff(Create_func_timediff::Create_func_timediff2086,40209
  virtual ~Create_func_timediff(Create_func_timediff::~Create_func_timediff2087,40237
class Create_func_to_days 2091,40279
  static Create_func_to_days s_singleton;Create_func_to_days::s_singleton2096,40388
  Create_func_to_days(Create_func_to_days::Create_func_to_days2099,40442
  virtual ~Create_func_to_days(Create_func_to_days::~Create_func_to_days2100,40469
class Create_func_to_seconds 2103,40509
  static Create_func_to_seconds s_singleton;Create_func_to_seconds::s_singleton2108,40621
  Create_func_to_seconds(Create_func_to_seconds::Create_func_to_seconds2111,40678
  virtual ~Create_func_to_seconds(Create_func_to_seconds::~Create_func_to_seconds2112,40708
class Create_func_touches 2117,40772
  static Create_func_touches s_singleton;Create_func_touches::s_singleton2122,40893
  Create_func_touches(Create_func_touches::Create_func_touches2125,40947
  virtual ~Create_func_touches(Create_func_touches::~Create_func_touches2126,40974
class Create_func_ucase 2131,41022
  static Create_func_ucase s_singleton;Create_func_ucase::s_singleton2136,41129
  Create_func_ucase(Create_func_ucase::Create_func_ucase2139,41181
  virtual ~Create_func_ucase(Create_func_ucase::~Create_func_ucase2140,41206
class Create_func_uncompress 2144,41245
  static Create_func_uncompress s_singleton;Create_func_uncompress::s_singleton2149,41357
  Create_func_uncompress(Create_func_uncompress::Create_func_uncompress2152,41414
  virtual ~Create_func_uncompress(Create_func_uncompress::~Create_func_uncompress2153,41444
class Create_func_uncompressed_length 2157,41488
  static Create_func_uncompressed_length s_singleton;Create_func_uncompressed_length::s_singleton2162,41609
  Create_func_uncompressed_length(Create_func_uncompressed_length::Create_func_uncompressed_length2165,41675
  virtual ~Create_func_uncompressed_length(Create_func_uncompressed_length::~Create_func_uncompressed_length2166,41714
class Create_func_unhex 2170,41767
  static Create_func_unhex s_singleton;Create_func_unhex::s_singleton2175,41874
  Create_func_unhex(Create_func_unhex::Create_func_unhex2178,41926
  virtual ~Create_func_unhex(Create_func_unhex::~Create_func_unhex2179,41951
class Create_func_unix_timestamp 2183,41990
  static Create_func_unix_timestamp s_singleton;Create_func_unix_timestamp::s_singleton2188,42143
  Create_func_unix_timestamp(Create_func_unix_timestamp::Create_func_unix_timestamp2191,42204
  virtual ~Create_func_unix_timestamp(Create_func_unix_timestamp::~Create_func_unix_timestamp2192,42238
class Create_func_uuid 2196,42286
  static Create_func_uuid s_singleton;Create_func_uuid::s_singleton2201,42380
  Create_func_uuid(Create_func_uuid::Create_func_uuid2204,42431
  virtual ~Create_func_uuid(Create_func_uuid::~Create_func_uuid2205,42455
class Create_func_uuid_short 2209,42493
  static Create_func_uuid_short s_singleton;Create_func_uuid_short::s_singleton2214,42593
  Create_func_uuid_short(Create_func_uuid_short::Create_func_uuid_short2217,42650
  virtual ~Create_func_uuid_short(Create_func_uuid_short::~Create_func_uuid_short2218,42680
class Create_func_version 2222,42724
  static Create_func_version s_singleton;Create_func_version::s_singleton2227,42821
  Create_func_version(Create_func_version::Create_func_version2230,42875
  virtual ~Create_func_version(Create_func_version::~Create_func_version2231,42902
class Create_func_weekday 2235,42943
  static Create_func_weekday s_singleton;Create_func_weekday::s_singleton2240,43052
  Create_func_weekday(Create_func_weekday::Create_func_weekday2243,43106
  virtual ~Create_func_weekday(Create_func_weekday::~Create_func_weekday2244,43133
class Create_func_weekofyear 2248,43174
  static Create_func_weekofyear s_singleton;Create_func_weekofyear::s_singleton2253,43286
  Create_func_weekofyear(Create_func_weekofyear::Create_func_weekofyear2256,43343
  virtual ~Create_func_weekofyear(Create_func_weekofyear::~Create_func_weekofyear2257,43373
class Create_func_within 2262,43437
  static Create_func_within s_singleton;Create_func_within::s_singleton2267,43557
  Create_func_within(Create_func_within::Create_func_within2270,43610
  virtual ~Create_func_within(Create_func_within::~Create_func_within2271,43636
class Create_func_x 2277,43703
  static Create_func_x s_singleton;Create_func_x::s_singleton2282,43806
  Create_func_x(Create_func_x::Create_func_x2285,43854
  virtual ~Create_func_x(Create_func_x::~Create_func_x2286,43875
class Create_func_xml_extractvalue 2291,43917
  static Create_func_xml_extractvalue s_singleton;Create_func_xml_extractvalue::s_singleton2296,44047
  Create_func_xml_extractvalue(Create_func_xml_extractvalue::Create_func_xml_extractvalue2299,44110
  virtual ~Create_func_xml_extractvalue(Create_func_xml_extractvalue::~Create_func_xml_extractvalue2300,44146
class Create_func_xml_update 2304,44196
  static Create_func_xml_update s_singleton;Create_func_xml_update::s_singleton2309,44332
  Create_func_xml_update(Create_func_xml_update::Create_func_xml_update2312,44389
  virtual ~Create_func_xml_update(Create_func_xml_update::~Create_func_xml_update2313,44419
class Create_func_y 2318,44483
  static Create_func_y s_singleton;Create_func_y::s_singleton2323,44586
  Create_func_y(Create_func_y::Create_func_y2326,44634
  virtual ~Create_func_y(Create_func_y::~Create_func_y2327,44655
class Create_func_year_week 2332,44697
  static Create_func_year_week s_singleton;Create_func_year_week::s_singleton2337,44845
  Create_func_year_week(Create_func_year_week::Create_func_year_week2340,44901
  virtual ~Create_func_year_week(Create_func_year_week::~Create_func_year_week2341,44930
static bool has_named_parameters(2358,45459
Create_func_no_geom Create_func_no_geom::s_singleton;2375,45732
Create_func_no_geom::create_func(2378,45793
Create_qfunc::create_func(2391,46141
Create_udf_func Create_udf_func::s_singleton;2421,46996
Create_udf_func::create_func(2424,47049
Create_udf_func::create(2433,47248
Create_sp_func Create_sp_func::s_singleton;2531,49550
Create_sp_func::create(2534,49601
Create_native_func::create_func(2576,50851
Create_func_arg0::create_func(2589,51123
Create_func_arg1::create_func(2607,51435
Create_func_arg2::create_func(2633,51917
Create_func_arg3::create_func(2661,52492
Create_func_abs Create_func_abs::s_singleton;2690,53149
Create_func_abs::create(2693,53202
Create_func_acos Create_func_acos::s_singleton;2699,53304
Create_func_acos::create(2702,53359
Create_func_addtime Create_func_addtime::s_singleton;2708,53463
Create_func_addtime::create(2711,53524
Create_func_aes_encrypt Create_func_aes_encrypt::s_singleton;2717,53659
Create_func_aes_encrypt::create(2720,53728
Create_func_aes_decrypt Create_func_aes_decrypt::s_singleton;2726,53864
Create_func_aes_decrypt::create(2729,53933
Create_func_area Create_func_area::s_singleton;2736,54089
Create_func_area::create(2739,54144
Create_func_as_wkb Create_func_as_wkb::s_singleton;2747,54275
Create_func_as_wkb::create(2750,54334
Create_func_as_wkt Create_func_as_wkt::s_singleton;2758,54469
Create_func_as_wkt::create(2761,54528
Create_func_asin Create_func_asin::s_singleton;2768,54643
Create_func_asin::create(2771,54698
Create_func_atan Create_func_atan::s_singleton;2777,54802
Create_func_atan::create_native(2780,54857
Create_func_benchmark Create_func_benchmark::s_singleton;2814,55508
Create_func_benchmark::create(2817,55573
Create_func_bin Create_func_bin::s_singleton;2824,55754
Create_func_bin::create(2827,55807
Create_func_bit_count Create_func_bit_count::s_singleton;2835,56031
Create_func_bit_count::create(2838,56096
Create_func_bit_length Create_func_bit_length::s_singleton;2844,56210
Create_func_bit_length::create(2847,56277
Create_func_ceiling Create_func_ceiling::s_singleton;2853,56393
Create_func_ceiling::create(2856,56454
Create_func_centroid Create_func_centroid::s_singleton;2863,56584
Create_func_centroid::create(2866,56647
Create_func_char_length Create_func_char_length::s_singleton;2873,56766
Create_func_char_length::create(2876,56835
Create_func_coercibility Create_func_coercibility::s_singleton;2882,56953
Create_func_coercibility::create(2885,57024
Create_func_concat Create_func_concat::s_singleton;2891,57144
Create_func_concat::create_native(2894,57203
Create_func_concat_ws Create_func_concat_ws::s_singleton;2912,57583
Create_func_concat_ws::create_native(2915,57648
Create_func_compress Create_func_compress::s_singleton;2934,58112
Create_func_compress::create(2937,58175
Create_func_connection_id Create_func_connection_id::s_singleton;2943,58287
Create_func_connection_id::create(2946,58360
Create_func_contains Create_func_contains::s_singleton;2954,58522
Create_func_contains::create(2957,58585
Create_func_conv Create_func_conv::s_singleton;2965,58805
Create_func_conv::create(2968,58860
Create_func_convert_tz Create_func_convert_tz::s_singleton;2974,59000
Create_func_convert_tz::create(2977,59067
Create_func_cos Create_func_cos::s_singleton;2983,59219
Create_func_cos::create(2986,59272
Create_func_cot Create_func_cot::s_singleton;2992,59374
Create_func_cot::create(2995,59427
Create_func_crc32 Create_func_crc32::s_singleton;3001,59529
Create_func_crc32::create(3004,59586
Create_func_crosses Create_func_crosses::s_singleton;3011,59712
Create_func_crosses::create(3014,59773
Create_func_date_format Create_func_date_format::s_singleton;3022,59991
Create_func_date_format::create(3025,60060
Create_func_datediff Create_func_datediff::s_singleton;3031,60199
Create_func_datediff::create(3034,60262
Create_func_dayname Create_func_dayname::s_singleton;3043,60500
Create_func_dayname::create(3046,60561
Create_func_dayofmonth Create_func_dayofmonth::s_singleton;3052,60671
Create_func_dayofmonth::create(3055,60738
Create_func_dayofweek Create_func_dayofweek::s_singleton;3061,60854
Create_func_dayofweek::create(3064,60919
Create_func_dayofyear Create_func_dayofyear::s_singleton;3070,61034
Create_func_dayofyear::create(3073,61099
Create_func_decode Create_func_decode::s_singleton;3079,61213
Create_func_decode::create(3082,61272
Create_func_degrees Create_func_degrees::s_singleton;3088,61398
Create_func_degrees::create(3091,61459
Create_func_des_decrypt Create_func_des_decrypt::s_singleton;3098,61646
Create_func_des_decrypt::create_native(3101,61715
Create_func_des_encrypt Create_func_des_encrypt::s_singleton;3135,62394
Create_func_des_encrypt::create_native(3138,62463
Create_func_dimension Create_func_dimension::s_singleton;3173,63162
Create_func_dimension::create(3176,63227
Create_func_disjoint Create_func_disjoint::s_singleton;3184,63368
Create_func_disjoint::create(3187,63431
Create_func_elt Create_func_elt::s_singleton;3195,63651
Create_func_elt::create_native(3198,63704
Create_func_encode Create_func_encode::s_singleton;3216,64075
Create_func_encode::create(3219,64134
Create_func_encrypt Create_func_encrypt::s_singleton;3225,64260
Create_func_encrypt::create_native(3228,64321
Create_func_endpoint Create_func_endpoint::s_singleton;3264,65049
Create_func_endpoint::create(3267,65112
Create_func_envelope Create_func_envelope::s_singleton;3276,65335
Create_func_envelope::create(3279,65398
Create_func_equals Create_func_equals::s_singleton;3287,65537
Create_func_equals::create(3290,65596
Create_func_exp Create_func_exp::s_singleton;3298,65812
Create_func_exp::create(3301,65865
Create_func_export_set Create_func_export_set::s_singleton;3307,65967
Create_func_export_set::create_native(3310,66034
Create_func_exteriorring Create_func_exteriorring::s_singleton;3361,67326
Create_func_exteriorring::create(3364,67397
Create_func_field Create_func_field::s_singleton;3372,67608
Create_func_field::create_native(3375,67665
Create_func_find_in_set Create_func_find_in_set::s_singleton;3393,68042
Create_func_find_in_set::create(3396,68111
Create_func_floor Create_func_floor::s_singleton;3402,68247
Create_func_floor::create(3405,68304
Create_func_format Create_func_format::s_singleton;3411,68410
Create_func_format::create_native(3414,68469
Create_func_found_rows Create_func_found_rows::s_singleton;3445,69184
Create_func_found_rows::create(3448,69251
Create_func_from_days Create_func_from_days::s_singleton;3457,69511
Create_func_from_days::create(3460,69576
Create_func_from_unixtime Create_func_from_unixtime::s_singleton;3466,69690
Create_func_from_unixtime::create_native(3469,69763
Create_func_geometry_from_text Create_func_geometry_from_text::s_singleton;3505,70534
Create_func_geometry_from_text::create_native(3508,70617
Create_func_geometry_from_wkb Create_func_geometry_from_wkb::s_singleton;3545,71396
Create_func_geometry_from_wkb::create_native(3548,71477
Create_func_geometry_type Create_func_geometry_type::s_singleton;3585,72252
Create_func_geometry_type::create(3588,72325
Create_func_geometryn Create_func_geometryn::s_singleton;3596,72474
Create_func_geometryn::create(3599,72539
Create_func_get_lock Create_func_get_lock::s_singleton;3607,72766
Create_func_get_lock::create(3610,72829
Create_func_glength Create_func_glength::s_singleton;3619,73098
Create_func_glength::create(3622,73159
Create_func_greatest Create_func_greatest::s_singleton;3629,73276
Create_func_greatest::create_native(3632,73339
Create_func_hex Create_func_hex::s_singleton;3650,73720
Create_func_hex::create(3653,73773
Create_func_ifnull Create_func_ifnull::s_singleton;3659,73875
Create_func_ifnull::create(3662,73934
Create_func_inet_ntoa Create_func_inet_ntoa::s_singleton;3668,74060
Create_func_inet_ntoa::create(3671,74125
Create_func_inet_aton Create_func_inet_aton::s_singleton;3677,74239
Create_func_inet_aton::create(3680,74304
Create_func_instr Create_func_instr::s_singleton;3686,74418
Create_func_instr::create(3689,74475
Create_func_interiorringn Create_func_interiorringn::s_singleton;3696,74620
Create_func_interiorringn::create(3699,74693
Create_func_intersects Create_func_intersects::s_singleton;3708,74948
Create_func_intersects::create(3711,75015
Create_func_is_free_lock Create_func_is_free_lock::s_singleton;3719,75239
Create_func_is_free_lock::create(3722,75310
Create_func_is_used_lock Create_func_is_used_lock::s_singleton;3730,75549
Create_func_is_used_lock::create(3733,75620
Create_func_isclosed Create_func_isclosed::s_singleton;3742,75879
Create_func_isclosed::create(3745,75942
Create_func_isempty Create_func_isempty::s_singleton;3753,76081
Create_func_isempty::create(3756,76142
Create_func_isnull Create_func_isnull::s_singleton;3763,76259
Create_func_isnull::create(3766,76318
Create_func_issimple Create_func_issimple::s_singleton;3773,76446
Create_func_issimple::create(3776,76509
Create_func_last_day Create_func_last_day::s_singleton;3783,76628
Create_func_last_day::create(3786,76691
Create_func_last_insert_id Create_func_last_insert_id::s_singleton;3792,76803
Create_func_last_insert_id::create_native(3795,76878
Create_func_lcase Create_func_lcase::s_singleton;3829,77555
Create_func_lcase::create(3832,77612
Create_func_least Create_func_least::s_singleton;3838,77718
Create_func_least::create_native(3841,77775
Create_func_length Create_func_length::s_singleton;3859,78150
Create_func_length::create(3862,78209
Create_func_like_range_min Create_func_like_range_min::s_singleton;3869,78334
Create_func_like_range_min::create(3872,78409
Create_func_like_range_max Create_func_like_range_max::s_singleton;3878,78551
Create_func_like_range_max::create(3881,78626
Create_func_ln Create_func_ln::s_singleton;3888,78775
Create_func_ln::create(3891,78826
Create_func_load_file Create_func_load_file::s_singleton;3897,78926
Create_func_load_file::create(3900,78991
Create_func_locate Create_func_locate::s_singleton;3909,79272
Create_func_locate::create_native(3912,79331
Create_func_log Create_func_log::s_singleton;3950,80179
Create_func_log::create_native(3953,80232
Create_func_log10 Create_func_log10::s_singleton;3987,80879
Create_func_log10::create(3990,80936
Create_func_log2 Create_func_log2::s_singleton;3996,81042
Create_func_log2::create(3999,81097
Create_func_lpad Create_func_lpad::s_singleton;4005,81201
Create_func_lpad::create(4008,81256
Create_func_ltrim Create_func_ltrim::s_singleton;4014,81396
Create_func_ltrim::create(4017,81453
Create_func_makedate Create_func_makedate::s_singleton;4023,81559
Create_func_makedate::create(4026,81622
Create_func_maketime Create_func_maketime::s_singleton;4032,81752
Create_func_maketime::create(4035,81815
Create_func_make_set Create_func_make_set::s_singleton;4041,81963
Create_func_make_set::create_native(4044,82026
Create_func_master_pos_wait Create_func_master_pos_wait::s_singleton;4063,82456
Create_func_master_pos_wait::create_native(4066,82533
Create_func_md5 Create_func_md5::s_singleton;4107,83458
Create_func_md5::create(4110,83511
Create_func_monthname Create_func_monthname::s_singleton;4116,83613
Create_func_monthname::create(4119,83678
Create_func_name_const Create_func_name_const::s_singleton;4125,83792
Create_func_name_const::create(4128,83859
Create_func_nullif Create_func_nullif::s_singleton;4134,83988
Create_func_nullif::create(4137,84047
Create_func_numgeometries Create_func_numgeometries::s_singleton;4144,84193
Create_func_numgeometries::create(4147,84266
Create_func_numinteriorring Create_func_numinteriorring::s_singleton;4155,84415
Create_func_numinteriorring::create(4158,84492
Create_func_numpoints Create_func_numpoints::s_singleton;4166,84645
Create_func_numpoints::create(4169,84710
Create_func_oct Create_func_oct::s_singleton;4176,84831
Create_func_oct::create(4179,84884
Create_func_ord Create_func_ord::s_singleton;4187,85108
Create_func_ord::create(4190,85161
Create_func_overlaps Create_func_overlaps::s_singleton;4197,85283
Create_func_overlaps::create(4200,85346
Create_func_period_add Create_func_period_add::s_singleton;4208,85566
Create_func_period_add::create(4211,85633
Create_func_period_diff Create_func_period_diff::s_singleton;4217,85767
Create_func_period_diff::create(4220,85836
Create_func_pi Create_func_pi::s_singleton;4226,85972
Create_func_pi::create(4229,86023
Create_func_pointn Create_func_pointn::s_singleton;4236,86155
Create_func_pointn::create(4239,86214
Create_func_pow Create_func_pow::s_singleton;4247,86435
Create_func_pow::create(4250,86488
Create_func_quote Create_func_quote::s_singleton;4256,86608
Create_func_quote::create(4259,86665
Create_func_radians Create_func_radians::s_singleton;4265,86771
Create_func_radians::create(4268,86832
Create_func_rand Create_func_rand::s_singleton;4275,87019
Create_func_rand::create_native(4278,87074
Create_func_release_lock Create_func_release_lock::s_singleton;4322,88203
Create_func_release_lock::create(4325,88274
Create_func_reverse Create_func_reverse::s_singleton;4333,88513
Create_func_reverse::create(4336,88574
Create_func_round Create_func_round::s_singleton;4342,88684
Create_func_round::create_native(4345,88741
Create_func_row_count Create_func_row_count::s_singleton;4380,89469
Create_func_row_count::create(4383,89534
Create_func_rpad Create_func_rpad::s_singleton;4392,89791
Create_func_rpad::create(4395,89846
Create_func_rtrim Create_func_rtrim::s_singleton;4401,89986
Create_func_rtrim::create(4404,90043
Create_func_sec_to_time Create_func_sec_to_time::s_singleton;4410,90149
Create_func_sec_to_time::create(4413,90218
Create_func_sha Create_func_sha::s_singleton;4419,90336
Create_func_sha::create(4422,90389
Create_func_sha2 Create_func_sha2::s_singleton;4428,90491
Create_func_sha2::create(4431,90546
Create_func_sign Create_func_sign::s_singleton;4437,90668
Create_func_sign::create(4440,90723
Create_func_sin Create_func_sin::s_singleton;4446,90827
Create_func_sin::create(4449,90880
Create_func_sleep Create_func_sleep::s_singleton;4455,90982
Create_func_sleep::create(4458,91039
Create_func_soundex Create_func_soundex::s_singleton;4466,91264
Create_func_soundex::create(4469,91325
Create_func_space Create_func_space::s_singleton;4475,91435
Create_func_space::create(4478,91492
Create_func_sqrt Create_func_sqrt::s_singleton;4503,92141
Create_func_sqrt::create(4506,92196
Create_func_srid Create_func_srid::s_singleton;4513,92320
Create_func_srid::create(4516,92375
Create_func_startpoint Create_func_startpoint::s_singleton;4524,92506
Create_func_startpoint::create(4527,92573
Create_func_str_to_date Create_func_str_to_date::s_singleton;4535,92780
Create_func_str_to_date::create(4538,92849
Create_func_strcmp Create_func_strcmp::s_singleton;4544,92985
Create_func_strcmp::create(4547,93044
Create_func_substr_index Create_func_substr_index::s_singleton;4553,93170
Create_func_substr_index::create(4556,93241
Create_func_subtime Create_func_subtime::s_singleton;4562,93397
Create_func_subtime::create(4565,93458
Create_func_tan Create_func_tan::s_singleton;4571,93593
Create_func_tan::create(4574,93646
Create_func_time_format Create_func_time_format::s_singleton;4580,93748
Create_func_time_format::create(4583,93817
Create_func_time_to_sec Create_func_time_to_sec::s_singleton;4589,93956
Create_func_time_to_sec::create(4592,94025
Create_func_timediff Create_func_timediff::s_singleton;4598,94143
Create_func_timediff::create(4601,94206
Create_func_to_days Create_func_to_days::s_singleton;4607,94336
Create_func_to_days::create(4610,94397
Create_func_to_seconds Create_func_to_seconds::s_singleton;4616,94507
Create_func_to_seconds::create(4619,94574
Create_func_touches Create_func_touches::s_singleton;4626,94710
Create_func_touches::create(4629,94771
Create_func_ucase Create_func_ucase::s_singleton;4637,94989
Create_func_ucase::create(4640,95046
Create_func_uncompress Create_func_uncompress::s_singleton;4646,95152
Create_func_uncompress::create(4649,95219
Create_func_uncompressed_length Create_func_uncompressed_length::s_singleton;4655,95335
Create_func_uncompressed_length::create(4658,95420
Create_func_unhex Create_func_unhex::s_singleton;4664,95554
Create_func_unhex::create(4667,95611
Create_func_unix_timestamp Create_func_unix_timestamp::s_singleton;4673,95717
Create_func_unix_timestamp::create_native(4676,95792
Create_func_uuid Create_func_uuid::s_singleton;4709,96431
Create_func_uuid::create(4712,96486
Create_func_uuid_short Create_func_uuid_short::s_singleton;4721,96728
Create_func_uuid_short::create(4724,96795
Create_func_version Create_func_version::s_singleton;4733,97055
Create_func_version::create(4736,97116
Create_func_weekday Create_func_weekday::s_singleton;4747,97598
Create_func_weekday::create(4750,97659
Create_func_weekofyear Create_func_weekofyear::s_singleton;4756,97772
Create_func_weekofyear::create(4759,97839
Create_func_within Create_func_within::s_singleton;4767,98034
Create_func_within::create(4770,98093
Create_func_x Create_func_x::s_singleton;4779,98329
Create_func_x::create(4782,98378
Create_func_xml_extractvalue Create_func_xml_extractvalue::s_singleton;4789,98483
Create_func_xml_extractvalue::create(4792,98562
Create_func_xml_update Create_func_xml_update::s_singleton;4798,98708
Create_func_xml_update::create(4801,98775
Create_func_y Create_func_y::s_singleton;4808,98947
Create_func_y::create(4811,98996
Create_func_year_week Create_func_year_week::s_singleton;4818,99101
Create_func_year_week::create_native(4821,99166
struct Native_func_registry4856,99902
  LEX_STRING name;Native_func_registry::name4858,99932
  Create_func *builder;Native_func_registry::builder4859,99951
#define BUILDER(4862,99979
  #define GEOM_BUILDER(4865,100036
  #define GEOM_BUILDER(4867,100085
static Native_func_registry func_array[func_array4881,100586
static HASH native_functions_hash;5091,115726
get_native_fct_hash_key(5094,115780
int item_create_init(5108,116185
void item_create_cleanup(5148,117291
find_native_function_builder(5156,117435
find_qualified_function_builder(5175,117859
create_func_cast(5182,117954

sql/item_func.cc,15547
#define sp_restore_security_context(58,1974
bool check_reserved_words(61,2036
eval_const_cond(77,2369
static inline bool test_if_sum_overflows_ull(86,2529
void Item_func::set_arguments(91,2649
Item_func::Item_func(111,3131
Item_func::Item_func(117,3221
Item_func::fix_fields(173,4922
bool Item_func::walk(235,6754
void Item_func::traverse_cond(250,7105
Item *Item_func::transform(Item_func::transform295,8417
Item *Item_func::compile(Item_func::compile346,10181
void Item_func::split_sum_func(373,10929
void Item_func::update_used_tables(382,11217
table_map Item_func::used_tables(395,11479
table_map Item_func::not_null_tables(401,11554
void Item_func::print(407,11637
void Item_func::print_args(416,11808
void Item_func::print_op(427,12023
bool Item_func::eq(442,12340
Field *Item_func::tmp_table_field(Item_func::tmp_table_field465,13045
bool Item_func::is_expensive_processor(500,13908
my_decimal *Item_func::val_decimal(Item_func::val_decimal506,13990
String *Item_real_func::val_str(Item_real_func::val_str517,14258
my_decimal *Item_real_func::val_decimal(Item_real_func::val_decimal528,14484
void Item_func::fix_num_length_and_dec(539,14744
void Item_func_numhybrid::fix_num_length_and_dec(557,15120
void Item_func::count_decimal_length(566,15305
void Item_func::count_only_length(588,15991
void Item_func::count_real_length(606,16407
void Item_func::signal_divide_by_null(633,16992
Item *Item_func::get_tmp_table_item(Item_func::get_tmp_table_item643,17261
double Item_int_func::val_real(650,17420
String *Item_int_func::val_str(Item_int_func::val_str658,17567
void Item_func_connection_id::fix_length_and_dec(669,17771
bool Item_func_connection_id::fix_fields(676,17885
void Item_num_op::find_num_type(691,18208
void Item_func_num1::find_num_type(733,19374
void Item_func_num1::fix_num_length_and_dec(760,20132
void Item_func_numhybrid::fix_length_and_dec(767,20250
String *Item_func_numhybrid::val_str(Item_func_numhybrid::val_str774,20350
double Item_func_numhybrid::val_real(813,21281
longlong Item_func_numhybrid::val_int(848,22110
my_decimal *Item_func_numhybrid::val_decimal(Item_func_numhybrid::val_decimal883,22921
void Item_func_signed::print(921,23751
longlong Item_func_signed::val_int_from_str(930,23951
longlong Item_func_signed::val_int(970,24982
void Item_func_unsigned::print(994,25536
longlong Item_func_unsigned::val_int(1003,25740
String *Item_decimal_typecast::val_str(Item_decimal_typecast::val_str1034,26532
double Item_decimal_typecast::val_real(1044,26749
longlong Item_decimal_typecast::val_int(1055,26960
my_decimal *Item_decimal_typecast::val_decimal(Item_decimal_typecast::val_decimal1066,27184
void Item_decimal_typecast::print(1103,28101
double Item_func_plus::real_op(1127,28731
longlong Item_func_plus::int_op(1136,28946
my_decimal *Item_func_plus::decimal_op(Item_func_plus::decimal_op1208,30561
void Item_func_additive_op::result_precision(1228,31279
void Item_func_minus::fix_length_and_dec(1250,32116
double Item_func_minus::real_op(1259,32318
longlong Item_func_minus::int_op(1268,32534
my_decimal *Item_func_minus::decimal_op(Item_func_minus::decimal_op1336,33960
double Item_func_mul::real_op(1355,34619
longlong Item_func_mul::int_op(1365,34860
my_decimal *Item_func_mul::decimal_op(Item_func_mul::decimal_op1446,36930
void Item_func_mul::result_precision(1464,37585
double Item_func_div::real_op(1479,38251
my_decimal *Item_func_div::decimal_op(Item_func_div::decimal_op1495,38584
void Item_func_div::result_precision(1523,39443
void Item_func_div::fix_length_and_dec(1540,40127
longlong Item_func_int_div::val_int(1577,41041
void Item_func_int_div::fix_length_and_dec(1648,42969
longlong Item_func_mod::int_op(1660,43345
double Item_func_mod::real_op(1691,44292
my_decimal *Item_func_mod::decimal_op(Item_func_mod::decimal_op1707,44635
void Item_func_mod::result_precision(1732,45235
void Item_func_mod::fix_length_and_dec(1739,45396
double Item_func_neg::real_op(1747,45538
longlong Item_func_neg::int_op(1755,45665
my_decimal *Item_func_neg::decimal_op(Item_func_neg::decimal_op1767,46001
void Item_func_neg::fix_num_length_and_dec(1780,46295
void Item_func_neg::fix_length_and_dec(1788,46454
double Item_func_abs::real_op(1819,47397
longlong Item_func_abs::int_op(1827,47529
my_decimal *Item_func_abs::decimal_op(Item_func_abs::decimal_op1841,47883
void Item_func_abs::fix_length_and_dec(1855,48210
double Item_func_ln::val_real(1863,48378
double Item_func_log::val_real(1883,48802
double Item_func_log2::val_real(1909,49323
double Item_func_log10::val_real(1924,49585
double Item_func_exp::val_real(1938,49842
double Item_func_sqrt::val_real(1947,50068
double Item_func_pow::val_real(1956,50289
double Item_func_acos::val_real(1968,50609
double Item_func_asin::val_real(1980,51018
double Item_func_atan::val_real(1990,51323
double Item_func_cos::val_real(2006,51684
double Item_func_sin::val_real(2015,51863
double Item_func_tan::val_real(2024,52042
double Item_func_cot::val_real(2034,52244
longlong Item_func_shift_left::val_int(2047,52501
longlong Item_func_shift_right::val_int(2062,52850
longlong Item_func_bit_neg::val_int(2078,53199
void Item_func_integer::fix_length_and_dec(2090,53413
void Item_func_int_val::fix_num_length_and_dec(2098,53602
void Item_func_int_val::find_num_type(2110,53972
longlong Item_func_ceiling::int_op(2151,55071
double Item_func_ceiling::real_op(2175,55577
my_decimal *Item_func_ceiling::decimal_op(Item_func_ceiling::decimal_op2187,55815
longlong Item_func_floor::int_op(2198,56154
double Item_func_floor::real_op(2222,56654
my_decimal *Item_func_floor::decimal_op(Item_func_floor::decimal_op2234,56891
void Item_func_round::fix_length_and_dec(2245,57224
double my_double_round(2322,59434
double Item_func_round::real_op(2360,60605
static inline ulonglong my_unsigned_round(2376,61035
longlong Item_func_round::int_op(2383,61201
my_decimal *Item_func_round::decimal_op(Item_func_round::decimal_op2413,61944
void Item_func_rand::seed_random(2430,62490
bool Item_func_rand::fix_fields(2442,62776
void Item_func_rand::update_used_tables(2479,63829
double Item_func_rand::val_real(2486,63955
longlong Item_func_sign::val_int(2507,64465
double Item_func_units::val_real(2516,64653
void Item_func_min_max::fix_length_and_dec(2526,64862
uint Item_func_min_max::cmp_datetimes(2592,66937
String *Item_func_min_max::val_str(Item_func_min_max::val_str2628,67699
double Item_func_min_max::val_real(2706,69407
longlong Item_func_min_max::val_int(2733,69931
my_decimal *Item_func_min_max::val_decimal(Item_func_min_max::val_decimal2760,70456
longlong Item_func_length::val_int(2801,71313
longlong Item_func_char_length::val_int(2815,71551
longlong Item_func_coercibility::val_int(2829,71796
void Item_func_locate::fix_length_and_dec(2837,71940
longlong Item_func_locate::val_int(2844,72092
void Item_func_locate::print(2887,73216
longlong Item_func_field::val_int(2902,73534
void Item_func_field::fix_length_and_dec(2957,74844
longlong Item_func_ascii::val_int(2968,75162
longlong Item_func_ord::val_int(2981,75407
void Item_func_find_in_set::fix_length_and_dec(3011,76151
static const char separator=3036,76835
longlong Item_func_find_in_set::val_int(3038,76869
longlong Item_func_bit_count::val_int(3117,79175
void udf_handler::cleanup(3135,79738
udf_handler::fix_fields(3157,80102
bool udf_handler::get_arguments(3328,85472
String *udf_handler::val_str(udf_handler::val_str3379,86513
my_decimal *udf_handler::val_decimal(udf_handler::val_decimal3423,87727
void Item_udf_func::cleanup(3449,88370
void Item_udf_func::print(3456,88447
double Item_func_udf_float::val_real(3470,88724
String *Item_func_udf_float::val_str(Item_func_udf_float::val_str3480,88974
longlong Item_func_udf_int::val_int(3491,89203
String *Item_func_udf_int::val_str(Item_func_udf_int::val_str3499,89359
longlong Item_func_udf_decimal::val_int(3510,89563
double Item_func_udf_decimal::val_real(3521,89813
my_decimal *Item_func_udf_decimal::val_decimal(Item_func_udf_decimal::val_decimal3532,90050
String *Item_func_udf_decimal::val_str(Item_func_udf_decimal::val_str3543,90371
void Item_func_udf_decimal::fix_length_and_dec(3556,90767
void Item_func_udf_str::fix_length_and_dec(3564,90899
String *Item_func_udf_str::val_str(Item_func_udf_str::val_str3573,91130
udf_handler::~udf_handler(3588,91444
bool udf_handler::get_arguments(3595,91606
mysql_mutex_t LOCK_user_locks;3602,91707
static HASH hash_user_locks;3603,91738
class User_level_lock3605,91768
  uchar *key;User_level_lock::key3607,91792
  size_t key_length;User_level_lock::key_length3608,91806
  int count;User_level_lock::count3611,91836
  bool locked;User_level_lock::locked3612,91849
  mysql_cond_t cond;User_level_lock::cond3613,91864
  my_thread_id thread_id;User_level_lock::thread_id3614,91885
  void set_thread(User_level_lock::set_thread3615,91911
  User_level_lock(User_level_lock::User_level_lock3617,91971
  ~User_level_lock(User_level_lock::~User_level_lock3631,92334
  inline bool initialized(User_level_lock::initialized3640,92493
uchar *ull_get_key(ull_get_key3646,92725
static PSI_mutex_key key_LOCK_user_locks;3654,92927
static PSI_mutex_info all_user_mutexes[all_user_mutexes3656,92970
static void init_user_lock_psi_keys(3661,93080
static bool item_user_lock_inited=3674,93326
void item_user_lock_init(3676,93365
void item_user_lock_free(3688,93675
void item_user_lock_release(3698,93857
longlong Item_master_pos_wait::val_int(3713,94123
class Interruptible_wait3746,94882
  THD *m_thd;Interruptible_wait::m_thd3748,94909
  struct timespec m_abs_timeout;Interruptible_wait::m_abs_timeout3749,94923
  static const ulonglong m_interrupt_interval;Interruptible_wait::m_interrupt_interval3750,94956
    Interruptible_wait(Interruptible_wait::Interruptible_wait3753,95014
    ~Interruptible_wait(Interruptible_wait::~Interruptible_wait3756,95068
    void set_timeout(Interruptible_wait::set_timeout3764,95219
const ulonglong Interruptible_wait::m_interrupt_interval=3781,95715
int Interruptible_wait::wait(3795,96048
longlong Item_func_get_lock::val_int(3836,96946
longlong Item_func_release_lock::val_int(3964,100344
longlong Item_func_last_insert_id::val_int(4007,101518
bool Item_func_last_insert_id::fix_fields(4031,102239
longlong Item_func_benchmark::val_int(4040,102475
void Item_func_benchmark::print(4094,103759
longlong Item_func_sleep::val_int(4106,104061
#define extra_size 4161,105494
static user_var_entry *get_variable(get_variable4163,105529
void Item_func_set_user_var::cleanup(4208,107125
bool Item_func_set_user_var::set_entry(4215,107209
bool Item_func_set_user_var::fix_fields(4246,108066
Item_func_set_user_var::fix_length_and_dec(4279,109241
bool Item_func_set_user_var::register_field_in_read_map(4303,109865
update_hash(4336,110745
Item_func_set_user_var::update_hash(4396,112336
double user_var_entry::val_real(4419,113050
longlong user_var_entry::val_int(4447,113679
String *user_var_entry::val_str(user_var_entry::val_str4478,114349
my_decimal *user_var_entry::val_decimal(user_var_entry::val_decimal4509,115141
Item_func_set_user_var::check(4549,116078
void Item_func_set_user_var::save_item_result(4600,117371
Item_func_set_user_var::update(4651,118559
double Item_func_set_user_var::val_real(4703,119986
longlong Item_func_set_user_var::val_int(4711,120147
String *Item_func_set_user_var::val_str(Item_func_set_user_var::val_str4719,120308
my_decimal *Item_func_set_user_var::val_decimal(Item_func_set_user_var::val_decimal4728,120495
double Item_func_set_user_var::val_result(4737,120688
longlong Item_func_set_user_var::val_int_result(4745,120854
bool Item_func_set_user_var::val_bool_result(4753,121025
String *Item_func_set_user_var::str_result(Item_func_set_user_var::str_result4761,121198
my_decimal *Item_func_set_user_var::val_decimal_result(Item_func_set_user_var::val_decimal_result4770,121391
bool Item_func_set_user_var::is_null_result(4779,121594
void Item_func_set_user_var::print(4788,121744
void Item_func_set_user_var::print_as_stmt(4798,121995
bool Item_func_set_user_var::send(4808,122299
void Item_func_set_user_var::make_field(4819,122513
int Item_func_set_user_var::save_in_field(4871,124525
Item_func_get_user_var::val_str(4934,126334
double Item_func_get_user_var::val_real(4944,126594
my_decimal *Item_func_get_user_var::val_decimal(Item_func_get_user_var::val_decimal4953,126772
longlong Item_func_get_user_var::val_int(4962,126953
get_var_with_binlog(4993,127810
void Item_func_get_user_var::fix_length_and_dec(5110,131835
bool Item_func_get_user_var::const_item(5163,133140
enum Item_result Item_func_get_user_var::result_type(5169,133272
void Item_func_get_user_var::print(5175,133370
bool Item_func_get_user_var::eq(5183,133547
bool Item_func_get_user_var::set_value(5198,134046
bool Item_user_var_as_out_param::fix_fields(5210,134429
void Item_user_var_as_out_param::set_null_value(5231,135079
void Item_user_var_as_out_param::set_value(5238,135265
double Item_user_var_as_out_param::val_real(5246,135534
longlong Item_user_var_as_out_param::val_int(5253,135618
String* Item_user_var_as_out_param::val_str(5260,135701
my_decimal* Item_user_var_as_out_param::val_decimal(5267,135794
void Item_user_var_as_out_param::print(5274,135910
Item_func_get_system_var(5282,136080
bool Item_func_get_system_var::is_written_to_binlog(5293,136495
void Item_func_get_system_var::update_null_value(5299,136601
void Item_func_get_system_var::fix_length_and_dec(5309,136808
void Item_func_get_system_var::print(5391,139399
enum Item_result Item_func_get_system_var::result_type(5397,139517
enum_field_types Item_func_get_system_var::field_type(5421,140070
#define get_sys_var_safe(5449,140762
longlong Item_func_get_system_var::val_int(5463,141195
String* Item_func_get_system_var::val_str(5541,143609
double Item_func_get_system_var::val_real(5626,145841
bool Item_func_get_system_var::eq(5711,148507
void Item_func_get_system_var::cleanup(5725,148973
longlong Item_func_inet_aton::val_int(5734,149115
void Item_func_match::init_search(5789,150413
bool Item_func_match::fix_fields(5860,152281
bool Item_func_match::fix_index(5917,153923
bool Item_func_match::eq(6003,155655
double Item_func_match::val_real(6020,156051
void Item_func_match::print(6049,156835
longlong Item_func_bit_xor::val_int(6062,157271
Item *get_system_var(get_system_var6094,158086
longlong Item_func_is_free_lock::val_int(6141,159024
longlong Item_func_is_used_lock::val_int(6163,159533
longlong Item_func_row_count::val_int(6185,160047
Item_func_sp::Item_func_sp(6196,160184
Item_func_sp::Item_func_sp(6206,160530
Item_func_sp::cleanup(6218,160929
Item_func_sp::func_name(6231,161123
void my_missing_function_error(6256,162030
Item_func_sp::init_result_field(6284,162925
void Item_func_sp::fix_length_and_dec(6343,164451
Item_func_sp::execute(6367,164982
Item_func_sp::execute_impl(6401,165692
Item_func_sp::make_field(6457,167249
Item_func_sp::field_type(6469,167504
Item_func_sp::result_type(6477,167668
longlong Item_func_found_rows::val_int(6485,167881
Item_func_sp::tmp_table_field(6493,167999
Item_func_sp::sp_check_access(6517,168597
Item_func_sp::fix_fields(6532,168899
void Item_func_sp::update_used_tables(6588,170541
ulonglong uuid_value;6618,171240
void uuid_short_init(6620,171263
longlong Item_func_uuid_short::val_int(6627,171399

sql/item_geofunc.cc,1928
Field *Item_geometry_func::tmp_table_field(Item_geometry_func::tmp_table_field39,1236
void Item_geometry_func::fix_length_and_dec(48,1480
String *Item_func_geometry_from_text::val_str(Item_func_geometry_from_text::val_str57,1633
String *Item_func_geometry_from_wkb::val_str(Item_func_geometry_from_wkb::val_str84,2274
String *Item_func_as_wkt::val_str_ascii(Item_func_as_wkt::val_str_ascii120,3156
void Item_func_as_wkt::fix_length_and_dec(142,3606
String *Item_func_as_wkb::val_str(Item_func_as_wkb::val_str150,3781
String *Item_func_geometry_type::val_str_ascii(Item_func_geometry_type::val_str_ascii168,4182
Field::geometry_type Item_func_envelope::get_geometry_type(187,4660
String *Item_func_envelope::val_str(Item_func_envelope::val_str193,4763
Field::geometry_type Item_func_centroid::get_geometry_type(217,5331
String *Item_func_centroid::val_str(Item_func_centroid::val_str223,5432
String *Item_func_spatial_decomp::val_str(Item_func_spatial_decomp::val_str251,6037
String *Item_func_spatial_decomp_n::val_str(Item_func_spatial_decomp_n::val_str298,6926
Field::geometry_type Item_func_point::get_geometry_type(357,7984
String *Item_func_point::val_str(Item_func_point::val_str363,8082
String *Item_func_spatial_collection::val_str(Item_func_spatial_collection::val_str396,9009
longlong Item_func_spatial_rel::val_int(519,11838
longlong Item_func_isempty::val_int(564,12948
longlong Item_func_issimple::val_int(581,13312
longlong Item_func_isclosed::val_int(595,13655
longlong Item_func_dimension::val_int(618,14102
longlong Item_func_numinteriorring::val_int(635,14522
longlong Item_func_numgeometries::val_int(651,14939
longlong Item_func_numpoints::val_int(667,15351
double Item_func_x::val_real(684,15786
double Item_func_y::val_real(700,16167
double Item_func_area::val_real(716,16546
double Item_func_glength::val_real(732,16955
longlong Item_func_srid::val_int(748,17389

sql/item_row.cc,414
Item_row::Item_row(39,1370
void Item_row::illegal_method_call(59,1817
bool Item_row::fix_fields(68,2079
void Item_row::cleanup(102,2900
void Item_row::split_sum_func(116,3107
void Item_row::update_used_tables(125,3395
bool Item_row::check_cols(137,3661
void Item_row::print(147,3801
bool Item_row::walk(160,4028
Item *Item_row::transform(Item_row::transform171,4263
void Item_row::bring_value(193,4917

sql/item_strfunc.cc,7388
String *Item_str_func::val_str_from_val_str_ascii(Item_str_func::val_str_from_val_str_ascii74,2473
static void array_to_hex(108,3209
bool Item_str_func::fix_fields(119,3467
my_decimal *Item_str_func::val_decimal(Item_str_func::val_decimal133,3867
double Item_str_func::val_real(147,4243
longlong Item_str_func::val_int(159,4558
String *Item_func_md5::val_str_ascii(Item_func_md5::val_str_ascii173,4849
void Item_func_md5::fix_length_and_dec(198,5361
String *Item_func_sha::val_str_ascii(Item_func_sha::val_str_ascii212,5806
void Item_func_sha::fix_length_and_dec(240,6768
String *Item_func_sha2::val_str_ascii(Item_func_sha2::val_str_ascii254,7268
void Item_func_sha2::fix_length_and_dec(339,9574
String *Item_func_aes_encrypt::val_str(Item_func_aes_encrypt::val_str395,11105
void Item_func_aes_encrypt::fix_length_and_dec(425,11983
String *Item_func_aes_decrypt::val_str(Item_func_aes_decrypt::val_str431,12089
void Item_func_aes_decrypt::fix_length_and_dec(464,13073
String *Item_func_concat::val_str(Item_func_concat::val_str477,13347
void Item_func_concat::fix_length_and_dec(610,17051
String *Item_func_des_encrypt::val_str(Item_func_des_encrypt::val_str634,17713
String *Item_func_des_decrypt::val_str(Item_func_des_decrypt::val_str730,21053
String *Item_func_concat_ws::val_str(Item_func_concat_ws::val_str814,23722
void Item_func_concat_ws::fix_length_and_dec(957,27839
String *Item_func_reverse::val_str(Item_func_reverse::val_str977,28336
void Item_func_reverse::fix_length_and_dec(1025,29358
String *Item_func_replace::val_str(Item_func_replace::val_str1041,29743
void Item_func_replace::fix_length_and_dec(1162,32766
String *Item_func_insert::val_str(Item_func_insert::val_str1178,33292
void Item_func_insert::fix_length_and_dec(1241,35404
String *Item_str_conv::val_str(Item_str_conv::val_str1254,35764
void Item_func_lcase::fix_length_and_dec(1287,36643
void Item_func_ucase::fix_length_and_dec(1296,36971
String *Item_func_left::val_str(Item_func_left::val_str1306,37300
void Item_str_func::left_right_max_length(1330,37936
void Item_func_left::fix_length_and_dec(1345,38248
String *Item_func_right::val_str(Item_func_right::val_str1353,38425
void Item_func_right::fix_length_and_dec(1379,39185
String *Item_func_substr::val_str(Item_func_substr::val_str1387,39363
void Item_func_substr::fix_length_and_dec(1434,41108
void Item_func_substr_index::fix_length_and_dec(1460,41800
String *Item_func_substr_index::val_str(Item_func_substr_index::val_str1468,41994
String *Item_func_ltrim::val_str(Item_func_ltrim::val_str1598,45494
String *Item_func_rtrim::val_str(Item_func_rtrim::val_str1645,46624
String *Item_func_trim::val_str(Item_func_trim::val_str1726,48353
void Item_func_trim::fix_length_and_dec(1788,49880
void Item_func_trim::print(1808,50492
String *Item_func_password::val_str_ascii(Item_func_password::val_str_ascii1828,50917
char *Item_func_password::alloc(Item_func_password::alloc1841,51312
String *Item_func_old_password::val_str_ascii(Item_func_old_password::val_str_ascii1852,51614
char *Item_func_old_password::alloc(Item_func_old_password::alloc1865,52020
#define bin_to_ascii(1875,52309
String *Item_func_encrypt::val_str(Item_func_encrypt::val_str1877,52386
bool Item_func_encode::seed(1921,53504
void Item_func_encode::fix_length_and_dec(1936,53788
String *Item_func_encode::val_str(Item_func_encode::val_str1946,54120
void Item_func_encode::crypto_transform(1971,54498
void Item_func_decode::crypto_transform(1977,54647
Item *Item_func_sysconst::safe_charset_converter(Item_func_sysconst::safe_charset_converter1983,54760
String *Item_func_database::val_str(Item_func_database::val_str2009,55542
bool Item_func_user::init(2029,55972
bool Item_func_user::fix_fields(2054,56594
bool Item_func_current_user::fix_fields(2062,56804
void Item_func_soundex::fix_length_and_dec(2078,57251
static int soundex_toupper(2095,57699
static char get_scode(2101,57797
static bool my_uni_isalpha(2113,58006
String *Item_func_soundex::val_str(Item_func_soundex::val_str2127,58434
const int FORMAT_MAX_DECIMALS=2239,61279
MY_LOCALE *Item_func_format::get_locale(Item_func_format::get_locale2242,61316
void Item_func_format::fix_length_and_dec(2259,61839
String *Item_func_format::val_str_ascii(Item_func_format::val_str_ascii2278,62378
void Item_func_format::print(2382,65291
void Item_func_elt::fix_length_and_dec(2396,65605
double Item_func_elt::val_real(2414,66017
longlong Item_func_elt::val_int(2427,66285
String *Item_func_elt::val_str(Item_func_elt::val_str2441,66554
void Item_func_make_set::split_sum_func(2457,66898
void Item_func_make_set::fix_length_and_dec(2465,67140
void Item_func_make_set::update_used_tables(2482,67643
String *Item_func_make_set::val_str(Item_func_make_set::val_str2491,67842
Item *Item_func_make_set::transform(Item_func_make_set::transform2544,68956
void Item_func_make_set::print(2564,69558
String *Item_func_char::val_str(Item_func_char::val_str2577,69816
inline String* alloc_buffer(2615,70676
void Item_func_repeat::fix_length_and_dec(2637,71122
String *Item_func_repeat::val_str(Item_func_repeat::val_str2666,71901
void Item_func_rpad::fix_length_and_dec(2716,73221
String *Item_func_rpad::val_str(Item_func_rpad::val_str2739,73865
void Item_func_lpad::fix_length_and_dec(2819,76430
String *Item_func_lpad::val_str(Item_func_lpad::val_str2843,77077
String *Item_func_conv::val_str(Item_func_conv::val_str2921,79277
String *Item_func_conv_charset::val_str(Item_func_conv_charset::val_str2970,80562
void Item_func_conv_charset::fix_length_and_dec(2987,81017
void Item_func_conv_charset::print(2993,81171
String *Item_func_set_collation::val_str(Item_func_set_collation::val_str3002,81431
void Item_func_set_collation::fix_length_and_dec(3012,81655
bool Item_func_set_collation::eq(3043,82497
void Item_func_set_collation::print(3064,83108
String *Item_func_charset::val_str(Item_func_charset::val_str3075,83441
String *Item_func_collation::val_str(Item_func_collation::val_str3087,83741
String *Item_func_hex::val_str_ascii(Item_func_hex::val_str_ascii3100,84040
String *Item_func_unhex::val_str(Item_func_unhex::val_str3149,85364
String *Item_func_like_range::val_str(Item_func_like_range::val_str3190,86229
void Item_func_binary::print(3224,87120
String *Item_load_file::val_str(Item_load_file::val_str3234,87358
String* Item_func_export_set::val_str(3295,88996
void Item_func_export_set::fix_length_and_dec(3380,91261
String* Item_func_inet_ntoa::val_str(3391,91653
#define get_esc_bit(3434,92760
String *Item_func_quote::val_str(Item_func_quote::val_str3455,93366
longlong Item_func_uncompressed_length::val_int(3588,96588
longlong Item_func_crc32::val_int(3624,97559
String *Item_func_compress::val_str(Item_func_compress::val_str3640,97866
String *Item_func_uncompress::val_str(Item_func_uncompress::val_str3704,99563
static struct rand_struct uuid_rand;3766,101215
static uint nanoseq;3767,101252
static ulonglong uuid_time=3768,101273
static char clock_seq_and_node_str[clock_seq_and_node_str3769,101303
#define UUID_TIME_OFFSET 3775,101468
#define UUID_VERSION 3778,101577
#define UUID_VARIANT 3779,101610
static void tohex(3781,101644
static void set_clock_seq_str(3791,101788
String *Item_func_uuid::val_str(Item_func_uuid::val_str3798,101959

sql/item_subselect.cc,5790
inline Item * and_items(43,1404
Item_subselect::Item_subselect(48,1514
void Item_subselect::init(63,1942
Item_subselect::get_select_lex(111,3323
void Item_subselect::cleanup(116,3392
void Item_singlerow_subselect::cleanup(135,3701
Item_subselect::~Item_subselect(143,3867
Item_subselect::select_transformer(149,3949
bool Item_subselect::fix_fields(156,4077
bool Item_subselect::walk(220,5594
bool Item_subselect::exec(259,6675
Item::Type Item_subselect::type(288,7290
void Item_subselect::fix_length_and_dec(294,7361
table_map Item_subselect::used_tables(300,7442
bool Item_subselect::const_item(306,7565
Item *Item_subselect::get_tmp_table_item(Item_subselect::get_tmp_table_item311,7679
void Item_subselect::update_used_tables(318,7851
void Item_subselect::print(329,8075
Item_singlerow_subselect::Item_singlerow_subselect(342,8284
Item_singlerow_subselect::invalidate_and_restore_select_lex(353,8601
Item_maxmin_subselect::Item_maxmin_subselect(372,9187
void Item_maxmin_subselect::cleanup(401,10017
void Item_maxmin_subselect::print(419,10496
void Item_singlerow_subselect::reset(426,10668
Item_singlerow_subselect::select_transformer(445,11197
void Item_singlerow_subselect::store(497,12884
enum Item_result Item_singlerow_subselect::result_type(503,12994
enum_field_types Item_singlerow_subselect::field_type(512,13176
void Item_singlerow_subselect::fix_length_and_dec(517,13274
uint Item_singlerow_subselect::cols(540,13900
bool Item_singlerow_subselect::check_cols(545,13968
bool Item_singlerow_subselect::null_inside(555,14129
void Item_singlerow_subselect::bring_value(565,14284
double Item_singlerow_subselect::val_real(573,14402
longlong Item_singlerow_subselect::val_int(588,14618
String *Item_singlerow_subselect::val_str(Item_singlerow_subselect::val_str603,14834
my_decimal *Item_singlerow_subselect::val_decimal(Item_singlerow_subselect::val_decimal618,15037
bool Item_singlerow_subselect::val_bool(633,15276
Item_exists_subselect::Item_exists_subselect(648,15464
void Item_exists_subselect::print(662,15825
bool Item_in_subselect::test_limit(669,15990
Item_in_subselect::Item_in_subselect(684,16302
Item_allany_subselect::Item_allany_subselect(701,16829
void Item_exists_subselect::fix_length_and_dec(720,17430
double Item_exists_subselect::val_real(729,17666
longlong Item_exists_subselect::val_int(740,17813
String *Item_exists_subselect::val_str(Item_exists_subselect::val_str765,18423
my_decimal *Item_exists_subselect::val_decimal(Item_exists_subselect::val_decimal788,19069
bool Item_exists_subselect::val_bool(798,19289
double Item_in_subselect::val_real(810,19431
longlong Item_in_subselect::val_int(830,19784
String *Item_in_subselect::val_str(Item_in_subselect::val_str850,20129
bool Item_in_subselect::val_bool(874,20551
my_decimal *Item_in_subselect::val_decimal(Item_in_subselect::val_decimal888,20762
Item_in_subselect::single_value_transformer(960,23017
Item_in_subselect::row_value_transformer(1285,34142
Item_in_subselect::select_transformer(1523,43660
Item_in_subselect::select_in_like_transformer(1551,44426
void Item_in_subselect::print(1638,46834
bool Item_in_subselect::fix_fields(1651,47114
Item_allany_subselect::select_transformer(1664,47462
void Item_allany_subselect::print(1673,47632
void subselect_engine::set_thd(1688,47977
subselect_single_select_engine(1697,48121
void subselect_single_select_engine::cleanup(1708,48438
void subselect_union_engine::cleanup(1718,48652
bool subselect_union_engine::is_executed(1727,48820
bool subselect_union_engine::no_rows(1748,49270
void subselect_uniquesubquery_engine::cleanup(1754,49450
subselect_union_engine::subselect_union_engine(1765,49686
int subselect_single_select_engine::prepare(1775,49919
int subselect_union_engine::prepare(1802,50721
int subselect_uniquesubquery_engine::prepare(1807,50819
bool subselect_single_select_engine::no_rows(1830,51312
void subselect_engine::set_row(1840,51523
void subselect_single_select_engine::fix_length_and_dec(1863,52212
void subselect_union_engine::fix_length_and_dec(1872,52467
void subselect_uniquesubquery_engine::fix_length_and_dec(1889,52861
int subselect_single_select_engine::exec(1900,53174
int subselect_union_engine::exec(2029,57340
int subselect_uniquesubquery_engine::scan_table(2056,57931
bool subselect_uniquesubquery_engine::copy_ref_key(2139,60839
int subselect_uniquesubquery_engine::exec(2223,63261
subselect_uniquesubquery_engine::~subselect_uniquesubquery_engine(2278,64610
int subselect_indexsubquery_engine::exec(2337,66677
uint subselect_single_select_engine::cols(2428,69126
uint subselect_union_engine::cols(2435,69302
uint8 subselect_single_select_engine::uncacheable(2442,69451
uint8 subselect_union_engine::uncacheable(2448,69543
void subselect_single_select_engine::exclude(2454,69621
void subselect_union_engine::exclude(2459,69719
void subselect_uniquesubquery_engine::exclude(2465,69789
table_map subselect_engine::calc_const_tables(2472,69893
table_map subselect_single_select_engine::upper_select_const_tables(2485,70132
table_map subselect_union_engine::upper_select_const_tables(2491,70277
void subselect_single_select_engine::print(2497,70408
void subselect_union_engine::print(2504,70584
void subselect_uniquesubquery_engine::print(2510,70698
void subselect_indexsubquery_engine::print(2529,71300
bool subselect_single_select_engine::change_result(2566,72236
bool subselect_union_engine::change_result(2587,72633
bool subselect_uniquesubquery_engine::change_result(2609,73038
bool subselect_single_select_engine::no_tables(2625,73389
bool subselect_single_select_engine::may_be_null(2641,73708
bool subselect_union_engine::no_tables(2655,74008
bool subselect_uniquesubquery_engine::no_tables(2675,74371

sql/item_sum.cc,8448
ulonglong Item_sum::ram_limitation(36,1048
bool Item_sum::init_sum_func_check(65,1952
bool Item_sum::check_sum_func(136,4755
bool Item_sum::register_sum_func(307,10980
Item_sum::Item_sum(373,13273
Item_sum::Item_sum(401,13807
void Item_sum::mark_as_sum_func(431,14633
void Item_sum::print(440,14814
void Item_sum::fix_num_length_and_dec(454,15160
Item *Item_sum::get_tmp_table_item(Item_sum::get_tmp_table_item462,15342
bool Item_sum::walk 484,15897
Field *Item_sum::create_tmp_field(Item_sum::create_tmp_field500,16249
void Item_sum::update_used_tables 534,17233
Item *Item_sum::set_arg(Item_sum::set_arg553,17656
int Item_sum::set_aggregator(560,17782
void Item_sum::cleanup(591,18630
static int simple_str_key_cmp(618,19230
int Aggregator_distinct::composite_key_cmp(640,19802
calc_tmp_field_type(661,20314
static int simple_raw_key_cmp(692,21097
static int item_sum_distinct_walk(698,21226
bool Aggregator_distinct::setup(721,21911
void Aggregator_distinct::clear(923,28438
bool Aggregator_distinct::add(963,29413
void Aggregator_distinct::endup(1022,31223
Item_sum_num::val_str(1077,32605
my_decimal *Item_sum_num::val_decimal(Item_sum_num::val_decimal1083,32682
Item_sum_int::val_str(1090,32809
my_decimal *Item_sum_int::val_decimal(Item_sum_int::val_decimal1096,32885
Item_sum_num::fix_fields(1103,33007
Item_sum_hybrid::fix_fields(1134,33627
void Item_sum_hybrid::setup_hybrid(1196,35117
Field *Item_sum_hybrid::create_tmp_field(Item_sum_hybrid::create_tmp_field1209,35475
Item_sum_sum::Item_sum_sum(1255,36797
Item *Item_sum_sum::copy_or_same(Item_sum_sum::copy_or_same1269,37209
void Item_sum_sum::clear(1275,37312
void Item_sum_sum::fix_length_and_dec(1290,37542
bool Item_sum_sum::add(1329,38789
longlong Item_sum_sum::val_int(1354,39309
double Item_sum_sum::val_real(1370,39638
String *Item_sum_sum::val_str(Item_sum_sum::val_str1381,39860
my_decimal *Item_sum_sum::val_decimal(Item_sum_sum::val_decimal1391,40054
bool Aggregator_distinct::unique_walk_function(1417,40866
Aggregator_distinct::~Aggregator_distinct(1425,41023
my_decimal *Aggregator_simple::arg_val_decimal(Aggregator_simple::arg_val_decimal1445,41291
double Aggregator_simple::arg_val_real(1451,41411
bool Aggregator_simple::arg_is_null(1457,41498
my_decimal *Aggregator_distinct::arg_val_decimal(Aggregator_distinct::arg_val_decimal1463,41582
double Aggregator_distinct::arg_val_real(1470,41769
bool Aggregator_distinct::arg_is_null(1477,41914
Item *Item_sum_count::copy_or_same(Item_sum_count::copy_or_same1484,42055
void Item_sum_count::clear(1490,42162
bool Item_sum_count::add(1496,42209
longlong Item_sum_count::val_int(1503,42317
void Item_sum_count::cleanup(1512,42443
void Item_sum_avg::fix_length_and_dec(1524,42597
Item *Item_sum_avg::copy_or_same(Item_sum_avg::copy_or_same1547,43491
Field *Item_sum_avg::create_tmp_field(Item_sum_avg::create_tmp_field1553,43594
void Item_sum_avg::clear(1578,44384
bool Item_sum_avg::add(1585,44453
double Item_sum_avg::val_real(1594,44584
my_decimal *Item_sum_avg::val_decimal(Item_sum_avg::val_decimal1608,44797
String *Item_sum_avg::val_str(Item_sum_avg::val_str1635,45387
double Item_sum_std::val_real(1649,45609
Item *Item_sum_std::copy_or_same(Item_sum_std::copy_or_same1657,45762
static void variance_fp_recurrence_next(1680,46391
static double variance_fp_recurrence_result(1698,46703
Item_sum_variance::Item_sum_variance(1711,46954
void Item_sum_variance::fix_length_and_dec(1721,47251
Item *Item_sum_variance::copy_or_same(Item_sum_variance::copy_or_same1760,48432
Field *Item_sum_variance::create_tmp_field(Item_sum_variance::create_tmp_field1771,48717
void Item_sum_variance::clear(1794,49325
bool Item_sum_variance::add(1799,49375
double Item_sum_variance::val_real(1812,49712
my_decimal *Item_sum_variance::val_decimal(Item_sum_variance::val_decimal1837,50401
void Item_sum_variance::reset_field(1844,50539
void Item_sum_variance::update_field(1867,51109
void Item_sum_hybrid::clear(1894,51848
double Item_sum_hybrid::val_real(1900,51918
longlong Item_sum_hybrid::val_int(1911,52143
my_decimal *Item_sum_hybrid::val_decimal(Item_sum_hybrid::val_decimal1923,52367
Item_sum_hybrid::val_str(1936,52635
void Item_sum_hybrid::cleanup(1948,52866
void Item_sum_hybrid::no_rows_in_result(1967,53322
Item *Item_sum_min::copy_or_same(Item_sum_min::copy_or_same1974,53402
bool Item_sum_min::add(1982,53571
Item *Item_sum_max::copy_or_same(Item_sum_max::copy_or_same1997,53822
bool Item_sum_max::add(2005,53991
longlong Item_sum_bit::val_int(2022,54268
void Item_sum_bit::clear(2029,54360
Item *Item_sum_or::copy_or_same(Item_sum_or::copy_or_same2034,54412
bool Item_sum_or::add(2040,54513
Item *Item_sum_xor::copy_or_same(Item_sum_xor::copy_or_same2048,54650
bool Item_sum_xor::add(2054,54753
Item *Item_sum_and::copy_or_same(Item_sum_and::copy_or_same2062,54891
bool Item_sum_and::add(2068,54994
void Item_sum_num::reset_field(2080,55341
void Item_sum_hybrid::reset_field(2099,55627
void Item_sum_sum::reset_field(2181,57162
void Item_sum_count::reset_field(2204,57763
void Item_sum_avg::reset_field(2216,58005
void Item_sum_bit::reset_field(2252,58760
void Item_sum_bit::update_field(2258,58855
void Item_sum_sum::update_field(2271,59041
void Item_sum_count::update_field(2310,59939
void Item_sum_avg::update_field(2322,60132
void Item_sum_hybrid::update_field(2365,61211
Item_sum_hybrid::min_max_update_str_field(2384,61529
Item_sum_hybrid::min_max_update_real_field(2402,61950
Item_sum_hybrid::min_max_update_int_field(2422,62354
Item_sum_hybrid::min_max_update_decimal_field(2454,63021
Item_avg_field::Item_avg_field(2479,63712
double Item_avg_field::val_real(2497,64162
longlong Item_avg_field::val_int(2517,64528
my_decimal *Item_avg_field::val_decimal(Item_avg_field::val_decimal2523,64607
String *Item_avg_field::val_str(Item_avg_field::val_str2543,65216
Item_std_field::Item_std_field(2552,65425
double Item_std_field::val_real(2558,65512
my_decimal *Item_std_field::val_decimal(Item_std_field::val_decimal2568,65693
Item_variance_field::Item_variance_field(2591,66333
double Item_variance_field::val_real(2613,66910
void Item_udf_sum::clear(2640,67725
bool Item_udf_sum::add(2647,67829
void Item_udf_sum::cleanup(2654,67936
void Item_udf_sum::print(2665,68145
Item *Item_sum_udf_float::copy_or_same(Item_sum_udf_float::copy_or_same2679,68404
double Item_sum_udf_float::val_real(2684,68518
String *Item_sum_udf_float::val_str(Item_sum_udf_float::val_str2694,68766
my_decimal *Item_sum_udf_float::val_decimal(Item_sum_udf_float::val_decimal2700,68857
String *Item_sum_udf_decimal::val_str(Item_sum_udf_decimal::val_str2706,68961
double Item_sum_udf_decimal::val_real(2712,69057
longlong Item_sum_udf_decimal::val_int(2718,69137
my_decimal *Item_sum_udf_decimal::val_decimal(Item_sum_udf_decimal::val_decimal2724,69217
Item *Item_sum_udf_decimal::copy_or_same(Item_sum_udf_decimal::copy_or_same2735,69537
Item *Item_sum_udf_int::copy_or_same(Item_sum_udf_int::copy_or_same2741,69656
longlong Item_sum_udf_int::val_int(2746,69766
String *Item_sum_udf_int::val_str(Item_sum_udf_int::val_str2756,70019
my_decimal *Item_sum_udf_int::val_decimal(Item_sum_udf_int::val_decimal2761,70106
void Item_sum_udf_str::fix_length_and_dec(2769,70258
Item *Item_sum_udf_str::copy_or_same(Item_sum_udf_str::copy_or_same2779,70488
my_decimal *Item_sum_udf_str::val_decimal(Item_sum_udf_str::val_decimal2785,70599
String *Item_sum_udf_str::val_str(Item_sum_udf_str::val_str2790,70702
int group_concat_key_cmp_with_distinct(2833,71705
int group_concat_key_cmp_with_order(2868,72737
int dump_leaf_key(2913,74123
Item_func_group_concat(2998,76783
Item_func_group_concat::Item_func_group_concat(3057,78408
void Item_func_group_concat::cleanup(3099,79775
Field *Item_func_group_concat::make_string_field(Item_func_group_concat::make_string_field3134,80460
Item *Item_func_group_concat::copy_or_same(Item_func_group_concat::copy_or_same3159,81334
void Item_func_group_concat::clear(3165,81457
bool Item_func_group_concat::add(3180,81749
Item_func_group_concat::fix_fields(3234,83243
bool Item_func_group_concat::setup(3295,84904
void Item_func_group_concat::make_unique(3421,88967
String* Item_func_group_concat::val_str(3431,89099
void Item_func_group_concat::print(3443,89372
Item_func_group_concat::~Item_func_group_concat(3474,90179

sql/item_timefunc.cc,6934
#define MAX_DAY_NUMBER 58,2132
static bool make_datetime(78,2750
static bool make_datetime_with_warn(137,4371
static bool make_time_with_warn(167,5109
static bool sec_to_time(206,6201
static DATE_TIME_FORMAT time_ampm_format=253,7330
static DATE_TIME_FORMAT time_24hrs_format=255,7460
static bool extract_date_time(291,8877
bool make_date_time(634,17879
static bool get_interval_info(879,25612
longlong Item_func_period_add::val_int(932,26982
longlong Item_func_period_diff::val_int(947,27376
longlong Item_func_to_days::val_int(961,27754
longlong Item_func_to_seconds::val_int_endpoint(971,27973
longlong Item_func_to_seconds::val_int(999,28939
enum_monotonicity_info Item_func_to_days::get_monotonicity_info(1027,29606
enum_monotonicity_info Item_func_to_seconds::get_monotonicity_info(1039,29957
longlong Item_func_to_days::val_int_endpoint(1051,30270
longlong Item_func_dayofyear::val_int(1108,32035
longlong Item_func_dayofmonth::val_int(1118,32291
longlong Item_func_month::val_int(1126,32464
void Item_func_monthname::fix_length_and_dec(1135,32635
String* Item_func_monthname::val_str(1148,33023
longlong Item_func_quarter::val_int(1169,33496
longlong Item_func_hour::val_int(1178,33687
longlong Item_func_minute::val_int(1186,33827
longlong Item_func_second::val_int(1197,34035
uint week_mode(1206,34180
longlong Item_func_week::val_int(1245,35477
longlong Item_func_yearweek::val_int(1258,35742
longlong Item_func_weekday::val_int(1272,36033
void Item_func_dayname::fix_length_and_dec(1285,36377
String* Item_func_dayname::val_str(1298,36761
longlong Item_func_year::val_int(1315,37154
enum_monotonicity_info Item_func_year::get_monotonicity_info(1338,37581
longlong Item_func_year::val_int_endpoint(1348,37863
longlong Item_func_unix_timestamp::val_int(1378,38687
enum_monotonicity_info Item_func_unix_timestamp::get_monotonicity_info(1407,39477
longlong Item_func_unix_timestamp::val_int_endpoint(1416,39719
longlong Item_func_time_to_sec::val_int(1428,40131
bool get_interval_value(1445,40489
String *Item_date::val_str(Item_date::val_str1576,44378
longlong Item_date::val_int(1592,44699
bool Item_func_from_days::get_date(1602,44904
void Item_func_curdate::fix_length_and_dec(1619,45383
String *Item_func_curdate::val_str(Item_func_curdate::val_str1631,45711
void Item_func_curdate_local::store_now_in_TIME(1647,46113
void Item_func_curdate_utc::store_now_in_TIME(1660,46529
bool Item_func_curdate::get_date(1671,46826
String *Item_func_curtime::val_str(Item_func_curtime::val_str1679,46954
void Item_func_curtime::fix_length_and_dec(1687,47112
void Item_func_curtime_local::store_now_in_TIME(1703,47540
void Item_func_curtime_utc::store_now_in_TIME(1716,47956
String *Item_func_now::val_str(Item_func_now::val_str1727,48253
void Item_func_now::fix_length_and_dec(1735,48408
void Item_func_now_local::store_now_in_TIME(1751,48828
void Item_func_now_utc::store_now_in_TIME(1764,49245
bool Item_func_now::get_date(1775,49538
int Item_func_now::save_in_field(1783,49687
void Item_func_sysdate_local::store_now_in_TIME(1794,49998
String *Item_func_sysdate_local::val_str(Item_func_sysdate_local::val_str1802,50204
longlong Item_func_sysdate_local::val_int(1812,50454
double Item_func_sysdate_local::val_real(1820,50616
void Item_func_sysdate_local::fix_length_and_dec(1828,50784
bool Item_func_sysdate_local::get_date(1835,50911
int Item_func_sysdate_local::save_in_field(1844,51109
String *Item_func_sec_to_time::val_str(Item_func_sec_to_time::val_str1853,51304
longlong Item_func_sec_to_time::val_int(1873,51714
void Item_func_date_format::fix_length_and_dec(1889,52068
bool Item_func_date_format::eq(1921,52983
uint Item_func_date_format::format_length(1946,53601
String *Item_func_date_format::val_str(Item_func_date_format::val_str2019,55749
void Item_func_from_unixtime::fix_length_and_dec(2077,57071
String *Item_func_from_unixtime::val_str(Item_func_from_unixtime::val_str2087,57273
longlong Item_func_from_unixtime::val_int(2108,57590
bool Item_func_from_unixtime::get_date(2120,57795
void Item_func_convert_tz::fix_length_and_dec(2137,58258
String *Item_func_convert_tz::val_str(Item_func_convert_tz::val_str2145,58399
longlong Item_func_convert_tz::val_int(2164,58685
bool Item_func_convert_tz::get_date(2175,58861
void Item_func_convert_tz::cleanup(2213,59697
void Item_date_add_interval::fix_length_and_dec(2220,59804
bool Item_date_add_interval::get_date(2269,61295
String *Item_date_add_interval::val_str_ascii(Item_date_add_interval::val_str_ascii2286,61694
longlong Item_date_add_interval::val_int(2310,62181
bool Item_date_add_interval::eq(2324,62575
static const char *interval_names[interval_names2338,62979
void Item_date_add_interval::print(2349,63308
void Item_extract::print(2360,63624
void Item_extract::fix_length_and_dec(2369,63877
longlong Item_extract::val_int(2398,65324
bool Item_extract::eq(2472,67901
bool Item_char_typecast::eq(2490,68267
void Item_typecast::print(2508,68700
void Item_char_typecast::print(2518,68937
String *Item_char_typecast::val_str(Item_char_typecast::val_str2541,69534
void Item_char_typecast::fix_length_and_dec(2628,71959
String *Item_datetime_typecast::val_str(Item_datetime_typecast::val_str2672,73971
longlong Item_datetime_typecast::val_int(2687,74270
bool Item_time_typecast::get_time(2701,74499
longlong Item_time_typecast::val_int(2715,74852
String *Item_time_typecast::val_str(Item_time_typecast::val_str2727,75084
bool Item_date_typecast::get_date(2742,75356
bool Item_date_typecast::get_time(2751,75607
String *Item_date_typecast::val_str(Item_date_typecast::val_str2758,75740
longlong Item_date_typecast::val_int(2774,76043
String *Item_func_makedate::val_str(Item_func_makedate::val_str2793,76612
longlong Item_func_makedate::val_int(2836,77695
void Item_func_add_time::fix_length_and_dec(2866,78391
MYSQL_TIME *Item_func_add_time::val_datetime(Item_func_add_time::val_datetime2903,79444
String *Item_func_add_time::val_str(Item_func_add_time::val_str2972,81359
longlong Item_func_add_time::val_int(2990,81634
void Item_func_add_time::print(3004,81845
String *Item_func_timediff::val_str(Item_func_timediff::val_str3033,82437
String *Item_func_maketime::val_str(Item_func_maketime::val_str3081,83711
longlong Item_func_microsecond::val_int(3150,85410
longlong Item_func_timestamp_diff::val_int(3160,85577
void Item_func_timestamp_diff::print(3265,88398
String *Item_func_get_format::val_str_ascii(Item_func_get_format::val_str_ascii3311,89417
void Item_func_get_format::print(3345,90276
get_date_time_result_type(3393,91400
void Item_func_str_to_date::fix_length_and_dec(3437,92531
bool Item_func_str_to_date::get_date(3478,93895
String *Item_func_str_to_date::val_str(Item_func_str_to_date::val_str3524,95452
longlong Item_func_str_to_date::val_int(3540,95818
bool Item_func_last_day::get_date(3563,96318

sql/item_xmlfunc.cc,17448
typedef struct my_xml_node_st58,1780
  uint level;my_xml_node_st::level60,1812
  enum my_xml_node_type type;my_xml_node_st::type61,1887
  uint parent;my_xml_node_st::parent62,1962
  const char *beg;my_xml_node_st::beg63,2037
  const char *end;my_xml_node_st::end64,2112
  const char *tagend;my_xml_node_st::tagend65,2187
} MY_XML_NODE;66,2262
typedef struct my_xpath_lex_st70,2308
  int        term;my_xpath_lex_st::term72,2341
  const char *beg;my_xpath_lex_st::beg73,2408
  const char *end;my_xpath_lex_st::end74,2475
} MY_XPATH_LEX;75,2542
typedef struct my_xpath_flt_st79,2594
  uint num;my_xpath_flt_st::num81,2627
  uint pos;my_xpath_flt_st::pos82,2688
  uint size;my_xpath_flt_st::size83,2749
} MY_XPATH_FLT;84,2810
typedef struct my_xpath_function_names_st88,2857
  const char *name;my_xpath_function_names_st::name90,2901
  size_t length;my_xpath_function_names_st::length91,2952
  size_t minargs;my_xpath_function_names_st::minargs92,3003
  size_t maxargs;my_xpath_function_names_st::maxargs93,3054
} MY_XPATH_FUNC;95,3176
typedef struct my_xpath_st99,3220
  int debug;my_xpath_st::debug101,3249
  MY_XPATH_LEX query;my_xpath_st::query102,3262
  MY_XPATH_LEX lasttok;my_xpath_st::lasttok103,3335
  MY_XPATH_LEX prevtok;my_xpath_st::prevtok104,3408
  int axis;my_xpath_st::axis105,3481
  int extra;my_xpath_st::extra106,3554
  MY_XPATH_FUNC *func;my_xpath_st::func107,3627
  Item *item;my_xpath_st::item108,3700
  Item *context;my_xpath_st::context109,3773
  Item *rootelement;my_xpath_st::rootelement110,3846
  String *context_cache;my_xpath_st::context_cache111,3919
  String *pxml;my_xpath_st::pxml112,3992
  CHARSET_INFO *cs;my_xpath_st::cs113,4065
  int error;my_xpath_st::error114,4138
} MY_XPATH;115,4151
class XPathFilter 119,4201
  XPathFilter(XPathFilter::XPathFilter122,4244
  inline bool append_element(XPathFilter::append_element123,4273
  inline bool append_element(XPathFilter::append_element128,4425
  inline bool append_element(XPathFilter::append_element136,4594
  inline MY_XPATH_FLT *element(XPathFilter::element144,4779
  inline uint32 numelements(XPathFilter::numelements148,4890
class Item_nodeset_func 158,5040
  String tmp_value,Item_nodeset_func::tmp_value161,5099
  String tmp_value, tmp2_value;Item_nodeset_func::tmp2_value161,5099
  MY_XPATH_FLT *fltbeg,Item_nodeset_func::fltbeg162,5131
  MY_XPATH_FLT *fltbeg, *fltend;Item_nodeset_func::fltend162,5131
  MY_XML_NODE *nodebeg,Item_nodeset_func::nodebeg163,5164
  MY_XML_NODE *nodebeg, *nodeend;Item_nodeset_func::nodeend163,5164
  uint numnodes;Item_nodeset_func::numnodes164,5198
  String *pxml;Item_nodeset_func::pxml166,5223
  String context_cache;Item_nodeset_func::context_cache167,5239
  Item_nodeset_func(Item_nodeset_func::Item_nodeset_func168,5263
  Item_nodeset_func(Item_nodeset_func::Item_nodeset_func169,5337
  Item_nodeset_func(Item_nodeset_func::Item_nodeset_func171,5426
  Item_nodeset_func(Item_nodeset_func::Item_nodeset_func173,5527
  void prepare_nodes(Item_nodeset_func::prepare_nodes175,5638
  void prepare(Item_nodeset_func::prepare181,5803
  enum Type type(Item_nodeset_func::type189,6037
  String *val_str(Item_nodeset_func::val_str190,6088
  enum Item_result result_type Item_nodeset_func::result_type224,6985
  void fix_length_and_dec(Item_nodeset_func::fix_length_and_dec225,7051
  const char *func_name(Item_nodeset_func::func_name230,7161
class Item_nodeset_func_rootelement 235,7246
  Item_nodeset_func_rootelement(Item_nodeset_func_rootelement::Item_nodeset_func_rootelement238,7318
  const char *func_name(Item_nodeset_func_rootelement::func_name239,7392
class Item_nodeset_func_union 245,7540
  Item_nodeset_func_union(Item_nodeset_func_union::Item_nodeset_func_union248,7606
  const char *func_name(Item_nodeset_func_union::func_name250,7702
class Item_nodeset_func_axisbyname 256,7849
  const char *node_name;Item_nodeset_func_axisbyname::node_name258,7912
  uint node_namelen;Item_nodeset_func_axisbyname::node_namelen259,7937
  Item_nodeset_func_axisbyname(Item_nodeset_func_axisbyname::Item_nodeset_func_axisbyname261,7966
  const char *func_name(Item_nodeset_func_axisbyname::func_name264,8158
  bool validname(Item_nodeset_func_axisbyname::validname265,8221
class Item_nodeset_func_selfbyname:Item_nodeset_func_selfbyname276,8442
  Item_nodeset_func_selfbyname(Item_nodeset_func_selfbyname::Item_nodeset_func_selfbyname279,8524
  const char *func_name(Item_nodeset_func_selfbyname::func_name282,8702
class Item_nodeset_func_childbyname:Item_nodeset_func_childbyname288,8833
  Item_nodeset_func_childbyname(Item_nodeset_func_childbyname::Item_nodeset_func_childbyname291,8916
  const char *func_name(Item_nodeset_func_childbyname::func_name294,9095
class Item_nodeset_func_descendantbyname:Item_nodeset_func_descendantbyname300,9230
  bool need_self;Item_nodeset_func_descendantbyname::need_self302,9310
  Item_nodeset_func_descendantbyname(Item_nodeset_func_descendantbyname::Item_nodeset_func_descendantbyname304,9336
  const char *func_name(Item_nodeset_func_descendantbyname::func_name308,9578
class Item_nodeset_func_ancestorbyname:Item_nodeset_func_ancestorbyname314,9716
  bool need_self;Item_nodeset_func_ancestorbyname::need_self316,9794
  Item_nodeset_func_ancestorbyname(Item_nodeset_func_ancestorbyname::Item_nodeset_func_ancestorbyname318,9820
  const char *func_name(Item_nodeset_func_ancestorbyname::func_name322,10057
class Item_nodeset_func_parentbyname:Item_nodeset_func_parentbyname328,10191
  Item_nodeset_func_parentbyname(Item_nodeset_func_parentbyname::Item_nodeset_func_parentbyname331,10275
  const char *func_name(Item_nodeset_func_parentbyname::func_name334,10456
class Item_nodeset_func_attributebyname:Item_nodeset_func_attributebyname340,10591
  Item_nodeset_func_attributebyname(Item_nodeset_func_attributebyname::Item_nodeset_func_attributebyname343,10678
  const char *func_name(Item_nodeset_func_attributebyname::func_name346,10865
class Item_nodeset_func_predicate 356,11132
  Item_nodeset_func_predicate(Item_nodeset_func_predicate::Item_nodeset_func_predicate359,11202
  const char *func_name(Item_nodeset_func_predicate::func_name361,11302
class Item_nodeset_func_elementbyindex 367,11462
  Item_nodeset_func_elementbyindex(Item_nodeset_func_elementbyindex::Item_nodeset_func_elementbyindex370,11537
  const char *func_name(Item_nodeset_func_elementbyindex::func_name372,11644
class Item_bool 381,11862
  Item_bool(Item_bool::Item_bool384,11905
  const char *func_name(Item_bool::func_name385,11942
  bool is_bool_func(Item_bool::is_bool_func386,11999
class Item_xpath_cast_bool 396,12244
  String *pxml;Item_xpath_cast_bool::pxml398,12295
  String tmp_value;Item_xpath_cast_bool::tmp_value399,12311
  Item_xpath_cast_bool(Item_xpath_cast_bool::Item_xpath_cast_bool401,12339
  const char *func_name(Item_xpath_cast_bool::func_name403,12430
  bool is_bool_func(Item_xpath_cast_bool::is_bool_func404,12492
  longlong val_int(Item_xpath_cast_bool::val_int405,12528
class Item_xpath_cast_number 420,12813
  Item_xpath_cast_number(Item_xpath_cast_number::Item_xpath_cast_number423,12875
  const char *func_name(Item_xpath_cast_number::func_name424,12931
  virtual double val_real(Item_xpath_cast_number::val_real425,12995
class Item_nodeset_context_cache 432,13097
  String *string_cache;Item_nodeset_context_cache::string_cache435,13166
  Item_nodeset_context_cache(Item_nodeset_context_cache::Item_nodeset_context_cache436,13190
  String *val_nodeset(Item_nodeset_context_cache::val_nodeset438,13306
  void fix_length_and_dec(Item_nodeset_context_cache::fix_length_and_dec440,13368
class Item_func_xpath_position 444,13433
  String *pxml;Item_func_xpath_position::pxml446,13488
  String tmp_value;Item_func_xpath_position::tmp_value447,13504
  Item_func_xpath_position(Item_func_xpath_position::Item_func_xpath_position449,13532
  const char *func_name(Item_func_xpath_position::func_name451,13613
  void fix_length_and_dec(Item_func_xpath_position::fix_length_and_dec452,13674
  longlong val_int(Item_func_xpath_position::val_int453,13721
class Item_func_xpath_count 463,13918
  String *pxml;Item_func_xpath_count::pxml465,13970
  String tmp_value;Item_func_xpath_count::tmp_value466,13986
  Item_func_xpath_count(Item_func_xpath_count::Item_func_xpath_count468,14014
  const char *func_name(Item_func_xpath_count::func_name470,14092
  void fix_length_and_dec(Item_func_xpath_count::fix_length_and_dec471,14150
  longlong val_int(Item_func_xpath_count::val_int472,14197
class Item_func_xpath_sum 484,14546
  String *pxml;Item_func_xpath_sum::pxml486,14597
  String tmp_value;Item_func_xpath_sum::tmp_value487,14613
  Item_func_xpath_sum(Item_func_xpath_sum::Item_func_xpath_sum489,14641
  const char *func_name(Item_func_xpath_sum::func_name492,14719
  double val_real(Item_func_xpath_sum::val_real493,14775
class Item_nodeset_to_const_comparator 527,15746
  String *pxml;Item_nodeset_to_const_comparator::pxml529,15810
  String tmp_nodeset;Item_nodeset_to_const_comparator::tmp_nodeset530,15826
  Item_nodeset_to_const_comparator(Item_nodeset_to_const_comparator::Item_nodeset_to_const_comparator532,15856
  enum Type type(Item_nodeset_to_const_comparator::type534,15982
  const char *func_name(Item_nodeset_to_const_comparator::func_name535,16038
  bool is_bool_func(Item_nodeset_to_const_comparator::is_bool_func536,16118
  longlong val_int(Item_nodeset_to_const_comparator::val_int538,16155
String *Item_nodeset_func_rootelement::val_nodeset(Item_nodeset_func_rootelement::val_nodeset571,17156
String * Item_nodeset_func_union::val_nodeset(579,17319
String *Item_nodeset_func_selfbyname::val_nodeset(Item_nodeset_func_selfbyname::val_nodeset610,18162
String *Item_nodeset_func_childbyname::val_nodeset(Item_nodeset_func_childbyname::val_nodeset624,18484
String *Item_nodeset_func_descendantbyname::val_nodeset(Item_nodeset_func_descendantbyname::val_nodeset645,19035
String *Item_nodeset_func_ancestorbyname::val_nodeset(Item_nodeset_func_ancestorbyname::val_nodeset667,19651
String *Item_nodeset_func_parentbyname::val_nodeset(Item_nodeset_func_parentbyname::val_nodeset709,20548
String *Item_nodeset_func_attributebyname::val_nodeset(Item_nodeset_func_attributebyname::val_nodeset732,21095
String *Item_nodeset_func_predicate::val_nodeset(Item_nodeset_func_predicate::val_nodeset753,21649
String *Item_nodeset_func_elementbyindex::val_nodeset(Item_nodeset_func_elementbyindex::val_nodeset773,22327
static Item* nodeset2bool(797,23173
#define MY_XPATH_LEX_DIGITS 808,23377
#define MY_XPATH_LEX_IDENT 809,23411
#define MY_XPATH_LEX_STRING 810,23445
#define MY_XPATH_LEX_SLASH 811,23479
#define MY_XPATH_LEX_LB 812,23513
#define MY_XPATH_LEX_RB 813,23547
#define MY_XPATH_LEX_LP 814,23581
#define MY_XPATH_LEX_RP 815,23615
#define MY_XPATH_LEX_EQ 816,23649
#define MY_XPATH_LEX_LESS 817,23683
#define MY_XPATH_LEX_GREATER 818,23717
#define MY_XPATH_LEX_AT 819,23751
#define MY_XPATH_LEX_COLON 820,23785
#define MY_XPATH_LEX_ASTERISK 821,23819
#define MY_XPATH_LEX_DOT 822,23853
#define MY_XPATH_LEX_VLINE 823,23887
#define MY_XPATH_LEX_MINUS 824,23921
#define MY_XPATH_LEX_PLUS 825,23955
#define MY_XPATH_LEX_EXCL 826,23989
#define MY_XPATH_LEX_COMMA 827,24023
#define MY_XPATH_LEX_DOLLAR 828,24057
#define MY_XPATH_LEX_ERROR 829,24091
#define MY_XPATH_LEX_EOF 830,24125
#define MY_XPATH_LEX_AND 831,24159
#define MY_XPATH_LEX_OR 832,24193
#define MY_XPATH_LEX_DIV 833,24227
#define MY_XPATH_LEX_MOD 834,24261
#define MY_XPATH_LEX_FUNC 835,24295
#define MY_XPATH_LEX_NODETYPE 836,24329
#define MY_XPATH_LEX_AXIS 837,24363
#define MY_XPATH_LEX_LE 838,24397
#define MY_XPATH_LEX_GE 839,24431
#define MY_XPATH_AXIS_ANCESTOR 845,24491
#define MY_XPATH_AXIS_ANCESTOR_OR_SELF 846,24535
#define MY_XPATH_AXIS_ATTRIBUTE 847,24579
#define MY_XPATH_AXIS_CHILD 848,24623
#define MY_XPATH_AXIS_DESCENDANT 849,24667
#define MY_XPATH_AXIS_DESCENDANT_OR_SELF 850,24711
#define MY_XPATH_AXIS_FOLLOWING 851,24755
#define MY_XPATH_AXIS_FOLLOWING_SIBLING 852,24799
#define MY_XPATH_AXIS_NAMESPACE 853,24843
#define MY_XPATH_AXIS_PARENT 854,24887
#define MY_XPATH_AXIS_PRECEDING 855,24931
#define MY_XPATH_AXIS_PRECEDING_SIBLING 856,24975
#define MY_XPATH_AXIS_SELF 857,25019
static Item *eq_func(eq_func870,25246
static Item *eq_func_reverse(eq_func_reverse897,25893
static Item *create_comparator(create_comparator922,26498
static Item* nametestfunc(983,28194
static char simpletok[simpletok1025,29495
struct my_xpath_keyword_names_st1042,30026
  int tok;my_xpath_keyword_names_st::tok1044,30061
  const char *name;my_xpath_keyword_names_st::name1045,30072
  size_t length;my_xpath_keyword_names_st::length1046,30092
  int extra;my_xpath_keyword_names_st::extra1047,30109
static struct my_xpath_keyword_names_st my_keyword_names[my_keyword_names1051,30127
static struct my_xpath_keyword_names_st my_axis_names[my_axis_names1061,30460
static struct my_xpath_keyword_names_st my_nodetype_names[my_nodetype_names1080,31579
my_xpath_keyword(1101,32107
static Item *create_func_true(create_func_true1123,32594
static Item *create_func_false(create_func_false1129,32700
static Item *create_func_not(create_func_not1135,32807
static Item *create_func_ceiling(create_func_ceiling1141,32943
static Item *create_func_floor(create_func_floor1147,33065
static Item *create_func_bool(create_func_bool1153,33183
static Item *create_func_number(create_func_number1159,33318
static Item *create_func_string_length(create_func_string_length1165,33444
static Item *create_func_round(create_func_round1172,33629
static Item *create_func_last(create_func_last1178,33779
static Item *create_func_position(create_func_position1185,33956
static Item *create_func_contains(create_func_contains1192,34140
static Item *create_func_concat(create_func_concat1199,34344
static Item *create_func_substr(create_func_substr1205,34475
static Item *create_func_count(create_func_count1214,34691
static Item *create_func_sum(create_func_sum1222,34890
static MY_XPATH_FUNC my_func_names3[my_func_names31234,35180
static MY_XPATH_FUNC my_func_names4[my_func_names41242,35329
static MY_XPATH_FUNC my_func_names5[my_func_names51252,35524
static MY_XPATH_FUNC my_func_names6[my_func_names61262,35758
static MY_XPATH_FUNC my_func_names[my_func_names1272,36010
my_xpath_function(1306,36969
my_xpath_lex_init(1328,37585
my_xpath_init(1338,37771
my_xdigit(1345,37860
my_xpath_lex_scan(1363,38160
my_xpath_parse_term(1477,41027
static int my_xpath_parse_AxisName(1500,41457
#define my_xpath_parse_PredicateExpr(1517,41993
#define my_xpath_parse_Expr(1520,42086
static int my_xpath_parse_LocationPath(1557,43524
static int my_xpath_parse_AbsoluteLocationPath(1590,44371
static int my_xpath_parse_RelativeLocationPath(1633,45562
my_xpath_parse_AxisSpecifier_NodeTest_opt_Predicate_list(1667,46368
static int my_xpath_parse_Step(1714,47644
static int my_xpath_parse_AbbreviatedAxisSpecifier(1733,48009
static int my_xpath_parse_AxisName_colon_colon(1752,48331
static int my_xpath_parse_AxisSpecifier(1770,48698
static int my_xpath_parse_NodeTest_lp_rp(1786,48968
static int my_xpath_parse_NodeTest(1806,49410
static int my_xpath_parse_AbbreviatedStep(1824,49682
static int my_xpath_parse_lp_Expr_rp(1849,50298
static int my_xpath_parse_PrimaryExpr_literal(1855,50505
static int my_xpath_parse_PrimaryExpr(1864,50828
static int my_xpath_parse_FunctionCall(1887,51338
static int my_xpath_parse_UnionExpr(1937,52276
my_xpath_parse_FilterExpr_opt_slashes_RelativeLocationPath(1974,53065
static int my_xpath_parse_PathExpr(2009,54022
static int my_xpath_parse_FilterExpr(2033,54454
static int my_xpath_parse_OrExpr(2050,54711
static int my_xpath_parse_AndExpr(2081,55313
static int my_xpath_parse_ne(2117,56111
static int my_xpath_parse_EqualityOperator(2131,56458
static int my_xpath_parse_EqualityExpr(2145,56707
static int my_xpath_parse_RelationalOperator(2190,57796
static int my_xpath_parse_RelationalExpr(2206,58274
static int my_xpath_parse_AdditiveOperator(2244,59143
static int my_xpath_parse_AdditiveExpr(2249,59320
static int my_xpath_parse_MultiplicativeOperator(2290,60306
static int my_xpath_parse_MultiplicativeExpr(2297,60555
static int my_xpath_parse_UnaryExpr(2339,61417
static int my_xpath_parse_Number(2374,62175
my_xpath_parse_NCName(2412,63000
my_xpath_parse_QName(2433,63547
my_xpath_parse_VariableReference(2476,64545
my_xpath_parse_NodeTest_QName(2536,66034
my_xpath_parse_NodeTest_asterisk(2547,66366
my_xpath_parse_NameTest(2556,66622
my_xpath_parse(2575,66941
void Item_xml_str_func::fix_length_and_dec(2589,67341
#define MAX_LEVEL 2642,68589
  uint level;::level2645,68629
  String *pxml;::pxml2646,68643
  uint pos[::pos2647,68681
  uint parent;::parent2648,68727
} MY_XML_USER_DATA;2649,68795
append_node(2653,68829
int xml_enter(2687,69756
int xml_value(2722,70743
int xml_leave(2750,71419
String *Item_xml_str_func::parse_xml(Item_xml_str_func::parse_xml2775,71895
String *Item_func_xml_extractvalue::val_str(Item_func_xml_extractvalue::val_str2816,73138
String *Item_func_xml_update::val_str(Item_func_xml_update::val_str2832,73434

sql/keycaches.cc,722
NAMED_ILIST key_caches;22,948
class NAMED_ILINK 27,1025
  const char *name;NAMED_ILINK::name30,1067
  uint name_length;NAMED_ILINK::name_length31,1087
  uchar* data;NAMED_ILINK::data32,1107
  NAMED_ILINK(NAMED_ILINK::NAMED_ILINK34,1123
  inline bool cmp(NAMED_ILINK::cmp41,1383
  ~NAMED_ILINK(NAMED_ILINK::~NAMED_ILINK45,1513
uchar* find_named(51,1570
void NAMED_ILIST::delete_elements(69,1919
LEX_STRING default_key_cache_base=84,2230
KEY_CACHE zero_key_cache;86,2298
KEY_CACHE *get_key_cache(get_key_cache88,2381
KEY_CACHE *create_key_cache(create_key_cache96,2642
KEY_CACHE *get_or_create_key_cache(get_or_create_key_cache127,3584
void free_key_cache(140,3899
bool process_key_caches(147,4037

sql/key.cc,212
int find_ref_key(51,1747
void key_copy(111,3468
void key_restore(162,4987
bool key_cmp_if_same(261,8097
void key_unpack(329,9984
bool is_key_used(413,12538
int key_cmp(445,13485
int key_rec_cmp(511,15877

sql/lock.cc,1082
#define GET_LOCK_UNLOCK 94,3315
#define GET_LOCK_STORE_LOCKS 95,3349
static int thr_lock_errno_to_mysql[thr_lock_errno_to_mysql104,3753
lock_tables_check(116,4125
static void reset_lock_data(238,8359
static void reset_lock_data_and_free(262,8847
MYSQL_LOCK *mysql_lock_tables(mysql_lock_tables284,9480
static int lock_external(343,11285
void mysql_unlock_tables(380,12219
void mysql_unlock_some_tables(397,12686
void mysql_unlock_read_tables(409,12936
void mysql_lock_remove(476,14697
void mysql_lock_abort(539,16677
bool mysql_lock_abort_for_thread(566,17290
MYSQL_LOCK *mysql_lock_merge(mysql_lock_merge586,17766
static int unlock_external(632,19257
static MYSQL_LOCK *get_lock_data(get_lock_data665,20061
bool lock_schema_name(767,23877
bool lock_object_name(821,25686
static void print_lock_error(860,26871
bool Global_read_lock::lock_global_read_lock(959,30622
void Global_read_lock::unlock_global_read_lock(1000,31862
bool Global_read_lock::make_global_read_lock_block_commit(1034,32669
void Global_read_lock::set_explicit_lock_duration(1064,33469

sql/log.cc,11005
#define MAX_LOG_BUFFER_SIZE 55,1773
#define MAX_TIME_SIZE 56,1806
#define MY_OFF_T_UNDEF 57,1831
#define FLAGSTR(59,1872
LOGGER logger;61,1913
MYSQL_BIN_LOG mysql_bin_log(&sync_binlog_period)sync_binlog_period63,1929
uint purge_log_get_error_code(84,2765
class Silence_log_table_errors 111,3697
  char m_message[Silence_log_table_errors::m_message113,3762
  Silence_log_table_errors(Silence_log_table_errors::Silence_log_table_errors115,3807
  virtual ~Silence_log_table_errors(Silence_log_table_errors::~Silence_log_table_errors120,3869
  const char *message(Silence_log_table_errors::message128,4234
Silence_log_table_errors::handle_condition(132,4295
sql_print_message_func sql_print_message_handlers[sql_print_message_handlers144,4741
char *make_log_name(make_log_name163,5207
class Mutex_sentry178,5659
  Mutex_sentry(Mutex_sentry::Mutex_sentry181,5688
  ~Mutex_sentry(Mutex_sentry::~Mutex_sentry188,5803
  mysql_mutex_t *m_mutex;Mutex_sentry::m_mutex198,5931
class binlog_cache_data209,6203
  binlog_cache_data(binlog_cache_data::binlog_cache_data212,6237
  ~binlog_cache_data(binlog_cache_data::~binlog_cache_data218,6470
  bool empty(binlog_cache_data::empty224,6563
  Rows_log_event *pending(binlog_cache_data::pending229,6653
  void set_pending(binlog_cache_data::set_pending234,6718
  void set_incident(binlog_cache_data::set_incident239,6801
  bool has_incident(binlog_cache_data::has_incident244,6858
  void set_changes_to_non_trans_temp_table(binlog_cache_data::set_changes_to_non_trans_temp_table249,6915
  bool changes_to_non_trans_temp_table(binlog_cache_data::changes_to_non_trans_temp_table254,7021
  void reset(binlog_cache_data::reset259,7126
  my_off_t get_byte_position(binlog_cache_data::get_byte_position277,7727
  my_off_t get_prev_position(binlog_cache_data::get_prev_position282,7807
  void set_prev_position(binlog_cache_data::set_prev_position287,7877
  void restore_prev_position(binlog_cache_data::restore_prev_position292,7954
  void restore_savepoint(binlog_cache_data::restore_savepoint297,8025
  void set_binlog_cache_info(binlog_cache_data::set_binlog_cache_info304,8162
  IO_CACHE cache_log;binlog_cache_data::cache_log337,9466
  Rows_log_event *m_pending;binlog_cache_data::m_pending344,9602
  my_off_t before_stmt_pos;binlog_cache_data::before_stmt_pos349,9705
  bool incident;binlog_cache_data::incident355,9846
  bool changes_to_non_trans_temp_table_flag;binlog_cache_data::changes_to_non_trans_temp_table_flag361,10014
  void compute_statistics(binlog_cache_data::compute_statistics366,10127
  my_off_t saved_max_binlog_cache_size;binlog_cache_data::saved_max_binlog_cache_size381,10559
  ulong *ptr_binlog_cache_use;binlog_cache_data::ptr_binlog_cache_use388,10784
  ulong *ptr_binlog_cache_disk_use;binlog_cache_data::ptr_binlog_cache_disk_use395,11004
  void truncate(binlog_cache_data::truncate401,11148
class binlog_cache_mngr 417,11566
  binlog_cache_mngr(binlog_cache_mngr::binlog_cache_mngr419,11600
  void reset_cache(binlog_cache_mngr::reset_cache434,12392
  binlog_cache_data* get_binlog_cache_data(binlog_cache_mngr::get_binlog_cache_data439,12476
  IO_CACHE* get_binlog_cache_log(binlog_cache_mngr::get_binlog_cache_log444,12609
  binlog_cache_data stmt_cache;binlog_cache_mngr::stmt_cache449,12752
  binlog_cache_data trx_cache;binlog_cache_mngr::trx_cache451,12785
handlerton *binlog_hton;binlog_hton459,12946
bool LOGGER::is_log_table_enabled(461,12972
int check_if_log_table(476,13374
Log_to_csv_event_handler::Log_to_csv_event_handler(507,14402
Log_to_csv_event_handler::~Log_to_csv_event_handler(512,14461
void Log_to_csv_event_handler::cleanup(517,14521
  log_general(555,15940
  log_slow(719,20988
  activate_log(878,25895
  log_error(915,26753
  log_error(923,26928
void Log_to_file_event_handler::init_pthread_objects(929,27061
  log_slow(939,27288
  log_general(961,28117
bool Log_to_file_event_handler::init(977,28730
void Log_to_file_event_handler::cleanup(994,28989
void Log_to_file_event_handler::flush(1000,29087
bool LOGGER::error_log_print(1025,29620
void LOGGER::cleanup_base(1039,30036
void LOGGER::cleanup_end(1054,30319
void LOGGER::init_base(1070,30576
void LOGGER::init_log_tables(1091,31131
bool LOGGER::flush_logs(1102,31384
bool LOGGER::flush_slow_log(1126,31767
bool LOGGER::flush_general_log(1150,32187
bool LOGGER::slow_log_print(1185,32905
bool LOGGER::general_log_write(1254,34965
bool LOGGER::general_log_print(1294,36172
void LOGGER::init_error_log(1310,36656
void LOGGER::init_slow_log(1333,37098
void LOGGER::init_general_log(1358,37664
bool LOGGER::activate_log_handler(1384,38267
void LOGGER::deactivate_log_handler(1436,39393
bool Log_to_csv_event_handler::init(1465,39955
int LOGGER::set_handlers(1470,40010
binlog_trans_log_savepos(1514,41149
binlog_trans_log_truncate(1545,41937
int binlog_init(1567,42570
static int binlog_close_connection(1583,43157
binlog_flush_cache(1610,44043
binlog_commit_flush_stmt_cache(1649,45267
binlog_commit_flush_trx_cache(1668,45867
binlog_rollback_flush_trx_cache(1686,46434
binlog_commit_flush_trx_cache(1705,47046
binlog_truncate_trx_cache(1726,47778
static int binlog_prepare(1766,49033
static int binlog_commit(1789,49641
static int binlog_rollback(1848,51395
void MYSQL_BIN_LOG::set_write_error(1950,55141
bool MYSQL_BIN_LOG::check_write_error(1978,55675
static int binlog_savepoint_set(2024,57433
static int binlog_savepoint_rollback(2050,58330
int check_binlog_magic(2083,59541
File open_binlog(2104,60093
static int eventSource 2140,61042
static void setup_windows_event_source(2142,61071
static int find_uniq_filename(2191,62543
void MYSQL_LOG::init(2276,64867
bool MYSQL_LOG::init_and_set_log_file_name(2287,65142
bool MYSQL_LOG::open(2324,66196
MYSQL_LOG::MYSQL_LOG(2411,68938
void MYSQL_LOG::init_pthread_objects(2424,69368
void MYSQL_LOG::close(2445,69909
void MYSQL_LOG::cleanup(2474,70638
int MYSQL_LOG::generate_new_name(2487,70802
void MYSQL_QUERY_LOG::reopen_file(2519,71439
bool MYSQL_QUERY_LOG::write(2578,72775
bool MYSQL_QUERY_LOG::write(2681,75842
const char *MYSQL_LOG::generate_name(MYSQL_LOG::generate_name2816,80329
MYSQL_BIN_LOG::MYSQL_BIN_LOG(2839,80993
void MYSQL_BIN_LOG::cleanup(2859,81715
void MYSQL_BIN_LOG::init(2877,82105
void MYSQL_BIN_LOG::init_pthread_objects(2887,82352
bool MYSQL_BIN_LOG::open_index_file(2895,82564
bool MYSQL_BIN_LOG::open(2975,85184
int MYSQL_BIN_LOG::get_current_log(3174,91770
int MYSQL_BIN_LOG::raw_get_current_log(3182,91945
static bool copy_up_file_and_fill(3208,92601
int MYSQL_BIN_LOG::find_log_pos(3266,94413
int MYSQL_BIN_LOG::find_next_log(3368,97285
bool MYSQL_BIN_LOG::reset_logs(3427,98533
int MYSQL_BIN_LOG::purge_first_log(3590,103862
int MYSQL_BIN_LOG::update_log_index(3684,106785
int MYSQL_BIN_LOG::purge_logs(3719,108006
int MYSQL_BIN_LOG::set_purge_index_file_name(3800,110507
int MYSQL_BIN_LOG::open_purge_index_file(3815,111012
int MYSQL_BIN_LOG::close_purge_index_file(3841,111743
bool MYSQL_BIN_LOG::is_inited_purge_index_file(3858,112129
int MYSQL_BIN_LOG::sync_purge_index_file(3864,112290
int MYSQL_BIN_LOG::register_purge_index_entry(3876,112568
int MYSQL_BIN_LOG::register_create_index_entry(3888,112913
int MYSQL_BIN_LOG::purge_index_entry(3894,113094
int MYSQL_BIN_LOG::purge_logs_before_date(4090,119259
void MYSQL_BIN_LOG::make_log_name(4175,121423
bool MYSQL_BIN_LOG::is_active(4189,121763
int MYSQL_BIN_LOG::new_file(4206,122182
int MYSQL_BIN_LOG::new_file_without_locking(4215,122281
int MYSQL_BIN_LOG::new_file_impl(4233,122585
bool MYSQL_BIN_LOG::append(4382,127240
bool MYSQL_BIN_LOG::appendv(4411,127948
bool MYSQL_BIN_LOG::flush_and_sync(4441,128639
void MYSQL_BIN_LOG::start_union_events(4460,129051
void MYSQL_BIN_LOG::stop_union_events(4469,129376
bool MYSQL_BIN_LOG::is_query_in_union(4475,129517
trans_has_updated_trans_table(4490,129961
stmt_has_updated_trans_table(4507,130422
bool use_trans_cache(4536,131360
bool ending_trans(4557,132101
bool ending_single_stmt_trans(4573,132550
bool trans_has_updated_non_trans_table(4587,132928
bool stmt_has_updated_non_trans_table(4601,133358
int THD::binlog_setup_trx_data(4611,133594
THD::binlog_start_trans_and_stmt(4670,135748
void THD::binlog_set_stmt_begin(4700,136933
int THD::binlog_write_table_map(4729,138000
THD::binlog_get_pending_rows_event(4775,139451
THD::binlog_set_pending_rows_event(4807,140531
MYSQL_BIN_LOG::remove_pending_rows_event(4834,141332
MYSQL_BIN_LOG::flush_and_set_pending_rows_event(4867,142337
bool MYSQL_BIN_LOG::write(4921,143957
int error_log_print(5114,150066
bool slow_log_print(5121,150221
bool LOGGER::log_command(5128,150413
bool general_log_print(5156,151015
bool general_log_write(5173,151432
int MYSQL_BIN_LOG::rotate(5198,152196
void MYSQL_BIN_LOG::purge(5232,153082
int MYSQL_BIN_LOG::rotate_and_purge(5256,153620
uint MYSQL_BIN_LOG::next_file_id(5277,154166
int MYSQL_BIN_LOG::write_cache(5301,154739
int query_error_code(5430,158810
bool MYSQL_BIN_LOG::write_incident(5456,159519
bool MYSQL_BIN_LOG::write(5514,161257
void MYSQL_BIN_LOG::wait_for_update_relay_log(5628,164572
int MYSQL_BIN_LOG::wait_for_update_bin_log(5658,165532
void MYSQL_BIN_LOG::close(5687,166431
void MYSQL_BIN_LOG::set_max_size(5745,168338
static bool test_if_number(5780,169271
void sql_perror(5812,169989
extern "C" my_bool reopen_fstreams(5827,170319
static bool redirect_std_streams(5848,170812
bool flush_error_log(5858,170972
void MYSQL_BIN_LOG::signal_update(5871,171207
static void print_buffer_to_nt_eventlog(5880,171382
static void print_buffer_to_file(5916,172464
int vprint_msg_to_log(5964,173901
void sql_print_error(5982,174298
void sql_print_warning(5995,174510
void sql_print_information(6008,174728
ulong tc_log_page_waits=6059,176828
#define TC_LOG_HEADER_SIZE 6063,176875
static const char tc_log_magic[tc_log_magic6065,176928
ulong opt_tc_log_size=6067,176994
ulong tc_log_max_pages_used=6068,177034
int TC_LOG_MMAP::open(6070,177111
void TC_LOG_MMAP::get_active_from_pool(6184,180317
int TC_LOG_MMAP::overflow(6229,181339
int TC_LOG_MMAP::log_xid(6268,182695
int TC_LOG_MMAP::sync(6365,185409
int TC_LOG_MMAP::unlog(6401,186357
void TC_LOG_MMAP::close(6422,187002
int TC_LOG_MMAP::recover(6453,187774
TC_LOG *tc_log;tc_log6506,189120
TC_LOG_DUMMY tc_log_dummy;6507,189136
TC_LOG_MMAP  tc_log_mmap;6508,189163
int TC_LOG::using_heuristic_recover(6523,189506
#define TC_LOG_BINLOG 6536,189899
int TC_LOG_BINLOG::open(6546,190146
void TC_LOG_BINLOG::close(6633,192177
int TC_LOG_BINLOG::log_xid(6649,192405
int TC_LOG_BINLOG::unlog(6665,192928
int TC_LOG_BINLOG::recover(6681,193453
const char* mysql_bin_log_file_name(6734,194880
ulonglong mysql_bin_log_file_pos(6743,195087
struct st_mysql_storage_engine binlog_storage_engine=6750,195236
mysql_declare_plugin(6753,195331
mysql_declare_plugin_end;6769,195900

sql/log_event.cc,12627
#define log_cs	56,1817
#define FLAGSTR(58,1852
#define FMT_G_BUFSIZE(67,2052
static const char *HA_ERR(HA_ERR89,2855
static void inline slave_rows_error_report(164,6708
class Write_on_release_cache209,8407
  enum flagWrite_on_release_cache::flag212,8446
    FLUSH_FWrite_on_release_cache::flag::FLUSH_F214,8462
  typedef unsigned short flag_set;Write_on_release_cache::flag_set217,8480
  Write_on_release_cache(Write_on_release_cache::Write_on_release_cache238,9065
  ~Write_on_release_cache(Write_on_release_cache::~Write_on_release_cache244,9259
  IO_CACHE *operator&(Write_on_release_cache::operator&266,9733
  IO_CACHE *m_cache;Write_on_release_cache::m_cache275,9884
  FILE *m_file;Write_on_release_cache::m_file276,9905
  flag_set m_flags;Write_on_release_cache::m_flags277,9921
uint debug_not_change_ts_if_art_event=281,9962
static void pretty_print_str(289,10084
static void clear_all_errors(315,10808
inline int idempotent_error_code(322,10944
inline int ignored_error_code(368,11997
int convert_handler_error(396,12730
inline bool concurrency_error_code(414,13272
inline bool unexpected_error_code(427,13476
static char *pretty_print_str(pretty_print_str446,13797
static char *slave_load_file_stem(slave_load_file_stem487,14815
static void cleanup_load_tmpdir(512,15509
static bool write_str(554,16493
static inline int read_str(567,16731
char *str_to_hex(str_to_hex583,17072
append_query_string(605,17533
static void print_set_option(654,18646
const char* Log_event::get_type_str(677,19293
const char* Log_event::get_type_str(710,20628
Log_event::Log_event(721,20765
Log_event::Log_event(741,21438
Log_event::Log_event(760,21772
int Log_event::do_update_pos(831,24468
Log_event::do_shall_skip(877,26183
void Log_event::pack_info(899,26866
int Log_event::net_send(908,27001
void Log_event::init_show_field_list(934,27718
bool Log_event::write_header(953,28368
int Log_event::read_log_event(1031,31201
#define UNLOCK_MUTEX 1104,33504
#define LOCK_MUTEX 1105,33569
#define UNLOCK_MUTEX1107,33636
#define LOCK_MUTEX1108,33657
Log_event* Log_event::read_log_event(1116,33783
Log_event* Log_event::read_log_event(1218,36987
void Log_event::print_header(1404,43691
my_b_write_quoted(1517,47634
my_b_write_bit(1544,48240
my_b_write_quoted_with_length(1569,48948
my_b_write_sint32_and_uint32(1594,49480
log_event_print_value(1616,50077
Rows_log_event::print_verbose_one_row(1913,58245
void Rows_log_event::print_verbose(1980,59995
void free_table_map_log_event(2063,62722
void Log_event::print_base64(2069,62808
void Log_event::print_timestamp(2144,64793
Log_event::continue_group(2172,65445
void Query_log_event::pack_info(2195,66166
static void write_str_with_code_and_len(2220,66796
bool Query_log_event::write(2245,67360
Query_log_event::Query_log_event(2475,75560
Query_log_event::Query_log_event(2497,76214
get_str_len_and_pointer(2672,83533
static void copy_str_and_move(2691,84079
code_name(2704,84352
#define CHECK_SPACE(2732,85285
Query_log_event::Query_log_event(2747,85893
void Query_log_event::print_query_header(3035,96305
void Query_log_event::print(3209,103015
int Query_log_event::do_apply_event(3232,103683
int Query_log_event::do_apply_event(3255,104406
int Query_log_event::do_update_pos(3646,121172
Query_log_event::do_shall_skip(3664,121582
Start_log_event_v3::Start_log_event_v3(3695,122418
void Start_log_event_v3::pack_info(3708,122714
void Start_log_event_v3::print(3725,123106
Start_log_event_v3::Start_log_event_v3(3776,124855
bool Start_log_event_v3::write(3797,125478
int Start_log_event_v3::do_apply_event(3831,126615
Format_description_log_event(3912,129240
Format_description_log_event(4065,136245
bool Format_description_log_event::write(4193,141538
int Format_description_log_event::do_apply_event(4214,142318
int Format_description_log_event::do_update_pos(4270,144537
Format_description_log_event::do_shall_skip(4297,145442
void Format_description_log_event::calc_server_version_split(4313,145871
uint Load_log_event::get_query_buffer_length(4367,147902
void Load_log_event::print_query(4387,148859
void Load_log_event::pack_info(4491,151572
bool Load_log_event::write_data_header(4510,151976
bool Load_log_event::write_data_body(4527,152472
Load_log_event::Load_log_event(4547,152986
Load_log_event::Load_log_event(4639,155899
int Load_log_event::copy_log_event(4672,157060
void Load_log_event::print(4721,158833
void Load_log_event::print(4727,158950
void Load_log_event::set_fields(4847,162639
int Load_log_event::do_apply_event(4893,164230
void Rotate_log_event::pack_info(5169,174317
void Rotate_log_event::print(5187,174695
Rotate_log_event::Rotate_log_event(5211,175317
Rotate_log_event::Rotate_log_event(5233,176125
bool Rotate_log_event::write(5261,177178
int Rotate_log_event::do_update_pos(5287,177915
Rotate_log_event::do_shall_skip(5356,180458
void Intvar_log_event::pack_info(5384,181161
Intvar_log_event::Intvar_log_event(5399,181469
const char* Intvar_log_event::get_var_type_name(5415,181944
bool Intvar_log_event::write(5430,182221
void Intvar_log_event::print(5446,182521
int Intvar_log_event::do_apply_event(5485,183403
int Intvar_log_event::do_update_pos(5508,184006
Intvar_log_event::do_shall_skip(5516,184143
void Rand_log_event::pack_info(5537,184886
Rand_log_event::Rand_log_event(5549,185194
bool Rand_log_event::write(5562,185656
void Rand_log_event::print(5574,185936
int Rand_log_event::do_apply_event(5593,186565
int Rand_log_event::do_update_pos(5609,186970
Rand_log_event::do_shall_skip(5617,187105
bool slave_execute_deferred_events(5638,187803
void Xid_log_event::pack_info(5661,188408
Xid_log_event(5681,188902
bool Xid_log_event::write(5693,189285
void Xid_log_event::print(5703,189514
int Xid_log_event::do_apply_event(5722,190074
Xid_log_event::do_shall_skip(5740,190588
void User_var_log_event::pack_info(5757,191136
User_var_log_event(5841,193706
bool User_var_log_event::write(5932,196396
void User_var_log_event::print(6002,198191
int User_var_log_event::do_apply_event(6115,201996
int User_var_log_event::do_update_pos(6203,204255
User_var_log_event::do_shall_skip(6210,204393
void Unknown_log_event::print(6231,205146
void Slave_log_event::pack_info(6243,205486
Slave_log_event::Slave_log_event(6264,206060
Slave_log_event::~Slave_log_event(6300,207372
void Slave_log_event::print(6307,207455
int Slave_log_event::get_data_size(6322,207925
bool Slave_log_event::write(6329,208060
void Slave_log_event::init_from_mem_pool(6342,208424
Slave_log_event::Slave_log_event(6362,209064
int Slave_log_event::do_apply_event(6379,209629
void Stop_log_event::print(6397,210036
int Stop_log_event::do_update_pos(6423,210979
Create_file_log_event(6456,211895
bool Create_file_log_event::write_data_body(6479,212686
bool Create_file_log_event::write_data_header(6493,213009
bool Create_file_log_event::write_base(6508,213367
Create_file_log_event::Create_file_log_event(6523,213630
void Create_file_log_event::print(6579,215821
void Create_file_log_event::print(6613,216835
void Create_file_log_event::pack_info(6625,217085
int Create_file_log_event::do_apply_event(6653,217904
Append_block_log_event::Append_block_log_event(6736,220585
Append_block_log_event::Append_block_log_event(6752,220978
bool Append_block_log_event::write(6775,221789
void Append_block_log_event::print(6791,222189
void Append_block_log_event::pack_info(6810,222691
int Append_block_log_event::get_create_or_append(6824,223006
int Append_block_log_event::do_apply_event(6833,223175
Delete_file_log_event::Delete_file_log_event(6907,225434
Delete_file_log_event::Delete_file_log_event(6918,225666
bool Delete_file_log_event::write(6935,226250
void Delete_file_log_event::print(6950,226552
void Delete_file_log_event::pack_info(6967,227002
int Delete_file_log_event::do_apply_event(6981,227331
Execute_load_log_event::Execute_load_log_event(7002,227983
Execute_load_log_event::Execute_load_log_event(7015,228270
bool Execute_load_log_event::write(7032,228852
void Execute_load_log_event::print(7047,229159
void Execute_load_log_event::pack_info(7065,229605
int Execute_load_log_event::do_apply_event(7078,229874
Begin_load_query_log_event(7172,232808
Begin_load_query_log_event(7183,233162
int Begin_load_query_log_event::get_create_or_append(7191,233402
Begin_load_query_log_event::do_shall_skip(7200,233653
Execute_load_query_log_event(7218,234107
Execute_load_query_log_event(7234,234796
ulong Execute_load_query_log_event::get_post_header_size_for_derived(7256,235490
Execute_load_query_log_event::write_post_header_for_derived(7264,235639
void Execute_load_query_log_event::print(7277,236017
void Execute_load_query_log_event::print(7286,236262
void Execute_load_query_log_event::pack_info(7326,237616
Execute_load_query_log_event::do_apply_event(7360,238551
bool sql_ex_info::write_data(7428,240357
const char *sql_ex_info::init(sql_ex_info::init7462,241288
Rows_log_event::Rows_log_event(7514,243053
Rows_log_event::Rows_log_event(7560,244675
Rows_log_event::~Rows_log_event(7674,248556
int Rows_log_event::get_data_size(7682,248785
int Rows_log_event::do_add_row_data(7706,249497
int Rows_log_event::do_apply_event(7764,251374
Rows_log_event::do_shall_skip(8135,264808
static int rows_event_stmt_cleanup(8159,265622
Rows_log_event::do_update_pos(8229,268203
bool Rows_log_event::write_data_header(8264,269157
bool Rows_log_event::write_data_body(8279,269736
void Rows_log_event::pack_info(8316,271004
void Rows_log_event::print_helper(8328,271354
int Table_map_log_event::save_field_metadata(8413,275488
Table_map_log_event::Table_map_log_event(8432,276099
Table_map_log_event::Table_map_log_event(8523,279304
Table_map_log_event::~Table_map_log_event(8631,283484
enum enum_tbl_map_status8650,283968
  OK_TO_PROCESS=enum_tbl_map_status::OK_TO_PROCESS8653,284033
  FILTERED_OUT=enum_tbl_map_status::FILTERED_OUT8656,284098
  SAME_ID_MAPPING_DIFFERENT_TABLE=enum_tbl_map_status::SAME_ID_MAPPING_DIFFERENT_TABLE8659,284177
  SAME_ID_MAPPING_SAME_TABLE=enum_tbl_map_status::SAME_ID_MAPPING_SAME_TABLE8662,284282
check_table_map(8705,286026
int Table_map_log_event::do_apply_event(8740,287086
Table_map_log_event::do_shall_skip(8845,290905
int Table_map_log_event::do_update_pos(8854,291100
bool Table_map_log_event::write_data_header(8863,291298
bool Table_map_log_event::write_data_body(8878,291862
void Table_map_log_event::pack_info(8919,293350
void Table_map_log_event::print(8934,293685
Write_rows_log_event::Write_rows_log_event(8955,294418
Write_rows_log_event::Write_rows_log_event(8968,294861
Write_rows_log_event::do_before_row_operations(8978,295221
Write_rows_log_event::do_after_row_operations(9065,298771
last_uniq_key(9097,299756
is_duplicate_key_error(9119,300365
Rows_log_event::write_row(9166,302098
Write_rows_log_event::do_exec_row(9364,308755
void Write_rows_log_event::print(9381,309140
static bool record_compare(9397,309637
void issue_long_find_row_warning(9527,313330
int Rows_log_event::find_row(9586,316042
Delete_rows_log_event::Delete_rows_log_event(9902,325887
Delete_rows_log_event::Delete_rows_log_event(9914,326318
Delete_rows_log_event::do_before_row_operations(9925,326688
Delete_rows_log_event::do_after_row_operations(9953,327394
int Delete_rows_log_event::do_exec_row(9964,327741
void Delete_rows_log_event::print(9982,328134
Update_rows_log_event::Update_rows_log_event(9998,328629
Update_rows_log_event::Update_rows_log_event(10008,329059
void Update_rows_log_event::init(10017,329409
Update_rows_log_event::~Update_rows_log_event(10036,329967
Update_rows_log_event::Update_rows_log_event(10048,330298
Update_rows_log_event::do_before_row_operations(10060,330713
Update_rows_log_event::do_after_row_operations(10082,331241
Update_rows_log_event::do_exec_row(10094,331618
void Update_rows_log_event::print(10152,333148
Incident_log_event::Incident_log_event(10160,333320
Incident_log_event::~Incident_log_event(10196,334744
Incident_log_event::description(10202,334805
void Incident_log_event::pack_info(10216,335089
Incident_log_event::print(10233,335525
Incident_log_event::do_apply_event(10247,335972
Incident_log_event::write_data_header(10259,336297
Incident_log_event::write_data_body(10269,336593
st_print_event_info::st_print_event_info(10282,336991
Heartbeat_log_event::Heartbeat_log_event(10308,337917
size_t my_strmov_quoted_identifier(10331,338697
size_t my_strmov_quoted_identifier(10339,339026
size_t my_strmov_quoted_identifier_helper(10347,339198

sql/log_event_old.cc,2699
Old_rows_log_event::do_apply_event(39,1510
last_uniq_key(298,10922
static bool record_compare(312,11166
copy_extra_record_fields(415,13879
replace_record(516,17285
static int find_and_fetch_row(678,22755
int Write_rows_log_event_old::do_before_row_operations(892,29705
int Write_rows_log_event_old::do_after_row_operations(954,32124
Write_rows_log_event_old::do_prepare_row(974,32626
int Write_rows_log_event_old::do_exec_row(993,33344
int Delete_rows_log_event_old::do_before_row_operations(1005,33700
int Delete_rows_log_event_old::do_after_row_operations(1043,34668
Delete_rows_log_event_old::do_prepare_row(1057,35020
int Delete_rows_log_event_old::do_exec_row(1090,36095
int Update_rows_log_event_old::do_before_row_operations(1112,36682
int Update_rows_log_event_old::do_after_row_operations(1142,37439
int Update_rows_log_event_old::do_prepare_row(1155,37762
int Update_rows_log_event_old::do_exec_row(1199,39379
Old_rows_log_event::Old_rows_log_event(1244,40939
Old_rows_log_event::Old_rows_log_event(1296,42677
Old_rows_log_event::~Old_rows_log_event(1385,45815
int Old_rows_log_event::get_data_size(1394,46053
int Old_rows_log_event::do_add_row_data(1412,46564
int Old_rows_log_event::do_apply_event(1471,48450
Old_rows_log_event::do_shall_skip(1839,61730
Old_rows_log_event::do_update_pos(1853,62157
bool Old_rows_log_event::write_data_header(1889,63121
bool Old_rows_log_event::write_data_body(1909,63760
void Old_rows_log_event::pack_info(1941,64725
void Old_rows_log_event::print_helper(1954,65080
Old_rows_log_event::write_row(2016,67522
int Old_rows_log_event::find_row(2232,75122
Write_rows_log_event_old::Write_rows_log_event_old(2524,84369
Write_rows_log_event_old::Write_rows_log_event_old(2543,84960
Write_rows_log_event_old::do_before_row_operations(2556,85428
Write_rows_log_event_old::do_after_row_operations(2619,87885
Write_rows_log_event_old::do_exec_row(2640,88469
void Write_rows_log_event_old::print(2655,88811
Delete_rows_log_event_old::Delete_rows_log_event_old(2672,89314
Delete_rows_log_event_old::Delete_rows_log_event_old(2692,89981
Delete_rows_log_event_old::do_before_row_operations(2707,90504
Delete_rows_log_event_old::do_after_row_operations(2730,91053
int Delete_rows_log_event_old::do_exec_row(2742,91408
void Delete_rows_log_event_old::print(2761,91806
Update_rows_log_event_old::Update_rows_log_event_old(2777,92317
Update_rows_log_event_old::Update_rows_log_event_old(2796,92979
Update_rows_log_event_old::do_before_row_operations(2812,93555
Update_rows_log_event_old::do_after_row_operations(2829,93927
Update_rows_log_event_old::do_exec_row(2842,94312
void Update_rows_log_event_old::print(2899,95818

sql/main.cc,17
int main(23,881

sql/mdl.cc,8756
static PSI_mutex_key key_MDL_map_mutex;25,920
static PSI_mutex_key key_MDL_wait_LOCK_wait_status;26,960
static PSI_mutex_info all_mdl_mutexes[all_mdl_mutexes28,1013
static PSI_rwlock_key key_MDL_lock_rwlock;34,1189
static PSI_rwlock_key key_MDL_context_LOCK_waiting_for;35,1232
static PSI_rwlock_info all_mdl_rwlocks[all_mdl_rwlocks37,1289
static PSI_cond_key key_MDL_wait_COND_wait_status;43,1462
static PSI_cond_info all_mdl_conds[all_mdl_conds45,1514
static void init_mdl_psi_keys(54,1729
const char *MDL_key::m_namespace_to_wait_state_name[MDL_key::m_namespace_to_wait_state_name79,2318
static bool mdl_initialized=91,2700
class MDL_map104,2943
  HASH m_locks;MDL_map::m_locks115,3193
  mysql_mutex_t m_mutex;MDL_map::m_mutex117,3250
  typedef I_P_List<MDL_object_lock,MDL_map::MDL_object_lock133,3883
  typedef I_P_List<MDL_object_lock, MDL_object_lock_cache_adapter,MDL_map::MDL_object_lock_cache_adapter133,3883
          Lock_cache;MDL_map::Lock_cache135,3987
  Lock_cache m_unused_locks_cache;MDL_map::m_unused_locks_cache136,4009
  MDL_lock *m_global_lock;MDL_map::m_global_lock138,4105
  MDL_lock *m_commit_lock;MDL_map::m_commit_lock140,4193
class Deadlock_detection_visitor:Deadlock_detection_visitor149,4335
  Deadlock_detection_visitor(Deadlock_detection_visitor::Deadlock_detection_visitor152,4413
  MDL_context *get_victim(Deadlock_detection_visitor::get_victim163,4739
  MDL_context *m_start_node;Deadlock_detection_visitor::m_start_node175,5092
  MDL_context *m_victim;Deadlock_detection_visitor::m_victim177,5194
  uint m_current_search_depth;Deadlock_detection_visitor::m_current_search_depth184,5476
  bool m_found_deadlock;Deadlock_detection_visitor::m_found_deadlock186,5545
  static const uint MAX_SEARCH_DEPTH=Deadlock_detection_visitor::MAX_SEARCH_DEPTH200,6066
bool Deadlock_detection_visitor::enter_node(216,6448
void Deadlock_detection_visitor::leave_node(236,6915
bool Deadlock_detection_visitor::inspect_edge(251,7211
Deadlock_detection_visitor::opt_change_victim_to(267,7540
#define MDL_BIT(287,8036
class MDL_lock300,8484
  typedef uchar bitmap_t;MDL_lock::bitmap_t303,8509
  class Ticket_listMDL_lock::Ticket_list305,8536
    typedef I_P_List<MDL_ticket,MDL_lock::Ticket_list::MDL_ticket308,8570
                     I_P_List_adapter<MDL_lock::Ticket_list::I_P_List_adapter309,8603
                     I_P_List_null_counter,MDL_lock::Ticket_list::I_P_List_null_counter312,8784
            List;MDL_lock::Ticket_list::List314,8887
    operator const MDL_lock::Ticket_list::operator const315,8905
    Ticket_list(MDL_lock::Ticket_list::Ticket_list316,8958
    bool is_empty(MDL_lock::Ticket_list::is_empty320,9078
    bitmap_t bitmap(MDL_lock::Ticket_list::bitmap321,9134
    List m_list;MDL_lock::Ticket_list::m_list326,9288
    bitmap_t m_bitmap;MDL_lock::Ticket_list::m_bitmap328,9357
  typedef Ticket_list::List::Iterator Ticket_iterator;MDL_lock::Ticket_iterator331,9386
  MDL_key key;MDL_lock::key335,9505
  mysql_prlock_t m_rwlock;MDL_lock::m_rwlock369,10919
  bool is_empty(MDL_lock::is_empty371,10947
  Ticket_list m_granted;MDL_lock::m_granted399,11878
  Ticket_list m_waiting;MDL_lock::m_waiting401,11960
  ulong m_hog_lock_count;MDL_lock::m_hog_lock_count407,12114
  MDL_lock(MDL_lock::MDL_lock411,12150
  virtual ~MDL_lock(MDL_lock::~MDL_lock422,12378
  uint m_ref_usage;MDL_lock::m_ref_usage449,13602
  uint m_ref_release;MDL_lock::m_ref_release450,13622
  bool m_is_destroyed;MDL_lock::m_is_destroyed451,13644
  ulonglong m_version;MDL_lock::m_version467,14570
class MDL_scoped_lock 477,14765
  MDL_scoped_lock(MDL_scoped_lock::MDL_scoped_lock480,14815
  virtual const bitmap_t *incompatible_granted_types_bitmap(MDL_scoped_lock::incompatible_granted_types_bitmap484,14888
  virtual const bitmap_t *incompatible_waiting_types_bitmap(MDL_scoped_lock::incompatible_waiting_types_bitmap488,14999
  virtual bool needs_notification(MDL_scoped_lock::needs_notification492,15110
  virtual bitmap_t hog_lock_types_bitmap(MDL_scoped_lock::hog_lock_types_bitmap502,15453
  static const bitmap_t m_granted_incompatible[MDL_scoped_lock::m_granted_incompatible508,15534
  static const bitmap_t m_waiting_incompatible[MDL_scoped_lock::m_waiting_incompatible509,15596
class MDL_object_lock 518,15793
  MDL_object_lock(MDL_object_lock::MDL_object_lock521,15843
  void reset(MDL_object_lock::reset529,16025
  virtual const bitmap_t *incompatible_granted_types_bitmap(MDL_object_lock::incompatible_granted_types_bitmap545,16625
  virtual const bitmap_t *incompatible_waiting_types_bitmap(MDL_object_lock::incompatible_waiting_types_bitmap549,16736
  virtual bool needs_notification(MDL_object_lock::needs_notification553,16847
  virtual bitmap_t hog_lock_types_bitmap(MDL_object_lock::hog_lock_types_bitmap564,17186
  static const bitmap_t m_granted_incompatible[MDL_object_lock::m_granted_incompatible572,17381
  static const bitmap_t m_waiting_incompatible[MDL_object_lock::m_waiting_incompatible573,17443
  MDL_object_lock *next_in_cache,MDL_object_lock::next_in_cache577,17587
  MDL_object_lock *next_in_cache, **prev_in_cache;MDL_object_lock::prev_in_cache577,17587
class MDL_object_lock_cache_adapter 584,17731
static MDL_map mdl_locks;591,17919
ulong mdl_locks_cache_size;595,18032
mdl_locks_key(601,18090
void mdl_init(622,18639
void mdl_destroy(642,18943
void MDL_map::init(654,19113
void MDL_map::destroy(672,19592
MDL_lock* MDL_map::find_or_insert(695,20133
bool MDL_map::move_from_hash_to_lock_mutex(796,23054
void MDL_map::remove(865,25260
MDL_context::MDL_context(946,28053
void MDL_context::destroy(967,28662
void MDL_request::init(997,29676
void MDL_request::init(1019,30302
inline MDL_lock *MDL_lock::create(MDL_lock::create1036,30724
void MDL_lock::destroy(1050,31009
MDL_ticket *MDL_ticket::create(MDL_ticket::create1064,31288
void MDL_ticket::destroy(1078,31623
uint MDL_ticket::get_deadlock_weight(1091,31875
MDL_wait::MDL_wait(1101,32120
MDL_wait::~MDL_wait(1111,32360
bool MDL_wait::set_status(1123,32564
MDL_wait::enum_wait_status MDL_wait::get_status(1140,32947
void MDL_wait::reset_status(1152,33206
MDL_wait::timed_wait(1174,33879
void MDL_lock::Ticket_list::clear_bit_if_not_in_list(1231,35703
void MDL_lock::Ticket_list::add_ticket(1248,36065
void MDL_lock::Ticket_list::remove_ticket(1270,36629
void MDL_lock::reschedule_waiters(1298,37657
const MDL_lock::bitmap_t MDL_scoped_lock::m_granted_incompatible[MDL_scoped_lock::m_granted_incompatible1470,44365
const MDL_lock::bitmap_t MDL_scoped_lock::m_waiting_incompatible[MDL_scoped_lock::m_waiting_incompatible1477,44658
MDL_object_lock::m_granted_incompatible[MDL_object_lock::m_granted_incompatible1532,46922
MDL_object_lock::m_waiting_incompatible[MDL_object_lock::m_waiting_incompatible1553,47720
MDL_lock::can_grant_lock(1584,48600
void MDL_lock::remove_ticket(1625,49896
bool MDL_lock::has_pending_conflicting_lock(1662,50998
MDL_wait_for_graph_visitor::~MDL_wait_for_graph_visitor(1675,51290
MDL_wait_for_subgraph::~MDL_wait_for_subgraph(1680,51354
bool MDL_ticket::has_stronger_or_equal_type(1693,51709
bool MDL_ticket::is_incompatible_when_granted(1702,51961
bool MDL_ticket::is_incompatible_when_waiting(1709,52129
MDL_context::find_ticket(1732,52859
MDL_context::try_acquire_lock(1785,54475
MDL_context::try_acquire_lock_impl(1826,55814
MDL_context::clone_ticket(1926,58735
void MDL_object_lock::notify_conflicting_locks(1966,59823
void MDL_scoped_lock::notify_conflicting_locks(1999,60793
MDL_context::acquire_lock(2038,62003
extern "C" int mdl_request_ptr_cmp(2157,65327
bool MDL_context::acquire_locks(2185,66110
MDL_context::upgrade_shared_lock_to_exclusive(2255,68161
bool MDL_lock::visit_subgraph(2317,70358
bool MDL_ticket::accept_visitor(2462,75412
bool MDL_context::visit_subgraph(2484,76140
void MDL_context::find_deadlock(2510,76760
void MDL_context::release_lock(2566,78386
void MDL_context::release_lock(2592,79000
void MDL_context::release_locks_stored_before(2613,79618
void MDL_context::release_all_locks_for_name(2641,80365
void MDL_ticket::downgrade_exclusive_lock(2665,80960
void MDL_ticket::downgrade_shared_lock(2688,81621
MDL_context::is_lock_owner(2734,83223
bool MDL_ticket::has_pending_conflicting_lock(2758,83937
void MDL_context::rollback_to_savepoint(2773,84396
void MDL_context::release_transactional_locks(2794,85063
void MDL_context::release_statement_locks(2803,85301
bool MDL_context::has_lock(2821,85813
void MDL_context::set_lock_duration(2854,86682
void MDL_context::set_explicit_duration_for_all_locks(2872,87133
void MDL_context::set_transaction_duration_for_all_locks(2912,88058

sql/mf_iocache.cc,28
int _my_b_net_read(51,1722

sql/my_decimal.cc,421
int decimal_operation_results(37,1092
int my_decimal2string(92,2718
str_set_decimal(147,4915
int my_decimal2binary(196,6310
int str2my_decimal(235,7255
my_decimal *date2my_decimal(date2my_decimal269,8166
void my_decimal_trim(286,8668
#define DIG_PER_DEC1 300,8868
#define ROUND_UP(301,8891
print_decimal(305,8974
print_decimal_buff(322,9439
const char *dbug_decimal_as_string(dbug_decimal_as_string334,9701

sql/mysqld.cc,30642
#define mysqld_charset 99,3578
#define HAVE_CLOSE_SERVER_SOCK 104,3810
#define __GNU_LIBRARY__	111,3959
typedef fp_except fp_except_t;166,5160
# define fpu_control_t 177,5463
# define _FPU_EXTENDED 178,5499
# define _FPU_DOUBLE 179,5528
#  define _FPU_GETCW(181,5628
#  define _FPU_SETCW(182,5694
#  define _FPU_GETCW(184,5767
#  define _FPU_SETCW(185,5800
inline void setup_fpu(192,5969
#define MYSQL_KILL_SIGNAL 248,7677
#define ENABLE_TEMP_POOL 259,7919
#define ENABLE_TEMP_POOL 261,7952
const char *show_comp_option_name[show_comp_option_name268,8078
static const char *tc_heuristic_recover_names[tc_heuristic_recover_names270,8143
static TYPELIB tc_heuristic_recover_typelib=274,8227
const char *first_keyword=first_keyword280,8364
const char *my_localhost=my_localhost281,8427
bool opt_large_files=283,8493
static my_bool opt_autocommit;284,8537
static my_bool opt_help=289,8656
arg_cmp_func Arg_comparator::comparator_matrix[Arg_comparator::comparator_matrix291,8701
static PSI_thread_key key_thread_handle_con_namedpipes;302,9250
static PSI_cond_key key_COND_handler_count;303,9306
static PSI_thread_key key_thread_handle_con_sharedmem;307,9458
static PSI_thread_key key_thread_handle_con_sockets;311,9632
static PSI_thread_key key_thread_handle_shutdown;315,9755
static PSI_rwlock_key key_rwlock_openssl;319,9878
volatile sig_atomic_t ld_assume_kernel_is_set=324,9977
static bool lower_case_table_names_used=328,10078
static bool max_long_data_size_used=329,10122
static bool volatile select_thread_in_use,330,10166
static bool volatile select_thread_in_use, signal_thread_in_use;330,10166
volatile bool ready_to_exit;332,10266
static my_bool opt_debugging=333,10295
static my_bool opt_short_log_format=334,10369
static uint kill_cached_threads,335,10409
static uint kill_cached_threads, wake_thread;335,10409
static ulong killed_threads;336,10455
       ulong max_used_connections;337,10484
static volatile ulong cached_thread_count=338,10519
static char *mysqld_user,mysqld_user339,10565
static char *mysqld_user, *mysqld_chroot;mysqld_chroot339,10565
static char *default_character_set_name;default_character_set_name340,10607
static char *character_set_filesystem_name;character_set_filesystem_name341,10648
static char *lc_messages;lc_messages342,10692
static char *lc_time_names_name;lc_time_names_name343,10718
static char *my_bind_addr_str;my_bind_addr_str344,10751
static char *default_collation_name;default_collation_name345,10782
char *default_storage_engine;default_storage_engine346,10819
static char compiled_default_collation_name[compiled_default_collation_name347,10849
static I_List<THD> thread_cache;348,10926
static bool binlog_format_used=349,10959
LEX_STRING opt_init_connect,351,10999
LEX_STRING opt_init_connect, opt_init_slave;351,10999
static mysql_cond_t COND_thread_cache,353,11045
static mysql_cond_t COND_thread_cache, COND_flush_thread_cache;353,11045
bool opt_bin_log,357,11134
bool opt_bin_log, opt_ignore_builtin_innodb=357,11134
my_bool opt_log,358,11182
my_bool opt_log, opt_slow_log;358,11182
ulonglong log_output_options;359,11213
my_bool opt_log_queries_not_using_indexes=360,11243
bool opt_error_log=361,11289
bool opt_disable_networking=362,11322
bool opt_skip_name_resolve=363,11373
my_bool opt_character_set_client_handshake=364,11403
bool server_id_supplied 365,11450
bool opt_endinfo,366,11479
bool opt_endinfo, using_udf_functions;366,11479
my_bool locked_in_memory;367,11518
bool opt_using_transactions;368,11544
bool volatile abort_loop;369,11573
bool volatile shutdown_in_progress;370,11599
ulong slow_start_timeout;372,11685
bool in_bootstrap=388,12358
bool volatile grant_option;396,12619
my_bool opt_skip_slave_start 398,12648
my_bool opt_reckless_slave 399,12720
my_bool opt_enable_named_pipe=400,12752
my_bool opt_local_infile,401,12786
my_bool opt_local_infile, opt_slave_compressed_protocol;401,12786
my_bool opt_safe_user_create 402,12843
my_bool opt_show_slave_auth_info;403,12877
my_bool opt_log_slave_updates=404,12911
char *opt_slave_skip_errors;opt_slave_skip_errors405,12945
my_bool old_mode;411,13080
handlerton *heap_hton;heap_hton416,13181
handlerton *myisam_hton;myisam_hton417,13204
handlerton *partition_hton;partition_hton418,13229
my_bool read_only=420,13258
my_bool use_temp_pool,421,13297
my_bool use_temp_pool, relay_log_purge;421,13297
my_bool relay_log_recovery;422,13337
my_bool opt_sync_frm,423,13365
my_bool opt_sync_frm, opt_allow_suspicious_udfs;423,13365
my_bool opt_secure_auth=424,13414
char* opt_secure_file_priv;425,13442
my_bool opt_log_slow_admin_statements=426,13470
my_bool opt_log_slow_slave_statements=427,13512
my_bool lower_case_file_system=428,13554
my_bool opt_large_pages=429,13589
my_bool opt_super_large_pages=430,13617
my_bool opt_myisam_use_mmap=431,13651
uint   opt_large_page_size=432,13683
MYSQL_PLUGIN_IMPORT uint    opt_debug_sync_timeout=434,13746
my_bool opt_old_style_user_limits=436,13842
volatile bool mqh_used 442,14091
my_bool opt_noacl;443,14119
my_bool sp_automatic_privileges=444,14138
ulong opt_binlog_rows_event_max_size;446,14175
const char *binlog_format_names[binlog_format_names447,14213
volatile sig_atomic_t calling_initgroups=449,14309
uint mysqld_port,451,14394
uint mysqld_port, test_flags,451,14394
uint mysqld_port, test_flags, select_errors,451,14394
uint mysqld_port, test_flags, select_errors, dropping_tables,451,14394
uint mysqld_port, test_flags, select_errors, dropping_tables, ha_open_options;451,14394
uint mysqld_port_timeout;452,14473
ulong delay_key_write_options;453,14499
uint protocol_version;454,14530
uint lower_case_table_names;455,14553
ulong tc_heuristic_recover=456,14582
uint volatile thread_count;457,14613
int32 thread_running;458,14641
ulong thread_created;459,14663
ulong back_log,460,14685
ulong back_log, connect_timeout,460,14685
ulong back_log, connect_timeout, concurrency,460,14685
ulong back_log, connect_timeout, concurrency, server_id;460,14685
ulong table_cache_size,461,14742
ulong table_cache_size, table_def_size;461,14742
ulong what_to_log;462,14782
ulong slow_launch_time,463,14801
ulong slow_launch_time, slave_open_temp_tables;463,14801
ulong open_files_limit,464,14849
ulong open_files_limit, max_binlog_size,464,14849
ulong open_files_limit, max_binlog_size, max_relay_log_size;464,14849
ulong slave_trans_retries;465,14910
uint  slave_net_timeout;466,14937
ulong slave_exec_mode_options;467,14962
ulonglong slave_type_conversions_options;468,14993
ulong thread_cache_size=469,15035
ulong binlog_cache_size=470,15062
ulonglong  max_binlog_cache_size=471,15089
ulong slave_max_allowed_packet=472,15125
ulong binlog_stmt_cache_size=473,15160
ulonglong  max_binlog_stmt_cache_size=474,15192
ulong query_cache_size=475,15233
ulong refresh_version;476,15259
query_id_t global_query_id;477,15315
my_atomic_rwlock_t global_query_id_lock;478,15343
my_atomic_rwlock_t thread_running_lock;479,15384
ulong aborted_threads,480,15424
ulong aborted_threads, aborted_connects;480,15424
ulong delayed_insert_timeout,481,15465
ulong delayed_insert_timeout, delayed_insert_limit,481,15465
ulong delayed_insert_timeout, delayed_insert_limit, delayed_queue_size;481,15465
ulong delayed_insert_threads,482,15537
ulong delayed_insert_threads, delayed_insert_writes,482,15537
ulong delayed_insert_threads, delayed_insert_writes, delayed_rows_in_use;482,15537
ulong delayed_insert_errors,483,15611
ulong delayed_insert_errors,flush_time;483,15611
ulong specialflag=484,15651
ulong binlog_cache_use=485,15672
ulong binlog_stmt_cache_use=486,15725
ulong max_connections,487,15788
ulong max_connections, max_connect_errors;487,15788
ulong max_long_data_size;492,15929
ulong max_prepared_stmt_count;497,16096
ulong prepared_stmt_count=508,16635
ulong thread_id=509,16664
ulong slow_launch_threads 510,16696
uint sync_binlog_period=511,16727
ulong expire_logs_days 513,16841
ulong rpl_recovery_rank=514,16869
ulong stored_program_cache_size=519,17009
const double log_10[log_10521,17046
time_t server_start_time,555,19300
time_t server_start_time, flush_status_time;555,19300
char mysql_home[mysql_home557,19346
char mysql_home[FN_REFLEN], pidfile_name[pidfile_name557,19346
char mysql_home[FN_REFLEN], pidfile_name[FN_REFLEN], system_time_zone[system_time_zone557,19346
char default_logfile_name[default_logfile_name558,19421
char *default_tz_name;default_tz_name559,19459
char log_error_file[log_error_file560,19482
char log_error_file[FN_REFLEN], glob_hostname[glob_hostname560,19482
char mysql_real_data_home[mysql_real_data_home561,19540
     lc_messages_dir[lc_messages_dir562,19578
     lc_messages_dir[FN_REFLEN], reg_ext[reg_ext562,19578
     mysql_charsets_dir[mysql_charsets_dir563,19631
     *opt_init_file,opt_init_file564,19667
     *opt_init_file, *opt_tc_log_file;opt_tc_log_file564,19667
char *lc_messages_dir_ptr,lc_messages_dir_ptr565,19706
char *lc_messages_dir_ptr, *log_error_file_ptr;log_error_file_ptr565,19706
char mysql_unpacked_real_data_home[mysql_unpacked_real_data_home566,19754
int mysql_unpacked_real_data_home_len;567,19801
uint mysql_real_data_home_len,568,19840
uint mysql_real_data_home_len, mysql_data_home_len=568,19840
uint reg_ext_length;569,19895
DATE_TIME_FORMAT global_date_format,573,20026
DATE_TIME_FORMAT global_date_format, global_datetime_format,573,20026
DATE_TIME_FORMAT global_date_format, global_datetime_format, global_time_format;573,20026
Time_zone *default_tz;default_tz574,20107
char *mysql_data_home=mysql_data_home576,20131
const char *mysql_real_data_home_ptr=mysql_real_data_home_ptr577,20178
char server_version[server_version578,20238
char *mysqld_unix_port,mysqld_unix_port579,20282
char *mysqld_unix_port, *opt_mysql_tmpdir;opt_mysql_tmpdir579,20282
ulong thread_handling;580,20325
const char *in_left_expr_name=in_left_expr_name583,20418
const char *in_additional_cond=in_additional_cond585,20500
const char *in_having_cond=in_having_cond586,20545
my_decimal decimal_zero;588,20589
Eq_creator eq_creator;590,20663
Ne_creator ne_creator;591,20686
Gt_creator gt_creator;592,20709
Lt_creator lt_creator;593,20732
Ge_creator ge_creator;594,20755
Le_creator le_creator;595,20778
MYSQL_FILE *bootstrap_file;bootstrap_file597,20802
int bootstrap_error;598,20830
I_List<THD> threads;600,20852
Rpl_filter* rpl_filter;601,20873
Rpl_filter* binlog_filter;602,20897
THD *first_global_thread(first_global_thread604,20925
THD *next_global_thread(next_global_thread611,21025
struct system_variables global_system_variables;619,21176
struct system_variables max_system_variables;620,21225
struct system_status_var global_status_var;621,21271
MY_TMPDIR mysql_tmpdir_list;623,21316
MY_BITMAP temp_pool;624,21345
CHARSET_INFO *system_charset_info,system_charset_info626,21367
CHARSET_INFO *system_charset_info, *files_charset_info files_charset_info626,21367
CHARSET_INFO *national_charset_info,national_charset_info627,21424
CHARSET_INFO *national_charset_info, *table_alias_charset;table_alias_charset627,21424
CHARSET_INFO *character_set_filesystem;character_set_filesystem628,21483
CHARSET_INFO *error_message_charset_info;error_message_charset_info629,21523
MY_LOCALE *my_default_lc_messages;my_default_lc_messages631,21566
MY_LOCALE *my_default_lc_time_names;my_default_lc_time_names632,21601
SHOW_COMP_OPTION have_ssl,634,21639
SHOW_COMP_OPTION have_ssl, have_symlink,634,21639
SHOW_COMP_OPTION have_ssl, have_symlink, have_dlopen,634,21639
SHOW_COMP_OPTION have_ssl, have_symlink, have_dlopen, have_query_cache;634,21639
SHOW_COMP_OPTION have_geometry,635,21711
SHOW_COMP_OPTION have_geometry, have_rtree_keys;635,21711
SHOW_COMP_OPTION have_crypt,636,21760
SHOW_COMP_OPTION have_crypt, have_compress;636,21760
SHOW_COMP_OPTION have_profiling;637,21804
mysql_mutex_t LOCK_thread_count;643,21935
  LOCK_status,645,21982
  LOCK_status, LOCK_error_log,645,21982
  LOCK_status, LOCK_error_log, LOCK_uuid_generator,645,21982
  LOCK_delayed_insert,646,22034
  LOCK_delayed_insert, LOCK_delayed_status,646,22034
  LOCK_delayed_insert, LOCK_delayed_status, LOCK_delayed_create,646,22034
  LOCK_crypt,647,22099
  LOCK_global_system_variables,648,22113
  LOCK_user_conn,649,22145
  LOCK_user_conn, LOCK_slave_list,649,22145
  LOCK_user_conn, LOCK_slave_list, LOCK_active_mi,649,22145
  LOCK_connection_count,650,22196
  LOCK_connection_count, LOCK_error_messages;650,22196
mysql_mutex_t LOCK_prepared_stmt_count;658,22579
mysql_mutex_t LOCK_des_key_file;660,22639
mysql_rwlock_t LOCK_grant,662,22679
mysql_rwlock_t LOCK_grant, LOCK_sys_init_connect,662,22679
mysql_rwlock_t LOCK_grant, LOCK_sys_init_connect, LOCK_sys_init_slave;662,22679
mysql_rwlock_t LOCK_system_variables_hash;663,22750
mysql_cond_t COND_thread_count;664,22793
pthread_t signal_thread;665,22825
pthread_attr_t connection_attrib;666,22850
mysql_mutex_t LOCK_server_started;667,22884
mysql_cond_t COND_server_started;668,22919
int mysqld_server_started=670,22954
File_parser_dummy_hook file_parser_dummy_hook;672,22985
uint report_port=675,23106
ulong master_retry_count=676,23127
char *master_info_file;master_info_file677,23155
char *relay_log_info_file,relay_log_info_file678,23179
char *relay_log_info_file, *report_user,report_user678,23179
char *relay_log_info_file, *report_user, *report_password,report_password678,23179
char *relay_log_info_file, *report_user, *report_password, *report_host;report_host678,23179
char *opt_relay_logname opt_relay_logname679,23252
char *opt_logname,opt_logname680,23309
char *opt_logname, *opt_slow_logname,opt_slow_logname680,23309
char *opt_logname, *opt_slow_logname, *opt_bin_logname;opt_bin_logname680,23309
static volatile sig_atomic_t kill_in_progress;684,23390
static my_bool opt_bootstrap,687,23439
static my_bool opt_bootstrap, opt_myisam_log;687,23439
static int cleanup_done;688,23485
static ulong opt_specialflag;689,23510
static char *opt_update_logname,opt_update_logname690,23540
static char *opt_update_logname, *opt_binlog_index_name;opt_binlog_index_name690,23540
char *mysql_home_ptr,mysql_home_ptr691,23597
char *mysql_home_ptr, *pidfile_name_ptr;pidfile_name_ptr691,23597
static int defaults_argc;693,23707
static char **defaults_argv;defaults_argv702,24056
static int remaining_argc;704,24163
static char **remaining_argv;remaining_argv706,24272
int orig_argc;708,24303
char **orig_argv;orig_argv709,24318
class Buffered_log 722,24761
  ~Buffered_log(Buffered_log::~Buffered_log727,24868
  enum loglevel m_level;Buffered_log::m_level734,24950
  String m_message;Buffered_log::m_message736,25002
Buffered_log::Buffered_log(744,25135
void Buffered_log::print(753,25357
class Buffered_logs785,26348
  Buffered_logs(Buffered_logs::Buffered_logs788,26378
  ~Buffered_logs(Buffered_logs::~Buffered_logs791,26402
  MEM_ROOT m_root;Buffered_logs::m_root806,26769
  List<Buffered_log> m_list;Buffered_logs::m_list808,26828
void Buffered_logs::init(811,26861
void Buffered_logs::cleanup(816,26930
void Buffered_logs::buffer(825,27065
void Buffered_logs::print(841,27528
static Buffered_logs buffered_logs;850,27720
static void buffered_option_error_reporter(859,27937
static my_socket unix_sock,874,28333
static my_socket unix_sock,ip_sock;874,28333
struct rand_struct sql_rand;875,28369
struct passwd *user_info;user_info878,28461
static pthread_t select_thread;879,28487
static uint thr_kill_signal;880,28519
#undef	 getpid886,28600
static mysql_cond_t COND_handler_count;889,28637
static uint handler_count;890,28677
static bool start_mode=891,28704
static int opt_argc;892,28744
static char **opt_argv;opt_argv893,28765
static HANDLE hEventShutdown;896,28821
static char shutdown_event_name[shutdown_event_name897,28851
static	 NTService  Service;899,28910
static char pipe_name[pipe_name904,29040
static SECURITY_ATTRIBUTES saPipeSecurity;905,29068
static SECURITY_DESCRIPTOR sdPipeDescriptor;906,29111
static HANDLE hPipe 907,29156
bool mysqld_embedded=911,29233
bool mysqld_embedded=913,29263
static my_bool plugins_are_initialized=916,29295
static const char* default_dbug_option;919,29360
const char *libwrapName=libwrapName922,29427
int allow_severity 923,29458
int deny_severity 924,29489
ulong query_cache_min_res_unit=927,29553
Query_cache query_cache;928,29619
char *shared_memory_base_name=shared_memory_base_name931,29668
my_bool opt_enable_shared_memory;932,29732
HANDLE smem_event_connect_request=933,29766
my_bool opt_use_ssl 936,29812
char *opt_ssl_ca=opt_ssl_ca937,29838
typedef struct CRYPTO_dynlock_value943,30022
  mysql_rwlock_t lock;CRYPTO_dynlock_value::lock945,30060
} openssl_lock_t;946,30083
static openssl_lock_t *openssl_stdlocks;openssl_stdlocks948,30102
char *des_key_file;des_key_file955,30466
struct st_VioSSLFd *ssl_acceptor_fd;ssl_acceptor_fd957,30511
uint connection_count=965,30690
static bool pid_file_created=996,31764
static void close_connections(1014,32357
static void close_server_sock(1195,37494
void kill_mysql(1222,38128
#define RETURN_FROM_KILL_SERVER 1283,39813
#define RETURN_FROM_KILL_SERVER 1286,39905
static void *kill_server(RETURN_FROM_KILL_SERVER1282,39773
pthread_handler_t kill_server_thread(1347,41550
extern "C" sig_handler print_signal_warning(1360,41804
static void init_error_log_mutex(1375,42218
static void clean_up_error_log_mutex(1381,42336
void unireg_end(1397,42718
extern "C" void unireg_abort(1409,42889
static void mysqld_exit(1422,43217
void clean_up(1445,43848
static void wait_for_signal_thread_to_end(1557,46727
static void clean_up_mutexes(1573,47120
static void set_ports(1618,48698
static struct passwd *check_user(check_user1657,49893
static void set_user(1721,51575
static void set_effective_user(1752,52399
static void set_root(1771,52810
static my_socket create_socket(1784,52990
static void network_init(1826,54165
void close_connection(2085,62474
extern "C" sig_handler end_thread_signal(2108,63001
void thd_cleanup(2129,63448
void dec_connection_count(2141,63577
void delete_thd(2157,63839
void unlink_thd(2175,64089
static bool cache_thread(2210,64897
bool one_thread_per_connection_end(2290,67300
void flush_thread_cache(2311,67990
extern "C" sig_handler abort_thread(2332,68471
static BOOL WINAPI console_event_handler(2361,69386
#define DEBUGGER_ATTACH_TIMEOUT 2389,70051
static void wait_for_debugger(2394,70201
LONG WINAPI my_unhandler_exception_filter(2418,70784
static void init_signals(2463,72218
static void start_signal_handler(2489,73193
static void check_data_home(2499,73370
extern "C" char *my_demangle(my_demangle2507,73486
#define SA_RESETHAND 2517,73675
#define SA_NODEFER 2520,73724
static void init_signals(2525,73779
static void start_signal_handler(2602,75904
pthread_handler_t signal_hand(2641,77081
static void check_data_home(2778,81448
void my_message_sql(2792,81736
void *my_str_malloc_mysqld(my_str_malloc_mysqld2841,83145
void my_str_free_mysqld(2847,83230
pthread_handler_t handle_shutdown(2856,83333
const char *load_default_groups[load_default_groups2871,83714
static const int load_default_groups_sz=2878,83911
check_enough_stack_size(2886,84057
static bool init_global_datetime_format(2908,84449
SHOW_VAR com_status_vars[com_status_vars2926,84918
static inline char *make_default_log_name(make_default_log_name3083,101196
static int init_common_variables(3088,101336
#define LARGE_PAGESIZE 3252,106844
#define SUPER_LARGE_PAGESIZE 3253,106892
#define FIX_LOG_VAR(3452,114421
static int init_thread_environment(3532,117190
static unsigned long openssl_id_function(3609,120790
static openssl_lock_t *openssl_dynlock_create(openssl_dynlock_create3615,120882
static void openssl_dynlock_destroy(3623,121076
static void openssl_lock_function(3631,121229
static void openssl_lock(3643,121536
static void init_ssl(3677,122301
static void end_ssl(3711,123151
static int init_server_components(3725,123384
static void create_shutdown_thread(4100,134960
static void handle_connections_methods(4118,135537
void decrement_handler_count(4175,137288
#define decrement_handler_count(4184,137491
static void test_lc_time_sz(4195,137793
int win_main(4227,138784
int mysql_service(4670,151048
static char *add_quoted_string(add_quoted_string4687,151315
default_service_handling(4713,151966
int mysqld_main(4769,153506
static void bootstrap(4883,157045
static bool read_init_file(4923,158115
void inc_thread_created(4940,158525
void handle_connection_in_main_thread(4957,158866
void create_thread_to_handle_connection(4972,159193
static void create_new_thread(5038,161385
inline void kill_broken_server(5087,162538
#define MAYBE_BROKEN_SYSCALL 5098,162875
#define MAYBE_BROKEN_SYSCALL5100,162932
void handle_connections_sockets(5107,163063
pthread_handler_t handle_connections_sockets_thread(5348,168797
pthread_handler_t handle_connections_namedpipes(5356,168958
pthread_handler_t handle_connections_shared_memory(5461,172191
DYNAMIC_ARRAY all_options;5697,180096
struct my_option my_long_options[my_long_options5705,180273
static int show_queries(6081,199213
static int show_net_compression(6089,199358
static int show_starttime(6096,199513
static int show_flushstatustime(6105,199730
static int show_rpl_status(6115,199959
static int show_slave_running(6122,200131
static int show_slave_retried_trans(6134,200537
static int show_slave_received_heartbeats(6155,201100
static int show_heartbeat_period(6172,201540
static int show_open_tables(6190,201898
static int show_prepared_stmt_count(6198,202071
static int show_table_definitions(6208,202347
static int show_ssl_ctx_sess_accept(6218,202619
static int show_ssl_ctx_sess_accept_good(6227,202869
static int show_ssl_ctx_sess_connect_good(6236,203129
static int show_ssl_ctx_sess_accept_renegotiate(6245,203391
static int show_ssl_ctx_sess_connect_renegotiate(6254,203665
static int show_ssl_ctx_sess_cb_hits(6263,203941
static int show_ssl_ctx_sess_hits(6272,204193
static int show_ssl_ctx_sess_cache_full(6281,204439
static int show_ssl_ctx_sess_misses(6290,204697
static int show_ssl_ctx_sess_timeouts(6299,204947
static int show_ssl_ctx_sess_number(6308,205201
static int show_ssl_ctx_sess_connect(6317,205451
static int show_ssl_ctx_sess_get_cache_size(6326,205703
static int show_ssl_ctx_get_verify_mode(6335,205969
static int show_ssl_ctx_get_verify_depth(6344,206227
static int show_ssl_ctx_get_session_cache_mode(6353,206487
static int show_ssl_get_version(6386,207647
static int show_ssl_session_reused(6396,207921
static int show_ssl_get_default_timeout(6407,208209
static int show_ssl_get_verify_mode(6418,208506
static int show_ssl_get_verify_depth(6429,208794
static int show_ssl_get_cipher(6440,209085
static int show_ssl_get_cipher_list(6450,209357
SHOW_VAR status_vars[status_vars6479,209949
bool add_terminator(6610,220079
static void print_version(6617,220297
static int option_cmp(6626,220545
static void print_help(6651,220971
static void usage(6669,221457
static int mysql_init_variables(6734,223726
mysqld_get_one_option(6922,229676
mysql_getopt_value(7188,237193
static void option_error_reporter(7221,238053
static int get_options(7247,238752
static void set_server_version(7430,244678
static char *get_relative_path(get_relative_path7446,245127
fn_format_relative_to_data_home(7468,245592
bool is_secure_file_path(7494,246218
static int fix_paths(7541,247472
static int test_if_case_insensitive(7640,250842
static void create_pid_file(7673,251873
static void delete_pid_file(7703,252604
void refresh_status(7730,253347
PSI_mutex_key key_PAGE_lock,7781,255012
PSI_mutex_key key_PAGE_lock, key_LOCK_sync,7781,255012
PSI_mutex_key key_PAGE_lock, key_LOCK_sync, key_LOCK_active,7781,255012
PSI_mutex_key key_PAGE_lock, key_LOCK_sync, key_LOCK_active, key_LOCK_pool;7781,255012
PSI_mutex_key key_LOCK_des_key_file;7785,255132
PSI_mutex_key key_BINLOG_LOCK_index,7788,255196
PSI_mutex_key key_BINLOG_LOCK_index, key_BINLOG_LOCK_prep_xids,7788,255196
  key_delayed_insert_mutex,7789,255260
  key_delayed_insert_mutex, key_hash_filo_lock,7789,255260
  key_delayed_insert_mutex, key_hash_filo_lock, key_LOCK_active_mi,7789,255260
  key_LOCK_connection_count,7790,255328
  key_LOCK_connection_count, key_LOCK_crypt,7790,255328
  key_LOCK_connection_count, key_LOCK_crypt, key_LOCK_delayed_create,7790,255328
  key_LOCK_delayed_insert,7791,255398
  key_LOCK_delayed_insert, key_LOCK_delayed_status,7791,255398
  key_LOCK_delayed_insert, key_LOCK_delayed_status, key_LOCK_error_log,7791,255398
  key_LOCK_gdl,7792,255470
  key_LOCK_gdl, key_LOCK_global_system_variables,7792,255470
  key_LOCK_manager,7793,255520
  key_LOCK_prepared_stmt_count,7794,255540
  key_LOCK_rpl_status,7795,255572
  key_LOCK_rpl_status, key_LOCK_server_started,7795,255572
  key_LOCK_rpl_status, key_LOCK_server_started, key_LOCK_status,7795,255572
  key_LOCK_system_variables_hash,7796,255637
  key_LOCK_system_variables_hash, key_LOCK_table_share,7796,255637
  key_LOCK_system_variables_hash, key_LOCK_table_share, key_LOCK_thd_data,7796,255637
  key_LOCK_user_conn,7797,255712
  key_LOCK_user_conn, key_LOCK_uuid_generator,7797,255712
  key_LOCK_user_conn, key_LOCK_uuid_generator, key_LOG_LOCK_log,7797,255712
  key_master_info_data_lock,7798,255777
  key_master_info_data_lock, key_master_info_run_lock,7798,255777
  key_master_info_sleep_lock,7799,255832
  key_mutex_slave_reporting_capability_err_lock,7800,255862
  key_mutex_slave_reporting_capability_err_lock, key_relay_log_info_data_lock,7800,255862
  key_relay_log_info_log_space_lock,7801,255941
  key_relay_log_info_log_space_lock, key_relay_log_info_run_lock,7801,255941
  key_relay_log_info_sleep_lock,7802,256007
  key_structure_guard_mutex,7803,256040
  key_structure_guard_mutex, key_TABLE_SHARE_LOCK_ha_data,7803,256040
  key_LOCK_error_messages,7804,256099
  key_LOCK_error_messages, key_LOG_INFO_lock,7804,256099
  key_LOCK_error_messages, key_LOG_INFO_lock, key_LOCK_thread_count,7804,256099
  key_PARTITION_LOCK_auto_inc;7805,256168
PSI_mutex_key key_RELAYLOG_LOCK_index;7806,256199
static PSI_mutex_info all_server_mutexes[all_server_mutexes7808,256239
PSI_rwlock_key key_rwlock_LOCK_grant,7862,259206
PSI_rwlock_key key_rwlock_LOCK_grant, key_rwlock_LOCK_logger,7862,259206
  key_rwlock_LOCK_sys_init_connect,7863,259268
  key_rwlock_LOCK_sys_init_connect, key_rwlock_LOCK_sys_init_slave,7863,259268
  key_rwlock_LOCK_system_variables_hash,7864,259336
  key_rwlock_LOCK_system_variables_hash, key_rwlock_query_cache_query_lock;7864,259336
static PSI_rwlock_info all_server_rwlocks[all_server_rwlocks7866,259413
PSI_cond_key key_PAGE_cond,7880,260036
PSI_cond_key key_PAGE_cond, key_COND_active,7880,260036
PSI_cond_key key_PAGE_cond, key_COND_active, key_COND_pool;7880,260036
PSI_cond_key key_BINLOG_COND_prep_xids,7883,260120
PSI_cond_key key_BINLOG_COND_prep_xids, key_BINLOG_update_cond,7883,260120
  key_COND_cache_status_changed,7884,260184
  key_COND_cache_status_changed, key_COND_manager,7884,260184
  key_COND_rpl_status,7885,260235
  key_COND_rpl_status, key_COND_server_started,7885,260235
  key_delayed_insert_cond,7886,260283
  key_delayed_insert_cond, key_delayed_insert_cond_client,7886,260283
  key_item_func_sleep_cond,7887,260342
  key_item_func_sleep_cond, key_master_info_data_cond,7887,260342
  key_master_info_start_cond,7888,260397
  key_master_info_start_cond, key_master_info_stop_cond,7888,260397
  key_master_info_sleep_cond,7889,260454
  key_relay_log_info_data_cond,7890,260484
  key_relay_log_info_data_cond, key_relay_log_info_log_space_cond,7890,260484
  key_relay_log_info_start_cond,7891,260551
  key_relay_log_info_start_cond, key_relay_log_info_stop_cond,7891,260551
  key_relay_log_info_sleep_cond,7892,260614
  key_TABLE_SHARE_cond,7893,260647
  key_TABLE_SHARE_cond, key_user_level_lock_cond,7893,260647
  key_COND_thread_count,7894,260697
  key_COND_thread_count, key_COND_thread_cache,7894,260697
  key_COND_thread_count, key_COND_thread_cache, key_COND_flush_thread_cache;7894,260697
PSI_cond_key key_RELAYLOG_update_cond;7895,260774
static PSI_cond_info all_server_conds[all_server_conds7897,260814
PSI_thread_key key_thread_bootstrap,7933,262832
PSI_thread_key key_thread_bootstrap, key_thread_delayed_insert,7933,262832
  key_thread_handle_manager,7934,262896
  key_thread_handle_manager, key_thread_main,7934,262896
  key_thread_one_connection,7935,262942
  key_thread_one_connection, key_thread_signal_hand;7935,262942
static PSI_thread_info all_server_threads[all_server_threads7937,262996
PSI_file_key key_file_map;7964,264078
PSI_file_key key_file_binlog,7967,264129
PSI_file_key key_file_binlog, key_file_binlog_index,7967,264129
PSI_file_key key_file_binlog, key_file_binlog_index, key_file_casetest,7967,264129
  key_file_dbopt,7968,264201
  key_file_dbopt, key_file_des_key_file,7968,264201
  key_file_dbopt, key_file_des_key_file, key_file_ERRMSG,7968,264201
  key_file_dbopt, key_file_des_key_file, key_file_ERRMSG, key_select_to_file,7968,264201
  key_file_fileparser,7969,264279
  key_file_fileparser, key_file_frm,7969,264279
  key_file_fileparser, key_file_frm, key_file_global_ddl_log,7969,264279
  key_file_fileparser, key_file_frm, key_file_global_ddl_log, key_file_load,7969,264279
  key_file_loadfile,7970,264356
  key_file_loadfile, key_file_log_event_data,7970,264356
  key_file_loadfile, key_file_log_event_data, key_file_log_event_info,7970,264356
  key_file_master_info,7971,264427
  key_file_master_info, key_file_misc,7971,264427
  key_file_master_info, key_file_misc, key_file_partition,7971,264427
  key_file_pid,7972,264486
  key_file_pid, key_file_relay_log_info,7972,264486
  key_file_pid, key_file_relay_log_info, key_file_send_file,7972,264486
  key_file_pid, key_file_relay_log_info, key_file_send_file, key_file_tclog,7972,264486
  key_file_trg,7973,264563
  key_file_trg, key_file_trn,7973,264563
  key_file_trg, key_file_trn, key_file_init;7973,264563
PSI_file_key key_file_query_log,7974,264608
PSI_file_key key_file_query_log, key_file_slow_log;7974,264608
PSI_file_key key_file_relaylog,7975,264660
PSI_file_key key_file_relaylog, key_file_relaylog_index;7975,264660
static PSI_file_info all_server_files[all_server_files7977,264718
void init_server_psi_keys(8016,266076

sql/net_serv.cc,907
#undef MYSQL_SERVER49,1550
#undef MYSQL_CLIENT50,1570
#define MYSQL_CLIENT51,1590
#define NO_ALARM67,2058
#define DONT_USE_THR_ALARM75,2183
#define USE_QUERY_CACHE90,2587
#define update_statistics(94,2752
#define update_statistics(99,2952
#define thd_increment_bytes_sent(100,2981
#define TEST_BLOCKING	103,3025
#define MAX_PACKET_LENGTH 104,3050
my_bool my_net_init(111,3200
void net_end(149,4220
my_bool net_realloc(160,4366
static int net_data_is_ready(217,5937
#define NET_DATA_IS_READY_CAN_RETURN_MINUS_ONE239,6386
void net_clear(274,7284
my_bool net_flush(331,8994
my_net_write(363,9828
net_write_command(436,11750
net_write_buff(510,13944
net_real_write(568,15451
static my_bool net_safe_read(715,19481
static my_bool my_net_skip_rest(752,20334
my_real_read(801,21608
my_net_read(1018,28272
void my_net_set_read_timeout(1163,32280
void my_net_set_write_timeout(1176,32557

sql/nt_servc.cc,811
static NTService *pService;pService17,289
NTService::NTService(22,474
NTService::~NTService(59,1423
BOOL NTService::GetOS(67,1657
long NTService::Init(89,2118
BOOL NTService::Install(118,2705
BOOL NTService::Remove(177,4265
void NTService::Stop(216,5149
void NTService::ServiceMain(229,5403
void NTService::SetRunning(276,6475
void NTService::SetSlowStarting(282,6586
BOOL NTService::StartService(293,6941
void NTService::StopService(305,7339
void NTService::PauseService(319,7696
void NTService::ResumeService(327,7936
BOOL NTService::SetStatus 335,8175
void NTService::ServiceCtrlHandler(374,9489
void NTService::Exit(403,10182
BOOL NTService::SeekStatus(421,10650
BOOL NTService::IsService(493,12753
BOOL NTService::got_service_option(511,13272
BOOL NTService::is_super_user(521,13636

sql/opt_range.cc,21233
#define test_rb_tree(80,3038
#define test_use_count(81,3067
#define double2rows(88,3219
static uchar is_null_string[is_null_string92,3333
class SEL_ARG 265,10143
  uint8 min_flag,SEL_ARG::min_flag268,10185
  uint8 min_flag,max_flag,SEL_ARG::max_flag268,10185
  uint8 min_flag,max_flag,maybe_flag;SEL_ARG::maybe_flag268,10185
  uint8 part;SEL_ARG::part269,10223
  uint8 maybe_null;SEL_ARG::maybe_null270,10259
  uint16 elements;SEL_ARG::elements275,10381
  ulong use_count;SEL_ARG::use_count281,10618
  Field *field;SEL_ARG::field283,10638
  uchar *min_value,SEL_ARG::min_value284,10654
  uchar *min_value,*max_value;SEL_ARG::max_value284,10654
  SEL_ARG *left,SEL_ARG::left289,10792
  SEL_ARG *left,*right;SEL_ARG::right289,10792
  SEL_ARG *next,SEL_ARG::next290,10842
  SEL_ARG *next,*prev;SEL_ARG::prev290,10842
  SEL_ARG *parent;SEL_ARG::parent291,10913
  SEL_ARG *next_key_part;SEL_ARG::next_key_part292,10961
  enum leaf_color SEL_ARG::leaf_color293,10988
  enum leaf_color { BLACK,SEL_ARG::leaf_color::BLACK293,10988
  enum leaf_color { BLACK,RED SEL_ARG::leaf_color::RED293,10988
  enum leaf_color { BLACK,RED } color;SEL_ARG::color293,10988
  enum Type SEL_ARG::Type294,11027
  enum Type { IMPOSSIBLE,SEL_ARG::Type::IMPOSSIBLE294,11027
  enum Type { IMPOSSIBLE, MAYBE,SEL_ARG::Type::MAYBE294,11027
  enum Type { IMPOSSIBLE, MAYBE, MAYBE_KEY,SEL_ARG::Type::MAYBE_KEY294,11027
  enum Type { IMPOSSIBLE, MAYBE, MAYBE_KEY, KEY_RANGE SEL_ARG::Type::KEY_RANGE294,11027
  enum Type { IMPOSSIBLE, MAYBE, MAYBE_KEY, KEY_RANGE } type;SEL_ARG::type294,11027
  enum { MAX_SEL_ARGS SEL_ARG::MAX_SEL_ARGS296,11090
  SEL_ARG(SEL_ARG::SEL_ARG298,11124
  SEL_ARG(SEL_ARG::SEL_ARG303,11336
  inline bool is_same(SEL_ARG::is_same307,11481
  inline void merge_flags(SEL_ARG::merge_flags315,11697
  inline void maybe_smaller(SEL_ARG::maybe_smaller316,11770
  inline bool is_null_interval(SEL_ARG::is_null_interval318,11876
  inline int cmp_min_to_min(SEL_ARG::cmp_min_to_min319,11954
  inline int cmp_min_to_max(SEL_ARG::cmp_min_to_max323,12082
  inline int cmp_max_to_max(SEL_ARG::cmp_max_to_max327,12210
  inline int cmp_max_to_min(SEL_ARG::cmp_max_to_min331,12338
  SEL_ARG *clone_and(SEL_ARG::clone_and335,12466
  SEL_ARG *clone_first(SEL_ARG::clone_first358,13072
  SEL_ARG *clone_last(SEL_ARG::clone_last364,13307
  bool copy_min(SEL_ARG::copy_min371,13587
  bool copy_max(SEL_ARG::copy_max383,13921
  void copy_min_to_min(SEL_ARG::copy_min_to_min396,14257
  void copy_min_to_max(SEL_ARG::copy_min_to_max400,14356
  void copy_max_to_min(SEL_ARG::copy_max_to_min405,14485
  int store_min(SEL_ARG::store_min411,14693
  int store_max(SEL_ARG::store_max430,15175
  int store_min_key(SEL_ARG::store_min_key457,15990
  int store_max_key(SEL_ARG::store_max_key479,16923
  inline bool simple_key(SEL_ARG::simple_key512,18191
  void increment_use_count(SEL_ARG::increment_use_count516,18270
  void free_tree(SEL_ARG::free_tree527,18569
  inline SEL_ARG **parent_ptr(SEL_ARG::parent_ptr537,18763
  bool is_singlepoint(SEL_ARG::is_singlepoint559,19269
class SEL_TREE 589,19898
  enum Type SEL_TREE::Type597,20095
  enum Type { IMPOSSIBLE,SEL_TREE::Type::IMPOSSIBLE597,20095
  enum Type { IMPOSSIBLE, ALWAYS,SEL_TREE::Type::ALWAYS597,20095
  enum Type { IMPOSSIBLE, ALWAYS, MAYBE,SEL_TREE::Type::MAYBE597,20095
  enum Type { IMPOSSIBLE, ALWAYS, MAYBE, KEY,SEL_TREE::Type::KEY597,20095
  enum Type { IMPOSSIBLE, ALWAYS, MAYBE, KEY, KEY_SMALLER SEL_TREE::Type::KEY_SMALLER597,20095
  enum Type { IMPOSSIBLE, ALWAYS, MAYBE, KEY, KEY_SMALLER } type;SEL_TREE::type597,20095
  SEL_TREE(SEL_TREE::SEL_TREE598,20161
  SEL_TREE(SEL_TREE::SEL_TREE599,20211
  SEL_ARG *keys[SEL_TREE::keys611,20627
  key_map keys_map;SEL_TREE::keys_map612,20653
  List<SEL_IMERGE> merges;SEL_TREE::merges618,20889
  key_map ror_scans_map;SEL_TREE::ror_scans_map621,20990
  uint    n_ror_scans;SEL_TREE::n_ror_scans622,21065
  struct st_ror_scan_info **ror_scans;SEL_TREE::ror_scans624,21135
  struct st_ror_scan_info **ror_scans_end;SEL_TREE::ror_scans_end625,21206
class RANGE_OPT_PARAM629,21349
  THD	*thd;RANGE_OPT_PARAM::thd632,21381
  TABLE *table;RANGE_OPT_PARAM::table633,21423
  COND *cond;RANGE_OPT_PARAM::cond634,21466
  table_map prev_tables;RANGE_OPT_PARAM::prev_tables635,21515
  table_map read_tables;RANGE_OPT_PARAM::read_tables636,21540
  table_map current_table;RANGE_OPT_PARAM::current_table637,21565
  KEY_PART *key_parts;RANGE_OPT_PARAM::key_parts640,21704
  KEY_PART *key_parts_end;RANGE_OPT_PARAM::key_parts_end641,21727
  MEM_ROOT *mem_root;RANGE_OPT_PARAM::mem_root642,21754
  MEM_ROOT *old_root;RANGE_OPT_PARAM::old_root643,21838
  uint keys;RANGE_OPT_PARAM::keys648,22027
  bool using_real_indexes;RANGE_OPT_PARAM::using_real_indexes655,22239
  bool remove_jump_scans;RANGE_OPT_PARAM::remove_jump_scans657,22269
  uint real_keynr[RANGE_OPT_PARAM::real_keynr663,22408
  uchar min_key[RANGE_OPT_PARAM::min_key669,22547
    max_key[RANGE_OPT_PARAM::max_key670,22596
  uint alloced_sel_args;RANGE_OPT_PARAM::alloced_sel_args673,22720
class PARAM 676,22750
  KEY_PART *key[PARAM::key679,22797
  longlong baseflag;PARAM::baseflag680,22871
  uint max_key_part,PARAM::max_key_part681,22892
  uint max_key_part, range_count;PARAM::range_count681,22892
  bool quick;PARAM::quick683,22927
  uint fields_bitmap_size;PARAM::fields_bitmap_size685,22977
  MY_BITMAP needed_fields;PARAM::needed_fields686,23004
  MY_BITMAP tmp_covered_fields;PARAM::tmp_covered_fields687,23078
  key_map *needed_reg;PARAM::needed_reg689,23111
  uint *imerge_cost_buff;PARAM::imerge_cost_buff691,23178
  uint imerge_cost_buff_size;PARAM::imerge_cost_buff_size692,23252
  bool is_ror_scan;PARAM::is_ror_scan695,23372
  uint n_ranges;PARAM::n_ranges697,23447
  uint8 first_null_comp;PARAM::first_null_comp698,23464
class SEL_IMERGE 789,27573
  enum { PREALLOCED_TREES=SEL_IMERGE::PREALLOCED_TREES791,27611
  SEL_TREE *trees_prealloced[SEL_IMERGE::trees_prealloced793,27651
  SEL_TREE **trees;SEL_IMERGE::trees794,27699
  SEL_TREE **trees_next;SEL_IMERGE::trees_next795,27768
  SEL_TREE **trees_end;SEL_IMERGE::trees_end796,27837
  SEL_ARG  ***best_keys;SEL_IMERGE::best_keys798,27907
  SEL_IMERGE(SEL_IMERGE::SEL_IMERGE800,27977
int SEL_IMERGE::or_sel_tree(824,28604
int SEL_IMERGE::or_sel_tree_with_checks(875,30166
int SEL_IMERGE::or_sel_imerge_with_checks(909,31001
SEL_TREE::SEL_TREE(922,31265
SEL_IMERGE::SEL_IMERGE 946,31793
inline void imerge_list_and_list(981,32552
int imerge_list_or_list(1010,33412
int imerge_list_or_tree(1030,33832
SQL_SELECT *make_select(make_select1068,34798
SQL_SELECT::SQL_SELECT(1102,35593
void SQL_SELECT::cleanup(1109,35726
SQL_SELECT::~SQL_SELECT(1123,35887
#undef index	1128,35931
QUICK_SELECT_I::QUICK_SELECT_I(1130,35971
QUICK_RANGE_SELECT::QUICK_RANGE_SELECT(1135,36056
int QUICK_RANGE_SELECT::init(1182,37488
void QUICK_RANGE_SELECT::range_end(1192,37643
QUICK_RANGE_SELECT::~QUICK_RANGE_SELECT(1199,37739
QUICK_INDEX_MERGE_SELECT::QUICK_INDEX_MERGE_SELECT(1229,38537
int QUICK_INDEX_MERGE_SELECT::init(1241,38962
int QUICK_INDEX_MERGE_SELECT::reset(1247,39070
QUICK_INDEX_MERGE_SELECT::push_quick_back(1255,39233
QUICK_INDEX_MERGE_SELECT::~QUICK_INDEX_MERGE_SELECT(1269,39641
QUICK_ROR_INTERSECT_SELECT::QUICK_ROR_INTERSECT_SELECT(1288,40197
int QUICK_ROR_INTERSECT_SELECT::init(1317,41068
int QUICK_RANGE_SELECT::init_ror_merged_scan(1347,41978
int QUICK_ROR_INTERSECT_SELECT::init_ror_merged_scan(1438,44532
int QUICK_ROR_INTERSECT_SELECT::reset(1485,45766
QUICK_ROR_INTERSECT_SELECT::push_quick_back(1515,46460
QUICK_ROR_INTERSECT_SELECT::~QUICK_ROR_INTERSECT_SELECT(1520,46577
QUICK_ROR_UNION_SELECT::QUICK_ROR_UNION_SELECT(1532,46894
static int QUICK_ROR_UNION_SELECT_queue_cmp(1558,47528
int QUICK_ROR_UNION_SELECT::init(1578,47971
int QUICK_ROR_UNION_SELECT::reset(1606,48548
QUICK_ROR_UNION_SELECT::push_quick_back(1653,49571
QUICK_ROR_UNION_SELECT::~QUICK_ROR_UNION_SELECT(1658,49700
QUICK_RANGE::QUICK_RANGE(1670,49984
SEL_ARG::SEL_ARG(1676,50148
inline void SEL_ARG::make_root(1692,50475
SEL_ARG::SEL_ARG(1700,50599
SEL_ARG::SEL_ARG(1710,50989
SEL_ARG *SEL_ARG::clone(SEL_ARG::clone1721,51453
SEL_ARG *SEL_ARG::first(SEL_ARG::first1764,52663
SEL_ARG *SEL_ARG::last(SEL_ARG::last1774,52864
static int sel_cmp(1790,53202
SEL_ARG *SEL_ARG::clone_tree(SEL_ARG::clone_tree1834,54466
class TABLE_READ_PLAN1852,54922
  double read_cost;TABLE_READ_PLAN::read_cost1859,55071
  ha_rows records;TABLE_READ_PLAN::records1860,55091
  bool is_ror;TABLE_READ_PLAN::is_ror1866,55277
  static void *operator new(TABLE_READ_PLAN::operator new1889,55997
  static void operator delete(TABLE_READ_PLAN::operator delete1891,56114
  static void operator delete(TABLE_READ_PLAN::operator delete1892,56189
  virtual ~TABLE_READ_PLAN(TABLE_READ_PLAN::~TABLE_READ_PLAN1893,56273
class TRP_RANGE 1909,56637
  SEL_ARG *key;TRP_RANGE::key1912,56688
  uint     key_idx;TRP_RANGE::key_idx1913,56766
  TRP_RANGE(TRP_RANGE::TRP_RANGE1915,56818
  virtual ~TRP_RANGE(TRP_RANGE::~TRP_RANGE1918,56903
  QUICK_SELECT_I *make_quick(TRP_RANGE::make_quick1920,56975
class TRP_ROR_INTERSECT 1937,57402
  TRP_ROR_INTERSECT(TRP_ROR_INTERSECT::TRP_ROR_INTERSECT1940,57461
  virtual ~TRP_ROR_INTERSECT(TRP_ROR_INTERSECT::~TRP_ROR_INTERSECT1941,57532
  struct st_ror_scan_info **first_scan;TRP_ROR_INTERSECT::first_scan1946,57797
  struct st_ror_scan_info **last_scan;TRP_ROR_INTERSECT::last_scan1947,57837
  struct st_ror_scan_info *cpk_scan;TRP_ROR_INTERSECT::cpk_scan1948,57905
  bool is_covering;TRP_ROR_INTERSECT::is_covering1949,57984
  double index_scan_costs;TRP_ROR_INTERSECT::index_scan_costs1950,58054
class TRP_ROR_UNION 1960,58264
  TRP_ROR_UNION(TRP_ROR_UNION::TRP_ROR_UNION1963,58319
  virtual ~TRP_ROR_UNION(TRP_ROR_UNION::~TRP_ROR_UNION1964,58390
  TABLE_READ_PLAN **first_ror;TRP_ROR_UNION::first_ror1967,58583
  TABLE_READ_PLAN **last_ror;TRP_ROR_UNION::last_ror1968,58660
class TRP_INDEX_MERGE 1978,58881
  TRP_INDEX_MERGE(TRP_INDEX_MERGE::TRP_INDEX_MERGE1981,58938
  virtual ~TRP_INDEX_MERGE(TRP_INDEX_MERGE::~TRP_INDEX_MERGE1982,59009
  TRP_RANGE **range_scans;TRP_INDEX_MERGE::range_scans1985,59202
  TRP_RANGE **range_scans_end;TRP_INDEX_MERGE::range_scans_end1986,59274
class TRP_GROUP_MIN_MAX 1994,59387
  bool have_min,TRP_GROUP_MIN_MAX::have_min1997,59447
  bool have_min, have_max,TRP_GROUP_MIN_MAX::have_max1997,59447
  bool have_min, have_max, have_agg_distinct;TRP_GROUP_MIN_MAX::have_agg_distinct1997,59447
  KEY_PART_INFO *min_max_arg_part;TRP_GROUP_MIN_MAX::min_max_arg_part1998,59493
  uint group_prefix_len;TRP_GROUP_MIN_MAX::group_prefix_len1999,59528
  uint used_key_parts;TRP_GROUP_MIN_MAX::used_key_parts2000,59553
  uint group_key_parts;TRP_GROUP_MIN_MAX::group_key_parts2001,59576
  KEY *index_info;TRP_GROUP_MIN_MAX::index_info2002,59600
  uint index;TRP_GROUP_MIN_MAX::index2003,59619
  uint key_infix_len;TRP_GROUP_MIN_MAX::key_infix_len2004,59633
  uchar key_infix[TRP_GROUP_MIN_MAX::key_infix2005,59655
  SEL_TREE *range_tree;TRP_GROUP_MIN_MAX::range_tree2006,59690
  SEL_ARG  *index_tree;TRP_GROUP_MIN_MAX::index_tree2007,59766
  uint param_idx;TRP_GROUP_MIN_MAX::param_idx2008,59846
  bool is_index_scan;TRP_GROUP_MIN_MAX::is_index_scan2009,59903
  ha_rows quick_prefix_records;TRP_GROUP_MIN_MAX::quick_prefix_records2012,60044
  TRP_GROUP_MIN_MAX(TRP_GROUP_MIN_MAX::TRP_GROUP_MIN_MAX2014,60084
  virtual ~TRP_GROUP_MIN_MAX(TRP_GROUP_MIN_MAX::~TRP_GROUP_MIN_MAX2035,61229
  void use_index_scan(TRP_GROUP_MIN_MAX::use_index_scan2039,61423
static int fill_used_fields_bitmap(2057,61845
int SQL_SELECT::test_quick_select(2152,65557
typedef void (*mark_full_part_func)mark_full_part_func2503,77690
typedef struct st_part_prune_param2508,77797
  RANGE_OPT_PARAM range_param;st_part_prune_param::range_param2510,77834
  partition_info *part_info;st_part_prune_param::part_info2516,78139
  get_part_id_func get_top_partition_id_func;st_part_prune_param::get_top_partition_id_func2518,78266
  mark_full_part_func mark_full_partition_used;st_part_prune_param::mark_full_partition_used2520,78392
  KEY_PART *key;st_part_prune_param::key2523,78503
  uint part_fields;st_part_prune_param::part_fields2530,78686
  uint subpart_fields;st_part_prune_param::subpart_fields2531,78706
  int last_part_partno;st_part_prune_param::last_part_partno2537,78927
  int last_subpart_partno;st_part_prune_param::last_subpart_partno2538,78951
  my_bool *is_part_keypart;st_part_prune_param::is_part_keypart2545,79235
  my_bool *is_subpart_keypart;st_part_prune_param::is_subpart_keypart2547,79305
  my_bool ignore_part_fields;st_part_prune_param::ignore_part_fields2549,79337
  SEL_ARG **arg_stack;st_part_prune_param::arg_stack2554,79608
  SEL_ARG **arg_stack_end;st_part_prune_param::arg_stack_end2555,79661
  uint cur_part_fields;st_part_prune_param::cur_part_fields2557,79794
  uint cur_subpart_fields;st_part_prune_param::cur_subpart_fields2559,79875
  PARTITION_ITERATOR part_iter;st_part_prune_param::part_iter2562,79978
  MY_BITMAP subparts_bitmap;st_part_prune_param::subparts_bitmap2565,80059
  uchar *cur_min_key;st_part_prune_param::cur_min_key2567,80089
  uchar *cur_max_key;st_part_prune_param::cur_max_key2568,80111
  uint cur_min_flag,st_part_prune_param::cur_min_flag2570,80134
  uint cur_min_flag, cur_max_flag;st_part_prune_param::cur_max_flag2570,80134
} PART_PRUNE_PARAM;2571,80169
bool prune_partitions(2614,81823
void store_key_image_to_rec(2766,86560
static void store_selargs_to_rec(2802,87498
static void mark_full_partition_used_no_parts(2816,87961
static void mark_full_partition_used_with_parts(2827,88364
static int find_used_partitions_imerge_list(2859,89334
int find_used_partitions_imerge(2921,91173
int find_used_partitions(3054,97026
static void mark_all_partitions_as_used(3404,110219
static bool fields_ok_for_partition_index(3433,111057
static bool create_partition_index_description(3469,112009
static void print_partitioning_index(3571,115741
static void dbug_print_field(3586,116182
static void dbug_print_segment_range(3603,116567
static void dbug_print_singlepoint_range(3647,117702
double get_sweep_read_cost(3681,118557
TABLE_READ_PLAN *get_best_disjunct_quick(get_best_disjunct_quick3794,122354
static double get_index_only_read_time(4062,131951
typedef struct st_ror_scan_info4079,132445
  uint      idx;st_ror_scan_info::idx4081,132479
  uint      keynr;st_ror_scan_info::keynr4082,132536
  ha_rows   records;st_ror_scan_info::records4083,132587
  SEL_ARG   *sel_arg;st_ror_scan_info::sel_arg4086,132738
  MY_BITMAP covered_fields;st_ror_scan_info::covered_fields4089,132824
  uint      used_fields_covered;st_ror_scan_info::used_fields_covered4090,132852
  int       key_rec_length;st_ror_scan_info::key_rec_length4091,132923
  double    index_read_cost;st_ror_scan_info::index_read_cost4097,133143
  uint      first_uncovered_field;st_ror_scan_info::first_uncovered_field4098,133172
  uint      key_components;st_ror_scan_info::key_components4099,133248
} ROR_SCAN_INFO;4100,133304
ROR_SCAN_INFO *make_ror_scan(make_ror_scan4119,133716
static int cmp_ror_scan_info(4174,135480
static int cmp_ror_scan_info_covering(4198,136038
  const PARAM *param;::param4219,136658
  MY_BITMAP covered_fields;::covered_fields4220,136680
  double out_rows;::out_rows4226,136954
  bool is_covering;::is_covering4228,137035
  ha_rows index_records;::index_records4230,137056
  double index_scan_costs;::index_scan_costs4231,137120
  double total_cost;::total_cost4232,137185
} ROR_INTERSECT_INFO;4233,137206
ROR_INTERSECT_INFO* ror_intersect_init(4249,137459
void ror_intersect_cpy(4271,138215
static double ror_scan_selectivity(4374,141850
static bool ror_intersect_add(4487,145971
TRP_ROR_INTERSECT *get_best_ror_intersect(get_best_ror_intersect4611,150241
TRP_ROR_INTERSECT *get_best_covering_ror_intersect(get_best_covering_ror_intersect4811,157095
static TRP_RANGE *get_key_scans_params(get_key_scans_params4947,162263
QUICK_SELECT_I *TRP_INDEX_MERGE::make_quick(TRP_INDEX_MERGE::make_quick5051,166051
QUICK_SELECT_I *TRP_ROR_INTERSECT::make_quick(TRP_ROR_INTERSECT::make_quick5078,166932
QUICK_SELECT_I *TRP_ROR_UNION::make_quick(TRP_ROR_UNION::make_quick5125,168547
static SEL_TREE *get_ne_mm_tree(get_ne_mm_tree5169,169852
static SEL_TREE *get_func_mm_tree(get_func_mm_tree5204,170879
#define NOT_IN_IGNORE_THRESHOLD 5292,174176
static SEL_TREE *get_full_func_mm_tree(get_full_func_mm_tree5498,182081
static SEL_TREE *get_mm_tree(get_mm_tree5542,183466
get_mm_parts(5717,188769
get_mm_leaf(5769,190132
sel_add(6179,203613
#define CLONE_KEY1_MAYBE 6208,204094
#define CLONE_KEY2_MAYBE 6209,204121
#define swap_clone_flag(6210,204148
tree_and(6214,204227
bool sel_trees_can_be_ored(6284,206135
static bool remove_nonrange_trees(6367,209144
tree_or(6388,209501
and_all_keys(6477,212314
key_and(6535,213804
get_range(6649,216721
key_or(6724,219600
static bool eq_tree(7019,227392
SEL_ARG::insert(7050,228124
SEL_ARG::find_range(7098,229210
SEL_ARG::tree_delete(7135,229810
static void left_rotate(7203,231487
static void right_rotate(7217,231767
SEL_ARG::rb_insert(7233,232061
SEL_ARG *rb_delete_fixup(rb_delete_fixup7294,233157
int test_rb_tree(7376,234714
static ulong count_key_part_usage(7454,237225
void SEL_ARG::test_use_count(7485,237995
check_quick_select(7543,239918
check_quick_keys(7652,243495
static bool is_key_scan_ror(7877,251908
get_quick_select(7927,253504
get_quick_keys(7969,254710
bool QUICK_RANGE_SELECT::unique_key_range(8089,258923
static bool null_part_in_key(8106,259312
bool QUICK_SELECT_I::is_keys_used(8119,259564
bool QUICK_INDEX_MERGE_SELECT::is_keys_used(8124,259671
bool QUICK_ROR_INTERSECT_SELECT::is_keys_used(8136,259943
bool QUICK_ROR_UNION_SELECT::is_keys_used(8148,260217
QUICK_RANGE_SELECT *get_quick_select_for_ref(get_quick_select_for_ref8180,260975
int QUICK_INDEX_MERGE_SELECT::read_keys_and_merge(8280,264280
int QUICK_INDEX_MERGE_SELECT::get_next(8385,267050
int QUICK_ROR_INTERSECT_SELECT::get_next(8440,268728
int QUICK_ROR_UNION_SELECT::get_next(8551,271735
int QUICK_RANGE_SELECT::reset(8602,272893
int QUICK_RANGE_SELECT::get_next(8707,275798
int QUICK_RANGE_SELECT::get_next_prefix(8799,278823
int QUICK_RANGE_SELECT_GEOM::get_next(8853,280671
bool QUICK_RANGE_SELECT::row_in_ranges(8907,282281
QUICK_SELECT_DESC::QUICK_SELECT_DESC(8939,283226
int QUICK_SELECT_DESC::get_next(8970,284133
QUICK_SELECT_I *QUICK_RANGE_SELECT::make_reverse(QUICK_RANGE_SELECT::make_reverse9087,288381
int QUICK_RANGE_SELECT::cmp_next(9104,288744
int QUICK_RANGE_SELECT::cmp_prev(9144,289701
bool QUICK_SELECT_DESC::range_reads_after_key(9163,290200
void QUICK_RANGE_SELECT::add_info_string(9171,290442
void QUICK_INDEX_MERGE_SELECT::add_info_string(9177,290573
void QUICK_ROR_INTERSECT_SELECT::add_info_string(9199,291044
void QUICK_ROR_UNION_SELECT::add_info_string(9223,291604
void QUICK_RANGE_SELECT::add_keys_and_lengths(9241,291965
void QUICK_INDEX_MERGE_SELECT::add_keys_and_lengths(9252,292309
void QUICK_ROR_INTERSECT_SELECT::add_keys_and_lengths(9287,293256
void QUICK_ROR_UNION_SELECT::add_keys_and_lengths(9321,294188
get_best_group_min_max(9494,302330
check_group_min_max_predicates(9961,320102
get_constant_key_infix(10120,326074
get_field_keypart(10215,329090
SEL_ARG * get_index_range_tree(10251,330185
void cost_group_min_max(10326,333560
TRP_GROUP_MIN_MAX::make_quick(10429,337460
QUICK_GROUP_MIN_MAX_SELECT(10531,341134
int QUICK_GROUP_MIN_MAX_SELECT::init(10593,343382
QUICK_GROUP_MIN_MAX_SELECT::~QUICK_GROUP_MIN_MAX_SELECT(10670,345281
bool QUICK_GROUP_MIN_MAX_SELECT::add_range(10703,346114
void QUICK_GROUP_MIN_MAX_SELECT::adjust_prefix_ranges 10752,347935
void QUICK_GROUP_MIN_MAX_SELECT::update_key_stat(10792,349081
int QUICK_GROUP_MIN_MAX_SELECT::reset(10852,350756
int QUICK_GROUP_MIN_MAX_SELECT::get_next(10903,352420
int QUICK_GROUP_MIN_MAX_SELECT::next_min(11005,355391
int QUICK_GROUP_MIN_MAX_SELECT::next_max(11085,358155
static int index_next_different 11127,359674
int QUICK_GROUP_MIN_MAX_SELECT::next_prefix(11173,361247
int QUICK_GROUP_MIN_MAX_SELECT::next_min_in_range(11239,363217
int QUICK_GROUP_MIN_MAX_SELECT::next_max_in_range(11378,367816
void QUICK_GROUP_MIN_MAX_SELECT::update_min_result(11490,371725
void QUICK_GROUP_MIN_MAX_SELECT::update_max_result(11522,372672
void QUICK_GROUP_MIN_MAX_SELECT::add_keys_and_lengths(11547,373317
static void print_sel_tree(11560,373657
static void print_ror_scans_arr(11591,374398
print_key(11620,375325
static void print_quick(11659,376385
void QUICK_RANGE_SELECT::dbug_dump(11681,376938
void QUICK_INDEX_MERGE_SELECT::dbug_dump(11721,377970
void QUICK_ROR_INTERSECT_SELECT::dbug_dump(11737,378510
void QUICK_ROR_UNION_SELECT::dbug_dump(11754,379094
void QUICK_GROUP_MIN_MAX_SELECT::dbug_dump(11786,379945

sql/opt_sum.cc,343
static ulonglong get_exact_record_count(78,2812
static int get_index_min_value(106,3493
static int get_index_max_value(199,7056
int opt_sum_query(237,8322
bool simple_pred(488,16643
static bool matching_cond(612,20732
static bool find_key_for_maxmin(843,28742
static int reckey_in_range(949,32371
static int maxmin_in_range(973,33075

sql/parse_file.cc,416
write_escaped_string(49,1349
write_parameter(105,2740
sql_create_definition_file(211,5648
my_bool rename_in_schema_file(317,8553
sql_parse_prepare(362,9905
parse_string(468,12355
read_escaped_string(498,12906
parse_escaped_string(559,14063
parse_quoted_escaped_string(588,14784
bool get_file_options_ulllist(628,15753
File_parser::parse(692,17574
File_parser_dummy_hook::process_unknown_string(898,22753

sql/partition_info.cc,2593
partition_info *partition_info::get_clone(partition_info::get_clone34,1246
#define MAX_PART_NAME_SIZE 97,3066
char *partition_info::create_default_partition_names(partition_info::create_default_partition_names99,3096
void partition_info::set_show_version_string(134,3969
char *partition_info::create_subpartition_name(partition_info::create_subpartition_name171,5031
bool partition_info::set_up_default_partitions(214,6443
bool partition_info::set_up_default_subpartitions(295,8925
bool partition_info::set_up_defaults_for_partitioning(359,10654
char* partition_info::has_unique_fields(393,11623
bool partition_info::has_unique_name(433,12573
char *partition_info::has_unique_names(partition_info::has_unique_names479,13778
static bool check_engine_condition(545,15728
bool partition_info::check_engine_mix(601,17622
bool partition_info::check_range_constants(690,20932
int partition_info_list_part_cmp(805,24310
int partition_info::list_part_cmp(818,24565
int partition_info_compare_column_values(837,25074
int partition_info::compare_column_values(875,26094
bool partition_info::check_list_constants(903,27128
static void warn_if_dir_in_part_elem(1053,31516
bool partition_info::check_partition_info(1095,32995
void partition_info::print_no_partition_found(1333,40391
bool partition_info::set_part_expr(1381,41815
bool partition_info::check_partition_field_length(1421,42708
bool partition_info::set_up_charset_field_preps(1456,43744
bool check_partition_dirs(1569,46756
void partition_info::report_part_expr_error(1616,47921
int partition_info::add_max_value(1666,49233
part_column_list_val *partition_info::add_column_value(partition_info::add_column_value1691,49754
void partition_info::init_col_val(1747,51500
bool partition_info::add_column_list_value(1785,52627
bool partition_info::init_column_part(1846,54124
int partition_info::reorganize_into_single_field_col_val(1900,55913
int partition_info::fix_partition_values(1948,57287
Item* partition_info::get_column_item(2031,59429
bool partition_info::fix_column_value_functions(2062,60311
int partition_info::fix_parser_data(2172,63930
void partition_info::print_debug(2234,65602
part_column_list_val *partition_info::add_column_value(partition_info::add_column_value2250,66168
bool partition_info::set_part_expr(2255,66245
int partition_info::reorganize_into_single_field_col_val(2265,66483
bool partition_info::init_column_part(2270,66559
bool partition_info::add_column_list_value(2275,66620
int partition_info::add_max_value(2279,66705
void partition_info::print_debug(2284,66758

sql/procedure.cc,380
static struct st_procedure_def 30,1050
  const char *name;st_procedure_def::name31,1083
} sql_procs[sql_procs34,1201
my_decimal *Item_proc_string::val_decimal(Item_proc_string::val_decimal44,1524
my_decimal *Item_proc_int::val_decimal(Item_proc_int::val_decimal53,1724
my_decimal *Item_proc_real::val_decimal(Item_proc_real::val_decimal62,1928
setup_procedure(80,2217

sql/protocol.cc,2485
static const unsigned int PACKET_BUFFER_EXTRA_ALLOC=33,1196
bool Protocol::net_store_data(45,1779
bool Protocol::net_store_data(80,2911
bool net_send_error(145,5111
net_send_ok(206,6823
static uchar eof_buff[eof_buff260,8275
net_send_eof(286,9053
static bool write_eof_packet(320,10018
bool net_send_error_packet(361,11230
static uchar *net_store_length_fast(net_store_length_fast418,12855
void Protocol::end_statement(486,15667
bool Protocol::send_ok(537,17196
bool Protocol::send_eof(555,17730
bool Protocol::send_error(569,18086
uchar *net_store_data(net_store_data585,18687
uchar *net_store_data(net_store_data592,18844
uchar *net_store_data(net_store_data601,19051
void Protocol::init(615,19455
void Protocol::end_partial_result_set(631,19774
bool Protocol::flush(637,19919
bool Protocol::send_result_set_metadata(670,20677
bool Protocol::write(818,25963
bool Protocol::send_result_set_row(837,26339
bool Protocol::store(882,27338
bool Protocol::store(895,27574
void Protocol_text::prepare_for_resend(923,28433
bool Protocol_text::store_null(931,28540
bool Protocol::store_string_aux(948,28839
bool Protocol_text::store(964,29357
bool Protocol_text::store(980,29906
bool Protocol_text::store_tiny(1001,30758
bool Protocol_text::store_short(1013,31042
bool Protocol_text::store_long(1028,31421
bool Protocol_text::store_longlong(1043,31841
bool Protocol_text::store_decimal(1058,32264
bool Protocol_text::store(1072,32674
bool Protocol_text::store(1084,33004
bool Protocol_text::store(1096,33327
bool Protocol_text::store(1129,34076
bool Protocol_text::store_date(1149,34691
bool Protocol_text::store_time(1168,35108
bool Protocol_text::send_out_parameters(1196,35874
bool Protocol_binary::prepare_for_send(1253,37829
void Protocol_binary::prepare_for_resend(1263,38064
bool Protocol_binary::store(1271,38207
bool Protocol_binary::store(1279,38453
bool Protocol_binary::store_null(1286,38659
bool Protocol_binary::store_tiny(1297,38939
bool Protocol_binary::store_short(1306,39121
bool Protocol_binary::store_long(1317,39320
bool Protocol_binary::store_longlong(1328,39512
bool Protocol_binary::store_decimal(1338,39727
bool Protocol_binary::store(1351,40135
bool Protocol_binary::store(1362,40354
bool Protocol_binary::store(1373,40574
bool Protocol_binary::store(1385,40834
bool Protocol_binary::store_date(1411,41462
bool Protocol_binary::store_time(1419,41614
bool Protocol_binary::send_out_parameters(1458,42541

sql/records.cc,606
void init_read_record_idx(67,2433
void init_read_record(178,7025
void end_read_record(307,11345
static int rr_handle_error(324,11767
static int rr_quick(347,12205
static int rr_index_first(375,12608
static int rr_index_last(404,13116
static int rr_index(430,13554
static int rr_index_desc(455,13967
int rr_sequential(464,14128
static int rr_from_tempfile(483,14515
static int rr_unpack_from_tempfile(519,15561
static int rr_from_pointers(529,15808
static int rr_unpack_from_buffer(570,16873
static int init_rr_cache(582,17218
static int rr_from_cache(615,18435
static int rr_cmp(689,20493

sql/repl_failsafe.cc,808
#define SLAVE_LIST_CHUNK 40,1509
#define SLAVE_ERRMSG_SIZE 41,1538
ulong rpl_status=44,1581
mysql_mutex_t LOCK_rpl_status;45,1608
mysql_cond_t COND_rpl_status;46,1639
HASH slave_list;47,1669
const char *rpl_role_type[rpl_role_type49,1687
TYPELIB rpl_role_typelib 50,1743
const char* rpl_status_type[rpl_status_type53,1837
void change_rpl_status(67,2339
#define get_object(77,2607
void unregister_slave(90,2813
int register_slave(118,3416
*slave_list_key(slave_list_key165,4850
extern "C" void slave_info_free(172,4981
static PSI_mutex_key key_LOCK_slave_list;178,5067
static PSI_mutex_info all_slave_list_mutexes[all_slave_list_mutexes180,5110
static void init_all_slave_list_mutexes(185,5226
void init_slave_list(198,5513
void end_slave_list(210,5864
bool show_slave_hosts(230,6263

sql/rpl_filter.cc,1233
#define TABLE_RULE_HASH_SIZE 22,998
#define TABLE_RULE_ARR_SIZE 23,1032
Rpl_filter::Rpl_filter(25,1066
Rpl_filter::~Rpl_filter(35,1280
Rpl_filter::tables_ok(90,3107
Rpl_filter::db_ok(149,4689
Rpl_filter::db_ok_with_wild_table(221,6784
Rpl_filter::is_on(252,7523
Rpl_filter::add_do_table(259,7579
Rpl_filter::add_ignore_table(270,7838
Rpl_filter::add_wild_do_table(281,8119
Rpl_filter::add_wild_ignore_table(292,8413
Rpl_filter::add_db_rewrite(303,8730
Rpl_filter::add_table_rule(311,8903
Rpl_filter::add_wild_table_rule(334,9508
Rpl_filter::add_do_db(351,10003
Rpl_filter::add_ignore_db(361,10185
uchar *get_table_key(get_table_key372,10482
void free_table_ent(382,10680
Rpl_filter::init_table_rule_hash(391,10781
Rpl_filter::init_table_rule_array(400,10972
Rpl_filter::find_wild(409,11178
Rpl_filter::free_string_array(430,11591
Rpl_filter::table_rule_ent_hash_to_str(457,12109
Rpl_filter::table_rule_ent_dynamic_array_to_str(474,12432
Rpl_filter::get_do_table(493,12817
Rpl_filter::get_ignore_table(500,12929
Rpl_filter::get_wild_do_table(507,13053
Rpl_filter::get_wild_ignore_table(514,13189
Rpl_filter::get_rewrite_db(521,13344
Rpl_filter::get_do_db(541,13693
Rpl_filter::get_ignore_db(548,13760

sql/rpl_handler.cc,1985
Trans_delegate *transaction_delegate;transaction_delegate26,923
Binlog_storage_delegate *binlog_storage_delegate;binlog_storage_delegate27,961
Binlog_transmit_delegate *binlog_transmit_delegate;binlog_transmit_delegate29,1035
Binlog_relay_IO_delegate *binlog_relay_io_delegate;binlog_relay_io_delegate30,1087
typedef struct Trans_binlog_info 36,1234
  my_off_t log_pos;Trans_binlog_info::log_pos37,1269
  char log_file[Trans_binlog_info::log_file38,1289
} Trans_binlog_info;39,1317
int get_user_var_int(43,1403
int get_user_var_real(58,1801
int get_user_var_str(73,2195
int delegates_init(90,2679
void delegates_destroy(156,4658
#define FOREACH_OBSERVER(178,5368
int Trans_delegate::after_commit(229,8688
int Trans_delegate::after_rollback(257,9456
int Binlog_storage_delegate::after_flush(285,10232
int Binlog_transmit_delegate::transmit_start(316,11153
int Binlog_transmit_delegate::transmit_stop(328,11514
int Binlog_transmit_delegate::reserve_header(338,11724
#define RESERVE_HEADER_SIZE 346,12079
int Binlog_transmit_delegate::before_send_event(390,13148
int Binlog_transmit_delegate::after_send_event(406,13713
int Binlog_transmit_delegate::after_reset_master(418,14046
void Binlog_relay_IO_delegate::init_param(429,14267
int Binlog_relay_IO_delegate::thread_start(440,14597
int Binlog_relay_IO_delegate::thread_stop(451,14813
int Binlog_relay_IO_delegate::before_request_transmit(462,15027
int Binlog_relay_IO_delegate::after_read_event(474,15401
int Binlog_relay_IO_delegate::after_queue_event(488,15892
int Binlog_relay_IO_delegate::after_reset_slave(506,16434
int register_trans_observer(518,16690
int unregister_trans_observer(523,16833
int register_binlog_storage_observer(528,16981
int unregister_binlog_storage_observer(533,17145
int register_binlog_transmit_observer(539,17338
int unregister_binlog_transmit_observer(544,17505
int register_binlog_relay_io_observer(549,17677
int unregister_binlog_relay_io_observer(554,17844

sql/rpl_injector.cc,748
injector::transaction::transaction(30,1218
injector::transaction::~transaction(46,1700
int injector::transaction::commit(68,2265
int injector::transaction::use_table(101,3488
int injector::transaction::write_row 119,3941
int injector::transaction::delete_row(138,4495
int injector::transaction::update_row(157,5051
injector::transaction::binlog_pos injector::transaction::start_pos(176,5633
inline injector::injector(187,5818
static injector *s_injector=s_injector191,5851
injector *injector::instance(injector::instance192,5883
void injector::free_instance(200,6036
injector::transaction injector::new_trans(212,6163
void injector::new_trans(222,6470
int injector::record_incident(235,6841
int injector::record_incident(243,7053

sql/rpl_mi.cc,934
#define DEFAULT_CONNECT_RETRY 25,1036
Master_info::Master_info(36,1449
Master_info::~Master_info(59,2568
int change_master_server_id_cmp(78,3080
bool Master_info::shall_ignore_server_id(97,3575
void Master_info::clear_in_memory_info(109,4016
void init_master_log_pos(119,4187
  LINES_IN_MASTER_INFO_WITH_SSL=::LINES_IN_MASTER_INFO_WITH_SSL144,4986
  LINE_FOR_MASTER_SSL_VERIFY_SERVER_CERT=::LINE_FOR_MASTER_SSL_VERIFY_SERVER_CERT147,5084
  LINE_FOR_MASTER_HEARTBEAT_PERIOD=::LINE_FOR_MASTER_HEARTBEAT_PERIOD149,5181
  LINE_FOR_MASTER_BIND ::LINE_FOR_MASTER_BIND151,5265
  LINE_FOR_REPLICATE_IGNORE_SERVER_IDS=::LINE_FOR_REPLICATE_IGNORE_SERVER_IDS153,5345
  LINES_IN_MASTER_INFO=::LINES_IN_MASTER_INFO155,5457
  LINES_IN_MASTER_INFO= LINE_FOR_REPLICATE_IGNORE_SERVER_IDS::LINE_FOR_REPLICATE_IGNORE_SERVER_IDS155,5457
int init_master_info(158,5522
int flush_master_info(447,15173
void end_master_info(548,18942

sql/rpl_record.cc,69
pack_row(59,2153
unpack_row(185,6385
int prepare_record(412,14177

sql/rpl_record_old.cc,45
pack_row_old(23,961
unpack_row_old(89,3041

sql/rpl_reporting.cc,172
Slave_reporting_capability::Slave_reporting_capability(22,894
Slave_reporting_capability::report(30,1132
Slave_reporting_capability::~Slave_reporting_capability(76,2455

sql/rpl_rli.cc,849
Relay_log_info::Relay_log_info(39,1626
Relay_log_info::~Relay_log_info(89,3873
int init_relay_log_info(107,4328
static inline int add_relay_log(369,13596
static int count_relay_log_space(389,14130
void Relay_log_info::clear_until_condition(422,14954
int init_relay_log_pos(465,16396
int Relay_log_info::wait_for_pos(675,23584
void Relay_log_info::inc_group_relay_log_pos(857,29969
void Relay_log_info::close_temporary_tables(914,32638
int purge_relay_logs(941,33297
bool Relay_log_info::is_until_satisfied(1059,37718
void Relay_log_info::cached_charset_invalidate(1143,40751
bool Relay_log_info::cached_charset_compare(1153,40979
void Relay_log_info::stmt_done(1166,41296
void Relay_log_info::cleanup_context(1221,43561
void Relay_log_info::clear_tables_to_lock(1265,45170
void Relay_log_info::slave_close_thread_tables(1311,46634

sql/rpl_tblmap.cc,411
#define MAYBE_TABLE_NAME(27,953
#define MAYBE_TABLE_NAME(29,992
#define TABLE_ID_HASH_SIZE 31,1065
#define TABLE_ID_CHUNK 32,1095
table_mapping::table_mapping(34,1123
table_mapping::~table_mapping(51,1749
TABLE* table_mapping::get_table(60,1895
int table_mapping::expand(82,2504
int table_mapping::set_table(103,3149
int table_mapping::remove_table(140,4136
void table_mapping::clear_tables(158,4570

sql/rpl_utility.cc,730
int compare(28,1025
uint32 uint_max(43,1251
max_display_length_for_field(56,1552
int compare_lengths(175,4298
uint32 table_def::calc_field_size(198,5295
void show_sql_type(346,9116
bool is_conversion_ok(518,13372
can_convert_field_to(579,15404
table_def::compatible_with(775,21581
TABLE *table_def::create_conversion_table(table_def::create_conversion_table876,25111
table_def::table_def(964,28059
table_def::~table_def(1056,30797
Deferred_log_events::Deferred_log_events(1068,30954
Deferred_log_events::~Deferred_log_events(1073,31102
int Deferred_log_events::add(1078,31178
bool Deferred_log_events::is_empty(1085,31297
bool Deferred_log_events::execute(1090,31371
void Deferred_log_events::rewind(1107,31776

sql/scheduler.cc,842
static bool no_threads_end(35,1154
static scheduler_functions one_thread_scheduler_functions=42,1355
static scheduler_functions one_thread_per_connection_scheduler_functions=60,2083
scheduler_functions *thread_scheduler=thread_scheduler75,2713
static void scheduler_wait_lock_begin(85,2887
static void scheduler_wait_lock_end(90,3041
static void scheduler_wait_sync_begin(94,3153
static void scheduler_wait_sync_end(99,3307
static void scheduler_init(112,3649
void one_thread_per_connection_scheduler(124,4008
void one_thread_scheduler(136,4292
thd_scheduler::thd_scheduler(152,4573
thd_scheduler::~thd_scheduler(158,4638
static scheduler_functions *saved_thread_scheduler;saved_thread_scheduler162,4675
static uint saved_thread_handling;163,4727
int my_thread_scheduler_set(166,4774
int my_thread_scheduler_reset(183,5128

sql/set_var.cc,1778
static HASH system_variable_hash;47,2123
static PolyLock_mutex PLock_global_system_variables(&LOCK_global_system_variables)LOCK_global_system_variables48,2157
static uchar *get_sys_var_length(get_sys_var_length54,2310
sys_var_chain all_sys_vars 61,2494
int sys_var_init(63,2540
int sys_var_add_options(84,3014
void sys_var_end(104,3466
sys_var::sys_var(142,5107
bool sys_var::update(187,6888
uchar *sys_var::session_value_ptr(sys_var::session_value_ptr208,7580
uchar *sys_var::global_value_ptr(sys_var::global_value_ptr213,7678
bool sys_var::check(218,7771
uchar *sys_var::value_ptr(sys_var::value_ptr247,8496
bool sys_var::set_default(259,8806
void sys_var::do_deprecated_warning(272,9105
bool throw_bounds_warning(307,10245
bool throw_bounds_warning(331,10864
CHARSET_INFO *sys_var::charset(sys_var::charset351,11389
typedef struct old_names_map_st357,11527
  const char *old_name;old_names_map_st::old_name359,11561
  const char *new_name;old_names_map_st::new_name360,11585
} my_old_conv;361,11609
static my_old_conv old_conv[old_conv363,11625
CHARSET_INFO *get_old_charset_by_name(get_old_charset_by_name378,12310
int mysql_add_sys_var_chain(409,13051
int mysql_del_sys_var_chain(445,13846
static int show_cmp(458,14114
SHOW_VAR* enumerate_sys_vars(477,14556
sys_var *intern_find_sys_var(intern_find_sys_var525,15754
int sql_set_variables(559,16597
int set_var::check(597,17462
int set_var::light_check(640,18496
int set_var::update(669,19263
int set_var_user::check(679,19581
int set_var_user::light_check(702,20110
int set_var_user::update(712,20353
int set_var_password::check(728,20778
int set_var_password::update(759,21597
int set_var_collation_client::check(774,22060
int set_var_collation_client::update(786,22382

sql/sha2.cc,80
#  define GEN_YASSL_SHA2_BRIDGE(35,1240
#  undef GEN_YASSL_SHA2_BRIDGE66,2268

sql/signal_handler.cc,202
#define SIGNAL_FMT 24,869
#define SIGNAL_FMT 26,911
static volatile sig_atomic_t segfaulted=34,1113
extern "C" sig_handler handle_fatal_signal(57,1913
#define UNSAFE_DEFAULT_LINUX_THREADS 134,4795

sql/slave.cc,4836
#define FLAGSTR(60,1874
#define MAX_SLAVE_RETRY_PAUSE 62,1915
#define SLAVE_WAIT_GROUP_DONE 66,2016
bool use_slave_mask 67,2049
MY_BITMAP slave_error_mask;68,2074
char slave_skip_error_names[slave_skip_error_names69,2102
char* slave_load_tmpdir 71,2157
Master_info *active_mi=active_mi72,2186
my_bool replicate_same_server_id;73,2213
ulonglong relay_log_space_limit 74,2247
int disconnect_slave_event_count 83,2447
enum enum_slave_reconnect_actions87,2567
  SLAVE_RECON_ACT_REG=enum_slave_reconnect_actions::SLAVE_RECON_ACT_REG89,2603
  SLAVE_RECON_ACT_DUMP=enum_slave_reconnect_actions::SLAVE_RECON_ACT_DUMP90,2629
  SLAVE_RECON_ACT_EVENT=enum_slave_reconnect_actions::SLAVE_RECON_ACT_EVENT91,2656
  SLAVE_RECON_ACT_MAXenum_slave_reconnect_actions::SLAVE_RECON_ACT_MAX92,2684
enum enum_slave_reconnect_messages95,2710
  SLAVE_RECON_MSG_WAIT=enum_slave_reconnect_messages::SLAVE_RECON_MSG_WAIT97,2747
  SLAVE_RECON_MSG_KILLED_WAITING=enum_slave_reconnect_messages::SLAVE_RECON_MSG_KILLED_WAITING98,2774
  SLAVE_RECON_MSG_AFTER=enum_slave_reconnect_messages::SLAVE_RECON_MSG_AFTER99,2811
  SLAVE_RECON_MSG_FAILED=enum_slave_reconnect_messages::SLAVE_RECON_MSG_FAILED100,2839
  SLAVE_RECON_MSG_COMMAND=enum_slave_reconnect_messages::SLAVE_RECON_MSG_COMMAND101,2868
  SLAVE_RECON_MSG_KILLED_AFTER=enum_slave_reconnect_messages::SLAVE_RECON_MSG_KILLED_AFTER102,2898
  SLAVE_RECON_MSG_MAXenum_slave_reconnect_messages::SLAVE_RECON_MSG_MAX103,2933
static const char *reconnect_messages[reconnect_messages106,2959
typedef enum { SLAVE_THD_IO,::SLAVE_THD_IO139,4195
typedef enum { SLAVE_THD_IO, SLAVE_THD_SQL}::SLAVE_THD_SQL139,4195
typedef enum { SLAVE_THD_IO, SLAVE_THD_SQL} SLAVE_THD_TYPE;139,4195
void init_thread_mask(180,5982
void lock_slave_threads(201,6386
void unlock_slave_threads(216,6647
static PSI_thread_key key_thread_slave_io,227,6909
static PSI_thread_key key_thread_slave_io, key_thread_slave_sql;227,6909
static PSI_thread_info all_slave_threads[all_slave_threads229,6975
static void init_slave_psi_keys(235,7138
int init_slave(250,7443
int init_recovery(352,10590
static void print_slave_skip_errors(382,11528
void init_slave_skip_errors(450,13492
static void set_thd_in_use_temporary_tables(484,14416
int terminate_slave_threads(492,14607
terminate_slave_thread(593,18098
int start_slave_thread(668,19994
int start_slave_threads(756,22599
void end_slave(811,24206
void close_active_mi(845,25151
static bool io_slave_killed(857,25352
static bool sql_slave_killed(879,26121
void skip_load_data_infile(972,29421
bool net_request_file(983,29717
const char *print_slave_db_safe(print_slave_db_safe997,30172
int init_strvar_from_file(1004,30295
int init_intvar_from_file(1035,31001
int init_floatvar_from_file(1054,31311
int init_dynarray_intvar_from_file(1094,32354
bool is_network_error(1172,34409
static int get_master_version_and_clock(1201,35357
static bool wait_for_relay_log_space(1572,48672
static void write_ignored_events_info_to_relay_log(1655,51463
int register_slave_on_master(1698,53175
bool show_master_info(1784,56100
void set_slave_thread_options(2017,67034
void set_slave_thread_default_charset(2039,67867
static int init_slave_thread(2065,68626
template <typename killed_func,2123,70671
static inline bool slave_sleep(2124,70722
static int request_dump(2152,71434
static ulong read_event(2211,73249
static int has_temporary_error(2265,74923
int apply_event_and_update_pos(2342,76938
static int exec_relay_log_event(2487,81979
static bool check_io_slave_killed(2656,88591
static int try_to_reconnect(2693,90085
pthread_handler_t handle_slave_io(2750,91821
int check_temp_dir(3129,105610
pthread_handler_t handle_slave_sql(3176,106565
static int process_io_create_file(3525,120174
static int process_io_rotate(3652,123876
static int queue_binlog_ver_1_event(3699,125572
static int queue_binlog_ver_3_event(3817,129408
static int queue_old_event(3881,131210
static int queue_event(3909,132151
void end_relay_log_info(4140,141034
extern "C" void slave_io_thread_detach_vio(4185,142344
static int safe_connect(4209,142780
static int connect_to_master(4226,143098
static int safe_reconnect(4346,147245
MYSQL *rpl_connect_master(rpl_connect_master4354,147472
bool flush_relay_log_info(4451,150599
static IO_CACHE *reopen_relay_log(reopen_relay_log4495,151654
static Log_event* next_event(4526,152687
int rotate_relay_log(4970,170862
bool rpl_master_has_bug(5026,172848
  struct st_version_range_for_one_bug 5029,172998
    uint        bug_id;st_version_range_for_one_bug::bug_id5030,173038
    const uchar introduced_in[st_version_range_for_one_bug::introduced_in5031,173062
    const uchar fixed_in[st_version_range_for_one_bug::fixed_in5032,173122
bool rpl_master_erroneous_autoinc(5100,176162

sql/spatial.cc,5041
#define MAX_DIGITS_IN_DOUBLE 25,1015
String Geometry::bad_geometry_data("Bad object", &my_charset_bin)my_charset_bin29,1149
Geometry::Class_info *Geometry::ci_collection[Geometry::ci_collection31,1217
static Geometry::Class_info **ci_collection_end=ci_collection_end36,1335
Geometry::Class_info::Class_info(39,1465
static Geometry *create_point(create_point49,1737
static Geometry *create_linestring(create_linestring54,1819
static Geometry *create_polygon(create_polygon59,1912
static Geometry *create_multipoint(create_multipoint64,1998
static Geometry *create_multipolygon(create_multipolygon69,2091
static Geometry *create_multilinestring(create_multilinestring74,2188
static Geometry *create_geometrycollection(create_geometrycollection79,2292
static void get_point(108,3260
Geometry::Class_info *Geometry::find_class(Geometry::find_class116,3470
Geometry *Geometry::create_by_typeid(Geometry::create_by_typeid132,3863
Geometry *Geometry::construct(Geometry::construct141,4058
Geometry *Geometry::create_from_wkt(Geometry::create_from_wkt159,4606
static double wkb_get_double(190,5400
static uint32 wkb_get_uint(214,5848
Geometry *Geometry::create_from_wkb(Geometry::create_from_wkb230,6164
bool Geometry::envelope(251,6779
bool Geometry::create_point(291,7588
bool Geometry::create_point(317,8172
const char *Geometry::append_points(Geometry::append_points343,8681
const char *Geometry::get_mbr_for_points(Geometry::get_mbr_for_points376,9309
uint32 Gis_point::get_data_size(402,9870
bool Gis_point::init_from_wkt(408,9942
uint Gis_point::init_from_wkb(420,10202
bool Gis_point::get_data_as_wkt(434,10565
bool Gis_point::get_mbr(449,10865
const Geometry::Class_info *Gis_point::get_class_info(Gis_point::get_class_info459,11045
uint32 Gis_line_string::get_data_size(467,11212
bool Gis_line_string::init_from_wkt(475,11368
uint Gis_line_string::init_from_wkb(503,11925
bool Gis_line_string::get_data_as_wkt(531,12582
bool Gis_line_string::get_mbr(562,13243
int Gis_line_string::geom_length(568,13370
int Gis_line_string::is_closed(598,13980
int Gis_line_string::num_points(629,14558
int Gis_line_string::start_point(636,14664
int Gis_line_string::end_point(643,14817
int Gis_line_string::point_n(653,15044
const Geometry::Class_info *Gis_line_string::get_class_info(Gis_line_string::get_class_info665,15365
uint32 Gis_polygon::get_data_size(673,15540
bool Gis_polygon::init_from_wkt(693,15915
uint Gis_polygon::init_from_wkb(726,16709
bool Gis_polygon::get_data_as_wkt(765,17459
bool Gis_polygon::get_mbr(797,18201
int Gis_polygon::area(817,18535
int Gis_polygon::exterior_ring(863,19506
int Gis_polygon::num_interior_ring(884,20018
int Gis_polygon::interior_ring_n(893,20175
int Gis_polygon::centroid_xy(931,20974
int Gis_polygon::centroid(999,22526
const Geometry::Class_info *Gis_polygon::get_class_info(Gis_polygon::get_class_info1007,22672
uint32 Gis_multi_point::get_data_size(1015,22843
bool Gis_multi_point::init_from_wkt(1023,23017
uint Gis_multi_point::init_from_wkb(1050,23628
bool Gis_multi_point::get_data_as_wkt(1080,24437
bool Gis_multi_point::get_mbr(1097,24912
int Gis_multi_point::num_geometries(1103,25054
int Gis_multi_point::geometry_n(1110,25154
const Geometry::Class_info *Gis_multi_point::get_class_info(Gis_multi_point::get_class_info1129,25641
uint32 Gis_multi_line_string::get_data_size(1137,25824
bool Gis_multi_line_string::init_from_wkt(1158,26272
uint Gis_multi_line_string::init_from_wkb(1189,26958
bool Gis_multi_line_string::get_data_as_wkt(1227,27817
bool Gis_multi_line_string::get_mbr(1259,28596
int Gis_multi_line_string::num_geometries(1280,28968
int Gis_multi_line_string::geometry_n(1287,29074
int Gis_multi_line_string::geom_length(1316,29704
int Gis_multi_line_string::is_closed(1346,30337
const Geometry::Class_info *Gis_multi_line_string::get_class_info(Gis_multi_line_string::get_class_info1375,31018
uint32 Gis_multi_polygon::get_data_size(1383,31209
bool Gis_multi_polygon::init_from_wkt(1413,31809
uint Gis_multi_polygon::init_from_wkb(1443,32464
bool Gis_multi_polygon::get_data_as_wkt(1480,33262
bool Gis_multi_polygon::get_mbr(1524,34300
int Gis_multi_polygon::num_geometries(1553,34839
int Gis_multi_polygon::geometry_n(1560,34941
int Gis_multi_polygon::area(1599,35795
int Gis_multi_polygon::centroid(1627,36298
const Geometry::Class_info *Gis_multi_polygon::get_class_info(Gis_multi_polygon::get_class_info1659,36976
uint32 Gis_geometry_collection::get_data_size(1667,37159
bool Gis_geometry_collection::init_from_wkt(1699,37897
uint Gis_geometry_collection::init_from_wkb(1730,38561
bool Gis_geometry_collection::get_data_as_wkt(1772,39534
bool Gis_geometry_collection::get_mbr(1808,40281
int Gis_geometry_collection::num_geometries(1840,40912
int Gis_geometry_collection::geometry_n(1849,41060
bool Gis_geometry_collection::dimension(1901,42197
const Geometry::Class_info *Gis_geometry_collection::get_class_info(Gis_geometry_collection::get_class_info1940,43101

sql/sp_cache.cc,1012
static mysql_mutex_t Cversion_lock;24,894
static ulong volatile Cversion=25,930
class sp_cache32,1003
  inline bool insert(sp_cache::insert45,1197
  inline sp_head *lookup(sp_cache::lookup50,1300
  inline void remove(sp_cache::remove56,1481
  void enforce_limit(sp_cache::enforce_limit68,1845
  HASH m_hashtable;sp_cache::m_hashtable79,2076
static PSI_mutex_key key_Cversion_lock;83,2144
static PSI_mutex_info all_sp_cache_mutexes[all_sp_cache_mutexes85,2185
static void init_sp_cache_psi_keys(90,2295
void sp_cache_init(105,2597
void sp_cache_clear(126,2937
void sp_cache_insert(152,3469
sp_head *sp_cache_lookup(sp_cache_lookup186,4295
void sp_cache_invalidate(207,4767
void sp_cache_flush_obsolete(225,5156
ulong sp_cache_version(239,5393
sp_cache_enforce_limit(254,5774
uchar *hash_get_key_for_sp_head(hash_get_key_for_sp_head268,6255
void hash_free_sp_head(277,6467
sp_cache::sp_cache(284,6547
sp_cache::~sp_cache(290,6584
sp_cache::init(297,6647
sp_cache::cleanup(305,6798

sql/sp.cc,2421
TABLE_FIELD_TYPE proc_table_fields[proc_table_fields56,2292
  proc_table_def=169,5314
class Stored_routine_creation_ctx 178,5569
  virtual Stored_program_creation_ctx *clone(Stored_routine_creation_ctx::clone186,5816
  virtual Object_creation_ctx *create_backup_ctx(Stored_routine_creation_ctx::create_backup_ctx194,6103
  Stored_routine_creation_ctx(Stored_routine_creation_ctx::Stored_routine_creation_ctx201,6307
  Stored_routine_creation_ctx(Stored_routine_creation_ctx::Stored_routine_creation_ctx205,6393
bool load_charset(216,6834
bool load_collation(242,7321
Stored_routine_creation_ctx::load_from_db(269,7829
class Proc_table_intact 348,10371
  bool m_print_once;Proc_table_intact::m_print_once351,10434
  Proc_table_intact(Proc_table_intact::Proc_table_intact354,10464
void Proc_table_intact::report_error(366,10697
static Proc_table_intact proc_table_intact;389,11156
TABLE *open_proc_table_for_read(open_proc_table_for_read406,11580
static TABLE *open_proc_table_for_update(open_proc_table_for_update440,12256
db_find_routine_aux(477,13185
db_find_routine(529,14985
struct Silence_deprecated_warning 675,18854
Silence_deprecated_warning::handle_condition(687,19261
static sp_head *sp_compile(sp_compile717,20066
class Bad_db_error_handler 760,21134
  Bad_db_error_handler(Bad_db_error_handler::Bad_db_error_handler763,21203
  bool error_caught(Bad_db_error_handler::error_caught774,21588
  bool m_error_caught;Bad_db_error_handler::m_error_caught777,21653
Bad_db_error_handler::handle_condition(781,21685
db_load_routine(798,22172
sp_returns_type(916,25718
sp_create_routine(967,27143
sp_drop_routine(1237,36053
sp_update_routine(1318,38599
class Lock_db_routines_error_handler 1412,41664
  bool handle_condition(Lock_db_routines_error_handler::handle_condition1415,41743
bool lock_db_routines(1441,42535
sp_drop_db_routines(1523,45514
sp_show_create_routine(1603,47553
sp_find_routine(1659,49218
sp_exist_routines(1766,52646
extern "C" uchar* sp_sroutine_key(1803,53824
bool sp_add_used_routine(1845,55331
void sp_add_used_routine(1888,56936
void sp_remove_not_own_routines(1908,57687
bool sp_update_sp_used_routines(1949,59018
sp_update_stmt_used_routines(1980,59907
void sp_update_stmt_used_routines(2006,60798
int sp_cache_routine(2021,61331
int sp_cache_routine(2062,63012
create_string(2141,65259
sp_load_for_information_schema(2234,68391

sql/sp_head.cc,4620
#define SP_INSTR_UINT_MAXLEN 47,1867
#define SP_STMT_PRINT_MAXLEN 48,1899
static void reset_start_time_for_sp(63,2186
sp_map_result_type(82,2496
sp_map_item_type(105,2950
sp_get_item_value(144,3790
sp_get_flags_for_command(198,5178
sp_prepare_func_item(344,8958
sp_eval_expr(374,9635
sp_name::sp_name(438,11617
sp_name::init_qname(463,12160
check_routine_name(491,12954
sp_head::operator new(sp_head::operator new517,13407
sp_head::operator delete(sp_head::operator delete533,13808
sp_head::sp_head(553,14282
sp_head::init(593,15231
sp_head::init_sp_name(641,16046
sp_head::set_body_start(673,16940
sp_head::set_stmt_end(681,17097
create_typelib(724,18329
sp_head::~sp_head(775,19886
sp_head::create_result_field(820,20876
int cmp_splocal_locations(851,22010
subst_spvars(953,25739
void sp_head::recursion_level_error(1077,29231
find_handler_after_execution(1155,32249
sp_head::execute(1209,33739
set_routine_security_ctx(1592,47221
sp_head::execute_trigger(1654,49057
sp_head::execute_function(1792,53186
sp_head::execute_procedure(2035,60889
sp_head::reset_lex(2284,67405
sp_head::restore_lex(2334,68413
sp_head::push_backpatch(2378,69576
sp_head::backpatch(2394,69877
sp_head::fill_field_definition(2429,70687
sp_head::new_cont_backpatch(2462,71673
sp_head::add_cont_backpatch(2476,71931
sp_head::do_cont_backpatch(2483,72064
sp_head::set_info(2497,72317
sp_head::set_definer(2515,72919
sp_head::set_definer(2531,73365
sp_head::reset_thd_mem_root(2542,73706
sp_head::restore_thd_mem_root(2556,74123
bool check_show_routine_access(2600,75487
sp_head::show_create_routine(2633,76577
int sp_head::add_instr(2729,79107
void sp_head::optimize(2760,80173
void sp_head::add_mark_lead(2801,80896
sp_head::opt_mark(2810,81047
sp_head::show_routine_code(2855,82185
sp_lex_keeper::reset_lex_and_exec_core(2938,84819
int sp_instr::exec_open_and_lock_tables(3065,88973
uint sp_instr::get_cont_dest(3082,89391
int sp_instr::exec_core(3088,89447
sp_instr_stmt::execute(3099,89572
sp_instr_stmt::print(3151,91109
sp_instr_stmt::exec_core(3183,91940
sp_instr_set::execute(3203,92429
sp_instr_set::exec_core(3213,92649
sp_instr_set::print(3233,93060
sp_instr_set_trigger_field::execute(3261,93642
sp_instr_set_trigger_field::exec_core(3270,93896
sp_instr_set_trigger_field::print(3278,94067
uint sp_instr_opt_meta::get_cont_dest(3290,94314
sp_instr_jump::execute(3301,94424
sp_instr_jump::print(3311,94608
sp_instr_jump::opt_mark(3321,94796
sp_instr_jump::opt_shortcut_jump(3331,95039
sp_instr_jump::opt_move(3351,95367
sp_instr_jump_if_not::execute(3366,95616
sp_instr_jump_if_not::exec_core(3375,95854
sp_instr_jump_if_not::print(3399,96142
sp_instr_jump_if_not::opt_mark(3414,96528
sp_instr_jump_if_not::opt_move(3435,96996
sp_instr_freturn::execute(3460,97655
sp_instr_freturn::exec_core(3468,97834
sp_instr_freturn::print(3489,98328
sp_instr_hpush_jump::execute(3505,98659
sp_instr_hpush_jump::print(3520,98946
sp_instr_hpush_jump::opt_mark(3551,99722
sp_instr_hpop::execute(3588,100625
sp_instr_hpop::print(3597,100795
sp_instr_hreturn::execute(3612,101027
sp_instr_hreturn::print(3627,101267
sp_instr_hreturn::opt_mark(3643,101555
sp_instr_cpush::execute(3668,101950
sp_instr_cpush::print(3690,102443
sp_instr_cpop::execute(3716,102886
sp_instr_cpop::print(3726,103056
sp_instr_copen::execute(3746,103354
sp_instr_copen::exec_core(3781,104370
sp_instr_copen::print(3790,104537
sp_instr_cclose::execute(3816,104982
sp_instr_cclose::print(3832,105239
sp_instr_cfetch::execute(3858,105687
sp_instr_cfetch::print(3873,105961
sp_instr_error::execute(3910,106731
sp_instr_error::print(3921,106916
sp_instr_set_case_expr::execute(3936,107309
sp_instr_set_case_expr::exec_core(3945,107501
sp_instr_set_case_expr::print(3973,108137
sp_instr_set_case_expr::opt_mark(3986,108526
sp_instr_set_case_expr::opt_move(4001,108836
typedef struct st_sp_table4019,109253
  LEX_STRING qname;st_sp_table::qname4026,109424
  uint db_length,st_sp_table::db_length4027,109444
  uint db_length, table_name_length;st_sp_table::table_name_length4027,109444
  bool temp;st_sp_table::temp4028,109481
  thr_lock_type lock_type;st_sp_table::lock_type4029,109555
  uint lock_count;st_sp_table::lock_count4030,109618
  uint query_lock_count;st_sp_table::query_lock_count4031,109637
  uint8 trg_event_map;st_sp_table::trg_event_map4032,109662
} SP_TABLE;4033,109685
uchar *sp_table_key(sp_table_key4036,109699
sp_head::merge_table_list(4064,110373
sp_head::add_used_tables_to_table_list(4180,114471
sp_add_to_query_tables(4261,117202

sql/sp_pcontext.cc,796
#define PCONTEXT_ARRAY_INIT_ALLOC 26,955
#define PCONTEXT_ARRAY_INCREMENT_ALLOC 28,1051
sp_cond_check(36,1299
sp_pcontext::sp_pcontext(57,1690
sp_pcontext::sp_pcontext(85,2923
sp_pcontext::destroy(115,4298
sp_pcontext::push_context(133,4656
sp_pcontext::pop_context(143,4852
sp_pcontext::diff_handlers(162,5304
sp_pcontext::diff_cursors(180,5693
sp_pcontext::find_variable(206,6432
sp_pcontext::find_variable(235,7184
sp_pcontext::push_variable(250,7602
sp_pcontext::push_label(273,8080
sp_pcontext::find_label(289,8357
sp_pcontext::push_cond(312,8955
sp_pcontext::find_cond(328,9297
sp_pcontext::find_handler(355,9852
sp_pcontext::push_cursor(385,10359
sp_pcontext::find_cursor(400,10650
sp_pcontext::retrieve_field_definitions(424,11144
sp_pcontext::find_cursor(450,11764

sql/sp_rcontext.cc,1281
sp_rcontext::sp_rcontext(29,1038
sp_rcontext::~sp_rcontext(50,1556
bool sp_rcontext::init(67,1769
sp_rcontext::init_var_table(107,2846
sp_rcontext::init_var_items(137,3442
sp_rcontext::set_return_value(156,3791
#define IS_WARNING_CONDITION(166,3996
#define IS_NOT_FOUND_CONDITION(167,4063
#define IS_EXCEPTION_CONDITION(168,4130
sp_rcontext::find_handler(204,5398
sp_rcontext::push_cursor(294,8028
sp_rcontext::pop_cursors(304,8341
sp_rcontext::push_handler(317,8593
sp_rcontext::pop_handlers(332,8974
sp_rcontext::push_hstack(344,9191
sp_rcontext::pop_hstack(356,9430
sp_rcontext::activate_handler(377,9849
sp_rcontext::exit_handler(432,11235
Sql_condition_info* sp_rcontext::raised_condition(445,11500
sp_rcontext::set_variable(462,11819
sp_rcontext::set_variable(469,11957
sp_rcontext::get_item(482,12136
sp_rcontext::get_item_addr(489,12217
sp_cursor::sp_cursor(501,12324
sp_cursor::open(527,12762
sp_cursor::close(542,13031
sp_cursor::destroy(555,13219
sp_cursor::fetch(563,13304
sp_rcontext::create_case_expr_holder(620,14712
sp_rcontext::set_case_expr(665,16059
sp_rcontext::get_case_expr(686,16635
sp_rcontext::get_case_expr_addr(693,16738
int Select_fetch_into_spvars::prepare(703,17030
bool Select_fetch_into_spvars::send_data(714,17345

sql/sql_acl.cc,15246
bool mysql_user_table_is_in_short_password_format=54,2276
TABLE_FIELD_TYPE mysql_db_table_fields[mysql_db_table_fields57,2348
  mysql_db_table_def=171,5242
static LEX_STRING native_password_plugin_name=173,5312
static LEX_STRING old_password_plugin_name=177,5412
LEX_STRING *default_auth_plugin_name=default_auth_plugin_name182,5537
static plugin_ref old_password_plugin;185,5640
static plugin_ref native_password_plugin;187,5686
struct acl_host_and_ip191,5744
  char *hostname;acl_host_and_ip::hostname193,5769
  long ip,acl_host_and_ip::ip194,5787
  long ip, ip_mask;acl_host_and_ip::ip_mask194,5787
class ACL_ACCESS 197,5857
  ulong sort;ACL_ACCESS::sort199,5884
  ulong access;ACL_ACCESS::access200,5898
class ACL_HOST 205,5966
  acl_host_and_ip host;ACL_HOST::host208,6010
  char *db;ACL_HOST::db209,6034
class ACL_USER 212,6050
  acl_host_and_ip host;ACL_USER::host215,6094
  uint hostname_length;ACL_USER::hostname_length216,6118
  USER_RESOURCES user_resource;ACL_USER::user_resource217,6142
  char *user;ACL_USER::user218,6174
  uint8 salt[ACL_USER::salt219,6188
  uint8 salt_len;ACL_USER::salt_len220,6266
  enum SSL_type ssl_type;ACL_USER::ssl_type221,6343
  const char *ssl_cipher,ACL_USER::ssl_cipher222,6369
  const char *ssl_cipher, *x509_issuer,ACL_USER::x509_issuer222,6369
  const char *ssl_cipher, *x509_issuer, *x509_subject;ACL_USER::x509_subject222,6369
  LEX_STRING plugin;ACL_USER::plugin223,6424
  LEX_STRING auth_string;ACL_USER::auth_string224,6445
  ACL_USER *copy(ACL_USER::copy226,6472
class ACL_DB 247,7215
  acl_host_and_ip host;ACL_DB::host250,7257
  char *user,ACL_DB::user251,7281
  char *user,*db;ACL_DB::db251,7281
class ACL_PROXY_USER 263,7675
  acl_host_and_ip host;ACL_PROXY_USER::host265,7717
  const char *user;ACL_PROXY_USER::user266,7741
  acl_host_and_ip proxied_host;ACL_PROXY_USER::proxied_host267,7761
  const char *proxied_user;ACL_PROXY_USER::proxied_user268,7793
  bool with_grant;ACL_PROXY_USER::with_grant269,7821
    MYSQL_PROXIES_PRIV_HOST,ACL_PROXY_USER::MYSQL_PROXIES_PRIV_HOST272,7859
    MYSQL_PROXIES_PRIV_USER,ACL_PROXY_USER::MYSQL_PROXIES_PRIV_USER273,7889
    MYSQL_PROXIES_PRIV_PROXIED_HOST,ACL_PROXY_USER::MYSQL_PROXIES_PRIV_PROXIED_HOST274,7919
    MYSQL_PROXIES_PRIV_PROXIED_USER,ACL_PROXY_USER::MYSQL_PROXIES_PRIV_PROXIED_USER275,7956
    MYSQL_PROXIES_PRIV_WITH_GRANT,ACL_PROXY_USER::MYSQL_PROXIES_PRIV_WITH_GRANT276,7994
    MYSQL_PROXIES_PRIV_GRANTOR,ACL_PROXY_USER::MYSQL_PROXIES_PRIV_GRANTOR277,8029
    MYSQL_PROXIES_PRIV_TIMESTAMP ACL_PROXY_USER::MYSQL_PROXIES_PRIV_TIMESTAMP278,8061
    MYSQL_PROXIES_PRIV_TIMESTAMP } old_acl_proxy_users;ACL_PROXY_USER::old_acl_proxy_users278,8061
  ACL_PROXY_USER ACL_PROXY_USER::ACL_PROXY_USER280,8125
  void init(ACL_PROXY_USER::init282,8150
  void init(ACL_PROXY_USER::init299,8828
  void init(ACL_PROXY_USER::init312,9392
  bool get_with_grant(ACL_PROXY_USER::get_with_grant321,9790
  const char *get_user(ACL_PROXY_USER::get_user322,9837
  const char *get_host(ACL_PROXY_USER::get_host323,9879
  const char *get_proxied_user(ACL_PROXY_USER::get_proxied_user324,9930
  const char *get_proxied_host(ACL_PROXY_USER::get_proxied_host325,9988
  void set_user(ACL_PROXY_USER::set_user326,10055
  void set_host(ACL_PROXY_USER::set_host330,10187
  bool check_validity(ACL_PROXY_USER::check_validity337,10382
  bool matches(ACL_PROXY_USER::matches354,10994
  inline static bool auth_element_equals(ACL_PROXY_USER::auth_element_equals382,12389
  bool pk_equals(ACL_PROXY_USER::pk_equals388,12535
  bool granted_on(ACL_PROXY_USER::granted_on413,13738
  void print_grant(ACL_PROXY_USER::print_grant422,14072
  void set_data(ACL_PROXY_USER::set_data441,14724
  static int store_pk(ACL_PROXY_USER::store_pk446,14807
  static int store_data_record(ACL_PROXY_USER::store_data_record478,16458
#define FIRST_NON_YN_FIELD 502,17496
class acl_entry 504,17527
  ulong access;acl_entry::access507,17579
  uint16 length;acl_entry::length508,17595
  char key[acl_entry::key509,17612
static uchar* acl_entry_get_key(513,17663
#define IP_ADDR_STRLEN 520,17870
#define ACL_KEY_LENGTH 521,17921
#define AUTH_PACKET_HEADER_SIZE_PROTO_41 525,18091
#define AUTH_PACKET_HEADER_SIZE_PROTO_40 526,18138
static DYNAMIC_ARRAY acl_hosts,528,18187
static DYNAMIC_ARRAY acl_hosts, acl_users,528,18187
static DYNAMIC_ARRAY acl_hosts, acl_users, acl_dbs,528,18187
static DYNAMIC_ARRAY acl_hosts, acl_users, acl_dbs, acl_proxy_users;528,18187
static MEM_ROOT mem,529,18256
static MEM_ROOT mem, memex;529,18256
static bool initialized=530,18284
static bool allow_all_hosts=531,18311
static HASH acl_check_hosts,532,18342
static HASH acl_check_hosts, column_priv_hash,532,18342
static HASH acl_check_hosts, column_priv_hash, proc_priv_hash,532,18342
static HASH acl_check_hosts, column_priv_hash, proc_priv_hash, func_priv_hash;532,18342
static DYNAMIC_ARRAY acl_wild_hosts;533,18421
static hash_filo *acl_cache;acl_cache534,18458
static uint grant_version=535,18487
enum enum_acl_lists552,19345
  USER_ACL=enum_acl_lists::USER_ACL554,19367
  DB_ACL,enum_acl_lists::DB_ACL555,19382
  COLUMN_PRIVILEGES_HASH,enum_acl_lists::COLUMN_PRIVILEGES_HASH556,19392
  PROC_PRIVILEGES_HASH,enum_acl_lists::PROC_PRIVILEGES_HASH557,19418
  FUNC_PRIVILEGES_HASH,enum_acl_lists::FUNC_PRIVILEGES_HASH558,19442
  PROXY_USERS_ACLenum_acl_lists::PROXY_USERS_ACL559,19466
set_user_salt(569,19619
my_bool acl_init(603,20616
set_user_plugin 655,22106
static my_bool acl_load(697,23373
void acl_free(1071,36947
my_bool acl_reload(1111,37852
static ulong get_access(1209,40998
static ulong get_sort(1238,41668
static int acl_compare(1274,42474
bool acl_getroot(1300,42982
static uchar* check_get_key(1386,45131
static void acl_update_user(1394,45339
static void acl_insert_user(1454,47447
static void acl_update_db(1511,49555
static void acl_insert_db(1555,50508
ulong acl_get(1579,51252
static void init_check_host(1677,54058
void rebuild_check_host(1732,55955
bool acl_check_host(1742,56151
int check_change_password(1786,57192
bool change_password(1834,58416
bool is_acl_user(1951,62055
find_acl_user(1971,62401
static const char *calc_ip(calc_ip2014,63639
static void update_hostname(2033,64089
static bool compare_hostname(2045,64439
bool hostname_requires_resolving(2085,65771
static bool update_user_table(2152,67602
static bool test_if_create_new_users(2194,69101
static int replace_user_table(2224,70030
static int replace_db_table(2488,79349
acl_update_proxy_user(2594,82624
acl_insert_proxy_user(2624,83304
replace_proxies_priv_table(2637,83712
class GRANT_COLUMN 2757,87308
  char *column;GRANT_COLUMN::column2760,87355
  ulong rights;GRANT_COLUMN::rights2761,87371
  uint key_length;GRANT_COLUMN::key_length2762,87387
  GRANT_COLUMN(GRANT_COLUMN::GRANT_COLUMN2763,87406
static uchar* get_key_column(2770,87539
class GRANT_NAME 2778,87719
  acl_host_and_ip host;GRANT_NAME::host2781,87764
  char *db,GRANT_NAME::db2782,87788
  char *db, *user,GRANT_NAME::user2782,87788
  char *db, *user, *tname,GRANT_NAME::tname2782,87788
  char *db, *user, *tname, *hash_key;GRANT_NAME::hash_key2782,87788
  ulong privs;GRANT_NAME::privs2783,87826
  ulong sort;GRANT_NAME::sort2784,87841
  size_t key_length;GRANT_NAME::key_length2785,87855
  virtual ~GRANT_NAME(GRANT_NAME::~GRANT_NAME2789,88033
  virtual bool ok(GRANT_NAME::ok2790,88061
class GRANT_TABLE 2797,88259
  ulong cols;GRANT_TABLE::cols2800,88306
  HASH hash_columns;GRANT_TABLE::hash_columns2801,88320
  bool ok(GRANT_TABLE::ok2807,88513
void GRANT_NAME::set_user_details(2811,88566
GRANT_NAME::GRANT_NAME(2836,89347
GRANT_TABLE::GRANT_TABLE(2843,89556
GRANT_NAME::GRANT_NAME(2852,89848
GRANT_TABLE::GRANT_TABLE(2883,90734
GRANT_TABLE::~GRANT_TABLE(2959,93303
static uchar* get_grant_table(2965,93368
void free_grant_table(2973,93550
static GRANT_NAME *name_hash_search(name_hash_search2981,93728
routine_hash_search(3023,95125
table_hash_search(3033,95434
column_hash_search(3042,95691
static int replace_column_table(3049,95887
static inline void get_grantor(3247,102385
static int replace_table_table(3262,102757
static int replace_routine_table(3388,106795
int mysql_table_grant(3521,110634
bool mysql_routine_grant(3821,119967
bool mysql_grant(3983,124672
void  grant_free(4142,129347
my_bool grant_init(4162,129809
static my_bool grant_load_procs_priv(4195,130494
static my_bool grant_load(4294,133344
static my_bool grant_reload_procs_priv(4382,135745
my_bool grant_reload(4437,137242
bool check_grant(4545,140760
bool check_grant_column(4703,145806
bool check_column_grant_in_table_ref(4774,147882
bool check_grant_all_columns(4837,149909
static bool check_grant_db_routine(4922,152336
bool check_grant_db(4948,152948
bool check_grant_routine(5010,154723
bool check_routine_level_acl(5075,156358
ulong get_table_grant(5096,157192
ulong get_column_grant(5138,158333
static void add_user_option(5176,159478
static const char *command_array[command_array5189,159779
static uint command_lengths[command_lengths5199,160213
bool mysql_show_grants(5218,160693
static int show_routine_grants(5584,171341
void get_privilege_desc(5674,173885
void get_mqh(5698,174364
#define GRANT_TABLES 5733,175139
int open_grant_tables(5734,175162
ACL_USER *check_acl_user(check_acl_user5796,177539
static int modify_grant_table(5843,178729
static int handle_grant_table(5906,180710
static int handle_grant_struct(6054,185947
static int handle_grant_data(6313,193389
static void append_user(6466,197474
bool mysql_create_user(6491,197946
bool mysql_drop_user(6580,200270
bool mysql_rename_user(6665,202557
bool mysql_revoke_all(6761,205260
class Silence_routine_definer_errors 6955,210198
  Silence_routine_definer_errors(Silence_routine_definer_errors::Silence_routine_definer_errors6958,210277
  virtual ~Silence_routine_definer_errors(Silence_routine_definer_errors::~Silence_routine_definer_errors6962,210340
  bool has_errors(Silence_routine_definer_errors::has_errors6972,210713
  bool is_grave;Silence_routine_definer_errors::is_grave6975,210764
Silence_routine_definer_errors::handle_condition(6979,210790
bool sp_revoke_privileges(7023,211738
bool sp_grant_privileges(7106,214119
acl_find_proxy_user(7230,217996
acl_check_proxy_grant_access(7259,218831
show_proxy_grants(7324,221084
int wild_case_compare(7354,221836
static bool update_schema_privilege(7399,223022
int fill_schema_user_privileges(7423,223973
int fill_schema_schema_privileges(7498,225951
int fill_schema_table_privileges(7576,227999
int fill_schema_column_privileges(7660,230356
void fill_effective_table_privileges(7754,233047
bool check_routine_level_acl(7810,234897
struct ACL_internal_schema_registry_entry7818,235042
  const LEX_STRING *m_name;ACL_internal_schema_registry_entry::m_name7820,235086
  const ACL_internal_schema_access *m_access;ACL_internal_schema_registry_entry::m_access7821,235114
static ACL_internal_schema_registry_entry registry_array[registry_array7832,235317
static uint m_registry_array_size=7833,235378
void ACL_internal_schema_registry::register_schema7840,235542
ACL_internal_schema_registry::lookup(7857,236076
get_cached_schema_access(7878,236565
get_cached_table_access(7901,237276
#undef HAVE_OPENSSL7927,238299
#define initialized 7929,238352
#define ssl_acceptor_fd 7933,238409
#define sslaccept(7934,238435
class Thd_charset_adapter7938,238471
  THD *thd;Thd_charset_adapter::thd7940,238499
  Thd_charset_adapter(Thd_charset_adapter::Thd_charset_adapter7942,238519
  bool init_client_charset(Thd_charset_adapter::init_client_charset7943,238575
  CHARSET_INFO *charset(Thd_charset_adapter::charset7951,238750
struct MPVIO_EXT 7959,238934
  MYSQL_SERVER_AUTH_INFO auth_info;MPVIO_EXT::auth_info7961,238978
  const ACL_USER *acl_user;MPVIO_EXT::acl_user7962,239014
  plugin_ref plugin;MPVIO_EXT::plugin7963,239042
  LEX_STRING db;MPVIO_EXT::db7964,239099
    char *plugin,MPVIO_EXT::plugin7967,239245
    char *plugin, *pkt;MPVIO_EXT::pkt7967,239245
    uint pkt_len;MPVIO_EXT::pkt_len7968,239302
  } cached_client_reply;MPVIO_EXT::cached_client_reply7969,239320
    char *pkt;MPVIO_EXT::pkt7972,239435
    uint pkt_len;MPVIO_EXT::pkt_len7973,239450
  } cached_server_packet;MPVIO_EXT::cached_server_packet7974,239468
  int packets_read,MPVIO_EXT::packets_read7975,239494
  int packets_read, packets_written;MPVIO_EXT::packets_written7975,239494
  uint connect_errors;MPVIO_EXT::connect_errors7976,239571
  enum { SUCCESS,MPVIO_EXT::SUCCESS7978,239721
  enum { SUCCESS, FAILURE,MPVIO_EXT::FAILURE7978,239721
  enum { SUCCESS, FAILURE, RESTART MPVIO_EXT::RESTART7978,239721
  enum { SUCCESS, FAILURE, RESTART } status;MPVIO_EXT::status7978,239721
  ulong client_capabilities;MPVIO_EXT::client_capabilities7981,239797
  char *scramble;MPVIO_EXT::scramble7982,239826
  MEM_ROOT *mem_root;MPVIO_EXT::mem_root7983,239844
  struct  rand_struct *rand;MPVIO_EXT::rand7984,239866
  my_thread_id  thread_id;MPVIO_EXT::thread_id7985,239895
  uint      *server_status;MPVIO_EXT::server_status7986,239922
  NET *net;MPVIO_EXT::net7987,239950
  ulong max_client_packet_length;MPVIO_EXT::max_client_packet_length7988,239962
  char *ip;MPVIO_EXT::ip7989,239996
  char *host;MPVIO_EXT::host7990,240008
  Thd_charset_adapter *charset_adapter;MPVIO_EXT::charset_adapter7991,240022
  LEX_STRING acl_user_plugin;MPVIO_EXT::acl_user_plugin7992,240062
static void login_failed_error(7998,240181
static bool send_server_handshake_packet(8071,242828
static bool secure_auth(8168,246034
static bool send_plugin_request_packet(8217,247544
static bool find_mpvio_user(8306,251059
static bool parse_com_change_user_packet(8369,253673
typedef char * (*get_proto_string_func_t)get_proto_string_func_t8505,257946
char *get_41_protocol_string(get_41_protocol_string8528,258831
char *get_40_protocol_string(get_40_protocol_string8564,259991
char *get_length_encoded_string(get_length_encoded_string8613,261300
static ulong parse_client_handshake_packet(8651,262249
wrap_plguin_data_into_proper_command(9036,274628
static int server_mpvio_write_packet(9053,275216
static int server_mpvio_read_packet(9091,276688
static void server_mpvio_info(9185,279348
static bool acl_check_ssl(9193,279575
static int do_auth_once(9300,283135
server_mpvio_initialize(9354,284747
server_mpvio_update_thd(9383,285761
acl_authenticate(9409,286822
static int native_password_authenticate(9688,296114
static int old_password_authenticate(9769,298958
static struct st_mysql_auth native_password_handler=9823,300462
static struct st_mysql_auth old_password_handler=9830,300629
mysql_declare_plugin(9837,300787
  MYSQL_AUTHENTICATION_PLUGIN,9854,301754
  &old_password_handler,old_password_handler9855,301825
  old_password_plugin_name.str,str9856,301896
  PLUGIN_LICENSE_GPL,9859,302109
  NULL,9860,302180
  NULL,9861,302251
  0x0100,x01009862,302322
  NULL,9863,302393
  NULL,9864,302464
  NULL,9865,302535
mysql_declare_plugin_end;9868,302679

sql/sql_admin.cc,443
static int send_check_errmsg(32,1647
static int prepare_for_repair(49,2143
static inline bool table_not_corrupt_error(244,8407
static bool mysql_admin_table(261,8925
bool mysql_assign_to_keycache(921,33112
bool mysql_preload_keys(962,34159
bool Analyze_table_statement::execute(976,34602
bool Check_table_statement::execute(1006,35567
bool Optimize_table_statement::execute(1030,36311
bool Repair_table_statement::execute(1061,37361

sql/sql_alter.cc,130
bool Alter_table_statement::execute(21,964
Alter_table_ctx::Alter_table_ctx(111,4553
Alter_table_ctx::Alter_table_ctx(123,4811

sql/sql_analyse.cc,1436
#define MYSQL_LEX 30,1089
#define MAX_TREEMEM	37,1202
#define MAX_TREE_ELEMENTS 38,1229
int sortcmp2(40,1260
int compare_double2(46,1392
int compare_longlong2(52,1526
int compare_ulonglong2(58,1670
int compare_decimal2(64,1819
proc_analyse_init(71,1927
bool test_if_number(187,5098
bool get_ev_num_info(278,7886
void free_string(299,8569
void field_str::add(305,8616
void field_real::add(395,10867
void field_decimal::add(478,12823
void field_longlong::add(555,14788
void field_ulonglong::add(611,16076
int analyse::send_row(667,17393
int analyse::end_of_records(681,17574
void field_str::get_opt_type(803,21552
void field_real::get_opt_type(886,24346
void field_longlong::get_opt_type(939,26237
void field_ulonglong::get_opt_type(970,27439
void field_decimal::get_opt_type(995,28413
String *field_decimal::get_min_arg(field_decimal::get_min_arg1014,28985
String *field_decimal::get_max_arg(field_decimal::get_max_arg1021,29119
String *field_decimal::avg(field_decimal::avg1028,29253
String *field_decimal::std(field_decimal::std1049,29966
int collect_string(1073,30793
int collect_real(1089,31122
int collect_decimal(1107,31564
int collect_longlong(1129,32118
int collect_ulonglong(1148,32547
bool analyse::change_columns(1167,32981
int compare_double(1192,33932
int compare_longlong(1197,34056
 int compare_ulonglong(1202,34188
uint check_ulonglong(1208,34326
bool append_escaped(1260,35437

sql/sql_audit.cc,1524
struct st_mysql_event_generic24,934
  unsigned int event_class;st_mysql_event_generic::event_class26,966
  const void *event;st_mysql_event_generic::event27,994
unsigned long mysql_global_audit_mask[mysql_global_audit_mask30,1019
static mysql_mutex_t LOCK_audit_mask;32,1088
void set_audit_mask(39,1265
void add_audit_mask(46,1383
bool check_audit_mask(52,1489
typedef void (*audit_handler_t)audit_handler_t59,1620
static void general_class_handler(71,1830
static void connection_class_handler(90,2628
static audit_handler_t audit_handlers[audit_handlers114,3585
static const uint audit_handlers_count=119,3683
static my_bool acquire_plugins(133,3930
void mysql_audit_acquire_plugins(179,5421
void mysql_audit_notify(204,6096
void mysql_audit_release(223,6524
void mysql_audit_init_thd(261,7502
void mysql_audit_free_thd(278,7803
static PSI_mutex_key key_LOCK_audit_mask;286,7998
static PSI_mutex_info all_audit_mutexes[all_audit_mutexes288,8041
static void init_audit_psi_keys(293,8152
void mysql_audit_initialize(310,8465
void mysql_audit_finalize(325,8750
int initialize_audit_plugin(340,8944
static my_bool calc_class_mask(380,9918
int finalize_audit_plugin(397,10314
static my_bool plugins_dispatch(439,11412
static void event_class_dispatch(466,12143
void mysql_audit_acquire_plugins(497,13007
void mysql_audit_initialize(502,13074
void mysql_audit_finalize(507,13110
int initialize_audit_plugin(512,13144
int finalize_audit_plugin(518,13213
void mysql_audit_release(524,13280

sql/sql_backup.cc,482
ulong backup_throttle 7,114
struct backup_poll 9,150
    THD *thd;backup_poll::thd10,171
    char *the_string;backup_poll::the_string11,185
    size_t len;backup_poll::len12,207
    backup_poll(backup_poll::backup_poll13,223
    ~backup_poll(backup_poll::~backup_poll14,285
static int mysql_backup_poll_fun(22,486
static void mysql_error_fun(44,1341
int sql_backups(49,1640
void sql_backup_throttle(62,2380
const char *tokubackup_version tokubackup_version66,2468

sql/sql_base.cc,7385
No_such_table_error_handler::handle_condition(63,2464
bool No_such_table_error_handler::safely_trapped_errors(82,2999
class Repair_mrg_table_error_handler 99,3475
  Repair_mrg_table_error_handler(Repair_mrg_table_error_handler::Repair_mrg_table_error_handler102,3554
  bool safely_trapped_errors(Repair_mrg_table_error_handler::safely_trapped_errors117,4054
  bool m_handled_errors;Repair_mrg_table_error_handler::m_handled_errors130,4464
  bool m_unhandled_errors;Repair_mrg_table_error_handler::m_unhandled_errors131,4489
Repair_mrg_table_error_handler::handle_condition(136,4526
mysql_mutex_t LOCK_open;165,5362
static PSI_mutex_key key_LOCK_open;168,5414
static PSI_mutex_info all_tdc_mutexes[all_tdc_mutexes169,5450
static void init_tdc_psi_keys(178,5638
uint  table_cache_count=197,6099
TABLE *unused_tables;unused_tables204,6412
HASH table_def_cache;205,6434
static TABLE_SHARE *oldest_unused_share,oldest_unused_share206,6456
static TABLE_SHARE *oldest_unused_share, end_of_unused_share;206,6456
static bool table_def_inited=207,6518
static bool table_def_shutdown_in_progress=208,6551
uint cached_open_tables(221,7160
static void check_unused(228,7243
#define check_unused(286,8976
uint create_table_def_key(315,9532
extern "C" uchar *table_def_key(table_def_key337,10231
static void table_def_free_entry(346,10511
bool table_def_init(361,10833
void table_def_start_shutdown(384,11517
void table_def_free(403,12107
uint cached_table_definitions(417,12355
static void table_def_add_used_table(438,12875
static void table_def_remove_table(451,13158
static void table_def_use_table(482,13806
static void table_def_unuse_table(512,14759
TABLE_SHARE *get_table_share(get_table_share563,16059
get_table_share_with_discover(672,19382
void release_table_share(765,22202
TABLE_SHARE *get_cached_table_share(get_cached_table_share816,23503
OPEN_TABLE_LIST *list_open_tables(list_open_tables846,24318
void intern_close_table(902,26100
static void free_cache_entry(928,26792
void free_io_cache(943,27099
static void kill_delayed_threads_for_table(965,27524
bool close_cached_tables(1012,29065
bool close_cached_connection_tables(1193,34456
static void mark_temp_tables_as_free_for_reuse(1250,36206
void mark_tmp_table_for_reuse(1268,36605
static void mark_used_tables_as_free_for_reuse(1326,38602
static void close_open_tables(1349,39112
close_all_tables_for_name(1380,40027
void close_thread_tables(1443,42062
bool close_thread_table(1571,46194
static inline uint  tmpkeyval(1627,47892
bool close_temporary_tables(1638,48197
TABLE_LIST *find_table_in_list(find_table_in_list1815,53787
TABLE_LIST* find_dup_table(1865,55813
unique_table(1964,58907
void update_non_unique_table_error(1998,59852
TABLE *find_temporary_table(find_temporary_table2048,61593
TABLE *find_temporary_table(find_temporary_table2066,61977
TABLE *find_temporary_table(find_temporary_table2081,62351
int drop_temporary_table(2129,64062
void close_temporary_table(2162,64974
void close_temporary(2208,66282
bool rename_temporary_table(2236,67081
bool wait_while_table_is_used(2273,68267
void drop_open_table(2314,69908
bool check_if_table_exists(2357,71333
class MDL_deadlock_handler 2400,72546
  MDL_deadlock_handler(MDL_deadlock_handler::MDL_deadlock_handler2403,72615
  virtual ~MDL_deadlock_handler(MDL_deadlock_handler::~MDL_deadlock_handler2407,72723
  Open_table_context *m_ot_ctx;MDL_deadlock_handler::m_ot_ctx2418,73154
  bool m_is_active;MDL_deadlock_handler::m_is_active2424,73382
bool MDL_deadlock_handler::handle_condition(2428,73407
open_table_get_mdl_lock(2483,75666
tdc_wait_for_old_version(2599,80546
bool open_table(2658,82879
TABLE *find_locked_table(find_locked_table3167,99911
TABLE *find_table_for_mdl_upgrade(find_table_for_mdl_upgrade3203,101039
Locked_tables_list::init_locked_tables(3258,102616
Locked_tables_list::unlock_locked_tables(3338,105409
void Locked_tables_list::unlink_from_list(3405,107464
unlink_all_closed_tables(3453,109024
Locked_tables_list::reopen_tables(3511,110818
static ulong last_table_id=3597,113598
void assign_new_table_id(3599,113633
static bool inject_reprepare(3626,114318
check_and_update_table_version(3671,115899
check_and_update_routine_version(3723,117786
bool tdc_open_view(3773,119488
static bool open_table_entry_fini(3818,120887
static bool auto_repair_table(3868,122570
Open_table_context::Open_table_context(3944,124784
request_backoff_action(3966,125425
recover_from_failed_open(4059,129360
thr_lock_type read_lock_type_for_table(4154,133167
open_and_process_routine(4203,135458
open_and_process_table(4351,141697
extern "C" uchar *schema_set_get_key(schema_set_get_key4599,150173
lock_table_names(4625,151153
open_tables_check_upgradable_mdl(4708,153850
bool open_tables(4781,156856
handle_routine(5061,167076
handle_table(5109,168840
handle_view(5147,169973
handle_table(5178,170944
handle_routine(5202,171742
handle_table(5228,172519
handle_view(5243,172917
static bool check_lock_and_start_stmt(5261,173324
TABLE *open_n_lock_single_table(open_n_lock_single_table5339,176165
TABLE *open_ltable(open_ltable5392,177626
bool open_and_lock_tables(5497,180762
bool open_normal_and_derived_tables(5563,182692
static void mark_real_tables_as_free_for_reuse(5605,184015
bool lock_tables(5647,185330
void close_tables_for_reopen(5866,193486
TABLE *open_table_uncached(open_table_uncached5929,195943
bool rm_temporary_table(6013,198981
Field *not_found_field=not_found_field6045,200269
Field *view_ref_found=view_ref_found6046,200307
#define WRONG_GRANT 6048,200346
static void update_field_dependencies(6050,200379
find_field_in_view(6122,202621
find_field_in_natural_join(6209,205800
find_field_in_table(6337,209903
find_field_in_table_ref(6437,213571
Field *find_field_in_table_sef(find_field_in_table_sef6598,219372
find_field_in_tables(6664,221800
Item **not_found_item=not_found_item6893,229897
find_item_in_list(6897,229944
test_if_string_in_list(7131,237852
set_new_item_local_context(7167,238755
mark_common_columns(7212,240339
store_natural_using_join_columns(7454,249451
store_top_level_join_columns(7578,253575
static bool setup_natural_join_row_types(7741,259760
int setup_wild(7801,261921
bool setup_fields(7887,264728
TABLE_LIST **make_leaves_list(make_leaves_list7979,268134
bool setup_tables(8026,269622
bool setup_tables_and_check_access(8121,272698
bool get_key_map_from_key_list(8169,274000
insert_fields(8214,275192
int setup_conds(8442,283045
fill_record(8566,286766
fill_record_n_invoke_before_triggers(8645,288893
fill_record(8677,289845
fill_record_n_invoke_before_triggers(8740,291504
my_bool mysql_rm_tmp_tables(8751,291976
void tdc_flush_unused_tables(8837,294586
bool mysql_notify_thread_having_shared_lock(8874,295785
void tdc_remove_table(8942,298725
int setup_ftfuncs(9010,300708
int init_ftfuncs(9032,301132
open_new_frm(9068,302061
bool is_equal(9113,303320
has_write_table_with_auto_increment(9134,303874
has_write_table_with_auto_increment_and_select(9166,304630
has_write_table_auto_increment_not_first_in_pk(9193,305327
open_system_tables_for_read(9235,306529
close_system_tables(9285,308139
close_mysql_tables(9316,309050
open_system_table_for_update(9341,309611
open_log_table(9368,310432
void close_log_table(9408,311728

sql/sql_binlog.cc,44
void mysql_client_binlog_statement(45,2002

sql/sql_cache.cc,5901
#define RW_WLOCK(352,14160
#define RW_RLOCK(355,14376
#define RW_UNLOCK(358,14593
#define BLOCK_LOCK_WR(361,14813
#define BLOCK_LOCK_RD(364,14938
#define BLOCK_UNLOCK_WR(367,15063
#define BLOCK_UNLOCK_RD(370,15194
#define DUMP(373,15325
#define RW_WLOCK(376,15436
#define RW_RLOCK(377,15479
#define RW_UNLOCK(378,15522
#define BLOCK_LOCK_WR(379,15566
#define BLOCK_LOCK_RD(380,15618
#define BLOCK_UNLOCK_WR(381,15670
#define BLOCK_UNLOCK_RD(382,15726
#define DUMP(383,15782
#define QC_DEBUG_SYNC(392,15967
#define QC_DEBUG_SYNC(399,16207
struct Query_cache_wait_state408,16397
  THD *m_thd;Query_cache_wait_state::m_thd410,16429
  const char *m_proc_info;Query_cache_wait_state::m_proc_info411,16443
  Query_cache_wait_state(Query_cache_wait_state::Query_cache_wait_state413,16471
  ~Query_cache_wait_state(Query_cache_wait_state::~Query_cache_wait_state424,16817
bool Query_cache::try_lock(450,17505
void Query_cache::lock_and_suspend(520,19454
void Query_cache::lock(549,20350
void Query_cache::unlock(573,20950
static bool has_no_cache_directive(603,21801
inline Query_cache_block * Query_cache_block_table::block(632,22904
void Query_cache_block::init(643,23315
void Query_cache_block::destroy(655,23608
inline uint Query_cache_block::headers_len(664,23813
inline uchar* Query_cache_block::data(670,23971
inline Query_cache_query * Query_cache_block::query(675,24073
inline Query_cache_table * Query_cache_block::table(684,24273
inline Query_cache_result * Query_cache_block::result(693,24473
inline Query_cache_block_table * Query_cache_block::table(703,24748
uchar *query_cache_table_get_key(query_cache_table_get_key717,25178
inline void Query_cache_query::lock_writing(740,26003
my_bool Query_cache_query::try_lock_writing(753,26287
inline void Query_cache_query::lock_reading(766,26589
inline void Query_cache_query::unlock_writing(772,26660
inline void Query_cache_query::unlock_reading(778,26734
void Query_cache_query::init_n_lock(784,26808
void Query_cache_query::unlock_n_destroy(797,27196
uchar *query_cache_query_get_key(query_cache_query_get_key815,27664
void query_cache_insert(863,29555
Query_cache::insert(889,30145
Query_cache::abort(950,31896
void Query_cache::end_of_result(984,32791
void query_cache_invalidate_by_MyISAM_filename(1062,35141
void mysql_query_cache_invalidate4(1073,35412
Query_cache::Query_cache(1085,35846
ulong Query_cache::resize(1109,36848
ulong Query_cache::set_min_res_unit(1157,38043
void Query_cache::store_query(1165,38213
send_data_in_chunks(1390,46077
Query_cache::send_result_to_client(1443,47850
void Query_cache::invalidate(1802,60765
void Query_cache::invalidate(1833,61692
void Query_cache::invalidate_locked_for_write(1862,62461
void Query_cache::invalidate(1885,63028
void Query_cache::invalidate(1903,63492
void Query_cache::invalidate(1924,64050
void Query_cache::invalidate_by_MyISAM_filename(1998,66180
void Query_cache::flush(2013,66636
void Query_cache::pack(2045,67280
void Query_cache::destroy(2076,67794
void Query_cache::init(2102,68385
ulong Query_cache::init_cache(2124,69100
void Query_cache::make_disabled(2300,75117
void Query_cache::free_cache(2328,75719
void Query_cache::flush_cache(2357,76677
my_bool Query_cache::free_old_query(2374,77011
void Query_cache::free_query_internal(2431,78472
void Query_cache::free_query(2501,80207
Query_cache::write_block_data(2519,80755
Query_cache::append_result_data(2547,81633
my_bool Query_cache::write_result_data(2625,84376
inline ulong Query_cache::get_min_first_result_data_size(2698,86675
inline ulong Query_cache::get_min_append_result_data_size(2707,87012
my_bool Query_cache::allocate_data_chain(2715,87157
void Query_cache::invalidate_table(2780,89143
void Query_cache::invalidate_table(2797,89616
void Query_cache::invalidate_table(2803,89798
Query_cache::invalidate_table_internal(2831,90489
Query_cache::invalidate_query_block_list(2855,91141
Query_cache::register_tables_from_list(2882,91886
my_bool Query_cache::register_all_tables(2984,95441
Query_cache::insert_table(3018,96231
void Query_cache::unlink_table(3123,99519
Query_cache::allocate_block(3158,100751
Query_cache::get_free_block(3190,101629
void Query_cache::free_memory_block(3266,103582
void Query_cache::split_block(3285,104260
Query_cache::join_free_blocks(3313,105021
my_bool Query_cache::append_next_free_block(3338,105763
void Query_cache::exclude_from_free_memory_list(3366,106589
void Query_cache::insert_into_free_memory_list(3380,107078
uint Query_cache::find_bin(3398,107722
void Query_cache::move_to_query_list_end(3430,108579
void Query_cache::insert_into_free_memory_sorted_list(3439,108858
Query_cache::double_linked_list_simple_include(3486,109995
Query_cache::double_linked_list_exclude(3506,110540
void Query_cache::double_linked_list_join(3528,111122
Query_cache::process_and_count_tables(3558,111932
Query_cache::is_cacheable(3654,115302
my_bool Query_cache::ask_handler_allowance(3706,116970
void Query_cache::pack_cache(3745,118171
my_bool Query_cache::move_by_type(3786,119119
void Query_cache::relink(4023,127650
my_bool Query_cache::join_results(4050,128251
uint Query_cache::filename_2_table_key 4122,130527
void wreck(4150,131683
void bins_dump(4151,131752
void cache_dump(4152,131772
void queries_dump(4153,131793
void tables_dump(4154,131816
my_bool check_integrity(4155,131838
my_bool in_list(4156,131893
my_bool in_blocks(4158,131995
void Query_cache::wreck(4173,132284
void Query_cache::bins_dump(4192,132859
void Query_cache::cache_dump(4235,134163
void Query_cache::queries_dump(4261,134899
void Query_cache::tables_dump(4327,137107
my_bool Query_cache::check_integrity(4362,137991
my_bool Query_cache::in_blocks(4623,145118
my_bool Query_cache::in_list(4678,146582
void dump_node(4735,148138
my_bool Query_cache::in_table_list(4747,148578

sql/sql_class.cc,11362
char internal_table_name[internal_table_name68,2382
char empty_c_string[empty_c_string69,2416
const char * const THD::DEFAULT_WHERE=71,2479
extern "C" uchar *get_var_key(get_var_key94,3262
extern "C" void free_user_var(101,3474
bool Key_part_spec::operator==(Key_part_spec::operator==109,3675
Key::Key(123,4089
Foreign_key::Foreign_key(140,4541
bool foreign_key_prefix(166,5181
void *thd_get_scheduler_data(thd_get_scheduler_data229,6808
void thd_set_scheduler_data(240,7041
PSI_thread *thd_get_psi(thd_get_psi252,7297
ulong thd_get_net_wait_timeout(264,7514
void thd_set_psi(275,7766
void thd_set_killed(285,7930
void thd_clear_errors(295,8084
void thd_set_thread_stack(307,8307
void thd_lock_thread_count(318,8534
void thd_unlock_thread_count(329,8746
void thd_close_connection(340,8963
THD *thd_get_current_thd(thd_get_current_thd351,9184
void thd_new_connection_setup(364,9436
void thd_lock_data(388,10171
void thd_unlock_data(398,10346
bool thd_is_transaction_active(410,10627
int thd_connection_has_data(420,10837
void thd_set_net_read_write(432,11110
uint thd_get_net_read_write(443,11373
void thd_set_mysys_var(454,11588
my_socket thd_get_fd(466,11830
int thd_store_globals(478,12088
pthread_attr_t *get_connection_attrib(get_connection_attrib488,12279
ulong get_max_connections(498,12458
extern "C" int mysql_tmpfile(507,12584
int thd_in_lock_tables(533,13280
int thd_tablespace_op(540,13372
const char *set_thd_proc_info(set_thd_proc_info547,13462
const char* thd_enter_cond(569,14098
void thd_exit_cond(579,14321
void **thd_ha_data(thd_ha_data589,14464
void thd_storage_lock_wait(595,14599
void *thd_get_ha_data(thd_get_ha_data604,14760
void thd_set_ha_data(615,14986
long long thd_test_options(631,15368
int thd_sql_command(637,15503
int thd_tx_isolation(643,15593
void thd_inc_row_count(649,15680
char *thd_security_context(thd_security_context674,16345
bool Drop_table_error_handler::handle_condition(766,19129
THD::THD(779,19674
void THD::push_internal_handler(923,23877
bool THD::handle_condition(936,24120
Internal_error_handler *THD::pop_internal_handler(THD::pop_internal_handler963,24756
void THD::raise_error(972,25011
void THD::raise_error_printf(981,25242
void THD::raise_warning(998,25758
void THD::raise_warning_printf(1007,25990
void THD::raise_note(1024,26502
void THD::raise_note_printf(1038,26905
MYSQL_ERROR* THD::raise_condition(1057,27480
void *thd_alloc(thd_alloc1147,29958
void *thd_calloc(thd_calloc1153,30051
char *thd_strdup(thd_strdup1159,30146
char *thd_strmake(thd_strmake1165,30238
LEX_STRING *thd_make_lex_string(thd_make_lex_string1171,30357
void *thd_memdup(thd_memdup1180,30670
void thd_get_xid(1186,30787
extern "C"   THD *_current_thd_noinline(_current_thd_noinline1192,30917
void THD::init(1201,31105
void THD::init_for_queries(1245,32468
void THD::change_user(1271,33057
void THD::cleanup(1292,33585
THD::~THD(1353,35190
void add_to_status(1420,36667
void add_diff_to_status(1447,37353
void THD::awake(1473,38069
void THD::disconnect(1575,42132
bool THD::store_globals(1606,42785
bool THD::restore_globals(1646,44075
void THD::cleanup_after_query(1678,44777
make_lex_string_root(1739,46948
LEX_STRING *THD::make_lex_string(THD::make_lex_string1762,47760
bool THD::convert_string(1791,48535
bool THD::convert_string(1825,49362
void THD::update_charset(1845,49881
inline static void list_include(1868,50702
void THD::add_changed_table(1881,50963
void THD::add_changed_table(1892,51276
CHANGED_TABLE_LIST* THD::changed_table_dup(1934,52473
int THD::send_explain_fields(1955,53076
void THD::close_active_vio(2000,54953
struct Item_change_record:Item_change_record2016,55198
  Item **place;Item_change_record::place2018,55240
  Item *old_value;Item_change_record::old_value2019,55256
  static void *operator new(Item_change_record::operator new2021,55341
  static void operator delete(Item_change_record::operator delete2022,55409
  static void operator delete(Item_change_record::operator delete2023,55466
void THD::nocheck_register_item_tree_change(2033,55768
void THD::rollback_item_tree_changes(2058,56517
select_result::select_result(2076,57090
void select_result::send_error(2081,57145
void select_result::cleanup(2087,57248
bool select_result::check_simple_select(2092,57302
sql_exchange::sql_exchange(2104,57662
bool sql_exchange::escaped_given(2117,58092
bool select_send::send_result_set_metadata(2123,58175
void select_send::abort_result_set(2131,58378
void select_send::cleanup(2158,59151
bool select_send::send_data(2165,59260
bool select_send::send_eof(2198,59972
void select_to_file::send_error(2223,60617
bool select_to_file::send_eof(2237,60916
void select_to_file::cleanup(2252,61153
select_to_file::~select_to_file(2266,61407
select_export::~select_export(2280,61783
static File create_file(2302,62057
select_export::prepare(2354,63515
#define NEED_ESCAPING(2446,67001
bool select_export::send_data(2452,67330
select_dump::prepare(2702,75816
bool select_dump::send_data(2710,75994
select_subselect::select_subselect(2749,76825
bool select_singlerow_subselect::send_data(2755,76910
void select_max_min_finder_subselect::cleanup(2778,77512
bool select_max_min_finder_subselect::send_data(2786,77656
bool select_max_min_finder_subselect::cmp_real(2831,78712
bool select_max_min_finder_subselect::cmp_int(2844,79162
bool select_max_min_finder_subselect::cmp_decimal(2857,79611
bool select_max_min_finder_subselect::cmp_str(2871,80161
bool select_exists_subselect::send_data(2890,80835
int select_dumpvar::prepare(2909,81379
bool select_dumpvar::check_simple_select(2924,81659
void select_dumpvar::cleanup(2931,81774
Query_arena::Type Query_arena::type(2937,81827
void Query_arena::free_items(2944,81944
void Query_arena::set_query_arena(2959,82260
void Query_arena::cleanup_stmt(2967,82396
Statement::Statement(2976,82527
Query_arena::Type Statement::type(2989,82810
void Statement::set_statement(2995,82878
Statement::set_n_backup_statement(3005,83079
void Statement::restore_backup_statement(3014,83280
void THD::end_statement(3023,83490
void THD::set_n_backup_active_arena(3038,83832
void THD::restore_active_arena(3052,84145
Statement::~Statement(3064,84438
get_statement_id_as_hash_key(3071,84496
static void delete_statement_as_hash_key(3079,84796
static uchar *get_stmt_name_hash_key(get_stmt_name_hash_key3084,84881
Statement_map::Statement_map(3093,85113
    START_STMT_HASH_SIZE ::START_STMT_HASH_SIZE3098,85185
    START_NAME_HASH_SIZE ::START_NAME_HASH_SIZE3099,85216
int Statement_map::insert(3131,86413
void Statement_map::close_transient_cursors(3179,87791
void Statement_map::erase(3189,88018
void Statement_map::reset(3204,88434
Statement_map::~Statement_map(3218,88805
bool select_dumpvar::send_data(3230,89150
bool select_dumpvar::send_eof(3276,90348
void TMP_TABLE_PARAM::init(3296,90894
void thd_increment_bytes_sent(3309,91222
void thd_increment_bytes_received(3319,91437
void thd_increment_net_big_packet_count(3325,91542
void THD::set_status_var_init(3331,91659
void Security_context::init(3337,91747
void Security_context::destroy(3349,91988
void Security_context::skip_grants(3374,92303
bool Security_context::set_user(3383,92499
change_security_context(3442,94745
Security_context::restore_security_context(3476,95714
bool Security_context::user_matches(3485,95894
void THD::reset_n_backup_open_tables_state(3500,96473
void THD::restore_backup_open_tables_state(3511,96804
extern "C" int thd_killed(3535,97547
extern "C" unsigned long thd_get_thread_id(3545,97714
extern "C" struct charset_info_st *thd_charset(thd_charset3552,97859
extern "C" char **thd_query(thd_query3561,98061
extern "C" LEX_STRING * thd_query_string 3572,98312
extern "C" int thd_slave_thread(3577,98411
extern "C" int thd_non_transactional_update(3582,98498
extern "C" int thd_binlog_format(3587,98625
extern "C" void thd_mark_transaction_to_rollback(3595,98851
extern "C" bool thd_binlog_filter_ok(3600,98972
extern "C" bool thd_sqlcom_can_generate_row_events(3605,99075
extern "C" void thd_wait_begin(3635,100243
extern "C" void thd_wait_end(3646,100527
extern "C" void thd_wait_begin(3651,100638
extern "C" void thd_wait_end(3657,100758
void THD::reset_sub_statement_state(3694,102236
void THD::restore_sub_statement_state(3746,104047
void THD::set_statement(3809,106285
void THD::set_query(3819,106483
void THD::set_query_and_id(3828,106705
void THD::set_query_id(3840,107074
void THD::set_mysys_var(3848,107273
void THD::leave_locked_tables_mode(3860,107561
void THD::get_definer(3882,108313
void mark_transaction_to_rollback(3910,108969
mysql_mutex_t LOCK_xid_cache;3932,109657
HASH xid_cache;3933,109687
uchar *xid_get_hash_key(xid_get_hash_key3938,109814
void xid_free_hash(3945,110039
static PSI_mutex_key key_LOCK_xid_cache;3952,110152
static PSI_mutex_info all_xid_mutexes[all_xid_mutexes3954,110194
static void init_xid_psi_keys(3959,110301
bool xid_cache_init(3972,110564
void xid_cache_free(3983,110851
XID_STATE *xid_cache_search(xid_cache_search3992,110992
bool xid_cache_insert(4002,111260
bool xid_cache_insert(4024,111749
void xid_cache_delete(4040,112142
int THD::decide_logging_format(4146,116151
THD::binlog_prepare_pending_rows_event(4457,127721
  class Row_data_memory 4564,131561
    Row_data_memory(Row_data_memory::Row_data_memory4576,131876
    Row_data_memory(Row_data_memory::Row_data_memory4587,132116
    ~Row_data_memory(Row_data_memory::~Row_data_memory4598,132422
    bool has_memory(Row_data_memory::has_memory4610,132688
    uchar *slot(Row_data_memory::slot4617,132806
    void allocate_memory(Row_data_memory::allocate_memory4626,133008
    mutable bool m_alloc_checked;Row_data_memory::m_alloc_checked4661,134296
    bool m_release_memory_on_destruction;Row_data_memory::m_release_memory_on_destruction4663,134337
    uchar *m_memory;Row_data_memory::m_memory4664,134379
    uchar *m_ptr[Row_data_memory::m_ptr4665,134400
int THD::binlog_write_row(4670,134447
int THD::binlog_update_row(4699,135376
int THD::binlog_delete_row(4745,136995
int THD::binlog_remove_pending_rows_event(4775,137884
int THD::binlog_flush_pending_rows_event(4791,138253
show_query_type(4825,139199
#define LIMIT_UNSAFE_WARNING_ACTIVATION_TIMEOUT 4846,139703
#define LIMIT_UNSAFE_WARNING_ACTIVATION_THRESHOLD_COUNT 4848,139834
static ulonglong limit_unsafe_suppression_start_time=4850,139894
static bool unsafe_warning_suppression_is_activated=4851,139951
static int limit_unsafe_warning_count=4852,140011
static void reset_binlog_unsafe_suppression(4857,140131
static void print_unsafe_warning_to_log(4869,140462
static void do_unsafe_limit_checkout(4892,141278
void THD::issue_unsafe_warnings(4977,144185
int THD::binlog_query(5040,146237
bool Discrete_intervals_list::append(5143,150062
bool Discrete_intervals_list::append(5157,150552
void THD::set_user_connect(5174,150976
void THD::increment_user_connections_counter(5183,151106
void THD::decrement_user_connections_counter(5192,151270
void THD::increment_con_per_hour_counter(5202,151482
void THD::increment_updates_counter(5211,151641
void THD::increment_questions_counter(5220,151783
void THD::time_out_user_resource_limits(5240,152236

sql/sql_client.cc,31
void my_net_local_init(28,999

sql/sql_connect.cc,1143
#define SSL_HANDSHAKE_SIZE 52,2104
#define NORMAL_HANDSHAKE_SIZE 53,2138
#define MIN_HANDSHAKE_SIZE 54,2172
#define MIN_HANDSHAKE_SIZE 56,2212
static HASH hash_user_connections;64,2400
int get_or_create_user_conn(66,2436
int check_for_max_user_connections(134,4264
void decrease_user_connections(203,6236
void release_user_connection(225,6834
bool check_mqh(253,7455
int check_for_max_user_connections(298,8647
void decrease_user_connections(303,8730
void release_user_connection(308,8791
extern "C" uchar *get_key_conn(get_key_conn328,9178
extern "C" void free_user(336,9351
void init_max_user_conn(342,9420
void free_max_user_conn(353,9688
void reset_mqh(361,9837
bool thd_init_client_charset(417,11528
bool init_new_connection_handler_thread(461,12848
static int check_connection(482,13192
bool setup_connection_thread_globals(583,16530
bool login_connection(612,17057
void end_connection(650,18051
void prepare_new_connection_state(688,19033
pthread_handler_t handle_one_connection(766,21391
bool thd_prepare_connection(776,21561
bool thd_is_connection_alive(792,21929
void do_handle_one_connection(802,22119

sql/sql_crypt.cc,94
void SQL_CRYPT::init(33,1148
void SQL_CRYPT::encode(55,1570
void SQL_CRYPT::decode(67,1815

sql/sql_cursor.cc,1348
class Materialized_cursor:Materialized_cursor36,1437
  MEM_ROOT main_mem_root;Materialized_cursor::main_mem_root38,1492
  SELECT_LEX_UNIT fake_unit;Materialized_cursor::fake_unit40,1577
  TABLE *table;Materialized_cursor::table41,1606
  List<Item> item_list;Materialized_cursor::item_list42,1622
  ulong fetch_limit;Materialized_cursor::fetch_limit43,1646
  ulong fetch_count;Materialized_cursor::fetch_count44,1667
  bool is_rnd_inited;Materialized_cursor::is_rnd_inited45,1688
  virtual bool is_open(Materialized_cursor::is_open50,1859
class Select_materialize:Select_materialize67,2433
  select_result *result;Select_materialize::result69,2481
  Materialized_cursor *materialized_cursor;Select_materialize::materialized_cursor71,2565
  Select_materialize(Select_materialize::Select_materialize72,2609
int mysql_open_cursor(96,3396
Server_side_cursor::~Server_side_cursor(176,5726
void Server_side_cursor::operator delete(Server_side_cursor::operator delete181,5774
Materialized_cursor::Materialized_cursor(203,6528
int Materialized_cursor::send_result_set_metadata(225,7125
int Materialized_cursor::open(273,8636
void Materialized_cursor::fetch(317,9708
void Materialized_cursor::close(354,10540
Materialized_cursor::~Materialized_cursor(372,10974
bool Select_materialize::send_result_set_metadata(383,11230

sql/sql_db.cc,1615
#define MAX_DROP_TABLE_Q_LEN 46,1784
const char *del_exts[del_exts48,1824
static TYPELIB deletable_extentions=49,1888
static HASH dboptions;67,2714
static my_bool dboptions_init=68,2737
static mysql_rwlock_t LOCK_dboptions;69,2771
typedef struct my_dbopt_st72,2847
  char *name;my_dbopt_st::name74,2876
  uint name_length;my_dbopt_st::name_length75,2929
  CHARSET_INFO *charset;my_dbopt_st::charset76,2987
} my_dbopt_t;77,3049
uchar* dboptions_get_key(87,3255
static inline int write_to_binlog(99,3518
void free_dbopt(115,3888
static PSI_rwlock_key key_rwlock_LOCK_dboptions;121,3966
static PSI_rwlock_info all_database_names_rwlocks[all_database_names_rwlocks123,4016
static void init_database_names_psi_keys(128,4142
bool my_dboptions_cache_init(150,4570
void my_dboptions_cache_free(175,5129
void my_dbopt_cleanup(190,5330
static my_bool get_dbopt(214,5876
static my_bool put_dbopt(245,6509
static void del_dbopt(292,7561
static bool write_db_opt(314,8095
bool load_db_opt(360,9304
bool load_db_opt_by_name(471,12883
CHARSET_INFO *get_default_db_collation(get_default_db_collation497,13593
int mysql_create_db(542,14764
bool mysql_alter_db(691,18879
bool mysql_rm_db(766,21056
static bool find_db_tables_and_rm_known_files(1013,28536
static my_bool rm_dir_w_symlink(1139,33047
long mysql_rm_arc_files(1197,34449
static void mysql_change_db_impl(1273,36513
static void backup_current_db_name(1339,38516
cmp_db_names(1369,39269
bool mysql_change_db(1444,42318
bool mysql_opt_change_db(1621,47627
bool mysql_upgrade_db(1652,48620
bool check_db_dir_existence(1865,56184

sql/sql_delete.cc,592
bool mysql_delete(49,1891
int mysql_prepare_delete(437,13843
#define MEM_STRIP_BUF_SIZE 480,15366
extern "C" int refpos_order_cmp(482,15431
int mysql_multi_delete_prepare(500,15787
multi_delete::multi_delete(572,18203
multi_delete::prepare(582,18522
multi_delete::initialize_tables(593,18729
multi_delete::~multi_delete(684,21365
bool multi_delete::send_data(702,21742
void multi_delete::send_error(766,23577
void multi_delete::abort_result_set(777,23788
int multi_delete::do_deletes(843,25729
int multi_delete::do_table_deletes(893,26972
bool multi_delete::send_eof(964,28808

sql/sql_derived.cc,142
mysql_handle_derived(46,1393
bool mysql_derived_prepare(135,4545
bool mysql_derived_filling(264,8945
bool mysql_derived_cleanup(321,10542

sql/sql_do.cc,23
bool mysql_do(26,1007

sql/sql_error.cc,1229
MYSQL_ERROR::MYSQL_ERROR(174,7387
void MYSQL_ERROR::init(194,8263
void MYSQL_ERROR::clear(201,8403
MYSQL_ERROR::MYSQL_ERROR(218,8814
static void copy_string(239,9745
MYSQL_ERROR::copy_opt_attributes(257,10090
MYSQL_ERROR::set(273,10901
MYSQL_ERROR::set_builtin_message_text(289,11314
MYSQL_ERROR::get_message_text(303,11647
MYSQL_ERROR::get_message_octet_length(309,11725
MYSQL_ERROR::set_sqlstate(315,11815
Diagnostics_area::reset_diagnostics_area(328,12062
Diagnostics_area::set_ok_status(353,12589
Diagnostics_area::set_eof_status(383,13320
Diagnostics_area::set_error_status(412,13983
Diagnostics_area::disable_status(454,15104
Warning_info::Warning_info(460,15196
Warning_info::~Warning_info(474,15639
void Warning_info::clear_warning_info(484,15769
void Warning_info::merge_with_routine_info(498,16172
MYSQL_ERROR *Warning_info::push_warning(Warning_info::push_warning537,17640
MYSQL_ERROR *Warning_info::push_warning(Warning_info::push_warning563,18352
void push_warning(588,19120
void push_warning_printf(621,19955
const LEX_STRING warning_level_names[warning_level_names657,20794
bool mysqld_show_warnings(665,20972
char *err_conv(err_conv730,22893
uint32 convert_error_message(798,24312

sql/sql_handler.cc,916
#define HANDLER_TABLES_HASH_SIZE 64,2846
static enum enum_ha_read_modes rkey_to_rnext[rkey_to_rnext66,2884
static char *mysql_ha_hash_get_key(mysql_ha_hash_get_key88,3493
static void mysql_ha_hash_free(110,3956
static void mysql_ha_close_table(126,4325
bool mysql_ha_open(175,5789
bool mysql_ha_close(381,12250
class Sql_handler_lock_error_handler:Sql_handler_lock_error_handler430,13732
  bool need_reopen(Sql_handler_lock_error_handler::need_reopen441,14094
  void init(Sql_handler_lock_error_handler::init442,14148
  bool m_need_reopen;Sql_handler_lock_error_handler::m_need_reopen444,14198
handle_condition(455,14348
bool mysql_ha_read(490,15029
static TABLE_LIST *mysql_ha_find(mysql_ha_find812,24578
void mysql_ha_rm_tables(849,25574
void mysql_ha_flush_tables(885,26372
void mysql_ha_flush(916,27106
void mysql_ha_cleanup(957,28206
void mysql_ha_set_explicit_lock_duration(982,28772

sql/sql_help.cc,1794
struct st_find_field24,1066
  const char *table_name,st_find_field::table_name26,1089
  const char *table_name, *field_name;st_find_field::field_name26,1089
  Field *field;st_find_field::field27,1128
static struct st_find_field init_used_fields[init_used_fields32,1167
enum enum_used_fields51,1787
  help_topic_help_topic_id=enum_used_fields::help_topic_help_topic_id53,1811
  help_topic_name,enum_used_fields::help_topic_name54,1842
  help_topic_help_category_id,enum_used_fields::help_topic_help_category_id55,1861
  help_topic_description,enum_used_fields::help_topic_description56,1892
  help_topic_example,enum_used_fields::help_topic_example57,1918
  help_category_help_category_id,enum_used_fields::help_category_help_category_id59,1941
  help_category_parent_category_id,enum_used_fields::help_category_parent_category_id60,1975
  help_category_name,enum_used_fields::help_category_name61,2011
  help_keyword_help_keyword_id,enum_used_fields::help_keyword_help_keyword_id63,2034
  help_keyword_name,enum_used_fields::help_keyword_name64,2066
  help_relation_help_topic_id,enum_used_fields::help_relation_help_topic_id66,2088
  help_relation_help_keyword_idenum_used_fields::help_relation_help_keyword_id67,2119
static bool init_fields(86,2492
void memorize_variant_topic(137,4274
int search_topics(187,5709
int search_keyword(228,6869
int get_topics_for_keyword(276,8166
int search_categories(356,10865
void get_all_items_for_category(395,11954
int send_answer_1(440,13103
int send_header_2(483,14330
extern "C" int string_ptr_cmp(507,14987
int send_variant_2_list(531,15543
SQL_SELECT *prepare_simple_select(prepare_simple_select576,16568
SQL_SELECT *prepare_select_for_name(prepare_select_for_name613,17442
bool mysqld_help(639,18082

sql/sql_insert.cc,5292
#define my_safe_alloca(96,4213
#define my_safe_afree(97,4270
#define my_safe_alloca(99,4335
#define my_safe_afree(100,4442
bool check_view_single_update(128,5426
static int check_insert_fields(195,6971
static int check_update_fields(334,11095
void prepare_triggers_for_insert_stmt(387,12821
void upgrade_lock_type(425,14054
bool open_and_lock_for_insert_delayed(532,18632
create_insert_stmt_from_insert_delayed(633,21808
bool mysql_insert(653,22404
static bool check_view_insertability(1149,38424
static bool mysql_prepare_insert_check_table(1232,40969
static void prepare_for_positional_update(1277,42493
bool mysql_prepare_insert(1327,43868
static int last_uniq_key(1454,48013
int write_record(1507,49749
int check_that_all_fields_are_given_values(1789,60497
class delayed_row 1835,62002
  char *record;delayed_row::record1837,62044
  enum_duplicates dup;delayed_row::dup1838,62060
  time_t start_time;delayed_row::start_time1839,62083
  ulong sql_mode;delayed_row::sql_mode1840,62104
  bool auto_increment_field_not_null;delayed_row::auto_increment_field_not_null1841,62122
  bool query_start_used,delayed_row::query_start_used1842,62160
  bool query_start_used, ignore,delayed_row::ignore1842,62160
  bool query_start_used, ignore, log_query;delayed_row::log_query1842,62160
  bool stmt_depends_on_first_successful_insert_id_in_prev_stmt;delayed_row::stmt_depends_on_first_successful_insert_id_in_prev_stmt1843,62204
  ulonglong first_successful_insert_id_in_prev_stmt;delayed_row::first_successful_insert_id_in_prev_stmt1844,62268
  ulonglong forced_insert_id;delayed_row::forced_insert_id1845,62321
  ulong auto_increment_increment;delayed_row::auto_increment_increment1846,62351
  ulong auto_increment_offset;delayed_row::auto_increment_offset1847,62385
  timestamp_auto_set_type timestamp_field_type;delayed_row::timestamp_field_type1848,62416
  LEX_STRING query;delayed_row::query1849,62464
  Time_zone *time_zone;delayed_row::time_zone1850,62484
  delayed_row(delayed_row::delayed_row1852,62509
  ~delayed_row(delayed_row::~delayed_row1857,62769
class Delayed_insert 1871,63115
  uint locks_in_memory;Delayed_insert::locks_in_memory1872,63152
  thr_lock_type delayed_lock;Delayed_insert::delayed_lock1873,63176
  THD thd;Delayed_insert::thd1875,63214
  TABLE *table;Delayed_insert::table1876,63225
  mysql_mutex_t mutex;Delayed_insert::mutex1877,63241
  mysql_cond_t cond,Delayed_insert::cond1878,63264
  mysql_cond_t cond, cond_client;Delayed_insert::cond_client1878,63264
  volatile uint tables_in_use,Delayed_insert::tables_in_use1879,63298
  volatile uint tables_in_use,stacked_inserts;Delayed_insert::stacked_inserts1879,63298
  volatile bool status;Delayed_insert::status1880,63345
  bool handler_thread_initialized;Delayed_insert::handler_thread_initialized1892,63904
  COPY_INFO info;Delayed_insert::info1893,63939
  I_List<delayed_row> rows;Delayed_insert::rows1894,63957
  ulong group_count;Delayed_insert::group_count1895,63985
  TABLE_LIST table_list;Delayed_insert::table_list1896,64006
  MDL_request grl_protection;Delayed_insert::grl_protection1901,64178
  Delayed_insert(Delayed_insert::Delayed_insert1903,64209
  ~Delayed_insert(Delayed_insert::~Delayed_insert1938,65780
  inline void lock(Delayed_insert::lock1963,66569
  void unlock(Delayed_insert::unlock1967,66652
  inline uint lock_count(Delayed_insert::lock_count1982,66995
I_List<Delayed_insert> delayed_threads;1990,67158
Delayed_insert *find_handler(find_handler1999,67344
bool delayed_get_table(2064,69919
TABLE *Delayed_insert::get_local_table(Delayed_insert::get_local_table2213,75195
int write_delayed(2342,79868
static void end_delayed_insert(2447,83222
void kill_delayed_threads(2465,83669
class Delayed_prelocking_strategy 2506,84924
handle_table(2520,85530
handle_routine(2535,85937
handle_view(2546,86226
bool Delayed_insert::open_and_lock_table(2563,86616
pthread_handler_t handle_delayed_insert(2598,87536
static void unlink_blobs(2825,95218
static void free_delayed_insert_blobs(2836,95452
bool Delayed_insert::handle_inserts(2851,95746
bool mysql_insert_select_prepare(3120,104539
select_insert::select_insert(3158,105823
select_insert::prepare(3179,106634
int select_insert::prepare2(3352,112793
void select_insert::cleanup(3362,113060
select_insert::~select_insert(3368,113189
bool select_insert::send_data(3383,113485
void select_insert::store_values(3452,115491
void select_insert::send_error(3462,115871
bool select_insert::send_eof(3472,116039
void select_insert::abort_result_set(3557,118884
static TABLE *create_table_from_items(create_table_from_items3660,123226
select_create::prepare(3799,128014
  class MY_HOOKS 3823,129073
    MY_HOOKS(MY_HOOKS::MY_HOOKS3825,129125
    virtual int do_postlock(MY_HOOKS::do_postlock3834,129355
    select_create *ptr;MY_HOOKS::ptr3858,130005
    TABLE_LIST *create_table;MY_HOOKS::create_table3859,130029
    TABLE_LIST *select_tables;MY_HOOKS::select_tables3860,130059
select_create::binlog_show_create_table(3942,132637
void select_create::store_values(3990,134633
void select_create::send_error(3997,134829
bool select_create::send_eof(4027,135813
void select_create::abort_result_set(4058,136441

sql/sql_lex.cc,5285
#define MYSQL_LEX 19,815
sys_var *trg_new_row_fake_var=trg_new_row_fake_var38,1401
const LEX_STRING null_lex_str=43,1534
const LEX_STRING empty_lex_str=44,1576
Query_tables_list::binlog_stmt_unsafe_errcode[Query_tables_list::binlog_stmt_unsafe_errcode50,1762
#define TOCK_NAME_LENGTH 77,2634
static uchar to_upper_lex[to_upper_lex84,2772
const char * index_hint_type_name[index_hint_type_name109,3973
inline int lex_casecmp(116,4068
void lex_init(126,4267
void lex_free(139,4574
st_parsing_options::reset(147,4685
bool Lex_input_stream::init(165,5166
Lex_input_stream::reset(196,5886
void Lex_input_stream::body_utf8_start(239,6986
void Lex_input_stream::body_utf8_append(276,8326
void Lex_input_stream::body_utf8_append(305,9195
void Lex_input_stream::body_utf8_append_literal(322,9688
void lex_start(361,10725
void lex_end(455,13700
Yacc_state::~Yacc_state(474,14127
static int find_keyword(483,14231
bool is_keyword(519,15062
bool is_lex_native_function(535,15385
static LEX_STRING get_token(543,15595
static LEX_STRING get_quoted_token(563,16195
static char *get_text(get_text598,17080
static const char *long_str=long_str733,20225
static const uint long_len=734,20267
static const char *signed_long_str=signed_long_str735,20298
static const char *longlong_str=longlong_str736,20348
static const uint longlong_len=737,20403
static const char *signed_longlong_str=signed_longlong_str738,20438
static const uint signed_longlong_len=739,20501
static const char *unsigned_longlong_str=unsigned_longlong_str740,20543
static const uint unsigned_longlong_len=741,20608
static inline uint int_token(743,20653
bool consume_comment(828,22657
int MYSQLlex(870,23488
int lex_one_token(924,24688
Alter_info::Alter_info(1642,47101
void trim_whitespace(1673,48281
void st_select_lex_node::init_query(1702,48813
void st_select_lex_node::init_select(1711,48992
void st_select_lex_unit::init_query(1715,49036
void st_select_lex::init_query(1734,49439
void st_select_lex::init_select(1778,50729
void st_select_lex_node::include_down(1817,51738
void st_select_lex_node::include_standalone(1835,52157
void st_select_lex_node::include_neighbour(1845,52361
void st_select_lex_node::include_global(1856,52613
void st_select_lex_node::fast_exclude(1865,52836
void st_select_lex_node::exclude(1882,53193
void st_select_lex_unit::exclude_level(1907,53741
void st_select_lex_unit::exclude_tree(1954,54839
void st_select_lex::mark_as_dependent(1987,55672
bool st_select_lex_node::set_braces(2015,56651
bool st_select_lex_node::inc_in_sum_expr(2016,56718
uint st_select_lex_node::get_in_sum_expr(2017,56785
TABLE_LIST* st_select_lex_node::get_table_list(2018,56852
List<Item>* st_select_lex_node::get_item_list(2019,56919
TABLE_LIST *st_select_lex_node::add_table_to_list st_select_lex_node::add_table_to_list2020,56986
ulong st_select_lex_node::get_table_join_options(2030,57350
bool st_select_lex::test_limit(2038,57454
st_select_lex_unit* st_select_lex_unit::master_unit(2050,57647
st_select_lex* st_select_lex_unit::outer_select(2056,57724
bool st_select_lex::add_order_to_list(2062,57814
bool st_select_lex::add_item_to_list(2068,57940
bool st_select_lex::add_group_to_list(2076,58148
bool st_select_lex::add_ftfunc_to_list(2082,58274
st_select_lex_unit* st_select_lex::master_unit(2088,58408
st_select_lex* st_select_lex::outer_select(2094,58502
bool st_select_lex::set_braces(2100,58601
bool st_select_lex::inc_in_sum_expr(2107,58680
uint st_select_lex::get_in_sum_expr(2114,58753
TABLE_LIST* st_select_lex::get_table_list(2120,58819
List<Item>* st_select_lex::get_item_list(2125,58895
ulong st_select_lex::get_table_join_options(2130,58964
bool st_select_lex::setup_ref_array(2136,59045
void st_select_lex_unit::print(2158,59784
void st_select_lex::print_order(2191,60627
void st_select_lex::print_limit(2213,61169
void LEX::cleanup_lex_after_parse_error(2253,62444
void Query_tables_list::reset_query_tables_list(2291,63814
void Query_tables_list::destroy_query_tables_list(2336,64844
LEX::LEX(2356,65299
bool LEX::can_be_merged(2387,66217
bool LEX::can_use_merged(2436,67542
bool LEX::can_not_use_merged(2472,68285
bool LEX::only_view_structure(2501,68820
bool LEX::need_correct_ident(2530,69271
uint8 LEX::get_effective_with_check(2560,69839
LEX::copy_db_to(2589,70679
void st_select_lex_unit::set_limit(2614,71247
void LEX::set_trg_event_type_for_tables(2721,74833
TABLE_LIST *LEX::unlink_first_table(LEX::unlink_first_table2864,79713
void LEX::first_lists_tables_same(2915,81150
void LEX::link_first_table_back(2951,82163
void LEX::cleanup_after_one_table_open(2986,83018
void LEX::reset_n_backup_query_tables_list(3021,84134
void LEX::restore_backup_query_tables_list(3040,84587
bool LEX::table_or_sp_used(3058,84957
static void fix_prepare_info_in_table_list(3084,85486
void st_select_lex::fix_prepare_information(3118,86597
void st_select_lex::set_index_hint_type(3179,88426
void st_select_lex::alloc_index_hints 3195,88790
bool st_select_lex::add_index_hint 3215,89199
bool LEX::is_partition_management(3234,89939
uint binlog_unsafe_map[binlog_unsafe_map3243,90169
#define UNSAFE(3245,90199
void unsafe_mixed_statement(3265,90932
void binlog_unsafe_map_init(3294,91784

sql/sql_list.cc,107
list_node end_of_list;24,885
void free_list(26,909
void free_list(34,1027
base_list::base_list(42,1135

sql/sql_load.cc,3007
class XML_TAG 42,1669
  int level;XML_TAG::level44,1693
  String field;XML_TAG::field45,1706
  String value;XML_TAG::value46,1722
XML_TAG::XML_TAG(51,1781
class READ_INFO 59,1881
  File	file;READ_INFO::file60,1899
  uchar	*buffer,READ_INFO::buffer61,1912
	*end_of_buff;READ_INFO::end_of_buff62,1958
  uint	buff_length,READ_INFO::buff_length63,2008
	max_length;READ_INFO::max_length64,2054
  char	*field_term_ptr,READ_INFO::field_term_ptr65,2093
  char	*field_term_ptr,*line_term_ptr,READ_INFO::line_term_ptr65,2093
  char	*field_term_ptr,*line_term_ptr,*line_start_ptr,READ_INFO::line_start_ptr65,2093
  char	*field_term_ptr,*line_term_ptr,*line_start_ptr,*line_start_end;READ_INFO::line_start_end65,2093
  uint	field_term_length,READ_INFO::field_term_length66,2164
  uint	field_term_length,line_term_length,READ_INFO::line_term_length66,2164
  uint	field_term_length,line_term_length,enclosed_length;READ_INFO::enclosed_length66,2164
  int	field_term_char,READ_INFO::field_term_char67,2223
  int	field_term_char,line_term_char,READ_INFO::line_term_char67,2223
  int	field_term_char,line_term_char,enclosed_char,READ_INFO::enclosed_char67,2223
  int	field_term_char,line_term_char,enclosed_char,escape_char;READ_INFO::escape_char67,2223
  int	*stack,READ_INFO::stack68,2287
  int	*stack,*stack_pos;READ_INFO::stack_pos68,2287
  bool	found_end_of_line,READ_INFO::found_end_of_line69,2312
  bool	found_end_of_line,start_of_line,READ_INFO::start_of_line69,2312
  bool	found_end_of_line,start_of_line,eof;READ_INFO::eof69,2312
  bool  need_end_io_cache;READ_INFO::need_end_io_cache70,2356
  IO_CACHE cache;READ_INFO::cache71,2383
  NET *io_net;READ_INFO::io_net72,2401
  int level;READ_INFO::level73,2416
  bool error,READ_INFO::error76,2457
  bool error,line_cuted,READ_INFO::line_cuted76,2457
  bool error,line_cuted,found_null,READ_INFO::found_null76,2457
  bool error,line_cuted,found_null,enclosed;READ_INFO::enclosed76,2457
  uchar	*row_start,READ_INFO::row_start77,2502
	*row_end;READ_INFO::row_end78,2552
  CHARSET_INFO *read_charset;READ_INFO::read_charset79,2591
  List<XML_TAG> taglist;READ_INFO::taglist92,3016
  void end_io_cache(READ_INFO::end_io_cache101,3235
  void set_io_cache_arg(READ_INFO::set_io_cache_arg112,3490
int mysql_load(164,5918
static bool write_execute_load_query_log_event(659,22892
read_fixed_length(774,26603
read_sep_field(903,30700
read_xml_field(1106,37065
READ_INFO::unescape(1270,42088
READ_INFO::READ_INFO(1294,42572
READ_INFO::~READ_INFO(1372,44987
#define GET 1386,45207
#define PUSH(1387,45274
inline int READ_INFO::terminator(1390,45311
int READ_INFO::read_field(1410,45613
int READ_INFO::read_fixed_length(1602,49906
int READ_INFO::next_line(1653,50852
bool READ_INFO::find_start_of_fields(1698,51665
int READ_INFO::clear_level(1730,52278
my_xml_entity_to_char(1754,52674
my_tospace(1790,53451
int READ_INFO::read_value(1799,53602
int READ_INFO::read_xml(1855,54879

sql/sql_locale.cc,36892
enum err_msgs_index30,1108
  en_US=err_msgs_index::en_US32,1130
  en_US= 0, cs_CZ,err_msgs_index::cs_CZ32,1130
  en_US= 0, cs_CZ, da_DK,err_msgs_index::da_DK32,1130
  en_US= 0, cs_CZ, da_DK, nl_NL,err_msgs_index::nl_NL32,1130
  en_US= 0, cs_CZ, da_DK, nl_NL, et_EE,err_msgs_index::et_EE32,1130
  en_US= 0, cs_CZ, da_DK, nl_NL, et_EE, fr_FR,err_msgs_index::fr_FR32,1130
  en_US= 0, cs_CZ, da_DK, nl_NL, et_EE, fr_FR, de_DE,err_msgs_index::de_DE32,1130
  en_US= 0, cs_CZ, da_DK, nl_NL, et_EE, fr_FR, de_DE, el_GR,err_msgs_index::el_GR32,1130
  en_US= 0, cs_CZ, da_DK, nl_NL, et_EE, fr_FR, de_DE, el_GR, hu_HU,err_msgs_index::hu_HU32,1130
  en_US= 0, cs_CZ, da_DK, nl_NL, et_EE, fr_FR, de_DE, el_GR, hu_HU, it_IT,err_msgs_index::it_IT32,1130
  ja_JP,err_msgs_index::ja_JP33,1205
  ja_JP, ko_KR,err_msgs_index::ko_KR33,1205
  ja_JP, ko_KR, no_NO,err_msgs_index::no_NO33,1205
  ja_JP, ko_KR, no_NO, nn_NO,err_msgs_index::nn_NO33,1205
  ja_JP, ko_KR, no_NO, nn_NO, pl_PL,err_msgs_index::pl_PL33,1205
  ja_JP, ko_KR, no_NO, nn_NO, pl_PL, pt_PT,err_msgs_index::pt_PT33,1205
  ja_JP, ko_KR, no_NO, nn_NO, pl_PL, pt_PT, ro_RO,err_msgs_index::ro_RO33,1205
  ja_JP, ko_KR, no_NO, nn_NO, pl_PL, pt_PT, ro_RO, ru_RU,err_msgs_index::ru_RU33,1205
  ja_JP, ko_KR, no_NO, nn_NO, pl_PL, pt_PT, ro_RO, ru_RU, sr_RS,err_msgs_index::sr_RS33,1205
  ja_JP, ko_KR, no_NO, nn_NO, pl_PL, pt_PT, ro_RO, ru_RU, sr_RS,  sk_SK,err_msgs_index::sk_SK33,1205
  es_ES,err_msgs_index::es_ES34,1278
  es_ES, sv_SE,err_msgs_index::sv_SE34,1278
  es_ES, sv_SE, uk_UAerr_msgs_index::uk_UA34,1278
} ERR_MSGS_INDEX;35,1300
MY_LOCALE_ERRMSGS global_errmsgs[global_errmsgs38,1320
static const char *my_locale_month_names_ar_AE[my_locale_month_names_ar_AE68,1930
static const char *my_locale_ab_month_names_ar_AE[my_locale_ab_month_names_ar_AE70,2158
static const char *my_locale_day_names_ar_AE[my_locale_day_names_ar_AE72,2335
static const char *my_locale_ab_day_names_ar_AE[my_locale_ab_day_names_ar_AE74,2510
static TYPELIB my_locale_typelib_month_names_ar_AE 76,2611
static TYPELIB my_locale_typelib_ab_month_names_ar_AE 78,2756
static TYPELIB my_locale_typelib_day_names_ar_AE 80,2910
static TYPELIB my_locale_typelib_ab_day_names_ar_AE 82,3049
static const char *my_locale_month_names_ar_BH[my_locale_month_names_ar_BH104,3688
static const char *my_locale_ab_month_names_ar_BH[my_locale_ab_month_names_ar_BH106,3916
static const char *my_locale_day_names_ar_BH[my_locale_day_names_ar_BH108,4093
static const char *my_locale_ab_day_names_ar_BH[my_locale_ab_day_names_ar_BH110,4267
static TYPELIB my_locale_typelib_month_names_ar_BH 112,4368
static TYPELIB my_locale_typelib_ab_month_names_ar_BH 114,4513
static TYPELIB my_locale_typelib_day_names_ar_BH 116,4667
static TYPELIB my_locale_typelib_ab_day_names_ar_BH 118,4806
static const char *my_locale_month_names_ar_JO[my_locale_month_names_ar_JO140,5431
static const char *my_locale_ab_month_names_ar_JO[my_locale_ab_month_names_ar_JO142,5689
static const char *my_locale_day_names_ar_JO[my_locale_day_names_ar_JO144,5950
static const char *my_locale_ab_day_names_ar_JO[my_locale_ab_day_names_ar_JO146,6124
static TYPELIB my_locale_typelib_month_names_ar_JO 148,6301
static TYPELIB my_locale_typelib_ab_month_names_ar_JO 150,6446
static TYPELIB my_locale_typelib_day_names_ar_JO 152,6600
static TYPELIB my_locale_typelib_ab_day_names_ar_JO 154,6739
static const char *my_locale_month_names_ar_SA[my_locale_month_names_ar_SA176,7370
static const char *my_locale_ab_month_names_ar_SA[my_locale_ab_month_names_ar_SA178,7634
static const char *my_locale_day_names_ar_SA[my_locale_day_names_ar_SA180,7775
static const char *my_locale_ab_day_names_ar_SA[my_locale_ab_day_names_ar_SA182,7951
static TYPELIB my_locale_typelib_month_names_ar_SA 184,8059
static TYPELIB my_locale_typelib_ab_month_names_ar_SA 186,8204
static TYPELIB my_locale_typelib_day_names_ar_SA 188,8358
static TYPELIB my_locale_typelib_ab_day_names_ar_SA 190,8497
static const char *my_locale_month_names_ar_SY[my_locale_month_names_ar_SY212,9127
static const char *my_locale_ab_month_names_ar_SY[my_locale_ab_month_names_ar_SY214,9385
static const char *my_locale_day_names_ar_SY[my_locale_day_names_ar_SY216,9646
static const char *my_locale_ab_day_names_ar_SY[my_locale_ab_day_names_ar_SY218,9820
static TYPELIB my_locale_typelib_month_names_ar_SY 220,9997
static TYPELIB my_locale_typelib_ab_month_names_ar_SY 222,10142
static TYPELIB my_locale_typelib_day_names_ar_SY 224,10296
static TYPELIB my_locale_typelib_ab_day_names_ar_SY 226,10435
static const char *my_locale_month_names_be_BY[my_locale_month_names_be_BY248,11065
static const char *my_locale_ab_month_names_be_BY[my_locale_ab_month_names_be_BY250,11341
static const char *my_locale_day_names_be_BY[my_locale_day_names_be_BY252,11518
static const char *my_locale_ab_day_names_be_BY[my_locale_ab_day_names_be_BY254,11700
static TYPELIB my_locale_typelib_month_names_be_BY 256,11829
static TYPELIB my_locale_typelib_ab_month_names_be_BY 258,11974
static TYPELIB my_locale_typelib_day_names_be_BY 260,12128
static TYPELIB my_locale_typelib_ab_day_names_be_BY 262,12267
static const char *my_locale_month_names_bg_BG[my_locale_month_names_bg_BG284,12904
static const char *my_locale_ab_month_names_bg_BG[my_locale_ab_month_names_bg_BG286,13146
static const char *my_locale_day_names_bg_BG[my_locale_day_names_bg_BG288,13323
static const char *my_locale_ab_day_names_bg_BG[my_locale_ab_day_names_bg_BG290,13503
static TYPELIB my_locale_typelib_month_names_bg_BG 292,13618
static TYPELIB my_locale_typelib_ab_month_names_bg_BG 294,13763
static TYPELIB my_locale_typelib_day_names_bg_BG 296,13917
static TYPELIB my_locale_typelib_ab_day_names_bg_BG 298,14056
static const char *my_locale_month_names_ca_ES[my_locale_month_names_ca_ES320,14689
static const char *my_locale_ab_month_names_ca_ES[my_locale_ab_month_names_ca_ES322,14862
static const char *my_locale_day_names_ca_ES[my_locale_day_names_ca_ES324,15003
static const char *my_locale_ab_day_names_ca_ES[my_locale_ab_day_names_ca_ES326,15140
static TYPELIB my_locale_typelib_month_names_ca_ES 328,15241
static TYPELIB my_locale_typelib_ab_month_names_ca_ES 330,15386
static TYPELIB my_locale_typelib_day_names_ca_ES 332,15540
static TYPELIB my_locale_typelib_ab_day_names_ca_ES 334,15679
static const char *my_locale_month_names_cs_CZ[my_locale_month_names_cs_CZ356,16313
static const char *my_locale_ab_month_names_cs_CZ[my_locale_ab_month_names_cs_CZ358,16495
static const char *my_locale_day_names_cs_CZ[my_locale_day_names_cs_CZ360,16645
static const char *my_locale_ab_day_names_cs_CZ[my_locale_ab_day_names_cs_CZ362,16779
static TYPELIB my_locale_typelib_month_names_cs_CZ 364,16883
static TYPELIB my_locale_typelib_ab_month_names_cs_CZ 366,17028
static TYPELIB my_locale_typelib_day_names_cs_CZ 368,17182
static TYPELIB my_locale_typelib_ab_day_names_cs_CZ 370,17321
static const char *my_locale_month_names_da_DK[my_locale_month_names_da_DK392,17954
static const char *my_locale_ab_month_names_da_DK[my_locale_ab_month_names_da_DK394,18128
static const char *my_locale_day_names_da_DK[my_locale_day_names_da_DK396,18269
static const char *my_locale_ab_day_names_da_DK[my_locale_ab_day_names_da_DK398,18399
static TYPELIB my_locale_typelib_month_names_da_DK 400,18509
static TYPELIB my_locale_typelib_ab_month_names_da_DK 402,18654
static TYPELIB my_locale_typelib_day_names_da_DK 404,18808
static TYPELIB my_locale_typelib_ab_day_names_da_DK 406,18947
static const char *my_locale_month_names_de_AT[my_locale_month_names_de_AT428,19574
static const char *my_locale_ab_month_names_de_AT[my_locale_ab_month_names_de_AT430,19747
static const char *my_locale_day_names_de_AT[my_locale_day_names_de_AT432,19890
static const char *my_locale_ab_day_names_de_AT[my_locale_ab_day_names_de_AT434,20027
static TYPELIB my_locale_typelib_month_names_de_AT 436,20135
static TYPELIB my_locale_typelib_ab_month_names_de_AT 438,20280
static TYPELIB my_locale_typelib_day_names_de_AT 440,20434
static TYPELIB my_locale_typelib_ab_day_names_de_AT 442,20573
static const char *my_locale_month_names_de_DE[my_locale_month_names_de_DE464,21201
static const char *my_locale_ab_month_names_de_DE[my_locale_ab_month_names_de_DE466,21375
static const char *my_locale_day_names_de_DE[my_locale_day_names_de_DE468,21517
static const char *my_locale_ab_day_names_de_DE[my_locale_ab_day_names_de_DE470,21654
static TYPELIB my_locale_typelib_month_names_de_DE 472,21755
static TYPELIB my_locale_typelib_ab_month_names_de_DE 474,21900
static TYPELIB my_locale_typelib_day_names_de_DE 476,22054
static TYPELIB my_locale_typelib_ab_day_names_de_DE 478,22193
static const char *my_locale_month_names_en_US[my_locale_month_names_en_US500,22827
static const char *my_locale_ab_month_names_en_US[my_locale_ab_month_names_en_US502,23003
static const char *my_locale_day_names_en_US[my_locale_day_names_en_US504,23144
static const char *my_locale_ab_day_names_en_US[my_locale_ab_day_names_en_US506,23278
static TYPELIB my_locale_typelib_month_names_en_US 508,23386
static TYPELIB my_locale_typelib_ab_month_names_en_US 510,23531
static TYPELIB my_locale_typelib_day_names_en_US 512,23685
static TYPELIB my_locale_typelib_ab_day_names_en_US 514,23824
static const char *my_locale_month_names_es_ES[my_locale_month_names_es_ES536,24455
static const char *my_locale_ab_month_names_es_ES[my_locale_ab_month_names_es_ES538,24634
static const char *my_locale_day_names_es_ES[my_locale_day_names_es_ES540,24775
static const char *my_locale_ab_day_names_es_ES[my_locale_ab_day_names_es_ES542,24907
static TYPELIB my_locale_typelib_month_names_es_ES 544,25017
static TYPELIB my_locale_typelib_ab_month_names_es_ES 546,25162
static TYPELIB my_locale_typelib_day_names_es_ES 548,25316
static TYPELIB my_locale_typelib_ab_day_names_es_ES 550,25455
static const char *my_locale_month_names_et_EE[my_locale_month_names_et_EE572,26084
static const char *my_locale_ab_month_names_et_EE[my_locale_ab_month_names_et_EE574,26266
static const char *my_locale_day_names_et_EE[my_locale_day_names_et_EE576,26432
static const char *my_locale_ab_day_names_et_EE[my_locale_ab_day_names_et_EE578,26579
static TYPELIB my_locale_typelib_month_names_et_EE 580,26673
static TYPELIB my_locale_typelib_ab_month_names_et_EE 582,26818
static TYPELIB my_locale_typelib_day_names_et_EE 584,26972
static TYPELIB my_locale_typelib_ab_day_names_et_EE 586,27111
static const char *my_locale_month_names_eu_ES[my_locale_month_names_eu_ES608,27739
static const char *my_locale_ab_month_names_eu_ES[my_locale_ab_month_names_eu_ES610,27922
static const char *my_locale_day_names_eu_ES[my_locale_day_names_eu_ES612,28063
static const char *my_locale_ab_day_names_eu_ES[my_locale_ab_day_names_eu_ES614,28208
static TYPELIB my_locale_typelib_month_names_eu_ES 616,28316
static TYPELIB my_locale_typelib_ab_month_names_eu_ES 618,28461
static TYPELIB my_locale_typelib_day_names_eu_ES 620,28615
static TYPELIB my_locale_typelib_ab_day_names_eu_ES 622,28754
static const char *my_locale_month_names_fi_FI[my_locale_month_names_fi_FI644,29381
static const char *my_locale_ab_month_names_fi_FI[my_locale_ab_month_names_fi_FI646,29578
static const char *my_locale_day_names_fi_FI[my_locale_day_names_fi_FI648,29772
static const char *my_locale_ab_day_names_fi_FI[my_locale_ab_day_names_fi_FI650,29916
static TYPELIB my_locale_typelib_month_names_fi_FI 652,30017
static TYPELIB my_locale_typelib_ab_month_names_fi_FI 654,30162
static TYPELIB my_locale_typelib_day_names_fi_FI 656,30316
static TYPELIB my_locale_typelib_ab_day_names_fi_FI 658,30455
static const char *my_locale_month_names_fo_FO[my_locale_month_names_fo_FO680,31091
static const char *my_locale_ab_month_names_fo_FO[my_locale_ab_month_names_fo_FO682,31265
static const char *my_locale_day_names_fo_FO[my_locale_day_names_fo_FO684,31406
static const char *my_locale_ab_day_names_fo_FO[my_locale_ab_day_names_fo_FO686,31561
static TYPELIB my_locale_typelib_month_names_fo_FO 688,31673
static TYPELIB my_locale_typelib_ab_month_names_fo_FO 690,31818
static TYPELIB my_locale_typelib_day_names_fo_FO 692,31972
static TYPELIB my_locale_typelib_ab_day_names_fo_FO 694,32111
static const char *my_locale_month_names_fr_FR[my_locale_month_names_fr_FR716,32745
static const char *my_locale_ab_month_names_fr_FR[my_locale_ab_month_names_fr_FR718,32923
static const char *my_locale_day_names_fr_FR[my_locale_day_names_fr_FR720,33067
static const char *my_locale_ab_day_names_fr_FR[my_locale_ab_day_names_fr_FR722,33196
static TYPELIB my_locale_typelib_month_names_fr_FR 724,33304
static TYPELIB my_locale_typelib_ab_month_names_fr_FR 726,33449
static TYPELIB my_locale_typelib_day_names_fr_FR 728,33603
static TYPELIB my_locale_typelib_ab_day_names_fr_FR 730,33742
static const char *my_locale_month_names_gl_ES[my_locale_month_names_gl_ES752,34370
static const char *my_locale_ab_month_names_gl_ES[my_locale_ab_month_names_gl_ES754,34548
static const char *my_locale_day_names_gl_ES[my_locale_day_names_gl_ES756,34690
static const char *my_locale_ab_day_names_gl_ES[my_locale_ab_day_names_gl_ES758,34818
static TYPELIB my_locale_typelib_month_names_gl_ES 760,34928
static TYPELIB my_locale_typelib_ab_month_names_gl_ES 762,35073
static TYPELIB my_locale_typelib_day_names_gl_ES 764,35227
static TYPELIB my_locale_typelib_ab_day_names_gl_ES 766,35366
static const char *my_locale_month_names_gu_IN[my_locale_month_names_gu_IN788,35996
static const char *my_locale_ab_month_names_gu_IN[my_locale_ab_month_names_gu_IN790,36326
static const char *my_locale_day_names_gu_IN[my_locale_day_names_gu_IN792,36545
static const char *my_locale_ab_day_names_gu_IN[my_locale_ab_day_names_gu_IN794,36770
static TYPELIB my_locale_typelib_month_names_gu_IN 796,36935
static TYPELIB my_locale_typelib_ab_month_names_gu_IN 798,37080
static TYPELIB my_locale_typelib_day_names_gu_IN 800,37234
static TYPELIB my_locale_typelib_ab_day_names_gu_IN 802,37373
static const char *my_locale_month_names_he_IL[my_locale_month_names_he_IL824,38000
static const char *my_locale_ab_month_names_he_IL[my_locale_ab_month_names_he_IL826,38222
static const char *my_locale_day_names_he_IL[my_locale_day_names_he_IL828,38399
static const char *my_locale_ab_day_names_he_IL[my_locale_ab_day_names_he_IL830,38543
static TYPELIB my_locale_typelib_month_names_he_IL 832,38651
static TYPELIB my_locale_typelib_ab_month_names_he_IL 834,38796
static TYPELIB my_locale_typelib_day_names_he_IL 836,38950
static TYPELIB my_locale_typelib_ab_day_names_he_IL 838,39089
static const char *my_locale_month_names_hi_IN[my_locale_month_names_hi_IN860,39712
static const char *my_locale_ab_month_names_hi_IN[my_locale_ab_month_names_hi_IN862,40006
static const char *my_locale_day_names_hi_IN[my_locale_day_names_hi_IN864,40303
static const char *my_locale_ab_day_names_hi_IN[my_locale_ab_day_names_hi_IN866,40532
static TYPELIB my_locale_typelib_month_names_hi_IN 868,40701
static TYPELIB my_locale_typelib_ab_month_names_hi_IN 870,40846
static TYPELIB my_locale_typelib_day_names_hi_IN 872,41000
static TYPELIB my_locale_typelib_ab_day_names_hi_IN 874,41139
static const char *my_locale_month_names_hr_HR[my_locale_month_names_hr_HR896,41765
static const char *my_locale_ab_month_names_hr_HR[my_locale_ab_month_names_hr_HR898,41952
static const char *my_locale_day_names_hr_HR[my_locale_day_names_hr_HR900,42094
static const char *my_locale_ab_day_names_hr_HR[my_locale_ab_day_names_hr_HR902,42230
static TYPELIB my_locale_typelib_month_names_hr_HR 904,42339
static TYPELIB my_locale_typelib_ab_month_names_hr_HR 906,42484
static TYPELIB my_locale_typelib_day_names_hr_HR 908,42638
static TYPELIB my_locale_typelib_ab_day_names_hr_HR 910,42777
static const char *my_locale_month_names_hu_HU[my_locale_month_names_hu_HU932,43410
static const char *my_locale_ab_month_names_hu_HU[my_locale_ab_month_names_hu_HU934,43606
static const char *my_locale_day_names_hu_HU[my_locale_day_names_hu_HU936,43752
static const char *my_locale_ab_day_names_hu_HU[my_locale_ab_day_names_hu_HU938,43888
static TYPELIB my_locale_typelib_month_names_hu_HU 940,43987
static TYPELIB my_locale_typelib_ab_month_names_hu_HU 942,44132
static TYPELIB my_locale_typelib_day_names_hu_HU 944,44286
static TYPELIB my_locale_typelib_ab_day_names_hu_HU 946,44425
static const char *my_locale_month_names_id_ID[my_locale_month_names_id_ID968,45062
static const char *my_locale_ab_month_names_id_ID[my_locale_ab_month_names_id_ID970,45239
static const char *my_locale_day_names_id_ID[my_locale_day_names_id_ID972,45380
static const char *my_locale_ab_day_names_id_ID[my_locale_ab_day_names_id_ID974,45500
static TYPELIB my_locale_typelib_month_names_id_ID 976,45608
static TYPELIB my_locale_typelib_ab_month_names_id_ID 978,45753
static TYPELIB my_locale_typelib_day_names_id_ID 980,45907
static TYPELIB my_locale_typelib_ab_day_names_id_ID 982,46046
static const char *my_locale_month_names_is_IS[my_locale_month_names_is_IS1004,46681
static const char *my_locale_ab_month_names_is_IS[my_locale_ab_month_names_is_IS1006,46865
static const char *my_locale_day_names_is_IS[my_locale_day_names_is_IS1008,47012
static const char *my_locale_ab_day_names_is_IS[my_locale_ab_day_names_is_IS1010,47175
static TYPELIB my_locale_typelib_month_names_is_IS 1012,47287
static TYPELIB my_locale_typelib_ab_month_names_is_IS 1014,47432
static TYPELIB my_locale_typelib_day_names_is_IS 1016,47586
static TYPELIB my_locale_typelib_ab_day_names_is_IS 1018,47725
static const char *my_locale_month_names_it_CH[my_locale_month_names_it_CH1040,48361
static const char *my_locale_ab_month_names_it_CH[my_locale_ab_month_names_it_CH1042,48545
static const char *my_locale_day_names_it_CH[my_locale_day_names_it_CH1044,48686
static const char *my_locale_ab_day_names_it_CH[my_locale_ab_day_names_it_CH1046,48825
static TYPELIB my_locale_typelib_month_names_it_CH 1048,48933
static TYPELIB my_locale_typelib_ab_month_names_it_CH 1050,49078
static TYPELIB my_locale_typelib_day_names_it_CH 1052,49232
static TYPELIB my_locale_typelib_ab_day_names_it_CH 1054,49371
static const char *my_locale_month_names_ja_JP[my_locale_month_names_ja_JP1076,50003
static const char *my_locale_ab_month_names_ja_JP[my_locale_ab_month_names_ja_JP1078,50156
static const char *my_locale_day_names_ja_JP[my_locale_day_names_ja_JP1080,50321
static const char *my_locale_ab_day_names_ja_JP[my_locale_ab_day_names_ja_JP1082,50468
static TYPELIB my_locale_typelib_month_names_ja_JP 1084,50576
static TYPELIB my_locale_typelib_ab_month_names_ja_JP 1086,50721
static TYPELIB my_locale_typelib_day_names_ja_JP 1088,50875
static TYPELIB my_locale_typelib_ab_day_names_ja_JP 1090,51014
static const char *my_locale_month_names_ko_KR[my_locale_month_names_ko_KR1112,51638
static const char *my_locale_ab_month_names_ko_KR[my_locale_ab_month_names_ko_KR1114,51818
static const char *my_locale_day_names_ko_KR[my_locale_day_names_ko_KR1116,51983
static const char *my_locale_ab_day_names_ko_KR[my_locale_ab_day_names_ko_KR1118,52130
static TYPELIB my_locale_typelib_month_names_ko_KR 1120,52238
static TYPELIB my_locale_typelib_ab_month_names_ko_KR 1122,52383
static TYPELIB my_locale_typelib_day_names_ko_KR 1124,52537
static TYPELIB my_locale_typelib_ab_day_names_ko_KR 1126,52676
static const char *my_locale_month_names_lt_LT[my_locale_month_names_lt_LT1148,53307
static const char *my_locale_ab_month_names_lt_LT[my_locale_ab_month_names_lt_LT1150,53504
static const char *my_locale_day_names_lt_LT[my_locale_day_names_lt_LT1152,53645
static const char *my_locale_ab_day_names_lt_LT[my_locale_ab_day_names_lt_LT1154,53814
static TYPELIB my_locale_typelib_month_names_lt_LT 1156,53916
static TYPELIB my_locale_typelib_ab_month_names_lt_LT 1158,54061
static TYPELIB my_locale_typelib_day_names_lt_LT 1160,54215
static TYPELIB my_locale_typelib_ab_day_names_lt_LT 1162,54354
static const char *my_locale_month_names_lv_LV[my_locale_month_names_lv_LV1184,54988
static const char *my_locale_ab_month_names_lv_LV[my_locale_ab_month_names_lv_LV1186,55184
static const char *my_locale_day_names_lv_LV[my_locale_day_names_lv_LV1188,55327
static const char *my_locale_ab_day_names_lv_LV[my_locale_ab_day_names_lv_LV1190,55478
static TYPELIB my_locale_typelib_month_names_lv_LV 1192,55584
static TYPELIB my_locale_typelib_ab_month_names_lv_LV 1194,55729
static TYPELIB my_locale_typelib_day_names_lv_LV 1196,55883
static TYPELIB my_locale_typelib_ab_day_names_lv_LV 1198,56022
static const char *my_locale_month_names_mk_MK[my_locale_month_names_mk_MK1220,56653
static const char *my_locale_ab_month_names_mk_MK[my_locale_ab_month_names_mk_MK1222,56901
static const char *my_locale_day_names_mk_MK[my_locale_day_names_mk_MK1224,57078
static const char *my_locale_ab_day_names_mk_MK[my_locale_ab_day_names_mk_MK1226,57256
static TYPELIB my_locale_typelib_month_names_mk_MK 1228,57385
static TYPELIB my_locale_typelib_ab_month_names_mk_MK 1230,57530
static TYPELIB my_locale_typelib_day_names_mk_MK 1232,57684
static TYPELIB my_locale_typelib_ab_day_names_mk_MK 1234,57823
static const char *my_locale_month_names_mn_MN[my_locale_month_names_mn_MN1256,58457
static const char *my_locale_ab_month_names_mn_MN[my_locale_ab_month_names_mn_MN1258,58899
static const char *my_locale_day_names_mn_MN[my_locale_day_names_mn_MN1260,59055
static const char *my_locale_ab_day_names_mn_MN[my_locale_ab_day_names_mn_MN1262,59211
static TYPELIB my_locale_typelib_month_names_mn_MN 1264,59326
static TYPELIB my_locale_typelib_ab_month_names_mn_MN 1266,59471
static TYPELIB my_locale_typelib_day_names_mn_MN 1268,59625
static TYPELIB my_locale_typelib_ab_day_names_mn_MN 1270,59764
static const char *my_locale_month_names_ms_MY[my_locale_month_names_ms_MY1292,60396
static const char *my_locale_ab_month_names_ms_MY[my_locale_ab_month_names_ms_MY1294,60568
static const char *my_locale_day_names_ms_MY[my_locale_day_names_ms_MY1296,60710
static const char *my_locale_ab_day_names_ms_MY[my_locale_ab_day_names_ms_MY1298,60830
static TYPELIB my_locale_typelib_month_names_ms_MY 1300,60938
static TYPELIB my_locale_typelib_ab_month_names_ms_MY 1302,61083
static TYPELIB my_locale_typelib_day_names_ms_MY 1304,61237
static TYPELIB my_locale_typelib_ab_day_names_ms_MY 1306,61376
static const char *my_locale_month_names_nb_NO[my_locale_month_names_nb_NO1328,62011
static const char *my_locale_ab_month_names_nb_NO[my_locale_ab_month_names_nb_NO1330,62184
static const char *my_locale_day_names_nb_NO[my_locale_day_names_nb_NO1332,62325
static const char *my_locale_ab_day_names_nb_NO[my_locale_ab_day_names_nb_NO1334,62455
static TYPELIB my_locale_typelib_month_names_nb_NO 1336,62565
static TYPELIB my_locale_typelib_ab_month_names_nb_NO 1338,62710
static TYPELIB my_locale_typelib_day_names_nb_NO 1340,62864
static TYPELIB my_locale_typelib_ab_day_names_nb_NO 1342,63003
static const char *my_locale_month_names_nl_NL[my_locale_month_names_nl_NL1364,63646
static const char *my_locale_ab_month_names_nl_NL[my_locale_ab_month_names_nl_NL1366,63824
static const char *my_locale_day_names_nl_NL[my_locale_day_names_nl_NL1368,63965
static const char *my_locale_ab_day_names_nl_NL[my_locale_ab_day_names_nl_NL1370,64101
static TYPELIB my_locale_typelib_month_names_nl_NL 1372,64202
static TYPELIB my_locale_typelib_ab_month_names_nl_NL 1374,64347
static TYPELIB my_locale_typelib_day_names_nl_NL 1376,64501
static TYPELIB my_locale_typelib_ab_day_names_nl_NL 1378,64640
static const char *my_locale_month_names_pl_PL[my_locale_month_names_pl_PL1400,65272
static const char *my_locale_ab_month_names_pl_PL[my_locale_ab_month_names_pl_PL1402,65465
static const char *my_locale_day_names_pl_PL[my_locale_day_names_pl_PL1404,65607
static const char *my_locale_ab_day_names_pl_PL[my_locale_ab_day_names_pl_PL1406,65746
static TYPELIB my_locale_typelib_month_names_pl_PL 1408,65856
static TYPELIB my_locale_typelib_ab_month_names_pl_PL 1410,66001
static TYPELIB my_locale_typelib_day_names_pl_PL 1412,66155
static TYPELIB my_locale_typelib_ab_day_names_pl_PL 1414,66294
static const char *my_locale_month_names_pt_BR[my_locale_month_names_pt_BR1436,66924
static const char *my_locale_ab_month_names_pt_BR[my_locale_ab_month_names_pt_BR1438,67104
static const char *my_locale_day_names_pt_BR[my_locale_day_names_pt_BR1440,67245
static const char *my_locale_ab_day_names_pt_BR[my_locale_ab_day_names_pt_BR1442,67373
static TYPELIB my_locale_typelib_month_names_pt_BR 1444,67482
static TYPELIB my_locale_typelib_ab_month_names_pt_BR 1446,67627
static TYPELIB my_locale_typelib_day_names_pt_BR 1448,67781
static TYPELIB my_locale_typelib_ab_day_names_pt_BR 1450,67920
static const char *my_locale_month_names_pt_PT[my_locale_month_names_pt_PT1472,68553
static const char *my_locale_ab_month_names_pt_PT[my_locale_ab_month_names_pt_PT1474,68733
static const char *my_locale_day_names_pt_PT[my_locale_day_names_pt_PT1476,68874
static const char *my_locale_ab_day_names_pt_PT[my_locale_ab_day_names_pt_PT1478,69002
static TYPELIB my_locale_typelib_month_names_pt_PT 1480,69111
static TYPELIB my_locale_typelib_ab_month_names_pt_PT 1482,69256
static TYPELIB my_locale_typelib_day_names_pt_PT 1484,69410
static TYPELIB my_locale_typelib_ab_day_names_pt_PT 1486,69549
static const char *my_locale_month_names_ro_RO[my_locale_month_names_ro_RO1508,70182
static const char *my_locale_ab_month_names_ro_RO[my_locale_ab_month_names_ro_RO1510,70370
static const char *my_locale_day_names_ro_RO[my_locale_day_names_ro_RO1512,70511
static const char *my_locale_ab_day_names_ro_RO[my_locale_ab_day_names_ro_RO1514,70641
static TYPELIB my_locale_typelib_month_names_ro_RO 1516,70743
static TYPELIB my_locale_typelib_ab_month_names_ro_RO 1518,70888
static TYPELIB my_locale_typelib_day_names_ro_RO 1520,71042
static TYPELIB my_locale_typelib_ab_day_names_ro_RO 1522,71181
static const char *my_locale_month_names_ru_RU[my_locale_month_names_ru_RU1544,71811
static const char *my_locale_ab_month_names_ru_RU[my_locale_ab_month_names_ru_RU1546,72053
static const char *my_locale_day_names_ru_RU[my_locale_day_names_ru_RU1548,72230
static const char *my_locale_ab_day_names_ru_RU[my_locale_ab_day_names_ru_RU1550,72424
static TYPELIB my_locale_typelib_month_names_ru_RU 1552,72553
static TYPELIB my_locale_typelib_ab_month_names_ru_RU 1554,72698
static TYPELIB my_locale_typelib_day_names_ru_RU 1556,72852
static TYPELIB my_locale_typelib_ab_day_names_ru_RU 1558,72991
static const char *my_locale_month_names_ru_UA[my_locale_month_names_ru_UA1580,73620
static const char *my_locale_ab_month_names_ru_UA[my_locale_ab_month_names_ru_UA1582,73858
static const char *my_locale_day_names_ru_UA[my_locale_day_names_ru_UA1584,74035
static const char *my_locale_ab_day_names_ru_UA[my_locale_ab_day_names_ru_UA1586,74229
static TYPELIB my_locale_typelib_month_names_ru_UA 1588,74358
static TYPELIB my_locale_typelib_ab_month_names_ru_UA 1590,74503
static TYPELIB my_locale_typelib_day_names_ru_UA 1592,74657
static TYPELIB my_locale_typelib_ab_day_names_ru_UA 1594,74796
static const char *my_locale_month_names_sk_SK[my_locale_month_names_sk_SK1616,75426
static const char *my_locale_ab_month_names_sk_SK[my_locale_ab_month_names_sk_SK1618,75605
static const char *my_locale_day_names_sk_SK[my_locale_day_names_sk_SK1620,75749
static const char *my_locale_ab_day_names_sk_SK[my_locale_ab_day_names_sk_SK1622,75880
static TYPELIB my_locale_typelib_month_names_sk_SK 1624,75982
static TYPELIB my_locale_typelib_ab_month_names_sk_SK 1626,76127
static TYPELIB my_locale_typelib_day_names_sk_SK 1628,76281
static TYPELIB my_locale_typelib_ab_day_names_sk_SK 1630,76420
static const char *my_locale_month_names_sl_SI[my_locale_month_names_sl_SI1652,77052
static const char *my_locale_ab_month_names_sl_SI[my_locale_ab_month_names_sl_SI1654,77228
static const char *my_locale_day_names_sl_SI[my_locale_day_names_sl_SI1656,77369
static const char *my_locale_ab_day_names_sl_SI[my_locale_ab_day_names_sl_SI1658,77499
static TYPELIB my_locale_typelib_month_names_sl_SI 1660,77608
static TYPELIB my_locale_typelib_ab_month_names_sl_SI 1662,77753
static TYPELIB my_locale_typelib_day_names_sl_SI 1664,77907
static TYPELIB my_locale_typelib_ab_day_names_sl_SI 1666,78046
static const char *my_locale_month_names_sq_AL[my_locale_month_names_sq_AL1688,78680
static const char *my_locale_ab_month_names_sq_AL[my_locale_ab_month_names_sq_AL1690,78849
static const char *my_locale_day_names_sq_AL[my_locale_day_names_sq_AL1692,78991
static const char *my_locale_ab_day_names_sq_AL[my_locale_ab_day_names_sq_AL1694,79139
static TYPELIB my_locale_typelib_month_names_sq_AL 1696,79256
static TYPELIB my_locale_typelib_ab_month_names_sq_AL 1698,79401
static TYPELIB my_locale_typelib_day_names_sq_AL 1700,79555
static TYPELIB my_locale_typelib_ab_day_names_sq_AL 1702,79694
static const char *my_locale_month_names_sr_RS[my_locale_month_names_sr_RS1724,80324
static const char *my_locale_ab_month_names_sr_RS[my_locale_ab_month_names_sr_RS1726,80497
static const char *my_locale_day_names_sr_RS[my_locale_day_names_sr_RS1728,80638
static const char *my_locale_ab_day_names_sr_RS[my_locale_ab_day_names_sr_RS1730,80770
static TYPELIB my_locale_typelib_month_names_sr_RS 1732,80879
static TYPELIB my_locale_typelib_ab_month_names_sr_RS 1734,81024
static TYPELIB my_locale_typelib_day_names_sr_RS 1736,81178
static TYPELIB my_locale_typelib_ab_day_names_sr_RS 1738,81317
static const char *my_locale_month_names_sv_SE[my_locale_month_names_sv_SE1778,82383
static const char *my_locale_ab_month_names_sv_SE[my_locale_ab_month_names_sv_SE1780,82559
static const char *my_locale_day_names_sv_SE[my_locale_day_names_sv_SE1782,82700
static const char *my_locale_ab_day_names_sv_SE[my_locale_ab_day_names_sv_SE1784,82830
static TYPELIB my_locale_typelib_month_names_sv_SE 1786,82941
static TYPELIB my_locale_typelib_ab_month_names_sv_SE 1788,83086
static TYPELIB my_locale_typelib_day_names_sv_SE 1790,83240
static TYPELIB my_locale_typelib_ab_day_names_sv_SE 1792,83379
static const char *my_locale_month_names_ta_IN[my_locale_month_names_ta_IN1814,84002
static const char *my_locale_ab_month_names_ta_IN[my_locale_ab_month_names_ta_IN1816,84327
static const char *my_locale_day_names_ta_IN[my_locale_day_names_ta_IN1818,84655
static const char *my_locale_ab_day_names_ta_IN[my_locale_ab_day_names_ta_IN1820,84865
static TYPELIB my_locale_typelib_month_names_ta_IN 1822,84973
static TYPELIB my_locale_typelib_ab_month_names_ta_IN 1824,85118
static TYPELIB my_locale_typelib_day_names_ta_IN 1826,85272
static TYPELIB my_locale_typelib_ab_day_names_ta_IN 1828,85411
static const char *my_locale_month_names_te_IN[my_locale_month_names_te_IN1850,86034
static const char *my_locale_ab_month_names_te_IN[my_locale_ab_month_names_te_IN1852,86358
static const char *my_locale_day_names_te_IN[my_locale_day_names_te_IN1854,86685
static const char *my_locale_ab_day_names_te_IN[my_locale_ab_day_names_te_IN1856,86928
static TYPELIB my_locale_typelib_month_names_te_IN 1858,87090
static TYPELIB my_locale_typelib_ab_month_names_te_IN 1860,87235
static TYPELIB my_locale_typelib_day_names_te_IN 1862,87389
static TYPELIB my_locale_typelib_ab_day_names_te_IN 1864,87528
static const char *my_locale_month_names_th_TH[my_locale_month_names_th_TH1886,88153
static const char *my_locale_ab_month_names_th_TH[my_locale_ab_month_names_th_TH1888,88513
static const char *my_locale_day_names_th_TH[my_locale_day_names_th_TH1890,88723
static const char *my_locale_ab_day_names_th_TH[my_locale_ab_day_names_th_TH1892,88927
static TYPELIB my_locale_typelib_month_names_th_TH 1894,89048
static TYPELIB my_locale_typelib_ab_month_names_th_TH 1896,89193
static TYPELIB my_locale_typelib_day_names_th_TH 1898,89347
static TYPELIB my_locale_typelib_ab_day_names_th_TH 1900,89486
static const char *my_locale_month_names_tr_TR[my_locale_month_names_tr_TR1922,90113
static const char *my_locale_ab_month_names_tr_TR[my_locale_ab_month_names_tr_TR1924,90284
static const char *my_locale_day_names_tr_TR[my_locale_day_names_tr_TR1926,90427
static const char *my_locale_ab_day_names_tr_TR[my_locale_ab_day_names_tr_TR1928,90562
static TYPELIB my_locale_typelib_month_names_tr_TR 1930,90673
static TYPELIB my_locale_typelib_ab_month_names_tr_TR 1932,90818
static TYPELIB my_locale_typelib_day_names_tr_TR 1934,90972
static TYPELIB my_locale_typelib_ab_day_names_tr_TR 1936,91111
static const char *my_locale_month_names_uk_UA[my_locale_month_names_uk_UA1958,91741
static const char *my_locale_ab_month_names_uk_UA[my_locale_ab_month_names_uk_UA1960,92009
static const char *my_locale_day_names_uk_UA[my_locale_day_names_uk_UA1962,92186
static const char *my_locale_ab_day_names_uk_UA[my_locale_ab_day_names_uk_UA1964,92367
static TYPELIB my_locale_typelib_month_names_uk_UA 1966,92496
static TYPELIB my_locale_typelib_ab_month_names_uk_UA 1968,92641
static TYPELIB my_locale_typelib_day_names_uk_UA 1970,92795
static TYPELIB my_locale_typelib_ab_day_names_uk_UA 1972,92934
static const char *my_locale_month_names_ur_PK[my_locale_month_names_ur_PK1994,93563
static const char *my_locale_ab_month_names_ur_PK[my_locale_ab_month_names_ur_PK1996,93775
static const char *my_locale_day_names_ur_PK[my_locale_day_names_ur_PK1998,93990
static const char *my_locale_ab_day_names_ur_PK[my_locale_ab_day_names_ur_PK2000,94132
static TYPELIB my_locale_typelib_month_names_ur_PK 2002,94277
static TYPELIB my_locale_typelib_ab_month_names_ur_PK 2004,94422
static TYPELIB my_locale_typelib_day_names_ur_PK 2006,94576
static TYPELIB my_locale_typelib_ab_day_names_ur_PK 2008,94715
static const char *my_locale_month_names_vi_VN[my_locale_month_names_vi_VN2030,95345
static const char *my_locale_ab_month_names_vi_VN[my_locale_ab_month_names_vi_VN2032,95602
static const char *my_locale_day_names_vi_VN[my_locale_day_names_vi_VN2034,95770
static const char *my_locale_ab_day_names_vi_VN[my_locale_ab_day_names_vi_VN2036,95937
static TYPELIB my_locale_typelib_month_names_vi_VN 2038,96057
static TYPELIB my_locale_typelib_ab_month_names_vi_VN 2040,96202
static TYPELIB my_locale_typelib_day_names_vi_VN 2042,96356
static TYPELIB my_locale_typelib_ab_day_names_vi_VN 2044,96495
static const char *my_locale_month_names_zh_CN[my_locale_month_names_zh_CN2066,97147
static const char *my_locale_ab_month_names_zh_CN[my_locale_ab_month_names_zh_CN2068,97327
static const char *my_locale_day_names_zh_CN[my_locale_day_names_zh_CN2070,97492
static const char *my_locale_ab_day_names_zh_CN[my_locale_ab_day_names_zh_CN2072,97639
static TYPELIB my_locale_typelib_month_names_zh_CN 2074,97747
static TYPELIB my_locale_typelib_ab_month_names_zh_CN 2076,97892
static TYPELIB my_locale_typelib_day_names_zh_CN 2078,98046
static TYPELIB my_locale_typelib_ab_day_names_zh_CN 2080,98185
static const char *my_locale_month_names_zh_TW[my_locale_month_names_zh_TW2102,98831
static const char *my_locale_ab_month_names_zh_TW[my_locale_ab_month_names_zh_TW2104,99011
static const char *my_locale_day_names_zh_TW[my_locale_day_names_zh_TW2106,99176
static const char *my_locale_ab_day_names_zh_TW[my_locale_ab_day_names_zh_TW2108,99302
static TYPELIB my_locale_typelib_month_names_zh_TW 2110,99410
static TYPELIB my_locale_typelib_ab_month_names_zh_TW 2112,99555
static TYPELIB my_locale_typelib_day_names_zh_TW 2114,99709
static TYPELIB my_locale_typelib_ab_day_names_zh_TW 2116,99848
static const char *my_locale_month_names_el_GR[my_locale_month_names_el_GR3179,125562
static const char *my_locale_ab_month_names_el_GR[my_locale_ab_month_names_el_GR3187,125905
static const char *my_locale_day_names_el_GR[my_locale_day_names_el_GR3195,126103
static const char *my_locale_ab_day_names_el_GR[my_locale_ab_day_names_el_GR3201,126298
static TYPELIB my_locale_typelib_month_names_el_GR=3207,126438
static TYPELIB my_locale_typelib_ab_month_names_el_GR=3213,126588
static TYPELIB my_locale_typelib_day_names_el_GR=3219,126745
static TYPELIB my_locale_typelib_ab_day_names_el_GR=3225,126887
MY_LOCALE *my_locales[my_locales3256,127712
MY_LOCALE *my_locales_deprecated[my_locales_deprecated3372,130178
MY_LOCALE *my_locale_by_number(my_locale_by_number3379,130248
my_locale_by_name(3392,130565
MY_LOCALE *my_locale_by_name(my_locale_by_name3404,130814
void cleanup_errmsgs(3441,131861

sql/sql_manager.cc,473
static bool volatile manager_thread_in_use;29,1110
static bool abort_manager;30,1154
pthread_t manager_thread;32,1182
mysql_mutex_t LOCK_manager;33,1208
mysql_cond_t COND_manager;34,1236
struct handler_cb 36,1264
   struct handler_cb *next;handler_cb::next37,1284
static struct handler_cb * volatile cb_list;41,1341
bool mysql_manager_submit(43,1387
pthread_handler_t handle_manager(66,1872
void start_handle_manager(132,3349
void stop_handle_manager(148,3789

sql/sql_parse.cc,4507
#define MYSQL_LEX 16,746
#define FLAGSTR(101,4568
#define SP_TYPE_STRING(109,4708
#define SP_COM_STRING(111,4811
const char *any_db=any_db121,5210
const LEX_STRING command_name[command_name123,5274
const char *xa_state_names[xa_state_names157,6481
inline bool all_tables_not_ok(166,6660
static bool some_non_temp_table_to_be_updated(174,6841
static bool stmt_causes_implicit_commit(193,7300
uint sql_command_flags[sql_command_flags235,8315
uint server_command_flags[server_command_flags236,8353
void init_update_queries(238,8392
bool sqlcom_can_generate_row_events(412,19549
bool is_update_query(418,19699
bool is_log_table_write_query(429,20009
void execute_init_command(435,20197
static void handle_bootstrap_impl(481,21415
pthread_handler_t handle_bootstrap(591,24616
void do_handle_bootstrap(601,24775
void free_items(637,25483
void cleanup_items(653,25789
bool do_command(675,26269
static my_bool deny_updates_if_read_only_option(798,30092
bool dispatch_command(873,32175
void log_slow_statement(1446,50855
int prepare_schema_table(1510,52965
bool alloc_query(1631,56179
static void reset_one_shot_variables(1680,57847
bool sp_process_definer(1699,58418
static bool lock_tables_open_and_lock_tables(1793,61515
mysql_execute_command(1862,63628
static bool execute_sqlcom_select(4549,149765
bool check_single_table_access(4629,152290
bool check_one_table_access(4679,153661
check_access(4735,155709
static bool check_show_access(4921,161630
check_table_access(5035,165161
check_routine_access(5095,167095
bool check_some_routine_access(5142,168632
bool check_some_access(5176,169652
bool check_global_access(5219,170845
#define used_stack(5239,171441
#define used_stack(5241,171486
long max_stack_used;5245,171550
bool check_stack_overrun(5255,171875
#define MY_YACC_INIT 5283,172687
#define MY_YACC_MAX 5284,172739
bool my_yyoverflow(5286,172791
void mysql_reset_thd_for_next_command(5334,174360
void THD::reset_for_next_command(5339,174446
mysql_init_select(5405,176472
mysql_new_select(5431,177005
void create_select_for_variable(5508,179349
void mysql_init_multi_delete(5538,180157
void mysql_parse(5565,180911
bool mysql_test_parse_for_slave(5677,184729
bool add_field_to_list(5708,185376
void store_position_for_column(5801,188269
add_proc_to_list(5807,188382
bool add_to_list(5827,188759
TABLE_LIST *st_select_lex::add_table_to_list(st_select_lex::add_table_to_list5864,189890
bool st_select_lex::init_nested_join(6047,196136
TABLE_LIST *st_select_lex::end_nested_join(st_select_lex::end_nested_join6084,197108
TABLE_LIST *st_select_lex::nest_last_join(st_select_lex::nest_last_join6126,198058
void st_select_lex::add_joined_table(6182,199572
TABLE_LIST *st_select_lex::convert_right_join(st_select_lex::convert_right_join6223,200755
void st_select_lex::set_lock_for_tables(6247,201296
bool st_select_lex_unit::add_fake_select_lex(6292,202560
push_new_name_resolution_context(6350,204473
void add_join_on(6379,205297
void add_join_natural(6432,206861
uint kill_one_thread(6451,207281
void sql_kill(6521,209252
bool append_file_to_dir(6538,209599
bool check_simple_select(6572,210538
Comp_creator *comp_eq_creator(comp_eq_creator6589,210938
Comp_creator *comp_ge_creator(comp_ge_creator6595,211060
Comp_creator *comp_gt_creator(comp_gt_creator6601,211182
Comp_creator *comp_le_creator(comp_le_creator6607,211304
Comp_creator *comp_lt_creator(comp_lt_creator6613,211426
Comp_creator *comp_ne_creator(comp_ne_creator6619,211548
Item * all_any_subquery_creator(6636,211978
bool multi_update_precheck(6668,212803
bool multi_delete_precheck(6747,214989
static TABLE_LIST *multi_delete_table_match(multi_delete_table_match6799,216766
bool multi_delete_set_locks_and_link_aux_tables(6851,218051
bool update_precheck(6895,219265
bool delete_precheck(6919,219759
bool insert_precheck(6942,220221
void create_table_set_open_action_and_adjust_tables(6972,221042
bool create_table_precheck(7008,221935
Item *negate_expression(negate_expression7072,223776
void get_default_definer(7103,224669
LEX_USER *create_default_definer(create_default_definer7130,225336
LEX_USER *create_definer(create_definer7156,225865
LEX_USER *get_current_user(get_current_user7186,226491
bool check_string_byte_length(7211,227087
bool check_string_char_length(7239,227822
int test_if_data_home_dir(7273,228749
bool check_host_name(7320,230002
bool parse_sql(7358,230833
merge_charset_and_collation(7437,232808

sql/sql_partition_admin.cc,370
bool Partition_statement_unsupported::execute(28,1304
bool Alter_table_analyze_partition_statement::execute(39,1598
bool Alter_table_check_partition_statement::execute(56,1970
bool Alter_table_optimize_partition_statement::execute(73,2336
bool Alter_table_repair_partition_statement::execute(90,2711
bool Alter_table_truncate_partition_statement::execute(107,3080

sql/sql_partition.cc,7017
#define MYSQL_LEX 48,2338
#define ERROR_INJECT_CRASH(74,3474
#define ERROR_INJECT_ERROR(76,3551
const LEX_STRING partition_keywords[partition_keywords82,3735
static const char *part_str=part_str92,4021
static const char *sub_str=sub_str93,4063
static const char *by_str=by_str94,4098
static const char *space_str=space_str95,4131
static const char *equal_str=equal_str96,4166
static const char *end_paren_str=end_paren_str97,4201
static const char *begin_paren_str=begin_paren_str98,4240
static const char *comma_str=comma_str99,4281
Item* convert_charset_partition_constant(190,9027
bool is_name_in_list(221,9850
bool partition_default_handling(254,10642
bool check_reorganise_list(308,12310
int get_parts_for_update(361,14042
int get_part_for_delete(435,16328
static bool set_up_field_array(509,19044
static bool create_full_part_field_array(641,22502
static void clear_indicator_in_key_fields(739,25451
static void set_indicator_in_key_fields(759,25908
static void check_fields_in_PF(782,26561
static void clear_field_flag(818,27334
static bool handle_list_of_fields(852,28291
int check_signed_flag(932,30531
init_lex_with_single_table(976,31763
end_lex_with_single_table(1026,33554
static bool fix_fields_part_func(1072,35404
static bool check_primary_key(1187,39394
static bool check_unique_keys(1230,40662
void check_range_capable_PF(1310,43929
static bool set_up_partition_bitmap(1335,44412
static void set_up_partition_key_maps(1379,45841
static void set_up_partition_func_pointers(1434,47550
void set_linear_hash_mask(1575,52083
static uint32 get_part_id_from_linear_hash(1605,53056
bool field_is_partition_charset(1632,53740
bool check_part_func_fields(1667,54820
bool fix_partition_func(1721,56422
static int add_write(1902,62194
static int add_string_object(1912,62403
static int add_string(1917,62523
static int add_string_len(1922,62631
static int add_space(1927,62742
static int add_comma(1932,62817
static int add_equal(1937,62892
static int add_end_parenthesis(1942,62967
static int add_begin_parenthesis(1947,63056
static int add_part_key_word(1952,63149
static int add_partition(1959,63298
static int add_subpartition(1966,63434
static int add_partition_by(1973,63553
static int add_subpartition_by(1980,63711
static int add_part_field_list(1987,63836
static int add_name_string(2015,64640
static int add_int(2029,65083
static int add_uint(2036,65208
static int add_quoted_string(2047,65477
static int add_keyword_string(2057,65782
static int add_keyword_int(2073,66211
static int add_engine(2084,66463
static int add_partition_options(2092,66734
static int check_part_field(2137,68305
static Create_field* get_sql_field(2205,70081
static int add_column_list_values(2225,70546
static int add_partition_values(2337,74428
char *generate_partition_syntax(generate_partition_syntax2452,78212
bool partition_key_modified(2659,84857
static inline int part_val_int(2690,85769
static uint32 calculate_key_value(2737,87377
static uint32 get_part_id_for_sub(2763,87866
static int get_part_id_hash(2785,88472
static int get_part_id_linear_hash(2820,89437
static uint32 get_part_id_key(2851,90290
static uint32 get_part_id_linear_key(2876,90969
static void copy_to_part_field_buffers(2908,92123
static void restore_part_field_pointers(2962,93735
static int get_part_id_charset_func_part(3045,96588
static int get_part_id_charset_func_subpart(3063,97317
int get_partition_id_list_col(3078,97944
int get_partition_id_list(3114,98951
uint32 get_partition_id_cols_list_for_endpoint(3205,102091
uint32 get_list_array_idx_for_endpoint_charset(3243,103252
uint32 get_list_array_idx_for_endpoint(3258,103929
int get_partition_id_range_col(3319,105943
int get_partition_id_range(3356,107195
get_partition_id_range_for_endpoint_charset(3444,110310
uint32 get_partition_id_range_for_endpoint(3459,110986
int get_partition_id_hash_nosub(3549,113928
int get_partition_id_linear_hash_nosub(3558,114216
int get_partition_id_key_nosub(3567,114550
int get_partition_id_linear_key_nosub(3577,114849
int get_partition_id_with_sub(3588,115227
int get_partition_id_hash_sub(3638,116698
int get_partition_id_linear_hash_sub(3647,116956
int get_partition_id_key_sub(3657,117286
int get_partition_id_linear_key_sub(3667,117560
static bool set_PF_fields_in_key(3691,118269
static bool check_part_func_bound(3736,119507
static int get_sub_part_id_from_key(3774,120471
bool get_part_id_from_key(3820,121910
void get_full_part_id_from_key(3867,123445
void prune_partition_set(3916,124999
void get_partition_set(3968,126757
bool mysql_unpack_partition(4192,134862
set_engine_all_partitions(4336,140292
static int fast_end_partition(4375,141309
static bool check_native_partitioned(4416,142435
bool set_part_state(4484,144413
uint prep_alter_part_table(4555,146852
static bool mysql_change_partitions(5564,185381
static bool mysql_rename_partitions(5618,186862
static bool mysql_drop_partitions(5655,187821
static void insert_part_info_log_entry_list(5694,188737
static void release_part_info_log_entries(5711,189203
static bool write_log_replace_delete_frm(5742,190153
static bool write_log_changed_partitions(5792,191937
static bool write_log_dropped_partitions(5887,195478
static void set_part_info_exec_log_entry(5981,198751
static bool write_log_drop_shadow_frm(6005,199567
static bool write_log_rename_frm(6048,200985
static bool write_log_drop_partition(6099,202740
static bool write_log_add_change_partition(6157,204834
static bool write_log_final_change_partition(6223,207209
static void write_log_completed(6281,209259
static void release_log_entries(6319,210352
static void alter_partition_lock_handling(6339,210886
static int alter_close_tables(6371,211719
void handle_alter_part_error(6398,212527
static void downgrade_mdl_if_lock_tables_mode(6529,217126
uint fast_alter_partition_table(6559,218215
void set_field_ptr(6980,237997
void set_key_field_ptr(7014,239022
void mem_alloc_error(7047,239763
void make_used_partitions_str(7069,240351
static void set_up_range_analysis_info(7157,243200
uint32 store_tuple_to_record(7249,245597
static int cmp_rec_and_tuple(7289,246635
static int cmp_rec_and_tuple_prune(7316,247205
typedef uint32 (*get_endpoint_func)get_endpoint_func7338,247740
typedef uint32 (*get_col_endpoint_func)get_col_endpoint_func7341,247874
uint32 get_partition_id_cols_range_for_endpoint(7380,249529
int get_part_iter_for_interval_cols_via_map(7434,251336
int get_part_iter_for_interval_via_mapping(7501,253770
#define MAX_RANGE_TO_WALK 7635,258933
int get_part_iter_for_interval_via_walking(7677,260640
uint32 get_next_partition_id_range(7816,265453
uint32 get_next_partition_id_list(7853,266538
static uint32 get_next_partition_via_walking(7898,267829
static uint32 get_next_subpartition_via_walking(7921,268701
void create_partition_name(7957,269685
void create_subpartition_name(7999,270847
uint get_partition_field_store_length(8018,271648

sql/sql_plugin.cc,8692
#define REPORT_TO_LOG 36,1641
#define REPORT_TO_USER 37,1666
const char *global_plugin_typelib_names[global_plugin_typelib_names46,1890
static TYPELIB global_plugin_typelib=48,1991
char *opt_plugin_load=opt_plugin_load53,2127
char *opt_plugin_dir_ptr;opt_plugin_dir_ptr54,2156
char opt_plugin_dir[opt_plugin_dir55,2182
const LEX_STRING plugin_type_names[plugin_type_names60,2341
plugin_type_init plugin_type_initialize[plugin_type_initialize83,3096
plugin_type_init plugin_type_deinitialize[plugin_type_deinitialize89,3258
static const char *plugin_interface_version_sym=plugin_interface_version_sym96,3435
static const char *sizeof_st_plugin_sym=sizeof_st_plugin_sym98,3539
static const char *plugin_declarations_sym=plugin_declarations_sym100,3634
static int min_plugin_interface_version=101,3709
static int min_plugin_info_interface_version[min_plugin_info_interface_version107,3901
static int cur_plugin_info_interface_version[cur_plugin_info_interface_version118,4256
mysql_mutex_t LOCK_plugin;139,4875
static DYNAMIC_ARRAY plugin_dl_array;140,4902
static DYNAMIC_ARRAY plugin_array;141,4940
static HASH plugin_hash[plugin_hash142,4975
static bool reap_needed=143,5027
static int plugin_array_version=144,5059
static bool initialized=146,5095
static MEM_ROOT plugin_mem_root;152,5239
static uint global_variables_dynamic_size=153,5272
static HASH bookmark_hash;154,5318
struct st_item_value_holder 161,5483
  Item *item;st_item_value_holder::item163,5537
struct st_bookmark178,5959
  uint name_len;st_bookmark::name_len180,5980
  int offset;st_bookmark::offset181,5997
  uint version;st_bookmark::version182,6011
  char key[st_bookmark::key183,6027
struct st_mysql_sys_var190,6123
  MYSQL_PLUGIN_VAR_HEADER;st_mysql_sys_var::MYSQL_PLUGIN_VAR_HEADER192,6149
class sys_var_pluginvar:sys_var_pluginvar201,6327
  struct st_plugin_int *plugin;sys_var_pluginvar::plugin204,6377
  struct st_mysql_sys_var *plugin_var;sys_var_pluginvar::plugin_var205,6409
  const char *orig_pluginvar_name;sys_var_pluginvar::orig_pluginvar_name213,6817
  static void *operator new(sys_var_pluginvar::operator new215,6853
  static void operator delete(sys_var_pluginvar::operator delete217,6963
  sys_var_pluginvar(sys_var_pluginvar::sys_var_pluginvar220,7049
  sys_var_pluginvar *cast_pluginvar(sys_var_pluginvar::cast_pluginvar229,7633
  uchar* session_value_ptr(sys_var_pluginvar::session_value_ptr235,7920
  uchar* global_value_ptr(sys_var_pluginvar::global_value_ptr237,8026
  virtual void session_save_default(sys_var_pluginvar::session_save_default240,8171
  virtual void global_save_default(sys_var_pluginvar::global_save_default241,8234
#define my_intern_plugin_lock(268,9714
#define my_intern_plugin_lock_ci(269,9773
static void report_error(274,9998
bool check_valid_path(304,10729
static int item_value_type(315,11111
static const char *item_val_str(item_val_str327,11395
static int item_val_int(345,11904
static int item_is_unsigned(354,12105
static int item_val_real(360,12250
static struct st_plugin_dl *plugin_dl_find(plugin_dl_find376,12650
static st_plugin_dl *plugin_dl_insert_or_reuse(plugin_dl_insert_or_reuse394,13157
static inline void free_plugin_mem(419,13970
static st_plugin_dl *plugin_dl_add(plugin_dl_add431,14201
static void plugin_dl_del(633,20668
static struct st_plugin_int *plugin_find_internal(plugin_find_internal664,21473
static SHOW_COMP_OPTION plugin_status(691,22148
bool plugin_is_ready(708,22576
SHOW_COMP_OPTION plugin_status(717,22734
static plugin_ref intern_plugin_lock(724,22905
plugin_ref plugin_lock(763,23937
plugin_ref plugin_lock_by_name(775,24203
static st_plugin_int *plugin_insert_or_reuse(plugin_insert_or_reuse789,24606
static bool plugin_add(817,25466
static void plugin_deinitialize(891,27944
static void plugin_del(948,29736
static void reap_plugins(967,30437
static void intern_plugin_unlock(1007,31322
void plugin_unlock(1055,32381
void plugin_unlock_list(1074,32802
static int plugin_initialize(1088,33127
uchar *get_plugin_hash_key(get_plugin_hash_key1175,35482
uchar *get_bookmark_hash_key(get_bookmark_hash_key1184,35749
static inline void convert_dash_to_underscore(1192,35995
static inline void convert_underscore_to_dash(1199,36140
static PSI_mutex_key key_LOCK_plugin;1207,36311
static PSI_mutex_info all_plugin_mutexes[all_plugin_mutexes1209,36350
static void init_plugin_psi_keys(1214,36454
int plugin_init(1234,36984
static bool register_builtin(1426,42686
static void plugin_load(1452,43426
static bool plugin_load_list(1537,46141
void plugin_shutdown(1622,48391
bool mysql_install_plugin(1752,52300
bool mysql_uninstall_plugin(1860,55602
bool plugin_foreach_with_mask(1972,59118
#undef MYSQL_SYSVAR_NAME2040,61145
#define MYSQL_SYSVAR_NAME(2041,61170
#define PLUGIN_VAR_TYPEMASK 2042,61207
#define EXTRA_OPTIONS 2044,61243
typedef DECLARE_MYSQL_SYSVAR_BASIC(sysvar_bool_t, my_bool)2046,61316
typedef DECLARE_MYSQL_THDVAR_BASIC(thdvar_bool_t, my_bool)2047,61376
typedef DECLARE_MYSQL_SYSVAR_BASIC(sysvar_str_t, char 2048,61436
typedef DECLARE_MYSQL_THDVAR_BASIC(thdvar_str_t, char 2049,61494
typedef DECLARE_MYSQL_SYSVAR_TYPELIB(sysvar_enum_t, unsigned long)2051,61553
typedef DECLARE_MYSQL_THDVAR_TYPELIB(thdvar_enum_t, unsigned long)2052,61621
typedef DECLARE_MYSQL_SYSVAR_TYPELIB(sysvar_set_t, ulonglong)2053,61689
typedef DECLARE_MYSQL_THDVAR_TYPELIB(thdvar_set_t, ulonglong)2054,61752
typedef DECLARE_MYSQL_SYSVAR_SIMPLE(sysvar_int_t, int)2056,61816
typedef DECLARE_MYSQL_SYSVAR_SIMPLE(sysvar_long_t, long)2057,61872
typedef DECLARE_MYSQL_SYSVAR_SIMPLE(sysvar_longlong_t, longlong)2058,61930
typedef DECLARE_MYSQL_SYSVAR_SIMPLE(sysvar_uint_t, uint)2059,61996
typedef DECLARE_MYSQL_SYSVAR_SIMPLE(sysvar_ulong_t, ulong)2060,62054
typedef DECLARE_MYSQL_SYSVAR_SIMPLE(sysvar_ulonglong_t, ulonglong)2061,62114
typedef DECLARE_MYSQL_THDVAR_SIMPLE(thdvar_int_t, int)2063,62183
typedef DECLARE_MYSQL_THDVAR_SIMPLE(thdvar_long_t, long)2064,62239
typedef DECLARE_MYSQL_THDVAR_SIMPLE(thdvar_longlong_t, longlong)2065,62297
typedef DECLARE_MYSQL_THDVAR_SIMPLE(thdvar_uint_t, uint)2066,62363
typedef DECLARE_MYSQL_THDVAR_SIMPLE(thdvar_ulong_t, ulong)2067,62421
typedef DECLARE_MYSQL_THDVAR_SIMPLE(thdvar_ulonglong_t, ulonglong)2068,62481
static int check_func_bool(2075,62759
static int check_func_int(2105,63410
static int check_func_long(2134,64271
static int check_func_longlong(2163,65137
static int check_func_str(2191,66000
static int check_func_enum(2206,66357
static int check_func_set(2244,67207
static void update_func_bool(2285,68263
static void update_func_int(2292,68450
static void update_func_long(2299,68612
static void update_func_longlong(2306,68777
static void update_func_str(2313,68955
sys_var *find_sys_var(find_sys_var2325,69307
static st_bookmark *find_bookmark(find_bookmark2364,70432
static st_bookmark *register_var(register_var2405,71453
static void restore_pluginvar_names(2503,74650
static uchar *intern_sys_var_ptr(intern_sys_var_ptr2519,75118
static char *mysql_sys_var_char(mysql_sys_var_char2609,78385
static int *mysql_sys_var_int(mysql_sys_var_int2614,78501
static long *mysql_sys_var_long(mysql_sys_var_long2619,78614
static unsigned long *mysql_sys_var_ulong(mysql_sys_var_ulong2624,78730
static long long *mysql_sys_var_longlong(mysql_sys_var_longlong2629,78865
static unsigned long long *mysql_sys_var_ulonglong(mysql_sys_var_ulonglong2634,78995
static char **mysql_sys_var_str(mysql_sys_var_str2639,79144
void plugin_thdvar_init(2644,79261
static void unlock_variables(2672,80049
static void cleanup_variables(2685,80349
void plugin_thdvar_cleanup(2699,80679
static void plugin_vars_free_values(2738,81646
static SHOW_TYPE pluginvar_show_type(2760,82332
static bool plugin_var_memalloc_session_update(2820,84164
static void plugin_var_memalloc_free(2867,85473
static bool plugin_var_memalloc_global_update(2894,86111
bool sys_var_pluginvar::check_update_type(2913,86614
uchar* sys_var_pluginvar::real_value_ptr(2932,87055
TYPELIB* sys_var_pluginvar::plugin_var_typelib(2946,87380
uchar* sys_var_pluginvar::do_value_ptr(2964,87929
bool sys_var_pluginvar::do_check(2979,88478
bool sys_var_pluginvar::session_update(2995,88906
bool sys_var_pluginvar::global_update(3018,89724
#define OPTION_SET_LIMITS(3088,91899
static void plugin_opt_set_limits(3096,92142
my_bool get_one_plugin_option(3200,96193
static int construct_options(3227,97032
static my_option *construct_help_options(construct_help_options3462,104859
static int test_plugin_options(3512,106424
void add_plugin_options(3652,110785

sql/sql_prepare.cc,7299
class Select_fetch_protocol_binary:Select_fetch_protocol_binary121,4730
  Protocol_binary protocol;Select_fetch_protocol_binary::protocol123,4787
  void begin_dataset(Select_fetch_protocol_binary::begin_dataset130,5032
class Prepared_statement:Prepared_statement143,5257
  enum flag_valuesPrepared_statement::flag_values146,5310
    IS_IN_USE=Prepared_statement::flag_values::IS_IN_USE148,5333
    IS_SQL_PREPARE=Prepared_statement::flag_values::IS_SQL_PREPARE149,5351
  THD *thd;Prepared_statement::thd152,5379
  Select_fetch_protocol_binary result;Prepared_statement::result153,5391
  Item_param **param_array;Prepared_statement::param_array154,5430
  Server_side_cursor *cursor;Prepared_statement::cursor155,5458
  uint param_count;Prepared_statement::param_count156,5488
  uint last_errno;Prepared_statement::last_errno157,5508
  uint flags;Prepared_statement::flags158,5527
  char last_error[Prepared_statement::last_error159,5541
  inline void close_cursor(Prepared_statement::close_cursor176,6214
  inline bool is_in_use(Prepared_statement::is_in_use177,6273
  inline bool is_sql_prepare(Prepared_statement::is_sql_prepare178,6336
  void set_sql_prepare(Prepared_statement::set_sql_prepare179,6415
  MEM_ROOT main_mem_root;Prepared_statement::main_mem_root192,6922
class Execute_sql_statement:Execute_sql_statement207,7360
  LEX_STRING m_sql_text;Execute_sql_statement::m_sql_text213,7523
class Protocol_local 224,7679
  ~Protocol_local(Protocol_local::~Protocol_local228,7785
  virtual enum enum_protocol_type type(Protocol_local::type253,8874
  Ed_connection *m_connection;Protocol_local::m_connection268,9512
  MEM_ROOT m_rset_root;Protocol_local::m_rset_root269,9543
  List<Ed_row> *m_rset;Protocol_local::m_rset270,9567
  size_t m_column_count;Protocol_local::m_column_count271,9591
  Ed_column *m_current_row;Protocol_local::m_current_row272,9616
  Ed_column *m_current_column;Protocol_local::m_current_column273,9644
inline bool is_param_null(281,9858
find_prepared_statement(301,10418
static bool send_prep_stmt(328,11045
static bool send_prep_stmt(364,12149
static ulong get_param_length(395,12836
#define get_param_length(432,13646
static void set_param_tiny(450,14222
static void set_param_short(462,14527
static void set_param_int32(477,14878
static void set_param_int64(492,15229
static void set_param_float(506,15494
static void set_param_double(520,15745
static void set_param_decimal(534,15999
static void set_param_time(553,16440
static void set_param_datetime(585,17221
static void set_param_date(617,17953
void set_param_time(646,18564
void set_param_datetime(663,18971
void set_param_date(672,19211
static void set_param_str(682,19453
#undef get_param_length692,19672
static void setup_one_conversion_function(694,19697
inline bool is_param_long_data_type(804,23489
static bool insert_params_with_log(849,25035
static bool insert_params(909,26952
static bool setup_conversion_functions(949,28206
static bool emb_insert_params(997,29571
static bool emb_insert_params_with_log(1033,30678
swap_parameter_array(1121,33705
static bool insert_params_from_vars(1144,34361
static bool insert_params_from_vars_with_log(1182,35692
static bool mysql_test_insert(1240,37451
static int mysql_test_update(1333,40201
static bool mysql_test_delete(1415,42651
static int mysql_test_select(1457,43733
static bool mysql_test_do_fields(1532,45875
static bool mysql_test_set_fields(1562,46762
static bool mysql_test_call_fields(1598,47762
static bool select_like_stmt_test(1644,49126
select_like_stmt_test_with_open(1680,50251
static bool mysql_test_create_table(1714,51312
static bool mysql_test_create_view(1774,53029
static bool mysql_test_multiupdate(1814,54144
static bool mysql_test_multidelete(1839,54871
static int mysql_insert_select_prepare_tester(1878,55940
static bool mysql_test_insert_select(1904,56694
static bool check_prepared_statement(1951,58020
static bool init_param_array(2117,62720
void mysqld_stmt_prepare(2173,64592
static const char *get_dynamic_sql_string(get_dynamic_sql_string2231,66207
void mysql_sql_stmt_prepare(2320,68966
void reinit_stmt_before_use(2385,70498
static void reset_stmt_params(2518,74290
void mysqld_stmt_execute(2544,75114
void mysql_sql_stmt_execute(2609,77374
void mysqld_stmt_fetch(2648,78471
void mysqld_stmt_reset(2710,80213
void mysqld_stmt_close(2754,81216
void mysql_sql_stmt_close(2790,82097
void mysql_stmt_get_longdata(2824,83203
Select_fetch_protocol_binary::Select_fetch_protocol_binary(2897,85218
bool Select_fetch_protocol_binary::send_result_set_metadata(2901,85316
bool Select_fetch_protocol_binary::send_eof(2919,85839
Select_fetch_protocol_binary::send_data(2934,86090
Reprepare_observer::report_error(2951,86550
Server_runnable::~Server_runnable(2973,87275
Execute_sql_statement(2980,87417
Execute_sql_statement::execute_server_code(2995,87801
Prepared_statement::Prepared_statement(3033,88723
void Prepared_statement::setup_set_params(3050,89165
Prepared_statement::~Prepared_statement(3094,90372
Query_arena::Type Prepared_statement::type(3115,90898
void Prepared_statement::cleanup_stmt(3121,90984
bool Prepared_statement::set_name(3134,91249
Prepared_statement::set_db(3153,91716
bool Prepared_statement::prepare(3197,93085
Prepared_statement::set_parameters(3354,98148
Prepared_statement::execute_loop(3415,100119
Prepared_statement::execute_server_runnable(3481,101885
Prepared_statement::reprepare(3528,103159
bool Prepared_statement::validate_metadata(3590,104981
Prepared_statement::swap_prepared_statement(3621,105713
bool Prepared_statement::execute(3684,107712
void Prepared_statement::deallocate(3861,113032
void Ed_result_set::operator delete(Ed_result_set::operator delete3880,113659
Ed_result_set::Ed_result_set(3905,114317
Ed_connection::Ed_connection(3925,114893
Ed_connection::free_old_result(3942,115177
Ed_connection::execute_direct(3961,115540
bool Ed_connection::execute_direct(3983,116174
Ed_connection::add_result_set(4028,117467
Ed_connection::store_result_set(4056,118174
Protocol_local::Protocol_local(4089,119077
void Protocol_local::prepare_for_resend(4109,119585
bool Protocol_local::write(4126,120013
void Protocol_local::opt_add_row_to_rset(4137,120260
bool Protocol_local::store_null(4153,120571
bool Protocol_local::store_column(4171,120956
Protocol_local::store_string(4197,121748
bool Protocol_local::store_tiny(4218,122310
bool Protocol_local::store_short(4227,122492
bool Protocol_local::store_long(4236,122679
bool Protocol_local::store_longlong(4245,122868
bool Protocol_local::store_decimal(4254,123066
bool Protocol_local::store(4271,123422
bool Protocol_local::store(4283,123701
bool Protocol_local::store(4292,123932
bool Protocol_local::store_date(4300,124076
bool Protocol_local::store_time(4308,124225
bool Protocol_local::store(4316,124375
bool Protocol_local::store(4324,124547
bool Protocol_local::store(4332,124697
bool Protocol_local::send_result_set_metadata(4342,124870
bool Protocol_local::send_out_parameters(4363,125334
Protocol_local::send_ok(4372,125509
bool Protocol_local::send_eof(4392,126062
Protocol_local::send_error(4424,126824
void Protocol_local::remove_last_row(4435,127041

sql/sql_profile.cc,1307
#define TIME_FLOAT_DIGITS 39,1584
#define TIME_I_S_DECIMAL_SIZE 41,1651
#define MAX_QUERY_LENGTH 43,1728
#define MAX_QUERY_HISTORY 44,1757
int fill_query_profile_statistics_info(49,1840
ST_FIELD_INFO query_profile_statistics_info[query_profile_statistics_info60,2165
int make_profile_table_for_show(85,3895
#define RUSAGE_USEC(136,5692
#define RUSAGE_DIFF_USEC(137,5756
static ULONGLONG FileTimeToQuadWord(140,5846
    ULONGLONG qwTime;::qwTime144,5948
    FILETIME ft;::ft145,5970
static double GetTimeDiffInSeconds(154,6095
PROF_MEASUREMENT::PROF_MEASUREMENT(160,6234
PROF_MEASUREMENT::PROF_MEASUREMENT(168,6438
PROF_MEASUREMENT::~PROF_MEASUREMENT(179,6840
void PROF_MEASUREMENT::set_label(185,6951
void PROF_MEASUREMENT::collect(243,8493
QUERY_PROFILE::QUERY_PROFILE(258,8983
QUERY_PROFILE::~QUERY_PROFILE(269,9363
void QUERY_PROFILE::set_query_source(280,9564
void QUERY_PROFILE::new_status(291,9946
PROFILING::PROFILING(318,10681
PROFILING::~PROFILING(323,10761
void PROFILING::status_change(341,11275
void PROFILING::start_new_query(365,12025
void PROFILING::discard_current_query(392,12773
void PROFILING::finish_current_query(407,13157
bool PROFILING::show_profiles(440,14084
void PROFILING::set_query_source(502,15924
int PROFILING::fill_statistics_info(521,16477

sql/sql_reload.cc,79
bool reload_acl_and_cache(53,2096
bool flush_tables_with_read_lock(408,12908

sql/sql_rename.cc,146
bool mysql_rename_tables(42,1590
static TABLE_LIST *reverse_table_list(reverse_table_list202,6090
do_rename(238,6836
rename_tables(351,10417

sql/sql_repl.cc,942
int max_binlog_dump_events 30,1096
my_bool opt_sporadic_binlog_dump_fail 31,1141
static int binlog_dump_count 33,1201
uint sql_slave_skip_counter;42,1493
static int fake_rotate_event(62,2449
static int reset_transmit_packet(102,3847
static int send_file(122,4351
void adjust_linfo_offsets(217,6761
bool log_in_use(246,7436
bool purge_error_message(272,7968
bool purge_master_logs(297,8425
bool purge_master_logs_before_date(324,9021
int test_for_non_eof_log_read_errors(335,9274
static ulonglong get_heartbeat_period(374,10394
static int send_heartbeat_event(398,11232
void mysql_binlog_send(436,12325
int start_slave(1082,33370
int stop_slave(1224,37971
int reset_slave(1287,39527
void kill_zombie_dump_threads(1374,42203
bool change_master(1415,43132
int reset_master(1710,53514
bool mysql_show_binlog_events(1735,54041
bool show_binlog_info(1916,58868
bool show_binlogs(1958,60109
int log_loaded_block(2042,62665

sql/sql_select.cc,9461
#define PREV_BITS(56,2121
const char *join_type_str[join_type_str58,2180
bool handle_select(265,12778
fix_inner_refs(360,16143
inline int setup_without_group(446,18765
JOIN::prepare(499,20643
void JOIN::remove_subq_pushed_predicates(791,30159
static void save_index_subquery_explain_info(825,31356
JOIN::optimize(856,31988
void JOIN::restore_tmp(1720,61355
JOIN::reinit(1729,61547
JOIN::init_save_join_tab(1793,63086
JOIN::save_join_tab(1804,63332
JOIN::exec(1828,63855
JOIN::destroy(2426,83757
void JOIN::cleanup_item_list(2466,84797
mysql_select(2523,87237
static ha_rows get_quick_record_count(2627,90048
typedef struct st_sargable_param2659,91149
  Field *field;st_sargable_param::field2661,91184
  Item **arg_value;st_sargable_param::arg_value2662,91260
  uint num_values;st_sargable_param::num_values2663,91336
} SARGABLE_PARAM;2664,91412
make_join_statistics(2676,91571
typedef struct key_field_t 3160,106770
  Field		*field;key_field_t::field3161,106799
  Item		*val;key_field_t::val3162,106816
  uint		level;key_field_t::level3163,106867
  uint		optimize;key_field_t::optimize3164,106882
  bool		eq_func;key_field_t::eq_func3165,106900
  bool          null_rejecting;key_field_t::null_rejecting3170,107022
  bool         *cond_guard;key_field_t::cond_guard3171,107055
} KEY_FIELD;3172,107112
#define KEY_OPTIMIZE_EXISTS	3175,107151
#define KEY_OPTIMIZE_REF_OR_NULL	3176,107182
merge_key_fields(3203,108044
add_key_field(3331,112362
add_key_equal_fields(3481,117523
is_local_field 3525,118791
add_key_fields(3534,119006
max_part_bit(3767,126837
add_key_part(3784,127136
#define FT_KEYPART 3823,128299
add_ft_keys(3826,128352
sort_keyuse(3890,130393
static void add_key_fields_for_nj(3944,132249
update_ref_and_keys(3988,133731
static void optimize_keyuse(4157,139582
is_indexed_agg_distinct(4213,141361
add_group_and_distinct_keys(4290,143652
set_position(4344,145367
best_access_path(4390,147008
choose_plan(4940,169678
join_tab_cmp(5024,172553
join_tab_cmp_straight(5046,173047
determine_search_depth(5091,174568
optimize_straight_join(5135,176170
greedy_search(5246,180588
best_extension_by_limited_search(5452,188954
find_best(5597,194649
static void calc_used_field_length(5674,197241
cache_record_length(5711,198242
prev_record_reads(5782,200785
get_best_combination(5820,202084
static bool create_ref_for_key(5873,203539
get_store_key(6028,208089
store_val_in_field(6083,209897
JOIN::make_simple_join(6117,211018
inline void add_cond_and_fix(6173,212831
static void add_not_null_conds(6241,215268
add_found_match_trig_cond(6305,217616
make_outerjoin_info(6365,219818
make_join_select(6416,221429
void rr_unlock_row(6801,235551
pick_table_access_method(6818,235861
make_join_readinfo(6860,236804
bool error_if_full_join(7036,242255
void JOIN_TAB::cleanup(7059,242754
void JOIN::join_free(7125,245258
void JOIN::cleanup(7194,247476
eq_ref_table(7284,249961
only_eq_ref_tables(7338,251415
static void update_depend_map(7354,251826
static void update_depend_map(7381,252490
remove_const(7425,253755
ORDER *simple_remove_const(simple_remove_const7520,256962
return_zero_rows(7545,257450
static void clear_tables(7589,258595
class COND_CMP 7608,259365
  static void *operator new(COND_CMP::operator new7610,259404
  static void operator delete(COND_CMP::operator delete7614,259496
  Item *and_level;COND_CMP::and_level7618,259653
  Item_func *cmp_func;COND_CMP::cmp_func7619,259672
  COND_CMP(COND_CMP::COND_CMP7620,259695
Item_equal *find_item_equal(find_item_equal7650,260722
static bool check_simple_equality(7755,265349
static bool check_row_equality(7946,271840
static bool check_equality(8015,274295
static COND *build_equal_items_for_cond(build_equal_items_for_cond8104,278476
static COND *build_equal_items(build_equal_items8323,286358
static int compare_fields_by_table_order(8397,288498
static Item *eliminate_item_equal(eliminate_item_equal8461,291042
static COND* substitute_for_best_equal_field(8562,293982
static void update_const_equal_items(8646,296816
change_cond_ref_to_const(8705,298685
static Item *remove_additional_cond(remove_additional_cond8789,301326
propagate_cond_constants(8813,301828
simplify_joins(8990,308099
static uint build_bitmap_for_nested_joins(9175,313920
static void reset_nj_counters(9217,315337
static bool check_interleaving_with_nj(9325,319805
static void restore_prev_nj_state(9422,323259
optimize_cond(9445,323805
internal_remove_eq_conds(9502,325747
remove_eq_conds(9657,330333
test_if_equality_guarantees_uniqueness(9738,333160
static bool equal(9756,333722
const_expression_in_where(9785,334569
Field *create_tmp_field_from_field(create_tmp_field_from_field9873,337259
static Field *create_tmp_field_from_item(create_tmp_field_from_item9936,339781
Field *create_tmp_field_for_schema(create_tmp_field_for_schema10026,342816
Field *create_tmp_field(create_tmp_field10075,344662
void setup_tmp_table_column_bitmaps(10221,349566
#define STRING_TOTAL_LENGTH_TO_PACK_ROWS 10263,351284
#define AVG_STRING_LENGTH_TO_PACK_ROWS 10264,351329
#define RATIO_TO_PACK_ROWS	10265,351373
#define MIN_STRING_LENGTH_TO_PACK_ROWS 10266,351409
create_tmp_table(10269,351462
TABLE *create_virtual_tmp_table(create_virtual_tmp_table10974,376841
static bool open_tmp_table(11095,380789
static bool create_myisam_tmp_table(11110,381189
free_tmp_table(11221,384704
bool create_myisam_from_heap(11264,385760
Next_select_func setup_end_select_func(11392,389851
do_select(11471,391958
sub_select_cache(11603,395528
sub_select(11752,402502
evaluate_join_record(11805,403965
evaluate_null_complemented_join_record(11968,409371
flush_cached_records(12027,411309
int report_error(12123,414206
int safe_index_read(12143,414800
join_read_const_table(12157,415209
join_read_system(12232,417179
join_read_const(12270,418058
join_read_key(12308,419160
join_read_key_unlock_row(12372,420832
join_read_always_key(12399,421389
join_read_last_key(12445,422741
join_no_more_records(12477,423649
join_read_next_same(12484,423743
join_read_prev_same(12504,424147
join_init_quick_read_record(12523,424564
int read_first_record_seq(12531,424734
test_if_quick_select(12539,424911
join_init_read_record(12549,425122
join_read_first(12560,425419
join_read_next(12596,426301
join_read_last(12606,426474
join_read_prev(12637,427255
join_ft_read_first(12647,427429
join_ft_read_next(12667,427806
join_read_always_key_or_null(12681,428058
join_read_next_same_or_null(12697,428407
end_send(12739,430258
end_send_group(12823,432676
end_write(12937,435887
end_update(12986,437360
end_unique_update(13067,440091
end_write_group(13116,441749
static bool test_if_ref(13202,444420
make_cond_for_table(13275,447204
part_of_refkey(13370,450063
static int test_if_order_by_key(13415,451394
uint find_shortest_key(13540,455753
uint find_shortest_clustering_key(13586,457215
is_subkey(13620,458084
test_if_subkey(13642,458625
list_contains_unique_index(13701,460421
find_field_in_order_list 13746,461595
find_field_in_item_list 13779,462380
test_if_skip_sort_order(13820,463260
create_sort_index(14188,475569
static bool compare_record(14349,481405
static bool copy_blobs(14359,481578
static void free_blobs(14370,481763
remove_duplicates(14381,481921
static int remove_dup_with_compare(14430,483391
static int remove_dup_with_hash_index(14525,485444
SORT_FIELD *make_unireg_sortorder(make_unireg_sortorder14636,488180
join_init_cache(14683,489587
used_blob_length(14780,492252
store_record_in_cache(14795,492575
reset_cache_read(14864,494283
static void reset_cache_write(14871,494373
read_cached_record(14880,494520
cmp_buffer_with_ref(14931,495590
cp_buffer_from_ref(14948,496004
find_order_in_list(15007,498086
int setup_order(15162,504166
setup_group(15203,505467
setup_new_fields(15300,508663
create_distinct_group(15334,509603
count_field_types(15422,511972
test_if_subpart(15477,513394
get_sort_by_table(15495,513719
calc_group_buffer(15527,514472
make_group_fields(15624,517356
alloc_group_fields(15648,517859
test_if_group_changed(15665,518193
setup_copy_fields(15712,519596
copy_fields(15859,524025
bool JOIN::alloc_func_list(15884,524456
bool JOIN::make_sum_func_list(15939,525871
change_to_use_tmp_fields(15994,527555
change_refs_to_tmp_fields(16085,530139
static bool setup_sum_funcs(16130,531241
static bool prepare_sum_aggregators(16143,531481
init_tmptable_sum_functions(16159,531920
update_tmptable_sum_func(16170,532114
copy_sum_funcs(16182,532361
init_sum_functions(16191,532537
update_sum_func(16209,532878
copy_funcs(16235,533498
static bool add_ref_to_table_cond(16259,534055
void free_underlaid_joins(16304,535256
static bool change_group_ref(16356,536934
bool JOIN::rollup_init(16403,538285
bool JOIN::rollup_process_const_fields(16499,541298
bool JOIN::rollup_make_fields(16548,542455
int JOIN::rollup_send_data(16682,546190
int JOIN::rollup_write_data(16724,547263
void JOIN::clear(16762,548338
static void select_describe(16781,548641
bool mysql_explain_union(17255,564919
static void print_join(17322,566909
Index_hint::print(17395,568908
void TABLE_LIST::print(17424,569770
void st_select_lex::print(17512,571871
bool JOIN::change_result(17660,575394
void JOIN::cache_const_exprs(17676,575741
test_if_cheaper_ordering(17737,578292
uint get_index_for_order(17970,587248

sql/sql_servers.cc,1189
static HASH servers_cache;54,2194
static MEM_ROOT mem;55,2221
static mysql_rwlock_t THR_LOCK_servers;56,2242
static uchar *servers_cache_get_key(servers_cache_get_key86,3575
static PSI_rwlock_key key_rwlock_THR_LOCK_servers;99,4022
static PSI_rwlock_info all_servers_cache_rwlocks[all_servers_cache_rwlocks101,4074
static void init_servers_cache_psi_keys(106,4203
bool servers_init(138,5045
static bool servers_load(203,6544
bool servers_reload(250,7649
get_server_from_table_to_cache(317,9696
insert_server(385,12007
insert_server_record_into_cache(430,12974
store_server_fields(470,14070
int insert_server_record(532,16340
int drop_server(600,18551
delete_server_record_in_cache(662,20202
int update_server(727,22192
int update_server_record_in_cache(782,23526
void merge_server_struct(832,24855
update_server_record(880,26263
delete_server_record(939,27827
int create_server(984,28996
int alter_server(1033,29971
prepare_server_struct_for_insert(1089,31612
prepare_server_struct_for_update(1152,33556
void servers_free(1223,35610
static FOREIGN_SERVER *clone_server(clone_server1260,36485
FOREIGN_SERVER *get_server_by_name(get_server_by_name1299,37712

sql/sql_show.cc,11757
#define STR_OR_NIL(57,2420
enum enum_i_s_events_fields62,2535
  ISE_EVENT_CATALOG=enum_i_s_events_fields::ISE_EVENT_CATALOG64,2565
  ISE_EVENT_SCHEMA,enum_i_s_events_fields::ISE_EVENT_SCHEMA65,2589
  ISE_EVENT_NAME,enum_i_s_events_fields::ISE_EVENT_NAME66,2609
  ISE_DEFINER,enum_i_s_events_fields::ISE_DEFINER67,2627
  ISE_TIME_ZONE,enum_i_s_events_fields::ISE_TIME_ZONE68,2642
  ISE_EVENT_BODY,enum_i_s_events_fields::ISE_EVENT_BODY69,2659
  ISE_EVENT_DEFINITION,enum_i_s_events_fields::ISE_EVENT_DEFINITION70,2677
  ISE_EVENT_TYPE,enum_i_s_events_fields::ISE_EVENT_TYPE71,2701
  ISE_EXECUTE_AT,enum_i_s_events_fields::ISE_EXECUTE_AT72,2719
  ISE_INTERVAL_VALUE,enum_i_s_events_fields::ISE_INTERVAL_VALUE73,2737
  ISE_INTERVAL_FIELD,enum_i_s_events_fields::ISE_INTERVAL_FIELD74,2759
  ISE_SQL_MODE,enum_i_s_events_fields::ISE_SQL_MODE75,2781
  ISE_STARTS,enum_i_s_events_fields::ISE_STARTS76,2797
  ISE_ENDS,enum_i_s_events_fields::ISE_ENDS77,2811
  ISE_STATUS,enum_i_s_events_fields::ISE_STATUS78,2823
  ISE_ON_COMPLETION,enum_i_s_events_fields::ISE_ON_COMPLETION79,2837
  ISE_CREATED,enum_i_s_events_fields::ISE_CREATED80,2858
  ISE_LAST_ALTERED,enum_i_s_events_fields::ISE_LAST_ALTERED81,2873
  ISE_LAST_EXECUTED,enum_i_s_events_fields::ISE_LAST_EXECUTED82,2893
  ISE_EVENT_COMMENT,enum_i_s_events_fields::ISE_EVENT_COMMENT83,2914
  ISE_ORIGINATOR,enum_i_s_events_fields::ISE_ORIGINATOR84,2935
  ISE_CLIENT_CS,enum_i_s_events_fields::ISE_CLIENT_CS85,2953
  ISE_CONNECTION_CL,enum_i_s_events_fields::ISE_CONNECTION_CL86,2970
  ISE_DB_CLenum_i_s_events_fields::ISE_DB_CL87,2991
static const char *grant_names[grant_names91,3041
static TYPELIB grant_types 95,3210
static int make_version_string(120,4163
static my_bool show_plugins(125,4313
int fill_plugins(227,7252
bool mysqld_show_authors(245,7767
bool mysqld_show_contributors(279,8872
struct show_privileges_st 312,9996
  const char *privilege;show_privileges_st::privilege313,10024
  const char *context;show_privileges_st::context314,10049
  const char *comment;show_privileges_st::comment315,10072
static struct show_privileges_st sys_privileges[sys_privileges318,10099
bool mysqld_show_privileges(356,12395
find_files(406,13960
class Show_create_error_handler 552,18332
  TABLE_LIST *m_top_view;Show_create_error_handler::m_top_view554,18401
  bool m_handling;Show_create_error_handler::m_handling555,18427
  Security_context *m_sctx;Show_create_error_handler::m_sctx556,18446
  char m_view_access_denied_message[Show_create_error_handler::m_view_access_denied_message558,18475
  char *m_view_access_denied_message_ptr;Show_create_error_handler::m_view_access_denied_message_ptr559,18531
  explicit Show_create_error_handler(Show_create_error_handler::Show_create_error_handler571,18908
  char* get_view_access_denied_message(Show_create_error_handler::get_view_access_denied_message589,19716
  bool handle_condition(Show_create_error_handler::handle_condition602,20174
mysqld_show_create(662,21996
bool mysqld_show_create_db(780,25969
mysqld_list_fields(868,28832
static const char *require_quotes(require_quotes917,30253
append_identifier(951,31096
int get_quote_char_for_identifier(1017,32916
static void append_directory(1032,33302
#define LIST_PROCESS_HOST_LEN 1058,34020
static bool get_field_default_value(1060,34054
int store_create_info(1151,36911
static void store_key_options(1557,51087
view_store_options(1606,52962
static void append_algorithm(1628,53565
void append_definer(1657,54321
view_store_create_info(1669,54704
class thread_info 1740,56995
  static void *operator new(thread_info::operator new1742,57037
  static void operator delete(thread_info::operator delete1746,57129
  ulong thread_id;thread_info::thread_id1750,57286
  time_t start_time;thread_info::start_time1751,57305
  uint   command;thread_info::command1752,57326
  const char *user,thread_info::user1753,57344
  const char *user,*host,thread_info::host1753,57344
  const char *user,*host,*db,thread_info::db1753,57344
  const char *user,*host,*db,*proc_info,thread_info::proc_info1753,57344
  const char *user,*host,*db,*proc_info,*state_info;thread_info::state_info1753,57344
  CSET_STRING query_string;thread_info::query_string1754,57397
static const char *thread_state_info(thread_state_info1761,57517
void mysqld_list_processes(1785,58005
int fill_schema_processlist(1895,62406
static DYNAMIC_ARRAY all_status_vars;2000,65782
static bool status_vars_inited=2001,65820
static int show_var_cmp(2004,65869
static void shrink_var_array(2014,66126
int add_status_vars(2050,67273
void init_status_vars(2081,68256
void reset_status_vars(2087,68357
void free_status_vars(2108,68981
void remove_status_vars(2127,69491
inline void make_upper(2172,70509
static bool show_status_array(2178,70619
void calc_sum_of_all_status(2357,76502
typedef struct st_lookup_field_values2382,77122
  LEX_STRING db_value,st_lookup_field_values::db_value2384,77162
  LEX_STRING db_value, table_value;st_lookup_field_values::table_value2384,77162
  bool wild_db_value,st_lookup_field_values::wild_db_value2385,77198
  bool wild_db_value, wild_table_value;st_lookup_field_values::wild_table_value2385,77198
} LOOKUP_FIELD_VALUES;2386,77238
bool schema_table_store_record(2403,77565
static int make_table_list(2417,77901
bool get_lookup_value(2446,78861
bool calc_lookup_values_from_cond(2529,81771
bool uses_only_table_name_fields(2564,82681
static COND * make_cond_for_info_schema(2604,84197
bool get_lookup_field_values(2678,86248
enum enum_schema_tables get_schema_table_idx(2734,88021
int make_db_list(2758,88703
struct st_add_schema_table 2822,90691
  List<LEX_STRING> *files;st_add_schema_table::files2824,90721
  const char *wild;st_add_schema_table::wild2825,90748
static my_bool add_schema_table(2829,90773
int schema_tables_add(2863,91794
make_table_name_list(2924,93659
fill_schema_table_by_open(3015,96893
static int fill_schema_table_names(3200,103251
uint get_table_open_method(3264,105347
try_acquire_high_prio_shared_mdl_lock(3322,107568
static int fill_schema_table_from_frm(3377,109940
class Trigger_error_handler 3572,116498
  bool handle_condition(Trigger_error_handler::handle_condition3575,116568
int get_all_tables(3612,117777
bool store_schema_shemata(3836,125660
int fill_schema_schemata(3848,126176
static int get_schema_tables_record(3920,128425
void store_column_type(4199,137169
static int get_schema_column_record(4312,140975
int fill_schema_charsets(4425,144783
static my_bool iter_schema_engines(4458,145870
int fill_schema_engines(4522,148149
int fill_schema_collation(4533,148478
int fill_schema_coll_charset_app(4579,150072
static inline void copy_field_as_string(4613,151106
bool store_schema_params(4639,152070
bool store_schema_proc(4785,157437
int fill_schema_proc(4919,163175
static int get_schema_stat_record(4988,165209
static int get_schema_views_record(5088,169084
bool store_constraints(5232,174130
static int get_schema_constraints_record(5248,174820
static bool store_trigger(5308,176802
static int get_schema_triggers_record(5350,178873
void store_key_column_usage(5417,181099
static int get_schema_key_column_usage_record(5434,181846
static void collect_partition_expr(5525,185170
int get_cs_converted_part_value_from_string(5566,186671
static void store_schema_partitions_record(5594,187515
get_partition_column_description(5671,190420
static int get_schema_partitions_record(5715,191778
copy_event_to_schema_table(5974,200550
int fill_open_tables(6142,206329
int fill_variables(6167,207193
int fill_status(6191,208062
get_referential_constraints_record(6253,209703
struct schema_table_ref 6312,212062
  const char *table_name;schema_table_ref::table_name6314,212089
  ST_SCHEMA_TABLE *schema_table;schema_table_ref::schema_table6315,212115
static my_bool find_schema_table_in_plugin(6332,212409
ST_SCHEMA_TABLE *find_schema_table(find_schema_table6364,213227
ST_SCHEMA_TABLE *get_schema_table(get_schema_table6387,213880
TABLE *create_schema_table(create_schema_table6414,214749
int make_old_format(6539,218922
int make_schemata_old_format(6563,219590
int make_table_names_old_format(6592,220452
int make_columns_old_format(6628,221635
int make_character_sets_old_format(6657,222528
int make_proc_old_format(6682,223239
int mysql_schema_table(6721,224204
int make_schema_select(6804,226608
static bool do_fill_table(6863,228882
bool get_schema_tables_result(6928,230815
struct run_hton_fill_schema_table_args7002,233328
  TABLE_LIST *tables;run_hton_fill_schema_table_args::tables7004,233369
  COND *cond;run_hton_fill_schema_table_args::cond7005,233391
static my_bool run_hton_fill_schema_table(7008,233409
int hton_fill_schema_table(7020,233889
ST_FIELD_INFO schema_fields_info[schema_fields_info7035,234218
ST_FIELD_INFO tables_fields_info[tables_fields_info7049,234748
ST_FIELD_INFO columns_fields_info[columns_fields_info7089,237157
ST_FIELD_INFO charsets_fields_info[charsets_fields_info7124,239061
ST_FIELD_INFO collation_fields_info[collation_fields_info7137,239524
ST_FIELD_INFO engines_fields_info[engines_fields_info7152,240135
ST_FIELD_INFO events_fields_info[events_fields_info7164,240665
ST_FIELD_INFO coll_charset_app_fields_info[coll_charset_app_fields_info7202,242687
ST_FIELD_INFO proc_fields_info[proc_fields_info7212,242972
ST_FIELD_INFO stat_fields_info[stat_fields_info7257,245496
ST_FIELD_INFO view_fields_info[view_fields_info7283,246885
ST_FIELD_INFO user_privileges_fields_info[user_privileges_fields_info7301,247727
ST_FIELD_INFO schema_privileges_fields_info[schema_privileges_fields_info7311,248124
ST_FIELD_INFO table_privileges_fields_info[table_privileges_fields_info7322,248603
ST_FIELD_INFO column_privileges_fields_info[column_privileges_fields_info7334,249159
ST_FIELD_INFO table_constraints_fields_info[table_constraints_fields_info7347,249795
ST_FIELD_INFO key_column_usage_fields_info[key_column_usage_fields_info7362,250403
ST_FIELD_INFO table_names_fields_info[table_names_fields_info7386,251525
ST_FIELD_INFO open_tables_fields_info[open_tables_fields_info7398,251965
ST_FIELD_INFO triggers_fields_info[triggers_fields_info7409,252385
ST_FIELD_INFO partitions_fields_info[partitions_fields_info7447,254342
ST_FIELD_INFO variables_fields_info[variables_fields_info7490,256591
ST_FIELD_INFO processlist_fields_info[processlist_fields_info7499,256857
ST_FIELD_INFO plugin_fields_info[plugin_fields_info7515,257543
ST_FIELD_INFO files_fields_info[files_fields_info7533,258501
void init_fill_schema_files_row(7589,261919
ST_FIELD_INFO referential_constraints_fields_info[referential_constraints_fields_info7599,262190
ST_FIELD_INFO parameters_fields_info[parameters_fields_info7622,263264
ST_FIELD_INFO tablespaces_fields_info[tablespaces_fields_info7644,264501
ST_SCHEMA_TABLE schema_tables[schema_tables7674,265632
int initialize_schema_table(7768,270548
int finalize_schema_table(7803,271627
static bool show_create_trigger_impl(7837,272465
TABLE_LIST *get_trigger_table(get_trigger_table7978,276525
bool show_create_trigger(8027,277661
class IS_internal_schema_access 8099,279544
  IS_internal_schema_access(IS_internal_schema_access::IS_internal_schema_access8102,279622
  ~IS_internal_schema_access(IS_internal_schema_access::~IS_internal_schema_access8105,279658
IS_internal_schema_access::check(8115,279908
IS_internal_schema_access::lookup(8135,280465
static IS_internal_schema_access is_internal_schema_access;8141,280608
void initialize_information_schema_acl(8143,280669
static void get_cs_converted_string_value(8180,282124

sql/sql_signal.cc,828
#define MAX_MYSQL_ERRNO 28,1125
const LEX_STRING Diag_condition_item_names[Diag_condition_item_names30,1161
const LEX_STRING Diag_statement_item_names[Diag_statement_item_names64,2471
Set_signal_information::Set_signal_information(79,2970
void Set_signal_information::clear(85,3106
void Signal_common::assign_defaults(90,3185
void Signal_common::eval_defaults(104,3597
static bool assign_fixed_string(147,4778
static int assign_condition_item(225,6845
int Signal_common::eval_signal_informations(259,7764
  struct cond_item_map261,7839
    enum enum_diag_condition_item_name m_item;cond_item_map::m_item263,7866
    String MYSQL_ERROR::*m_member;cond_item_map::m_member264,7913
bool Signal_common::raise_condition(417,11964
bool Signal_statement::execute(450,12845
bool Resignal_statement::execute(479,13564

sql/sql_string.cc,1424
bool String::real_alloc(34,1230
bool String::realloc(81,2737
bool String::set_int(113,3563
bool String::set_real(125,3847
bool String::copy(143,4321
bool String::copy(164,4845
bool String::copy(175,5086
bool String::needs_conversion(209,5873
bool String::copy_aligned(251,6828
bool String::set_or_copy_aligned(277,7584
bool String::copy(302,8115
bool String::set_ascii(348,9231
bool String::fill(362,9524
void String::strip_sp(376,9811
bool String::append(382,9925
bool String::append(399,10221
bool String::append(434,11010
bool String::append_ulonglong(441,11090
bool String::append(455,11409
bool String::append(492,12474
bool String::append_with_prefill(505,12742
uint32 String::numchars(522,13170
int String::charpos(527,13273
int String::strstr(534,13425
int String::strrstr(565,14104
bool String::replace(597,14806
bool String::replace(602,14940
int String::reserve(634,15683
void String::qs_append(644,15904
void String::qs_append(650,16024
void String::qs_append(657,16204
void String::qs_append(664,16301
void String::qs_append(671,16442
int sortcmp(697,16838
int stringcmp(723,17309
String *copy_if_not_alloced(copy_if_not_alloced731,17519
copy_and_convert_extended(773,18553
copy_and_convert(832,19936
my_copy_with_hex_escaping(908,22414
well_formed_copy_nchars(977,24244
void String::print(1124,28574
void String::swap(1167,29371
uint convert_to_printable(1197,30397

sql/sql_table.cc,4886
const char *primary_key_name=primary_key_name61,2439
static char* add_identifier(94,3858
uint explain_filename(196,7378
  enum enum_file_name_type 213,7859
  enum enum_file_name_type {NORMAL,enum_file_name_type::NORMAL213,7859
  enum enum_file_name_type {NORMAL, TEMP,enum_file_name_type::TEMP213,7859
  enum enum_file_name_type {NORMAL, TEMP, RENAMED}enum_file_name_type::RENAMED213,7859
uint filename_to_tablename(387,12773
bool check_mysql50_prefix(441,14059
uint check_n_cut_mysql50_prefix(462,14540
uint tablename_to_filename(484,15127
uint build_table_filename(552,17324
uint build_tmptable_filename(605,18954
struct st_global_ddl_log652,20489
  char file_name_str[st_global_ddl_log::file_name_str654,20516
  char *file_name;st_global_ddl_log::file_name655,20549
  DDL_LOG_MEMORY_ENTRY *first_free;st_global_ddl_log::first_free656,20568
  DDL_LOG_MEMORY_ENTRY *first_used;st_global_ddl_log::first_used657,20604
  uint num_entries;st_global_ddl_log::num_entries658,20640
  File file_id;st_global_ddl_log::file_id659,20660
  uint name_len;st_global_ddl_log::name_len660,20676
  uint io_size;st_global_ddl_log::io_size661,20693
  bool inited;st_global_ddl_log::inited662,20709
  bool do_release;st_global_ddl_log::do_release663,20724
  bool recovery_phase;st_global_ddl_log::recovery_phase664,20743
  st_global_ddl_log(st_global_ddl_log::st_global_ddl_log665,20766
st_global_ddl_log global_ddl_log;668,20830
mysql_mutex_t LOCK_gdl;670,20865
#define DDL_LOG_ENTRY_TYPE_POS 672,20890
#define DDL_LOG_ACTION_TYPE_POS 673,20923
#define DDL_LOG_PHASE_POS 674,20957
#define DDL_LOG_NEXT_ENTRY_POS 675,20985
#define DDL_LOG_NAME_POS 676,21018
#define DDL_LOG_NUM_ENTRY_POS 678,21046
#define DDL_LOG_NAME_LEN_POS 679,21078
#define DDL_LOG_IO_SIZE_POS 680,21109
#define DDL_LOG_HEADER_SIZE 681,21139
static bool read_ddl_log_file_entry(694,21466
static bool write_ddl_log_file_entry(723,22240
static bool write_ddl_log_header(749,22900
static inline void create_ddl_log_file_name(785,23859
static uint read_ddl_log_header(804,24369
static void set_ddl_log_entry_from_buf(855,25894
static bool init_ddl_log(892,27145
static int execute_ddl_log_action(935,28298
static bool get_free_ddl_log_entry(1072,32316
bool write_ddl_log_entry(1133,34017
bool write_execute_ddl_log_entry(1227,37869
bool deactivate_ddl_log_entry(1306,40421
bool sync_ddl_log(1361,42046
void release_ddl_log_memory_entry(1390,42568
bool execute_ddl_log_entry(1422,43531
static void close_ddl_log(1465,44716
void execute_ddl_log_recovery(1485,45073
void release_ddl_log(1558,46870
uint build_table_shadow_filename(1616,48340
static int mysql_update_frm(1626,48685
bool mysql_write_frm(1667,50274
int write_bin_log(1863,57145
bool mysql_rm_table(1906,58219
int mysql_rm_table_no_locks(2019,62138
bool quick_rm_table(2434,76665
static int sort_keys(2472,77841
bool check_duplicates_in_interval(2528,79323
void calculate_interval_lengths(2582,80907
int prepare_create_field(2617,81754
CHARSET_INFO* get_sql_field_charset(2788,87841
bool check_duplicate_warning(2807,88454
mysql_prepare_create_table(2849,89660
static void set_table_default_charset(3775,120099
static bool prepare_blob_field(3807,120799
void sp_prepare_create_field(3865,122713
static bool check_if_created_table_can_be_opened(3909,124046
bool mysql_create_table_no_lock(3977,126331
bool mysql_create_table(4434,142201
check_if_keyname_exists(4480,143475
make_unique_key_name(4490,143691
mysql_rename_table(4541,145311
bool mysql_create_like_table(4625,147945
mysql_discard_or_import_tablespace(4784,154117
is_index_maintenance_unique 4865,156171
mysql_compare_tables(4933,158711
bool alter_table_manage_keys(5246,169865
blob_length_by_type(5288,170986
mysql_prepare_alter_table(5349,173298
enum inplace_alter_table_result5742,186217
  INPLACE_ALTER_SUCCESS,inplace_alter_table_result::INPLACE_ALTER_SUCCESS5744,186251
  INPLACE_ALTER_SUCCESS, INPLACE_ALTER_ERROR,inplace_alter_table_result::INPLACE_ALTER_ERROR5744,186251
  INPLACE_ALTER_SUCCESS, INPLACE_ALTER_ERROR, INPLACE_ALTER_NOT_SUPPORTED,inplace_alter_table_result::INPLACE_ALTER_NOT_SUPPORTED5744,186251
bool mysql_alter_table(5798,188521
bool mysql_trans_prepare_alter_copy_data(7138,235195
bool mysql_trans_commit_alter_copy_data(7157,235640
copy_data_between_tables(7181,236211
bool mysql_recreate_table(7394,242607
bool mysql_checksum_table(7424,243667
static bool check_engine(7581,248359
static bool is_inplace_alter_impossible(7644,250659
static bool is_candidate_key(7713,253308
static Create_field *get_field_by_index(get_field_by_index7736,253866
static int compare_uint(7748,254145
static bool fill_alter_inplace_info(7795,256265
volatile int stall_inplace_alter_table_mdl_x 8208,271397
do_mysql_inplace_alter_table(8211,271487
mysql_inplace_alter_table(8385,277865

sql/sql_tablespace.cc,35
int mysql_alter_tablespace(24,973

sql/sql_test.cc,739
static const char *lock_descriptions[lock_descriptions39,1271
print_where(60,2128
static void print_cached_tables(78,2574
void TEST_filesort(140,4425
TEST_join(181,5414
print_plan(267,7838
typedef struct st_debug_lock348,9979
  ulong thread_id;st_debug_lock::thread_id350,10010
  char table_name[st_debug_lock::table_name351,10029
  bool waiting;st_debug_lock::waiting352,10059
  const char *lock_text;st_debug_lock::lock_text353,10075
  enum thr_lock_type type;st_debug_lock::type354,10100
} TABLE_LOCK_INFO;355,10127
static int dl_compare(357,10147
static void push_locks_into_array(376,10488
static void display_table_locks(413,11844
static int print_key_cache_status(461,13413
void mysql_print_status(500,14426

sql/sql_time.cc,1069
LEX_STRING interval_type_to_name[interval_type_to_name42,1442
int calc_weekday(68,2328
uint calc_week(103,3583
void get_date_from_daynr(149,4852
ulong convert_period_to_month(193,5911
ulong convert_month_to_period(207,6126
to_ascii(231,6680
bool str_to_time(255,7273
timestamp_type str_to_datetime(269,7637
str_to_datetime_with_warn(292,8241
my_time_t TIME_to_timestamp(329,9571
str_to_time_with_warn(355,10081
void localtime_to_TIME(371,10519
void calc_time_from_sec(383,10834
bool parse_date_time_format(425,11904
*date_time_format_make(date_time_format_make658,18336
DATE_TIME_FORMAT *date_time_format_copy(date_time_format_copy691,19049
KNOWN_DATE_TIME_FORMAT known_date_time_formats[known_date_time_formats717,19950
const char *get_date_time_format_str(get_date_time_format_str733,20403
void make_time(764,21533
void make_date(773,21794
void make_datetime(782,22055
void make_truncated_value_warning(791,22328
#define MAX_DAY_NUMBER 836,23911
bool date_add_interval(838,23944
calc_time_diff(974,28215
int my_time_compare(1039,29903

sql/sql_trigger.cc,3960
#define MYSQL_LEX 18,748
inline T *alloc_type(alloc_type40,1720
inline LEX_STRING *alloc_lex_string(alloc_lex_string55,2186
class Trigger_creation_ctx 65,2416
  virtual Stored_program_creation_ctx *clone(Trigger_creation_ctx::clone77,2932
  virtual Object_creation_ctx *create_backup_ctx(Trigger_creation_ctx::create_backup_ctx85,3198
  Trigger_creation_ctx(Trigger_creation_ctx::Trigger_creation_ctx91,3323
  Trigger_creation_ctx(Trigger_creation_ctx::Trigger_creation_ctx95,3401
Trigger_creation_ctx::create(107,3836
static const LEX_STRING triggers_file_type=180,6225
const char * const TRG_EXT=183,6307
static File_option triggers_file_parameters[triggers_file_parameters191,6554
File_option sql_modes_parameters=226,7477
static const int TRG_NUM_REQUIRED_PARAMETERS=239,7815
struct st_trigname246,7980
  LEX_STRING trigger_table;st_trigname::trigger_table248,8001
static const LEX_STRING trigname_file_type=251,8033
const char * const TRN_EXT=254,8118
static File_option trigname_file_parameters[trigname_file_parameters256,8155
const LEX_STRING trg_action_time_type_names[trg_action_time_type_names267,8374
const LEX_STRING trg_event_type_names[trg_event_type_names273,8495
class Handle_old_incorrect_sql_modes_hook:Handle_old_incorrect_sql_modes_hook281,8647
  char *path;Handle_old_incorrect_sql_modes_hook::path284,8725
  Handle_old_incorrect_sql_modes_hook(Handle_old_incorrect_sql_modes_hook::Handle_old_incorrect_sql_modes_hook286,8747
class Handle_old_incorrect_trigger_table_hook:Handle_old_incorrect_trigger_table_hook294,8975
  Handle_old_incorrect_trigger_table_hook(Handle_old_incorrect_trigger_table_hook::Handle_old_incorrect_trigger_table_hook297,9056
  char *path;Handle_old_incorrect_trigger_table_hook::path304,9405
  LEX_STRING *trigger_table_value;Handle_old_incorrect_trigger_table_hook::trigger_table_value305,9419
class Deprecated_trigger_syntax_handler 318,9938
  char m_message[Deprecated_trigger_syntax_handler::m_message322,10023
  LEX_STRING *m_trigger_name;Deprecated_trigger_syntax_handler::m_trigger_name323,10060
  Deprecated_trigger_syntax_handler(Deprecated_trigger_syntax_handler::Deprecated_trigger_syntax_handler327,10100
  virtual bool handle_condition(Deprecated_trigger_syntax_handler::handle_condition329,10165
  LEX_STRING *get_trigger_name(Deprecated_trigger_syntax_handler::get_trigger_name353,11013
  char *get_error_message(Deprecated_trigger_syntax_handler::get_error_message354,11073
bool mysql_create_or_drop_trigger(381,11927
bool Table_triggers_list::create_trigger(626,19263
static bool rm_trigger_file(906,28089
static bool rm_trigname_file(928,28646
static bool save_trigger_file(949,29215
bool Table_triggers_list::drop_trigger(984,30366
Table_triggers_list::~Table_triggers_list(1053,32323
bool Table_triggers_list::prepare_record1_accessors(1077,32966
void Table_triggers_list::set_table(1110,33877
bool Table_triggers_list::check_n_load(1143,34701
bool Table_triggers_list::get_trigger_info(1602,50970
void Table_triggers_list::get_trigger_info(1649,52516
int Table_triggers_list::find_trigger_by_name(1686,53958
bool add_table_for_trigger(1719,54834
bool Table_triggers_list::drop_all_triggers(1775,56129
Table_triggers_list::change_table_name_in_triggers(1846,57837
Table_triggers_list::change_table_name_in_trignames(1930,60962
bool Table_triggers_list::change_table_name(1990,63009
bool Table_triggers_list::process_triggers(2105,66797
add_tables_and_routines_for_triggers(2175,68827
void Table_triggers_list::mark_fields_used(2228,70661
void Table_triggers_list::set_parse_error_message(2260,71796
#define INVALID_SQL_MODES_LENGTH 2287,72513
Handle_old_incorrect_sql_modes_hook::process_unknown_string(2290,72555
#define INVALID_TRIGGER_TABLE_LENGTH 2325,73940
process_unknown_string(2333,74156
void build_trn_path(2374,75477
bool check_trn_exists(2395,76063
bool load_table_name_for_trigger(2414,76525

sql/sql_truncate.cc,374
static bool fk_info_append_fields(39,1444
static const char *fk_info_str(fk_info_str67,2003
fk_truncate_illegal_if_parent(121,3865
int Truncate_statement::handler_truncate(188,5835
static bool recreate_temporary_table(256,8040
bool Truncate_statement::lock_table(308,9460
bool Truncate_statement::truncate_table(397,12624
bool Truncate_statement::execute(513,16259

sql/sql_udf.cc,684
static bool initialized 50,1712
static MEM_ROOT mem;51,1741
static HASH udf_hash;52,1762
static mysql_rwlock_t THR_LOCK_udf;53,1784
static char *init_syms(init_syms61,2015
extern "C" uchar* get_hash_key(101,3065
static PSI_rwlock_key key_rwlock_THR_LOCK_udf;110,3315
static PSI_rwlock_info all_udf_rwlocks[all_udf_rwlocks112,3363
static void init_udf_psi_keys(117,3474
void udf_init(135,3804
void udf_free(264,7566
static void del_udf(294,8289
void free_udf(319,8902
udf_func *find_udf(find_udf345,9473
static void *find_udf_dl(find_udf_dl372,10183
static udf_func *add_udf(add_udf392,10650
int mysql_create_function(421,11391
int mysql_drop_function(563,15748

sql/sql_union.cc,704
bool mysql_union(31,1091
int select_union::prepare(48,1653
bool select_union::send_data(55,1746
bool select_union::send_eof(78,2308
bool select_union::flush(84,2356
select_union::create_result_table(117,3232
st_select_lex_unit::init_prepare_fake_select_lex(147,4084
bool st_select_lex_unit::prepare(172,4899
bool st_select_lex_unit::exec(454,13734
bool st_select_lex_unit::cleanup(668,20659
void st_select_lex_unit::reinit_exec_mechanism(724,22030
bool st_select_lex_unit::change_result(759,22687
List<Item> *st_select_lex_unit::get_unit_column_types(st_select_lex_unit::get_unit_column_types792,23663
bool st_select_lex::cleanup(815,24120
void st_select_lex::cleanup_all_joins(838,24608

sql/sql_update.cc,794
bool records_are_comparable(50,2111
bool compare_records(69,2818
static bool check_fields(137,4793
static void prepare_record_for_error_message(173,5753
int mysql_update(252,8278
bool mysql_prepare_update(960,31464
static table_map get_table_map(1013,33238
bool unsafe_key_update(1055,34734
int mysql_multi_update_prepare(1140,37430
bool mysql_multi_update(1347,44109
multi_update::multi_update(1398,45812
int multi_update::prepare(1415,46445
static bool safe_update_on_fly(1603,52120
multi_update::initialize_tables(1646,53398
multi_update::~multi_update(1790,58189
bool multi_update::send_data(1819,58873
void multi_update::send_error(1974,64016
void multi_update::abort_result_set(1981,64161
int multi_update::do_updates(2034,65907
bool multi_update::send_eof(2209,70697

sql/sql_view.cc,781
#define MYSQL_LEX 17,745
#define MD5_BUFF_LENGTH 37,1552
const LEX_STRING view_type=39,1580
static void make_unique_view_field_name(60,2377
bool check_duplicate_names(125,4298
static void make_valid_column_names(169,5468
fill_defined_view_parts 211,6579
bool create_view_precheck(254,7723
bool create_view_precheck(375,11604
bool mysql_create_view(397,12081
static const int required_view_parameters=723,21468
static File_option view_parameters[view_parameters731,21642
static LEX_STRING view_file_type[view_file_type778,23205
static int mysql_register_view(796,23575
bool mysql_make_view(1062,30881
bool mysql_drop_view(1673,52653
bool check_key_in_view(1801,56228
bool insert_view_fields(1922,60024
int view_checksum(1960,60881
mysql_rename_view(1988,61418

sql/strfunc.cc,332
static const char field_separator=45,1609
ulonglong find_set(47,1649
uint find_type(113,3451
uint find_type2(154,4359
void unhex_type2(192,5152
uint check_word(232,6174
uint strconvert(267,6977
int find_string_in_array(338,8519
char *set_to_string(set_to_string352,8918
char *flagset_to_string(flagset_to_string383,9538

sql/sys_vars.cc,5709
TYPELIB bool_typelib=55,2036
static bool update_buffer_size(65,2349
static bool update_keycache_param(117,3823
#define export 141,4587
#define PFS_TRAILING_PROPERTIES 145,4659
static bool check_has_super(332,12782
static bool binlog_format_check(344,13135
static bool fix_binlog_format_after_update(392,14660
static bool binlog_direct_check(415,15826
static bool check_not_null(467,17758
static bool check_charset(471,17874
static bool check_charset_not_null(503,18881
static bool check_charset_db(519,19602
static bool check_cs_client(534,20157
static bool fix_thd_charset(545,20451
static const char *completion_type_names[completion_type_names582,22145
static bool check_collation_not_null(589,22476
static bool check_collation_db(626,23667
static const char *concurrent_insert_names[concurrent_insert_names647,24512
export bool fix_delay_key_write(679,25794
static const char *delay_key_write_names[delay_key_write_names695,26186
static const char *event_scheduler_names[event_scheduler_names728,27803
static bool event_scheduler_check(729,27883
static bool event_scheduler_update(749,28548
static bool check_ftb_syntax(808,31019
static bool query_cache_flush(813,31200
static bool check_init_string(865,33461
static PolyLock_rwlock PLock_sys_init_connect(&LOCK_sys_init_connect)LOCK_sys_init_connect874,33711
static PolyLock_rwlock PLock_sys_init_slave(&LOCK_sys_init_slave)LOCK_sys_init_slave892,34370
static bool update_cached_long_query_time(1030,40667
static bool fix_low_prio_updates(1052,41559
static bool session_readonly(1102,43451
check_max_allowed_packet(1112,43693
static bool fix_max_binlog_size(1161,45567
static bool fix_max_connections(1179,46296
static bool check_max_delayed_threads(1204,47366
static bool fix_max_join_size(1258,49818
static PolyLock_mutex PLock_prepared_stmt_count(&LOCK_prepared_stmt_count)LOCK_prepared_stmt_count1305,51816
static bool fix_max_relay_log_size(1313,52208
check_net_buffer_length(1382,55065
static bool fix_net_read_timeout(1404,55885
static bool fix_net_write_timeout(1419,56489
static bool fix_net_retry_count(1434,57112
static bool check_old_passwords(1461,58206
static bool fix_optimizer_search_depth(1491,59679
static const char *optimizer_switch_names[optimizer_switch_names1516,60970
static bool fix_optimizer_switch(1523,61219
static bool check_read_only(1592,64171
static bool fix_read_only(1602,64441
static bool fix_thd_mem_root(1726,69095
static bool fix_trans_mem_root(1820,72921
static const char *thread_handling_names[thread_handling_names1844,74031
static bool fix_query_cache_size(1857,74485
static bool fix_qcache_min_res_unit(1886,75673
static const char *query_cache_type_names[query_cache_type_names1900,76272
static bool check_query_cache_type(1901,76347
static bool fix_server_id(1940,77793
static const char *slave_exec_mode_names[slave_exec_mode_names1961,78564
const char *slave_type_conversions_name[slave_type_conversions_name1971,79167
export ulong expand_sql_mode(1999,80420
static bool check_sql_mode(2050,82553
static bool fix_sql_mode(2056,82730
static const char *sql_mode_names[sql_mode_names2072,83231
export bool sql_mode_string_representation(2085,83869
#define SSL_OPT(2110,85014
#define SSL_OPT(2112,85064
static const char *updatable_views_with_limit_names[updatable_views_with_limit_names2143,86173
static char *system_time_zone_ptr;system_time_zone_ptr2159,86996
static bool check_tx_isolation(2189,88140
bool Sys_var_tx_isolation::session_update(2201,88439
static char *server_version_ptr;server_version_ptr2247,90138
static char *server_version_comment_ptr;server_version_comment_ptr2253,90358
static char *server_version_compile_machine_ptr;server_version_compile_machine_ptr2259,90622
static char *server_version_compile_os_ptr;server_version_compile_os_ptr2265,90913
static bool fix_engine_condition_pushdown(2280,91593
static bool fix_autocommit(2359,95057
export sys_var *Sys_autocommit_ptr=Sys_autocommit_ptr2412,97030
static bool fix_sql_log_bin_after_update(2444,98203
static bool check_sql_log_bin(2469,98957
static bool update_timestamp(2559,102055
static ulonglong read_timestamp(2567,102263
static bool check_timestamp(2573,102349
static bool update_last_insert_id(2599,103112
static ulonglong read_last_insert_id(2610,103377
static bool update_insert_id(2648,105154
static ulonglong read_insert_id(2659,105399
static bool update_rand_seed1(2671,105894
static ulonglong read_rand_seed(2681,106130
static bool update_rand_seed2(2693,106545
static ulonglong read_error_count(2711,107138
static ulonglong read_warning_count(2723,107637
static char *glob_hostname_ptr;glob_hostname_ptr2747,108700
static char *license;license2796,110939
static bool check_log_path(2802,111165
static bool fix_log(2855,112573
static void reopen_general_log(2874,113140
static bool fix_general_log_file(2879,113285
static void reopen_slow_log(2890,113794
static bool fix_slow_log_file(2895,113945
export SHOW_COMP_OPTION have_csv,2909,114649
export SHOW_COMP_OPTION have_csv, have_innodb=2909,114649
export SHOW_COMP_OPTION have_ndbcluster,2910,114718
export SHOW_COMP_OPTION have_ndbcluster, have_partitioning;2910,114718
static bool fix_log_state(3000,118310
static bool check_not_empty_set(3039,119299
static bool fix_log_output(3043,119422
static const char *log_output_names[log_output_names3052,119652
static bool fix_slave_net_timeout(3104,122149
static bool check_slave_skip_counter(3125,123189
static bool fix_slave_skip_counter(3139,123608
static bool check_locale(3212,126941
static bool check_pseudo_slave_mode(3288,129482
static bool update_backup_throttle(3345,131219

sql/table.cc,6026
LEX_STRING INFORMATION_SCHEMA_NAME=41,1800
LEX_STRING PERFORMANCE_SCHEMA_DB_NAME=44,1910
LEX_STRING MYSQL_SCHEMA_NAME=47,2017
LEX_STRING GENERAL_LOG_NAME=50,2101
LEX_STRING SLOW_LOG_NAME=53,2187
Object_creation_ctx *Object_creation_ctx::set_n_backup(Object_creation_ctx::set_n_backup73,3013
void Object_creation_ctx::restore_env(84,3255
Default_object_creation_ctx::Default_object_creation_ctx(98,3625
Default_object_creation_ctx::Default_object_creation_ctx(103,3808
Default_object_creation_ctx::create_backup_ctx(110,4012
void Default_object_creation_ctx::change_env(115,4127
View_creation_ctx *View_creation_ctx::create(View_creation_ctx::create127,4516
View_creation_ctx * View_creation_ctx::create(136,4738
static uchar *get_field_name(get_field_name194,6833
char *fn_rext(fn_rext223,7667
TABLE_CATEGORY get_table_category(231,7813
TABLE_SHARE *alloc_table_share(alloc_table_share284,9276
void init_tmp_table_share(363,11965
void TABLE_SHARE::destroy(407,13431
void free_table_share(458,14532
inline bool is_system_table_name(511,16149
static inline bool has_disabled_path_chars(553,17458
int open_table_def(594,18398
static int open_binary_frm(730,22246
int open_table_from_share(1829,60161
int closefrm(2155,71105
void free_blobs(2195,72005
void free_field_buffers_larger_than(2222,72638
static ulong get_form_pos(2245,73128
int read_string(2286,73866
ulong make_new_entry(2305,74412
void open_table_error(2377,76950
fix_type_pointers(2457,79159
TYPELIB *typelib(typelib2490,79885
static uint find_field(2527,80889
int set_zone(2550,81339
ulong next_io_size(2561,81567
void append_unescaped(2584,82015
File create_frm(2634,83111
void update_create_info_from_table(2754,87405
rename_file_ext(2774,88068
bool get_field(2797,88589
char *get_field(get_field2829,89322
uint calculate_key_len(2849,89810
bool check_db_name(2884,90577
bool check_table_name(2912,91220
bool check_column_name(2955,92219
Table_check_intact::check(3007,93657
bool Wait_for_flush::accept_visitor(3147,98871
uint Wait_for_flush::get_deadlock_weight(3153,99001
bool TABLE_SHARE::visit_subgraph(3171,99466
bool TABLE_SHARE::wait_for_old_version(3251,101594
void TABLE::init(3335,104002
bool TABLE::fill_item_list(3400,105724
void TABLE::reset_item_list(3430,106514
void  TABLE_LIST::calc_md5(3449,106889
void TABLE_LIST::set_underlying_merge(3485,108181
bool TABLE_LIST::setup_underlying(3533,109334
bool TABLE_LIST::prep_where(3612,111384
merge_on_conds(3690,113585
bool TABLE_LIST::prep_check_option(3737,115035
void TABLE_LIST::hide_view_error(3807,117165
TABLE_LIST *TABLE_LIST::find_underlying_table(TABLE_LIST::find_underlying_table3851,118523
void TABLE_LIST::cleanup_items(3873,119046
int TABLE_LIST::view_check_option(3898,119525
bool TABLE_LIST::check_single_table(3935,120600
bool TABLE_LIST::set_insert_values(3970,121315
bool TABLE_LIST::is_leaf_for_name_resolution(4006,122268
TABLE_LIST *TABLE_LIST::first_leaf_for_name_resolution(TABLE_LIST::first_leaf_for_name_resolution4036,123081
TABLE_LIST *TABLE_LIST::last_leaf_for_name_resolution(TABLE_LIST::last_leaf_for_name_resolution4094,124705
void TABLE_LIST::register_want_access(4136,125750
bool TABLE_LIST::prepare_view_securety_context(4164,126408
Security_context *TABLE_LIST::find_view_security_context(TABLE_LIST::find_view_security_context4223,128146
bool TABLE_LIST::prepare_security(4264,129056
Natural_join_column::Natural_join_column(4304,130085
Natural_join_column::Natural_join_column(4315,130346
const char *Natural_join_column::name(Natural_join_column::name4326,130618
Item *Natural_join_column::create_item(Natural_join_column::create_item4338,130792
Field *Natural_join_column::field(Natural_join_column::field4350,131045
const char *Natural_join_column::table_name(Natural_join_column::table_name4361,131197
const char *Natural_join_column::db_name(Natural_join_column::db_name4368,131302
GRANT_INFO *Natural_join_column::grant(Natural_join_column::grant4387,131867
void Field_iterator_view::set(4395,132001
const char *Field_iterator_table::name(Field_iterator_table::name4404,132188
Item *Field_iterator_table::create_item(Field_iterator_table::create_item4410,132264
const char *Field_iterator_view::name(Field_iterator_view::name4426,132737
Item *Field_iterator_view::create_item(Field_iterator_view::create_item4432,132803
Item *create_view_field(create_view_field4437,132919
void Field_iterator_natural_join::set(4476,133954
void Field_iterator_natural_join::next(4484,134146
void Field_iterator_table_ref::set_field_iterator(4493,134402
void Field_iterator_table_ref::set(4544,136392
void Field_iterator_table_ref::next(4555,136672
const char *Field_iterator_table_ref::get_table_name(Field_iterator_table_ref::get_table_name4572,137091
const char *Field_iterator_table_ref::get_db_name(Field_iterator_table_ref::get_db_name4585,137445
GRANT_INFO *Field_iterator_table_ref::grant(Field_iterator_table_ref::grant4606,138094
Field_iterator_table_ref::get_or_create_column_ref(4654,139940
Field_iterator_table_ref::get_natural_column_ref(4747,143122
void TABLE::clear_column_bitmaps(4770,143939
void TABLE::prepare_for_position(4791,144489
void TABLE::mark_columns_used_by_index(4816,145131
void TABLE::add_read_columns_used_by_index(4837,145600
void TABLE::restore_column_maps_after_mark_index(4861,146169
void TABLE::mark_columns_used_by_index_no_reset(4876,146455
void TABLE::mark_auto_increment_column(4895,147034
void TABLE::mark_columns_needed_for_delete(4928,148161
void TABLE::mark_columns_needed_for_update(4978,149716
void TABLE::mark_columns_needed_for_insert(5021,150935
void TABLE_LIST::reinit_before_use(5046,151527
Item_subselect *TABLE_LIST::containing_subselect(TABLE_LIST::containing_subselect5084,152585
bool TABLE_LIST::process_index_hints(5141,154669
size_t max_row_length(5274,159348
void init_mdl_requests(5297,159982
bool TABLE::update_const_key_parts(5321,160708
bool is_simple_order(5352,161511

sql/thr_malloc.cc,309
  void sql_alloc_error_handler(25,884
void init_sql_alloc(63,2304
void *sql_alloc(sql_alloc70,2486
void *sql_calloc(sql_calloc77,2623
char *sql_strdup(sql_strdup86,2736
char *sql_strmake(sql_strmake96,2894
void* sql_memdup(108,3062
char *sql_strmake_with_convert(sql_strmake_with_convert117,3195

sql/transaction.cc,609
static bool trans_check(27,1050
static bool xa_trans_rolled_back(60,1960
static bool xa_trans_force_rollback(91,2686
bool trans_begin(121,3327
bool trans_commit(172,4509
bool trans_commit_implicit(209,5379
bool trans_rollback(251,6453
bool trans_commit_stmt(285,7382
bool trans_rollback_stmt(327,8413
find_savepoint(357,9247
bool trans_savepoint(383,9714
bool trans_rollback_to_savepoint(460,11866
bool trans_release_savepoint(518,13528
bool trans_xa_start(548,14077
bool trans_xa_end(599,15468
bool trans_xa_prepare(628,16276
bool trans_xa_commit(660,17080
bool trans_xa_rollback(756,19865

sql/tztime.cc,4674
#define ABBR_ARE_USED56,1964
#undef ABBR_ARE_USED60,2062
#define ABBR_ARE_USED61,2083
typedef struct ttinfo66,2267
  long tt_gmtoff;ttinfo::tt_gmtoff68,2291
  uint tt_isdst;ttinfo::tt_isdst69,2339
  uint tt_abbrind;ttinfo::tt_abbrind71,2435
} TRAN_TYPE_INFO;77,2675
typedef struct lsinfo80,2746
  my_time_t ls_trans;lsinfo::ls_trans82,2770
  long      ls_corr;lsinfo::ls_corr83,2811
} LS_INFO;84,2856
typedef struct revtinfo91,3083
  long rt_offset;revtinfo::rt_offset93,3109
  uint rt_type;revtinfo::rt_type94,3171
} REVT_INFO;95,3247
#define MY_TZNAME_MAX	98,3279
#define MY_TZNAME_MAX	101,3338
typedef struct st_time_zone_info108,3475
  uint leapcnt;st_time_zone_info::leapcnt110,3510
  uint timecnt;st_time_zone_info::timecnt111,3564
  uint typecnt;st_time_zone_info::typecnt112,3625
  uint charcnt;st_time_zone_info::charcnt113,3672
  uint revcnt;st_time_zone_info::revcnt114,3736
  my_time_t *ats;st_time_zone_info::ats116,3884
  uchar	*types;st_time_zone_info::types117,3951
  TRAN_TYPE_INFO *ttis;st_time_zone_info::ttis118,4003
  char *chars;st_time_zone_info::chars121,4159
  LS_INFO *lsis;st_time_zone_info::lsis127,4299
  my_time_t *revts;st_time_zone_info::revts133,4529
  REVT_INFO *revtis;st_time_zone_info::revtis134,4549
  TRAN_TYPE_INFO *fallback_tti;st_time_zone_info::fallback_tti139,4691
} TIME_ZONE_INFO;141,4724
tz_load(162,5091
      struct tzhead tzhead;::tzhead174,5331
prepare_tz_info(322,10700
static const uint mon_lengths[mon_lengths511,16297
static const uint mon_starts[mon_starts517,16459
static const uint year_lengths[year_lengths523,16634
#define LEAPS_THRU_END_OF(528,16708
sec_to_TIME(549,17443
find_time_range(633,19596
find_transition_type(675,20671
gmt_sec_to_TIME(717,22237
sec_since_epoch(789,24352
TIME_to_gmt_sec(891,29323
static const String tz_SYSTEM_name("SYSTEM", 6, &my_charset_latin1)my_charset_latin11001,32236
class Time_zone_system 1014,32896
  Time_zone_system(Time_zone_system::Time_zone_system1017,32948
Time_zone_system::TIME_to_gmt_sec(1051,34316
Time_zone_system::gmt_sec_to_TIME(1075,35086
Time_zone_system::get_name(1097,35468
class Time_zone_utc 1109,35852
  Time_zone_utc(Time_zone_utc::Time_zone_utc1112,35901
Time_zone_utc::TIME_to_gmt_sec(1140,36918
Time_zone_utc::gmt_sec_to_TIME(1161,37393
Time_zone_utc::get_name(1187,37976
class Time_zone_db 1199,38190
  TIME_ZONE_INFO *tz_info;Time_zone_db::tz_info1208,38557
  const String *tz_name;Time_zone_db::tz_name1209,38584
Time_zone_db::Time_zone_db(1226,39074
Time_zone_db::TIME_to_gmt_sec(1253,39914
Time_zone_db::gmt_sec_to_TIME(1269,40338
Time_zone_db::get_name(1286,40602
class Time_zone_offset 1296,40751
  long offset;Time_zone_offset::offset1308,41201
  char name_buff[Time_zone_offset::name_buff1311,41267
  String name;Time_zone_offset::name1312,41291
Time_zone_offset::Time_zone_offset(1324,41534
Time_zone_offset::TIME_to_gmt_sec(1353,42622
Time_zone_offset::gmt_sec_to_TIME(1402,43825
Time_zone_offset::get_name(1418,44070
static Time_zone_utc tz_UTC;1424,44127
static Time_zone_system tz_SYSTEM;1425,44156
Time_zone *my_tz_OFFSET0=my_tz_OFFSET01428,44231
Time_zone *my_tz_UTC=my_tz_UTC1429,44270
Time_zone *my_tz_SYSTEM=my_tz_SYSTEM1430,44301
static HASH tz_names;1432,44339
static HASH offset_tzs;1433,44361
static MEM_ROOT tz_storage;1434,44385
static mysql_mutex_t tz_LOCK;1443,44701
static bool tz_inited=1444,44731
static uint tz_leapcnt=1450,44868
static LS_INFO *tz_lsis=tz_lsis1451,44895
static bool time_zone_tables_exist=1458,45099
static const LEX_STRING tz_tables_names[tz_tables_names1466,45253
static const LEX_STRING tz_tables_db_name=1476,45553
class Tz_names_entry:Tz_names_entry1479,45629
  String name;Tz_names_entry::name1482,45678
  Time_zone *tz;Tz_names_entry::tz1483,45693
my_tz_names_get_key(1493,45845
my_offset_tzs_get_key(1501,46060
tz_init_table_list(1524,46673
static PSI_mutex_key key_tz_LOCK;1544,47296
static PSI_mutex_info all_tz_mutexes[all_tz_mutexes1546,47331
static void init_tz_psi_keys(1551,47424
my_tz_init(1591,48713
void my_tz_free(1809,55003
tz_load_from_open_tables(1844,55940
str_to_offset(2175,66413
my_tz_find(2275,69018
void Time_zone::adjust_leap_second(2349,71332
print_tz_as_sql(2376,71936
print_tz_leaps_as_sql(2417,73233
TIME_ZONE_INFO tz_info;2445,73902
MEM_ROOT tz_storage;2446,73926
char fullname[fullname2447,73947
char *root_name_end;root_name_end2448,73977
scan_tz_dir(2473,74615
main(2523,75858
#define CHAR_BIT 2598,77674
#define TYPE_BIT(2602,77718
#define TYPE_SIGNED(2606,77796
is_equal_TIME_tm(2610,77856
main(2623,78308

sql/uniques.cc,473
int unique_write_to_file(40,1587
int unique_write_to_ptrs(51,2008
Unique::Unique(58,2194
inline double log2_n_fact(95,3295
static double get_merge_buffers_cost(131,4465
static double get_merge_many_buffs_cost(174,5811
double Unique::get_use_cost(267,9045
Unique::~Unique(320,10824
bool Unique::flush(329,10969
Unique::reset(351,11442
static int buffpek_compare(377,12105
static bool merge_walk(421,13936
bool Unique::walk(552,18491
bool Unique::get(581,19473

sql/unireg.cc,568
#define FCOMP	35,1390
struct Pack_header_error_handler:Pack_header_error_handler61,2453
  bool is_handled;Pack_header_error_handler::is_handled69,2841
  Pack_header_error_handler(Pack_header_error_handler::Pack_header_error_handler70,2860
handle_condition(76,2950
bool mysql_create_frm(108,3763
int rea_create_table(509,17131
static uchar *pack_screens(pack_screens551,18472
static uint pack_keys(627,20575
static bool pack_header(717,23124
static uint get_interval_id(888,29553
static bool pack_fields(916,30231
static bool make_empty_rec(1062,34132

vio/viotest.cc,34
VIO_NS_USING;30,920
main(33,939

vio/viotest-sslconnect.cc,55
fatal_error(32,951
print_usage(39,1011
main(46,1141

client/echo.c,18
int main(33,1148

client/get_password.c,258
#undef HAVE_GETPASS27,958
#define TERMIO	39,1200
#define TERMIO	43,1303
#define TERMIO	46,1357
#define getpass(59,1637
char *get_tty_password(get_tty_password66,1770
static void get_password(110,2657
char *get_tty_password(get_tty_password152,3368

client/mysqlcheck.c,1995
#define CHECK_VERSION 18,748
#define EX_USAGE 29,998
#define EX_MYSQLERR 30,1017
static MYSQL mysql_connection,32,1040
static MYSQL mysql_connection, *sock sock32,1040
static my_bool opt_alldbs 33,1082
static uint verbose 40,1563
static int my_end_arg;41,1606
static char * opt_mysql_unix_port 42,1629
static char *opt_password opt_password43,1668
static char *opt_plugin_dir=opt_plugin_dir45,1763
static int first_error 46,1817
DYNAMIC_ARRAY tables4repair,47,1845
DYNAMIC_ARRAY tables4repair, tables4rebuild;47,1845
static char *shared_memory_base_name=shared_memory_base_name49,1907
static uint opt_protocol=51,1954
enum operations 53,1983
enum operations { DO_CHECK=53,1983
enum operations { DO_CHECK=1, DO_REPAIR,53,1983
enum operations { DO_CHECK=1, DO_REPAIR, DO_ANALYZE,53,1983
enum operations { DO_CHECK=1, DO_REPAIR, DO_ANALYZE, DO_OPTIMIZE,53,1983
enum operations { DO_CHECK=1, DO_REPAIR, DO_ANALYZE, DO_OPTIMIZE, DO_UPGRADE 53,1983
static struct my_option my_long_options[my_long_options55,2064
static const char *load_default_groups[load_default_groups194,9361
int what_to_do 214,10214
static void print_version(217,10236
static void usage(224,10424
get_one_option(251,11769
static int get_options(341,13761
static int process_all_databases(412,15696
static int process_databases(435,16161
static int process_selected_tables(447,16367
static uint fixed_name_length(486,17517
static char *fix_table_name(fix_table_name502,17820
static int process_all_tables_in_db(525,18245
static int fix_table_storage_name(595,20003
static int fix_database_storage_name(613,20449
static int rebuild_table(631,20910
static int process_one_db(652,21454
static int use_db(669,21797
static int disable_binlog(685,22312
static int handle_request_for_tables(697,22551
static void print_result(759,24436
static int dbConnect(824,26050
static void dbDisconnect(864,27347
static void DBerror(872,27525
static void safe_exit(882,27771
int main(894,27937

client/mysqldump.c,6442
#define DUMP_VERSION 41,1646
#define EX_USAGE 60,2015
#define EX_MYSQLERR 61,2034
#define EX_CONSCHECK 62,2056
#define EX_EOM 63,2079
#define EX_EOF 64,2096
#define EX_ILLEGAL_TABLE 65,2150
#define SHOW_FIELDNAME 69,2221
#define SHOW_TYPE 70,2247
#define SHOW_NULL 71,2268
#define SHOW_DEFAULT 72,2289
#define SHOW_EXTRA 73,2313
#define QUERY_LENGTH 76,2381
#define COMMENT_LENGTH 79,2438
#define IGNORE_NONE 82,2492
#define IGNORE_DATA 83,2533
#define IGNORE_INSERT_DELAYED 84,2595
static inline my_bool general_log_or_slow_log_tables(87,2732
static my_bool  verbose=102,3362
static my_bool insert_pat_inited=120,4440
static ulong opt_max_allowed_packet,121,4518
static ulong opt_max_allowed_packet, opt_net_buffer_length;121,4518
static MYSQL mysql_connection,122,4578
static MYSQL mysql_connection,*mysql=mysql122,4578
static DYNAMIC_STRING insert_pat;123,4618
static char  *opt_password=opt_password124,4652
static char **defaults_argv=defaults_argv131,4973
static char compatible_mode_normal_str[compatible_mode_normal_str132,5005
static my_bool server_supports_switching_charsets=134,5112
static ulong opt_compatible_mode=135,5169
#define MYSQL_OPT_MASTER_DATA_EFFECTIVE_SQL 136,5206
#define MYSQL_OPT_MASTER_DATA_COMMENTED_SQL 137,5252
#define MYSQL_OPT_SLAVE_DATA_EFFECTIVE_SQL 138,5298
#define MYSQL_OPT_SLAVE_DATA_COMMENTED_SQL 139,5343
static uint opt_mysql_port=140,5388
static uint opt_slave_data;141,5436
static uint my_end_arg;142,5464
static char * opt_mysql_unix_port=143,5488
static int   first_error=144,5525
static DYNAMIC_STRING extended_row;145,5553
FILE *md_result_file=md_result_file147,5614
FILE *stderror_file=stderror_file148,5639
static char *shared_memory_base_name=shared_memory_base_name151,5680
static uint opt_protocol=153,5727
static char *opt_plugin_dir=opt_plugin_dir154,5756
static const char *mysql_universal_client_charset=mysql_universal_client_charset173,6620
static char *default_charset;default_charset175,6705
static CHARSET_INFO *charset_info=charset_info176,6735
const char *default_dbug_option=default_dbug_option177,6790
my_bool seen_views=179,6904
const char *compatible_mode_names[compatible_mode_names180,6927
#define MASK_ANSI_QUOTES 187,7121
TYPELIB compatible_mode_typelib=196,7327
HASH ignore_table;199,7473
static struct my_option my_long_options[my_long_options201,7493
static const char *load_default_groups[load_default_groups527,25285
static void verbose_msg(565,26854
void check_io(590,27201
static void print_version(596,27301
static void short_usage_sub(603,27490
static void usage(612,27766
static void short_usage(624,28087
static void write_header(631,28204
static void write_footer(691,30349
uchar* get_table_key(733,31511
get_one_option(742,31702
static int get_options(902,36315
static void DB_error(1003,39644
static void die(1026,40229
static void maybe_die(1060,41158
static int mysql_query_with_error_report(1092,41909
static int fetch_db_collation(1106,42310
static char *my_case_str(my_case_str1151,43330
static int switch_db_collation(1167,43819
static int restore_db_collation(1202,44771
static void switch_cs_variables(1226,45444
static void restore_cs_variables(1254,46556
static void switch_sql_mode(1267,47025
static void restore_sql_mode(1281,47436
static void switch_time_zone(1290,47670
static void restore_time_zone(1304,48087
static int switch_character_set_results(1325,48821
static char *cover_definer_clause(cover_definer_clause1367,50559
static FILE* open_sql_file_for_table(1421,52374
static void free_resources(1432,52665
static void maybe_exit(1449,53071
static int connect_to_db(1466,53320
static void dbDisconnect(1538,55765
static void unescape(1545,55924
static my_bool test_if_special_chars(1562,56328
static char *quote_name(quote_name1590,56941
static char *quote_for_like(quote_for_like1632,58038
static void print_quoted_xml(1666,58707
static void print_xml_tag(1731,60499
static void print_xml_null_tag(1786,61914
static void print_xml_cdata(1814,62707
static void print_xml_row(1858,63649
static void print_xml_comment(1925,65322
static void print_comment(1954,65987
static char *create_delimiter(create_delimiter1993,67037
static uint dump_events_for_db(2026,67905
static void print_blob_as_hex(2215,73583
static uint dump_routines_for_db(2237,74194
static uint get_table_structure(2428,80490
static void dump_trigger_old(2986,98958
static int dump_trigger(3065,101569
static int dump_triggers_for_table(3135,103510
static void add_load_option(3242,106228
static void field_escape(3273,106965
static char *alloc_query_str(alloc_query_str3305,107639
static void dump_table(3332,108008
static char *getTableName(getTableName3821,124063
static int dump_all_tablespaces(3849,124526
static int dump_tablespaces_for_tables(3854,124598
static int dump_tablespaces_for_databases(3889,125673
static int dump_tablespaces(3919,126578
static int dump_all_databases(4096,131285
static int dump_databases(4145,132720
int init_dumping_views(4179,133284
int init_dumping_tables(4197,133571
static int init_dumping(4240,134662
my_bool include_table(4275,135620
static int dump_all_tables_in_db(4281,135740
static my_bool dump_all_views_in_db(4399,139324
static char *get_actual_table_name(get_actual_table_name4469,141399
static int dump_selected_tables(4507,142444
static int do_show_master_status(4632,146165
static int do_stop_slave_sql(4670,147304
static int add_stop_slave(4699,148032
static int add_slave_statements(4708,148253
static int do_show_slave_status(4717,148482
static int do_start_slave_sql(4762,149801
static int do_flush_tables_read_lock(4795,150595
static int do_unlock_tables(4815,151496
static int get_bin_log_name(4820,151618
static int purge_bin_logs_to(4845,152148
static int start_transaction(4858,152499
static ulong find_set(4891,154041
static void print_value(4933,154968
char check_if_ignore_table(4985,156476
static char *primary_key_fields(primary_key_fields5067,159241
static int replace(5152,161622
static my_bool get_view_structure(5184,162413
#define DYNAMIC_STR_ERROR_MSG 5386,169090
static void init_dynamic_string_checked(5388,169165
static void dynstr_append_checked(5395,169415
static void dynstr_set_checked(5401,169570
static void dynstr_append_mem_checked(5407,169727
static void dynstr_realloc_checked(5414,169920
int main(5421,170094

client/mysqlimport.c,1250
#define IMPORT_VERSION 23,828
uint counter;35,1073
pthread_mutex_t counter_mutex;37,1110
pthread_cond_t count_threshhold;38,1141
static my_bool	verbose=47,1436
static my_bool debug_info_flag=50,1605
static uint opt_use_threads=51,1661
static char	*opt_password=opt_password52,1725
static uint     opt_mysql_port=57,1970
static char * opt_mysql_unix_port=58,2022
static char *opt_plugin_dir=opt_plugin_dir59,2059
static longlong opt_ignore_lines=60,2113
static char *shared_memory_base_name=shared_memory_base_name64,2194
static struct my_option my_long_options[my_long_options67,2242
static const char *load_default_groups[load_default_groups187,8064
static void print_version(190,8138
static void usage(197,8305
get_one_option(216,8985
static int get_options(261,10042
static int write_to_table(296,10800
static void lock_table(388,13557
static MYSQL *db_connect(db_connect410,14136
static void db_disconnect(464,15761
static void safe_exit(473,15932
static void db_error_with_table(484,16071
static void db_error(493,16279
static char *add_load_option(add_load_option500,16428
static char *field_escape(field_escape526,17144
int exitcode=549,17714
pthread_handler_t worker_thread(552,17755
int main(594,18596

client/mysql_plugin.c,1355
#define SHOW_VERSION 27,895
#define PRINT_VERSION 28,924
static uint my_end_arg=33,1127
static uint opt_verbose=34,1154
static uint opt_no_defaults=35,1181
static uint opt_print_defaults=36,1213
static char *opt_datadir=opt_datadir37,1248
static char bootstrap[bootstrap40,1395
struct st_plugin44,1451
  const char *name;name46,1470
  const char *so_name;so_name47,1518
  const char *components[components48,1579
} plugin_data;49,1634
static struct my_option my_long_options[my_long_options53,1665
int main(95,3616
static int make_tempfile(159,5543
static char *get_value(get_value184,6146
static int run_command(217,7024
static int has_spaces(246,7518
static char *convert_path(convert_path261,7778
static char *add_quotes(add_quotes286,8297
static int get_default_values(316,8946
static void usage(406,11115
static void print_default_values(431,11627
get_one_option(473,12539
static int file_exists(527,13585
static int search_dir(550,14054
static int search_paths(578,14754
static int load_plugin_data(608,15457
static int check_options(707,17657
static int process_options(828,20993
static int check_access(910,23115
static int find_tool(965,24445
static int find_plugin(999,25323
static int build_bootstrap_file(1029,26083
static int dump_bootstrap_file(1111,28354
static int bootstrap_server(1163,29775

client/mysqlshow.c,1069
#define SHOW_VERSION 20,789
static char * host=32,1074
static my_bool opt_show_keys=33,1122
static my_bool tty_password=34,1200
static my_bool debug_info_flag=35,1251
static uint my_end_arg=36,1307
static uint opt_verbose=37,1334
static char *default_charset=default_charset38,1361
static char *opt_plugin_dir=opt_plugin_dir39,1430
static char *shared_memory_base_name=shared_memory_base_name42,1503
static uint opt_protocol=44,1550
static uint opt_mysql_port=47,1628
static const char *load_default_groups[load_default_groups60,2288
static char * opt_mysql_unix_port=61,2358
int main(63,2396
static struct my_option my_long_options[my_long_options171,5128
static void print_version(257,8865
static void usage(264,9027
get_one_option(284,9783
get_options(335,10905
list_dbs(361,11442
list_tables(486,14463
list_table_status(633,18164
list_fields(670,19180
print_header(749,21418
print_row(812,22745
print_trailer(839,23262
static void print_res_header(860,23581
static void print_res_top(876,23885
static void print_res_row(897,24301

client/mysqlslap.c,5250
#define SLAP_VERSION 69,2622
#define HUGE_STRING_LENGTH 71,2650
#define RAND_STRING_SIZE 72,2682
#define SELECT_TYPE 75,2724
#define UPDATE_TYPE 76,2746
#define INSERT_TYPE 77,2768
#define UPDATE_TYPE_REQUIRES_PREFIX 78,2790
#define CREATE_TABLE_TYPE 79,2828
#define SELECT_TYPE_REQUIRES_PREFIX 80,2856
#define DELETE_TYPE_REQUIRES_PREFIX 81,2894
#define srandom 97,3250
#define random 98,3273
#define snprintf 99,3295
static char *shared_memory_base_name=shared_memory_base_name103,3348
uint thread_counter;107,3424
pthread_mutex_t counter_mutex;108,3445
pthread_cond_t count_threshhold;109,3476
uint master_wakeup;110,3509
pthread_mutex_t sleeper_mutex;111,3529
pthread_cond_t sleep_threshhold;112,3560
static char **defaults_argv;defaults_argv114,3594
char **primary_keys;primary_keys116,3624
unsigned long long primary_keys_number_of;117,3645
static char *host=host119,3689
static char *opt_plugin_dir=opt_plugin_dir127,4025
static uint opt_enable_cleartext_plugin=128,4079
static my_bool using_opt_enable_cleartext_plugin=129,4123
const char *delimiter=delimiter131,4177
const char *create_schema_string=create_schema_string133,4207
static my_bool opt_preserve=135,4255
static my_bool debug_info_flag=136,4310
static my_bool opt_only_print=137,4366
static my_bool opt_compress=138,4404
const char *auto_generate_sql_type=auto_generate_sql_type143,4645
static unsigned long connect_flags=145,4691
static int verbose,149,4874
static int verbose, delimiter_length;149,4874
static uint commit_rate;150,4912
static uint detach_rate;151,4937
const char *num_int_cols_opt;num_int_cols_opt152,4962
const char *num_char_cols_opt;num_char_cols_opt153,4992
static unsigned int num_int_cols=156,5059
static unsigned int num_char_cols=157,5096
static unsigned int num_int_cols_index=158,5134
static unsigned int num_char_cols_index=159,5178
static unsigned int iterations;160,5222
static uint my_end_arg=161,5254
static char *default_charset=default_charset162,5281
static ulonglong actual_queries=163,5347
static ulonglong auto_actual_queries;164,5383
static ulonglong auto_generate_sql_unique_write_number;165,5421
static ulonglong auto_generate_sql_unique_query_number;166,5477
static unsigned int auto_generate_sql_secondary_indexes;167,5533
static ulonglong num_of_query;168,5590
static ulonglong auto_generate_sql_number;169,5621
const char *concurrency_str=concurrency_str170,5664
static char *create_string;create_string171,5699
uint *concurrency;concurrency172,5727
const char *default_dbug_option=default_dbug_option174,5747
const char *opt_csv_str;opt_csv_str175,5809
File csv_file;176,5834
static uint opt_protocol=178,5850
static uint opt_mysql_port=181,5928
static const char *load_default_groups[load_default_groups183,5960
typedef struct statement statement;185,6031
struct statement 187,6068
  char *string;string188,6087
  size_t length;189,6103
  unsigned char type;190,6120
  char *option;option191,6142
  size_t option_length;192,6158
  statement *next;next193,6182
typedef struct option_string option_string;196,6205
struct option_string 198,6250
  char *string;string199,6273
  size_t length;200,6289
  char *option;option201,6306
  size_t option_length;202,6322
  option_string *next;next203,6346
typedef struct stats stats;206,6373
struct stats 208,6402
  long int timing;209,6417
  uint users;210,6436
  unsigned long long rows;211,6450
typedef struct thread_context thread_context;214,6481
struct thread_context 216,6528
  statement *stmt;stmt217,6552
  ulonglong limit;218,6571
typedef struct conclusions conclusions;221,6594
struct conclusions 223,6635
  char *engine;engine224,6656
  long int avg_timing;225,6672
  long int max_timing;226,6695
  long int min_timing;227,6718
  uint users;228,6741
  unsigned long long avg_rows;229,6755
  unsigned long long max_rows;231,6825
  unsigned long long min_rows;232,6856
static option_string *engine_options=engine_options235,6891
static statement *pre_statements=pre_statements236,6935
static statement *post_statements=post_statements237,6976
static statement *create_statements=create_statements238,7018
static const char ALPHANUMERICS[ALPHANUMERICS268,8449
#define ALPHANUMERICS_SIZE 271,8551
static long int timedif(274,8606
static int gettimeofday(286,8823
int main(297,9003
void concurrency_loop(431,12481
static struct my_option my_long_options[my_long_options520,14974
static void print_version(703,23994
static void usage(710,24164
get_one_option(722,24462
get_random_string(782,25856
build_table_string(800,26266
build_update_string(927,29918
build_insert_string(1000,32101
build_select_string(1091,34582
get_options(1152,36415
static int run_query(1499,46622
generate_primary_key_list(1514,46883
drop_primary_key_list(1574,48812
create_schema(1590,49070
drop_schema(1685,51391
run_statements(1705,51795
run_scheduler(1730,52353
pthread_handler_t run_task(1798,53961
parse_option(1965,58303
parse_delimiter(2044,60405
parse_comma(2081,61424
print_conclusions(2108,61989
print_conclusions_csv(2125,62739
generate_stats(2143,63508
option_cleanup(2176,64295
statement_cleanup(2192,64529
slap_connect(2208,64733

client/mysql_upgrade.c,1957
#define VER 24,931
#  define WEXITSTATUS(32,1039
#  define WEXITSTATUS(34,1089
static char mysql_path[mysql_path38,1165
static char mysqlcheck_path[mysqlcheck_path39,1200
static my_bool opt_force,41,1241
static my_bool opt_force, opt_verbose,41,1241
static my_bool opt_force, opt_verbose, debug_info_flag,41,1241
static my_bool opt_force, opt_verbose, debug_info_flag, debug_check_flag,41,1241
               opt_systables_only;42,1315
static uint my_end_arg=43,1350
static char *opt_user=opt_user44,1377
static DYNAMIC_STRING ds_args;46,1416
static DYNAMIC_STRING conn_args;47,1447
static char *opt_password=opt_password49,1481
static char *opt_plugin_dir=opt_plugin_dir50,1511
static my_bool tty_password=52,1566
static char opt_tmpdir[opt_tmpdir54,1599
static char *default_dbug_option=default_dbug_option57,1657
static char **defaults_argv;defaults_argv60,1741
static my_bool not_used;62,1771
static my_bool opt_write_binlog;64,1846
static struct my_option my_long_options[my_long_options66,1880
static void free_used_memory(154,5938
static void die(164,6113
static void verbose(186,6459
static void add_one_option(211,6917
get_one_option(238,7539
static int run_command(322,9888
static int run_tool(352,10485
static void find_tool(399,11697
static int run_query(474,13783
static int extract_variable_from_show(538,15588
static int get_upgrade_info_file_name(558,16097
static int upgrade_already_done(598,17108
static void create_mysql_upgrade_info_file(639,18104
static void print_conn_args(677,19081
static int run_mysqlcheck_upgrade(692,19446
static int run_mysqlcheck_fixnames(707,19916
static const char *expected_errors[expected_errors722,20390
static my_bool is_expected_error(731,20561
static char* get_line(749,20940
static void print_line(760,21104
static int run_sql_fix_privilege_tables(777,21417
static const char *load_default_groups[load_default_groups819,22485
int main(827,22659

cmake/stack_direction.c,31
int f(19,770
int main(29,932

dbug/dbug_analyze.c,1556
static char *my_name;my_name56,2105
static int verbose;57,2127
#define PRO_FILE	63,2183
#define STACKSIZ	64,2245
#define MAXPROCS	65,2298
#	define EX_SOFTWARE 70,2404
#	define EX_DATAERR 71,2427
#	define EX_USAGE 72,2449
#	define EX_OSERR 73,2469
#	define EX_IOERR 74,2489
#	define EX_OK 76,2523
#define __MERF_OO_ 80,2556
#define MALLOC(82,2608
#define Malloc(87,2817
#define FILEOPEN(92,3001
#define Fileopen(97,3181
struct stack_t 103,3341
    unsigned int pos;104,3358
    unsigned long time;105,3404
    unsigned long children;106,3463
static struct stack_t fn_stack[fn_stack109,3529
static unsigned int stacktop 111,3574
static unsigned long tot_time 113,3648
static unsigned long tot_calls 114,3683
static unsigned long highstack 115,3719
static unsigned long lowstack 116,3755
#define top(123,3898
void push 129,3987
unsigned int pop 155,4651
struct module_t 183,5293
    char *name;name184,5311
    unsigned long m_time;185,5327
    unsigned long m_calls;186,5353
    unsigned long m_stkuse;187,5380
static struct module_t modules[modules190,5412
struct bnode 197,5568
    unsigned int lchild;198,5583
    unsigned int rchild;199,5636
    unsigned int pos;200,5690
static struct bnode s_table[s_table203,5750
static unsigned int n_items 205,5790
char *strsave strsave211,5943
unsigned int add 233,6465
void process 302,8271
void out_header 424,11813
void out_trailer 449,12656
void out_item 468,13165
void out_body 515,14501
void output 544,15334
#define usage(562,15713
int main 567,15830

dbug/dbug.c,5225
#undef SAFE_MUTEX87,4070
#define fnmatch(95,4202
#define PRINTBUF 109,4388
#define INDENT 110,4450
#define MAXDEPTH 111,4522
#define DEBUG_ON 122,4874
#define FILE_ON 123,4929
#define LINE_ON 124,4994
#define DEPTH_ON 125,5061
#define PROCESS_ON 126,5136
#define NUMBER_ON 127,5204
#define PROFILE_ON 128,5272
#define PID_ON 129,5338
#define TIMESTAMP_ON 130,5414
#define FLUSH_ON_WRITE 131,5486
#define OPEN_APPEND 132,5548
#define TRACE_ON 133,5610
#define TRACING 135,5697
#define DEBUGGING 136,5743
#define PROFILING 137,5791
#define BOOLEAN 143,5896
#define IMPORT 149,5990
#define EXPORT 150,6053
#define AUTO 151,6126
#define REGISTER 152,6195
#define PROF_FILE 167,6795
#define PROF_EFMT 168,6833
#define PROF_SFMT 169,6872
#define PROF_XFMT 170,6916
#define AUTOS_REVERSE 173,7019
#define AUTOS_REVERSE 175,7049
struct link 192,7402
    struct link *next_link;next_link193,7416
    char   flags;194,7477
    char   str[str195,7495
#define SUBDIR 199,7617
#define INCLUDE 200,7664
#define EXCLUDE 201,7690
#define MATCHED 203,7788
#define NOT_MATCHED 204,7814
struct settings 216,8236
  uint flags;217,8254
  uint maxdepth;218,8329
  uint delay;219,8404
  uint sub_level;220,8479
  FILE *out_file;out_file221,8554
  FILE *prof_file;prof_file222,8629
  char name[name223,8704
  struct link *functions;functions224,8779
  struct link *p_functions;p_functions225,8854
  struct link *keywords;keywords226,8929
  struct link *processes;processes227,9004
  struct settings *next;next228,9079
#define is_shared(231,9158
static BOOLEAN init_done=238,9272
static struct settings init_settings;239,9348
static const char *db_process=db_process240,9386
my_bool _dbug_on_=241,9458
typedef struct _db_code_state_ 243,9520
  const char *process;process244,9553
  const char *func;func245,9632
  const char *file;file246,9711
  struct _db_stack_frame_ *framep;framep247,9790
  struct settings *stack;stack248,9869
  const char *jmpfunc;jmpfunc249,9948
  const char *jmpfile;jmpfile250,10027
  int lineno;251,10106
  uint level;252,10185
  int jmplevel;253,10264
  uint u_line;265,10696
  int  locked;266,10763
  const char *u_keyword;u_keyword267,10831
} CODE_STATE;268,10895
#define get_code_state_if_not_set_or_return 274,11006
#define get_code_state_or_return 275,11090
#define ListAdd(278,11186
#define ListDel(279,11235
#define DO_TRACE 299,12082
#define DONT_TRACE 300,12108
#define ENABLE_TRACE 301,12134
#define DISABLE_TRACE 302,12160
#define ERR_MISSING_RETURN 326,12899
#define ERR_OPEN 327,12995
#define ERR_CLOSE 328,13058
#define ERR_ABORT 329,13107
#undef EXISTS335,13251
#define EXISTS(337,13291
#define Writable(338,13357
#define EXISTS(340,13393
#define WRITABLE(341,13456
static pthread_mutex_t THR_LOCK_dbug;350,13600
static CODE_STATE *code_state(code_state352,13639
#define Delay(393,14587
#define Delay(395,14631
void _db_process_(410,14826
int DbugParse(451,15859
#define framep_trace_flag(670,21611
void FixTraceFlags_helper(675,21908
#define fflags(699,22585
void FixTraceFlags(701,22671
void _db_set_(792,25243
void _db_push_(822,25879
int _db_is_pushed_(838,26157
void _db_set_init_(860,26484
void _db_pop_(886,27231
#define char_to_buf(916,27733
#define str_to_buf(920,27901
#define list_to_buf(925,28119
#define int_to_buf(938,28737
#define colon_to_buf 943,28955
#define op_int_to_buf(946,29072
#define op_intf_to_buf(954,29440
#define op_str_to_buf(962,29808
#define op_list_to_buf(971,30226
#define op_bool_to_buf(988,31044
int _db_explain_ 996,31363
#undef char_to_buf1032,32564
#undef str_to_buf1033,32583
#undef list_to_buf1034,32601
#undef int_to_buf1035,32620
#undef colon_to_buf1036,32638
#undef op_int_to_buf1037,32658
#undef op_intf_to_buf1038,32679
#undef op_str_to_buf1039,32701
#undef op_list_to_buf1040,32722
#undef op_bool_to_buf1041,32744
int _db_explain_init_(1052,32901
void _db_enter_(1094,34338
void _db_return_(1160,36076
void _db_pargs_(1219,37528
void _db_doprnt_(1254,38379
static void DbugVfprintf(1285,39132
void _db_dump_(1311,39803
static struct link *ListAddDel(ListAddDel1378,41725
static struct link *ListCopy(ListCopy1453,43420
static int InList(1495,44626
static uint ListFlags(1518,45069
static void PushState(1546,45702
static void FreeState(1573,46273
void _db_end_(1616,47196
static int DoTrace(1667,48433
FILE *_db_fp_(_db_fp_1685,49084
BOOLEAN _db_keyword_(1712,49864
static void Indent(1742,50585
static void FreeList(1774,51204
static void DoPrefix(1806,51824
static void DBUGOpenFile(1872,53890
static void DBUGCloseFile(1936,55120
static void DbugExit(1967,55822
static char *DbugMalloc(DbugMalloc1997,56559
static const char *DbugStrTok(DbugStrTok2011,56808
static const char *BaseName(BaseName2038,57328
static BOOLEAN Writable(2075,58214
EXPORT void _db_setjmp_(2122,58999
EXPORT void _db_longjmp_(2149,59497
static void perror(2188,60420
static void DbugFlush(2202,60805
void _db_flush_(2217,61100
void _db_suicide_(2226,61230
void _db_lock_file_(2244,61637
void _db_unlock_file_(2252,61764
const char* _db_get_func_(2260,61895
int i_am_a_dummy_function(2278,62234

dbug/example1.c,10
main 1,0

dbug/example2.c,26
int debug 1,0
main 3,16

dbug/example3.c,10
main 1,0

dbug/factorial.c,42
int factorial(3,46
int factorial 14,182

dbug/main.c,15
int main 3,19

dbug/my_main.c,39
#undef DBUG_OFF7,172
int main 13,271

dbug/tests.c,110
char *push1=push15,61
const char *func3(func311,173
void func2(17,271
int func1(26,397
int main 38,548

extra/charset2html.c,270
typedef struct char_info_st 29,906
  int cod;31,937
  int srt;32,948
  int uni;33,959
  int low;34,970
  int upp;35,981
  int ctp;36,992
} MY_CH;37,1003
static int chcmp(39,1013
static void print_cs(47,1168
static void print_index(118,2925
int main(144,3763

extra/comp_err.c,2379
#define MAX_ROWS 35,1047
#define HEADER_LENGTH 36,1070
#define DEFAULT_CHARSET_DIR 37,1147
#define ER_PREFIX 38,1199
#define WARN_PREFIX 39,1223
static char *OUTFILE=OUTFILE40,1251
static char *HEADERFILE=HEADERFILE41,1295
static char *NAMEFILE=NAMEFILE42,1346
static char *STATEFILE=STATEFILE43,1396
static char *TXTFILE=TXTFILE44,1443
static char *DATADIRECTORY=DATADIRECTORY45,1505
static char *default_dbug_option=default_dbug_option47,1575
uchar file_head[file_head51,1688
uint file_pos[file_pos53,1805
const char *empty_string=empty_string55,1831
const char *default_language=default_language61,1986
int er_offset=62,2023
my_bool info_flag=63,2044
struct message67,2126
  char *lang_short_name;lang_short_name69,2143
  char *text;text70,2168
struct languages76,2261
  char *lang_long_name;lang_long_name78,2280
  char *lang_short_name;lang_short_name79,2339
  char *charset;charset80,2398
  struct languages *next_lang;next_lang81,2443
struct errors87,2578
  const char *er_name;er_name89,2594
  int d_code;90,2655
  const char *sql_code1;sql_code191,2719
  const char *sql_code2;sql_code292,2761
  struct errors *next_error;next_error93,2804
  DYNAMIC_ARRAY msg;94,2872
static struct my_option my_long_options[my_long_options98,2957
int main(160,5806
static void print_escaped_string(202,6874
static int create_header_files(222,7297
static int create_sys_files(286,9285
static void clean_up(385,11950
static int parse_input_file(425,13028
static uint parse_error_offset(531,16052
static char *parse_default_language(parse_default_language570,17125
static struct message *find_message(find_message617,18297
static ha_checksum checksum_format_specifier(666,19504
static int check_message_format(728,20788
static char *skip_delimiters(skip_delimiters756,21524
static char *find_end_of_word(find_end_of_word771,21818
static char *get_word(get_word784,22109
static struct message *parse_message_string(parse_message_string800,22434
static struct errors *parse_error_string(parse_error_string858,23855
static struct languages *parse_charset_string(parse_charset_string932,25785
static void print_version(992,27359
get_one_option(1001,27533
static void usage(1022,27928
static int get_options(1036,28298
static char *parse_text_line(parse_text_line1052,28648
static int copy_rows(1099,29571

extra/innochecksum.c,546
#define UT_HASH_RANDOM_MASK 37,1214
#define UT_HASH_RANDOM_MASK2 38,1257
#define FIL_PAGE_LSN 39,1300
#define FIL_PAGE_FILE_FLUSH_LSN 40,1334
#define FIL_PAGE_OFFSET 41,1369
#define FIL_PAGE_DATA 42,1399
#define FIL_PAGE_END_LSN_OLD_CHKSUM 43,1430
#define FIL_PAGE_SPACE_OR_CHKSUM 44,1468
#define UNIV_PAGE_SIZE 45,1503
typedef unsigned long int ulint;50,1692
ulint mach_read_from_4(53,1836
ut_fold_ulint_pair(63,2018
ut_fold_binary(74,2282
buf_calc_page_new_checksum(94,2609
buf_calc_page_old_checksum(119,3514
int main(134,3796

extra/my_print_defaults.c,296
const char *config_file=config_file32,970
uint verbose=33,1028
const char *default_dbug_option=default_dbug_option34,1072
static struct my_option my_long_options[my_long_options36,1143
static void usage(94,3825
get_one_option(111,4488
static int get_options(138,4970
int main(154,5204

extra/mysql_waitpid.c,232
static const char *VER=VER25,906
static char *progname;progname26,937
static my_bool verbose;27,960
static struct my_option my_long_options[my_long_options31,1004
get_one_option(46,1575
int main(61,1868
void usage(91,2413

extra/perror.c,1073
#define PERROR_VERSION 19,820
static my_bool verbose,33,1245
static my_bool verbose, print_all_codes;33,1245
static my_bool ndb_code;40,1436
static char ndb_string[ndb_string41,1461
int mgmapi_error_string(42,1491
static struct my_option my_long_options[my_long_options58,1804
typedef struct ha_errors 84,2852
  int errcode;85,2879
  const char *msg;msg86,2894
} HA_ERRORS;87,2913
static HA_ERRORS ha_errlist[ha_errlist90,2928
static void print_version(108,3626
static void usage(115,3757
get_one_option(128,4266
static int get_options(149,4590
static const char *get_ha_error_msg(get_ha_error_msg165,4858
  const char *name;name188,5582
  uint        code;189,5602
  const char *text;text190,5622
} st_error;191,5642
static st_error global_error_names[global_error_names193,5655
int get_ER_error_msg(206,5977
static my_bool print_win_error_msg(227,6343
static const char **get_handler_error_messages(get_handler_error_messages254,6962
void my_handler_error_register(259,7049
void my_handler_error_unregister(274,7604
int main(280,7763

extra/replace.c,3047
#define PC_MALLOC	51,1923
#define PS_MALLOC	52,1971
typedef struct st_pointer_array 54,2016
  TYPELIB typelib;55,2082
  uchar *str;str56,2129
  uint8	*flag;flag57,2169
  uint  array_allocs,58,2215
  uint  array_allocs,max_count,58,2215
  uint  array_allocs,max_count,length,58,2215
  uint  array_allocs,max_count,length,max_length;58,2215
} POINTER_ARRAY;59,2265
#define SPACE_CHAR	61,2283
#define START_OF_LINE	62,2306
#define END_OF_LINE	63,2332
#define LAST_CHAR_CODE	64,2356
typedef struct st_replace 66,2384
  my_bool   found;67,2412
  struct st_replace *next[next68,2431
} REPLACE;69,2463
typedef struct st_replace_found 71,2475
  my_bool found;72,2509
  char *replace_string;replace_string73,2526
  uint to_offset;74,2550
  int from_offset;75,2568
} REPLACE_STRING;76,2587
#define WORD_BIT 79,2623
static int silent=100,3429
int main(104,3496
static int static_get_options(150,4551
static int get_replace_strings(219,6749
static int insert_pointer_name(250,7467
static void free_pointer_array(324,9953
#define SET_MALLOC_HUNC 339,10229
typedef struct st_rep_set 341,10257
  uint  *bits;bits342,10285
  short	next[next343,10330
  uint	found_len;344,10388
  int	found_offset;345,10433
  uint  table_offset;346,10453
  uint  size_of_bits;347,10475
} REP_SET;348,10521
typedef struct st_rep_sets 350,10533
  uint		count;351,10562
  uint		extra;352,10600
  uint		invisible;353,10644
  uint		size_of_bits;354,10685
  REP_SET	*set,set355,10707
  REP_SET	*set,*set_buffer;set_buffer355,10707
  uint		*bit_buffer;bit_buffer356,10735
} REP_SETS;357,10756
typedef struct st_found_set 359,10769
  uint table_offset;360,10799
  int found_offset;361,10820
} FOUND_SET;362,10840
typedef struct st_follow 364,10854
  int chr;365,10881
  uint table_offset;366,10892
  uint len;367,10913
} FOLLOWS;368,10925
static uint found_sets=389,11749
static REPLACE *init_replace(init_replace394,11828
static int init_sets(676,19547
static void make_sets_invisible(694,20018
static REP_SET *make_new_set(make_new_set701,20145
static void free_last_set(738,21187
static void free_sets(745,21278
static void internal_set_bit(752,21389
static void internal_clear_bit(758,21511
static void or_bits(765,21640
static void copy_bits(773,21790
static int cmp_bits(779,21939
static int get_next_bit(788,22121
static short find_set(813,22686
static short find_found(836,23285
static uint start_at_word(852,23783
static uint end_of_word(857,23905
static uint replace_len(866,24085
static uint replace_strings(882,24271
static char *buffer;buffer928,25415
static int bufbytes;929,25479
static int bufread,930,25538
static int bufread,my_eof;930,25538
static uint bufalloc;931,25613
static char *out_buff;out_buff932,25635
static uint out_length;933,25658
static int initialize_buffer(935,25683
static void reset_buffer(948,25963
static void free_buffer(953,26016
static int fill_buffer_retaining(966,26261
static int convert_pipe(1011,27195
static int convert_file(1053,28209

extra/resolveip.c,265
#define RESOLVE_VERSION 18,800
static my_bool silent;40,1223
static struct my_option my_long_options[my_long_options42,1247
static void print_version(56,1759
static void usage(63,1891
get_one_option(75,2335
static int get_options(90,2661
int main(107,2914

extra/resolve_stack_dump.c,992
#define INIT_SYM_TABLE 28,1040
#define INC_SYM_TABLE 29,1069
#define MAX_SYM_SIZE 30,1097
#define DUMP_VERSION 31,1124
#define HEX_INVALID 32,1151
typedef ulong my_long_addr_t 34,1184
typedef struct sym_entry38,1296
  char symbol[symbol40,1323
  uchar* addr;41,1352
} SYM_ENTRY;42,1367
static char* dump_fname 45,1382
static DYNAMIC_ARRAY sym_table;46,1427
static FILE* fp_dump,47,1505
static FILE* fp_dump, *fp_sym fp_sym47,1505
static struct my_option my_long_options[my_long_options49,1551
static void print_version(67,2170
static void usage(74,2332
static void die(91,2954
get_one_option(104,3175
static int parse_args(119,3426
static void open_files(157,4073
static uchar hex_val(174,4570
static my_long_addr_t read_addr(185,4812
static int init_sym_entry(198,5021
static void init_sym_table(221,5577
static void clean_up(240,6066
static void verify_sort(245,6124
static SYM_ENTRY* resolve_addr(262,6485
static void do_resolve(283,6853
int main(314,7436

libmysql/conf_to_src.c,386
#define CHARSETS_SUBDIR 27,940
#define CTYPE_TABLE_SIZE 28,985
#define TO_LOWER_TABLE_SIZE 29,1019
#define TO_UPPER_TABLE_SIZE 30,1053
#define SORT_ORDER_TABLE_SIZE 31,1087
#define ROW_LEN 32,1121
char *prog;prog36,1176
char buf[buf37,1188
char buf[1024], *p,p37,1188
char buf[1024], *p, *endptr;endptr37,1188
main(40,1222
print_array(69,1785
print_arrays_for(117,2686

libmysqld/libmysqld.c,216
#define INADDR_NONE	51,1442
#define ERRNO 58,1560
#define perror(59,1592
#define ERRNO 62,1635
#define SOCKET_ERROR 63,1655
#define closesocket(64,1679
static my_bool is_NT(73,1817
mysql_real_connect(84,1995

libmysql/errmsg.c,156
const char *client_errors[client_errors26,1004
const char** get_client_errmsgs(91,4235
void init_client_errs(106,4417
void finish_client_errs(122,4629

libmysql/get_password.c,259
#undef HAVE_GETPASS30,1091
#define TERMIO	42,1339
#define TERMIO	46,1442
#define TERMIO	49,1496
#define getpass(62,1776
char *get_tty_password(get_tty_password67,1911
static void get_password(110,2794
char *get_tty_password(get_tty_password151,3504

libmysql/libmysql.c,7970
#define INADDR_NONE	58,1618
#undef net_buffer_length64,1703
#undef max_allowed_packet65,1728
ulong 		net_buffer_length=67,1755
ulong		max_allowed_packet=68,1787
#undef net_flush72,1859
#define perror(78,1997
#define SOCKET_ERROR 81,2040
#define MAX_LONG_DATA_LENGTH 88,2165
#define unsigned_field(89,2199
static my_bool mysql_client_init=94,2360
static my_bool org_my_init_done=95,2397
typedef struct st_mysql_stmt_extension97,2434
  MEM_ROOT fields_mem_root;99,2475
} MYSQL_STMT_EXT;100,2503
int STDCALL mysql_server_init(121,2985
void STDCALL mysql_server_end(198,5066
static MYSQL_PARAMETERS mysql_internal_parameters=225,5485
MYSQL_PARAMETERS *STDCALL mysql_get_parameters(228,5583
my_bool STDCALL mysql_thread_init(233,5678
void STDCALL mysql_thread_end(238,5746
append_wild(249,5856
mysql_debug(274,6463
my_pipe_sig_handler(309,7360
mysql_connect(325,7812
my_bool	STDCALL mysql_change_user(348,8382
void read_user_name(410,9844
void read_user_name(440,10486
my_bool handle_local_infile(448,10648
typedef struct st_default_local_infile534,13261
  int fd;536,13302
  int error_num;537,13312
  const char *filename;filename538,13329
  char error_msg[error_msg539,13353
} default_local_infile_data;540,13395
static int default_local_infile_init(561,13786
static int default_local_infile_read(602,14799
static void default_local_infile_end(629,15410
default_local_infile_error(656,15956
mysql_set_local_infile_handler(671,16383
void mysql_set_local_infile_default(687,17099
mysql_query(702,17700
mysql_fetch_field(713,18029
mysql_data_seek(726,18395
mysql_row_seek(744,19060
mysql_field_seek(754,19279
mysql_list_dbs(767,19672
mysql_list_tables(785,20216
MYSQL_FIELD *cli_list_fields(cli_list_fields797,20486
mysql_list_fields(818,21160
mysql_list_processes(849,22092
mysql_create_db(876,22859
mysql_drop_db(885,23070
mysql_shutdown(895,23281
mysql_refresh(905,23526
mysql_kill(915,23724
mysql_set_server_option(925,23920
mysql_dump_debug_info(935,24180
const char *cli_read_statistics(cli_read_statistics942,24315
mysql_stat(955,24637
mysql_ping(965,24856
mysql_get_server_info(977,25108
mysql_get_host_info(984,25212
mysql_get_proto_info(991,25293
mysql_get_client_info(997,25390
ulong STDCALL mysql_get_client_version(1002,25462
my_bool STDCALL mysql_eof(1007,25539
MYSQL_FIELD * STDCALL mysql_fetch_field_direct(1012,25605
MYSQL_FIELD * STDCALL mysql_fetch_fields(1017,25720
MYSQL_ROW_OFFSET STDCALL mysql_row_tell(1022,25806
MYSQL_FIELD_OFFSET STDCALL mysql_field_tell(1027,25894
unsigned int STDCALL mysql_field_count(1034,26003
my_ulonglong STDCALL mysql_affected_rows(1039,26090
my_ulonglong STDCALL mysql_insert_id(1044,26181
const char *STDCALL mysql_sqlstate(1049,26264
uint STDCALL mysql_warning_count(1054,26380
const char *STDCALL mysql_info(1059,26463
ulong STDCALL mysql_thread_id(1064,26535
const char * STDCALL mysql_character_set_name(1069,26613
void STDCALL mysql_get_character_set_info(1074,26711
uint STDCALL mysql_thread_safe(1090,27234
my_bool STDCALL mysql_embedded(1096,27289
void my_net_local_init(1113,27660
mysql_hex_string(1143,28896
mysql_escape_string(1164,29409
mysql_real_escape_string(1170,29572
myodbc_remove_escape(1179,29897
#define DEFAULT_PREFETCH_ROWS 1224,31093
#define RESET_SERVER_SIDE 1249,32143
#define RESET_LONG_DATA 1250,32171
#define RESET_STORE_RESULT 1251,32197
#define RESET_CLEAR_ERROR 1252,32226
#define MAX_DATE_REP_LENGTH 1262,32485
#define MAX_TIME_REP_LENGTH 1268,32628
#define MAX_DATETIME_REP_LENGTH 1274,32770
#define MAX_DOUBLE_STRING_REP_LENGTH 1276,32806
#define IS_TRUNCATED(1280,32890
#define BIND_RESULT_DONE 1284,33097
#define REPORT_DATA_TRUNCATION 1290,33274
static my_bool my_realloc_str(1309,33839
static void stmt_clear_error(1328,34294
void set_stmt_error(1343,34581
void set_stmt_errmsg(1368,35167
my_bool cli_read_prepare_result(1399,35875
mysql_stmt_init(1483,38633
mysql_stmt_prepare(1553,40959
static void alloc_stmt_fields(1644,43749
static void update_stmt_fields(1718,46261
mysql_stmt_result_metadata(1786,48610
mysql_stmt_param_metadata(1833,49821
static void store_param_type(1850,50133
static void store_param_tinyint(1874,50822
static void store_param_short(1879,50937
static void store_param_int32(1886,51097
static void store_param_int64(1893,51257
static void store_param_float(1900,51424
static void store_param_double(1907,51588
static void store_param_time(1914,51755
static void net_store_datetime(1938,52356
static void store_param_date(1965,52991
static void store_param_datetime(1972,53188
static void store_param_str(1978,53334
static void store_param_null(2002,53950
static my_bool store_param(2015,54254
static my_bool execute(2048,55176
int cli_stmt_execute(2084,56346
static int stmt_read_row_buffered(2174,58981
static int stmt_read_row_unbuffered(2205,59890
stmt_read_row_from_cursor(2264,61345
stmt_read_row_no_data(2314,62848
stmt_read_row_no_result_set(2321,63021
my_bool STDCALL mysql_stmt_attr_set(2344,63495
my_bool STDCALL mysql_stmt_attr_get(2379,64422
static void reinit_result_set_metadata(2411,65224
static void prepare_to_fetch_result(2447,66376
int STDCALL mysql_stmt_execute(2518,68973
ulong STDCALL mysql_stmt_param_count(2551,69732
my_ulonglong STDCALL mysql_stmt_affected_rows(2561,69927
unsigned int STDCALL mysql_stmt_field_count(2572,70124
my_ulonglong STDCALL mysql_stmt_insert_id(2593,70781
static my_bool int_is_null_true=2599,70873
static my_bool int_is_null_false=2600,70941
my_bool STDCALL mysql_stmt_bind_param(2772,79732
mysql_stmt_send_long_data(2932,85026
static void read_binary_time(3016,87646
static void read_binary_datetime(3046,88334
static void read_binary_date(3076,88968
static void fetch_string_with_conversion(3109,89592
static void fetch_long_with_conversion(3235,93214
static void fetch_float_with_conversion(3344,96397
static void fetch_datetime_with_conversion(3462,99775
static void fetch_result_with_conversion(3536,101912
static void fetch_result_tinyint(3652,104826
static void fetch_result_short(3662,105157
static void fetch_result_int32(3672,105507
static void fetch_result_int64(3683,105911
static void fetch_result_float(3694,106328
static void fetch_result_double(3704,106590
static void fetch_result_time(3714,106857
static void fetch_result_date(3722,107104
static void fetch_result_datetime(3730,107351
static void fetch_result_bin(3738,107614
static void fetch_result_str(3750,108011
static void skip_result_fixed(3771,108675
static void skip_result_with_length(3780,108837
static void skip_result_string(3790,109054
static my_bool is_binary_compatible(3816,109647
static my_bool setup_one_fetch_function(3875,111815
my_bool STDCALL mysql_stmt_bind_result(4027,116298
static int stmt_fetch_row(4098,118331
int cli_unbuffered_fetch(4159,119995
int STDCALL mysql_stmt_fetch(4174,120269
int STDCALL mysql_stmt_fetch_column(4212,121241
int cli_read_binary_rows(4258,122435
static void stmt_update_metadata(4325,124002
int STDCALL mysql_stmt_store_result(4360,124827
mysql_stmt_row_seek(4477,128126
mysql_stmt_row_tell(4492,128408
mysql_stmt_data_seek(4505,128600
my_ulonglong STDCALL mysql_stmt_num_rows(4528,129105
static my_bool reset_stmt_handle(4542,129402
my_bool STDCALL mysql_stmt_free_result(4609,131565
my_bool STDCALL mysql_stmt_close(4634,132229
my_bool STDCALL mysql_stmt_reset(4687,133702
uint STDCALL mysql_stmt_errno(4707,134270
const char *STDCALL mysql_stmt_sqlstate(4713,134391
const char *STDCALL mysql_stmt_error(4723,134563
my_bool STDCALL mysql_commit(4738,134894
my_bool STDCALL mysql_rollback(4748,135078
my_bool STDCALL mysql_autocommit(4759,135275
my_bool STDCALL mysql_more_results(4779,135911
int STDCALL mysql_next_result(4793,136212
int STDCALL mysql_stmt_next_result(4813,136675
MYSQL_RES * STDCALL mysql_use_result(4856,137498
my_bool STDCALL mysql_read_query_result(4861,137601

libservices/my_snprintf_service.c,44
SERVICE_VERSION my_snprintf_service=18,776

libservices/my_thread_scheduler_service.c,52
SERVICE_VERSION my_thread_scheduler_service=19,761

libservices/thd_alloc_service.c,61
SERVICE_VERSION *thd_alloc_service=thd_alloc_service18,776

libservices/thd_wait_service.c,59
SERVICE_VERSION *thd_wait_service=thd_wait_service19,761

mysys/array.c,410
my_bool init_dynamic_array2(43,1430
my_bool init_dynamic_array(75,2365
my_bool insert_dynamic(95,2842
uchar *alloc_dynamic(alloc_dynamic130,3597
uchar *pop_dynamic(pop_dynamic174,4870
my_bool set_dynamic(199,5442
my_bool allocate_dynamic(231,6196
void get_dynamic(276,7461
void delete_dynamic(298,7952
void delete_dynamic_element(323,8400
void freeze_size(341,8738
int get_index_dynamic(371,9345

mysys/base64.c,253
static char base64_table[base64_table24,903
base64_needed_encoded_length(30,1070
base64_needed_decoded_length(43,1388
base64_encode(57,1649
pos(105,2390
#define SKIP_SPACE(111,2475
base64_decode(156,4196
#define require(233,5504
main(242,5635

mysys/charset.c,1678
my_bool my_charset_same(34,1155
get_collation_number_internal(41,1296
static my_bool init_state_maps(56,1614
static void simple_cs_init_functions(121,3842
static int cs_copy_data(133,4083
static my_bool simple_cs_is_full(196,5593
copy_uca_collation(206,5840
static int add_collation(220,6241
#define MY_MAX_ALLOWED_BUF 351,10768
#define MY_CHARSET_INDEX 352,10805
const char *charsets_dir=charsets_dir354,10843
static my_bool my_read_charset_file(357,10877
char *get_charsets_dir(get_charsets_dir395,11728
CHARSET_INFO *all_charsets[all_charsets417,12282
CHARSET_INFO *default_charset_info default_charset_info418,12339
void add_compiled_collation(420,12397
static void *cs_alloc(cs_alloc427,12569
static my_pthread_once_t charsets_initialized=433,12653
static my_pthread_once_t charsets_template=434,12722
static void init_available_charsets(436,12789
void free_charsets(462,13322
get_collation_name_alias(469,13415
uint get_collation_number(480,13623
get_charset_number_internal(494,13973
get_charset_name_alias(511,14374
uint get_charset_number(519,14514
const char *get_charset_name(get_charset_name531,14897
static CHARSET_INFO *get_internal_charset(get_internal_charset547,15273
CHARSET_INFO *get_charset(get_charset591,16346
CHARSET_INFO *get_charset_by_name(get_charset_by_name615,17016
CHARSET_INFO *get_charset_by_csname(get_charset_by_csname635,17544
my_bool resolve_charset(676,18825
my_bool resolve_collation(708,19696
size_t escape_string_for_mysql(749,20774
static CHARSET_INFO *fs_cset_cache=fs_cset_cache840,23028
CHARSET_INFO *fs_character_set(fs_character_set842,23071
size_t escape_quotes_for_mysql(889,24488

mysys/charset-def.c,41
my_bool init_compiled_charsets(144,6426

mysys/checksum.c,33
ha_checksum my_checksum(31,1004

mysys/default.c,1872
static const char *args_separator=args_separator70,2882
inline static void set_args_separator(71,2943
my_bool my_getopt_use_args_separator=76,3073
my_bool my_getopt_is_args_separator(77,3118
const char *my_defaults_file=my_defaults_file81,3209
const char *my_defaults_group_suffix=my_defaults_group_suffix82,3241
const char *my_defaults_extra_file=my_defaults_extra_file83,3281
static char my_defaults_file_buffer[my_defaults_file_buffer85,3320
static char my_defaults_extra_file_buffer[my_defaults_extra_file_buffer86,3368
static my_bool defaults_already_read=88,3423
#define MAX_DEFAULT_DIRS 92,3540
#define DEFAULT_DIRS_SIZE 93,3567
static const char **default_directories default_directories94,3643
static const char *f_extensions[f_extensions97,3707
#define NEWLINE 98,3765
static const char *f_extensions[f_extensions100,3794
#define NEWLINE 101,3844
struct handle_option_ctx114,4238
   MEM_ROOT *alloc;alloc116,4265
   DYNAMIC_ARRAY *args;args117,4285
   TYPELIB *group;group118,4309
fn_expand(172,5892
int my_search_option_files(222,7633
static int handle_default_option(370,12200
int get_defaults_options(408,13189
int load_defaults(464,14802
int my_load_defaults(508,16363
void free_defaults(649,20448
static int search_default_file(657,20588
static char *get_argument(get_argument694,21510
static int search_default_file_with_ext(751,23169
static char *remove_end_comment(remove_end_comment1005,30167
void my_print_default_files(1031,30671
void print_defaults(1080,31925
static int add_directory(1110,32784
typedef UINT (WINAPI *GET_SYSTEM_WINDOWS_DIRECTORY)GET_SYSTEM_WINDOWS_DIRECTORY1136,33517
static size_t my_get_system_windows_directory(1138,33584
static const char *my_get_module_parent(my_get_module_parent1164,34330
static const char **init_default_directories(init_default_directories1196,34942

mysys/errors.c,192
const char *globerrs[globerrs21,817
void init_glob_errs(58,2550
void init_glob_errs(65,2625
void wait_for_free_space(110,5229
const char **get_global_errmsgs(get_global_errmsgs128,5859

mysys/hash.c,1054
#define NO_RECORD	25,974
#define LOWFIND 26,1004
#define LOWUSED 27,1022
#define HIGHFIND 28,1040
#define HIGHUSED 29,1059
typedef struct st_hash_info 31,1079
  uint next;32,1109
  uchar *data;data33,1150
} HASH_LINK;34,1198
static my_hash_value_type calc_hash(42,1508
_my_hash_init(75,2690
static inline void my_hash_free_elements(107,3502
void my_hash_free(130,3947
void my_hash_reset(151,4338
my_hash_key(171,4812
static uint my_hash_mask(182,5100
static uint my_hash_rec_mask(189,5330
my_hash_value_type rec_hashnr(204,5729
uchar* my_hash_search(212,5913
uchar* my_hash_search_using_hash_value(218,6069
my_hash_value_type my_calc_hash(228,6458
uchar* my_hash_first(242,6769
uchar* my_hash_first_from_hash_value(256,7149
uchar* my_hash_next(296,8251
static void movelink(322,8813
static int hashcmp(353,9455
my_bool my_hash_insert(366,9862
my_bool my_hash_delete(504,13362
my_bool my_hash_update(592,15910
uchar *my_hash_element(my_hash_element692,18585
void my_hash_replace(705,18829
my_bool my_hash_check(715,19097

mysys/lf_alloc-pin.c,881
#define LF_PINBOX_MAX_PINS 106,4624
void lf_pinbox_init(114,4803
void lf_pinbox_destroy(127,5273
LF_PINS *_lf_pinbox_get_pins(_lf_pinbox_get_pins147,5708
void _lf_pinbox_put_pins(209,7780
static int ptr_cmp(250,8919
#define add_to_purgatory(255,9005
void _lf_pinbox_free(271,9713
struct st_harvester 278,9879
  void **granary;granary279,9901
  int npins;280,9919
static int harvest_pins(287,10034
static int match_pins(314,10713
#define available_stack_size(326,10974
#define available_stack_size(328,11055
#define next_node(331,11138
#define anext_node(332,11227
static void _lf_pinbox_real_free(337,11350
LF_REQUIRE_PINS(415,13399
  union { uchar * node;433,13974
  union { uchar * node; void *ptr;ptr433,13974
void lf_alloc_init(455,14762
void lf_alloc_destroy(476,15538
void *_lf_alloc_new(_lf_alloc_new496,15952
uint lf_alloc_pool_count(530,16697

mysys/lf_dynarray.c,458
void lf_dynarray_init(43,1679
static void recursive_free(50,1856
void lf_dynarray_destroy(66,2114
static const ulong dynarray_idxes_in_prev_levels[dynarray_idxes_in_prev_levels74,2297
static const ulong dynarray_idxes_in_prev_level[dynarray_idxes_in_prev_level85,2699
void *_lf_dynarray_lvalue(_lf_dynarray_lvalue98,3086
void *_lf_dynarray_value(_lf_dynarray_value151,4657
static int recursive_iterate(172,5216
int _lf_dynarray_iterate(199,6068

mysys/lf_hash.c,840
LF_REQUIRE_PINS(30,1015
  intptr volatile link;34,1081
  uint32 hashnr;35,1161
  const uchar *key;key36,1241
  size_t keylen;37,1261
} LF_SLIST;42,1401
  intptr volatile *prev;prev49,1558
  LF_SLIST *curr,curr50,1583
  LF_SLIST *curr, *next;next50,1583
} CURSOR;51,1608
#define PTR(57,1749
#define DELETED(58,1802
static int lfind(73,2127
static LF_SLIST *linsert(linsert151,4309
static int ldelete(202,5644
static LF_SLIST *lsearch(lsearch260,7169
static inline const uchar* hash_key(273,7558
static inline uint calc_hash(288,8003
#define MAX_LOAD 296,8249
void lf_hash_init(313,9069
void lf_hash_destroy(331,9716
int lf_hash_insert(365,10404
int lf_hash_delete(409,11707
void *lf_hash_search(lf_hash_search448,12887
static const uchar *dummy_key=dummy_key466,13487
static int initialize_bucket(473,13579

mysys/list.c,221
LIST *list_add(list_add27,884
LIST *list_delete(list_delete45,1290
void list_free(57,1507
LIST *list_cons(list_cons71,1694
LIST *list_reverse(list_reverse81,1902
uint list_length(96,2088
int list_walk(104,2205

mysys/md5.c,261
static uint32 getu32 57,2350
putu32 64,2512
my_MD5Init 77,2824
my_MD5Update 93,3107
my_MD5Final 141,4089
#define F1(187,5301
#define F2(188,5341
#define F3(189,5373
#define F4(190,5405
#define MD5STEP(193,5494
my_MD5Transform 202,5836
main 299,9487

mysys/mf_arr_appstr.c,44
my_bool array_append_string_unique(33,1203

mysys/mf_cache.c,151
static my_bool cache_remove_open_tmp(29,1088
my_bool open_cached_file(60,1899
my_bool real_open_cached_file(81,2542
void close_cached_file(98,2946

mysys/mf_dirname.c,136
size_t dirname_length(21,832
size_t dirname_part(63,1649
#define FN_DEVCHAR 101,2746
char *convert_dirname(convert_dirname104,2803

mysys/mf_fn_ext.c,29
char *fn_ext(fn_ext36,1178

mysys/mf_format.c,53
char * fn_format(26,1019
size_t strlength(121,3725

mysys/mf_getdate.c,23
void get_date(38,1309

mysys/mf_iocache2.c,332
my_b_copy_to_file(50,1457
my_off_t my_b_append_tell(70,2011
# define dbug_volatile 77,2220
# define dbug_volatile79,2258
my_off_t my_b_safe_tell(118,3457
void my_b_seek(130,3727
size_t my_b_fill(196,5423
size_t my_b_gets(242,6594
my_off_t my_b_filelength(280,7396
size_t my_b_printf(296,7753
size_t my_b_vprintf(307,7944

mysys/mf_iocache.c,973
#define lock_append_buffer(58,2616
#define unlock_append_buffer(60,2699
#define IO_ROUND_UP(63,2787
#define IO_ROUND_DN(64,2843
void setup_io_cache(79,3162
init_functions(96,3496
int init_io_cache(145,4849
static void my_aiowait(292,9556
my_bool reinit_io_cache(324,10288
int _my_b_read(449,14059
void init_io_cache_share(659,21956
void remove_io_thread(716,23773
static int lock_io_cache(795,26231
static void unlock_io_cache(938,31240
int _my_b_read_r(992,33157
static void copy_to_read_buffer(1119,37156
int _my_b_seq_read(1166,38481
int _my_b_async_read(1328,42993
int _my_b_get(1505,48687
int _my_b_write(1528,49180
int my_b_append(1602,51510
int my_b_safe_write(1646,52596
int my_block_write(1666,53284
#define LOCK_APPEND_BUFFER 1722,54908
#define UNLOCK_APPEND_BUFFER 1724,54994
int my_b_flush_io_cache(1727,55085
int end_io_cache(1829,57811
void die(1873,58870
int open_file(1883,59063
void close_file(1893,59368
int main(1899,59464

mysys/mf_keycache.c,5150
#define STRUCT_PTR(155,7263
#define  COND_FOR_REQUESTED 159,7438
#define  COND_FOR_SAVED 160,7468
#define  COND_FOR_READERS 161,7498
typedef mysql_cond_t KEYCACHE_CONDVAR;163,7529
struct st_keycache_page166,7628
  int file;168,7654
  my_off_t filepos;169,7721
struct st_hash_link173,7842
  struct st_hash_link *next,next175,7864
  struct st_hash_link *next, **prev;prev175,7864
  struct st_block_link *block;block176,7944
  File file;177,8024
  my_off_t diskpos;178,8104
  uint requests;179,8184
#define BLOCK_ERROR 183,8299
#define BLOCK_READ 184,8379
#define BLOCK_IN_SWITCH 185,8459
#define BLOCK_REASSIGNED 186,8539
#define BLOCK_IN_FLUSH 187,8619
#define BLOCK_CHANGED 188,8699
#define BLOCK_IN_USE 189,8779
#define BLOCK_IN_EVICTION 190,8859
#define BLOCK_IN_FLUSHWRITE 191,8939
#define BLOCK_FOR_UPDATE 192,9019
#define PAGE_READ 195,9146
#define PAGE_TO_BE_READ 196,9180
#define PAGE_WAIT_TO_BE_READ 197,9214
enum BLOCK_TEMPERATURE 200,9328
enum BLOCK_TEMPERATURE { BLOCK_COLD 200,9328
enum BLOCK_TEMPERATURE { BLOCK_COLD /*free*/ , BLOCK_WARM 200,9328
enum BLOCK_TEMPERATURE { BLOCK_COLD /*free*/ , BLOCK_WARM , BLOCK_HOT 200,9328
struct st_block_link203,9424
    *next_used,next_used206,9470
    *next_used, **prev_used;prev_used206,9470
    *next_changed,next_changed208,9573
    *next_changed, **prev_changed;prev_changed208,9573
  struct st_hash_link *hash_link;hash_link209,9653
  KEYCACHE_WQUEUE wqueue[wqueue210,9733
  uint requests;211,9813
  uchar *buffer;buffer212,9893
  uint offset;213,9974
  uint length;214,10054
  uint status;215,10134
  enum BLOCK_TEMPERATURE temperature;216,10214
  uint hits_left;217,10293
  ulonglong last_hit_time;218,10373
  KEYCACHE_CONDVAR *condvar;condvar219,10453
KEY_CACHE dflt_key_cache_var;222,10537
KEY_CACHE *dflt_key_cache=dflt_key_cache223,10567
#define FLUSH_CACHE 225,10616
#define KEYCACHE_HASH(239,11115
#define FILE_HASH(242,11355
#define DEFAULT_KEYCACHE_DEBUG_LOG 244,11432
#define KEYCACHE_DEBUG_LOG 247,11551
static FILE *keycache_debug_log=keycache_debug_log251,11646
#define KEYCACHE_DEBUG_OPEN 253,11739
#define KEYCACHE_DEBUG_CLOSE 260,12152
#define KEYCACHE_DEBUG_OPEN267,12570
#define KEYCACHE_DEBUG_CLOSE268,12598
#define KEYCACHE_DBUG_PRINT(272,12728
#define KEYCACHE_DBUG_ASSERT(276,12929
#define KEYCACHE_DBUG_PRINT(280,13122
#define KEYCACHE_DBUG_ASSERT(281,13174
static long keycache_thread_id;286,13344
#define KEYCACHE_THREAD_TRACE(287,13376
#define KEYCACHE_THREAD_TRACE_BEGIN(290,13528
#define KEYCACHE_THREAD_TRACE_END(295,13843
#define KEYCACHE_THREAD_TRACE_BEGIN(298,13999
#define KEYCACHE_THREAD_TRACE_END(299,14038
#define KEYCACHE_THREAD_TRACE(300,14075
#define BLOCK_NUMBER(303,14168
#define HASH_LINK_NUMBER(305,14323
#define keycache_pthread_cond_wait(312,14687
#define keycache_pthread_mutex_lock(320,14980
#define keycache_pthread_mutex_unlock(321,15039
#define keycache_pthread_cond_signal(322,15102
#undef inline327,15244
#define inline 329,15265
static inline uint next_power(335,15460
int init_key_cache(366,16323
int resize_key_cache(559,22842
static inline void inc_counter_for_resize_op(661,26157
static inline void dec_counter_for_resize_op(671,26391
void change_key_cache_param(695,26976
void end_key_cache(724,27647
static void link_into_queue(788,29550
static void unlink_from_queue(825,30367
static void wait_on_queue(875,31890
static void release_whole_queue(922,32986
static inline void unlink_changed(955,33704
static inline void link_changed(977,34231
static void link_to_file_list(1013,35175
static void link_to_changed_list(1054,36332
static void link_block(1109,38374
static void unlink_block(1227,42671
static void reg_requests(1285,44600
static void unreg_request(1328,46226
static void remove_reader(1395,48556
static void wait_for_readers(1414,49109
static inline void link_hash(1445,50198
static void unlink_hash(1459,50448
static HASH_LINK *get_hash_link(get_hash_link1512,52267
static BLOCK_LINK *find_key_block(find_key_block1629,56477
static void read_block(2382,87532
uchar *key_cache_read(key_cache_read2497,92161
int key_cache_insert(2731,100337
int key_cache_write(2978,109821
static void free_block(3318,122900
static int cmp_sec_link(3446,128237
static int flush_cached_blocks(3458,128524
static int flush_key_blocks_int(3586,133291
int flush_key_blocks(4035,149476
static int flush_all_key_blocks(4090,151122
int reset_key_cache_counters(4208,154850
static void test_key_cache(4232,155604
#define KEYCACHE_DUMP_FILE 4242,155867
#define MAX_QUEUE_LEN 4243,155915
static void keycache_dump(4246,155944
static int keycache_pthread_cond_wait(4341,158520
static int keycache_pthread_cond_wait(4390,159816
static int keycache_pthread_mutex_lock(4405,160194
static void keycache_pthread_mutex_unlock(4414,160350
static int keycache_pthread_cond_signal(4421,160482
static void keycache_debug_print(4433,160671
void keycache_debug_log_close(4449,160989
#define F_B_PRT(4459,161190
static int fail_block(4461,161255
static int fail_hlink(4476,161963
static int cache_empty(4486,162327

mysys/mf_keycaches.c,1028
typedef struct st_safe_hash_entry45,1644
  uchar *key;key47,1680
  uint length;48,1694
  uchar *data;data49,1709
  struct st_safe_hash_entry *next,next50,1724
  struct st_safe_hash_entry *next, **prev;prev50,1724
} SAFE_HASH_ENTRY;51,1767
typedef struct st_safe_hash_with_default54,1788
  rw_lock_t mutex;56,1831
  HASH hash;57,1850
  uchar *default_value;default_value58,1863
  SAFE_HASH_ENTRY *root;root59,1887
} SAFE_HASH;60,1912
static void safe_hash_entry_free(69,2015
static uchar *safe_hash_entry_get(safe_hash_entry_get79,2199
static my_bool safe_hash_init(105,2760
static void safe_hash_free(130,3356
static uchar *safe_hash_search(safe_hash_search148,3707
static my_bool safe_hash_set(184,4588
static void safe_hash_change(262,6584
static SAFE_HASH key_cache_hash;295,7407
my_bool multi_keycache_init(298,7442
void multi_keycache_free(304,7553
KEY_CACHE *multi_key_cache_search(multi_key_cache_search326,8033
my_bool multi_key_cache_set(350,8519
void multi_key_cache_change(357,8687

mysys/mf_loadpath.c,29
char * my_load_path(26,1122

mysys/mf_pack.c,339
void pack_dirname(29,1040
size_t cleanup_dirname(124,3293
my_bool my_use_symdir=240,6522
void symdirget(243,6608
size_t normalize_dirname(292,7946
size_t unpack_dirname(339,9184
static char * expand_tilde(376,10175
size_t unpack_filename(419,10962
size_t system_filename(442,11711
char *intern_filename(intern_filename449,11867

mysys/mf_path.c,191
char * my_path(32,1390
#define F_OK 78,2603
#define PATH_SEP 79,2618
#define PROGRAM_EXTENSION 80,2639
#define PATH_SEP 82,2678
static char *find_file_in_path(find_file_in_path85,2707

mysys/mf_qsort2.c,40
#define QSORT_EXTRA_CMP_ARGUMENT18,764

mysys/mf_qsort.c,398
#define CMP(30,1044
#define CMP(32,1098
#define SWAP(35,1141
#define MEDIAN(54,1629
typedef struct st_stack66,1979
  char *low,low68,2005
  char *low,*high;high68,2005
} stack_node;69,2024
#define PUSH(71,2039
#define POP(72,2113
#define STACK_SIZE	75,2253
#define THRESHOLD_FOR_INSERT_SORT 76,2304
#define SORT_RETURN 78,2373
#define SORT_RETURN 80,2406
qsort_t my_qsort2(94,2935

mysys/mf_radix.c,35
void radixsort_for_str_ptr(28,971

mysys/mf_same.c,23
char * fn_same(28,982

mysys/mf_sort.c,32
void my_string_ptr_sort(21,859

mysys/mf_soundex.c,53
void soundex(45,1752
static char get_scode(88,2978

mysys/mf_tempdir.c,133
#define DELIM 20,813
#define DELIM 22,837
my_bool init_tmpdir(25,863
char *my_tmpdir(my_tmpdir73,2208
void free_tmpdir(85,2495

mysys/mf_tempfile.c,31
File create_temp_file(57,1771

mysys/mf_unixpath.c,26
void to_unix_path(27,914

mysys/mf_wcomp.c,95
char wild_many=23,880
char wild_one=24,900
char wild_prefix=25,919
int wild_compare(27,986

mysys/mulalloc.c,31
void* my_multi_malloc(34,1095

mysys/my_access.c,363
int my_access(39,1203
static const char *reserved_names[reserved_names65,1789
#define MAX_RESERVED_NAME_LENGTH 74,2030
static int str_list_find(90,2280
static char reserved_map[reserved_map109,2671
int check_if_legal_tablename(148,4045
static my_bool does_drive_exists(168,4654
my_bool is_filename_allowed(189,5303
int check_if_legal_filename(235,6457

mysys/my_aes.c,404
enum encrypt_dir 27,842
enum encrypt_dir { AES_ENCRYPT,27,842
enum encrypt_dir { AES_ENCRYPT, AES_DECRYPT 27,842
#define AES_BLOCK_SIZE 29,890
#define AES_BAD_DATA 31,943
  int	nr;36,1072
  uint32   rk[rk37,1108
} KEYINSTANCE;38,1161
static int my_aes_create_key(58,1571
#define AES_USE_KEY_BYTES 89,2848
int my_aes_encrypt(126,3841
int my_aes_decrypt(174,5277
int my_aes_get_size(224,6746

mysys/my_alarm.c,42
sig_handler my_set_alarm_variable(26,882

mysys/my_alloc.c,464
#undef EXTRA_DEBUG21,891
#define EXTRA_DEBUG22,910
void init_alloc_root(46,1851
void reset_root_defaults(93,3495
void *alloc_root(alloc_root148,4985
void *multi_alloc_root(multi_alloc_root264,8720
#define TRASH_MEM(295,9386
static inline void mark_blocks_free(299,9511
void free_root(347,10807
void set_prealloc_root(390,11760
char *strdup_root(strdup_root412,12183
char *strmake_root(strmake_root418,12287
void *memdup_root(memdup_root430,12469

mysys/my_atomic.c,335
int my_atomic_initialize(28,940
#undef pthread_mutex_init40,1240
#undef pthread_mutex_destroy41,1266
#undef pthread_mutex_lock42,1295
#undef pthread_mutex_unlock43,1321
void plain_pthread_mutex_init(45,1350
void plain_pthread_mutex_destroy(50,1442
void plain_pthread_mutex_lock(55,1534
void plain_pthread_mutex_unlock(60,1620

mysys/my_bit.c,116
const char _my_bits_nbits[_my_bits_nbits20,790
const uchar _my_bits_reverse_table[_my_bits_reverse_table42,1707

mysys/my_bitmap.c,1067
void create_last_word_mask(41,1492
static inline void bitmap_lock(84,2612
static inline void bitmap_unlock(91,2741
static inline uint get_first_set(98,2874
static inline uint get_first_not_set(118,3303
my_bool bitmap_init(138,3747
void bitmap_free(179,4576
my_bool bitmap_fast_test_and_set(207,5022
my_bool bitmap_test_and_set(230,5488
my_bool bitmap_fast_test_and_clear(253,5958
my_bool bitmap_test_and_clear(263,6184
uint bitmap_set_next(274,6432
void bitmap_set_prefix(284,6634
my_bool bitmap_is_prefix(302,7137
my_bool bitmap_is_set_all(344,8568
my_bool bitmap_is_clear_all(358,8893
my_bool bitmap_is_subset(373,9237
my_bool bitmap_is_overlapping(393,9752
void bitmap_intersect(412,10225
void bitmap_set_above(455,11310
void bitmap_subtract(466,11570
void bitmap_union(478,11867
void bitmap_xor(490,12158
void bitmap_invert(502,12447
uint bitmap_bits_set(513,12633
void bitmap_copy(529,13007
uint bitmap_get_first_set(541,13296
uint bitmap_get_first(557,13681
uint bitmap_lock_set_next(573,14083
void bitmap_lock_clear_bit(583,14246

mysys/my_chsize.c,23
int my_chsize(41,1312

mysys/my_compare.c,132
#define CMP_NUM(22,852
int ha_compare_text(24,919
static int compare_bin(36,1376
#define FCMP(117,3796
int ha_key_cmp(119,3839

mysys/my_compress.c,189
my_bool my_compress(40,1315
uchar *my_compress_alloc(my_compress_alloc60,1735
my_bool my_uncompress(109,2865
#define BLOB_HEADER 147,3749
int packfrm(170,4376
int unpackfrm(228,6064

mysys/my_conio.c,263
static HANDLE my_coninpfh=21,738
int my_pthread_auto_mutex_lock(47,1518
int my_pthread_auto_mutex_free(81,2104
#define pthread_auto_mutex_decl(94,2245
#define pthread_auto_mutex_lock(97,2338
#define pthread_auto_mutex_free(100,2469
char* my_cgets(124,3077

mysys/my_copy.c,95
struct utimbuf 26,990
  time_t actime;27,1007
  time_t modtime;28,1024
int my_copy(52,1517

mysys/my_crc32.c,32
#undef DYNAMIC_CRC_TABLE19,743

mysys/my_create.c,24
File my_create(36,1087

mysys/my_delete.c,51
int my_delete(20,813
int nt_share_delete(71,2441

mysys/my_div.c,27
char * my_filename(26,806

mysys/my_error.c,634
#define ERRMSGSIZE 23,940
static struct my_err_head49,2134
  struct my_err_head    *meh_next;meh_next51,2162
  const char**          (*get_errmsgs)get_errmsgs52,2222
  int                   meh_first;53,2300
  int                   meh_last;54,2382
} my_errmsgs_globerrs 55,2463
static struct my_err_head *my_errmsgs_list=my_errmsgs_list57,2547
void my_error(71,2739
void my_printf_error(112,3847
void my_printv_error(139,4481
void my_printf_warning(160,5031
void my_message(183,5500
int my_error_register(211,6433
const char **my_error_unregister(my_error_unregister268,8124
void my_error_unregister_all(298,8837

mysys/my_file.c,185
#define RLIM_INFINITY 38,1186
static uint set_max_open_files(41,1236
static uint set_max_open_files(75,2351
uint my_set_max_open_files(94,2676
void my_free_open_file_info(122,3522

mysys/my_fopen.c,307
FILE *my_fopen(my_fopen41,1170
static FILE *my_win_freopen(my_win_freopen98,2721
static int no_close(143,3719
static FILE *my_freebsd_freopen(my_freebsd_freopen160,4187
FILE *my_freopen(my_freopen202,5051
int my_fclose(227,5660
FILE *my_fdopen(my_fdopen262,6442
static void make_ftype(331,8071

mysys/my_fstream.c,215
#undef ftell24,916
#undef fseek25,929
#define ftell(26,942
#define fseek(27,969
size_t my_fread(45,1275
size_t my_fwrite(89,2514
my_off_t my_fseek(162,4418
my_off_t my_ftell(175,4840
int my_fileno(187,5189

mysys/my_gethwaddr.c,266
my_bool my_gethwaddr(32,1052
my_bool my_gethwaddr(71,1895
#undef VOID105,2602
#define VOID 106,2614
typedef DWORD (WINAPI *pfnGetAdaptersAddresses)pfnGetAdaptersAddresses117,2926
my_bool my_gethwaddr(133,3329
my_bool my_gethwaddr(200,5498
int main(207,5595

mysys/my_getncpus.c,49
static int ncpus=23,857
int my_getncpus(25,878

mysys/my_getopt.c,1606
typedef void (*init_func_p)init_func_p25,918
my_error_reporter my_getopt_error_reporter=29,1116
static const char *special_opt_prefix[special_opt_prefix46,2033
static const uint special_opt_prefix_lengths[special_opt_prefix_lengths48,2128
enum enum_special_opt50,2230
{ OPT_SKIP,51,2252
{ OPT_SKIP, OPT_DISABLE,51,2252
{ OPT_SKIP, OPT_DISABLE, OPT_ENABLE,51,2252
{ OPT_SKIP, OPT_DISABLE, OPT_ENABLE, OPT_MAXIMUM,51,2252
{ OPT_SKIP, OPT_DISABLE, OPT_ENABLE, OPT_MAXIMUM, OPT_LOOSE}OPT_LOOSE51,2252
char *disabled_my_option=disabled_my_option53,2315
char *enabled_my_option=enabled_my_option54,2354
my_bool my_getopt_print_errors=62,2553
my_bool my_getopt_skip_unknown=69,2732
static void default_reporter(71,2768
static my_getopt_value getopt_get_addr;86,3156
void my_getopt_register_get_addr(88,3197
int handle_options(152,5956
static char *check_struct_option(check_struct_option577,19628
static my_bool get_bool_argument(614,20540
static int setval(638,21309
static int findopt(797,25799
my_bool getopt_compare_strings(838,26638
static longlong eval_num_suffix(857,27047
static longlong getopt_ll(900,28190
longlong getopt_ll_limit_value(913,28512
static ulonglong getopt_ull(976,29995
ulonglong getopt_ull_limit_value(983,30194
double getopt_double_limit_value(1042,31583
static double getopt_double(1078,32488
static void init_one_value(1103,33115
static void fini_one_value(1179,35358
void my_cleanup_options(1195,35759
static void init_variables(1214,36169
static uint print_name(1238,36984
void my_print_help(1252,37228
void my_print_variables(1340,39500

mysys/my_getpagesize.c,54
int my_getpagesize(22,773
int my_getpagesize(32,903

mysys/my_getsystime.c,212
ulonglong my_getsystime(40,1444
time_t my_time(73,2299
ulonglong my_micro_time(97,2912
#define OFFSET_TO_EPOCH 135,4024
ulonglong my_micro_time_and_time(137,4071
time_t my_time_possible_from_micro(171,4887

mysys/my_getwd.c,103
int my_getwd(46,1270
int my_setwd(91,2307
int test_if_hard_path(131,3228
my_bool has_path(157,3808

mysys/my_init.c,2577
my_bool have_tcpip=29,1026
#define my_win_init(33,1121
#define SCALE_SEC 36,1151
#define SCALE_USEC 37,1179
my_bool my_init_done=39,1210
uint	mysys_usage_id=40,1235
ulong   my_thread_stack_size=41,1309
static ulong atoi_octal(43,1347
MYSQL_FILE *mysql_stdin=mysql_stdin54,1592
static MYSQL_FILE instrumented_stdin;55,1623
my_bool my_init(65,1833
void my_end(121,3221
void my_parameter_handler(237,6647
int handle_rtc_failure(257,7169
#define OFFSET_TO_EPOC 273,7578
#define MS 274,7654
static void win_init_time(276,7675
static void win_init_registry(306,8618
static void my_win_init(357,9970
#define TCPIPKEY 399,11025
#define WINSOCK2KEY 400,11100
#define WINSOCKKEY 401,11180
static my_bool win32_have_tcpip(403,11260
static my_bool win32_init_tcp_ip(423,11803
PSI_mutex_key key_my_file_info_mutex;459,12648
PSI_mutex_key key_LOCK_localtime_r;463,12799
PSI_mutex_key key_BITMAP_mutex,466,12903
PSI_mutex_key key_BITMAP_mutex, key_IO_CACHE_append_buffer_lock,466,12903
  key_IO_CACHE_SHARE_mutex,467,12968
  key_IO_CACHE_SHARE_mutex, key_KEY_CACHE_cache_lock,467,12968
  key_IO_CACHE_SHARE_mutex, key_KEY_CACHE_cache_lock, key_LOCK_alarm,467,12968
  key_my_thread_var_mutex,468,13038
  key_my_thread_var_mutex, key_THR_LOCK_charset,468,13038
  key_my_thread_var_mutex, key_THR_LOCK_charset, key_THR_LOCK_heap,468,13038
  key_THR_LOCK_isam,469,13106
  key_THR_LOCK_isam, key_THR_LOCK_lock,469,13106
  key_THR_LOCK_isam, key_THR_LOCK_lock, key_THR_LOCK_malloc,469,13106
  key_THR_LOCK_mutex,470,13167
  key_THR_LOCK_mutex, key_THR_LOCK_myisam,470,13167
  key_THR_LOCK_mutex, key_THR_LOCK_myisam, key_THR_LOCK_net,470,13167
  key_THR_LOCK_open,471,13228
  key_THR_LOCK_open, key_THR_LOCK_threads,471,13228
  key_TMPDIR_mutex,472,13271
  key_TMPDIR_mutex, key_THR_LOCK_myisam_mmap;472,13271
static PSI_mutex_info all_mysys_mutexes[all_mysys_mutexes474,13318
PSI_cond_key key_COND_alarm,502,14789
PSI_cond_key key_COND_alarm, key_IO_CACHE_SHARE_cond,502,14789
  key_IO_CACHE_SHARE_cond_writer,503,14843
  key_IO_CACHE_SHARE_cond_writer, key_my_thread_var_suspend,503,14843
  key_THR_COND_threads;504,14904
static PSI_cond_info all_mysys_conds[all_mysys_conds506,14929
PSI_thread_key key_thread_alarm;516,15294
static PSI_thread_info all_mysys_threads[all_mysys_threads518,15328
PSI_file_key key_file_proc_meminfo;525,15489
PSI_file_key key_file_charset,527,15563
PSI_file_key key_file_charset, key_file_cnf;527,15563
static PSI_file_info all_mysys_files[all_mysys_files529,15609
void my_init_mysys_psi_keys(538,15840

mysys/my_largepage.c,211
uint my_get_large_page_size(34,1100
uchar* my_large_malloc(51,1479
void my_large_free(73,2037
uint my_get_large_page_size_int(91,2509
uchar* my_large_malloc_int(116,3089
my_bool my_large_free_int(159,4133

mysys/my_lib.c,444
# define NAMLEN(25,987
# define dirent 27,1042
# define NAMLEN(28,1065
#define READDIR(46,1396
#define READDIR(48,1464
#define ENTRIES_START_SIZE 56,1709
#define ENTRIES_INCREMENT 57,1760
#define NAMES_START_SIZE 58,1812
void my_dirend(66,1979
static int comp_names(83,2421
MY_DIR	*my_dir(my_dir91,2564
char * directory_file_name 197,5604
MY_DIR	*my_dir(my_dir222,6231
int my_fstat(384,10822
MY_STAT *my_stat(my_stat397,11147

mysys/my_libwrap.c,98
void my_fromhost(26,880
int my_hosts_access(31,945
char *my_eval_client(my_eval_client36,1024

mysys/my_lock.c,226
#undef MY_HOW_OFTEN_TO_ALARM19,811
#define MY_HOW_OFTEN_TO_ALARM 20,840
#undef NO_ALARM_LOOP22,924
#define WIN_LOCK_INFINITE 27,989
#define WIN_LOCK_SLEEP_MILLIS 28,1018
static int win_lock(30,1053
int my_lock(138,4175

mysys/my_lockmem.c,197
struct st_mem_list25,893
  LIST list;27,914
  uchar *page;page28,927
  uint size;29,942
LIST *mem_list;mem_list32,959
uchar *my_malloc_lock(my_malloc_lock34,976
void my_free_lock(77,2072

mysys/my_malloc.c,205
void *my_malloc(my_malloc28,1039
void *my_realloc(my_realloc74,2255
void my_free(124,3516
void *my_memdup(my_memdup133,3641
char *my_strdup(my_strdup142,3814
char *my_strndup(my_strndup152,4009

mysys/my_memmem.c,52
void *my_memmem(my_memmem26,904
int main(53,1603

mysys/my_mess.c,31
void my_message_stderr(18,770

mysys/my_mkdir.c,21
int my_mkdir(24,831

mysys/my_mmap.c,158
int my_msync(24,899
static SECURITY_ATTRIBUTES mmap_security_attributes=32,1040
void *my_mmap(my_mmap35,1136
int my_munmap(73,2223
int my_msync(80,2389

mysys/my_once.c,147
void* my_once_alloc(36,1074
char *my_once_strdup(my_once_strdup80,2263
void *my_once_memdup(my_once_memdup90,2451
void my_once_free(106,2715

mysys/my_open.c,115
File my_open(35,1011
int my_close(67,1684
File my_register_filename(120,2896
void my_print_open_files(176,4381

mysys/my_pread.c,52
size_t my_pread(48,1430
size_t my_pwrite(136,4335

mysys/my_pthread.c,1575
#define DONT_REMAP_PTHREAD_FUNCTIONS18,791
#define SCHED_POLICY 26,968
#define SCHED_POLICY 28,1004
uint thd_lib_detected=31,1045
#undef pthread_getspecific36,1175
void *my_pthread_getspecific_imp(my_pthread_getspecific_imp38,1203
int my_pthread_create_detached=52,1460
int my_sigwait(56,1564
struct tm *localtime_r(localtime_r75,1896
struct tm *gmtime_r(gmtime_r92,2257
static sigset_t sigwait_set,124,3408
static sigset_t sigwait_set,rev_sigwait_set,124,3408
static sigset_t sigwait_set,rev_sigwait_set,px_recd;124,3408
void px_handle_sig(126,3462
void sigwait_setup(132,3524
int sigwait(172,4571
static sigset_t pending_set;232,6393
static bool inited=233,6422
static pthread_cond_t  COND_sigwait;234,6444
static pthread_mutex_t LOCK_sigwait;235,6481
void sigwait_handle_sig(238,6520
void *sigwait_thread(sigwait_thread246,6740
int sigwait(283,7596
#undef pthread_mutex_init340,9103
#undef pthread_mutex_lock341,9129
#undef pthread_mutex_unlock342,9155
#undef pthread_mutex_destroy343,9183
#undef pthread_mutex_wait344,9212
#undef pthread_mutex_timedwait345,9238
#undef pthread_mutex_trylock346,9269
#undef pthread_mutex_t347,9298
#undef pthread_cond_init348,9321
#undef pthread_cond_wait349,9346
#undef pthread_cond_timedwait350,9371
#undef pthread_cond_t351,9401
#undef pthread_attr_getstacksize352,9423
int my_pthread_mutex_init(362,9720
int my_pthread_cond_init(372,9954
int my_pthread_cond_timedwait(397,10708
void my_pthread_attr_getstacksize(414,11139
int my_pthread_mutex_trylock(451,12255
int pthread_dummy(466,12676

mysys/my_quick.c,60
size_t my_quick_read(27,974
size_t my_quick_write(53,1634

mysys/my_rdtsc.c,593
ulonglong my_timer_cycles(134,4475
              ulonglong wholeresult;212,7439
                      ulong high;214,7499
                      ulong low;215,7533
              }       splitresult;216,7566
ulonglong my_timer_nanoseconds(247,8554
ulonglong my_timer_microseconds(287,9769
ulonglong my_timer_milliseconds(327,10770
ulonglong my_timer_ticks(352,11465
#define MY_TIMER_ITERATIONS 375,12054
static void my_timer_init_overhead(387,12454
static ulonglong my_timer_init_resolution(421,13727
static ulonglong my_timer_init_frequency(469,14924
void my_timer_init(493,15679

mysys/my_read.c,24
size_t my_read(36,1145

mysys/my_redel.c,146
struct utimbuf 25,957
  time_t actime;26,974
  time_t modtime;27,991
#define REDEL_EXT 40,1274
int my_redel(42,1300
int my_copystat(76,2157

mysys/my_rename.c,46
#undef my_rename20,834
int my_rename(24,904

mysys/my_seek.c,52
my_off_t my_seek(46,1889
my_off_t my_tell(82,2842

mysys/my_sleep.c,22
void my_sleep(21,835

mysys/my_static.c,1346
my_bool timed_mutexes=25,916
char *	home_dir=28,963
const char      *my_progname=my_progname29,982
char		curr_dir[curr_dir30,1014
		home_dir_buff[home_dir_buff31,1046
ulong		my_stream_opened=32,1079
ulong           my_file_total_opened=33,1146
int		my_umask=34,1187
struct st_my_file_info my_file_info_default[my_file_info_default36,1227
uint   my_file_limit=37,1282
struct st_my_file_info *my_file_info=my_file_info38,1314
int			my_dont_interrupt=41,1398
volatile int		_my_signals=42,1425
struct st_remember _my_sig_remember[_my_sig_remember43,1454
ulong my_default_record_cache_size=46,1539
const char *soundex_map=soundex_map51,1690
USED_MEM* my_once_root_block=54,1770
uint	  my_once_extra=55,1833
my_bool my_use_large_pages=59,1953
uint    my_large_page_size=60,1984
int volatile my_have_got_alarm=64,2044
ulong my_time_to_wait_for_lock=65,2110
const char *globerrs[globerrs69,2205
static const char *proc_info_dummy(proc_info_dummy77,2516
ulonglong query_performance_frequency,100,3402
ulonglong query_performance_frequency, query_performance_offset;100,3402
my_bool my_disable_locking=104,3505
my_bool my_disable_async_io=105,3535
my_bool my_disable_flush_key_blocks=106,3566
my_bool my_disable_symlinks=107,3605
struct PSI_bootstrap *PSI_hook=PSI_hook123,4119
PSI *PSI_server=PSI_server134,4625

mysys/my_symlink2.c,110
File my_create_with_symlink(27,1006
int my_delete_with_symlink(98,2766
int my_rename_with_symlink(124,3437

mysys/my_symlink.c,181
int my_readlink(35,1195
int my_symlink(70,1868
#define BUFF_LEN 94,2444
#define BUFF_LEN 96,2492
#define BUFF_LEN 98,2526
int my_is_symlink(102,2559
int my_realpath(121,3052

mysys/my_sync.c,235
void thr_set_sync_wait_callback(23,896
int my_sync(53,1742
static const char cur_dir_name[cur_dir_name110,3211
int my_sync_dir(127,3501
int my_sync_dir(154,4275
int my_sync_dir_by_file(177,4702
int my_sync_dir_by_file(187,4955

mysys/my_thr_init.c,1513
mysql_mutex_t THR_LOCK_malloc,26,967
mysql_mutex_t THR_LOCK_malloc, THR_LOCK_open,26,967
              THR_LOCK_lock,27,1013
              THR_LOCK_lock, THR_LOCK_isam,27,1013
              THR_LOCK_lock, THR_LOCK_isam, THR_LOCK_myisam,27,1013
              THR_LOCK_lock, THR_LOCK_isam, THR_LOCK_myisam, THR_LOCK_heap,27,1013
              THR_LOCK_net,28,1089
              THR_LOCK_net, THR_LOCK_charset,28,1089
              THR_LOCK_net, THR_LOCK_charset, THR_LOCK_threads,28,1089
              THR_LOCK_myisam_mmap;29,1153
mysql_cond_t  THR_COND_threads;31,1190
uint            THR_thread_count=32,1222
uint 		my_thread_end_wait_time=33,1259
mysql_mutex_t LOCK_localtime_r;35,1352
pthread_mutexattr_t my_fast_mutexattr;38,1436
pthread_mutexattr_t my_errorcheck_mutexattr;41,1529
nptl_pthread_exit_hack_handler(54,1809
static my_bool my_thread_global_init_done=67,2054
void my_thread_global_reinit(78,2430
my_bool my_thread_global_init(136,4120
void my_thread_global_end(231,7236
static my_thread_id thread_id=289,8992
my_bool my_thread_init(311,9595
void my_thread_end(374,11082
struct st_my_thread_var *_my_thread_var(_my_thread_var427,12554
my_thread_id my_thread_dbug_id(437,12867
const char *my_thread_name(my_thread_name443,12949
const char *my_thread_name(my_thread_name450,13014
extern void **my_thread_var_dbug(my_thread_var_dbug465,13363
static uint get_thread_lib(474,13570
static void my_sigabrt_handler(499,14288
static void install_sigabrt_handler(505,14379

mysys/my_wincond.c,1261
#undef SAFE_MUTEX	21,988
typedef VOID (WINAPI * InitializeConditionVariableProc)34,1339
typedef BOOL (WINAPI * SleepConditionVariableCSProc)37,1440
typedef VOID (WINAPI * WakeAllConditionVariableProc)42,1599
typedef VOID (WINAPI * WakeConditionVariableProc)45,1695
static InitializeConditionVariableProc my_InitializeConditionVariable;48,1789
static SleepConditionVariableCSProc my_SleepConditionVariableCS;49,1860
static WakeAllConditionVariableProc my_WakeAllConditionVariable;50,1925
static WakeConditionVariableProc my_WakeConditionVariable;51,1990
static BOOL have_native_conditions=59,2162
static void check_native_cond_availability(66,2281
static DWORD get_milliseconds(89,2972
static int legacy_cond_init(128,3812
static int legacy_cond_destroy(158,4968
static int legacy_cond_timedwait(170,5257
static int legacy_cond_signal(212,6390
static int legacy_cond_broadcast(225,6617
int pthread_cond_init(251,7195
int pthread_cond_destroy(274,7901
int pthread_cond_broadcast(283,8069
int pthread_cond_signal(295,8276
int pthread_cond_timedwait(307,8474
int pthread_cond_wait(322,8842
int pthread_attr_init(328,8968
int pthread_attr_setstacksize(335,9103
int pthread_attr_destroy(341,9225
struct tm *localtime_r(localtime_r351,9544

mysys/my_windac.c,224
static my_bool is_nt(30,997
typedef struct st_my_security_attr40,1187
  PSID everyone_sid;42,1224
  PACL dacl;43,1245
} My_security_attr;44,1258
int my_security_attr_create(74,2386
void my_security_attr_free(211,6250

mysys/my_winerr.c,363
struct errentry 27,1007
  unsigned long oscode;29,1026
  int sysv_errno;30,1074
static struct errentry errtable[errtable33,1123
#define ERRTABLESIZE 82,3810
#define MIN_EXEC_ERROR 86,3994
#define MAX_EXEC_ERROR 87,4048
#define MIN_EACCES_RANGE 91,4190
#define MAX_EACCES_RANGE 92,4235
static int get_errno_from_oserr(95,4292
void my_osmaperr 121,5004

mysys/my_winfile.c,741
File my_open_osfhandle(54,2116
static void invalidate_fd(80,2686
HANDLE my_get_osfhandle(90,2917
static int my_get_open_flags(98,3092
File my_win_sopen(122,3594
File my_win_open(272,8229
int my_win_close(280,8411
size_t my_win_pread(293,8614
size_t my_win_read(330,9514
size_t my_win_pwrite(361,10258
my_off_t my_win_lseek(396,11052
#define FILE_WRITE_TO_END_OF_FILE 418,11591
size_t my_win_write(420,11649
int my_win_chsize(461,12549
static File my_get_stdfile_descriptor(482,13010
File my_win_fileno(504,13494
FILE *my_win_fopen(my_win_fopen527,13900
FILE * my_win_fdopen(564,14637
int my_win_fclose(584,15053
int my_win_fstat(606,15481
int my_win_stat(636,16144
int my_win_fsync(657,16645
int my_win_dup(668,16823

mysys/my_winthread.c,350
#undef SAFE_MUTEX21,1045
struct thread_start_parameter28,1173
  pthread_handler func;30,1205
  void *arg;arg31,1229
win_pthread_mutex_trylock(41,1392
static unsigned int __stdcall pthread_start(55,1657
int pthread_create(66,1887
void pthread_exit(98,2699
int pthread_join(103,2750
int pthread_cancel(132,3182
int my_pthread_once(155,3573

mysys/my_write.c,24
size_t my_write(23,854

mysys/ptr_cmp.c,357
static int native_compare(37,1438
qsort2_cmp get_ptr_compare 54,2041
qsort2_cmp get_ptr_compare 59,2154
#define cmp(79,2612
static int ptr_compare(83,2706
static int ptr_compare_0(98,3012
static int ptr_compare_1(119,3305
static int ptr_compare_2(140,3614
static int ptr_compare_3(162,3937
void my_store_ptr(187,4292
my_off_t my_get_ptr(205,4782

mysys/queues.c,1019
int init_queue(51,1711
int init_queue_ex(94,2996
int reinit_queue(131,4052
int resize_queue(163,4765
void delete_queue(194,5392
void queue_insert(205,5580
int queue_insert_safe(232,6352
uchar *queue_remove(queue_remove251,6731
void queue_replaced(264,7082
void _downheap(272,7171
void _downheap(326,8655
void queue_fix(361,9508
static uint num_array[num_array379,9911
static uint tot_no_parts=380,9940
static uint tot_no_loops=381,9969
static uint expected_part=382,9998
static uint expected_num=383,10028
static bool max_ind=384,10057
static bool fix_used=385,10081
static ulonglong start_time=386,10106
static bool is_divisible_by(388,10139
void calculate_next(396,10294
void calculate_end_next(435,10955
static int test_compare(477,11768
bool check_num(495,12150
void perform_insert(508,12501
bool perform_ins_del(546,13272
bool do_test(574,13881
static void start_measurement(594,14313
static void stop_measurement(599,14381
static void benchmark_test(609,14653
int main(668,16148

mysys/rijndael.c,705
static const uint32 Te0[Te035,1164
static const uint32 Te1[Te1103,4656
static const uint32 Te2[Te2171,8148
static const uint32 Te3[Te3239,11640
static const uint32 Te4[Te4307,15132
static const uint32 Td0[Td0375,18624
static const uint32 Td1[Td1443,22116
static const uint32 Td2[Td2511,25608
static const uint32 Td3[Td3580,29101
static const uint32 Td4[Td4648,32593
static const uint32 rcon[rcon718,36157
#define RJ_SWAP(727,36361
#define GETuint32(728,36436
#define PUTuint32(729,36483
#define GETuint32(733,36556
#define PUTuint32(735,36678
int rijndaelKeySetupEnc(748,37009
int rijndaelKeySetupDec(845,39270
void rijndaelEncrypt(894,40726
void rijndaelDecrypt(1137,48993

mysys/sha1.c,299
#define SHA1CircularShift(90,3670
const uint32 sha_const_key[sha_const_key115,4185
int mysql_sha1_reset(125,4292
int mysql_sha1_result(165,5249
int mysql_sha1_input(209,6267
static const uint32  K[K263,7574
static void SHA1ProcessMessageBlock(272,7662
static void SHA1PadMessage(375,10121

mysys/stacktrace.c,1450
#define PTR_SANE(36,1105
static char *heap_start;heap_start38,1186
void my_init_stacktrace(44,1268
static void print_buffer(53,1383
static int safe_print_str(72,1869
void my_safe_print_str(135,3091
void my_print_stacktrace(162,3601
my_demangle(182,4336
static void my_demangle_symbols(188,4467
void my_print_stacktrace(220,5116
#define SIGRETURN_FRAME_OFFSET 245,5702
#define SIGRETURN_FRAME_OFFSET 249,5762
#define MAX_INSTR_IN_FUNC 260,6078
inline uchar** find_prev_fp(262,6112
inline uint32* find_prev_pc(276,6373
void my_print_stacktrace(292,6725
void my_write_core(419,10460
static EXCEPTION_POINTERS *exception_ptrs;exception_ptrs448,11123
#define MODULE64_SIZE_WINXP 450,11167
#define STACKWALK_MAX_FRAMES 451,11199
void my_init_stacktrace(453,11232
void my_set_exception_pointers(458,11264
static void add_to_symbol_path(466,11389
static void get_symbol_path(482,11937
#define MAX_SYMBOL_PATH 549,13503
#define SYMOPT_NO_PROMPTS 553,13635
void my_print_stacktrace(556,13671
void my_write_core(667,17046
void my_safe_print_str(714,18274
size_t my_write_stderr(729,18523
size_t my_write_stderr(737,18782
static const char digits[digits744,18901
char *my_safe_utoa(my_safe_utoa746,18950
char *my_safe_itoa(my_safe_itoa756,19113
static const char *check_longlong(check_longlong810,20225
static size_t my_safe_vsnprintf(827,20523
size_t my_safe_snprintf(905,22458
size_t my_safe_printf_stderr(916,22665

mysys/string.c,262
my_bool init_dynamic_string(25,894
my_bool dynstr_set(50,1581
my_bool dynstr_realloc(75,2189
my_bool dynstr_append(91,2656
my_bool dynstr_append_mem(97,2787
my_bool dynstr_trunc(118,3370
my_bool dynstr_append_os_quoted(141,4088
void dynstr_free(178,5164

mysys/test_charset.c,86
static void _print_array(23,857
static void _print_csinfo(34,1088
int main(56,1792

mysys/test_dir.c,17
int main(21,774

mysys/testhash.c,318
#define MAX_RECORDS 23,867
#define MAX_KEYS 24,894
static uint testflag=30,1016
static uint16 key1[key131,1066
#define hash_check(34,1109
static uchar *hash2_key(hash2_key41,1212
int main(50,1409
static int do_test(60,1538
static int get_options(249,6076
static int rnd(281,6771
void free_record(287,6870

mysys/test_xml.c,144
static void mstr(22,795
static int dstr(29,922
static int bstr(38,1096
static int estr(48,1269
static void usage(57,1441
int main(63,1535

mysys/thr_alarm.c,1692
#define FORCE_DBUG_OFF17,817
#define ETIME 35,1176
uint thr_client_alarm;38,1208
static int alarm_aborted=39,1231
my_bool thr_alarm_inited=40,1283
volatile my_bool alarm_thread_running=41,1312
time_t next_alarm_expire_time=42,1354
static mysql_mutex_t LOCK_alarm;47,1472
static mysql_cond_t COND_alarm;48,1505
static sigset_t full_signal_set;49,1537
static QUEUE alarm_queue;50,1570
static uint max_used_alarms=51,1596
pthread_t alarm_thread;52,1627
#define reschedule_alarms(56,1715
#define reschedule_alarms(58,1780
static int compare_ulong(63,1927
void init_thr_alarm(70,2121
void resize_thr_alarm(120,3685
my_bool thr_alarm(152,4416
void thr_end_alarm(244,6970
sig_handler process_alarm(296,8296
static sig_handler process_alarm_part2(338,9471
void end_thr_alarm(434,11970
void thr_alarm_kill(483,13285
void thr_alarm_info(504,13754
static sig_handler thread_alarm(526,14315
#define tv_sec 538,14587
#define tv_nsec 539,14609
static void *alarm_handler(alarm_handler545,14736
void thr_alarm_kill(609,16349
sig_handler process_alarm(614,16424
my_bool thr_alarm(620,16515
my_bool thr_got_alarm(635,16800
void thr_end_alarm(652,17138
void end_thr_alarm(664,17367
void init_thr_alarm(671,17510
void thr_alarm_info(678,17650
void resize_thr_alarm(683,17731
static mysql_cond_t COND_thread_count;698,18059
static mysql_mutex_t LOCK_thread_count;699,18098
static uint thread_count;700,18138
typedef int * fd_set_ptr;703,18179
typedef fd_set * fd_set_ptr;705,18211
static void *test_thread(test_thread708,18261
static sig_handler print_signal_warning(795,20564
static void *signal_hand(signal_hand808,20925
int main(876,22687
int main(965,25449

mysys/thr_lock.c,2801
#define FORCE_DBUG_OFF72,2889
my_bool thr_lock_inited=81,3009
ulong locks_immediate 82,3036
enum thr_lock_type thr_upgraded_concurrent_insert_lock 83,3083
#define MAX_THREADS 86,3207
#define MAX_LOCKS 87,3231
LIST *thr_lock_thread_list;thr_lock_thread_list90,3257
ulong max_write_lock_count=91,3316
void thr_set_lock_wait_callback(96,3442
static inline mysql_cond_t *get_cond(get_cond103,3628
my_bool init_thr_lock(112,3793
thr_lock_owner_equal(119,3877
#define MAX_FOUND_ERRORS	126,3984
static uint found_errors=127,4042
static int check_lock(129,4071
static void check_locks(189,5528
#define check_locks(313,9115
void thr_lock_init(319,9177
void thr_lock_delete(337,9765
void thr_lock_info_init(348,10042
void thr_lock_data_init(357,10240
has_old_lock(368,10495
static inline my_bool have_specific_lock(378,10711
wait_for_lock(394,10988
thr_lock(538,15987
static inline void free_all_read_locks(786,25284
void thr_unlock(838,26675
static void wake_up_waiters(890,28139
#define LOCK_CMP(1014,32073
static void sort_locks(1016,32179
thr_multi_lock(1038,32630
thr_lock_merge_status(1094,34718
void thr_multi_unlock(1144,35860
void thr_abort_locks(1174,36684
my_bool thr_abort_locks_for_thread(1209,37657
void thr_downgrade_write_lock(1282,40002
my_bool thr_upgrade_write_delay_lock(1303,40594
my_bool thr_reschedule_write_lock(1354,42206
static void thr_print_lock(1394,43359
void thr_print_locks(1417,43963
struct st_test 1460,45161
  uint lock_nr;1461,45178
  enum thr_lock_type lock_type;1462,45194
THR_LOCK locks[locks1465,45230
struct st_test test_0[test_01467,45266
struct st_test test_1[test_11468,45322
struct st_test test_2[test_21469,45412
struct st_test test_3[test_31470,45478
struct st_test test_4[test_41471,45573
struct st_test test_5[test_51472,45652
struct st_test test_6[test_61473,45746
struct st_test test_7[test_71474,45845
struct st_test test_8[test_81475,45886
struct st_test test_9[test_91476,46003
struct st_test test_10[test_101477,46058
struct st_test test_11[test_111478,46100
struct st_test test_12[test_121479,46252
struct st_test test_13[test_131480,46406
struct st_test test_14[test_141481,46479
struct st_test test_15[test_151482,46546
struct st_test *tests[tests1484,46627
int lock_counts[lock_counts1487,46788
static mysql_cond_t COND_thread_count;1506,47532
static mysql_mutex_t LOCK_thread_count;1507,47571
static uint thread_count;1508,47611
static ulong sum=1509,47637
#define MAX_LOCK_COUNT 1511,47658
#define TEST_TIMEOUT 1512,47683
static void test_get_status(1516,47774
static void test_update_status(1521,47919
static void test_copy_status(1525,47992
static my_bool test_check_status(1530,48105
static void *test_thread(test_thread1536,48193
int main(1587,49599

mysys/thr_mutex.c,1354
#define __USE_UNIX98	20,904
#undef SAFE_MUTEX	23,992
#undef pthread_mutex_t30,1179
#undef pthread_mutex_init31,1202
#undef pthread_mutex_lock32,1228
#undef pthread_mutex_unlock33,1254
#undef pthread_mutex_destroy34,1282
#undef pthread_cond_wait35,1311
#undef pthread_cond_timedwait36,1336
#define pthread_mutex_init(38,1406
static pthread_mutex_t THR_LOCK_mutex;43,1543
static ulong safe_mutex_count=44,1582
static struct st_safe_mutex_info_t *safe_mutex_root=safe_mutex_root46,1682
void safe_mutex_global_init(49,1749
int safe_mutex_init(55,1847
int safe_mutex_lock(97,2935
int safe_mutex_unlock(176,5090
int safe_cond_wait(213,6104
int safe_cond_timedwait(264,7484
int safe_mutex_destroy(302,8702
void safe_mutex_end(373,10434
#undef pthread_mutex_t412,11314
#undef pthread_mutex_init413,11337
#undef pthread_mutex_lock414,11363
#undef pthread_mutex_trylock415,11389
#undef pthread_mutex_unlock416,11418
#undef pthread_mutex_destroy417,11446
#undef pthread_cond_wait418,11475
#undef pthread_cond_timedwait419,11500
ulong mutex_delay(421,11531
#define MY_PTHREAD_FASTMUTEX_SPINS 434,11682
#define MY_PTHREAD_FASTMUTEX_DELAY 435,11719
static int cpu_count=437,11757
int my_pthread_fastmutex_init(439,11783
static double park_rng(467,12625
int my_pthread_fastmutex_lock(473,12797
void fastmutex_global_init(496,13225

mysys/thr_rwlock.c,1055
static BOOL have_srwlock=24,888
typedef VOID (WINAPI* srw_func)26,983
typedef BOOLEAN (WINAPI* srw_bool_func)27,1035
static srw_func my_InitializeSRWLock;29,1096
static srw_func my_AcquireSRWLockExclusive;30,1134
static srw_func my_ReleaseSRWLockExclusive;31,1178
static srw_func my_AcquireSRWLockShared;32,1222
static srw_func my_ReleaseSRWLockShared;33,1263
static srw_bool_func my_TryAcquireSRWLockExclusive;35,1305
static srw_bool_func my_TryAcquireSRWLockShared;36,1357
static void check_srwlock_availability(43,1507
static int srw_init(78,2763
static int srw_rdlock(86,2898
static int srw_tryrdlock(93,2999
static int srw_wrlock(102,3130
static int srw_trywrlock(110,3271
static int srw_unlock(119,3441
int my_rw_init(174,5086
int my_rw_destroy(210,6016
int my_rw_rdlock(224,6306
int my_rw_tryrdlock(242,6647
int my_rw_wrlock(264,6988
int my_rw_trywrlock(288,7446
int my_rw_unlock(313,7833
int rw_pr_init(353,8663
int rw_pr_destroy(367,8968
int rw_pr_rdlock(375,9118
int rw_pr_wrlock(390,9522
int rw_pr_unlock(426,10509

mysys/tree.c,867
#define BLACK	63,2435
#define RED	64,2452
#define DEFAULT_ALLOC_SIZE 65,2467
#define DEFAULT_ALIGN_SIZE 66,2499
void init_tree(86,3190
static void free_tree(136,5000
void delete_tree(165,5688
void reset_tree(170,5788
static void delete_tree_element(177,5922
TREE_ELEMENT *tree_insert(tree_insert199,6440
int tree_delete(273,8523
void *tree_search(tree_search335,10212
void *tree_search_key(tree_search_key354,10647
void *tree_search_edge(tree_search_edge430,12569
void *tree_search_next(tree_search_next446,12991
ha_rows tree_record_pos(478,13750
int tree_walk(525,14736
static int tree_walk_left_root_right(536,15073
static int tree_walk_right_root_left(552,15563
static void left_rotate(571,16115
static void right_rotate(581,16278
static void rb_insert(591,16442
static void rb_delete_fixup(650,17510
static int test_rb_tree(735,19020

mysys/typelib.c,429
#define is_field_separator(23,849
int find_type_or_exit(25,907
int find_type(68,2101
void make_type(131,3790
const char *get_type(get_type150,4070
my_ulonglong find_typeset(171,4660
TYPELIB *copy_typelib(copy_typelib215,5575
static const char *on_off_default_names[on_off_default_names253,6456
static TYPELIB on_off_default_typelib=254,6527
static uint parse_name(275,7160
my_ulonglong find_set_from_flags(319,8707

regex/debug.c,75
regprint(18,347
s_print(92,2167
#	define	GAP(106,2437
regchar(235,5151

regex/engine.c,1273
#define	matcher	9,252
#define	fast	10,277
#define	slow	11,296
#define	dissect	12,315
#define	backref	13,340
#define	step	14,365
#define	print	15,384
#define	at	16,405
#define	match	17,420
#define	matcher	20,460
#define	fast	21,485
#define	slow	22,504
#define	dissect	23,523
#define	backref	24,548
#define	step	25,573
#define	print	26,592
#define	at	27,613
#define	match	28,628
struct match 32,730
	struct re_guts *g;g33,745
	int eflags;34,765
	my_regmatch_t *pmatch;pmatch35,778
	char *offp;offp36,836
	char *beginp;beginp37,879
	char *endp;endp38,941
	char *coldp;coldp39,995
	char **lastpos;lastpos40,1053
	STATEVARS;41,1087
	states st;42,1099
	states fresh;43,1133
	states tmp;44,1180
	states empty;45,1210
#define	SP(51,1293
#define	AT(52,1339
#define	NOTE(53,1394
#define	SP(55,1471
#define	AT(56,1505
#define	NOTE(57,1549
matcher(66,1804
dissect(239,6234
backref(425,11186
fast(631,16758
slow(723,19080
step(820,21638
print(942,24535
at(976,25186
#define	PCHARDONE	994,25533
printchar(1007,26000
#undef	matcher1020,26166
#undef	fast1021,26181
#undef	slow1022,26193
#undef	dissect1023,26205
#undef	backref1024,26220
#undef	step1025,26235
#undef	print1026,26247
#undef	at1027,26260
#undef	match1028,26270

regex/main.c,444
char *progname;progname9,131
int debug 10,147
int line 11,162
int status 12,176
int copts 14,193
int eopts 15,219
regoff_t startoff 16,234
regoff_t endoff 17,257
int main(26,473
#	define	NS	31,536
regress(126,2615
#	define	MAXF	130,2658
#	define	SHORT	137,2790
rx_try(203,4883
#	define	NSUBS	212,5019
#	define	NSHOULD	214,5065
options(314,7605
opt(371,8654
fixstr(383,8813
check(405,9170
eprint(482,10971
efind(498,11251

regex/regcomp.c,2107
struct parse 19,310
	char *next;next20,325
	char *end;end21,366
	int error;22,417
	sop *strip;strip23,460
	sopno ssize;24,495
	sopno slen;25,548
	int ncsalloc;26,597
	struct re_guts *g;g27,645
#	define	NPAREN	28,665
	sopno pbegin[pbegin29,731
	sopno pend[pend30,778
	CHARSET_INFO *charset;charset31,823
my_regex_stack_check_t my_regex_enough_mem_in_stack=35,933
static char nuls[nuls39,1016
struct cclass cclasses[cclasses41,1087
#define	PEEK(61,1712
#define	PEEK2(62,1738
#define	MORE(63,1769
#define	MORE2(64,1803
#define	SEE(65,1840
#define	SEETWO(66,1881
#define	EAT(67,1957
#define	EATTWO(68,2001
#define	NEXT(69,2058
#define	NEXT2(70,2085
#define	NEXTn(71,2116
#define	GETNEXT(72,2150
#define	SETERROR(73,2181
#define	REQUIRE(74,2216
#define	MUSTSEE(75,2261
#define	MUSTEAT(76,2321
#define	MUSTNOTSEE(77,2384
#define	EMIT(78,2448
#define	INSERT(79,2510
#define	AHEAD(80,2578
#define	ASTERN(81,2626
#define	HERE(82,2673
#define	THERE(83,2699
#define	THERETHERE(84,2730
#define	DROP(85,2765
static int never 88,2814
#define	never	90,2883
my_regcomp(106,3315
#	define	GOODFLAGS(118,3568
#	define	GOODFLAGS(120,3600
p_ere(214,5792
p_ere_exp(268,7022
p_str(407,10045
p_bre(428,10765
p_simp_re(461,11621
#	define	BACKSL	471,11860
p_count(579,14455
p_bracket(602,14984
p_b_term(676,16567
p_b_cclass(741,18067
p_b_eclass(790,19067
p_b_symbol(805,19370
p_b_coll_elem(825,19826
othercase(857,20575
bothcases(894,21633
ordinary(919,22161
nonnewline(942,22660
repeat(966,23169
#	define	N	973,23417
#	define	INF	974,23430
#	define	REP(975,23445
#	define	MAP(976,23478
seterr(1038,25185
allocset(1054,25556
freeset(1109,26961
freezeset(1134,27735
firstch(1168,28560
nch(1187,28926
mcadd(1208,29326
mcinvert(1238,29994
  register cset *cs cs1240,30062
mccase(1253,30405
register cset *cs cs1255,30469
isinsets(1265,30697
samesets(1285,31174
categorize(1307,31687
dupl(1335,32328
doemit(1363,33134
doinsert(1389,33745
dofwd(1436,34768
enlarge(1454,35111
stripsnug(1477,35507
findmust(1500,36161
pluscount(1581,37969

regex/regerror.c,181
static struct rerr 29,651
	int code;30,672
	const char *name;name31,683
        const char *explain;explain32,702
} rerrs[rerrs33,731
my_regerror(59,1878
regatoi(103,2817

regex/regexec.c,1445
#define nope 19,420
#define	states	22,488
#define	states1	23,508
#define	CLEAR(24,608
#define	SET0(25,635
#define	SET1(26,684
#define	ISSET(27,730
#define	ASSIGN(28,778
#define	EQ(29,811
#define	STATEVARS	30,841
#define	STATESETUP(31,889
#define	STATETEARDOWN(32,928
#define	SETUP(33,967
#define	onestate	34,994
#define	INIT(35,1050
#define	INC(36,1103
#define	ISSTATEIN(37,1130
#define	FWD(40,1302
#define	BACK(41,1377
#define	ISSETBACK(42,1453
#define SNAMES	44,1537
#undef	states49,1633
#undef	CLEAR50,1647
#undef	SET051,1660
#undef	SET152,1672
#undef	ISSET53,1684
#undef	ASSIGN54,1697
#undef	EQ55,1711
#undef	STATEVARS56,1721
#undef	STATESETUP57,1738
#undef	STATETEARDOWN58,1756
#undef	SETUP59,1777
#undef	onestate60,1790
#undef	INIT61,1806
#undef	INC62,1818
#undef	ISSTATEIN63,1829
#undef	FWD64,1846
#undef	BACK65,1857
#undef	ISSETBACK66,1869
#undef	SNAMES67,1886
#define	states	70,1953
#define	CLEAR(71,1975
#define	SET0(72,2020
#define	SET1(73,2052
#define	ISSET(74,2084
#define	ASSIGN(75,2113
#define	EQ(76,2162
#define	STATEVARS	77,2214
#define	STATESETUP(78,2252
#define	STATETEARDOWN(81,2394
#define	SETUP(82,2441
#define	onestate	83,2501
#define	INIT(84,2522
#define	INC(85,2553
#define	ISSTATEIN(86,2576
#define	FWD(89,2745
#define	BACK(90,2803
#define	ISSETBACK(91,2862
#define	LNAMES	93,2925
my_regexec(113,3581
#	define	GOODFLAGS(123,3806
#	define	GOODFLAGS(125,3838

regex/regexp.c,2201
#define	END	108,4284
#define	BOL	109,4324
#define	EOL	110,4379
#define	ANY	111,4428
#define	ANYOF	112,4477
#define	ANYBUT	113,4540
#define	BRANCH	115,4615
#define	BACK	117,4689
#define	EXACTLY	118,4751
#define	NOTHING	119,4799
#define	STAR	120,4847
#define WORDSTART 122,4925
#define WORDEND 123,4994
#define	OPEN	124,5061
#define	CLOSE	127,5167
#define	OP(161,6545
#define	NEXT(162,6566
#define	OPERAND(163,6623
#define	MAGIC	169,6787
#define error(176,6854
#define regerror(178,6902
#define SPECIAL 179,6947
#define LBRAC	180,6969
#define RBRAC	181,6997
#define ASTERIX	182,7025
#define PLUS	183,7055
#define OR_OP	184,7082
#define DOLLAR	185,7110
#define DOT	186,7139
#define CARET	187,7165
#define LSQBRAC 188,7193
#define RSQBRAC 189,7223
#define LSHBRAC 190,7253
#define RSHBRAC 191,7283
#define	FAIL(192,7313
#define	ISMULT(193,7360
#define	META	194,7408
#define CHARBITS	196,7452
#define	UCHARAT(197,7474
#define	UCHARAT(199,7528
#define ISWORDPART(201,7575
#define	HASWIDTH	206,7669
#define	SIMPLE	207,7729
#define	SPSTART	208,7788
#define	WORST	209,7828
#define	STRCHR(211,7878
static short   *regparse;regparse217,7965
static int      regnpar;218,8017
static char     regdummy;219,8058
static char    *regcode;regcode220,8084
static long     regsize;221,8153
#define	STATIC	227,8267
regexp *regcomp(regcomp255,9342
static char *reg(reg387,12713
static char  *regbranch(regbranch457,14460
static char *regpiece(regpiece494,15501
static char *regatom(regatom558,16887
static char *regnode(regnode665,19108
static void regc(688,19481
static void reginsert(702,19706
static void regtail(729,20212
static void regoptail(760,20769
static char    *reginput;reginput777,21096
static char    *regbol;regbol778,21150
static char   **regstartp;regstartp779,21214
static char   **regendp;regendp780,21272
int             regnarrate 790,21437
int regexec(798,21583
static int regtry(856,22914
static int regmatch(891,23809
static int regrepeat(1090,27827
static char *regnext(regnext1136,28626
void regdump(1160,29011
static char *regprop(regprop1201,29966
char *regsub(regsub1281,31232
void regerror(1343,32692

regex/regfree.c,19
my_regfree(15,224

regex/reginit.c,89
static my_bool regex_inited=9,148
void my_regex_init(12,240
void my_regex_end(73,1954

regex/split.c,264
split(9,222
main(151,2973
#	define	MNF	157,3049
dosplit(182,3550
#	define	NF	186,3600
print(194,3718
#define	RNF	208,3966
	char *str;str210,4025
	char *seps;seps211,4037
	int nf;212,4050
	char *fi[fi213,4059
} tests[tests214,4075
regress(277,6139

scripts/comp_sql.c,89
FILE *in,in29,889
FILE *in, *out;out29,889
static void die(31,906
int main(58,1314

sql-common/client.c,7394
#undef max_allowed_packet45,1451
#undef net_buffer_length46,1477
#undef MYSQL_SERVER50,1528
#define MYSQL_CLIENT53,1570
#define CLI_MYSQL_REAL_CONNECT 56,1599
#undef net_flush58,1662
#define CLI_MYSQL_REAL_CONNECT 62,1737
#define perror(99,2534
#define SOCKET_ERROR 102,2577
#define CONNECT_TIMEOUT 106,2624
#define CONNECT_TIMEOUT 108,2657
#define native_password_plugin_name 114,2777
#define old_password_plugin_name 115,2837
uint		mysql_port=118,2896
char		*mysql_unix_port=mysql_unix_port119,2916
const char	*unknown_sqlstate=unknown_sqlstate120,2943
const char	*not_error_sqlstate=not_error_sqlstate121,2982
const char	*cant_connect_sqlstate=cant_connect_sqlstate122,3023
char		 *shared_memory_base_name=shared_memory_base_name124,3084
const char 	*def_shared_memory_base_name=def_shared_memory_base_name125,3120
CHARSET_INFO *default_client_charset_info default_client_charset_info136,3433
unsigned int mysql_server_last_errno;139,3534
char mysql_server_last_error[mysql_server_last_error140,3572
int my_connect(151,4096
static int wait_for_data(201,5462
void set_mysql_error(333,9502
void net_clear_error(361,10088
void set_mysql_extended_error(379,10577
HANDLE create_named_pipe(408,11211
HANDLE create_shared_memory(488,13850
cli_safe_read(729,21369
void free_rows(798,23395
cli_advanced_command(808,23512
void free_old_query(870,25439
my_bool flush_one_result(893,26032
my_bool opt_flush_ok_packet(938,27223
static void cli_flush_use_result(973,27907
static my_bool is_NT(1014,29149
static int check_license(1034,29615
void end_server(1076,30915
mysql_free_result(1098,31383
static const char *default_options[default_options1130,32333
enum option_id 1143,32937
  OPT_port=1144,32954
  OPT_port=1, OPT_socket,1144,32954
  OPT_port=1, OPT_socket, OPT_compress,1144,32954
  OPT_port=1, OPT_socket, OPT_compress, OPT_password,1144,32954
  OPT_port=1, OPT_socket, OPT_compress, OPT_password, OPT_pipe,1144,32954
  OPT_port=1, OPT_socket, OPT_compress, OPT_password, OPT_pipe, OPT_timeout,1144,32954
  OPT_port=1, OPT_socket, OPT_compress, OPT_password, OPT_pipe, OPT_timeout, OPT_user,1144,32954
  OPT_init_command,1145,33042
  OPT_init_command, OPT_host,1145,33042
  OPT_init_command, OPT_host, OPT_database,1145,33042
  OPT_init_command, OPT_host, OPT_database, OPT_debug,1145,33042
  OPT_init_command, OPT_host, OPT_database, OPT_debug, OPT_return_found_rows,1145,33042
  OPT_ssl_key,1146,33121
  OPT_ssl_key, OPT_ssl_cert,1146,33121
  OPT_ssl_key, OPT_ssl_cert, OPT_ssl_ca,1146,33121
  OPT_ssl_key, OPT_ssl_cert, OPT_ssl_ca, OPT_ssl_capath,1146,33121
  OPT_character_sets_dir,1147,33179
  OPT_character_sets_dir, OPT_default_character_set,1147,33179
  OPT_character_sets_dir, OPT_default_character_set, OPT_interactive_timeout,1147,33179
  OPT_connect_timeout,1148,33258
  OPT_connect_timeout, OPT_local_infile,1148,33258
  OPT_connect_timeout, OPT_local_infile, OPT_disable_local_infile,1148,33258
  OPT_ssl_cipher,1149,33326
  OPT_ssl_cipher, OPT_max_allowed_packet,1149,33326
  OPT_ssl_cipher, OPT_max_allowed_packet, OPT_protocol,1149,33326
  OPT_ssl_cipher, OPT_max_allowed_packet, OPT_protocol, OPT_shared_memory_base_name,1149,33326
  OPT_multi_results,1150,33412
  OPT_multi_results, OPT_multi_statements,1150,33412
  OPT_multi_results, OPT_multi_statements, OPT_multi_queries,1150,33412
  OPT_multi_results, OPT_multi_statements, OPT_multi_queries, OPT_secure_auth,1150,33412
  OPT_report_data_truncation,1151,33492
  OPT_report_data_truncation, OPT_plugin_dir,1151,33492
  OPT_report_data_truncation, OPT_plugin_dir, OPT_default_auth,1151,33492
  OPT_enable_cleartext_plugin,1152,33557
  OPT_keep_this_one_last1153,33588
static TYPELIB option_types=1156,33617
const char *sql_protocol_names_lib[sql_protocol_names_lib1159,33724
TYPELIB sql_protocol_typelib 1161,33809
static int add_init_command(1164,33922
#define ALLOCATE_EXTENSIONS(1185,34386
#define ENSURE_EXTENSIONS_PRESENT(1190,34655
#define EXTENSION_SET_STRING(1197,34941
void mysql_read_default_options(1207,35494
static void cli_fetch_lengths(1428,42092
unpack_fields(1455,42787
MYSQL_DATA *cli_read_rows(cli_read_rows1571,46719
read_one_row(1674,49525
mysql_init(1728,50963
#define strdup_if_not_null(1789,52918
mysql_ssl_set(1792,53007
mysql_ssl_free(1819,53941
mysql_get_ssl_cipher(1855,54845
static int ssl_verify_server_cert(1885,55669
int cli_read_change_user_result(1952,57324
static MYSQL_METHODS client_methods=1957,57406
typedef enum my_cs_match_type_enum1981,58585
  my_cs_exact,1984,58673
  my_cs_approx,1986,58739
  my_cs_unsupp1990,58844
} my_cs_match_type;1991,58859
typedef struct str2str_st1994,58881
  const char *os_name;os_name1996,58909
  const char *my_name;my_name1997,58932
  my_cs_match_type param;1998,58955
} MY_CSET_OS_NAME;1999,58981
const MY_CSET_OS_NAME charsets[charsets2001,59001
my_os_charset_to_mysql_charset(2147,64706
mysql_autodetect_character_set(2201,65945
mysql_set_character_set_with_default_collation(2225,66512
int mysql_init_character_set(2256,67409
typedef struct st_mysql_client_plugin_AUTHENTICATION auth_plugin_t;2296,68636
static auth_plugin_t native_password_client_plugin=2302,69012
static auth_plugin_t old_password_client_plugin=2318,69344
static auth_plugin_t clear_password_client_plugin=2334,69669
struct st_mysql_client_plugin *mysql_client_builtins[mysql_client_builtins2354,70068
  int (*read_packet)read_packet2369,70516
  int (*write_packet)write_packet2370,70578
  void (*info)info2371,70659
  MYSQL *mysql;mysql2373,70773
  auth_plugin_t *plugin;plugin2374,70789
  const char *db;db2375,70857
    uchar *pkt;pkt2377,70886
    uint pkt_len;2378,70953
  } cached_server_reply;2379,70971
  int packets_read,2380,70996
  int packets_read, packets_written;2380,70996
  int mysql_change_user;2381,71076
  int last_read_packet_len;2382,71148
} MCPVIO_EXT;2383,71229
static int send_change_user_packet(2404,71842
static int send_client_reply_packet(2486,74081
static int client_mpvio_read_packet(2666,80021
static int client_mpvio_write_packet(2727,81757
void mpvio_info(2761,82731
static void client_mpvio_info(2800,83660
my_bool libmysql_cleartext_plugin_enabled=2808,83860
static my_bool check_plugin_enabled(2810,83907
int run_plugin_auth(2844,85016
CLI_MYSQL_REAL_CONNECT(3007,90809
my_bool mysql_reconnect(3575,108313
mysql_select_db(3638,110411
static void mysql_close_free_options(3658,111023
static void mysql_close_free(3700,112358
static void mysql_prune_stmt_list(3730,113256
void mysql_detach_stmt_list(3770,114172
void STDCALL mysql_close(3793,114881
static my_bool cli_read_query_result(3821,115616
mysql_send_query(3900,118008
mysql_real_query(3908,118200
MYSQL_RES * STDCALL mysql_store_result(3925,118799
static MYSQL_RES * cli_use_result(3979,120717
mysql_fetch_row(4022,122095
mysql_fetch_lengths(4077,123820
mysql_options(4090,124088
my_ulonglong STDCALL mysql_num_rows(4193,127578
unsigned int STDCALL mysql_num_fields(4198,127660
uint STDCALL mysql_errno(4203,127746
const char * STDCALL mysql_error(4209,127857
mysql_get_server_version(4233,128270
int STDCALL mysql_set_character_set(4250,128886
static int native_password_auth_client(4287,129973
static int old_password_auth_client(4340,131232
static int clear_password_auth_client(4389,132413

sql-common/client_plugin.c,866
struct st_client_plugin_int 40,1346
  struct st_client_plugin_int *next;next41,1376
  void   *dlhandle;dlhandle42,1413
  struct st_mysql_client_plugin *plugin;plugin43,1433
static my_bool initialized=46,1478
static MEM_ROOT mem_root;47,1509
static const char *plugin_declarations_sym=plugin_declarations_sym49,1536
static uint plugin_version[plugin_version50,1617
struct st_client_plugin_int *plugin_list[plugin_list65,2224
static pthread_mutex_t LOCK_load_client_plugin;66,2292
static int is_not_initialized(68,2341
find_plugin(90,2898
add_plugin(120,3805
static void load_env_plugins(197,5709
int mysql_client_plugin_init(232,6515
void mysql_client_plugin_deinit(266,7257
mysql_client_register_plugin(293,7896
mysql_load_plugin_v(318,8675
mysql_load_plugin(426,11517
mysql_client_find_plugin(438,11847
int mysql_plugin_options(468,12678

sql-common/my_time.c,953
ulonglong log_10_int[log_10_int22,881
static uchar internal_format_positions[internal_format_positions34,1309
static char time_separator=37,1388
static ulong const days_at_timestart=39,1421
uchar days_in_month[days_in_month40,1492
static long my_time_zone=46,1682
uint calc_days_in_year(51,1769
my_bool check_date(78,2662
#define MAX_DATE_PARTS 157,5689
str_to_datetime(160,5746
my_bool str_to_time(484,15573
int check_time_range(684,21347
void my_init_time(713,22053
uint year_2000_handling(745,22792
long calc_daynr(768,23192
my_system_gmt_sec(814,24795
void set_zero_time(1005,31908
int my_time_to_str(1025,32489
int my_date_to_str(1032,32716
int my_datetime_to_str(1038,32875
int my_TIME_to_str(1057,33345
longlong number_to_datetime(1103,34767
ulonglong TIME_to_ulonglong_datetime(1186,37069
ulonglong TIME_to_ulonglong_date(1199,37492
ulonglong TIME_to_ulonglong_time(1212,37854
ulonglong TIME_to_ulonglong(1240,38642

sql-common/my_user.c,25
void parse_user(35,1395

sql-common/pack.c,131
ulong STDCALL net_field_length(21,843
my_ulonglong net_field_length_ll(49,1360
uchar *net_store_length(net_store_length97,2326

sql/password.c,705
void randominit(80,2896
double my_rnd(101,3485
void hash_password(119,4045
void my_make_scrambled_password_323(148,4962
void make_scrambled_password_323(168,5575
void scramble_323(186,6108
check_scramble_323(222,7224
static inline uint8 char_val(256,8328
void get_salt_from_password_323(274,8846
void make_password_from_salt_323(299,9366
void create_random_string(319,9933
#define PVERSION41_CHAR 331,10246
char *octet2hex(octet2hex346,10577
hex2octet(370,11151
my_crypt(394,11830
void my_make_scrambled_password(415,12467
void make_scrambled_password(447,13565
scramble(471,14414
check_scramble(516,16229
void get_salt_from_password(548,17367
void make_password_from_salt(561,17740

sql/sql_state.c,288
struct st_map_errno_to_sqlstate21,801
  uint mysql_errno;23,835
  const char *odbc_state;odbc_state24,855
  const char *jdbc_state;jdbc_state25,881
struct st_map_errno_to_sqlstate sqlstate_map[sqlstate_map28,911
const char *mysql_errno_to_sqlstate(mysql_errno_to_sqlstate33,988

sql/udf_example.c,1517
typedef unsigned __int64 ulonglong;120,5158
typedef __int64 longlong;121,5224
typedef unsigned long long ulonglong;123,5256
typedef long long longlong;124,5294
#define strmov(134,5521
#define bzero(135,5553
static pthread_mutex_t LOCK_hostname;149,5825
#define MAXMETAPH 217,8965
my_bool metaphon_init(219,8986
void metaphon_deinit(238,9554
static char codes[codes262,10539
#define ISVOWEL(269,10757
#define NOCHANGE(272,10857
#define AFFECTH(275,10963
#define MAKESOFT(278,11052
#define NOGHTOF(281,11149
char *metaphon(metaphon284,11205
my_bool myfunc_double_init(536,17325
double myfunc_double(558,17900
longlong myfunc_int(597,19094
my_bool myfunc_int_init(629,19917
my_bool sequence_init(641,20249
void sequence_deinit(665,20852
longlong sequence(671,20938
my_bool lookup_init(718,22591
void lookup_deinit(733,23026
char *lookup(lookup740,23222
my_bool reverse_lookup_init(792,24759
void reverse_lookup_deinit(813,25360
char *reverse_lookup(reverse_lookup820,25564
struct avgcost_data899,27682
  ulonglong	count;901,27704
  longlong	totalquantity;902,27723
  double	totalprice;903,27749
avgcost_init(911,27825
avgcost_deinit(957,28820
avgcost_reset(965,28932
avgcost_clear(974,29179
avgcost_add(985,29449
avgcost(1033,30689
my_bool myfunc_argument_name_init(1053,31278
char *myfunc_argument_name(myfunc_argument_name1067,31609
my_bool is_const_init(1087,32182
char * is_const(1098,32438
my_bool check_const_len_init(1114,32811
char * check_const_len(1137,33282

strings/bchange.c,22
void bchange(30,1074

strings/bmove_upp.c,24
void bmove_upp(28,1030

strings/conf_to_src.c,490
#define ROW_LEN	23,883
#define ROW16_LEN	24,903
#define MAX_BUF	25,923
static CHARSET_INFO all_charsets[all_charsets27,949
print_array(31,995
print_array16(48,1322
static int get_charset_number(64,1652
char *mdup(mdup77,1929
static void simple_cs_copy_data(86,2066
static my_bool simple_cs_is_full(120,3001
static int add_collation(128,3235
static int my_read_charset_file(148,3631
is_case_sensitive(178,4160
void dispcset(186,4344
fprint_copyright(253,7751
main(275,8614

strings/ctype-big5.c,2068
#define isbig5head(41,1297
#define isbig5tail(42,1358
#define isbig5code(45,1488
#define big5code(46,1545
#define big5head(47,1601
#define big5tail(48,1637
static uchar ctype_big5[ctype_big550,1676
static uchar to_lower_big5[to_lower_big571,2418
static uchar to_upper_big5[to_upper_big5107,5298
static uchar sort_order_big5[sort_order_big5143,8178
static MY_UNICASE_INFO cA2[cA2180,11061
static MY_UNICASE_INFO cA3[cA3373,16352
static MY_UNICASE_INFO cC7[cC7566,21643
static MY_UNICASE_INFO *my_caseinfo_big5[my_caseinfo_big5759,26935
static uint16 big5strokexfrm(796,28717
static int my_strnncoll_big5_internal(839,32195
static int my_strnncoll_big5(868,32817
static int my_strnncollsp_big5(881,33260
static size_t my_strnxfrm_big5(921,34373
static int my_strcoll_big5(949,35076
static int my_strxfrm_big5(968,35598
static uint ismbchar_big5(997,36111
static uint mbcharlen_big5(1004,36312
static uint16 tab_big5_uni0[tab_big5_uni01011,36455
static uint16 tab_big5_uni1[tab_big5_uni12254,107175
static int func_big5_uni_onechar(3812,195880
static uint16 tab_uni_big50[tab_uni_big503822,196124
static uint16 tab_uni_big51[tab_uni_big513836,196798
static uint16 tab_uni_big52[tab_uni_big523889,199674
static uint16 tab_uni_big53[tab_uni_big533978,204616
static uint16 tab_uni_big54[tab_uni_big544042,208119
static uint16 tab_uni_big55[tab_uni_big554083,210304
static uint16 tab_uni_big56[tab_uni_big564087,210373
static uint16 tab_uni_big57[tab_uni_big574100,210948
static uint16 tab_uni_big58[tab_uni_big586360,339630
static uint16 tab_uni_big59[tab_uni_big596689,358259
static uint16 tab_uni_big510[tab_uni_big5106693,358336
static int func_uni_big5_onechar(6753,361663
my_wc_mb_big5(6781,362594
my_mb_wc_big5(6810,362995
size_t my_well_formed_len_big5(6840,363477
static MY_COLLATION_HANDLER my_collation_big5_chinese_ci_handler 6871,364133
static MY_CHARSET_HANDLER my_charset_big5_handler=6886,364433
CHARSET_INFO my_charset_big5_chinese_ci=6917,365059
CHARSET_INFO my_charset_big5_bin=6950,366017

strings/ctype-bin.c,1030
static uchar ctype_bin[ctype_bin25,946
static uchar bin_char_array[bin_char_array49,2084
my_coll_init_8bit_bin(71,3210
static int my_strnncoll_binary(78,3367
size_t my_lengthsp_binary(89,3739
static int my_strnncollsp_binary(119,4373
static int my_strnncoll_8bit_bin(129,4761
static int my_strnncollsp_8bit_bin(165,5760
static size_t my_case_str_bin(214,7028
static size_t my_case_bin(221,7183
static int my_strcasecmp_bin(231,7502
uint my_mbcharlen_8bit(238,7640
static int my_mb_wc_bin(245,7777
static int my_wc_mb_bin(258,8005
void my_hash_sort_8bit_bin(275,8265
void my_hash_sort_bin(296,8777
#define likeconv(317,9211
#define INC_PTR(318,9237
int my_wildcmp_bin(321,9269
static size_t my_strnxfrm_bin(399,11259
size_t my_strnxfrm_8bit_bin(412,11613
uint my_instr_bin(425,11963
MY_COLLATION_HANDLER my_collation_8bit_bin_handler 485,13103
static MY_COLLATION_HANDLER my_collation_binary_handler 501,13415
static MY_CHARSET_HANDLER my_charset_handler=517,13714
CHARSET_INFO my_charset_bin 549,14338

strings/ctype.c,1831
static char *mstr(mstr43,1313
struct my_cs_file_section_st51,1458
  int        state;53,1489
  const char *str;str54,1509
#define _CS_MISC	57,1532
#define _CS_ID	58,1551
#define _CS_CSNAME	59,1569
#define _CS_FAMILY	60,1590
#define _CS_ORDER	61,1611
#define _CS_COLNAME	62,1631
#define _CS_FLAG	63,1653
#define _CS_CHARSET	64,1672
#define _CS_COLLATION	65,1694
#define _CS_UPPERMAP	66,1718
#define _CS_LOWERMAP	67,1742
#define _CS_UNIMAP	68,1766
#define _CS_COLLMAP	69,1788
#define _CS_CTYPEMAP	70,1811
#define _CS_PRIMARY_ID	71,1835
#define _CS_BINARY_ID	72,1861
#define _CS_CSDESCRIPT	73,1886
#define _CS_RESET	74,1912
#define	_CS_DIFF1	75,1933
#define	_CS_DIFF2	76,1954
#define	_CS_DIFF3	77,1975
#define	_CS_IDENTICAL	78,1996
static struct my_cs_file_section_st sec[sec81,2023
static struct my_cs_file_section_st * cs_file_sec(117,3484
#define MY_CS_CSDESCR_SIZE	128,3705
#define MY_CS_TAILORING_SIZE	129,3735
typedef struct my_cs_file_info131,3770
  char   csname[csname133,3803
  char   name[name134,3837
  uchar  ctype[ctype135,3869
  uchar  to_lower[to_lower136,3909
  uchar  to_upper[to_upper137,3955
  uchar  sort_order[sort_order138,4001
  uint16 tab_to_uni[tab_to_uni139,4051
  char   comment[comment140,4097
  char   tailoring[tailoring141,4135
  size_t tailoring_length;142,4177
  CHARSET_INFO cs;143,4204
  int (*add_collation)add_collation144,4223
} MY_CHARSET_LOADER;145,4265
static int fill_uchar(149,4289
static int fill_uint16(166,4659
static int cs_enter(184,5032
static int cs_leave(199,5401
static int cs_value(217,5814
my_bool my_parse_charset_xml(297,8190
my_string_repertoire(320,8768
uint my_charset_repertoire(350,9331
my_charset_is_ascii_based(384,10321
my_charset_is_8bit_pure_ascii(400,10722
my_charset_is_ascii_compatible(420,11084

strings/ctype-cp932.c,1428
static uchar ctype_cp932[ctype_cp93234,1141
static uchar to_lower_cp932[to_lower_cp93271,3222
static uchar to_upper_cp932[to_upper_cp932107,6102
static uchar sort_order_cp932[sort_order_cp932143,8982
#define iscp932head(179,11864
#define iscp932tail(181,11969
static uint ismbchar_cp932(185,12074
static uint mbcharlen_cp932(191,12264
#define cp932code(197,12390
static MY_UNICASE_INFO c81[c81200,12465
static MY_UNICASE_INFO c82[c82410,18239
static MY_UNICASE_INFO c83[c83618,23989
static MY_UNICASE_INFO c84[c84828,29701
static MY_UNICASE_INFO c87[c871038,35413
static MY_UNICASE_INFO cEE[cEE1248,41125
static MY_UNICASE_INFO cFA[cFA1459,46840
static MY_UNICASE_INFO *my_caseinfo_cp932[my_caseinfo_cp9321669,52552
static int my_strnncoll_cp932_internal(1706,54333
static int my_strnncoll_cp932(1738,55135
static int my_strnncollsp_cp932(1750,55537
static size_t my_strnxfrm_cp932(1792,56733
static uint16 cp932_to_unicode[cp932_to_unicode1815,57327
static uint16 unicode_to_cp932[unicode_to_cp93218204,948253
my_mb_wc_cp932(34620,1840063
my_wc_mb_cp932(34664,1841220
size_t my_numcells_cp932(34704,1842026
size_t my_well_formed_len_cp932(34738,1842604
static MY_COLLATION_HANDLER my_collation_ci_handler 34777,1843430
static MY_CHARSET_HANDLER my_charset_handler=34793,1843738
CHARSET_INFO my_charset_cp932_japanese_ci=34825,1844354
CHARSET_INFO my_charset_cp932_bin=34857,1845290

strings/ctype-czech.c,1320
#define SKIP_TRAILING_SPACES 62,2436
#define REAL_MYSQL64,2468
#define uchar 75,2600
static uchar *CZ_SORT_TABLE[CZ_SORT_TABLE86,2781
struct wordvalue99,7123
	  const char * word;101,7143
	  uchar *outvalue;outvalue102,7165
static struct wordvalue doubles[doubles104,7189
#define ADD_TO_RESULT(167,9083
#define IS_END(169,9195
#define NEXT_CMP_VALUE(171,9261
static int my_strnncoll_czech(242,11177
int my_strnncollsp_czech(276,11877
static size_t my_strnxfrm_czech(293,12417
#undef IS_END314,12936
#define min_sort_char 358,14261
#define max_sort_char 359,14287
#define EXAMPLE361,14314
static my_bool my_like_range_czech(363,14331
static uchar ctype_czech[ctype_czech433,15978
static uchar to_lower_czech[to_lower_czech453,17059
static uchar to_upper_czech[to_upper_czech472,18137
static uchar sort_order_czech[sort_order_czech491,19215
static uint16 tab_8859_2_uni[tab_8859_2_uni510,20295
static uchar tab_uni_8859_2_plane00[tab_uni_8859_2_plane00547,22187
static uchar tab_uni_8859_2_plane01[tab_uni_8859_2_plane01566,23543
static uchar tab_uni_8859_2_plane02[tab_uni_8859_2_plane02577,24246
static MY_UNI_IDX idx_uni_8859_2[idx_uni_8859_2581,24405
static MY_COLLATION_HANDLER my_collation_latin2_czech_ci_handler 589,24586
CHARSET_INFO my_charset_latin2_czech_ci 604,24899

strings/ctype-eucjpms.c,1767
static uchar ctype_eucjpms[ctype_eucjpms36,1151
static uchar to_lower_eucjpms[to_lower_eucjpms73,3235
static uchar to_upper_eucjpms[to_upper_eucjpms109,6117
static uchar sort_order_eucjpms[sort_order_eucjpms145,8999
#define iseucjpms(182,11894
#define iskata(183,11960
#define iseucjpms_ss2(184,12023
#define iseucjpms_ss3(185,12069
static uint ismbchar_eucjpms(188,12117
static uint mbcharlen_eucjpms(198,12481
static MY_UNICASE_INFO cA2[cA2207,12684
static MY_UNICASE_INFO cA3[cA3328,16738
static MY_UNICASE_INFO cA6[cA6449,20790
static MY_UNICASE_INFO cA7[cA7570,24842
static MY_UNICASE_INFO cAD[cAD691,28894
static MY_UNICASE_INFO c8FA6[c8FA6814,33010
static MY_UNICASE_INFO c8FA7[c8FA7935,37458
static MY_UNICASE_INFO c8FA9[c8FA91056,41908
static MY_UNICASE_INFO c8FAA[c8FAA1177,46354
static MY_UNICASE_INFO c8FAB[c8FAB1298,50800
static MY_UNICASE_INFO c8FF3[c8FF31419,55250
static MY_UNICASE_INFO c8FF4[c8FF41540,59700
static MY_UNICASE_INFO *my_caseinfo_eucjpms[my_caseinfo_eucjpms1661,64150
static uint16 jisx0208_eucjpms_to_unicode[jisx0208_eucjpms_to_unicode1733,67701
static uint16 unicode_to_jisx0208_eucjpms[unicode_to_jisx0208_eucjpms18122,958638
static uint16 jisx0212_eucjpms_to_unicode[jisx0212_eucjpms_to_unicode34511,1849575
static uint16 unicode_to_jisx0212_eucjpms[unicode_to_jisx0212_eucjpms50900,2740512
my_mb_wc_eucjpms(67306,3632176
my_wc_mb_eucjpms(67366,3633853
size_t my_well_formed_len_eucjpms(67421,3635000
size_t my_numcells_eucjpms(67469,3636203
static MY_COLLATION_HANDLER my_collation_ci_handler 67503,3636727
static MY_CHARSET_HANDLER my_charset_handler=67518,3637118
CHARSET_INFO my_charset_eucjpms_japanese_ci=67551,3637820
CHARSET_INFO my_charset_eucjpms_bin=67584,3638769

strings/ctype-euc_kr.c,2002
static uchar ctype_euc_kr[ctype_euc_kr35,1122
static uchar to_lower_euc_kr[to_lower_euc_kr72,3205
static uchar to_upper_euc_kr[to_upper_euc_kr108,6087
static uchar sort_order_euc_kr[sort_order_euc_kr144,8969
#define iseuc_kr_head(194,12220
#define iseuc_kr_tail1(196,12291
#define iseuc_kr_tail2(197,12365
#define iseuc_kr_tail3(198,12439
#define iseuc_kr_tail(200,12514
static uint ismbchar_euc_kr(205,12671
static uint mbcharlen_euc_kr(213,12928
static MY_UNICASE_INFO cA3[cA3219,13049
static MY_UNICASE_INFO cA5[cA5424,18792
static MY_UNICASE_INFO cA7[cA7629,24536
static MY_UNICASE_INFO cA8[cA8834,30279
static MY_UNICASE_INFO cA9[cA91039,36022
static MY_UNICASE_INFO cAC[cAC1244,41783
static MY_UNICASE_INFO *my_caseinfo_euckr[my_caseinfo_euckr1449,47526
static uint16 tab_ksc5601_uni0[tab_ksc5601_uni01487,49335
static uint16 tab_ksc5601_uni1[tab_ksc5601_uni13786,180257
static int func_ksc5601_uni_onechar(5432,273988
static uint16 tab_uni_ksc56010[tab_uni_ksc560105440,274239
static uint16 tab_uni_ksc56011[tab_uni_ksc560115468,275721
static uint16 tab_uni_ksc56012[tab_uni_ksc560125521,278600
static uint16 tab_uni_ksc56013[tab_uni_ksc560135620,284122
static uint16 tab_uni_ksc56014[tab_uni_ksc560145689,287934
static uint16 tab_uni_ksc56015[tab_uni_ksc560155773,292559
static uint16 tab_uni_ksc56016[tab_uni_ksc560165788,293293
static uint16 tab_uni_ksc56017[tab_uni_ksc560178048,421950
static uint16 tab_uni_ksc56018[tab_uni_ksc560188376,440525
static uint16 tab_uni_ksc56019[tab_uni_ksc560199776,520190
static uint16 tab_uni_ksc560110[tab_uni_ksc5601109813,522165
static int func_uni_ksc5601_onechar(9844,523842
my_wc_mb_euc_kr(9872,524809
my_mb_wc_euc_kr(9900,525214
my_well_formed_len_euckr(9929,525651
static MY_COLLATION_HANDLER my_collation_ci_handler 9960,526293
static MY_CHARSET_HANDLER my_charset_handler=9975,526659
CHARSET_INFO my_charset_euckr_korean_ci=10007,527408
CHARSET_INFO my_charset_euckr_bin=10040,528362

strings/ctype-extra.c,35553
uchar ctype_dec8_swedish_ci[ctype_dec8_swedish_ci28,1073
uchar to_lower_dec8_swedish_ci[to_lower_dec8_swedish_ci48,2412
uchar to_upper_dec8_swedish_ci[to_upper_dec8_swedish_ci67,3748
uchar sort_order_dec8_swedish_ci[sort_order_dec8_swedish_ci86,5084
uint16 to_uni_dec8_swedish_ci[to_uni_dec8_swedish_ci105,6422
uchar ctype_cp850_general_ci[ctype_cp850_general_ci143,8319
uchar to_lower_cp850_general_ci[to_lower_cp850_general_ci163,9659
uchar to_upper_cp850_general_ci[to_upper_cp850_general_ci182,10996
uchar sort_order_cp850_general_ci[sort_order_cp850_general_ci201,12333
uint16 to_uni_cp850_general_ci[to_uni_cp850_general_ci220,13672
uchar ctype_latin1_german1_ci[ctype_latin1_german1_ci258,15571
uchar to_lower_latin1_german1_ci[to_lower_latin1_german1_ci278,16912
uchar to_upper_latin1_german1_ci[to_upper_latin1_german1_ci297,18250
uchar sort_order_latin1_german1_ci[sort_order_latin1_german1_ci316,19588
uint16 to_uni_latin1_german1_ci[to_uni_latin1_german1_ci335,20928
uchar ctype_hp8_english_ci[ctype_hp8_english_ci373,22825
uchar to_lower_hp8_english_ci[to_lower_hp8_english_ci393,24163
uchar to_upper_hp8_english_ci[to_upper_hp8_english_ci412,25498
uchar sort_order_hp8_english_ci[sort_order_hp8_english_ci431,26833
uint16 to_uni_hp8_english_ci[to_uni_hp8_english_ci450,28170
uchar ctype_koi8r_general_ci[ctype_koi8r_general_ci488,30066
uchar to_lower_koi8r_general_ci[to_lower_koi8r_general_ci508,31406
uchar to_upper_koi8r_general_ci[to_upper_koi8r_general_ci527,32743
uchar sort_order_koi8r_general_ci[sort_order_koi8r_general_ci546,34080
uint16 to_uni_koi8r_general_ci[to_uni_koi8r_general_ci565,35419
uchar ctype_latin2_general_ci[ctype_latin2_general_ci603,37318
uchar to_lower_latin2_general_ci[to_lower_latin2_general_ci623,38659
uchar to_upper_latin2_general_ci[to_upper_latin2_general_ci642,39997
uchar sort_order_latin2_general_ci[sort_order_latin2_general_ci661,41335
uint16 to_uni_latin2_general_ci[to_uni_latin2_general_ci680,42675
uchar ctype_swe7_swedish_ci[ctype_swe7_swedish_ci718,44573
uchar to_lower_swe7_swedish_ci[to_lower_swe7_swedish_ci738,45912
uchar to_upper_swe7_swedish_ci[to_upper_swe7_swedish_ci757,47248
uchar sort_order_swe7_swedish_ci[sort_order_swe7_swedish_ci776,48584
uint16 to_uni_swe7_swedish_ci[to_uni_swe7_swedish_ci795,49922
uchar ctype_ascii_general_ci[ctype_ascii_general_ci833,51819
uchar to_lower_ascii_general_ci[to_lower_ascii_general_ci853,53159
uchar to_upper_ascii_general_ci[to_upper_ascii_general_ci872,54496
uchar sort_order_ascii_general_ci[sort_order_ascii_general_ci891,55833
uint16 to_uni_ascii_general_ci[to_uni_ascii_general_ci910,57172
uchar ctype_cp1251_bulgarian_ci[ctype_cp1251_bulgarian_ci948,59071
uchar to_lower_cp1251_bulgarian_ci[to_lower_cp1251_bulgarian_ci968,60414
uchar to_upper_cp1251_bulgarian_ci[to_upper_cp1251_bulgarian_ci987,61754
uchar sort_order_cp1251_bulgarian_ci[sort_order_cp1251_bulgarian_ci1006,63094
uint16 to_uni_cp1251_bulgarian_ci[to_uni_cp1251_bulgarian_ci1025,64436
uchar ctype_latin1_danish_ci[ctype_latin1_danish_ci1063,66338
uchar to_lower_latin1_danish_ci[to_lower_latin1_danish_ci1083,67678
uchar to_upper_latin1_danish_ci[to_upper_latin1_danish_ci1102,69015
uchar sort_order_latin1_danish_ci[sort_order_latin1_danish_ci1121,70352
uint16 to_uni_latin1_danish_ci[to_uni_latin1_danish_ci1140,71691
uchar ctype_hebrew_general_ci[ctype_hebrew_general_ci1178,73590
uchar to_lower_hebrew_general_ci[to_lower_hebrew_general_ci1198,74931
uchar to_upper_hebrew_general_ci[to_upper_hebrew_general_ci1217,76269
uchar sort_order_hebrew_general_ci[sort_order_hebrew_general_ci1236,77607
uint16 to_uni_hebrew_general_ci[to_uni_hebrew_general_ci1255,78947
uchar ctype_latin7_estonian_cs[ctype_latin7_estonian_cs1293,80847
uchar to_lower_latin7_estonian_cs[to_lower_latin7_estonian_cs1313,82189
uchar to_upper_latin7_estonian_cs[to_upper_latin7_estonian_cs1332,83528
uchar sort_order_latin7_estonian_cs[sort_order_latin7_estonian_cs1351,84867
uint16 to_uni_latin7_estonian_cs[to_uni_latin7_estonian_cs1370,86208
uchar ctype_latin2_hungarian_ci[ctype_latin2_hungarian_ci1408,88109
uchar to_lower_latin2_hungarian_ci[to_lower_latin2_hungarian_ci1428,89452
uchar to_upper_latin2_hungarian_ci[to_upper_latin2_hungarian_ci1447,90792
uchar sort_order_latin2_hungarian_ci[sort_order_latin2_hungarian_ci1466,92132
uint16 to_uni_latin2_hungarian_ci[to_uni_latin2_hungarian_ci1485,93474
uchar ctype_koi8u_general_ci[ctype_koi8u_general_ci1523,95375
uchar to_lower_koi8u_general_ci[to_lower_koi8u_general_ci1543,96715
uchar to_upper_koi8u_general_ci[to_upper_koi8u_general_ci1562,98052
uchar sort_order_koi8u_general_ci[sort_order_koi8u_general_ci1581,99389
uint16 to_uni_koi8u_general_ci[to_uni_koi8u_general_ci1600,100728
uchar ctype_cp1251_ukrainian_ci[ctype_cp1251_ukrainian_ci1638,102627
uchar to_lower_cp1251_ukrainian_ci[to_lower_cp1251_ukrainian_ci1658,103970
uchar to_upper_cp1251_ukrainian_ci[to_upper_cp1251_ukrainian_ci1677,105310
uchar sort_order_cp1251_ukrainian_ci[sort_order_cp1251_ukrainian_ci1696,106650
uint16 to_uni_cp1251_ukrainian_ci[to_uni_cp1251_ukrainian_ci1715,107992
uchar ctype_greek_general_ci[ctype_greek_general_ci1753,109893
uchar to_lower_greek_general_ci[to_lower_greek_general_ci1773,111233
uchar to_upper_greek_general_ci[to_upper_greek_general_ci1792,112570
uchar sort_order_greek_general_ci[sort_order_greek_general_ci1811,113907
uint16 to_uni_greek_general_ci[to_uni_greek_general_ci1830,115246
uchar ctype_cp1250_general_ci[ctype_cp1250_general_ci1868,117145
uchar to_lower_cp1250_general_ci[to_lower_cp1250_general_ci1888,118486
uchar to_upper_cp1250_general_ci[to_upper_cp1250_general_ci1907,119824
uchar sort_order_cp1250_general_ci[sort_order_cp1250_general_ci1926,121162
uint16 to_uni_cp1250_general_ci[to_uni_cp1250_general_ci1945,122502
uchar ctype_latin2_croatian_ci[ctype_latin2_croatian_ci1983,124402
uchar to_lower_latin2_croatian_ci[to_lower_latin2_croatian_ci2003,125744
uchar to_upper_latin2_croatian_ci[to_upper_latin2_croatian_ci2022,127083
uchar sort_order_latin2_croatian_ci[sort_order_latin2_croatian_ci2041,128422
uint16 to_uni_latin2_croatian_ci[to_uni_latin2_croatian_ci2060,129763
uchar ctype_cp1257_lithuanian_ci[ctype_cp1257_lithuanian_ci2098,131664
uchar to_lower_cp1257_lithuanian_ci[to_lower_cp1257_lithuanian_ci2118,133008
uchar to_upper_cp1257_lithuanian_ci[to_upper_cp1257_lithuanian_ci2137,134349
uchar sort_order_cp1257_lithuanian_ci[sort_order_cp1257_lithuanian_ci2156,135690
uint16 to_uni_cp1257_lithuanian_ci[to_uni_cp1257_lithuanian_ci2175,137033
uchar ctype_latin5_turkish_ci[ctype_latin5_turkish_ci2213,138936
uchar to_lower_latin5_turkish_ci[to_lower_latin5_turkish_ci2233,140277
uchar to_upper_latin5_turkish_ci[to_upper_latin5_turkish_ci2252,141615
uchar sort_order_latin5_turkish_ci[sort_order_latin5_turkish_ci2271,142953
uint16 to_uni_latin5_turkish_ci[to_uni_latin5_turkish_ci2290,144293
uchar ctype_armscii8_general_ci[ctype_armscii8_general_ci2328,146195
uchar to_lower_armscii8_general_ci[to_lower_armscii8_general_ci2348,147538
uchar to_upper_armscii8_general_ci[to_upper_armscii8_general_ci2367,148878
uchar sort_order_armscii8_general_ci[sort_order_armscii8_general_ci2386,150218
uint16 to_uni_armscii8_general_ci[to_uni_armscii8_general_ci2405,151560
uchar ctype_cp866_general_ci[ctype_cp866_general_ci2443,153461
uchar to_lower_cp866_general_ci[to_lower_cp866_general_ci2463,154801
uchar to_upper_cp866_general_ci[to_upper_cp866_general_ci2482,156138
uchar sort_order_cp866_general_ci[sort_order_cp866_general_ci2501,157475
uint16 to_uni_cp866_general_ci[to_uni_cp866_general_ci2520,158814
uchar ctype_keybcs2_general_ci[ctype_keybcs2_general_ci2558,160714
uchar to_lower_keybcs2_general_ci[to_lower_keybcs2_general_ci2578,162056
uchar to_upper_keybcs2_general_ci[to_upper_keybcs2_general_ci2597,163395
uchar sort_order_keybcs2_general_ci[sort_order_keybcs2_general_ci2616,164734
uint16 to_uni_keybcs2_general_ci[to_uni_keybcs2_general_ci2635,166075
uchar ctype_macce_general_ci[ctype_macce_general_ci2673,167975
uchar to_lower_macce_general_ci[to_lower_macce_general_ci2693,169315
uchar to_upper_macce_general_ci[to_upper_macce_general_ci2712,170652
uchar sort_order_macce_general_ci[sort_order_macce_general_ci2731,171989
uint16 to_uni_macce_general_ci[to_uni_macce_general_ci2750,173328
uchar ctype_macroman_general_ci[ctype_macroman_general_ci2788,175229
uchar to_lower_macroman_general_ci[to_lower_macroman_general_ci2808,176572
uchar to_upper_macroman_general_ci[to_upper_macroman_general_ci2827,177912
uchar sort_order_macroman_general_ci[sort_order_macroman_general_ci2846,179252
uint16 to_uni_macroman_general_ci[to_uni_macroman_general_ci2865,180594
uchar ctype_cp852_general_ci[ctype_cp852_general_ci2903,182495
uchar to_lower_cp852_general_ci[to_lower_cp852_general_ci2923,183835
uchar to_upper_cp852_general_ci[to_upper_cp852_general_ci2942,185172
uchar sort_order_cp852_general_ci[sort_order_cp852_general_ci2961,186509
uint16 to_uni_cp852_general_ci[to_uni_cp852_general_ci2980,187848
uchar ctype_latin7_general_ci[ctype_latin7_general_ci3018,189747
uchar to_lower_latin7_general_ci[to_lower_latin7_general_ci3038,191088
uchar to_upper_latin7_general_ci[to_upper_latin7_general_ci3057,192426
uchar sort_order_latin7_general_ci[sort_order_latin7_general_ci3076,193764
uint16 to_uni_latin7_general_ci[to_uni_latin7_general_ci3095,195104
uchar ctype_latin7_general_cs[ctype_latin7_general_cs3133,197004
uchar to_lower_latin7_general_cs[to_lower_latin7_general_cs3153,198345
uchar to_upper_latin7_general_cs[to_upper_latin7_general_cs3172,199683
uchar sort_order_latin7_general_cs[sort_order_latin7_general_cs3191,201021
uint16 to_uni_latin7_general_cs[to_uni_latin7_general_cs3210,202361
uchar ctype_macce_bin[ctype_macce_bin3248,204260
uchar to_lower_macce_bin[to_lower_macce_bin3268,205593
uchar to_upper_macce_bin[to_upper_macce_bin3287,206923
uint16 to_uni_macce_bin[to_uni_macce_bin3306,208253
uchar ctype_cp1250_croatian_ci[ctype_cp1250_croatian_ci3344,210145
uchar to_lower_cp1250_croatian_ci[to_lower_cp1250_croatian_ci3364,211487
uchar to_upper_cp1250_croatian_ci[to_upper_cp1250_croatian_ci3383,212826
uchar sort_order_cp1250_croatian_ci[sort_order_cp1250_croatian_ci3402,214165
uint16 to_uni_cp1250_croatian_ci[to_uni_cp1250_croatian_ci3421,215506
uchar ctype_latin1_general_ci[ctype_latin1_general_ci3459,217407
uchar to_lower_latin1_general_ci[to_lower_latin1_general_ci3479,218748
uchar to_upper_latin1_general_ci[to_upper_latin1_general_ci3498,220086
uchar sort_order_latin1_general_ci[sort_order_latin1_general_ci3517,221424
uint16 to_uni_latin1_general_ci[to_uni_latin1_general_ci3536,222764
uchar ctype_latin1_general_cs[ctype_latin1_general_cs3574,224664
uchar to_lower_latin1_general_cs[to_lower_latin1_general_cs3594,226005
uchar to_upper_latin1_general_cs[to_upper_latin1_general_cs3613,227343
uchar sort_order_latin1_general_cs[sort_order_latin1_general_cs3632,228681
uint16 to_uni_latin1_general_cs[to_uni_latin1_general_cs3651,230021
uchar ctype_cp1251_bin[ctype_cp1251_bin3689,231921
uchar to_lower_cp1251_bin[to_lower_cp1251_bin3709,233255
uchar to_upper_cp1251_bin[to_upper_cp1251_bin3728,234586
uint16 to_uni_cp1251_bin[to_uni_cp1251_bin3747,235917
uchar ctype_cp1251_general_ci[ctype_cp1251_general_ci3785,237810
uchar to_lower_cp1251_general_ci[to_lower_cp1251_general_ci3805,239151
uchar to_upper_cp1251_general_ci[to_upper_cp1251_general_ci3824,240489
uchar sort_order_cp1251_general_ci[sort_order_cp1251_general_ci3843,241827
uint16 to_uni_cp1251_general_ci[to_uni_cp1251_general_ci3862,243167
uchar ctype_cp1251_general_cs[ctype_cp1251_general_cs3900,245067
uchar to_lower_cp1251_general_cs[to_lower_cp1251_general_cs3920,246408
uchar to_upper_cp1251_general_cs[to_upper_cp1251_general_cs3939,247746
uchar sort_order_cp1251_general_cs[sort_order_cp1251_general_cs3958,249084
uint16 to_uni_cp1251_general_cs[to_uni_cp1251_general_cs3977,250424
uchar ctype_macroman_bin[ctype_macroman_bin4015,252326
uchar to_lower_macroman_bin[to_lower_macroman_bin4035,253662
uchar to_upper_macroman_bin[to_upper_macroman_bin4054,254995
uint16 to_uni_macroman_bin[to_uni_macroman_bin4073,256328
uchar ctype_cp1256_general_ci[ctype_cp1256_general_ci4111,258223
uchar to_lower_cp1256_general_ci[to_lower_cp1256_general_ci4131,259564
uchar to_upper_cp1256_general_ci[to_upper_cp1256_general_ci4150,260902
uchar sort_order_cp1256_general_ci[sort_order_cp1256_general_ci4169,262240
uint16 to_uni_cp1256_general_ci[to_uni_cp1256_general_ci4188,263580
uchar ctype_cp1257_bin[ctype_cp1257_bin4226,265480
uchar to_lower_cp1257_bin[to_lower_cp1257_bin4246,266814
uchar to_upper_cp1257_bin[to_upper_cp1257_bin4265,268145
uint16 to_uni_cp1257_bin[to_uni_cp1257_bin4284,269476
uchar ctype_cp1257_general_ci[ctype_cp1257_general_ci4322,271369
uchar to_lower_cp1257_general_ci[to_lower_cp1257_general_ci4342,272710
uchar to_upper_cp1257_general_ci[to_upper_cp1257_general_ci4361,274048
uchar sort_order_cp1257_general_ci[sort_order_cp1257_general_ci4380,275386
uint16 to_uni_cp1257_general_ci[to_uni_cp1257_general_ci4399,276726
uchar ctype_armscii8_bin[ctype_armscii8_bin4437,278628
uchar to_lower_armscii8_bin[to_lower_armscii8_bin4457,279964
uchar to_upper_armscii8_bin[to_upper_armscii8_bin4476,281297
uint16 to_uni_armscii8_bin[to_uni_armscii8_bin4495,282630
uchar ctype_ascii_bin[ctype_ascii_bin4533,284524
uchar to_lower_ascii_bin[to_lower_ascii_bin4553,285857
uchar to_upper_ascii_bin[to_upper_ascii_bin4572,287187
uint16 to_uni_ascii_bin[to_uni_ascii_bin4591,288517
uchar ctype_cp1250_bin[ctype_cp1250_bin4629,290409
uchar to_lower_cp1250_bin[to_lower_cp1250_bin4649,291743
uchar to_upper_cp1250_bin[to_upper_cp1250_bin4668,293074
uint16 to_uni_cp1250_bin[to_uni_cp1250_bin4687,294405
uchar ctype_cp1256_bin[ctype_cp1256_bin4725,296298
uchar to_lower_cp1256_bin[to_lower_cp1256_bin4745,297632
uchar to_upper_cp1256_bin[to_upper_cp1256_bin4764,298963
uint16 to_uni_cp1256_bin[to_uni_cp1256_bin4783,300294
uchar ctype_cp866_bin[ctype_cp866_bin4821,302186
uchar to_lower_cp866_bin[to_lower_cp866_bin4841,303519
uchar to_upper_cp866_bin[to_upper_cp866_bin4860,304849
uint16 to_uni_cp866_bin[to_uni_cp866_bin4879,306179
uchar ctype_dec8_bin[ctype_dec8_bin4917,308069
uchar to_lower_dec8_bin[to_lower_dec8_bin4937,309401
uchar to_upper_dec8_bin[to_upper_dec8_bin4956,310730
uint16 to_uni_dec8_bin[to_uni_dec8_bin4975,312059
uchar ctype_greek_bin[ctype_greek_bin5013,313949
uchar to_lower_greek_bin[to_lower_greek_bin5033,315282
uchar to_upper_greek_bin[to_upper_greek_bin5052,316612
uint16 to_uni_greek_bin[to_uni_greek_bin5071,317942
uchar ctype_hebrew_bin[ctype_hebrew_bin5109,319834
uchar to_lower_hebrew_bin[to_lower_hebrew_bin5129,321168
uchar to_upper_hebrew_bin[to_upper_hebrew_bin5148,322499
uint16 to_uni_hebrew_bin[to_uni_hebrew_bin5167,323830
uchar ctype_hp8_bin[ctype_hp8_bin5205,325720
uchar to_lower_hp8_bin[to_lower_hp8_bin5225,327051
uchar to_upper_hp8_bin[to_upper_hp8_bin5244,328379
uint16 to_uni_hp8_bin[to_uni_hp8_bin5263,329707
uchar ctype_keybcs2_bin[ctype_keybcs2_bin5301,331598
uchar to_lower_keybcs2_bin[to_lower_keybcs2_bin5321,332933
uchar to_upper_keybcs2_bin[to_upper_keybcs2_bin5340,334265
uint16 to_uni_keybcs2_bin[to_uni_keybcs2_bin5359,335597
uchar ctype_koi8r_bin[ctype_koi8r_bin5397,337490
uchar to_lower_koi8r_bin[to_lower_koi8r_bin5417,338823
uchar to_upper_koi8r_bin[to_upper_koi8r_bin5436,340153
uint16 to_uni_koi8r_bin[to_uni_koi8r_bin5455,341483
uchar ctype_koi8u_bin[ctype_koi8u_bin5493,343374
uchar to_lower_koi8u_bin[to_lower_koi8u_bin5513,344707
uchar to_upper_koi8u_bin[to_upper_koi8u_bin5532,346037
uint16 to_uni_koi8u_bin[to_uni_koi8u_bin5551,347367
uchar ctype_latin2_bin[ctype_latin2_bin5589,349259
uchar to_lower_latin2_bin[to_lower_latin2_bin5609,350593
uchar to_upper_latin2_bin[to_upper_latin2_bin5628,351924
uint16 to_uni_latin2_bin[to_uni_latin2_bin5647,353255
uchar ctype_latin5_bin[ctype_latin5_bin5685,355148
uchar to_lower_latin5_bin[to_lower_latin5_bin5705,356482
uchar to_upper_latin5_bin[to_upper_latin5_bin5724,357813
uint16 to_uni_latin5_bin[to_uni_latin5_bin5743,359144
uchar ctype_latin7_bin[ctype_latin7_bin5781,361037
uchar to_lower_latin7_bin[to_lower_latin7_bin5801,362371
uchar to_upper_latin7_bin[to_upper_latin7_bin5820,363702
uint16 to_uni_latin7_bin[to_uni_latin7_bin5839,365033
uchar ctype_cp850_bin[ctype_cp850_bin5877,366925
uchar to_lower_cp850_bin[to_lower_cp850_bin5897,368258
uchar to_upper_cp850_bin[to_upper_cp850_bin5916,369588
uint16 to_uni_cp850_bin[to_uni_cp850_bin5935,370918
uchar ctype_cp852_bin[ctype_cp852_bin5973,372809
uchar to_lower_cp852_bin[to_lower_cp852_bin5993,374142
uchar to_upper_cp852_bin[to_upper_cp852_bin6012,375472
uint16 to_uni_cp852_bin[to_uni_cp852_bin6031,376802
uchar ctype_swe7_bin[ctype_swe7_bin6069,378692
uchar to_lower_swe7_bin[to_lower_swe7_bin6089,380024
uchar to_upper_swe7_bin[to_upper_swe7_bin6108,381353
uint16 to_uni_swe7_bin[to_uni_swe7_bin6127,382682
uchar ctype_geostd8_general_ci[ctype_geostd8_general_ci6165,384574
uchar to_lower_geostd8_general_ci[to_lower_geostd8_general_ci6185,385916
uchar to_upper_geostd8_general_ci[to_upper_geostd8_general_ci6204,387255
uchar sort_order_geostd8_general_ci[sort_order_geostd8_general_ci6223,388594
uint16 to_uni_geostd8_general_ci[to_uni_geostd8_general_ci6242,389935
uchar ctype_geostd8_bin[ctype_geostd8_bin6280,391837
uchar to_lower_geostd8_bin[to_lower_geostd8_bin6300,393172
uchar to_upper_geostd8_bin[to_upper_geostd8_bin6319,394504
uint16 to_uni_geostd8_bin[to_uni_geostd8_bin6338,395836
uchar ctype_latin1_spanish_ci[ctype_latin1_spanish_ci6376,397730
uchar to_lower_latin1_spanish_ci[to_lower_latin1_spanish_ci6396,399071
uchar to_upper_latin1_spanish_ci[to_upper_latin1_spanish_ci6415,400409
uchar sort_order_latin1_spanish_ci[sort_order_latin1_spanish_ci6434,401747
uint16 to_uni_latin1_spanish_ci[to_uni_latin1_spanish_ci6453,403087
uchar ctype_cp1250_polish_ci[ctype_cp1250_polish_ci6491,404987
uchar to_lower_cp1250_polish_ci[to_lower_cp1250_polish_ci6511,406327
uchar to_upper_cp1250_polish_ci[to_upper_cp1250_polish_ci6530,407664
uchar sort_order_cp1250_polish_ci[sort_order_cp1250_polish_ci6549,409001
uint16 to_uni_cp1250_polish_ci[to_uni_cp1250_polish_ci6568,410340
CHARSET_INFO compiled_charsets[compiled_charsets6605,412212
  MY_CS_COMPILED|MY_CS_PRIMARY,MY_CS_PRIMARY6642,413730
  NULL,6646,413923
  ctype_cp850_general_ci,6647,413973
  to_lower_cp850_general_ci,6648,414037
  to_upper_cp850_general_ci,6649,414101
  sort_order_cp850_general_ci,6650,414165
  NULL,6651,414227
  NULL,6652,414277
  to_uni_cp850_general_ci,6653,414327
  NULL,6654,414391
  my_unicase_default,6655,414441
  NULL,6656,414491
  NULL,6657,414541
  &my_charset_8bit_handler,my_charset_8bit_handler6667,415066
  &my_collation_8bit_simple_ci_handler,my_collation_8bit_simple_ci_handler6668,415094
  MY_CS_COMPILED|MY_CS_PRIMARY,MY_CS_PRIMARY6708,416626
  NULL,6712,416815
  ctype_hp8_english_ci,6713,416865
  to_lower_hp8_english_ci,6714,416927
  to_upper_hp8_english_ci,6715,416989
  sort_order_hp8_english_ci,6716,417051
  NULL,6717,417111
  NULL,6718,417161
  to_uni_hp8_english_ci,6719,417211
  NULL,6720,417273
  my_unicase_default,6721,417323
  NULL,6722,417373
  NULL,6723,417423
  &my_charset_8bit_handler,my_charset_8bit_handler6733,417948
  &my_collation_8bit_simple_ci_handler,my_collation_8bit_simple_ci_handler6734,417976
  MY_CS_COMPILED|MY_CS_PRIMARY,MY_CS_PRIMARY6774,419517
  NULL,6778,419712
  ctype_latin2_general_ci,6779,419762
  to_lower_latin2_general_ci,6780,419827
  to_upper_latin2_general_ci,6781,419892
  sort_order_latin2_general_ci,6782,419957
  NULL,6783,420020
  NULL,6784,420070
  to_uni_latin2_general_ci,6785,420120
  NULL,6786,420185
  my_unicase_default,6787,420235
  NULL,6788,420285
  NULL,6789,420335
  &my_charset_8bit_handler,my_charset_8bit_handler6799,420860
  &my_collation_8bit_simple_ci_handler,my_collation_8bit_simple_ci_handler6800,420888
  MY_CS_COMPILED|MY_CS_PRIMARY|MY_CS_PUREASCII,MY_CS_PUREASCII6840,422437
  NULL,6844,422646
  ctype_ascii_general_ci,6845,422696
  to_lower_ascii_general_ci,6846,422760
  to_upper_ascii_general_ci,6847,422824
  sort_order_ascii_general_ci,6848,422888
  NULL,6849,422950
  NULL,6850,423000
  to_uni_ascii_general_ci,6851,423050
  NULL,6852,423114
  my_unicase_default,6853,423164
  NULL,6854,423214
  NULL,6855,423264
  &my_charset_8bit_handler,my_charset_8bit_handler6865,423789
  &my_collation_8bit_simple_ci_handler,my_collation_8bit_simple_ci_handler6866,423817
  MY_CS_COMPILED,6906,425366
  NULL,6910,425546
  ctype_latin1_danish_ci,6911,425596
  to_lower_latin1_danish_ci,6912,425660
  to_upper_latin1_danish_ci,6913,425724
  sort_order_latin1_danish_ci,6914,425788
  NULL,6915,425850
  NULL,6916,425900
  to_uni_latin1_danish_ci,6917,425950
  NULL,6918,426014
  my_unicase_default,6919,426064
  NULL,6920,426114
  NULL,6921,426164
  &my_charset_8bit_handler,my_charset_8bit_handler6931,426689
  &my_collation_8bit_simple_ci_handler,my_collation_8bit_simple_ci_handler6932,426717
  MY_CS_COMPILED|MY_CS_CSSORT,MY_CS_CSSORT6972,428268
  NULL,6976,428463
  ctype_latin7_estonian_cs,6977,428513
  to_lower_latin7_estonian_cs,6978,428579
  to_upper_latin7_estonian_cs,6979,428645
  sort_order_latin7_estonian_cs,6980,428711
  NULL,6981,428775
  NULL,6982,428825
  to_uni_latin7_estonian_cs,6983,428875
  NULL,6984,428941
  my_unicase_default,6985,428991
  NULL,6986,429041
  NULL,6987,429091
  &my_charset_8bit_handler,my_charset_8bit_handler6997,429616
  &my_collation_8bit_simple_ci_handler,my_collation_8bit_simple_ci_handler6998,429644
  MY_CS_COMPILED|MY_CS_PRIMARY,MY_CS_PRIMARY7038,431192
  NULL,7042,431385
  ctype_koi8u_general_ci,7043,431435
  to_lower_koi8u_general_ci,7044,431499
  to_upper_koi8u_general_ci,7045,431563
  sort_order_koi8u_general_ci,7046,431627
  NULL,7047,431689
  NULL,7048,431739
  to_uni_koi8u_general_ci,7049,431789
  NULL,7050,431853
  my_unicase_default,7051,431903
  NULL,7052,431953
  NULL,7053,432003
  &my_charset_8bit_handler,my_charset_8bit_handler7063,432528
  &my_collation_8bit_simple_ci_handler,my_collation_8bit_simple_ci_handler7064,432556
  MY_CS_COMPILED|MY_CS_PRIMARY,MY_CS_PRIMARY7104,434104
  NULL,7108,434297
  ctype_greek_general_ci,7109,434347
  to_lower_greek_general_ci,7110,434411
  to_upper_greek_general_ci,7111,434475
  sort_order_greek_general_ci,7112,434539
  NULL,7113,434601
  NULL,7114,434651
  to_uni_greek_general_ci,7115,434701
  NULL,7116,434765
  my_unicase_default,7117,434815
  NULL,7118,434865
  NULL,7119,434915
  &my_charset_8bit_handler,my_charset_8bit_handler7129,435440
  &my_collation_8bit_simple_ci_handler,my_collation_8bit_simple_ci_handler7130,435468
  MY_CS_COMPILED,7170,437019
  NULL,7174,437201
  ctype_latin2_croatian_ci,7175,437251
  to_lower_latin2_croatian_ci,7176,437317
  to_upper_latin2_croatian_ci,7177,437383
  sort_order_latin2_croatian_ci,7178,437449
  NULL,7179,437513
  NULL,7180,437563
  to_uni_latin2_croatian_ci,7181,437613
  NULL,7182,437679
  my_unicase_default,7183,437729
  NULL,7184,437779
  NULL,7185,437829
  &my_charset_8bit_handler,my_charset_8bit_handler7195,438354
  &my_collation_8bit_simple_ci_handler,my_collation_8bit_simple_ci_handler7196,438382
  MY_CS_COMPILED|MY_CS_PRIMARY,MY_CS_PRIMARY7236,439937
  NULL,7240,440132
  ctype_latin5_turkish_ci,7241,440182
  to_lower_latin5_turkish_ci,7242,440247
  to_upper_latin5_turkish_ci,7243,440312
  sort_order_latin5_turkish_ci,7244,440377
  NULL,7245,440440
  NULL,7246,440490
  to_uni_latin5_turkish_ci,7247,440540
  NULL,7248,440605
  my_unicase_default,7249,440655
  NULL,7250,440705
  NULL,7251,440755
  &my_charset_8bit_handler,my_charset_8bit_handler7261,441280
  &my_collation_8bit_simple_ci_handler,my_collation_8bit_simple_ci_handler7262,441308
  MY_CS_COMPILED|MY_CS_PRIMARY,MY_CS_PRIMARY7302,442874
  NULL,7306,443067
  ctype_cp866_general_ci,7307,443117
  to_lower_cp866_general_ci,7308,443181
  to_upper_cp866_general_ci,7309,443245
  sort_order_cp866_general_ci,7310,443309
  NULL,7311,443371
  NULL,7312,443421
  to_uni_cp866_general_ci,7313,443471
  NULL,7314,443535
  my_unicase_default,7315,443585
  NULL,7316,443635
  NULL,7317,443685
  &my_charset_8bit_handler,my_charset_8bit_handler7327,444210
  &my_collation_8bit_simple_ci_handler,my_collation_8bit_simple_ci_handler7328,444238
  MY_CS_COMPILED|MY_CS_PRIMARY,MY_CS_PRIMARY7368,445796
  NULL,7372,445989
  ctype_macce_general_ci,7373,446039
  to_lower_macce_general_ci,7374,446103
  to_upper_macce_general_ci,7375,446167
  sort_order_macce_general_ci,7376,446231
  NULL,7377,446293
  NULL,7378,446343
  to_uni_macce_general_ci,7379,446393
  NULL,7380,446457
  my_unicase_default,7381,446507
  NULL,7382,446557
  NULL,7383,446607
  &my_charset_8bit_handler,my_charset_8bit_handler7393,447132
  &my_collation_8bit_simple_ci_handler,my_collation_8bit_simple_ci_handler7394,447160
  MY_CS_COMPILED|MY_CS_PRIMARY,MY_CS_PRIMARY7434,448726
  NULL,7438,448919
  ctype_cp852_general_ci,7439,448969
  to_lower_cp852_general_ci,7440,449033
  to_upper_cp852_general_ci,7441,449097
  sort_order_cp852_general_ci,7442,449161
  NULL,7443,449223
  NULL,7444,449273
  to_uni_cp852_general_ci,7445,449323
  NULL,7446,449387
  my_unicase_default,7447,449437
  NULL,7448,449487
  NULL,7449,449537
  &my_charset_8bit_handler,my_charset_8bit_handler7459,450062
  &my_collation_8bit_simple_ci_handler,my_collation_8bit_simple_ci_handler7460,450090
  MY_CS_COMPILED|MY_CS_CSSORT,MY_CS_CSSORT7500,451641
  NULL,7504,451835
  ctype_latin7_general_cs,7505,451885
  to_lower_latin7_general_cs,7506,451950
  to_upper_latin7_general_cs,7507,452015
  sort_order_latin7_general_cs,7508,452080
  NULL,7509,452143
  NULL,7510,452193
  to_uni_latin7_general_cs,7511,452243
  NULL,7512,452308
  my_unicase_default,7513,452358
  NULL,7514,452408
  NULL,7515,452458
  &my_charset_8bit_handler,my_charset_8bit_handler7525,452983
  &my_collation_8bit_simple_ci_handler,my_collation_8bit_simple_ci_handler7526,453011
  MY_CS_COMPILED,7566,454499
  NULL,7570,454681
  ctype_cp1250_croatian_ci,7571,454731
  to_lower_cp1250_croatian_ci,7572,454797
  to_upper_cp1250_croatian_ci,7573,454863
  sort_order_cp1250_croatian_ci,7574,454929
  NULL,7575,454993
  NULL,7576,455043
  to_uni_cp1250_croatian_ci,7577,455093
  NULL,7578,455159
  my_unicase_default,7579,455209
  NULL,7580,455259
  NULL,7581,455309
  &my_charset_8bit_handler,my_charset_8bit_handler7591,455834
  &my_collation_8bit_simple_ci_handler,my_collation_8bit_simple_ci_handler7592,455862
  MY_CS_COMPILED|MY_CS_CSSORT,MY_CS_CSSORT7632,457399
  NULL,7636,457593
  ctype_latin1_general_cs,7637,457643
  to_lower_latin1_general_cs,7638,457708
  to_upper_latin1_general_cs,7639,457773
  sort_order_latin1_general_cs,7640,457838
  NULL,7641,457901
  NULL,7642,457951
  to_uni_latin1_general_cs,7643,458001
  NULL,7644,458066
  my_unicase_default,7645,458116
  NULL,7646,458166
  NULL,7647,458216
  &my_charset_8bit_handler,my_charset_8bit_handler7657,458741
  &my_collation_8bit_simple_ci_handler,my_collation_8bit_simple_ci_handler7658,458769
  MY_CS_COMPILED|MY_CS_PRIMARY,MY_CS_PRIMARY7698,460264
  NULL,7702,460459
  ctype_cp1251_general_ci,7703,460509
  to_lower_cp1251_general_ci,7704,460574
  to_upper_cp1251_general_ci,7705,460639
  sort_order_cp1251_general_ci,7706,460704
  NULL,7707,460767
  NULL,7708,460817
  to_uni_cp1251_general_ci,7709,460867
  NULL,7710,460932
  my_unicase_default,7711,460982
  NULL,7712,461032
  NULL,7713,461082
  &my_charset_8bit_handler,my_charset_8bit_handler7723,461607
  &my_collation_8bit_simple_ci_handler,my_collation_8bit_simple_ci_handler7724,461635
  MY_CS_COMPILED|MY_CS_BINSORT,MY_CS_BINSORT7764,463187
  NULL,7768,463379
  ctype_macroman_bin,7769,463429
  to_lower_macroman_bin,7770,463489
  to_upper_macroman_bin,7771,463549
  NULL,7772,463609
  NULL,7773,463657
  NULL,7774,463707
  to_uni_macroman_bin,7775,463757
  NULL,7776,463817
  my_unicase_default,7777,463867
  NULL,7778,463917
  NULL,7779,463967
  &my_charset_8bit_handler,my_charset_8bit_handler7789,464492
  &my_collation_8bit_bin_handler,my_collation_8bit_bin_handler7790,464520
  MY_CS_COMPILED|MY_CS_BINSORT,MY_CS_BINSORT7830,466065
  NULL,7834,466253
  ctype_cp1257_bin,7835,466303
  to_lower_cp1257_bin,7836,466361
  to_upper_cp1257_bin,7837,466419
  NULL,7838,466477
  NULL,7839,466525
  NULL,7840,466575
  to_uni_cp1257_bin,7841,466625
  NULL,7842,466683
  my_unicase_default,7843,466733
  NULL,7844,466783
  NULL,7845,466833
  &my_charset_8bit_handler,my_charset_8bit_handler7855,467358
  &my_collation_8bit_bin_handler,my_collation_8bit_bin_handler7856,467386
  MY_CS_COMPILED|MY_CS_BINSORT,MY_CS_BINSORT7896,468933
  NULL,7900,469125
  ctype_armscii8_bin,7901,469175
  to_lower_armscii8_bin,7902,469235
  to_upper_armscii8_bin,7903,469295
  NULL,7904,469355
  NULL,7905,469403
  NULL,7906,469453
  to_uni_armscii8_bin,7907,469503
  NULL,7908,469563
  my_unicase_default,7909,469613
  NULL,7910,469663
  NULL,7911,469713
  &my_charset_8bit_handler,my_charset_8bit_handler7921,470238
  &my_collation_8bit_bin_handler,my_collation_8bit_bin_handler7922,470266
  MY_CS_COMPILED|MY_CS_BINSORT,MY_CS_BINSORT7962,471764
  NULL,7966,471952
  ctype_cp1250_bin,7967,472002
  to_lower_cp1250_bin,7968,472060
  to_upper_cp1250_bin,7969,472118
  NULL,7970,472176
  NULL,7971,472224
  NULL,7972,472274
  to_uni_cp1250_bin,7973,472324
  NULL,7974,472382
  my_unicase_default,7975,472432
  NULL,7976,472482
  NULL,7977,472532
  &my_charset_8bit_handler,my_charset_8bit_handler7987,473057
  &my_collation_8bit_bin_handler,my_collation_8bit_bin_handler7988,473085
  MY_CS_COMPILED|MY_CS_BINSORT,MY_CS_BINSORT8028,474573
  NULL,8032,474759
  ctype_cp866_bin,8033,474809
  to_lower_cp866_bin,8034,474866
  to_upper_cp866_bin,8035,474923
  NULL,8036,474980
  NULL,8037,475028
  NULL,8038,475078
  to_uni_cp866_bin,8039,475128
  NULL,8040,475185
  my_unicase_default,8041,475235
  NULL,8042,475285
  NULL,8043,475335
  &my_charset_8bit_handler,my_charset_8bit_handler8053,475860
  &my_collation_8bit_bin_handler,my_collation_8bit_bin_handler8054,475888
  MY_CS_COMPILED|MY_CS_BINSORT,MY_CS_BINSORT8094,477362
  NULL,8098,477548
  ctype_greek_bin,8099,477598
  to_lower_greek_bin,8100,477655
  to_upper_greek_bin,8101,477712
  NULL,8102,477769
  NULL,8103,477817
  NULL,8104,477867
  to_uni_greek_bin,8105,477917
  NULL,8106,477974
  my_unicase_default,8107,478024
  NULL,8108,478074
  NULL,8109,478124
  &my_charset_8bit_handler,my_charset_8bit_handler8119,478649
  &my_collation_8bit_bin_handler,my_collation_8bit_bin_handler8120,478677
  MY_CS_COMPILED|MY_CS_BINSORT,MY_CS_BINSORT8160,480163
  NULL,8164,480345
  ctype_hp8_bin,8165,480395
  to_lower_hp8_bin,8166,480450
  to_upper_hp8_bin,8167,480505
  NULL,8168,480560
  NULL,8169,480608
  NULL,8170,480658
  to_uni_hp8_bin,8171,480708
  NULL,8172,480763
  my_unicase_default,8173,480813
  NULL,8174,480863
  NULL,8175,480913
  &my_charset_8bit_handler,my_charset_8bit_handler8185,481438
  &my_collation_8bit_bin_handler,my_collation_8bit_bin_handler8186,481466
  MY_CS_COMPILED|MY_CS_BINSORT,MY_CS_BINSORT8226,482961
  NULL,8230,483147
  ctype_koi8r_bin,8231,483197
  to_lower_koi8r_bin,8232,483254
  to_upper_koi8r_bin,8233,483311
  NULL,8234,483368
  NULL,8235,483416
  NULL,8236,483466
  to_uni_koi8r_bin,8237,483516
  NULL,8238,483573
  my_unicase_default,8239,483623
  NULL,8240,483673
  NULL,8241,483723
  &my_charset_8bit_handler,my_charset_8bit_handler8251,484248
  &my_collation_8bit_bin_handler,my_collation_8bit_bin_handler8252,484276
  MY_CS_COMPILED|MY_CS_BINSORT,MY_CS_BINSORT8292,485758
  NULL,8296,485946
  ctype_latin2_bin,8297,485996
  to_lower_latin2_bin,8298,486054
  to_upper_latin2_bin,8299,486112
  NULL,8300,486170
  NULL,8301,486218
  NULL,8302,486268
  to_uni_latin2_bin,8303,486318
  NULL,8304,486376
  my_unicase_default,8305,486426
  NULL,8306,486476
  NULL,8307,486526
  &my_charset_8bit_handler,my_charset_8bit_handler8317,487051
  &my_collation_8bit_bin_handler,my_collation_8bit_bin_handler8318,487079
  MY_CS_COMPILED|MY_CS_BINSORT,MY_CS_BINSORT8358,488568
  NULL,8362,488756
  ctype_latin7_bin,8363,488806
  to_lower_latin7_bin,8364,488864
  to_upper_latin7_bin,8365,488922
  NULL,8366,488980
  NULL,8367,489028
  NULL,8368,489078
  to_uni_latin7_bin,8369,489128
  NULL,8370,489186
  my_unicase_default,8371,489236
  NULL,8372,489286
  NULL,8373,489336
  &my_charset_8bit_handler,my_charset_8bit_handler8383,489861
  &my_collation_8bit_bin_handler,my_collation_8bit_bin_handler8384,489889
  MY_CS_COMPILED|MY_CS_BINSORT,MY_CS_BINSORT8424,491370
  NULL,8428,491556
  ctype_cp852_bin,8429,491606
  to_lower_cp852_bin,8430,491663
  to_upper_cp852_bin,8431,491720
  NULL,8432,491777
  NULL,8433,491825
  NULL,8434,491875
  to_uni_cp852_bin,8435,491925
  NULL,8436,491982
  my_unicase_default,8437,492032
  NULL,8438,492082
  NULL,8439,492132
  &my_charset_8bit_handler,my_charset_8bit_handler8449,492657
  &my_collation_8bit_bin_handler,my_collation_8bit_bin_handler8450,492685
  MY_CS_COMPILED|MY_CS_PRIMARY,MY_CS_PRIMARY8490,494176
  NULL,8494,494373
  ctype_geostd8_general_ci,8495,494423
  to_lower_geostd8_general_ci,8496,494489
  to_upper_geostd8_general_ci,8497,494555
  sort_order_geostd8_general_ci,8498,494621
  NULL,8499,494685
  NULL,8500,494735
  to_uni_geostd8_general_ci,8501,494785
  NULL,8502,494851
  my_unicase_default,8503,494901
  NULL,8504,494951
  NULL,8505,495001
  &my_charset_8bit_handler,my_charset_8bit_handler8515,495526
  &my_collation_8bit_simple_ci_handler,my_collation_8bit_simple_ci_handler8516,495554
  MY_CS_COMPILED,8556,497056
  NULL,8560,497237
  ctype_latin1_spanish_ci,8561,497287
  to_lower_latin1_spanish_ci,8562,497352
  to_upper_latin1_spanish_ci,8563,497417
  sort_order_latin1_spanish_ci,8564,497482
  NULL,8565,497545
  NULL,8566,497595
  to_uni_latin1_spanish_ci,8567,497645
  NULL,8568,497710
  my_unicase_default,8569,497760
  NULL,8570,497810
  NULL,8571,497860
  &my_charset_8bit_handler,my_charset_8bit_handler8581,498385
  &my_collation_8bit_simple_ci_handler,my_collation_8bit_simple_ci_handler8582,498413
  MY_CS_COMPILED,8621,499916
  NULL,8622,499934
  NULL,8623,499984
  NULL,8624,500034
  NULL,8625,500084
  NULL,8626,500134
  NULL,8627,500184
  NULL,8628,500234
  NULL,8629,500284
  NULL,8630,500334
  NULL,8631,500384
  NULL,8632,500434
  NULL,8633,500484
  my_unicase_default,8634,500534
  NULL,8635,500584
  NULL,8636,500634
  &my_charset_8bit_handler,my_charset_8bit_handler8646,501159
  &my_collation_8bit_simple_ci_handler,my_collation_8bit_simple_ci_handler8647,501187

strings/ctype-gb2312.c,1822
static uchar ctype_gb2312[ctype_gb231232,1108
static uchar to_lower_gb2312[to_lower_gb231253,1852
static uchar to_upper_gb2312[to_upper_gb231289,4734
static uchar sort_order_gb2312[sort_order_gb2312125,7616
#define isgb2312head(164,10624
#define isgb2312tail(165,10687
static uint ismbchar_gb2312(168,10752
static uint mbcharlen_gb2312(174,10939
static MY_UNICASE_INFO cA2[cA2180,11058
static MY_UNICASE_INFO cA3[cA3301,15115
static MY_UNICASE_INFO cA6[cA6422,19172
static MY_UNICASE_INFO cA7[cA7543,23232
static MY_UNICASE_INFO cA8[cA8664,27293
static MY_UNICASE_INFO *my_caseinfo_gb2312[my_caseinfo_gb2312785,31351
static uint16 tab_gb2312_uni0[tab_gb2312_uni0823,33161
static uint16 tab_gb2312_uni1[tab_gb2312_uni1994,42744
static uint16 tab_gb2312_uni2[tab_gb2312_uni21071,47018
static int func_gb2312_uni_onechar(3357,177228
static uint16 tab_uni_gb23120[tab_uni_gb231203369,177558
static uint16 tab_uni_gb23121[tab_uni_gb231213412,179852
static uint16 tab_uni_gb23122[tab_uni_gb231223465,182730
static uint16 tab_uni_gb23123[tab_uni_gb231233564,188251
static uint16 tab_uni_gb23124[tab_uni_gb231243628,191756
static uint16 tab_uni_gb23125[tab_uni_gb231253669,193943
static uint16 tab_uni_gb23126[tab_uni_gb231263674,194078
static uint16 tab_uni_gb23127[tab_uni_gb231276152,335195
static uint16 tab_uni_gb23128[tab_uni_gb231286168,335992
static uint16 tab_uni_gb23129[tab_uni_gb231296220,338806
static int func_uni_gb2312_onechar(6251,340474
my_wc_mb_gb2312(6277,341348
my_mb_wc_gb2312(6305,341763
my_well_formed_len_gb2312(6332,342204
static MY_COLLATION_HANDLER my_collation_ci_handler 6363,342847
static MY_CHARSET_HANDLER my_charset_handler=6378,343234
CHARSET_INFO my_charset_gb2312_chinese_ci=6410,343864
CHARSET_INFO my_charset_gb2312_bin=6442,344821

strings/ctype-gbk.c,1854
#define isgbkhead(38,1199
#define isgbktail(39,1259
#define isgbkcode(42,1392
#define gbkcode(43,1446
#define gbkhead(44,1511
#define gbktail(45,1550
static uchar ctype_gbk[ctype_gbk47,1592
static uchar to_lower_gbk[to_lower_gbk68,2333
static uchar to_upper_gbk[to_upper_gbk104,5212
static MY_UNICASE_INFO cA2[cA2141,8092
static MY_UNICASE_INFO cA3[cA3345,13834
static MY_UNICASE_INFO cA6[cA6550,19577
static MY_UNICASE_INFO cA7[cA7755,25320
static MY_UNICASE_INFO *my_caseinfo_gbk[my_caseinfo_gbk960,31063
static uchar sort_order_gbk[sort_order_gbk998,32844
static uint16 gbk_order[gbk_order1034,35725
static uint16 gbksortorder(3432,170681
int my_strnncoll_gbk_internal(3442,170855
int my_strnncoll_gbk(3472,171540
static int my_strnncollsp_gbk(3483,171916
static size_t my_strnxfrm_gbk(3523,172995
static uint ismbchar_gbk(3551,173682
static uint mbcharlen_gbk(3557,173857
static uint16 tab_gbk_uni0[tab_gbk_uni03563,173996
static int func_gbk_uni_onechar(7568,402144
static uint16 tab_uni_gbk0[tab_uni_gbk07577,402310
static uint16 tab_uni_gbk1[tab_uni_gbk17698,409082
static uint16 tab_uni_gbk2[tab_uni_gbk27798,414636
static uint16 tab_uni_gbk3[tab_uni_gbk37862,418138
static uint16 tab_uni_gbk4[tab_uni_gbk47903,420322
static uint16 tab_uni_gbk5[tab_uni_gbk57923,421323
static uint16 tab_uni_gbk6[tab_uni_gbk67936,421897
static uint16 tab_uni_gbk7[tab_uni_gbk710552,570884
static uint16 tab_uni_gbk8[tab_uni_gbk810587,572754
static int func_uni_gbk_onechar(10644,575908
my_wc_mb_gbk(10667,576671
my_mb_wc_gbk(10693,577071
size_t my_well_formed_len_gbk(10724,577504
static MY_COLLATION_HANDLER my_collation_ci_handler 10757,578187
static MY_CHARSET_HANDLER my_charset_handler=10772,578471
CHARSET_INFO my_charset_gbk_chinese_ci=10804,579052
CHARSET_INFO my_charset_gbk_bin=10836,580002

strings/ctype-latin1.c,1077
static uchar ctype_latin1[ctype_latin121,839
static uchar to_lower_latin1[to_lower_latin141,1953
static uchar to_upper_latin1[to_upper_latin160,3063
static uchar sort_order_latin1[sort_order_latin179,4173
unsigned short cs_to_uni[cs_to_uni120,6152
uchar pl00[pl00154,8010
uchar pl01[pl01188,9342
uchar pl02[pl02222,10674
uchar pl20[pl20256,12006
uchar pl21[pl21290,13338
uchar *uni_to_cs[uni_to_cs324,14670
int my_mb_wc_latin1(360,16016
int my_wc_mb_latin1(373,16291
static MY_CHARSET_HANDLER my_charset_handler=388,16615
CHARSET_INFO my_charset_latin1=420,17267
static uchar sort_order_latin1_de[sort_order_latin1_de475,18724
uchar combo1map[combo1map499,19925
uchar combo2map[combo2map518,21020
static int my_strnncoll_latin1_de(546,22247
static int my_strnncollsp_latin1_de(587,23218
static size_t my_strnxfrm_latin1_de(659,24830
void my_hash_sort_latin1_de(678,25340
static MY_COLLATION_HANDLER my_collation_german2_ci_handler=703,25947
CHARSET_INFO my_charset_latin1_german2_ci=719,26273
CHARSET_INFO my_charset_latin1_bin=752,27324

strings/ctype-mb.c,1546
size_t my_caseup_str_mb(23,828
size_t my_casedn_str_mb(44,1221
get_case_info_for_ch(66,1644
size_t my_caseup_mb(76,1889
size_t my_casedn_mb(111,2686
my_casefold_mb_varlen(156,3839
my_casedn_mb_varlen(196,4712
my_caseup_mb_varlen(206,5026
int my_strcasecmp_mb(219,5413
#define INC_PTR(250,6083
#define likeconv(252,6159
int my_wildcmp_mb(254,6219
size_t my_numchars_mb(362,8892
size_t my_charpos_mb(376,9165
size_t my_well_formed_len_mb(391,9502
uint my_instr_mb(413,9919
my_strnncoll_mb_bin(471,11140
my_strnncollsp_mb_bin(508,12098
static size_t my_strnxfrm_mb_bin(555,13258
my_strcasecmp_mb_bin(568,13621
my_hash_sort_mb_bin(576,13769
static void pad_max_char(614,14894
my_bool my_like_range_mb(673,16354
my_like_range_generic(830,21710
my_wildcmp_mb_bin(992,26859
static char pg11[pg111101,29535
static char pg23[pg231113,30083
static char pg2E[pg2E1125,30631
static char pg2F[pg2F1137,31179
static char pg30[pg301149,31727
static char pg31[pg311161,32275
static char pg32[pg321173,32823
static char pg4D[pg4D1185,33371
static char pg9F[pg9F1197,33919
static char pgA4[pgA41209,34467
static char pgD7[pgD71221,35015
static char pgFA[pgFA1233,35563
static char pgFE[pgFE1245,36111
static char pgFF[pgFF1257,36659
static struct {int page;1269,37207
static struct {int page; char *p;p1269,37207
static struct {int page; char *p;} utr11_data[utr11_data1269,37207
size_t my_numcells_mb(1306,39601
int my_mb_ctype_mb(1338,40253
MY_COLLATION_HANDLER my_collation_mb_bin_handler 1353,40616

strings/ctype-simple.c,1946
size_t my_strnxfrmlen_simple(28,968
size_t my_strnxfrm_simple(74,2305
int my_strnncoll_simple(99,2860
int my_strnncollsp_simple(150,4132
size_t my_caseup_str_8bit(196,5325
size_t my_casedn_str_8bit(206,5541
size_t my_caseup_8bit(216,5757
size_t my_casedn_8bit(229,6142
int my_strcasecmp_8bit(241,6525
int my_mb_wc_8bit(250,6773
int my_wc_mb_8bit(261,7008
size_t my_snprintf_8bit(289,7588
void my_hash_sort_simple(302,7886
long my_strntol_8bit(324,8380
ulong my_strntoul_8bit(420,9955
longlong my_strntoll_8bit(507,11359
ulonglong my_strntoull_8bit(603,12981
double my_strntod_8bit(715,14975
size_t my_long10_to_str_8bit(732,15359
size_t my_longlong10_to_str_8bit(773,16217
#define likeconv(836,17416
#define likeconv(838,17468
#define INC_PTR(841,17535
int my_wildcmp_8bit(844,17567
my_bool my_like_range_simple(940,20157
size_t my_scan_8bit(990,21544
void my_fill_8bit(1016,22009
size_t my_numchars_8bit(1023,22137
size_t my_numcells_8bit(1030,22274
size_t my_charpos_8bit(1037,22427
size_t my_well_formed_len_8bit(1046,22673
size_t my_lengthsp_8bit(1056,22959
uint my_instr_simple(1065,23206
  int		nchars;1127,24467
  MY_UNI_IDX	uidx;1128,24482
} uni_idx;1129,24501
#define PLANE_SIZE	1131,24513
#define PLANE_NUM	1132,24538
#define PLANE_NUMBER(1133,24562
static int pcmp(1135,24610
static my_bool create_fromuni(1146,24848
static my_bool my_cset_init_8bit(1225,26714
static void set_max_sort_char(1233,26903
static my_bool my_coll_init_simple(1252,27243
longlong my_strtoll10_8bit(1260,27426
int my_mb_ctype_8bit(1267,27617
#define CUTOFF 1280,27830
#define CUTLIM 1281,27867
#define DIGITS_IN_ULONGLONG 1282,27904
static ulonglong d10[d101284,27936
my_strntoull10rnd_8bit(1366,30418
my_bool my_propagate_simple(1644,36347
my_bool my_propagate_complex(1652,36572
MY_CHARSET_HANDLER my_charset_8bit_handler=1660,36800
MY_COLLATION_HANDLER my_collation_8bit_simple_ci_handler 1691,37488

strings/ctype-sjis.c,1270
static uchar ctype_sjis[ctype_sjis34,1115
static uchar to_lower_sjis[to_lower_sjis71,3195
static uchar to_upper_sjis[to_upper_sjis107,6074
static uchar sort_order_sjis[sort_order_sjis143,8953
#define issjishead(179,11834
#define issjistail(181,11938
static uint ismbchar_sjis(185,12042
static uint mbcharlen_sjis(191,12229
#define sjiscode(197,12353
static MY_UNICASE_INFO c81[c81200,12427
static MY_UNICASE_INFO c82[c82410,18201
static MY_UNICASE_INFO c83[c83618,23951
static MY_UNICASE_INFO c84[c84828,29663
static MY_UNICASE_INFO *my_caseinfo_sjis[my_caseinfo_sjis1038,35375
static int my_strnncoll_sjis_internal(1075,37156
static int my_strnncoll_sjis(1107,37961
static int my_strnncollsp_sjis(1119,38400
static size_t my_strnxfrm_sjis(1159,39463
static uint16 sjis_to_unicode[sjis_to_unicode1183,40089
static uint16 unicode_to_sjis[unicode_to_sjis17573,931051
my_mb_wc_sjis(33987,1822844
my_wc_mb_sjis(34031,1823992
size_t my_numcells_sjis(34080,1825012
size_t my_well_formed_len_sjis(34113,1825584
static MY_COLLATION_HANDLER my_collation_ci_handler 34147,1826290
static MY_CHARSET_HANDLER my_charset_handler=34163,1826595
CHARSET_INFO my_charset_sjis_japanese_ci=34195,1827205
CHARSET_INFO my_charset_sjis_bin=34227,1828174

strings/ctype-tis620.c,1012
#define BUFFER_MULTIPLY 58,2177
#define M 59,2203
#define U 60,2223
#define L 61,2242
#define UU 62,2261
#define X 63,2281
static int t_ctype[t_ctype66,2303
static uchar ctype_tis620[ctype_tis620326,17948
static uchar to_lower_tis620[to_lower_tis620347,18692
static uchar to_upper_tis620[to_upper_tis620383,21574
static uchar sort_order_tis620[sort_order_tis620419,24456
static size_t thai2sortable(465,27533
int my_strnncoll_tis620(529,28744
int my_strnncollsp_tis620(559,29541
size_t my_strnxfrm_tis620(636,31408
static unsigned short cs_to_uni[cs_to_uni650,31830
static uchar pl00[pl00684,33695
static uchar pl0E[pl0E718,35546
static uchar plFF[plFF752,37397
static uchar *uni_to_cs[uni_to_cs786,39248
int my_mb_wc_tis620(823,40602
int my_wc_mb_tis620(836,40871
static MY_COLLATION_HANDLER my_collation_ci_handler 852,41190
static MY_CHARSET_HANDLER my_charset_handler=867,41557
CHARSET_INFO my_charset_tis620_thai_ci=900,42274
CHARSET_INFO my_charset_tis620_bin=932,43243

strings/ctype-uca.c,12706
#define MY_UCA_NPAGES 41,1380
#define MY_UCA_NCHARS 42,1406
#define MY_UCA_CMASK 43,1432
#define MY_UCA_PSHIFT 44,1458
#define MAX_UCA_CHAR_WITH_EXPLICIT_WEIGHT 45,1482
uint16 page000data[page000data47,1532
uint16 page001data[page001data178,9015
uint16 page002data[page002data266,14706
uint16 page003data[page003data354,20397
uint16 page004data[page004data485,27880
uint16 page005data[page005data573,33571
uint16 page006data[page006data661,39262
uint16 page007data[page007data749,44953
uint16 page009data[page009data837,50644
uint16 page00Adata[page00Adata925,56335
uint16 page00Bdata[page00Bdata1013,62026
uint16 page00Cdata[page00Cdata1101,67717
uint16 page00Ddata[page00Ddata1189,73408
uint16 page00Edata[page00Edata1277,79099
uint16 page00Fdata[page00Fdata1365,84790
uint16 page010data[page010data1453,90481
uint16 page011data[page011data1541,96172
uint16 page012data[page012data1629,101863
uint16 page013data[page013data1717,107554
uint16 page014data[page014data1805,113245
uint16 page015data[page015data1893,118936
uint16 page016data[page016data1960,122835
uint16 page017data[page017data2048,128526
uint16 page018data[page018data2136,134217
uint16 page019data[page019data2224,139908
uint16 page01Ddata[page01Ddata2312,145599
uint16 page01Edata[page01Edata2400,151290
uint16 page01Fdata[page01Fdata2488,156981
uint16 page020data[page020data2576,162672
uint16 page021data[page021data2835,171947
uint16 page022data[page022data3094,181222
uint16 page023data[page023data3225,188705
uint16 page024data[page024data3313,194396
uint16 page025data[page025data3572,203671
uint16 page026data[page026data3639,207570
uint16 page027data[page027data3727,213261
uint16 page028data[page028data3815,218952
uint16 page029data[page029data3882,222851
uint16 page02Adata[page02Adata3949,226750
uint16 page02Bdata[page02Bdata4208,236025
uint16 page02Edata[page02Edata4296,241716
uint16 page02Fdata[page02Fdata4384,247407
uint16 page030data[page030data4472,253098
uint16 page031data[page031data4560,258789
uint16 page032data[page032data4648,264480
uint16 page033data[page033data4907,279131
uint16 page04Ddata[page04Ddata5166,295574
uint16 page0A0data[page0A0data5254,301265
uint16 page0A1data[page0A1data5321,305164
uint16 page0A2data[page0A2data5388,309063
uint16 page0A3data[page0A3data5455,312962
uint16 page0A4data[page0A4data5522,316861
uint16 page0F9data[page0F9data5610,322552
uint16 page0FAdata[page0FAdata5698,328243
uint16 page0FBdata[page0FBdata5786,333934
uint16 page0FCdata[page0FCdata5917,341417
uint16 page0FDdata[page0FDdata6005,347108
uint16 page0FEdata[page0FEdata6264,363551
uint16 page0FFdata[page0FFdata6352,369242
uchar uca_length[uca_length6440,374933
uint16 *uca_weight[uca_weight6458,375487
static const char icelandic[icelandic6540,379138
static const char latvian[latvian6559,379718
static const char romanian[romanian6571,380047
static const char slovenian[slovenian6577,380279
static const char polish[polish6583,380416
static const char estonian[estonian6593,380731
static const char spanish[spanish6602,380994
static const char swedish[swedish6609,381176
static const char turkish[turkish6615,381385
static const char czech[czech6624,381619
static const char danish[danish6631,381816
static const char lithuanian[lithuanian6637,382122
static const char slovak[slovak6644,382350
static const char spanish2[spanish26652,382569
static const char roman[roman6657,382732
static const char persian[persian6675,383188
static const char esperanto[esperanto6701,384496
static const char hungarian[hungarian6712,384796
static const char sinhala[sinhala6723,385123
static const char sinhala[sinhala6729,385293
typedef struct my_uca_scanner_st6751,386271
  const uint16 *wbeg;wbeg6753,386306
  const uchar  *sbeg;sbeg6754,386373
  const uchar  *send;send6755,386440
  uchar *uca_length;uca_length6756,386507
  uint16 **uca_weight;uca_weight6757,386528
  uint16 *contractions;contractions6758,386551
  uint16 implicit[implicit6759,386575
  int page;6760,386597
  int code;6761,386609
  CHARSET_INFO *cs;cs6762,386621
} my_uca_scanner;6763,386641
typedef struct my_uca_scanner_handler_st 6769,386735
  void (*init)init6771,386779
  int (*next)next6773,386887
} my_uca_scanner_handler;6774,386927
static uint16 nochar[nochar6776,386954
static void my_uca_scanner_init_ucs2(6797,387319
static int my_uca_scanner_next_ucs2(6871,389900
static my_uca_scanner_handler my_ucs2_uca_scanner_handler=6937,391693
static void my_uca_scanner_init_any(6949,391875
static int my_uca_scanner_next_any(6963,392306
static my_uca_scanner_handler my_any_uca_scanner_handler=7047,394618
static int my_strnncoll_uca(7094,396292
static int my_strnncollsp_uca(7165,398772
static void my_hash_sort_uca(7243,400890
static size_t my_strnxfrm_uca(7295,402512
my_char_weight_addr(7340,403693
static int my_uca_charcmp(7361,404257
int my_wildcmp_uca(7397,405223
typedef enum my_coll_lexem_num_en7572,409352
  MY_COLL_LEXEM_EOF	7574,409388
  MY_COLL_LEXEM_DIFF	7575,409413
  MY_COLL_LEXEM_SHIFT	7576,409440
  MY_COLL_LEXEM_CHAR	7577,409467
  MY_COLL_LEXEM_ERROR	7578,409493
} my_coll_lexem_num;7579,409519
typedef struct my_coll_lexem_st7582,409542
  const char *beg;beg7584,409576
  const char *end;end7585,409595
  const char *prev;prev7586,409614
  int   diff;7587,409634
  int   code;7588,409648
} MY_COLL_LEXEM;7589,409662
static void my_coll_lexem_init(7606,409942
static void my_coll_lexem_print_error(7632,410508
static int ch2x(7657,411108
static my_coll_lexem_num my_coll_lexem_next(7687,411652
typedef struct my_coll_rule_item_st7759,412996
  uint base;7761,413034
  uint curr[curr7762,413100
  int diff[diff7763,413166
} MY_COLL_RULE;7764,413232
static int my_coll_rule_parse(7783,413673
#define MY_MAX_COLL_RULE 7894,416413
static my_bool create_tailoring(7913,416971
static my_bool my_coll_init_uca(8079,421683
static int my_strnncoll_any_uca(8086,421868
static int my_strnncollsp_any_uca(8095,422215
static void my_hash_sort_any_uca(8105,422647
static size_t my_strnxfrm_any_uca(8112,422891
static int my_strnncoll_ucs2_uca(8125,423270
static int my_strnncollsp_ucs2_uca(8134,423622
static void my_hash_sort_ucs2_uca(8144,424059
static size_t my_strnxfrm_ucs2_uca(8151,424307
MY_COLLATION_HANDLER my_collation_ucs2_uca_handler 8159,424607
CHARSET_INFO my_charset_ucs2_unicode_ci=8174,424912
CHARSET_INFO my_charset_ucs2_icelandic_uca_ci=8206,425960
CHARSET_INFO my_charset_ucs2_latvian_uca_ci=8238,427009
CHARSET_INFO my_charset_ucs2_romanian_uca_ci=8270,428053
CHARSET_INFO my_charset_ucs2_slovenian_uca_ci=8302,429100
CHARSET_INFO my_charset_ucs2_polish_uca_ci=8334,430149
CHARSET_INFO my_charset_ucs2_estonian_uca_ci=8366,431190
CHARSET_INFO my_charset_ucs2_spanish_uca_ci=8398,432237
CHARSET_INFO my_charset_ucs2_swedish_uca_ci=8430,433281
CHARSET_INFO my_charset_ucs2_turkish_uca_ci=8462,434325
CHARSET_INFO my_charset_ucs2_czech_uca_ci=8494,435369
CHARSET_INFO my_charset_ucs2_danish_uca_ci=8527,436408
CHARSET_INFO my_charset_ucs2_lithuanian_uca_ci=8559,437449
CHARSET_INFO my_charset_ucs2_slovak_uca_ci=8591,438501
CHARSET_INFO my_charset_ucs2_spanish2_uca_ci=8623,439542
CHARSET_INFO my_charset_ucs2_roman_uca_ci=8656,440590
CHARSET_INFO my_charset_ucs2_persian_uca_ci=8689,441629
CHARSET_INFO my_charset_ucs2_esperanto_uca_ci=8722,442674
CHARSET_INFO my_charset_ucs2_hungarian_uca_ci=8755,443724
CHARSET_INFO my_charset_ucs2_sinhala_uca_ci=8788,444774
MY_COLLATION_HANDLER my_collation_any_uca_handler 8825,446109
static uchar ctype_utf8[ctype_utf88846,446650
CHARSET_INFO my_charset_utf8_unicode_ci=8868,447814
CHARSET_INFO my_charset_utf8_icelandic_uca_ci=8901,448868
CHARSET_INFO my_charset_utf8_latvian_uca_ci=8933,449922
CHARSET_INFO my_charset_utf8_romanian_uca_ci=8965,450971
CHARSET_INFO my_charset_utf8_slovenian_uca_ci=8997,452023
CHARSET_INFO my_charset_utf8_polish_uca_ci=9029,453077
CHARSET_INFO my_charset_utf8_estonian_uca_ci=9061,454123
CHARSET_INFO my_charset_utf8_spanish_uca_ci=9093,455175
CHARSET_INFO my_charset_utf8_swedish_uca_ci=9125,456224
CHARSET_INFO my_charset_utf8_turkish_uca_ci=9157,457273
CHARSET_INFO my_charset_utf8_czech_uca_ci=9189,458322
CHARSET_INFO my_charset_utf8_danish_uca_ci=9222,459366
CHARSET_INFO my_charset_utf8_lithuanian_uca_ci=9254,460412
CHARSET_INFO my_charset_utf8_slovak_uca_ci=9286,461469
CHARSET_INFO my_charset_utf8_spanish2_uca_ci=9318,462515
CHARSET_INFO my_charset_utf8_roman_uca_ci=9350,463567
CHARSET_INFO my_charset_utf8_persian_uca_ci=9382,464610
CHARSET_INFO my_charset_utf8_esperanto_uca_ci=9414,465659
CHARSET_INFO my_charset_utf8_hungarian_uca_ci=9446,466713
CHARSET_INFO my_charset_utf8_sinhala_uca_ci=9478,467767
#define MY_CS_UTF8MB4_UCA_FLAGS 9517,469186
CHARSET_INFO my_charset_utf8mb4_unicode_ci=9519,469291
CHARSET_INFO my_charset_utf8mb4_icelandic_uca_ci=9552,470588
CHARSET_INFO my_charset_utf8mb4_latvian_uca_ci=9584,471888
CHARSET_INFO my_charset_utf8mb4_romanian_uca_ci=9616,473188
CHARSET_INFO my_charset_utf8mb4_slovenian_uca_ci=9648,474489
CHARSET_INFO my_charset_utf8mb4_polish_uca_ci=9680,475791
CHARSET_INFO my_charset_utf8mb4_estonian_uca_ci=9712,477090
CHARSET_INFO my_charset_utf8mb4_spanish_uca_ci=9744,478391
CHARSET_INFO my_charset_utf8mb4_swedish_uca_ci=9776,479691
CHARSET_INFO my_charset_utf8mb4_turkish_uca_ci=9808,480991
CHARSET_INFO my_charset_utf8mb4_czech_uca_ci=9840,482291
CHARSET_INFO my_charset_utf8mb4_danish_uca_ci=9873,483590
CHARSET_INFO my_charset_utf8mb4_lithuanian_uca_ci=9905,484889
CHARSET_INFO my_charset_utf8mb4_slovak_uca_ci=9937,486192
CHARSET_INFO my_charset_utf8mb4_spanish2_uca_ci=9969,487491
CHARSET_INFO my_charset_utf8mb4_roman_uca_ci=10001,488796
CHARSET_INFO my_charset_utf8mb4_persian_uca_ci=10033,490094
CHARSET_INFO my_charset_utf8mb4_esperanto_uca_ci=10065,491394
CHARSET_INFO my_charset_utf8mb4_hungarian_uca_ci=10097,492696
CHARSET_INFO my_charset_utf8mb4_sinhala_uca_ci=10129,493998
MY_COLLATION_HANDLER my_collation_utf32_uca_handler 10166,495337
#define MY_CS_UTF32_UCA_FLAGS 10183,495721
CHARSET_INFO my_charset_utf32_unicode_ci=10185,495813
CHARSET_INFO my_charset_utf32_icelandic_uca_ci=10218,497111
CHARSET_INFO my_charset_utf32_latvian_uca_ci=10250,498414
CHARSET_INFO my_charset_utf32_romanian_uca_ci=10282,499715
CHARSET_INFO my_charset_utf32_slovenian_uca_ci=10314,501017
CHARSET_INFO my_charset_utf32_polish_uca_ci=10346,502320
CHARSET_INFO my_charset_utf32_estonian_uca_ci=10378,503620
CHARSET_INFO my_charset_utf32_spanish_uca_ci=10410,504922
CHARSET_INFO my_charset_utf32_swedish_uca_ci=10442,506223
CHARSET_INFO my_charset_utf32_turkish_uca_ci=10474,507524
CHARSET_INFO my_charset_utf32_czech_uca_ci=10506,508825
CHARSET_INFO my_charset_utf32_danish_uca_ci=10539,510125
CHARSET_INFO my_charset_utf32_lithuanian_uca_ci=10571,511425
CHARSET_INFO my_charset_utf32_slovak_uca_ci=10603,512729
CHARSET_INFO my_charset_utf32_spanish2_uca_ci=10635,514029
CHARSET_INFO my_charset_utf32_roman_uca_ci=10667,515331
CHARSET_INFO my_charset_utf32_persian_uca_ci=10699,516630
CHARSET_INFO my_charset_utf32_esperanto_uca_ci=10731,517931
CHARSET_INFO my_charset_utf32_hungarian_uca_ci=10763,519234
CHARSET_INFO my_charset_utf32_sinhala_uca_ci=10795,520537
MY_COLLATION_HANDLER my_collation_utf16_uca_handler 10833,521874
#define MY_CS_UTF16_UCA_FLAGS 10850,522258
CHARSET_INFO my_charset_utf16_unicode_ci=10852,522350
CHARSET_INFO my_charset_utf16_icelandic_uca_ci=10885,523648
CHARSET_INFO my_charset_utf16_latvian_uca_ci=10917,524951
CHARSET_INFO my_charset_utf16_romanian_uca_ci=10949,526252
CHARSET_INFO my_charset_utf16_slovenian_uca_ci=10981,527554
CHARSET_INFO my_charset_utf16_polish_uca_ci=11013,528857
CHARSET_INFO my_charset_utf16_estonian_uca_ci=11045,530157
CHARSET_INFO my_charset_utf16_spanish_uca_ci=11077,531459
CHARSET_INFO my_charset_utf16_swedish_uca_ci=11109,532760
CHARSET_INFO my_charset_utf16_turkish_uca_ci=11141,534061
CHARSET_INFO my_charset_utf16_czech_uca_ci=11173,535362
CHARSET_INFO my_charset_utf16_danish_uca_ci=11206,536662
CHARSET_INFO my_charset_utf16_lithuanian_uca_ci=11238,537962
CHARSET_INFO my_charset_utf16_slovak_uca_ci=11270,539266
CHARSET_INFO my_charset_utf16_spanish2_uca_ci=11302,540566
CHARSET_INFO my_charset_utf16_roman_uca_ci=11334,541844
CHARSET_INFO my_charset_utf16_persian_uca_ci=11366,543119
CHARSET_INFO my_charset_utf16_esperanto_uca_ci=11398,544396
CHARSET_INFO my_charset_utf16_hungarian_uca_ci=11430,545675
CHARSET_INFO my_charset_utf16_sinhala_uca_ci=11462,546928

strings/ctype-ucs2.c,4260
#define HAVE_CHARSET_mb229,1038
#define HAVE_CHARSET_mb2_or_mb434,1133
#define EILSEQ 39,1189
#undef  ULONGLONG_MAX42,1219
#define ULONGLONG_MAX 43,1241
#define MAX_NEGATIVE_NUMBER 44,1295
#define INIT_CNT 45,1367
#define LFACTOR 46,1387
#define LFACTOR1 47,1421
#define LFACTOR2 48,1456
static unsigned long lfactor[lfactor50,1493
my_bincmp(57,1654
my_caseup_str_mb2_or_mb4(68,1902
my_casedn_str_mb2_or_mb4(77,2081
my_strcasecmp_mb2_or_mb4(86,2255
my_strntol_mb2_or_mb4(96,2498
my_strntoul_mb2_or_mb4(207,4662
my_strntoll_mb2_or_mb4(311,6698
my_strntoull_mb2_or_mb4(422,8929
my_strntod_mb2_or_mb4(526,10999
my_strntoull10rnd_mb2_or_mb4(560,11776
my_l10tostr_mb2_or_mb4(595,12657
my_ll10tostr_mb2_or_mb4(646,13661
my_strtoll10_mb2(712,14849
my_scan_mb2(881,18693
my_fill_mb2(903,19151
my_vsnprintf_mb2(912,19367
my_snprintf_mb2(990,21180
my_lengthsp_mb2(1000,21399
#define MY_UTF16_HIGH_HEAD(1022,21888
#define MY_UTF16_LOW_HEAD(1023,21952
#define MY_UTF16_SURROGATE(1024,22016
my_utf16_uni(1027,22086
my_uni_utf16(1069,22978
my_tolower_utf16(1099,23582
my_toupper_utf16(1108,23771
my_tosort_utf16(1117,23960
my_caseup_utf16(1133,24209
my_hash_sort_utf16(1156,24803
my_casedn_utf16(1180,25389
my_strnncoll_utf16(1203,25980
my_strnncollsp_utf16(1267,27482
my_ismbchar_utf16(1341,29053
my_mbcharlen_utf16(1361,29438
my_numchars_utf16(1369,29611
my_charpos_utf16(1385,29879
my_well_formed_len_utf16(1401,30240
my_wildcmp_utf16_ci(1422,30634
my_wildcmp_utf16_bin(1434,31035
my_strnncoll_utf16_bin(1445,31390
my_strnncollsp_utf16_bin(1478,32138
my_hash_sort_utf16_bin(1548,33597
static MY_COLLATION_HANDLER my_collation_utf16_general_ci_handler 1567,34025
static MY_COLLATION_HANDLER my_collation_utf16_bin_handler 1583,34363
MY_CHARSET_HANDLER my_charset_utf16_handler=1599,34726
CHARSET_INFO my_charset_utf16_general_ci=1631,35488
CHARSET_INFO my_charset_utf16_bin=1664,36769
my_utf32_uni(1702,38094
my_uni_utf32(1713,38342
my_tolower_utf32(1728,38653
my_toupper_utf32(1737,38842
my_tosort_utf32(1746,39031
my_caseup_utf32(1762,39280
my_hash_add(1785,39881
my_hash_sort_utf32(1793,40013
my_casedn_utf32(1818,40662
my_strnncoll_utf32(1840,41225
my_strnncollsp_utf32(1904,42731
my_strnxfrmlen_utf32(1978,44310
my_ismbchar_utf32(1985,44421
my_mbcharlen_utf32(1994,44625
my_vsnprintf_utf32(2002,44769
my_snprintf_utf32(2091,46795
my_strtoll10_utf32(2101,47022
my_numchars_utf32(2271,51096
my_charpos_utf32(2279,51255
my_well_formed_len_utf32(2288,51499
void my_fill_utf32(2317,52100
my_lengthsp_utf32(2338,52497
my_wildcmp_utf32_ci(2350,52813
my_wildcmp_utf32_bin(2362,53216
my_strnncoll_utf32_bin(2373,53571
my_utf32_get(2405,54332
my_strnncollsp_utf32_bin(2416,54483
my_scan_utf32(2464,55425
static MY_COLLATION_HANDLER my_collation_utf32_general_ci_handler 2487,55857
static MY_COLLATION_HANDLER my_collation_utf32_bin_handler 2503,56179
MY_CHARSET_HANDLER my_charset_utf32_handler=2519,56523
CHARSET_INFO my_charset_utf32_general_ci=2551,57179
CHARSET_INFO my_charset_utf32_bin=2584,58460
static uchar ctype_ucs2[ctype_ucs22622,59772
static uchar to_lower_ucs2[to_lower_ucs22642,60884
static uchar to_upper_ucs2[to_upper_ucs22661,61992
static int my_ucs2_uni(2681,63101
static int my_uni_ucs2(2691,63355
static size_t my_caseup_ucs2(2706,63678
static void my_hash_sort_ucs2(2729,64355
static size_t my_casedn_ucs2(2753,64970
static int my_strnncoll_ucs2(2776,65645
static int my_strnncollsp_ucs2(2841,67250
static uint my_ismbchar_ucs2(2892,68443
static uint my_mbcharlen_ucs2(2900,68668
size_t my_numchars_ucs2(2908,68830
size_t my_charpos_ucs2(2916,68990
size_t my_well_formed_len_ucs2(2927,69331
int my_wildcmp_ucs2_ci(2940,69691
int my_wildcmp_ucs2_bin(2952,70042
int my_strnncoll_ucs2_bin(2963,70344
static int my_strnncollsp_ucs2_bin(2994,71089
void my_hash_sort_ucs2_bin(3042,72107
static MY_COLLATION_HANDLER my_collation_ucs2_general_ci_handler 3061,72508
static MY_COLLATION_HANDLER my_collation_ucs2_bin_handler 3077,72849
MY_CHARSET_HANDLER my_charset_ucs2_handler=3093,73196
CHARSET_INFO my_charset_ucs2_general_ci=3125,73963
CHARSET_INFO my_charset_ucs2_general_mysql500_ci=3158,75051
CHARSET_INFO my_charset_ucs2_bin=3191,77100

strings/ctype-ujis.c,1712
static uchar ctype_ujis[ctype_ujis35,1140
static uchar to_lower_ujis[to_lower_ujis72,3221
static uchar to_upper_ujis[to_upper_ujis108,6100
static uchar sort_order_ujis[sort_order_ujis144,8979
#define isujis(181,11871
#define iskata(182,11934
#define isujis_ss2(183,11997
#define isujis_ss3(184,12040
static uint ismbchar_ujis(187,12085
static uint mbcharlen_ujis(197,12428
size_t my_well_formed_len_ujis(212,12857
size_t my_numcells_eucjp(262,14120
static uint16 jisx0208_eucjp_to_unicode[jisx0208_eucjp_to_unicode296,14638
static uint16 unicode_to_jisx0208_eucjp[unicode_to_jisx0208_eucjp16685,905573
static uint16 jisx0212_eucjp_to_unicode[jisx0212_eucjp_to_unicode33074,1796508
static uint16 unicode_to_jisx0212_eucjp[unicode_to_jisx0212_eucjp49463,2687443
my_mb_wc_euc_jp(65882,3579435
my_wc_mb_euc_jp(65942,3581099
static MY_UNICASE_INFO cA2[cA265990,3581977
static MY_UNICASE_INFO cA3[cA366111,3586030
static MY_UNICASE_INFO cA6[cA666232,3590081
static MY_UNICASE_INFO cA7[cA766353,3594132
static MY_UNICASE_INFO c8FA6[c8FA666475,3598216
static MY_UNICASE_INFO c8FA7[c8FA766596,3602663
static MY_UNICASE_INFO c8FA9[c8FA966717,3607109
static MY_UNICASE_INFO c8FAA[c8FAA66838,3611556
static MY_UNICASE_INFO c8FAB[c8FAB66959,3616003
static MY_UNICASE_INFO *my_caseinfo_ujis[my_caseinfo_ujis67080,3620449
get_case_info_for_ch(67161,3624182
my_casefold_ujis(67172,3624433
my_casedn_ujis(67220,3625546
my_caseup_ujis(67233,3625861
static MY_COLLATION_HANDLER my_collation_ci_handler 67246,3626252
static MY_CHARSET_HANDLER my_charset_handler=67261,3626643
CHARSET_INFO my_charset_ujis_japanese_ci=67294,3627328
CHARSET_INFO my_charset_ujis_bin=67327,3628300

strings/ctype-utf8.c,4692
#define EILSEQ 27,955
#define MY_UTF8MB3_GENERAL_CI 31,986
#define MY_UTF8MB3_GENERAL_CS 32,1041
#define MY_UTF8MB3_BIN 33,1096
#define MY_UTF8MB4_GENERAL_CI 34,1144
#define MY_UTF8MB4_GENERAL_CS 35,1199
#define MY_UTF8MB4_BIN 36,1254
#define HAVE_CHARSET_utf841,1331
#define HAVE_UNIDATA45,1390
#define HAVE_UNIDATA49,1444
#define HAVE_UNIDATA53,1499
#define HAVE_UNIDATA57,1554
static MY_UNICASE_INFO plane00[plane0064,1628
static MY_UNICASE_INFO plane00_mysql500[plane00_mysql500200,8295
static MY_UNICASE_INFO plane01[plane01332,14871
static MY_UNICASE_INFO plane02[plane02463,21437
static MY_UNICASE_INFO plane03[plane03594,28003
static MY_UNICASE_INFO plane04[plane04725,34569
static MY_UNICASE_INFO plane05[plane05856,41135
static MY_UNICASE_INFO plane1E[plane1E987,47701
static MY_UNICASE_INFO plane1F[plane1F1118,54267
static MY_UNICASE_INFO plane21[plane211249,60833
static MY_UNICASE_INFO plane24[plane241380,67399
static MY_UNICASE_INFO planeFF[planeFF1511,73965
MY_UNICASE_INFO *my_unicase_default[my_unicase_default1642,80531
MY_UNICASE_INFO *my_unicase_mysql500[my_unicase_mysql5001682,82990
static MY_UNICASE_INFO turk00[turk001728,85629
MY_UNICASE_INFO *my_unicase_turkish[my_unicase_turkish1862,92197
my_tosort_unicode(1900,94600
my_wildcmp_unicode(1925,95022
my_strnxfrm_unicode(2081,99424
my_strnxfrm_unicode_full_bin(2127,100459
my_strnxfrmlen_unicode_full_bin(2171,101397
static uchar ctype_utf8[ctype_utf82186,101781
static uchar to_lower_utf8[to_lower_utf82208,102945
static uchar to_upper_utf8[to_upper_utf82227,104053
static inline int bincmp(2246,105161
static int my_utf8_uni(2256,105415
static int my_utf8_uni_no_range(2366,108149
static int my_uni_utf8 2407,108894
static int my_uni_utf8_no_range(2456,110139
static size_t my_caseup_utf8(2481,110680
static void my_hash_sort_utf8(2504,111384
static size_t my_caseup_str_utf8(2532,112102
static size_t my_casedn_utf8(2555,112679
static size_t my_casedn_str_utf8(2578,113381
static int my_strnncoll_utf8(2617,114308
static int my_strnncollsp_utf8(2687,116078
int my_strcasecmp_utf8(2781,118400
int my_wildcmp_utf8(2863,120714
size_t my_strnxfrmlen_utf8(2875,121062
static uint my_ismbchar_utf8(2882,121204
static uint my_mbcharlen_utf8(2889,121394
static MY_COLLATION_HANDLER my_collation_ci_handler 2912,121836
MY_CHARSET_HANDLER my_charset_utf8_handler=2927,122161
CHARSET_INFO my_charset_utf8_general_ci=2960,122818
CHARSET_INFO my_charset_utf8_general_mysql500_ci=2993,124115
CHARSET_INFO my_charset_utf8_bin=3026,126073
static int my_strnncoll_utf8_cs(3067,127625
static int my_strnncollsp_utf8_cs(3113,128798
static MY_COLLATION_HANDLER my_collation_cs_handler 3194,130893
CHARSET_INFO my_charset_utf8_general_cs=3209,131212
static uint16 touni[touni3267,133279
static uint16 uni_0C00_05FF[uni_0C00_05FF4023,177536
static uint16 uni_1E00_1FFF[uni_1E00_1FFF4197,187505
static uint16 uni_2160_217F[uni_2160_217F4267,191337
static uint16 uni_24B0_24EF[uni_24B0_24EF4277,191628
static uint16 uni_FF20_FF5F[uni_FF20_FF5F4291,192155
static int hexlo(4313,192758
static char filename_safe_char[filename_safe_char4346,194211
#define MY_FILENAME_ESCAPE 4358,194718
my_mb_wc_filename(4361,194761
my_wc_mb_filename(4419,195825
static MY_COLLATION_HANDLER my_collation_filename_handler 4461,196856
static MY_CHARSET_HANDLER my_charset_filename_handler=4476,197187
CHARSET_INFO my_charset_filename=4509,197867
static void test_mb(4545,199221
int main(4567,199530
static uchar ctype_utf8mb4[ctype_utf8mb44605,200268
static uchar to_lower_utf8mb4[to_lower_utf8mb44627,201383
static uchar to_upper_utf8mb4[to_upper_utf8mb44648,202494
bincmp_utf8mb4(4670,203623
my_mb_wc_utf8mb4(4681,203878
my_mb_wc_utf8mb4_no_range(4767,206060
my_wc_mb_utf8mb4(4822,207226
my_wc_mb_utf8mb4_no_range(4858,208026
my_tolower_utf8mb4(4887,208690
my_toupper_utf8mb4(4896,208881
my_caseup_utf8mb4(4905,209067
my_hash_add(4929,209753
my_hash_sort_utf8mb4(4937,209885
my_caseup_str_utf8mb4(4974,210828
my_casedn_utf8mb4(4997,211358
my_casedn_str_utf8mb4(5022,212056
my_strnncoll_utf8mb4(5061,212933
my_strnncollsp_utf8mb4(5128,214624
my_strcasecmp_utf8mb4(5218,216827
my_wildcmp_utf8mb4(5278,218204
my_strnxfrmlen_utf8mb4(5289,218562
my_ismbchar_utf8mb4(5297,218744
my_mbcharlen_utf8mb4(5306,218945
static MY_COLLATION_HANDLER my_collation_utf8mb4_general_ci_handler=5322,219230
static MY_COLLATION_HANDLER my_collation_utf8mb4_bin_handler 5338,219567
MY_CHARSET_HANDLER my_charset_utf8mb4_handler=5354,219919
CHARSET_INFO my_charset_utf8mb4_general_ci=5387,220553
CHARSET_INFO my_charset_utf8mb4_bin=5420,221842

strings/ctype-win1250ch.c,1664
#define REAL_MYSQL39,1523
#define uchar 49,1654
static uint16 tab_cp1250_uni[tab_cp1250_uni56,1720
static uchar tab_uni_cp1250_plane00[tab_uni_cp1250_plane0093,3612
static uchar tab_uni_cp1250_plane01[tab_uni_cp1250_plane01112,4968
static uchar tab_uni_cp1250_plane20[tab_uni_cp1250_plane20123,5671
static uchar tab_uni_cp1250_plane02[tab_uni_cp1250_plane02136,6521
static uchar tab_uni_cp1250_plane21[tab_uni_cp1250_plane21141,6708
static MY_UNI_IDX idx_uni_cp1250[idx_uni_cp1250145,6757
static uchar ctype_win1250ch[ctype_win1250ch155,7022
static uchar to_lower_win1250ch[to_lower_win1250ch191,8602
static uchar to_upper_win1250ch[to_upper_win1250ch226,10179
static uchar sort_order_win1250ch[sort_order_win1250ch263,11758
static uchar _sort_order_win1250ch1[_sort_order_win1250ch1282,12971
static uchar _sort_order_win1250ch2[_sort_order_win1250ch2342,15005
struct wordvalue 402,17039
	const uchar *word;word403,17058
	uchar pass1;404,17078
	uchar pass2;405,17092
static struct wordvalue doubles[doubles407,17109
#define NEXT_CMP_VALUE(415,17311
#define IS_END(446,18144
static int my_strnncoll_win1250ch(448,18210
int my_strnncollsp_win1250ch(479,18852
static size_t my_strnxfrm_win1250ch(491,19251
#undef IS_END512,19772
static uchar like_range_prefix_min_win1250ch[like_range_prefix_min_win1250ch516,19806
static uchar like_range_prefix_max_win1250ch[like_range_prefix_max_win1250ch560,21702
#define min_sort_char 596,23355
#define max_sort_char 597,23384
my_like_range_win1250ch(617,24063
static MY_COLLATION_HANDLER my_collation_czech_ci_handler 664,25284
CHARSET_INFO my_charset_cp1250_czech_ci 680,25609

strings/decimal.c,2508
typedef decimal_digit_t dec1;122,4828
typedef longlong      dec2;123,4858
#define DIG_PER_DEC1 125,4887
#define DIG_MASK 126,4910
#define DIG_BASE 127,4941
#define DIG_MAX 128,4973
#define DIG_BASE2 129,5007
#define ROUND_UP(130,5062
static const dec1 powers10[powers10131,5119
static const int dig2bytes[dig2bytes133,5242
static const dec1 frac_max[frac_max134,5317
#define sanity(140,5478
#define sanity(142,5528
#define FIX_INTG_FRAC_ERROR(146,5655
#define ADD(167,7081
#define ADD2(177,7693
#define SUB(191,8601
#define SUB2(200,9139
void max_decimal(224,10308
static dec1 *remove_leading_zeroes(remove_leading_zeroes251,10929
int decimal_actual_fraction(282,11514
int decimal2string(329,12887
static void digits_bounds(448,15594
void do_mini_left_shift(515,17403
void do_mini_right_shift(545,18355
int decimal_shift(578,19417
internal_str2dec(788,25066
int decimal2double(946,28160
int double2decimal(976,28790
static int ull2dec(988,29106
int ulonglong2decimal(1014,29568
int longlong2decimal(1020,29668
int decimal2ulonglong(1027,29811
int decimal2longlong(1056,30384
int decimal2bin(1175,34082
int bin2decimal(1310,37267
int decimal_size(1429,40164
int decimal_bin_size(1442,40444
decimal_round(1472,41243
int decimal_result_size(1692,46307
static int do_add(1711,46918
static int do_sub(1793,49028
int decimal_intg(1928,52109
int decimal_add(1935,52216
int decimal_sub(1942,52414
int decimal_cmp(1949,52612
int decimal_is_zero(1956,52804
int decimal_mul(1987,53613
static int do_div_mod(2112,56839
decimal_div(2377,63565
int decimal_mod(2410,64161
int full=2417,64303
decimal_t a,2418,64316
decimal_t a, b,2418,64316
decimal_t a, b, c;2418,64316
char buf1[buf12419,64335
char buf1[100], buf2[buf22419,64335
char buf1[100], buf2[100], buf3[buf32419,64335
void dump_decimal(2421,64374
void check_result_code(2431,64626
void print_decimal(2441,64774
void test_d2s(2457,65124
void test_s2d(2493,66221
void test_d2f(2505,66507
void test_d2b2d(2520,66826
void test_f2d(2542,67391
void test_ull2d(2552,67581
void test_ll2d(2564,67831
void test_d2ull(2576,68079
void test_d2ll(2596,68521
void test_da(2616,68961
void test_ds(2631,69332
void test_dc(2646,69703
void test_dm(2664,70097
void test_dv(2679,70468
void test_md(2698,70940
const char *round_mode[round_mode2717,71410
void test_ro(2720,71495
void test_mx(2735,71870
void test_pr(2746,72108
void test_sh(2770,72702
void test_fr(2784,73056
int main(2797,73330

strings/do_ctype.c,384
#undef DBUG_OFF20,863
uchar to_upper[to_upper28,972
uchar to_lower[to_lower29,993
uchar to_lower[256], sort_order[sort_order29,993
static int	ascii_output=31,1032
static string	tab_names[tab_names32,1059
static uchar*	tabell[tabell33,1137
main(37,1235
void get_options(73,1906
#define MAX_CHAR_OK	120,2908
#define MAX_CHAR_OK	122,2969
void init_case_convert(127,3067

strings/dtoa.c,3149
#define DTOA_BUFF_SIZE 49,2027
#define DTOA_OVERFLOW 52,2132
size_t my_fcvt(89,3981
size_t my_gcvt(212,8209
double my_strtod(461,15339
double my_atof(474,15723
typedef int32 Long;545,18607
typedef uint32 ULong;546,18627
typedef int64 LLong;547,18649
typedef uint64 ULLong;548,18670
typedef union { double d;550,18694
typedef union { double d; ULong L[L550,18694
typedef union { double d; ULong L[2]; } U;550,18694
#define word0(554,18882
#define word1(555,18909
#define word0(557,18942
#define word1(558,18969
#define dval(561,19004
#define Exp_shift 569,19262
#define Exp_shift1 570,19284
#define Exp_msk1 571,19306
#define Exp_mask 572,19335
#define P 573,19364
#define Bias 574,19377
#define Emin 575,19395
#define Exp_1 576,19416
#define Exp_11 577,19442
#define Ebits 578,19468
#define Frac_mask 579,19485
#define Frac_mask1 580,19512
#define Ten_pmax 581,19539
#define Bletch 582,19559
#define Bndry_mask 583,19579
#define Bndry_mask1 584,19607
#define LSB 585,19635
#define Sign_bit 586,19649
#define Log2P 587,19677
#define Tiny1 588,19693
#define Quick_max 589,19709
#define Int_max 590,19730
#define Flt_Rounds 594,19787
#define Flt_Rounds 596,19823
#define Rounding 601,19898
#undef Check_FLT_ROUNDS602,19924
#define Check_FLT_ROUNDS603,19948
#define Rounding 605,19979
#define rounded_product(608,20015
#define rounded_quotient(609,20050
#define Big0 611,20087
#define Big1 612,20145
#define FFFFFFFF 613,20169
#define Kmax 617,20244
#define Bcopy(619,20261
typedef struct Bigint624,20424
    ULong *x;x627,20458
    struct Bigint *next;next628,20529
  } p;629,20585
  int k;630,20592
  int maxwds;631,20638
  int sign;632,20702
  int wds;633,20766
} Bigint;634,20830
typedef struct Stack_alloc639,20899
  char *begin;begin641,20928
  char *free;free642,20943
  char *end;end643,20957
  Bigint *freelist[freelist648,21108
} Stack_alloc;649,21136
static Bigint *Balloc(Balloc659,21388
static void Bfree(697,22067
static char *dtoa_alloc(dtoa_alloc722,22785
static void dtoa_free(742,23161
static Bigint *multadd(multadd753,23355
static Bigint *s2b(s2b800,24378
static int hi0bits(830,24929
static int lo0bits(864,25317
static Bigint *i2b(i2b916,25882
static Bigint *mult(mult929,26047
static ULong powers5[powers5985,27004
static Bigint p5_a[p5_a1007,27594
#define P5A_MAX 1019,27909
static Bigint *pow5mult(pow5mult1021,27959
static Bigint *lshift(lshift1065,28705
static int cmp(1105,29305
static Bigint *diff(diff1129,29624
static double ulp(1183,30425
static double b2d(1195,30582
#define d0 1200,30665
#define d1 1201,30686
#undef d01228,31146
#undef d11229,31156
static Bigint *d2b(d2b1234,31189
#define d0 1240,31308
#define d1 1241,31328
#undef d01279,31931
#undef d11280,31941
static double ratio(1284,31955
static const double tens[tens1302,32250
static const double bigtens[bigtens1309,32418
static const double tinytens[tinytens1310,32485
#define Scale_Bit 1318,32770
#define n_bigtens 1319,32793
static double my_strtod_int(1350,33968
static int quorem(2078,49554
static char *dtoa(dtoa2177,52492

strings/dump_map.c,56
static void print_short_array(20,785
int main(36,1073

strings/int2str.c,145
char _dig_vec_upper[_dig_vec_upper22,873
char _dig_vec_lower[_dig_vec_lower24,939
int2str(53,1921
char *int10_to_str(int10_to_str133,4149

strings/is_prefix.c,22
int is_prefix(28,960

strings/llstr.c,56
char *llstr(llstr31,1080
char *ullstr(ullstr37,1176

strings/longlong2str.c,81
char *ll2str(ll2str50,1902
char *longlong10_to_str(longlong10_to_str101,2964

strings/my_strchr.c,132
#define NEQ(20,812
#define EQU(21,843
#define SCAN_STRING(34,1255
char *my_strchr(my_strchr63,2873
size_t my_strcspn(100,3857

strings/my_strtoll10.c,213
#define MAX_NEGATIVE_NUMBER	20,855
#define INIT_CNT 21,920
#define LFACTOR 22,940
#define LFACTOR1 23,974
#define LFACTOR2 24,1009
static unsigned long lfactor[lfactor26,1046
longlong my_strtoll10(74,2698

strings/my_vsnprintf.c,1229
#define MAX_ARGS 22,833
#define MAX_PRINT_INFO 23,910
#define LENGTH_ARG 25,988
#define WIDTH_ARG 26,1013
#define PREZERO_ARG 27,1038
#define ESCAPED_ARG 28,1063
typedef struct pos_arg_info ARGS_INFO;30,1090
typedef struct print_info PRINT_INFO;31,1129
struct pos_arg_info33,1168
  char arg_type;35,1190
  uint have_longlong;36,1256
  char *str_arg;str_arg37,1333
  longlong longlong_arg;38,1409
  double double_arg;39,1486
struct print_info43,1567
  char arg_type;45,1587
  size_t arg_idx;46,1653
  size_t length;47,1733
  size_t width;48,1810
  uint flags;49,1887
  const char *begin;begin50,1901
  const char *end;end51,1952
static const char *get_length(get_length66,2305
static const char *get_width(get_width88,2829
static const char *check_longlong(check_longlong107,3236
static char *backtick_string(backtick_string144,3981
static char *process_str_arg(process_str_arg187,4825
static char *process_bin_arg(process_bin_arg212,5450
static char *process_dbl_arg(process_dbl_arg227,5733
static char *process_int_arg(process_int_arg248,6274
static char *process_args(process_args319,8209
size_t my_vsnprintf_ex(539,14271
size_t my_vsnprintf(668,17302
size_t my_snprintf(674,17439

strings/str2int.c,96
#define char_val(47,1959
char *str2int(str2int52,2112
int atoi(187,6486
long atol(195,6608

strings/str_alloc.c,105
static void *my_str_malloc_default(my_str_malloc_default20,790
static void my_str_free_default(28,909

strings/strappend.c,24
void strappend(31,1097

strings/strcend.c,31
char *strcend(strcend28,1060

strings/strcont.c,24
char * strcont(31,1075

strings/strend.c,29
char *strend(strend32,1211

strings/strfill.c,24
char * strfill(30,1086

strings/strmake.c,31
char *strmake(strmake31,1175

strings/strmov.c,75
#undef strmov28,1127
#define strmov 29,1141
char *strmov(strmov32,1180

strings/strnlen.c,24
size_t strnlen(29,1000

strings/strnmov.c,31
char *strnmov(strnmov27,1043

strings/strxmov.c,31
char *strxmov(strxmov38,1480

strings/strxnmov.c,33
char *strxnmov(strxnmov43,1689

strings/uca-dump.c,447
typedef unsigned char uchar;21,799
typedef unsigned short uint16;22,828
struct uca_item_st24,860
  uchar  num;26,881
  uint16 weight[weight27,895
#define MY_UCA_NPAGES	31,928
#define MY_UCA_NCHARS	32,955
#define MY_UCA_CMASK	33,980
#define MY_UCA_PSHIFT	34,1004
#define MY_UCA_NPAGES	36,1034
#define MY_UCA_NCHARS	37,1060
#define MY_UCA_CMASK	38,1086
#define MY_UCA_PSHIFT	39,1111
static char *pname[pname42,1143
int main(44,1182

strings/uctypedump.c,216
typedef struct my_ctype_name_st28,887
  const char *name;name30,921
  int val;31,941
} MY_CTYPE_NAME_ST;32,952
static MY_CTYPE_NAME_ST my_ctype_name[my_ctype_name35,974
ctypestr2num(78,3013
int main(90,3191

strings/utr11-dump.c,18
int main(35,1056

strings/xml.c,1398
#define MY_XML_UNKNOWN 21,812
#define MY_XML_EOF	22,840
#define MY_XML_STRING	23,863
#define MY_XML_IDENT	24,889
#define MY_XML_EQ	25,914
#define MY_XML_LT	26,936
#define MY_XML_GT	27,958
#define MY_XML_SLASH	28,980
#define MY_XML_COMMENT	29,1005
#define MY_XML_TEXT	30,1032
#define MY_XML_QUESTION	31,1056
#define MY_XML_EXCLAM 32,1084
#define MY_XML_CDATA 33,1112
typedef struct xml_attr_st35,1141
  const char *beg;beg37,1170
  const char *end;end38,1189
} MY_XML_ATTR;39,1208
#define	MY_XML_ID0 45,1244
#define	MY_XML_ID1 46,1304
#define	MY_XML_SPC 47,1364
static char my_xml_ctype[my_xml_ctype57,1603
#define my_xml_is_space(77,2439
#define my_xml_is_id0(78,2508
#define my_xml_is_id1(79,2577
static const char *lex2str(lex2str82,2648
static void my_xml_norm_text(102,3238
my_xml_parser_prefix_cmp(110,3456
static int my_xml_scan(116,3595
static int my_xml_value(204,5415
static int my_xml_enter(210,5553
static void mstr(232,6117
static int my_xml_leave(240,6244
int my_xml_parse(278,7119
void my_xml_parser_create(444,11306
void my_xml_parser_free(450,11388
void my_xml_set_value_handler(455,11461
void my_xml_set_enter_handler(462,11609
void my_xml_set_leave_handler(470,11758
void my_xml_set_user_data(478,11911
const char *my_xml_error_string(my_xml_error_string484,12004
size_t my_xml_error_pos(490,12080
uint my_xml_error_lineno(502,12279

tests/bug25714.c,17
int main 23,866

tests/connect_test.c,50
static void change_user(20,755
int main(32,1113

tests/deadlock_test.c,614
typedef unsigned char uchar;23,836
int count 31,1189
struct query34,1206
  MYSQL* mysql;36,1221
  char* query;37,1237
  int read_ok;38,1252
  int pri;39,1267
  int dump_result;40,1278
MYSQL lock,43,1301
MYSQL lock, sel,43,1301
MYSQL lock, sel, del_ins;43,1301
struct query queries[queries45,1328
static void die(56,1661
static void permute(67,1850
static order_ok(80,2139
static void permute_aux(97,2449
static void run_query_batch(137,3153
static void safe_net_read(161,3687
static void safe_query(172,3932
static void dump_result(185,4249
static int* init_order(194,4432
int main(213,4795

tests/insert_test.c,46
#define INSERT_QUERY 20,755
int main(23,831

tests/list_test.c,46
#define SELECT_QUERY 23,798
int main(26,860

tests/mysql_client_fw.c,4161
#define VER 26,956
#define MAX_TEST_QUERY_LENGTH 27,974
#define MAX_KEY 28,1038
#define MAX_SERVER_ARGS 29,1066
static int   opt_testcase 32,1120
static char *opt_db=opt_db33,1151
static char *opt_user=opt_user34,1175
static char *opt_password=opt_password35,1201
static char *opt_host=opt_host36,1231
static char *opt_unix_socket=opt_unix_socket37,1257
static char *shared_memory_base_name=shared_memory_base_name39,1307
static unsigned int  opt_port;41,1355
static my_bool tty_password=42,1386
static MYSQL *mysql=mysql44,1434
static char current_db[current_db45,1458
static unsigned int test_count=46,1502
static unsigned int opt_count=47,1537
static unsigned int iter_count=48,1571
static my_bool have_innodb=49,1606
static char *opt_plugin_dir=opt_plugin_dir50,1641
static unsigned int opt_drop_db=51,1695
static const char *opt_basedir=opt_basedir53,1732
static const char *opt_vardir=opt_vardir54,1770
static longlong opt_getopt_ll_test=56,1820
static int embedded_server_arg_count=58,1860
static char *embedded_server_args[embedded_server_args59,1901
static const char *embedded_server_groups[embedded_server_groups61,1954
static time_t start_time,68,2061
static time_t start_time, end_time;68,2061
static double total_time;69,2097
const char *default_dbug_option=default_dbug_option71,2124
struct my_tests_st73,2196
const char *name;name75,2217
void       (*function)function76,2235
#define myheader(79,2265
#define myheader_r(89,2620
#define DIE_UNLESS(114,3265
#define DIE_IF(116,3356
#define DIE(118,3444
static void die(121,3499
#define myerror(130,3678
#define mysterror(131,3716
#define myquery(133,3772
#define myquery_r(141,3894
#define check_execute(148,3995
#define check_execute_r(155,4112
#define check_stmt(162,4230
#define check_stmt_r(169,4344
#define mytest(176,4460
#define mytest_r(177,4523
static int cmp_double(182,4642
static void print_error(190,4741
static void print_st_error(208,5132
static MYSQL *mysql_client_init(mysql_client_init231,5685
#define mysql_init(249,6197
static my_bool check_have_innodb(254,6321
mysql_simple_prepare(281,6846
static MYSQL* client_connect(304,7524
static void client_disconnect(374,9333
static void my_print_dashes(404,9924
static void my_print_result_metadata(426,10337
static int my_process_result_set(474,11247
static int my_process_result(530,12406
#define MAX_RES_FIELDS 547,12692
#define MAX_FIELD_DATA_SIZE 548,12718
static int my_process_stmt_result(550,12751
int my_stmt_result(642,15075
void my_process_warnings(664,15508
static void verify_col_data(688,16054
#define verify_prepare_field(727,16883
static void do_verify_prepare_field(733,17116
static void verify_param_count(819,20071
static void verify_st_affected_rows(831,20405
static void verify_affected_rows(843,20771
static void verify_field_count(855,21111
static void execute_prepare_query(868,21478
void fill_tables(895,22093
enum { MAX_COLUMN_LENGTH=915,22502
typedef struct st_stmt_fetch917,22536
const char *query;query919,22567
unsigned stmt_no;920,22586
MYSQL_STMT *handle;handle921,22604
my_bool is_open;922,22624
MYSQL_BIND *bind_array;bind_array923,22641
char **out_data;out_data924,22665
unsigned long *out_data_length;out_data_length925,22682
unsigned column_count;926,22714
unsigned row_count;927,22737
} Stmt_fetch;928,22757
void stmt_fetch_init(936,22868
int stmt_fetch_fetch_row(1001,24711
void stmt_fetch_close(1025,25232
enum fetch_type 1046,25714
enum fetch_type { USE_ROW_BY_ROW_FETCH=1046,25714
enum fetch_type { USE_ROW_BY_ROW_FETCH= 0, USE_STORE_RESULT=1046,25714
my_bool fetch_n(1048,25781
static my_bool thread_query(1116,27551
static const char *client_test_load_default_groups[client_test_load_default_groups1155,28286
static char **defaults_argv;defaults_argv1156,28357
static struct my_option client_test_long_options[client_test_long_options1158,28387
static void usage(1220,31250
static struct my_tests_st *my_testlist=my_testlist1239,32014
get_one_option(1242,32073
static void get_options(1312,33610
static void print_test_output(1329,33922
int main(1349,34484

tests/mysql_client_test.c,12237
static void client_query(38,1359
static void client_store_result(83,2467
static void client_use_result(104,2816
static void test_debug_example(124,3157
static void test_tran_bdb(163,4151
static void test_tran_innodb(237,5932
static void test_prepare_insert_update(310,7695
static void test_prepare_simple(361,9063
#define FILE_PATH_SIZE 430,10759
char mct_log_file_path[mct_log_file_path432,10788
FILE *mct_log_file=mct_log_file433,10828
void mct_start_logging(435,10855
void mct_log(480,11975
void mct_close_log(496,12236
#define WL4435_NUM_PARAMS 505,12353
#define WL4435_STRING_SIZE 506,12382
static void test_wl4435(508,12413
static void test_wl4435_2(931,23500
#define WL4435_TEST(991,24733
static void test_wl4435_3(1059,26483
static void test_prepare_field_result(1242,34055
static void test_prepare_syntax(1295,35976
static void test_prepare(1326,36736
static void test_double_compare(1506,41567
static void test_null(1591,43678
static void test_ps_null_param(1694,46159
static void test_fetch_null(1769,48147
static void test_select_version(1849,50260
static void test_select_show_table(1871,50626
static void test_select_direct(1896,51055
static void test_select_prepare(1936,52041
static void test_select(1998,53564
static void test_ps_conj_select(2070,55294
static uint query_cache_hits(2128,56860
#define test_ps_query_cache_result(2153,57340
static void test_ps_query_cache(2186,59248
  enum enum_test_ps_query_cache2198,59642
    TEST_QCACHE_ON=2205,59879
    TEST_QCACHE_ON_WITH_OTHER_CONN,2210,60037
    TEST_QCACHE_OFF_ON,2215,60227
    TEST_QCACHE_ON_OFF2220,60370
static void test_bug1115(2397,65587
static void test_bug1180(2509,69039
static void test_bug1644(2598,71160
static void test_select_show(2703,73273
static void test_simple_update(2767,74725
static void test_long_data(2847,76628
static void test_long_data_str(2931,78863
static void test_long_data_str1(3023,81136
static void test_long_data_bin(3182,85544
static void test_simple_delete(3261,87342
static void test_update(3344,89327
static void test_prepare_noparam(3445,91817
static void test_bind_result(3493,92839
static void test_bind_result_ext(3581,95088
static void test_bind_result_ext1(3701,98612
static void bind_fetch(3835,102712
static void test_fetch_date(3994,106671
static void test_fetch_str(4133,111024
static void test_fetch_long(4157,111737
static void test_fetch_short(4181,112445
static void test_fetch_tiny(4205,113189
static void test_fetch_bigint(4230,113929
static void test_fetch_float(4255,114681
static void test_fetch_double(4280,115405
static void test_prepare_ext(4302,115934
static void test_field_names(4422,119032
static void test_warnings(4469,120279
static void test_errors(4497,120844
static void test_insert(4522,121297
static void test_prepare_resultset(4601,123171
static void test_field_flags(4634,123940
static void test_stmt_close(4692,125684
static void test_set_variable(4813,128778
static void test_func_fields(4915,131256
static void test_multi_stmt(4998,133360
static void test_manual_sample(5130,136595
static void test_prepare_alter(5294,141084
static void test_multi_statements(5351,142419
static void test_prepare_multi_statements(5506,146682
static void test_store_result(5536,147489
static void test_store_result1(5664,150804
static void test_store_result2(5721,152085
static void test_subselect(5809,154138
static void test_bind_date_conv(5930,156924
static void test_date(6060,160372
static void test_date_date(6082,160872
static void test_date_time(6104,161373
static void test_date_ts(6126,161884
static void test_date_dt(6148,162409
static void test_pure_coverage(6167,162775
static void test_buffers(6250,164868
static void test_open_direct(6343,167446
static void test_fetch_nobuffs(6444,169752
static void test_ushort_bug(6505,171263
static void test_sshort_bug(6593,173706
static void test_stiny_bug(6680,176094
static void test_field_misc(6766,178426
static void test_set_option(6883,181812
static void test_prepare_grant(6957,183489
static void test_frm_bug(7058,186188
static void test_decimal_bug(7145,188239
static void test_explain_bug(7251,190665
#define myerrno(7393,195344
static void check_errcode(7395,195381
static void test_drop_temp(7409,195748
static void test_cuted_rows(7521,198585
static void test_logs(7585,200047
static void test_nstmts(7739,203608
static void test_fetch_seek(7812,205196
static void test_fetch_offset(7907,207402
static void test_fetch_column(7999,209635
static void test_list_fields(8136,213308
static void test_bug19671(8167,214102
static void test_mem_overun(8203,214936
static void test_free_result(8280,216662
static void test_free_store_result(8361,218738
static void test_sqlmode(8443,220754
static void test_ts(8584,224321
static void test_bug1500(8695,227083
static void test_bug1946(8806,229741
static void test_parse_error_and_bad_length(8833,230371
static void test_bug2247(8864,231312
  enum { NUM_ROWS=8876,231709
static void test_subqueries(8943,233474
static void test_bad_union(8980,234539
static void test_distinct(8993,234763
static void test_bug2248(9033,235665
static void test_subqueries_ref(9087,236872
static void test_union(9121,237655
static void test_bug3117(9174,239298
static void test_join(9240,240753
static void test_selecttmp(9292,242289
static void test_create_drop(9339,243566
static void test_rename(9420,245706
static void test_do_set(9469,246796
static void test_multi(9507,247658
static void test_insert_select(9595,250037
static void test_bind_nagative(9643,251171
static void test_derived(9688,252269
static void test_xjoin(9741,253545
static void test_bug3035(9794,255216
static void test_union2(9994,261259
static void test_bug1664(10034,262206
static void test_order_param(10172,265914
static void test_union_param(10211,267043
static void test_ps_i18n(10261,268297
static void test_bug3796(10448,273728
  enum { OUT_BUFF_SIZE=10453,273845
static void test_bug4026(10529,276002
static void test_bug4079(10605,278210
static void test_bug4236(10649,279320
static void test_bug4030(10677,280056
static void test_view(10753,282674
static void test_view_where(10836,285706
static void test_view_2where(10879,286794
static void test_view_star(10962,290203
static void test_view_insert(11016,291565
static void test_left_join_view(11079,293272
static void test_view_insert_fields(11119,294265
static void test_bug5126(11194,296887
static void test_bug4231(11242,298077
static void test_bug5399(11315,299915
#define NUM_OF_USED_STMT 11321,300084
#undef NUM_OF_USED_STMT11359,301185
static void test_bug5194(11363,301213
static void test_bug5315(11553,309572
static void test_bug6049(11592,310573
static void test_bug6058(11641,311712
static void test_bug6059(11693,312901
static void test_bug6046(11709,313230
static void test_basic_cursors(11756,314334
static void test_cursors_with_union(11801,315547
static void test_cursors_with_procedure(11814,315914
static void test_bug6081(11833,316527
static void test_bug6096(11863,317600
static void test_datetime_ranges(11972,321516
static void test_bug4172(12101,325362
static void test_conversion(12166,327169
static void test_rewind(12233,328979
static void test_truncation(12298,330672
static void test_truncation_option(12543,339598
static void test_bug6761(12597,341010
static void test_bug8330(12620,341552
static void test_bug7990(12671,342895
static void test_bug15518(12693,343406
static void disable_query_logs(12764,345495
static void enable_query_logs(12774,345693
static void restore_query_logs(12802,346272
static void test_view_sp_list_fields(12813,346516
#define TEST_BUG8378_IN 12856,347806
#define TEST_BUG8378_OUT 12857,347858
static void test_bug8378(12859,347923
static void test_bug8722(12909,349087
MYSQL_STMT *open_cursor(open_cursor12950,350465
static void test_bug8880(12964,350783
static void test_bug9159(12992,351636
static void test_bug9520(13019,352384
static void test_bug9478(13076,353757
static void test_bug9643(13217,357800
static void test_bug11111(13278,359475
static void test_bug10729(13339,361100
static void test_bug9992(13401,362757
static void test_bug10736(13450,364016
static void test_bug10794(13506,365521
static void test_bug11172(13594,368191
static void test_bug11656(13664,370299
static void test_bug10214(13721,371817
static void test_client_character_set(13742,372380
static void test_bug9735(13764,372971
static void test_bug11183(13791,373758
static void test_bug11037(13833,374715
static void test_bug10760(13879,375762
static void test_bug12001(13987,378789
static void test_bug11909(14039,380159
static void test_bug11901(14157,383760
static void test_bug11904(14279,388922
static void test_bug12243(14354,391011
static void test_bug11718(14417,392641
static void test_bug12925(14453,393659
static void test_bug14210(14466,393893
static void test_bug13488(14515,395316
static void test_bug13524(14589,397249
static void test_bug14845(14647,398746
static void test_bug15510(14692,399898
static void test_opt_reconnect(14723,400530
static void test_bug12744(14797,402375
static void test_bug16143(14832,403197
static void test_bug16144(14847,403505
static void test_bug15613(14868,404080
static void test_bug17667(14935,406468
  enum query_type 14939,406528
  enum query_type { QT_NORMAL,14939,406528
  enum query_type { QT_NORMAL, QT_PREPARED}QT_PREPARED14939,406528
  struct buffer_and_length 14940,406573
    enum query_type qt;14941,406602
    const char *buffer;buffer14942,406626
    const uint length;14943,406650
static void test_bug14169(15075,410819
static void test_mysql_insert_id(15114,411947
static void test_bug20152(15314,419047
static void test_bug15752(15363,420251
static void test_bug21206(15427,422241
static void test_status(15467,423125
static void test_bug21726(15490,423728
static void test_bug23383(15538,424945
static void test_bug21635(15615,426898
static void test_bug24179(15690,428864
static void test_bug32265(15718,429403
static void test_bug28075(15810,432081
static void test_bug27876(15831,432404
static void test_bug28505(15899,433999
static void test_bug28934(15918,434528
static void test_change_user(15954,435396
static void test_bug27592(16176,441272
static void test_bug29687(16228,442310
static void test_bug29692(16260,442936
static void test_bug29306(16290,443747
static void bug30472_retrieve_charset_info(16339,445032
static void test_bug30472(16373,446245
static void bug20023_change_user(16502,450939
static my_bool query_str_variable(16510,451154
static my_bool query_int_variable(16539,451798
static void test_bug20023(16552,452106
static void bug31418_impl(16701,456658
static void test_bug31418(16782,459344
#define LARGE_BUFFER_SIZE 16799,459567
static void test_bug31669(16801,459599
static void test_bug28386(16897,462047
static void test_wl4166_1(16971,463672
static void test_wl4166_2(17089,466749
static void test_wl4166_3(17188,469049
static void test_wl4166_4(17247,470444
static void test_bug36004(17347,473220
static void test_wl4284_1(17392,474316
static void test_bug38486(17442,475258
static void test_bug33831(17474,476078
static void test_bug40365(17507,476790
static void test_bug43560(17601,479155
static void test_bug36326(17695,481824
static void test_bug41078(17748,483316
static void test_bug45010(17810,484793
static void test_bug44495(17841,485526
static void test_bug53371(17886,486639
static void test_bug42373(17934,487900
static void test_bug54041_impl(18015,489926
static void test_bug54041(18072,491182
static void test_bug47485(18085,491421
static void test_bug58036(18186,493705
static void test_bug49972(18260,495791
static void test_bug56976(18362,498177
static void test_mdev3885(18411,499307
static void test_bug57058(18430,499652
static void test_bug11766854(18468,500443
static void test_bug12337762(18489,500941
static void test_bug11754979(18566,503052
static void test_bug13001491(18592,503969
static struct my_tests_st my_tests[my_tests18668,505984
static struct my_tests_st *get_my_tests(get_my_tests18935,516611

tests/select_test.c,46
#define SELECT_QUERY 23,822
int main(26,884

tests/showdb_test.c,46
#define SELECT_QUERY 24,799
int main(27,861

tests/ssl_test.c,46
#define SELECT_QUERY 24,818
int main(27,880

tests/thread_test.c,1348
static my_bool version,23,856
static my_bool version, verbose,23,856
static my_bool version, verbose, tty_password=23,856
static uint thread_count,24,906
static uint thread_count,number_of_tests=24,906
static pthread_cond_t COND_thread_count;25,973
static pthread_mutex_t LOCK_thread_count;26,1014
static char *database,database28,1057
static char *database,*host,host28,1057
static char *database,*host,*user,user28,1057
static char *database,*host,*user,*password,password28,1057
static char *database,*host,*user,*password,*unix_socket,unix_socket28,1057
static char *database,*host,*user,*password,*unix_socket,*query;query28,1057
uint tcp_port;29,1122
void *test_thread(test_thread32,1154
  MYSQL *mysql;mysql37,1288
  uint count;38,1304
  mysql=40,1319
  mysql.reconnect=reconnect48,1552
  for (count=0 ; count < number_of_tests 50,1623
    MYSQL_RES *res;res52,1679
  pthread_mutex_lock(&LOCK_thread_count)LOCK_thread_count69,2129
  pthread_cond_signal(&COND_thread_count)COND_thread_count71,2189
  pthread_mutex_unlock(&LOCK_thread_count)LOCK_thread_count72,2261
static struct my_option my_long_options[my_long_options78,2340
static const char *load_default_groups[load_default_groups117,4149
static void usage(119,4208
get_one_option(137,4714
static void get_options(166,5225
int main(181,5561

vio/test-ssl.c,164
const char *VER=VER28,981
const char *default_dbug_option=default_dbug_option32,1023
fatal_error(36,1079
print_usage(43,1139
main(51,1311
int main(149,3917

vio/test-sslclient.c,143
const char *VER=VER28,975
const char *default_dbug_option=default_dbug_option32,1017
fatal_error(36,1073
main(43,1132
int main(102,3038

vio/test-sslserver.c,267
const char *VER=VER28,975
const char *default_dbug_option=default_dbug_option32,1017
fatal_error(37,1086
	int	sd;45,1165
	struct	st_VioSSLFd*	ssl_acceptor;46,1174
} TH_ARGS;47,1209
do_ssl_stuff(50,1233
client_thread(70,1757
main(78,1855
int main(153,3929

vio/vio.c,328
static my_bool no_poll_read(39,1295
static my_bool has_no_data(47,1452
static void vio_init(56,1592
void vio_reset(174,5483
Vio *vio_new(vio_new184,5736
Vio *vio_new_win32pipe(vio_new_win32pipe229,7053
Vio *vio_new_win32shared_memory(vio_new_win32shared_memory242,7342
void vio_delete(269,8299
void vio_end(286,8597

vio/viosocket.c,1371
int vio_errno(37,1191
size_t vio_read(43,1317
size_t vio_read_buff(74,2068
#define VIO_UNBUFFERED_READ_MIN_SIZE 77,2139
#undef VIO_UNBUFFERED_READ_MIN_SIZE110,3137
my_bool vio_buff_has_data(113,3176
size_t vio_write(118,3260
int vio_blocking(139,3785
vio_is_blocking(197,5291
int vio_fastsend(207,5466
int vio_keepalive(240,6166
vio_should_retry(259,6577
vio_was_interrupted(277,7075
mysql_socket_shutdown(286,7274
int vio_close(316,8002
const char *vio_description(vio_description344,8576
enum enum_vio_type vio_type(349,8640
my_socket vio_fd(354,8703
static void vio_get_normalized_ip(382,9804
my_bool vio_get_normalized_ip_string(458,12047
my_bool vio_peer_addr(493,13164
static my_bool socket_poll_read(578,15428
static my_bool socket_peek_read(627,16595
my_bool vio_poll_read(664,17456
my_bool vio_is_connected(688,18005
void vio_timeout(723,18939
static size_t pipe_complete_io(764,19863
size_t vio_read_pipe(794,20599
size_t vio_write_pipe(823,21299
my_bool vio_is_connected_pipe(852,22033
int vio_close_pipe(861,22213
void vio_win32_timeout(881,22633
size_t vio_read_shared_memory(903,23127
size_t vio_write_shared_memory(969,24868
my_bool vio_is_connected_shared_memory(1012,25935
int vio_close_shared_memory(1022,26215
ssize_t vio_pending(1087,27892
my_bool vio_is_no_name_error(1119,28623
int vio_getnameinfo(1142,29159

vio/viossl.c,282
report_errors(30,1067
size_t vio_ssl_read(57,1633
size_t vio_ssl_write(74,2063
int vio_ssl_close(91,2483
void vio_ssl_delete(130,3646
static int ssl_do(148,3955
int sslaccept(226,6139
int sslconnect(233,6320
int vio_ssl_blocking(240,6504
my_bool vio_ssl_has_data(250,6772

vio/viosslfactories.c,513
static my_bool     ssl_algorithms_added 20,789
static my_bool     ssl_error_strings_loaded=21,841
static unsigned char dh512_p[dh512_p23,894
static unsigned char dh512_g[dh512_g33,1270
static DH *get_dh512(get_dh51237,1315
report_errors(55,1586
ssl_error_string[ssl_error_string76,2031
sslGetErrString(88,2307
vio_set_cert_stuff(95,2464
static void check_ssl_init(150,4177
new_VioSSLFd(169,4546
new_VioSSLConnectorFd(270,7541
new_VioSSLAcceptorFd(300,8369
void free_vio_ssl_acceptor_fd(329,9257

vio/viotest-ssl.c,168
const char *VER=VER28,975
const char *default_dbug_option=default_dbug_option32,1017
fatal_error(36,1094
print_usage(43,1155
int main(50,1325
int main(151,3833

zlib/adler32.c,335
#define ZLIB_INTERNAL8,197
#define BASE 11,238
#define NMAX 12,301
#define DO1(15,396
#define DO2(16,452
#define DO4(17,498
#define DO8(18,544
#define DO16(19,590
#  define MOD(23,723
#  define MOD4(43,1619
#  define MOD(52,1908
#  define MOD4(53,1935
uLong ZEXPORT adler32(57,2051
uLong ZEXPORT adler32_combine(128,3894

zlib/compress.c,125
#define ZLIB_INTERNAL8,183
int ZEXPORT compress2 22,891
int ZEXPORT compress 62,1934
uLong ZEXPORT compressBound 75,2357

zlib/crc32.c,967
#    define DYNAMIC_CRC_TABLE25,983
#define local 31,1130
#    define BYFOUR37,1335
       typedef unsigned int u4;39,1389
         typedef unsigned long u4;42,1469
           typedef unsigned short u4;45,1556
#          undef BYFOUR 47,1608
#  define REV(56,1839
#  define TBLS 62,2173
#  define TBLS 64,2196
local volatile int crc_table_empty 74,2506
local unsigned long FAR crc_table[crc_table75,2546
local void make_crc_table(106,4270
local void write_table(183,6819
const unsigned long FAR * ZEXPORT get_crc_table(205,7480
#define DO1 215,7771
#define DO8 216,7845
unsigned long ZEXPORT crc32(219,7977
#define DOLIT4 256,8788
#define DOLIT32 259,8957
local unsigned long crc32_little(262,9117
#define DOBIG4 296,9890
#define DOBIG32 299,10059
local unsigned long crc32_big(302,10219
#define GF2_DIM 339,10964
local unsigned long gf2_matrix_times(342,11118
local void gf2_matrix_square(359,11454
uLong ZEXPORT crc32_combine(370,11729

zlib/deflate.c,1876
const char deflate_copyright[deflate_copyright54,2363
    need_more,67,2855
    block_done,68,2933
    finish_started,69,2981
    finish_done 70,3061
} block_state;71,3131
typedef block_state (*compress_func)compress_func73,3147
#define NIL 105,4342
#  define TOO_FAR 109,4399
#define MIN_LOOKAHEAD 113,4504
typedef struct config_s 123,4941
   ush good_length;124,4967
   ush max_lazy;125,5036
   ush nice_length;126,5113
   ush max_chain;127,5175
   compress_func func;128,5193
} config;129,5216
local const config configuration_table[configuration_table132,5242
local const config configuration_table[configuration_table137,5466
#define EQUAL 157,6254
struct static_tree_desc_s 161,6334
struct static_tree_desc_s {int dummy;161,6334
#define UPDATE_HASH(170,6752
#define INSERT_STRING(184,7452
#define INSERT_STRING(189,7642
#define CLEAR_HASH(199,8061
int ZEXPORT deflateInit_(204,8280
int ZEXPORT deflateInit2_(216,8711
int ZEXPORT deflateSetDictionary 315,11803
int ZEXPORT deflateReset 357,13162
int ZEXPORT deflateSetHeader 393,14089
int ZEXPORT deflatePrime 404,14433
int ZEXPORT deflateParams(416,14795
int ZEXPORT deflateTune(454,15953
uLong ZEXPORT deflateBound(489,17410
local void putShortMSB 518,18311
local void flush_pending(532,18768
int ZEXPORT deflate 552,19347
int ZEXPORT deflateEnd 859,30874
int ZEXPORT deflateCopy 894,31927
local int read_buf(956,34101
local void lm_init 986,34815
local uInt longest_match(1027,36212
local uInt longest_match_fast(1175,42424
local void check_match(1232,44600
#  define check_match(1253,45281
local void fill_window(1266,45808
#define FLUSH_BLOCK_ONLY(1364,49575
#define FLUSH_BLOCK(1376,50005
local block_state deflate_stored(1390,50616
local block_state deflate_fast(1448,52734
local block_state deflate_slow(1554,57043
local block_state deflate_rle(1683,62212

zlib/gzio.c,1936
#  define NO_GZCOMPRESS20,462
struct internal_state 24,516
struct internal_state {int dummy;24,516
#    define Z_BUFSIZE 29,624
#    define Z_BUFSIZE 31,702
#  define Z_PRINTF_BUFSIZE 35,771
#define ALLOC(48,1010
#define TRYFREE(49,1043
static int const gz_magic[gz_magic51,1081
#define ASCII_FLAG 54,1172
#define HEAD_CRC 55,1240
#define EXTRA_FIELD 56,1302
#define ORIG_NAME 57,1365
#define COMMENT 58,1435
#define RESERVED 59,1499
typedef struct gz_stream 61,1552
    z_stream stream;62,1579
    int      z_err;63,1600
    int      z_eof;64,1665
    FILE     *file;file65,1718
    Byte     *inbuf;inbuf66,1755
    Byte     *outbuf;outbuf67,1796
    uLong    crc;68,1838
    char     *msg;msg69,1893
    char     *path;path70,1935
    int      transparent;71,1992
    char     mode;72,2058
    z_off_t  start;73,2097
    z_off_t  in;74,2175
    z_off_t  out;75,2233
    int      back;76,2293
    int      last;77,2345
} gz_stream;78,2409
local gzFile gz_open 98,3301
gzFile ZEXPORT gzopen 213,7031
gzFile ZEXPORT gzdopen 224,7348
int ZEXPORT gzsetparams 239,7744
local int get_byte(266,8526
local void check_header(293,9497
local int destroy 360,11728
int ZEXPORT gzread 399,12668
int ZEXPORT gzgetc(508,16290
int ZEXPORT gzungetc(520,16530
char * ZEXPORT gzgets(545,17283
int ZEXPORT gzwrite 564,17834
int ZEXPORTVA gzprintf 608,19095
int ZEXPORTVA gzprintf 642,19915
int ZEXPORT gzputc(683,21437
int ZEXPORT gzputs(698,21910
local int do_flush 710,22233
int ZEXPORT gzflush 751,23451
z_off_t ZEXPORT gzseek 772,24219
int ZEXPORT gzrewind 862,26557
z_off_t ZEXPORT gztell 886,27244
int ZEXPORT gzeof 896,27521
int ZEXPORT gzdirect 913,28081
local void putLong 925,28374
local uLong getLong 940,28708
int ZEXPORT gzclose 958,29178
#  define zstrerror(980,29640
#  define zstrerror(982,29691
const char * ZEXPORT gzerror 992,30123
void ZEXPORT gzclearerr 1022,31002

zlib/infback.c,394
int ZEXPORT inflateBackInit_(28,903
local void fixedtables(73,2656
#define LOAD(119,3912
#define RESTORE(130,4198
#define INITBITS(141,4475
#define PULL(149,4692
#define PULLBYTE(163,5098
#define NEEDBITS(174,5428
#define BITS(181,5603
#define DROPBITS(185,5708
#define BYTEBITS(192,5882
#define ROOM(201,6151
int ZEXPORT inflateBack(241,8032
int ZEXPORT inflateBackEnd(614,21887

zlib/inffast.c,115
#  define OFF 25,581
#  define PUP(26,597
#  define OFF 28,627
#  define PUP(29,643
void inflate_fast(67,2123

zlib/inflate.c,917
#    define BUILDFIXED90,4068
int ZEXPORT inflateReset(103,4431
int ZEXPORT inflatePrime(128,5158
int ZEXPORT inflateInit2_(144,5590
int ZEXPORT inflateInit_(187,6909
local void fixedtables(205,7653
void makefixed(269,9351
local int updatewindow(323,11429
#  define UPDATE(377,13078
#  define UPDATE(380,13191
#  define CRC2(385,13306
#  define CRC4(392,13498
#define LOAD(403,13854
#define RESTORE(414,14138
#define INITBITS(425,14415
#define PULLBYTE(433,14616
#define NEEDBITS(443,14948
#define BITS(450,15123
#define DROPBITS(454,15228
#define BYTEBITS(461,15402
#define REVERSE(468,15550
int ZEXPORT inflate(554,19431
int ZEXPORT inflateEnd(1155,42155
int ZEXPORT inflateSetDictionary(1169,42580
int ZEXPORT inflateGetHeader(1211,43799
local unsigned syncsearch(1239,44859
int ZEXPORT inflateSync(1262,45287
int ZEXPORT inflateSyncPoint(1313,47149
int ZEXPORT inflateCopy(1323,47422

zlib/inftrees.c,105
#define MAXBITS 9,222
const char inflate_copyright[inflate_copyright11,242
int inflate_table(32,1317

zlib/trees.c,2004
#define MAX_BL_BITS 46,1284
#define END_BLOCK 49,1363
#define REP_3_6 52,1418
#define REPZ_3_10 55,1511
#define REPZ_11_138 58,1600
local const int extra_lbits[extra_lbits61,1691
local const int extra_dbits[extra_dbits64,1838
local const int extra_blbits[extra_blbits67,1992
local const uch bl_order[bl_order70,2119
#define Buf_size 76,2364
#define DIST_CODE_LEN 85,2648
local ct_data static_ltree[static_ltree90,2814
local ct_data static_dtree[static_dtree97,3095
uch _dist_code[_dist_code102,3223
uch _length_code[_length_code108,3417
local int base_length[base_length111,3527
local int base_dist[base_dist114,3625
struct static_tree_desc_s 121,3775
    const ct_data *static_tree;static_tree122,3803
    const intf *extra_bits;extra_bits123,3862
    int     extra_base;124,3934
    int     elems;125,3999
    int     max_length;126,4073
local static_tree_desc  static_l_desc 129,4145
local static_tree_desc  static_d_desc 132,4246
local static_tree_desc  static_bl_desc 135,4347
#  define send_code(167,5796
#  define send_code(171,5965
#define put_short(180,6295
local void send_bits(192,6679
#define send_bits(217,7483
local void tr_static_init(238,8052
#  define SEPARATOR(326,11195
void gen_trees_header(330,11326
void _tr_init(382,13115
local void init_block(411,13786
#define SMALLEST 426,14207
#define pqremove(434,14508
#define smaller(445,14890
local void pqdownheap(455,15346
local void gen_bitlen(490,16641
local void gen_codes 577,20058
local void build_tree(619,21894
local void scan_tree 707,25150
local void send_tree 752,26838
local int build_bl_tree(803,28809
local void send_all_trees(838,30258
void _tr_stored_block(867,31468
void _tr_align(892,32647
void _tr_flush_block(921,33642
int _tr_tally 1022,37460
local void compress_block(1072,39410
local void set_data_type(1126,41593
local unsigned bi_reverse(1146,42140
local void bi_flush(1161,42547
local void bi_windup(1178,42984
local void copy_block(1197,43449

zlib/uncompr.c,60
#define ZLIB_INTERNAL8,184
int ZEXPORT uncompress 26,1126

zlib/zutil.c,878
struct internal_state 11,260
struct internal_state      {int dummy;11,260
const char * const z_errmsg[z_errmsg14,335
const char * ZEXPORT zlibVersion(27,828
uLong ZEXPORT zlibCompileFlags(32,893
#    define verbose 118,2640
int z_verbose 120,2671
void z_error 122,2697
const char * ZEXPORT zError(133,2879
    int errno 144,3178
void zmemcpy(149,3226
int zmemcmp(160,3435
void zmemzero(173,3643
#  define MY_ZCALLOC190,3886
#define MAX_PTR 198,4169
local int next_ptr 201,4209
typedef struct ptr_table_s 203,4234
    voidpf org_ptr;204,4263
    voidpf new_ptr;205,4283
} ptr_table;206,4303
local ptr_table table[table208,4317
voidpf zcalloc 216,4692
void  zcfree 240,5429
#  define MY_ZCALLOC268,6024
#  define _halloc 271,6092
#  define _hfree 272,6118
voidpf zcalloc 275,6151
void  zcfree 281,6314
voidpf zcalloc 300,6696
void  zcfree 310,6980

sql/hash_filo.cc,0

zlib/inffast.h,0

sql/sql_backup.h,0
