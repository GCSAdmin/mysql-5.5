
client/client_priv.h,5086
#  define WEXITSTATUS(29,950
#  define WEXITSTATUS(31,1000
enum options_client35,1076
  OPT_CHARSETS_DIR=37,1098
  OPT_CHARSETS_DIR=256, OPT_DEFAULT_CHARSET,37,1098
  OPT_PAGER,38,1143
  OPT_PAGER, OPT_TEE,38,1143
  OPT_LOW_PRIORITY,39,1165
  OPT_LOW_PRIORITY, OPT_AUTO_REPAIR,39,1165
  OPT_LOW_PRIORITY, OPT_AUTO_REPAIR, OPT_COMPRESS,39,1165
  OPT_DROP,40,1216
  OPT_DROP, OPT_LOCKS,40,1216
  OPT_DROP, OPT_LOCKS, OPT_KEYWORDS,40,1216
  OPT_DROP, OPT_LOCKS, OPT_KEYWORDS, OPT_DELAYED,40,1216
  OPT_DROP, OPT_LOCKS, OPT_KEYWORDS, OPT_DELAYED, OPT_OPTIMIZE,40,1216
  OPT_FTB,41,1280
  OPT_FTB, OPT_LTB,41,1280
  OPT_FTB, OPT_LTB, OPT_ENC,41,1280
  OPT_FTB, OPT_LTB, OPT_ENC, OPT_O_ENC,41,1280
  OPT_FTB, OPT_LTB, OPT_ENC, OPT_O_ENC, OPT_ESC,41,1280
  OPT_FTB, OPT_LTB, OPT_ENC, OPT_O_ENC, OPT_ESC, OPT_TABLES,41,1280
  OPT_MASTER_DATA,42,1341
  OPT_MASTER_DATA, OPT_AUTOCOMMIT,42,1341
  OPT_MASTER_DATA, OPT_AUTOCOMMIT, OPT_AUTO_REHASH,42,1341
  OPT_LINE_NUMBERS,43,1393
  OPT_LINE_NUMBERS, OPT_COLUMN_NAMES,43,1393
  OPT_LINE_NUMBERS, OPT_COLUMN_NAMES, OPT_CONNECT_TIMEOUT,43,1393
  OPT_MAX_ALLOWED_PACKET,44,1452
  OPT_MAX_ALLOWED_PACKET, OPT_NET_BUFFER_LENGTH,44,1452
  OPT_SELECT_LIMIT,45,1501
  OPT_SELECT_LIMIT, OPT_MAX_JOIN_SIZE,45,1501
  OPT_SELECT_LIMIT, OPT_MAX_JOIN_SIZE, OPT_SSL_SSL,45,1501
  OPT_SSL_KEY,46,1553
  OPT_SSL_KEY, OPT_SSL_CERT,46,1553
  OPT_SSL_KEY, OPT_SSL_CERT, OPT_SSL_CA,46,1553
  OPT_SSL_KEY, OPT_SSL_CERT, OPT_SSL_CA, OPT_SSL_CAPATH,46,1553
  OPT_SSL_CIPHER,47,1610
  OPT_SSL_CIPHER, OPT_SHUTDOWN_TIMEOUT,47,1610
  OPT_SSL_CIPHER, OPT_SHUTDOWN_TIMEOUT, OPT_LOCAL_INFILE,47,1610
  OPT_DELETE_MASTER_LOGS,48,1668
  OPT_DELETE_MASTER_LOGS, OPT_COMPACT,48,1668
  OPT_PROMPT,49,1707
  OPT_PROMPT, OPT_IGN_LINES,49,1707
  OPT_PROMPT, OPT_IGN_LINES,OPT_TRANSACTION,49,1707
  OPT_PROMPT, OPT_IGN_LINES,OPT_TRANSACTION,OPT_MYSQL_PROTOCOL,49,1707
  OPT_SHARED_MEMORY_BASE_NAME,50,1771
  OPT_SHARED_MEMORY_BASE_NAME, OPT_FRM,50,1771
  OPT_SHARED_MEMORY_BASE_NAME, OPT_FRM, OPT_SKIP_OPTIMIZATION,50,1771
  OPT_COMPATIBLE,51,1834
  OPT_COMPATIBLE, OPT_RECONNECT,51,1834
  OPT_COMPATIBLE, OPT_RECONNECT, OPT_DELIMITER,51,1834
  OPT_COMPATIBLE, OPT_RECONNECT, OPT_DELIMITER, OPT_SECURE_AUTH,51,1834
  OPT_OPEN_FILES_LIMIT,52,1899
  OPT_OPEN_FILES_LIMIT, OPT_SET_CHARSET,52,1899
  OPT_OPEN_FILES_LIMIT, OPT_SET_CHARSET, OPT_SERVER_ARG,52,1899
  OPT_STOP_POSITION,53,1956
  OPT_STOP_POSITION, OPT_START_DATETIME,53,1956
  OPT_STOP_POSITION, OPT_START_DATETIME, OPT_STOP_DATETIME,53,1956
  OPT_SIGINT_IGNORE,54,2016
  OPT_SIGINT_IGNORE, OPT_HEXBLOB,54,2016
  OPT_SIGINT_IGNORE, OPT_HEXBLOB, OPT_ORDER_BY_PRIMARY,54,2016
  OPT_SIGINT_IGNORE, OPT_HEXBLOB, OPT_ORDER_BY_PRIMARY, OPT_COUNT,54,2016
  OPT_TRIGGERS,55,2083
  OPT_MYSQL_ONLY_PRINT,56,2099
  OPT_MYSQL_LOCK_DIRECTORY,57,2123
  OPT_USE_THREADS,58,2151
  OPT_IMPORT_USE_THREADS,59,2170
  OPT_MYSQL_NUMBER_OF_QUERY,60,2196
  OPT_IGNORE_TABLE,61,2225
  OPT_IGNORE_TABLE,OPT_INSERT_IGNORE,61,2225
  OPT_IGNORE_TABLE,OPT_INSERT_IGNORE,OPT_SHOW_WARNINGS,61,2225
  OPT_IGNORE_TABLE,OPT_INSERT_IGNORE,OPT_SHOW_WARNINGS,OPT_DROP_DATABASE,61,2225
  OPT_TZ_UTC,62,2299
  OPT_TZ_UTC, OPT_CREATE_SLAP_SCHEMA,62,2299
  OPT_MYSQLDUMP_SLAVE_APPLY,63,2337
  OPT_MYSQLDUMP_SLAVE_DATA,64,2366
  OPT_MYSQLDUMP_INCLUDE_MASTER_HOST_PORT,65,2394
  OPT_SLAP_CSV,66,2436
  OPT_SLAP_CSV, OPT_SLAP_CREATE_STRING,66,2436
  OPT_SLAP_AUTO_GENERATE_SQL_LOAD_TYPE,67,2476
  OPT_SLAP_AUTO_GENERATE_SQL_LOAD_TYPE, OPT_SLAP_AUTO_GENERATE_WRITE_NUM,67,2476
  OPT_SLAP_AUTO_GENERATE_ADD_AUTO,68,2550
  OPT_SLAP_AUTO_GENERATE_GUID_PRIMARY,69,2585
  OPT_SLAP_AUTO_GENERATE_EXECUTE_QUERIES,70,2624
  OPT_SLAP_AUTO_GENERATE_SECONDARY_INDEXES,71,2666
  OPT_SLAP_AUTO_GENERATE_UNIQUE_WRITE_NUM,72,2710
  OPT_SLAP_AUTO_GENERATE_UNIQUE_QUERY_NUM,73,2753
  OPT_SLAP_PRE_QUERY,74,2796
  OPT_SLAP_POST_QUERY,75,2818
  OPT_SLAP_PRE_SYSTEM,76,2841
  OPT_SLAP_POST_SYSTEM,77,2864
  OPT_SLAP_COMMIT,78,2888
  OPT_SLAP_DETACH,79,2907
  OPT_SLAP_NO_DROP,80,2926
  OPT_MYSQL_REPLACE_INTO,81,2946
  OPT_MYSQL_REPLACE_INTO, OPT_BASE64_OUTPUT_MODE,81,2946
  OPT_MYSQL_REPLACE_INTO, OPT_BASE64_OUTPUT_MODE, OPT_SERVER_ID,81,2946
  OPT_FIX_TABLE_NAMES,82,3011
  OPT_FIX_TABLE_NAMES, OPT_FIX_DB_NAMES,82,3011
  OPT_FIX_TABLE_NAMES, OPT_FIX_DB_NAMES, OPT_SSL_VERIFY_SERVER_CERT,82,3011
  OPT_AUTO_VERTICAL_OUTPUT,83,3080
  OPT_DEBUG_INFO,84,3108
  OPT_DEBUG_INFO, OPT_DEBUG_CHECK,84,3108
  OPT_DEBUG_INFO, OPT_DEBUG_CHECK, OPT_COLUMN_TYPES,84,3108
  OPT_DEBUG_INFO, OPT_DEBUG_CHECK, OPT_COLUMN_TYPES, OPT_ERROR_LOG_FILE,84,3108
  OPT_WRITE_BINLOG,85,3181
  OPT_WRITE_BINLOG, OPT_DUMP_DATE,85,3181
  OPT_INIT_COMMAND,86,3216
  OPT_PLUGIN_DIR,87,3236
  OPT_DEFAULT_AUTH,88,3254
  OPT_DEFAULT_PLUGIN,89,3274
  OPT_ENABLE_CLEARTEXT_PLUGIN,90,3296
  OPT_MAX_CLIENT_OPTION91,3327
#define FIRST_INFORMATION_SCHEMA_VERSION 97,3419
#define INFORMATION_SCHEMA_DB_NAME 102,3517
#define FIRST_PERFORMANCE_SCHEMA_VERSION 107,3638
#define PERFORMANCE_SCHEMA_DB_NAME 112,3736

client/completion_hash.h,218
#define _HASH_20,791
#define SUCCESS 22,807
#define FAILURE 23,825
typedef struct _entry 28,888
} entry;31,947
typedef struct bucket33,957
} Bucket;41,1115
typedef struct hashtable 43,1126
} HashTable;49,1296

client/my_readline.h,101
#define CLIENT_MY_READLINE_INCLUDED2,36
typedef struct st_line_buffer23,852
} LINE_BUFFER;35,1217

client/sql_string.h,2145
#define CLIENT_SQL_STRING_INCLUDED2,35
class String32,1280
  String(String::String39,1397
  String(String::String44,1504
  String(String::String49,1640
  String(String::String54,1794
  String(String::String59,1944
  String(String::String64,2085
  static void *operator new(String::operator new70,2252
  static void operator delete(String::operator delete72,2369
  static void operator delete(String::operator delete78,2498
  ~String(String::~String80,2573
  inline void set_charset(String::set_charset82,2598
  inline CHARSET_INFO *charset(String::charset84,2683
  inline uint32 length(String::length85,2746
  inline uint32 alloced_length(String::alloced_length86,2799
  inline char& operator [] String::operator []87,2864
  inline void length(String::length88,2927
  inline bool is_empty(String::is_empty89,2981
  inline void mark_as_const(String::mark_as_const90,3036
  inline const char *ptr(String::ptr91,3088
  inline char *c_ptr(String::c_ptr92,3137
  inline char *c_ptr_quick(String::c_ptr_quick98,3273
  inline char *c_ptr_safe(String::c_ptr_safe104,3395
  void set(String::set113,3560
  inline void set(String::set124,3877
  inline void set(String::set130,4053
  inline void set_quick(String::set_quick137,4292
  inline void chop(String::chop171,5350
  inline void free(String::free176,5410
  inline bool alloc(String::alloc187,5578
  inline void shrink(String::shrink197,5876
  bool is_alloced(String::is_alloced216,6226
  inline String& operator = String::operator =217,6272
  inline bool append(String::append256,7941
  int reserve(String::reserve278,8494
  void q_append(String::q_append289,8821
  void q_append(String::q_append293,8886
  void q_append(String::q_append298,8983
  void q_append(String::q_append303,9076
  void q_append(String::q_append308,9171
  void write_at_position(String::write_at_position314,9305
  inline void qs_append(String::qs_append322,9508
  inline char *prep_append(String::prep_append332,9717
  inline bool append(String::append345,10062
  inline bool uses_buffer_owned_by(String::uses_buffer_owned_by359,10509

dbug/dbug_long.h,1075
#    define DBUG_ENTER(114,4344
#    define DBUG_RETURN(115,4371
#    define DBUG_VOID_RETURN 116,4410
#    define DBUG_EXECUTE(117,4446
#    define DBUG_PRINT(118,4483
#    define DBUG_2(119,4523
#    define DBUG_3(120,4574
#    define DBUG_4(121,4628
#    define DBUG_5(122,4684
#    define DBUG_PUSH(123,4743
#    define DBUG_POP(124,4769
#    define DBUG_PROCESS(125,4792
#    define DBUG_FILE 126,4821
#    define DBUG_SETJMP 127,4852
#    define DBUG_LONGJMP 128,4883
#    define DBUG_DUMP(129,4916
#    define DBUG_ENTER(131,4957
#    define DBUG_LEAVE 136,5171
#    define DBUG_RETURN(138,5265
#    define DBUG_VOID_RETURN 140,5392
#    define DBUG_EXECUTE(141,5443
#    define DBUG_PRINT(143,5541
#    define DBUG_2(145,5658
#    define DBUG_3(147,5752
#    define DBUG_4(149,5852
#    define DBUG_5(151,5957
#    define DBUG_PUSH(153,6065
#    define DBUG_POP(154,6106
#    define DBUG_PROCESS(155,6141
#    define DBUG_FILE 156,6190
#    define DBUG_SETJMP(157,6222
#    define DBUG_LONGJMP(158,6280
#    define DBUG_DUMP(159,6348

include/base64.h,37
#define __BASE64_H_INCLUDED__18,771

include/decimal.h,784
#define _decimal_h17,764
{TRUNCATE=TRUNCATE20,797
{TRUNCATE=0, HALF_EVEN,20,797
{TRUNCATE=0, HALF_EVEN, HALF_UP,20,797
{TRUNCATE=0, HALF_EVEN, HALF_UP, CEILING,20,797
{TRUNCATE=0, HALF_EVEN, HALF_UP, CEILING, FLOOR}FLOOR20,797
  decimal_round_mode;21,846
typedef int32 decimal_digit_t;22,868
typedef struct st_decimal_t 33,1265
} decimal_t;37,1361
#define string2decimal(72,3102
#define string2decimal_fixed(73,3167
#define decimal_make_zero(77,3270
#define decimal_string_size(89,3763
#define decimal_neg(93,3900
#define E_DEC_OK 105,4292
#define E_DEC_TRUNCATED 106,4326
#define E_DEC_OVERFLOW 107,4360
#define E_DEC_DIV_ZERO 108,4394
#define E_DEC_BAD_NUM 109,4428
#define E_DEC_OOM 110,4462
#define E_DEC_ERROR 112,4497
#define E_DEC_FATAL_ERROR 113,4531

include/errmsg.h,2603
#define ERRMSG_INCLUDED2,24
#define CR_MIN_ERROR	32,1085
#define CR_MAX_ERROR	33,1141
#define ER(35,1185
#define CLIENT_ERRMAP	37,1238
#define CR_ERROR_FIRST 41,1428
#define CR_UNKNOWN_ERROR	42,1483
#define CR_SOCKET_CREATE_ERROR	43,1513
#define CR_CONNECTION_ERROR	44,1549
#define CR_CONN_HOST_ERROR	45,1582
#define CR_IPSOCK_ERROR	46,1614
#define CR_UNKNOWN_HOST	47,1644
#define CR_SERVER_GONE_ERROR	48,1674
#define CR_VERSION_ERROR	49,1708
#define CR_OUT_OF_MEMORY	50,1738
#define CR_WRONG_HOST_INFO	51,1768
#define CR_LOCALHOST_CONNECTION 52,1800
#define CR_TCP_CONNECTION	53,1837
#define CR_SERVER_HANDSHAKE_ERR 54,1868
#define CR_SERVER_LOST	55,1905
#define CR_COMMANDS_OUT_OF_SYNC 56,1934
#define CR_NAMEDPIPE_CONNECTION 57,1971
#define CR_NAMEDPIPEWAIT_ERROR 58,2008
#define CR_NAMEDPIPEOPEN_ERROR 59,2045
#define CR_NAMEDPIPESETSTATE_ERROR 60,2082
#define CR_CANT_READ_CHARSET	61,2122
#define CR_NET_PACKET_TOO_LARGE 62,2156
#define CR_EMBEDDED_CONNECTION	63,2193
#define CR_PROBE_SLAVE_STATUS 64,2229
#define CR_PROBE_SLAVE_HOSTS 65,2266
#define CR_PROBE_SLAVE_CONNECT 66,2303
#define CR_PROBE_MASTER_CONNECT 67,2340
#define CR_SSL_CONNECTION_ERROR 68,2377
#define CR_MALFORMED_PACKET 69,2414
#define CR_WRONG_LICENSE	70,2451
#define CR_NULL_POINTER	73,2508
#define CR_NO_PREPARE_STMT	74,2538
#define CR_PARAMS_NOT_BOUND	75,2570
#define CR_DATA_TRUNCATED	76,2603
#define CR_NO_PARAMETERS_EXISTS 77,2634
#define CR_INVALID_PARAMETER_NO 78,2671
#define CR_INVALID_BUFFER_USE	79,2708
#define CR_UNSUPPORTED_PARAM_TYPE 80,2743
#define CR_SHARED_MEMORY_CONNECTION 82,2783
#define CR_SHARED_MEMORY_CONNECT_REQUEST_ERROR 83,2836
#define CR_SHARED_MEMORY_CONNECT_ANSWER_ERROR 84,2889
#define CR_SHARED_MEMORY_CONNECT_FILE_MAP_ERROR 85,2942
#define CR_SHARED_MEMORY_CONNECT_MAP_ERROR 86,2995
#define CR_SHARED_MEMORY_FILE_MAP_ERROR 87,3048
#define CR_SHARED_MEMORY_MAP_ERROR 88,3101
#define CR_SHARED_MEMORY_EVENT_ERROR 89,3154
#define CR_SHARED_MEMORY_CONNECT_ABANDONED_ERROR 90,3201
#define CR_SHARED_MEMORY_CONNECT_SET_ERROR 91,3255
#define CR_CONN_UNKNOW_PROTOCOL 92,3308
#define CR_INVALID_CONN_HANDLE	93,3347
#define CR_SECURE_AUTH 94,3385
#define CR_FETCH_CANCELED 95,3438
#define CR_NO_DATA 96,3491
#define CR_NO_STMT_METADATA 97,3544
#define CR_NO_RESULT_SET 98,3597
#define CR_NOT_IMPLEMENTED 99,3650
#define CR_SERVER_LOST_EXTENDED	100,3703
#define CR_STMT_CLOSED	101,3742
#define CR_NEW_STMT_METADATA 102,3773
#define CR_ALREADY_CONNECTED 103,3826
#define CR_AUTH_PLUGIN_CANNOT_LOAD 104,3879
#define CR_ERROR_LAST 105,3932

include/ft_global.h,326
#define _ft_global_h24,945
#define HA_FT_MAXBYTELEN 29,1007
#define HA_FT_MAXCHARLEN 30,1036
#define DEFAULT_FTB_SYNTAX 32,1083
typedef struct st_ft_info FT_INFO;34,1130
struct _ft_vft35,1165
struct st_ft_info45,1426
#define FT_NL 63,1842
#define FT_BOOL 64,1862
#define FT_SORTED 65,1882
#define FT_EXPAND 66,1902

include/hash.h,579
#define _hash_h19,820
#define CHARSET_INFO_DEFINED31,1213
typedef struct charset_info_st CHARSET_INFO;32,1242
#define HASH_OVERHEAD 43,1468
#define HASH_UNIQUE 46,1535
typedef uint my_hash_value_type;48,1609
typedef uchar *(*my_hash_get_key)my_hash_get_key49,1642
typedef void (*my_hash_free_key)my_hash_free_key50,1708
typedef struct st_hash 52,1751
} HASH;61,2022
typedef uint HASH_SEARCH_STATE;64,2061
#define my_hash_init(66,2094
#define my_hash_init2(68,2177
#define my_hash_clear(100,3952
#define my_hash_inited(101,4010
#define my_hash_init_opt(102,4056

include/heap.h,668
#define _heap_h22,866
#define HP_MAX_LEVELS	39,1102
#define HP_PTRS_IN_NOD	40,1157
typedef struct st_heapinfo	44,1225
} HEAPINFO;55,1564
typedef struct st_heap_ptrs60,1624
} HP_PTRS;63,1725
struct st_level_info65,1737
typedef struct st_heap_block101,2860
} HP_BLOCK;109,3262
typedef struct st_hp_keydef	113,3319
} HP_KEYDEF;132,4111
typedef struct st_heap_share134,4125
} HP_SHARE;159,5083
typedef struct st_heap_info163,5121
} HP_INFO;181,5688
typedef struct st_heap_create_info184,5701
} HP_CREATE_INFO;202,6204
typedef ulong HEAP_PTR;256,8880
#define heap_position(257,8904
#define heap_rrnd(258,8950
typedef uchar *HEAP_PTR;HEAP_PTR260,9002

include/keycache.h,341
#define _keycache_h19,802
typedef struct st_block_link BLOCK_LINK;28,980
typedef struct st_keycache_page KEYCACHE_PAGE;30,1046
typedef struct st_hash_link HASH_LINK;32,1114
typedef struct st_keycache_wqueue35,1199
} KEYCACHE_WQUEUE;38,1315
#define CHANGED_BLOCKS_HASH 40,1335
typedef struct st_key_cache47,1493
} KEY_CACHE;107,5287

include/lf.h,1523
#define _lf_h17,759
#define lock_wrap(28,931
#define lock_wrap_void(39,1384
#define nolock_wrap(48,1739
#define nolock_wrap_void(55,1992
#define LF_DYNARRAY_LEVEL_LENGTH 68,2402
#define LF_DYNARRAY_LEVELS 69,2439
} LF_DYNARRAY;75,2588
typedef int (*lf_dynarray_func)lf_dynarray_func77,2604
nolock_wrap(82,2763
#define LF_PINBOX_PINS 97,3197
#define LF_PURGATORY_SIZE 98,3222
typedef void lf_pinbox_free_func(100,3252
} LF_PINBOX;109,3588
} LF_PINS;122,3966
#define lf_rwlock_by_pins(128,4073
#define lf_rwunlock_by_pins(130,4167
#define LF_REQUIRE_PINS(139,4501
#define _lf_pin(143,4747
#define LF_REQUIRE_PINS(149,5021
#define _lf_pin(150,5048
#define _lf_unpin(153,5136
#define lf_pin(154,5195
#define lf_unpin(160,5389
#define _lf_assert_pin(161,5442
#define _lf_assert_unpin(162,5506
lock_wrap(168,5753
typedef struct st_lf_allocator 185,6206
} LF_ALLOCATOR;190,6331
#define _lf_alloc_free(199,6662
#define lf_alloc_free(200,6731
#define _lf_alloc_get_pins(201,6800
#define lf_alloc_get_pins(202,6872
#define _lf_alloc_put_pins(203,6944
#define lf_alloc_put_pins(204,7008
#define lf_alloc_direct_free(205,7072
lock_wrap(207,7131
#define LF_HASH_UNIQUE 221,7329
} LF_HASH;235,8003
#define _lf_hash_get_pins(248,8597
#define lf_hash_get_pins(249,8668
#define _lf_hash_put_pins(250,8739
#define lf_hash_put_pins(251,8801
#define lf_hash_search_unpin(252,8863
#undef lock_wrap_void257,8937
#undef lock_wrap258,8959
#undef nolock_wrap_void259,8976
#undef nolock_wrap260,9000

include/m_ctype.h,5631
#define _m_ctype_h21,827
#define MY_CS_NAME_SIZE	30,982
#define MY_CS_CTYPE_TABLE_SIZE	31,1011
#define MY_CS_TO_LOWER_TABLE_SIZE	32,1047
#define MY_CS_TO_UPPER_TABLE_SIZE	33,1085
#define MY_CS_SORT_ORDER_TABLE_SIZE	34,1123
#define MY_CS_TO_UNI_TABLE_SIZE	35,1163
#define CHARSET_DIR	37,1201
#define my_wc_t 39,1234
#define MY_CS_REPLACEMENT_CHARACTER 41,1257
#define MB2(50,1495
#define MY_PUT_MB2(51,1560
#define MB2(53,1625
#define MY_PUT_MB2(54,1659
typedef struct unicase_info_st59,1743
} MY_UNICASE_INFO;64,1827
typedef struct uni_ctype_st72,1998
} MY_UNI_CTYPE;76,2062
#define MY_CS_ILSEQ	81,2154
#define MY_CS_ILUNI	82,2229
#define MY_CS_TOOSMALL 83,2304
#define MY_CS_TOOSMALL2 84,2383
#define MY_CS_TOOSMALL3 85,2462
#define MY_CS_TOOSMALL4 87,2599
#define MY_CS_TOOSMALL5 88,2674
#define MY_CS_TOOSMALL6 89,2749
#define MY_CS_TOOSMALLN(91,2874
#define MY_SEQ_INTTAIL	93,2916
#define MY_SEQ_SPACES	94,2941
#define MY_CS_COMPILED 97,3003
#define MY_CS_CONFIG 98,3071
#define MY_CS_INDEX 99,3139
#define MY_CS_LOADED 100,3207
#define MY_CS_BINSORT	101,3275
#define MY_CS_PRIMARY	102,3341
#define MY_CS_STRNXFRM	103,3407
#define MY_CS_UNICODE	104,3474
#define MY_CS_READY	105,3540
#define MY_CS_AVAILABLE	106,3604
#define MY_CS_CSSORT	107,3672
#define MY_CS_HIDDEN	108,3738
#define MY_CS_PUREASCII 109,3804
#define MY_CS_NONASCII 110,3872
#define MY_CS_UNICODE_SUPPLEMENT 111,3940
#define MY_CHARSET_UNDEFINED 112,4012
#define MY_REPERTOIRE_ASCII 115,4077
#define MY_REPERTOIRE_EXTENDED 116,4155
#define MY_REPERTOIRE_UNICODE30 117,4233
typedef struct my_uni_idx_st119,4312
} MY_UNI_IDX;124,4386
} my_match_t;131,4457
enum my_lex_states133,4472
  MY_LEX_START,135,4493
  MY_LEX_START, MY_LEX_CHAR,135,4493
  MY_LEX_START, MY_LEX_CHAR, MY_LEX_IDENT,135,4493
  MY_LEX_IDENT_SEP,136,4537
  MY_LEX_IDENT_SEP, MY_LEX_IDENT_START,136,4537
  MY_LEX_REAL,137,4577
  MY_LEX_REAL, MY_LEX_HEX_NUMBER,137,4577
  MY_LEX_REAL, MY_LEX_HEX_NUMBER, MY_LEX_BIN_NUMBER,137,4577
  MY_LEX_CMP_OP,138,4630
  MY_LEX_CMP_OP, MY_LEX_LONG_CMP_OP,138,4630
  MY_LEX_CMP_OP, MY_LEX_LONG_CMP_OP, MY_LEX_STRING,138,4630
  MY_LEX_CMP_OP, MY_LEX_LONG_CMP_OP, MY_LEX_STRING, MY_LEX_COMMENT,138,4630
  MY_LEX_CMP_OP, MY_LEX_LONG_CMP_OP, MY_LEX_STRING, MY_LEX_COMMENT, MY_LEX_END,138,4630
  MY_LEX_OPERATOR_OR_IDENT,139,4710
  MY_LEX_OPERATOR_OR_IDENT, MY_LEX_NUMBER_IDENT,139,4710
  MY_LEX_OPERATOR_OR_IDENT, MY_LEX_NUMBER_IDENT, MY_LEX_INT_OR_REAL,139,4710
  MY_LEX_REAL_OR_POINT,140,4779
  MY_LEX_REAL_OR_POINT, MY_LEX_BOOL,140,4779
  MY_LEX_REAL_OR_POINT, MY_LEX_BOOL, MY_LEX_EOL,140,4779
  MY_LEX_REAL_OR_POINT, MY_LEX_BOOL, MY_LEX_EOL, MY_LEX_ESCAPE,140,4779
  MY_LEX_LONG_COMMENT,141,4844
  MY_LEX_LONG_COMMENT, MY_LEX_END_LONG_COMMENT,141,4844
  MY_LEX_LONG_COMMENT, MY_LEX_END_LONG_COMMENT, MY_LEX_SEMICOLON,141,4844
  MY_LEX_SET_VAR,142,4911
  MY_LEX_SET_VAR, MY_LEX_USER_END,142,4911
  MY_LEX_SET_VAR, MY_LEX_USER_END, MY_LEX_HOSTNAME,142,4911
  MY_LEX_SET_VAR, MY_LEX_USER_END, MY_LEX_HOSTNAME, MY_LEX_SKIP,142,4911
  MY_LEX_USER_VARIABLE_DELIMITER,143,4977
  MY_LEX_USER_VARIABLE_DELIMITER, MY_LEX_SYSTEM_VAR,143,4977
  MY_LEX_IDENT_OR_KEYWORD,144,5030
  MY_LEX_IDENT_OR_HEX,145,5057
  MY_LEX_IDENT_OR_HEX, MY_LEX_IDENT_OR_BIN,145,5057
  MY_LEX_IDENT_OR_HEX, MY_LEX_IDENT_OR_BIN, MY_LEX_IDENT_OR_NCHAR,145,5057
  MY_LEX_STRING_OR_DELIMITER146,5124
typedef struct my_collation_handler_st155,5299
} MY_COLLATION_HANDLER;189,6843
typedef int (*my_charset_conv_mb_wc)my_charset_conv_mb_wc197,7178
typedef int (*my_charset_conv_wc_mb)my_charset_conv_wc_mb199,7320
typedef size_t (*my_charset_conv_case)my_charset_conv_case201,7448
typedef struct my_charset_handler_st206,7659
  size_t (*snprintf)snprintf237,8936
} MY_CHARSET_HANDLER;266,10498
#define CHARSET_INFO_DEFINED276,10757
typedef struct charset_info_st279,10859
} CHARSET_INFO;313,11700
#define ILLEGAL_CHARSET_INFO_NUMBER 314,11716
#define MY_UTF8MB3 361,13778
#define MY_UTF8MB4 362,13820
my_cs_have_contractions(367,13934
my_cs_can_be_contraction_head(373,14038
my_cs_can_be_contraction_tail(379,14193
my_cs_contraction2_weight(385,14348
size_t my_snprintf_8bit(432,16304
#define	_MY_U	595,23965
#define	_MY_L	596,23999
#define	_MY_NMR	597,24033
#define	_MY_SPC	598,24074
#define	_MY_PNT	599,24118
#define	_MY_CTR	600,24156
#define	_MY_B	601,24200
#define	_MY_X	602,24231
#define	my_isascii(605,24276
#define	my_toascii(606,24315
#define my_tocntrl(607,24350
#define my_toprint(608,24383
#define my_toupper(609,24416
#define my_tolower(610,24476
#define	my_isalpha(611,24536
#define	my_isupper(612,24610
#define	my_islower(613,24674
#define	my_isdigit(614,24738
#define	my_isxdigit(615,24804
#define	my_isalnum(616,24868
#define	my_isspace(617,24952
#define	my_ispunct(618,25018
#define	my_isprint(619,25084
#define	my_isgraph(620,25186
#define	my_iscntrl(621,25280
#define my_isvar(624,25400
#define my_isvar_start(625,25470
#define my_binary_compare(627,25541
#define use_strnxfrm(628,25606
#define my_strnxfrm(629,25675
#define my_strnncoll(630,25760
#define my_like_range(631,25847
#define my_wildcmp(633,25986
#define my_strcasecmp(634,26083
#define my_charpos(635,26160
#define use_mb(638,26271
#define my_ismbchar(639,26339
#define my_mbcharlen(641,26428
#define my_mbcharlen(643,26504
#define my_caseup_str(646,26552
#define my_casedn_str(647,26624
#define my_strntol(648,26696
#define my_strntoul(649,26780
#define my_strntoll(650,26865
#define my_strntoull(651,26950
#define my_strntod(652,27036
#define USE_TIS620658,27262

include/m_string.h,1234
#define _m_string_h23,936
#define __USE_GNU	28,1037
# define memcpy(51,1573
# define memset(52,1620
# define memmove(53,1663
# define bmove(55,1739
# define bfill(60,1837
# define bzero(66,2154
#define strmov(81,2556
#define strmov(83,2629
#define strmov_overlapp(94,2872
#define strmake_overlapp(95,2913
  MY_GCVT_ARG_FLOAT,128,4027
  MY_GCVT_ARG_DOUBLE129,4048
} my_gcvt_arg_type;130,4069
#define NOT_FIXED_DEC 138,4352
#define FLOATING_POINT_BUFFER 145,4568
#define MAX_DECPT_FOR_F_FORMAT 155,5052
#define MY_GCVT_MAX_FIELD_WIDTH 162,5302
#define ll2str(177,5941
#define longlong10_to_str(178,5990
#undef strtoll179,6049
#define strtoll(180,6064
#define strtoull(181,6107
#define HAVE_STRTOULL183,6174
#define HAVE_STRTOLL186,6224
#define longlong2str(198,6623
typedef struct st_mysql_lex_string LEX_STRING;210,6849
#define STRING_WITH_LEN(212,6897
#define USTRING_WITH_LEN(213,6956
#define C_STRING_WITH_LEN(214,7025
struct st_mysql_const_lex_string216,7098
typedef struct st_mysql_const_lex_string LEX_CSTRING;221,7172
#define SPACE_INT 225,7299
#define SPACE_INT 227,7350
static inline const uchar *skip_trailing_space(skip_trailing_space266,9031
static inline void lex_string_set(292,9794

include/my_aes.h,60
#define MY_AES_INCLUDED2,24
#define AES_KEY_LENGTH 28,942

include/my_alarm.h,347
#define _my_alarm_h21,889
#define ALARM_VARIABLES 31,1099
#define ALARM_INIT	33,1172
#define ALARM_END	36,1322
#define ALARM_TEST	38,1407
#define ALARM_REINIT	40,1484
#define ALARM_REINIT	44,1624
#define ALARM_VARIABLES 48,1767
#define ALARM_INIT49,1846
#define ALARM_END50,1865
#define ALARM_TEST 51,1883
#define ALARM_REINIT 52,1933

include/my_alloc.h,226
#define _my_alloc_h21,837
#define ALLOC_MAX_BLOCK_TO_DROP	23,858
#define ALLOC_MAX_BLOCK_USAGE_BEFORE_DROP	24,897
typedef struct st_used_mem30,983
} USED_MEM;35,1207
typedef struct st_mem_root38,1221
} MEM_ROOT;54,1874

include/my_atomic.h,1876
#define MY_ATOMIC_INCLUDED2,27
#define intptr 59,2172
#undef MY_ATOMIC_HAS_8_1664,2302
#define make_atomic_add_body(80,2675
#define make_atomic_fas_body(86,2918
#define make_atomic_load_body(92,3162
#define make_atomic_store_body(97,3376
#define make_transparent_unions(120,4264
#define uintptr 129,4850
make_transparent_unions(130,4873
#undef uintptr135,5013
#undef make_transparent_unions136,5028
#define a 137,5059
#define cmp 138,5081
#define v 139,5105
#define set 140,5127
#define U_8 142,5157
#define U_16 143,5177
#define U_32 144,5198
#define U_64 145,5219
#define U_ptr 146,5240
#define Uv_8 147,5262
#define Uv_16 148,5282
#define Uv_32 149,5303
#define Uv_64 150,5324
#define Uv_ptr 151,5345
#define U_a 152,5367
#define U_cmp 153,5394
#define U_v 154,5414
#define U_set 155,5431
#define make_atomic_cas(158,5496
#define make_atomic_add(167,5961
#define make_atomic_fas(175,6360
#define make_atomic_load(183,6759
#define make_atomic_store(191,7158
#undef _atomic_h_cleanup_239,8209
#undef U_8242,8243
#undef U_16243,8254
#undef U_32244,8266
#undef U_64245,8278
#undef U_ptr246,8290
#undef Uv_8247,8303
#undef Uv_16248,8315
#undef Uv_32249,8328
#undef Uv_64250,8341
#undef Uv_ptr251,8354
#undef a252,8368
#undef cmp253,8377
#undef v254,8388
#undef set255,8397
#undef U_a256,8408
#undef U_cmp257,8419
#undef U_v258,8432
#undef U_set259,8443
#undef make_atomic_add260,8456
#undef make_atomic_cas261,8479
#undef make_atomic_load262,8502
#undef make_atomic_store263,8526
#undef make_atomic_fas264,8551
#undef make_atomic_add_body265,8574
#undef make_atomic_cas_body266,8602
#undef make_atomic_load_body267,8630
#undef make_atomic_store_body268,8659
#undef make_atomic_fas_body269,8689
#undef intptr270,8717
#define LF_BACKOFF 278,8950
#define MY_ATOMIC_OK 281,8981
#define MY_ATOMIC_NOT_1CPU 282,9010

include/my_attribute.h,178
#define _my_attribute_h22,871
#  define GCC_VERSION 26,939
# define ATTRIBUTE_FORMAT(52,1695
#  define ATTRIBUTE_FORMAT_FPTR(62,1932
#  define ATTRIBUTE_FORMAT_FPTR(64,2014

include/my_base.h,11570
#define _my_base_h20,826
#define CHSIZE_USED23,895
#define EOVERFLOW 31,1066
#define HA_OPEN_ABORT_IF_LOCKED	39,1200
#define HA_OPEN_WAIT_IF_LOCKED	40,1249
#define HA_OPEN_IGNORE_IF_LOCKED	41,1283
#define HA_OPEN_TMP_TABLE	42,1318
#define HA_OPEN_DELAY_KEY_WRITE	43,1375
#define HA_OPEN_ABORT_IF_CRASHED	44,1436
#define HA_OPEN_FOR_REPAIR	45,1472
#define HA_OPEN_FROM_SQL_LAYER 46,1530
#define HA_OPEN_MMAP 47,1573
#define HA_OPEN_COPY	48,1646
#define HA_OPEN_INTERNAL_TABLE 50,1760
enum ha_rkey_function 73,2662
  HA_READ_KEY_EXACT,74,2686
  HA_READ_KEY_OR_NEXT,75,2755
  HA_READ_KEY_OR_PREV,76,2817
  HA_READ_AFTER_KEY,77,2876
  HA_READ_BEFORE_KEY,78,2948
  HA_READ_PREFIX,79,3021
  HA_READ_PREFIX_LAST,80,3086
  HA_READ_PREFIX_LAST_OR_PREV,81,3156
  HA_READ_MBR_CONTAIN,82,3234
  HA_READ_MBR_INTERSECT,83,3257
  HA_READ_MBR_WITHIN,84,3282
  HA_READ_MBR_DISJOINT,85,3304
  HA_READ_MBR_EQUAL86,3328
enum ha_key_alg 91,3380
  HA_KEY_ALG_UNDEF=92,3398
  HA_KEY_ALG_BTREE=93,3453
  HA_KEY_ALG_RTREE=94,3512
  HA_KEY_ALG_HASH=95,3571
  HA_KEY_ALG_FULLTEXT=96,3624
enum ha_storage_media 101,3721
  HA_SM_DEFAULT=102,3745
  HA_SM_DISK=103,3810
  HA_SM_MEMORY=104,3857
enum ha_extra_function 109,3963
  HA_EXTRA_NORMAL=110,3988
  HA_EXTRA_QUICK=111,4042
  HA_EXTRA_NOT_USED=112,4089
  HA_EXTRA_CACHE=113,4112
  HA_EXTRA_NO_CACHE=114,4166
  HA_EXTRA_NO_READCHECK=115,4226
  HA_EXTRA_READCHECK=116,4283
  HA_EXTRA_KEYREAD=117,4335
  HA_EXTRA_NO_KEYREAD=118,4391
  HA_EXTRA_NO_USER_CHANGE=119,4452
  HA_EXTRA_KEY_CACHE=120,4516
  HA_EXTRA_NO_KEY_CACHE=121,4541
  HA_EXTRA_WAIT_LOCK=122,4569
  HA_EXTRA_NO_WAIT_LOCK=123,4635
  HA_EXTRA_WRITE_CACHE=124,4704
  HA_EXTRA_FLUSH_CACHE=125,4768
  HA_EXTRA_NO_KEYS=126,4827
  HA_EXTRA_KEYREAD_CHANGE_POS=127,4884
  HA_EXTRA_REMEMBER_POS=129,4983
  HA_EXTRA_RESTORE_POS=130,5045
  HA_EXTRA_REINIT_CACHE=131,5072
  HA_EXTRA_FORCE_REOPEN=132,5138
  HA_EXTRA_FLUSH,133,5203
  HA_EXTRA_NO_ROWS,134,5250
  HA_EXTRA_RESET_STATE,135,5295
  HA_EXTRA_IGNORE_DUP_KEY,136,5343
  HA_EXTRA_NO_IGNORE_DUP_KEY,137,5411
  HA_EXTRA_PREPARE_FOR_DROP,138,5441
  HA_EXTRA_PREPARE_FOR_UPDATE,139,5470
  HA_EXTRA_PRELOAD_BUFFER_SIZE,140,5538
  HA_EXTRA_CHANGE_KEY_TO_UNIQUE,144,5695
  HA_EXTRA_CHANGE_KEY_TO_DUP,145,5728
  HA_EXTRA_KEYREAD_PRESERVE_FIELDS,151,5951
  HA_EXTRA_MMAP,152,5987
  HA_EXTRA_IGNORE_NO_KEY,160,6247
  HA_EXTRA_NO_IGNORE_NO_KEY,161,6273
  HA_EXTRA_MARK_AS_LOG_TABLE,166,6429
  HA_EXTRA_WRITE_CAN_REPLACE,174,6789
  HA_EXTRA_WRITE_CANNOT_REPLACE,175,6819
  HA_EXTRA_DELETE_CANNOT_BATCH,182,7151
  HA_EXTRA_UPDATE_CANNOT_BATCH,183,7183
  HA_EXTRA_INSERT_WITH_UPDATE,188,7364
  HA_EXTRA_PREPARE_FOR_RENAME,190,7443
  HA_EXTRA_ADD_CHILDREN_LIST,194,7522
  HA_EXTRA_ATTACH_CHILDREN,195,7552
  HA_EXTRA_IS_ATTACHED_CHILDREN,196,7580
  HA_EXTRA_DETACH_CHILDREN197,7613
#define HA_EXTRA_PREPARE_FOR_DELETE 201,7690
enum ha_panic_function 205,7802
  HA_PANIC_CLOSE,206,7827
  HA_PANIC_WRITE,207,7873
  HA_PANIC_READ	208,7923
enum ha_base_keytype 213,8034
  HA_KEYTYPE_END=214,8057
  HA_KEYTYPE_TEXT=215,8077
  HA_KEYTYPE_BINARY=216,8131
  HA_KEYTYPE_SHORT_INT=217,8194
  HA_KEYTYPE_LONG_INT=218,8220
  HA_KEYTYPE_FLOAT=219,8245
  HA_KEYTYPE_DOUBLE=220,8267
  HA_KEYTYPE_NUM=221,8290
  HA_KEYTYPE_USHORT_INT=222,8348
  HA_KEYTYPE_ULONG_INT=223,8375
  HA_KEYTYPE_LONGLONG=224,8401
  HA_KEYTYPE_ULONGLONG=225,8427
  HA_KEYTYPE_INT24=226,8454
  HA_KEYTYPE_UINT24=227,8477
  HA_KEYTYPE_INT8=228,8501
  HA_KEYTYPE_VARTEXT1=230,8584
  HA_KEYTYPE_VARBINARY1=231,8655
  HA_KEYTYPE_VARTEXT2=233,8797
  HA_KEYTYPE_VARBINARY2=234,8855
  HA_KEYTYPE_BIT=235,8922
#define HA_MAX_KEYTYPE	238,8946
#define HA_NOSAME	242,9040
#define HA_PACK_KEY	243,9099
#define HA_AUTO_KEY	244,9161
#define HA_BINARY_PACK_KEY	245,9186
#define HA_FULLTEXT	246,9255
#define HA_UNIQUE_CHECK	247,9311
#define HA_SPATIAL	248,9375
#define HA_NULL_ARE_EQUAL	249,9428
#define HA_GENERATED_KEY	250,9494
#define HA_CLUSTERING 251,9556
#define HA_KEYFLAG_MASK 254,9710
#define HA_KEY_HAS_PART_KEY_SEG 268,10303
#define HA_SPACE_PACK_USED	272,10377
#define HA_VAR_LENGTH_KEY	273,10441
#define HA_NULL_PART_KEY	274,10470
#define HA_USES_COMMENT 275,10499
#define HA_USES_PARSER 276,10537
#define HA_USES_BLOCK_SIZE	277,10615
#define HA_SORT_ALLOWS_SAME 278,10658
#define HA_SPACE_PACK	282,10786
#define HA_PART_KEY_SEG	283,10840
#define HA_VAR_LENGTH_PART	284,10906
#define HA_NULL_PART	285,10936
#define HA_BLOB_PART	286,10962
#define HA_SWAP_KEY	287,10988
#define HA_REVERSE_SORT	288,11013
#define HA_NO_SORT 289,11075
#define HA_END_SPACE_ARE_EQUAL	294,11278
#define HA_BIT_PART	295,11314
#define HA_OPTION_PACK_RECORD	298,11372
#define HA_OPTION_PACK_KEYS	299,11405
#define HA_OPTION_COMPRESS_RECORD	300,11436
#define HA_OPTION_LONG_BLOB_PTR	301,11472
#define HA_OPTION_TMP_TABLE	302,11529
#define HA_OPTION_CHECKSUM	303,11561
#define HA_OPTION_DELAY_KEY_WRITE	304,11592
#define HA_OPTION_NO_PACK_KEYS	305,11629
#define HA_OPTION_CREATE_FROM_ENGINE 306,11691
#define HA_OPTION_RELIES_ON_SQL_LAYER 307,11735
#define HA_OPTION_NULL_FIELDS	308,11779
#define HA_OPTION_PAGE_CHECKSUM	309,11815
#define HA_OPTION_TEMP_COMPRESS_RECORD	310,11853
#define HA_OPTION_READ_ONLY_DATA	311,11928
#define HA_DONT_TOUCH_DATA	315,12031
#define HA_PACK_RECORD	316,12097
#define HA_CREATE_TMP_TABLE	317,12158
#define HA_CREATE_CHECKSUM	318,12188
#define HA_CREATE_KEEP_FILES	319,12217
#define HA_CREATE_PAGE_CHECKSUM	320,12289
#define HA_CREATE_DELAY_KEY_WRITE 321,12324
#define HA_CREATE_RELIES_ON_SQL_LAYER 322,12361
#define HA_STATUS_POS 333,12687
#define HA_STATUS_NO_LOCK 340,12970
#define HA_STATUS_TIME 342,13078
#define HA_STATUS_CONST 349,13361
#define HA_STATUS_VARIABLE 355,13540
#define HA_STATUS_ERRKEY 361,13732
#define HA_STATUS_AUTO 365,13812
#define HA_STATUS_VARIABLE_EXTRA 370,13989
#define HA_ERR_FIRST 379,14238
#define HA_ERR_KEY_NOT_FOUND	381,14308
#define HA_ERR_FOUND_DUPP_KEY	382,14381
#define HA_ERR_INTERNAL_ERROR 383,14445
#define HA_ERR_RECORD_CHANGED	384,14506
#define HA_ERR_WRONG_INDEX	385,14574
#define HA_ERR_CRASHED	386,14641
#define HA_ERR_WRONG_IN_RECORD	387,14696
#define HA_ERR_OUT_OF_MEM	388,14760
#define HA_ERR_NOT_A_TABLE 389,14819
#define HA_ERR_WRONG_COMMAND	390,14895
#define HA_ERR_OLD_FILE	391,14956
#define HA_ERR_NO_ACTIVE_RECORD 392,15007
#define HA_ERR_RECORD_DELETED	393,15076
#define HA_ERR_RECORD_FILE_FULL 394,15138
#define HA_ERR_INDEX_FILE_FULL	395,15201
#define HA_ERR_END_OF_FILE	396,15263
#define HA_ERR_UNSUPPORTED	397,15328
#define HA_ERR_TO_BIG_ROW	398,15392
#define HA_WRONG_CREATE_OPTION	399,15440
#define HA_ERR_FOUND_DUPP_UNIQUE 400,15501
#define HA_ERR_UNKNOWN_CHARSET	401,15571
#define HA_ERR_WRONG_MRG_TABLE_DEF 402,15632
#define HA_ERR_CRASHED_ON_REPAIR 403,15706
#define HA_ERR_CRASHED_ON_USAGE 404,15781
#define HA_ERR_LOCK_WAIT_TIMEOUT 405,15847
#define HA_ERR_LOCK_TABLE_FULL 406,15884
#define HA_ERR_READ_ONLY_TRANSACTION 407,15921
#define HA_ERR_LOCK_DEADLOCK	408,15988
#define HA_ERR_CANNOT_ADD_FOREIGN 409,16022
#define HA_ERR_NO_REFERENCED_ROW 410,16102
#define HA_ERR_ROW_IS_REFERENCED 411,16172
#define HA_ERR_NO_SAVEPOINT	412,16246
#define HA_ERR_NON_UNIQUE_BLOCK_SIZE 413,16317
#define HA_ERR_NO_SUCH_TABLE 414,16390
#define HA_ERR_TABLE_EXIST 415,16469
#define HA_ERR_NO_CONNECTION 416,16549
#define HA_ERR_NULL_IN_SPATIAL 418,16676
#define HA_ERR_TABLE_DEF_CHANGED 419,16713
#define HA_ERR_NO_PARTITION_FOUND 421,16845
#define HA_ERR_RBR_LOGGING_FAILED 422,16883
#define HA_ERR_DROP_INDEX_FK 423,16963
#define HA_ERR_FOREIGN_DUPLICATE_KEY 428,17144
#define HA_ERR_TABLE_NEEDS_UPGRADE 430,17227
#define HA_ERR_TABLE_READONLY 431,17266
#define HA_ERR_AUTOINC_READ_FAILED 433,17340
#define HA_ERR_AUTOINC_ERANGE 434,17420
#define HA_ERR_GENERIC 435,17499
#define HA_ERR_RECORD_IS_THE_SAME 437,17626
#define HA_ERR_LOGGING_IMPOSSIBLE 439,17711
#define HA_ERR_CORRUPT_EVENT 441,17843
#define HA_ERR_NEW_FILE	443,17992
#define HA_ERR_ROWS_EVENT_APPLY 444,18053
#define HA_ERR_INITIALIZATION 446,18209
#define HA_ERR_FILE_TOO_SHORT	447,18284
#define HA_ERR_WRONG_CRC	448,18342
#define HA_ERR_TOO_MANY_CONCURRENT_TRXS 449,18398
#define HA_ERR_INDEX_COL_TOO_LONG 450,18487
#define HA_ERR_INDEX_CORRUPT 451,18566
#define HA_ERR_UNDO_REC_TOO_BIG 452,18627
#define HA_ERR_TABLE_IN_FK_CHECK 453,18698
#define HA_ERR_DISK_FULL 454,18783
#define HA_ERR_LAST 455,18821
#define HA_ERR_ERRORS 458,18924
#define HA_NAMELEN 462,19015
#define NO_SUCH_KEY 463,19074
typedef ulong key_part_map;465,19139
#define HA_WHOLE_KEY 466,19167
#define SEARCH_FIND	471,19270
#define SEARCH_NO_FIND	472,19292
#define SEARCH_SAME	473,19317
#define SEARCH_BIGGER	474,19339
#define SEARCH_SMALLER	475,19363
#define SEARCH_SAVE_BUFF	476,19389
#define SEARCH_UPDATE	477,19417
#define SEARCH_PREFIX	478,19442
#define SEARCH_LAST	479,19468
#define MBR_CONTAIN 480,19492
#define MBR_INTERSECT 481,19520
#define MBR_WITHIN 482,19549
#define MBR_DISJOINT 483,19578
#define MBR_EQUAL 484,19607
#define MBR_DATA 485,19636
#define SEARCH_NULL_ARE_EQUAL 486,19666
#define SEARCH_NULL_ARE_NOT_EQUAL 487,19731
#define QUICK_USED	490,19829
#define READ_CACHE_USED	491,19850
#define READ_CHECK_USED 492,19876
#define KEY_READ_USED	493,19902
#define WRITE_CACHE_USED 494,19926
#define OPT_NO_ROWS	495,19954
#define HA_STATE_CHANGED	498,20000
#define HA_STATE_AKTIV	499,20054
#define HA_STATE_WRITTEN	500,20107
#define HA_STATE_DELETED	501,20158
#define HA_STATE_NEXT_FOUND	502,20185
#define HA_STATE_PREV_FOUND	503,20256
#define HA_STATE_NO_KEY	504,20326
#define HA_STATE_KEY_CHANGED	505,20389
#define HA_STATE_WRITE_AT_END	506,20422
#define HA_STATE_BUFF_SAVED	507,20487
#define HA_STATE_ROW_CHANGED	508,20558
#define HA_STATE_EXTEND_BLOCK	509,20620
#define HA_STATE_RNEXT_SAME	510,20655
enum en_fieldtype 513,20778
  FIELD_LAST=514,20798
  FIELD_LAST=-1,FIELD_NORMAL,514,20798
  FIELD_LAST=-1,FIELD_NORMAL,FIELD_SKIP_ENDSPACE,514,20798
  FIELD_LAST=-1,FIELD_NORMAL,FIELD_SKIP_ENDSPACE,FIELD_SKIP_PRESPACE,514,20798
  FIELD_SKIP_ZERO,515,20868
  FIELD_SKIP_ZERO,FIELD_BLOB,515,20868
  FIELD_SKIP_ZERO,FIELD_BLOB,FIELD_CONSTANT,515,20868
  FIELD_SKIP_ZERO,FIELD_BLOB,FIELD_CONSTANT,FIELD_INTERVALL,515,20868
  FIELD_SKIP_ZERO,FIELD_BLOB,FIELD_CONSTANT,FIELD_INTERVALL,FIELD_ZERO,515,20868
  FIELD_VARCHAR,516,20940
  FIELD_VARCHAR,FIELD_CHECK,516,20940
  FIELD_enum_val_count517,20969
enum data_file_type 520,20996
  STATIC_RECORD,521,21018
  STATIC_RECORD, DYNAMIC_RECORD,521,21018
  STATIC_RECORD, DYNAMIC_RECORD, COMPRESSED_RECORD,521,21018
  STATIC_RECORD, DYNAMIC_RECORD, COMPRESSED_RECORD, BLOCK_RECORD521,21018
#define NO_MIN_RANGE	526,21109
#define NO_MAX_RANGE	527,21132
#define NEAR_MIN	528,21155
#define NEAR_MAX	529,21174
#define UNIQUE_RANGE	530,21193
#define EQ_RANGE	531,21217
#define NULL_RANGE	532,21237
#define GEOM_FLAG 533,21259
#define SKIP_RANGE 534,21286
typedef struct st_key_range536,21314
} key_range;542,21437
typedef struct st_key_multi_range544,21451
} KEY_MULTI_RANGE;550,21668
#define rows2double(555,21735
typedef my_off_t	ha_rows;556,21778
#define rows2double(558,21810
typedef ulong		ha_rows;559,21846
#define HA_POS_ERROR	562,21878
#define HA_OFFSET_ERROR	563,21915
#define MAX_FILE_SIZE	566,21986
#define MAX_FILE_SIZE	568,22024
#define HA_VARCHAR_PACKLENGTH(571,22067
typedef void (* invalidator_by_filename)575,22208

include/my_bit.h,317
#define MY_BIT_INCLUDED18,772
static inline uint my_bit_log2(34,1049
static inline uint my_count_bits(41,1171
static inline uint my_count_bits_uint32(63,2100
static inline uint32 my_round_up_to_next_power(91,2775
static inline uint32 my_clear_highest_bit(102,3210
static inline uint32 my_reverse_bits(113,3373

include/my_bitmap.h,765
#define _my_bitmap_h_18,775
#define MY_BIT_NONE 20,798
typedef uint32 my_bitmap_map;24,854
typedef struct st_bitmap26,885
} MY_BITMAP;38,1269
#define bitmap_buffer_size(72,3022
#define no_bytes_in_map(73,3074
#define no_words_in_map(74,3127
#define bytes_word_aligned(75,3182
#define _bitmap_set_bit(76,3236
#define _bitmap_flip_bit(78,3365
#define _bitmap_clear_bit(80,3495
#define _bitmap_is_set(82,3628
bitmap_set_bit(97,4171
bitmap_flip_bit(103,4298
bitmap_clear_bit(109,4427
bitmap_is_set(115,4558
#define bitmap_set_bit(121,4683
#define bitmap_flip_bit(122,4742
#define bitmap_clear_bit(123,4803
#define bitmap_is_set(124,4866
static inline my_bool bitmap_cmp(127,4931
#define bitmap_clear_all(135,5226
#define bitmap_set_all(137,5316

include/my_check_opt.h,1022
#define _my_check_opt_h17,743
#define T_AUTO_INC	29,975
#define T_AUTO_REPAIR	30,1006
#define T_BACKUP_DATA	31,1040
#define T_CALC_CHECKSUM	32,1074
#define T_CHECK	33,1110
#define T_CHECK_ONLY_CHANGED	34,1139
#define T_CREATE_MISSING_KEYS	35,1179
#define T_DESCRIPT	36,1220
#define T_DONT_CHECK_CHECKSUM	37,1251
#define T_EXTEND	38,1292
#define T_FAST	39,1321
#define T_FORCE_CREATE	40,1350
#define T_FORCE_UNIQUENESS	41,1386
#define T_INFO	42,1425
#define T_MEDIUM	44,1496
#define T_QUICK	46,1553
#define T_READONLY	47,1583
#define T_REP	48,1615
#define T_REP_BY_SORT	49,1643
#define T_REP_PARALLEL	50,1678
#define T_RETRY_WITHOUT_QUICK	51,1714
#define T_SAFE_REPAIR	52,1756
#define T_SILENT	53,1791
#define T_SORT_INDEX	54,1821
#define T_SORT_RECORDS	55,1855
#define T_STATISTICS	56,1891
#define T_UNPACK	57,1925
#define T_UPDATE_STATE	58,1955
#define T_VERBOSE	59,1991
#define T_VERY_SILENT	60,2022
#define T_WAIT_FOREVER	61,2057
#define T_WRITE_LOOP	62,2093
#define T_REP_ANY	64,2128

include/my_compare.h,588
#define _my_compare_h17,766
#define HA_MAX_POSSIBLE_KEY 36,1415
#define HA_MAX_KEY_LENGTH 42,1624
#define HA_MAX_KEY_SEG 43,1698
#define HA_MAX_POSSIBLE_KEY_BUFF 45,1774
#define HA_MAX_KEY_BUFF 46,1840
typedef struct st_HA_KEYSEG	48,1907
} HA_KEYSEG;61,2431
#define get_key_length(63,2445
#define get_key_length_rdonly(70,2617
#define get_key_pack_length(77,2786
#define store_key_length_inc(84,3008
#define size_to_store_key_length(91,3177
#define get_rec_bits(93,3244
#define set_rec_bits(97,3399
#define clr_rec_bits(106,3744
#define portable_sizeof_char_ptr 120,4258

include/my_compiler.h,1059
#define MY_COMPILER_INCLUDED2,29
# define MY_GNUC_PREREQ(36,1251
# define MY_ALIGN_EXT39,1376
#   define MY_ASSERT_UNREACHABLE(42,1488
# define MY_ALIGNOF(47,1608
# define MY_ALIGNED(48,1652
#   define MY_ALIGN_EXT53,1805
#   define MY_ALIGN_EXT59,1902
#   define MY_ALIGN_EXT65,2039
# define MY_ALIGNOF(71,2149
# define MY_ALIGNED(73,2249
# define MY_GNUC_PREREQ(81,2393
    template<typename type> struct my_alignof_helper 86,2478
#   define MY_ALIGNOF(88,2633
#   define MY_ALIGNOF(90,2708
# define MY_ASSERT_UNREACHABLE(95,2827
template<> struct MY_ALIGNED(1) my_alignment_imp<my_alignment_imp110,3122
template<> struct MY_ALIGNED(2) my_alignment_imp<my_alignment_imp111,3178
template<> struct MY_ALIGNED(4) my_alignment_imp<my_alignment_imp112,3234
template<> struct MY_ALIGNED(8) my_alignment_imp<my_alignment_imp113,3290
template<> struct MY_ALIGNED(16) my_alignment_imp<my_alignment_imp114,3346
struct my_alignment_imp 118,3469
template <size_t size,131,3830
struct my_aligned_storage132,3871
#define MY_ALIGNED(148,4142

include/my_dbug.h,2190
#define MY_DBUG_INCLUDED17,771
struct _db_stack_frame_ 34,1045
extern  void _db_doprnt_(58,2226
#define DBUG_ENTER(69,2632
#define DBUG_LEAVE 71,2757
#define DBUG_RETURN(72,2818
#define DBUG_VOID_RETURN 73,2880
#define DBUG_EXECUTE(74,2939
#define DBUG_EXECUTE_IF(76,3038
#define DBUG_EVALUATE(78,3140
#define DBUG_EVALUATE_IF(80,3232
#define DBUG_PRINT(82,3327
#define DBUG_PUSH(84,3438
#define DBUG_POP(85,3475
#define DBUG_SET(86,3506
#define DBUG_SET_INITIAL(87,3541
#define DBUG_PROCESS(88,3589
#define DBUG_FILE 89,3631
#define DBUG_SETJMP(90,3659
#define DBUG_LONGJMP(91,3713
#define DBUG_DUMP(92,3777
#define DBUG_END(93,3844
#define DBUG_LOCK_FILE 94,3876
#define DBUG_UNLOCK_FILE 95,3916
#define DBUG_ASSERT(96,3960
#define DBUG_EXPLAIN(97,3993
#define DBUG_EXPLAIN_INITIAL(98,4052
#define DEBUGGER_OFF 99,4121
#define DEBUGGER_ON 100,4191
#define DBUG_ABORT(102,4277
#define DBUG_ABORT(109,4530
#define DBUG_CHECK_CRASH(114,4763
#define DBUG_CRASH_ENTER(117,4931
#define DBUG_CRASH_RETURN(119,5023
#define DBUG_CRASH_VOID_RETURN 121,5109
#define DBUG_SUICIDE(133,5570
#define DBUG_SUICIDE(136,5640
#define DBUG_ENTER(141,5769
#define DBUG_LEAVE142,5792
#define DBUG_RETURN(143,5811
#define DBUG_VOID_RETURN 144,5879
#define DBUG_EXECUTE(145,5943
#define DBUG_EXECUTE_IF(146,5999
#define DBUG_EVALUATE(147,6055
#define DBUG_EVALUATE_IF(148,6097
#define DBUG_PRINT(149,6142
#define DBUG_PUSH(150,6198
#define DBUG_SET(151,6254
#define DBUG_SET_INITIAL(152,6310
#define DBUG_POP(153,6366
#define DBUG_PROCESS(154,6422
#define DBUG_SETJMP(155,6478
#define DBUG_LONGJMP(156,6513
#define DBUG_DUMP(157,6550
#define DBUG_END(158,6606
#define DBUG_ASSERT(159,6662
#define DBUG_LOCK_FILE 160,6718
#define DBUG_FILE 161,6774
#define DBUG_UNLOCK_FILE 162,6801
#define DBUG_EXPLAIN(163,6857
#define DBUG_EXPLAIN_INITIAL(164,6887
#define DEBUGGER_OFF 165,6925
#define DEBUGGER_ON 166,6981
#define DBUG_ABORT(167,7037
#define DBUG_CRASH_ENTER(168,7093
#define DBUG_CRASH_RETURN(169,7124
#define DBUG_CRASH_VOID_RETURN 170,7193
#define DBUG_SUICIDE(171,7257
#define DBUG_SYNC_POINT(183,7654
#define DBUG_SYNC_POINT(187,7817

include/my_dir.h,762
#define MY_DIR_H17,762
#define MY_S_IFMT	29,906
#define MY_S_IFDIR	30,950
#define MY_S_IFCHR	31,993
#define MY_S_IFBLK	32,1044
#define MY_S_IFREG	33,1091
#define MY_S_IFIFO	34,1132
#define MY_S_ISUID	35,1170
#define MY_S_ISGID	36,1228
#define MY_S_ISVTX	37,1287
#define MY_S_IREAD	38,1353
#define MY_S_IWRITE	39,1409
#define MY_S_IEXEC	40,1468
#define MY_S_ISDIR(42,1535
#define MY_S_ISCHR(43,1591
#define MY_S_ISBLK(44,1647
#define MY_S_ISREG(45,1703
#define MY_S_ISFIFO(46,1759
#define MY_DONT_SORT	48,1817
#define MY_WANT_STAT	49,1873
typedef struct my_stat55,1990
} MY_STAT;68,2544
#define MY_STAT 73,2577
#define MY_STAT 75,2638
typedef struct fileinfo81,2800
} FILEINFO;85,2862
typedef struct st_my_dir	87,2875
} MY_DIR;97,3274

include/my_getopt.h,872
#define _my_getopt_h18,769
#define GET_NO_ARG 24,869
#define GET_BOOL 25,894
#define GET_INT 26,919
#define GET_UINT 27,944
#define GET_LONG 28,969
#define GET_ULONG 29,994
#define GET_LL 30,1019
#define GET_ULL 31,1044
#define GET_STR 32,1069
#define GET_STR_ALLOC 33,1094
#define GET_DISABLED 34,1119
#define GET_ENUM 35,1144
#define GET_SET 36,1169
#define GET_DOUBLE 37,1194
#define GET_FLAGSET 38,1219
#define GET_ASK_ADDR	40,1245
#define GET_TYPE_MASK	41,1271
enum get_opt_arg_type 50,1602
enum get_opt_arg_type { NO_ARG,50,1602
enum get_opt_arg_type { NO_ARG, OPT_ARG,50,1602
enum get_opt_arg_type { NO_ARG, OPT_ARG, REQUIRED_ARG 50,1602
struct my_option54,1680
typedef my_bool (*my_get_one_option)my_get_one_option89,3846
typedef void (*my_error_reporter)my_error_reporter90,3923
typedef void *(*my_getopt_value)my_getopt_value99,4329

include/my_global.h,13588
#define _global_h20,852
#define __WIN__24,980
#define INNODB_COMPATIBILITY_HOOKS36,1361
#undef WIN40,1468
#undef WIN3241,1479
#undef _WIN42,1492
#undef _WIN3243,1504
#undef _WIN6444,1518
#undef __WIN__45,1532
#undef __WIN32__46,1547
#define HAVE_ERRNO_AS_DEFINE47,1564
#define USE_PRAGMA_INTERFACE52,1725
#define HAVE_ERRNO_AS_DEFINE56,1810
#define __i386__60,1887
#define C_MODE_START 65,1992
#define C_MODE_END	66,2029
#define C_MODE_START68,2056
#define C_MODE_END69,2077
#define CPP_UNNAMED_NS_START 73,2123
#define CPP_UNNAMED_NS_END 74,2165
#define HAVE_PSI_INTERFACE80,2267
#define IF_WIN(85,2416
#define IF_WIN(87,2444
#define IF_PURIFY(91,2493
#define IF_PURIFY(93,2524
#define HAVE_NDB_BINLOG 98,2605
#define HAVE_REPLICATION103,2695
#define HAVE_EXTERNAL_CLIENT104,2720
#undef SIZEOF_OFF_T113,2916
#define SIZEOF_OFF_T 114,2936
#define NOGDI121,3086
#define sleep(130,3278
#define F_OK 133,3349
#define W_OK 134,3364
#define F_RDLCK 137,3425
#define F_WRLCK 138,3443
#define F_UNLCK 139,3461
#define F_TO_EOF 140,3479
#define HAVE_SMEM 143,3570
#define HAVE_NAMED_PIPE 144,3590
#define shared_memory_buffer_length 145,3616
#define default_shared_memory_base_name 146,3658
#undef _LARGE_FILE_API152,3850
#  undef SIZEOF_CHARP 160,4049
#  undef SIZEOF_SHORT 161,4072
#  undef SIZEOF_INT 162,4095
#  undef SIZEOF_LONG 163,4116
#  undef SIZEOF_LONG_LONG 164,4138
#  undef SIZEOF_OFF_T 165,4165
#  undef WORDS_BIGENDIAN166,4188
#  define SIZEOF_SHORT 167,4213
#  define SIZEOF_INT 168,4238
#  define SIZEOF_LONG_LONG 169,4261
#  define SIZEOF_OFF_T 170,4290
#    define SIZEOF_CHARP 172,4359
#    define SIZEOF_LONG 173,4386
#    define SIZEOF_CHARP 175,4462
#    define SIZEOF_LONG 176,4489
#    define WORDS_BIGENDIAN181,4637
#define __builtin_expect(196,5211
#define likely(199,5267
#define unlikely(200,5309
#undef  _GNU_SOURCE204,5447
#define _GNU_SOURCE 205,5467
#undef HAVE_SYS_UN_H218,5828
#define __EXTENSIONS__ 221,5857
#define __STDC_EXT__ 223,5932
#define _XOPEN_SOURCE 252,7074
#define _XOPEN_SOURCE 254,7106
#define _POSIX_PTHREAD_SEMANTICS 260,7202
#define _REENTRANT	264,7289
#define _THREAD_SAFE 267,7403
#define _REENTRANT	277,7705
#define _H_STRINGS283,7893
#define _SYS_STREAM_H284,7912
#define ulonglong2double(286,8006
#define my_off_t2double(287,8057
inline double my_ulonglong2double(289,8121
#undef HAVE_SNPRINTF294,8299
#undef HAVE_PREAD301,8471
#undef HAVE_PWRITE302,8489
#undef HAVE_INITGROUPS306,8565
#define lint316,8783
#define _LONG_LONG 319,8852
#undef HAVE_ALLOCA367,9721
#undef HAVE_ALLOCA_H368,9740
#define compile_time_assert(389,10267
#define compile_time_assert(391,10321
#define _LARGEFILE64_SOURCE401,10753
#define HAVE_ULONG407,10923
#undef setrlimit411,11028
#define setrlimit 412,11045
#define QUOTE_ARG(419,11285
#define STRINGIFY_ARG(420,11344
#define DONT_ALLOW_USER_CHANGE 424,11502
#define DONT_USE_MYSQL_PWD 425,11535
#define SIGNAL_HANDLER_RESET_ON_DELIVERY430,11696
#define LINT_INIT(441,12053
#define LINT_INIT(443,12089
#define SO_EXT 448,12149
#define SO_EXT 450,12196
#define SO_EXT 452,12226
#define UNINIT_VAR(464,12580
#define UNINIT_VAR(467,12680
#undef HAVE_UINT471,12739
#define HAVE_UINT472,12756
typedef unsigned int uint;473,12774
typedef unsigned short ushort;474,12801
#define swap_variables(477,12840
#define test(478,12911
#define set_if_bigger(479,12942
#define set_if_smaller(480,13010
#define test_all_bits(481,13078
#define array_elements(482,13126
#define TRUE	486,13236
#define FALSE	487,13273
int __cxa_pure_virtual 499,13593
#undef DBUG_OFF505,13773
#  define DBUG_OFF510,13937
#    undef DBUG_ON512,13973
typedef int	File;518,14061
typedef SOCKET my_socket;520,14116
typedef int	my_socket;522,14148
#define INVALID_SOCKET 523,14205
#define sig_handler 526,14283
typedef void	(*sig_return)sig_return528,14327
typedef char	pchar;531,14439
typedef char	puchar;532,14497
typedef char	pbool;533,14556
typedef short	pshort;534,14614
typedef float	pfloat;535,14679
typedef int	pchar;537,14746
typedef uint	puchar;538,14805
typedef int	pbool;539,14866
typedef int	pshort;540,14925
typedef double	pfloat;541,14990
typedef int	(*qsort_cmp)qsort_cmp544,15074
typedef int	(*qsort_cmp2)qsort_cmp2545,15127
#define qsort_t 547,15199
typedef SOCKET_SIZE_TYPE size_socket;551,15326
#define SOCKOPT_OPTLEN_TYPE 554,15393
#define O_SHARE	560,15511
#define O_BINARY	562,15586
#define FILE_BINARY	565,15671
#define HAVE_FCNTL_LOCK568,15767
#define F_TO_EOF	569,15791
#define O_TEMPORARY	574,15904
#define O_SHORT_LIVED	577,15955
#define O_NOFOLLOW 580,16005
#define _SH_DENYRWD 585,16098
#define _SH_DENYWRD 586,16167
#define _SH_DENYRDD 587,16236
#define _SH_DENYDEL 588,16305
#define FN_LEN	593,16421
#define FN_HEADLEN	594,16465
#define FN_EXTLEN	595,16530
#define FN_REFLEN	596,16598
#define FN_EXTCHAR	597,16655
#define FN_HOMELIB	598,16678
#define FN_CURLIB	599,16741
#define FN_PARENTDIR	600,16806
#define FN_LIBCHAR	603,16888
#define FN_LIBCHAR2	604,16912
#define FN_DIRSEP 605,16936
#define FN_EXEEXT 606,17013
#define FN_SOEXT 607,17040
#define FN_ROOTDIR	608,17067
#define FN_DEVCHAR	609,17091
#define FN_NETWORK_DRIVES	610,17114
#define FN_NO_CASE_SENCE	611,17181
#define FN_LIBCHAR	613,17247
#define FN_LIBCHAR2	614,17270
#define FN_DIRSEP 615,17294
#define FN_EXEEXT 616,17359
#define FN_SOEXT 617,17382
#define FN_ROOTDIR	618,17408
#define MY_FILE_MIN 634,17973
#define MY_FILE_MIN 636,18005
#define MY_NFILE 650,18479
#define MY_NFILE 652,18524
#define OS_FILE_LIMIT	656,18574
#define IO_SIZE	664,18797
#define MALLOC_OVERHEAD 669,18933
#define ONCE_ALLOC_INIT	672,18987
#define RECORD_CACHE_SIZE	674,19069
#define KEY_CACHE_SIZE	676,19152
#define KEY_CACHE_BLOCK_SIZE	678,19239
#define NO_DIR_LIBRARY	684,19346
#undef remove	689,19458
#define closesocket(691,19522
inline double my_ulonglong2double(696,19598
#define ulonglong2double 703,19784
#define my_off_t2double 704,19829
inline unsigned long long my_double2ulonglong(706,19894
#define double2ulonglong 714,20112
#define ulonglong2double(718,20190
#define my_off_t2double(719,20245
#define double2ulonglong(722,20331
#define offsetof(726,20411
#define ulong_to_double(728,20481
#define strtok_r(735,20655
#define HAVE_LONG_LONG 741,20773
#define LONGLONG_MIN	750,21011
#define LONGLONG_MAX	751,21067
#define ULONGLONG_MAX 757,21247
#define ULONGLONG_MAX 759,21287
#define INT_MIN64 763,21411
#define INT_MAX64 764,21459
#define INT_MIN32 765,21504
#define INT_MAX32 766,21543
#define UINT_MAX32 767,21579
#define INT_MIN24 768,21615
#define INT_MAX24 769,21653
#define UINT_MAX24 770,21688
#define INT_MIN16 771,21723
#define INT_MAX16 772,21757
#define UINT_MAX16 773,21788
#define INT_MIN8 774,21819
#define INT_MAX8 775,21851
#define UINT_MAX8 776,21880
#define DBL_MIN	780,21954
#define FLT_MIN	781,21996
#define DBL_MAX	784,22069
#define FLT_MAX	785,22111
#define SIZE_T_MAX 788,22187
#define isfinite(793,22271
#define finite(795,22307
#define isnan(800,22414
static inline double my_isinf(807,22647
#define my_isinf(814,22799
#define my_isinf(817,22859
#define M_PI 822,22963
#define M_E 825,23018
#define M_LN2 828,23073
typedef long		my_ptrdiff_t;836,23228
typedef long long	my_ptrdiff_t;838,23262
#define MY_ALIGN(841,23302
#define ALIGN_SIZE(842,23355
#define ADD_TO_PTR(844,23441
#define PTR_BYTE_DIFF(845,23504
#define my_offsetof(859,24094
#define NullS	862,24199
#undef STDCALL865,24241
#define STDCALL 869,24278
#define STDCALL871,24310
typedef unsigned char	uchar;877,24392
typedef signed char int8;881,24477
typedef unsigned char uint8;884,24567
typedef short int16;887,24659
typedef unsigned short uint16;890,24707
typedef int int32;894,24784
typedef unsigned int uint32;897,24830
typedef long int32;901,24908
typedef unsigned long uint32;904,24955
typedef unsigned long	ulong;911,25102
typedef unsigned long long int ulonglong;920,25432
typedef long long int	longlong;921,25508
typedef unsigned long	ulonglong;923,25546
typedef long		longlong;924,25615
typedef longlong int64;928,25672
typedef ulonglong uint64;931,25723
typedef unsigned long my_ulonglong;935,25790
typedef unsigned __int64 my_ulonglong;937,25850
typedef unsigned long long my_ulonglong;939,25895
typedef int intptr;943,25975
typedef long intptr;945,26029
typedef long long intptr;947,26089
#define MY_ERRPTR 952,26213
typedef unsigned long long my_off_t;955,26271
typedef unsigned long long os_off_t;956,26308
typedef off_t os_off_t;958,26351
typedef ulonglong my_off_t;960,26396
typedef unsigned long my_off_t;962,26430
#define MY_FILEPOS_ERROR	965,26487
typedef ulonglong table_map;970,26578
typedef ulong nesting_map;971,26650
#define socket_errno	974,26743
#define SOCKET_EINTR	975,26782
#define SOCKET_EAGAIN	976,26812
#define SOCKET_ETIMEDOUT 977,26849
#define SOCKET_EWOULDBLOCK 978,26887
#define SOCKET_EADDRINUSE 979,26929
#define SOCKET_ENFILE	980,26969
#define SOCKET_EMFILE	981,26998
#define socket_errno	983,27044
#define closesocket(984,27071
#define SOCKET_EINTR	985,27103
#define SOCKET_EAGAIN	986,27130
#define SOCKET_ETIMEDOUT 987,27159
#define SOCKET_EWOULDBLOCK 988,27197
#define SOCKET_EADDRINUSE 989,27236
#define SOCKET_ENFILE	990,27273
#define SOCKET_EMFILE	991,27302
typedef int		myf;994,27339
typedef char		my_bool;995,27391
#define MYF(998,27490
#define LL(1002,27550
#define LL(1004,27578
#define ULL(1010,27648
#define ULL(1012,27678
#define reg1 1021,27854
#define reg2 1022,27876
#define reg3 1023,27898
#define reg4 1024,27920
#define reg5 1025,27942
#define reg6 1026,27964
#define reg7 1027,27986
#define reg8 1028,28008
#define reg9 1029,28030
#define reg10 1030,28052
#define reg11 1031,28075
#define reg12 1032,28098
#define reg13 1033,28121
#define reg14 1034,28144
#define reg15 1035,28167
#define reg16 1036,28190
#define YESNO(1042,28268
#define MY_HOW_OFTEN_TO_ALARM	1044,28307
#define MY_HOW_OFTEN_TO_WRITE	1045,28378
#define sint2korr(1056,28641
#define sint3korr(1057,28681
#define sint4korr(1065,29020
#define uint2korr(1066,29059
#define uint3korr(1068,29145
#define uint3korr(1078,29441
#define uint4korr(1080,29542
#define uint5korr(1081,29583
#define uint6korr(1086,29837
#define uint8korr(1092,30297
#define sint8korr(1093,30341
#define int2store(1094,30384
#define int3store(1095,30438
#define int4store(1098,30625
#define int5store(1099,30676
#define int6store(1104,30984
#define int8store(1110,31371
} doubleget_union;1115,31474
#define doubleget(1116,31493
#define doublestore(1121,31650
#define float4get(1124,31827
#define float8get(1125,31905
#define float4store(1126,31949
#define floatstore(1127,32021
#define floatget(1128,32094
#define float8store(1129,32166
#define sint2korr(1136,32321
#define sint3korr(1138,32419
#define sint4korr(1146,32758
#define sint8korr(1150,32941
#define uint2korr(1151,32986
#define uint3korr(1153,33088
#define uint4korr(1156,33237
#define uint5korr(1160,33431
#define uint6korr(1165,33685
#define uint8korr(1171,34145
#define int2store(1180,34556
#define int3store(1184,34813
#define int4store(1189,35149
#define int5store(1193,35450
#define int6store(1199,35856
#define int8store(1206,36352
#define float4store(1210,36603
#define float4get(1215,36868
#define float8store(1221,37222
#define float8get(1230,37751
#define float4get(1241,38366
#define float4store(1242,38422
#define doublestore(1245,38551
#define doubleget(1254,39171
#define float8get(1266,39813
#define float8store(1267,39857
#define int4net(1276,40078
#define ushortget(1288,40490
#define shortget(1290,40643
#define longget(1292,40792
#define ulongget(1298,41140
#define shortstore(1304,41484
#define longstore(1307,41685
#define floatget(1312,41931
#define floatstore(1313,41987
#define doubleget(1314,42053
#define doublestore(1315,42109
#define longlongget(1316,42175
#define longlongstore(1317,42235
#define ushortget(1321,42305
#define shortget(1322,42362
#define longget(1323,42418
#define ulongget(1324,42473
#define shortstore(1325,42531
#define longstore(1326,42570
#define floatstore(1328,42627
#define floatget(1329,42694
#define doubleget(1332,42775
#define doublestore(1333,42831
#define longlongget(1335,42920
#define longlongstore(1336,42980
#define MYSQL_UNIVERSAL_CLIENT_CHARSET 1341,43098
#define MYSQL_UNIVERSAL_CLIENT_CHARSET 1343,43150
#define NO_EMBEDDED_ACCESS_CHECKS1347,43299
#define dlsym(1351,43361
#define dlopen(1352,43428
#define dlclose(1353,43492
#define HAVE_DLOPEN1355,43559
#define DLERROR_GENERATE(1367,43708
#define dlerror(1381,44147
#define dlopen_errno 1382,44168
#define dlerror(1384,44223
#define DLERROR_GENERATE(1385,44290
#define dlopen_errno 1386,44355
#define DLERROR_GENERATE(1389,44427
#define dlopen_errno 1390,44492
#define MY_INT32_NUM_DECIMAL_DIGITS 1402,44710
#define MY_INT64_NUM_DECIMAL_DIGITS 1405,44803
#define max(1409,44937
#define min(1410,44979
#define NEED_EXPLICIT_SYNC_DIR 1418,45209
#define bool 1422,45294
#    define __func__ 1428,45472
#    define __func__ 1430,45514
#    define __func__ 1434,45602
#    define __func__ 1436,45643
#  define __func__ 1439,45714
#  define __func__ 1441,45748
#define MAX_EXACT_INTEGER 1449,45947
static inline double rint(1459,46380
#define MYSQL_PLUGIN_IMPORT 1486,47205
#define MYSQL_PLUGIN_IMPORT1488,47261
#undef HAVE_OPENSSL1499,47532
#undef HAVE_SMEM	1500,47552

include/my_libwrap.h,33
#define MY_LIBWRAP_INCLUDED2,28

include/my_list.h,206
#define _list_h_17,762
typedef struct st_list 23,820
} LIST;26,889
typedef int (*list_walk_action)list_walk_action28,898
#define list_rest(38,1313
#define list_push(39,1346
#define list_pop(40,1392

include/my_md5.h,118
#define MY_MD5_INCLUDED2,24
typedef uint32 cvs_uint32;31,1310
} my_MD5Context;37,1422
#define MY_MD5_HASH(52,1741

include/my_net.h,107
#define _my_net_h23,869
#define O_NONBLOCK 56,1494
#define SHUT_RDWR 63,1656
#define in_addr_t 73,1955

include/my_nosys.h,237
#define _my_nosys_h21,892
#define __MY_NOSYS__27,973
#undef my_read33,1045
#undef my_write34,1060
#undef my_seek35,1076
#define my_read(36,1091
#define my_write(37,1139
#define my_malloc(43,1400
#define my_no_flags_free(44,1435

include/my_pthread.h,9871
#define _my_pthread_h19,832
#define ETIME 24,928
#define EXTERNC 28,1001
#define EXTERNC31,1047
typedef CRITICAL_SECTION pthread_mutex_t;35,1111
typedef DWORD		 pthread_t;36,1153
typedef struct thread_attr 37,1180
} pthread_attr_t 40,1260
typedef struct { int dummy; } pthread_condattr_t;42,1280
typedef struct st_pthread_link 46,1373
} pthread_link;49,1457
      SIGNAL=68,1865
      BROADCAST=69,1882
      MAX_EVENTS=70,1902
} pthread_cond_t;75,2006
typedef int pthread_mutexattr_t;78,2026
#define pthread_self(79,2059
#define pthread_handler_t 80,2103
typedef void * (__cdecl *pthread_handler)pthread_handler81,2152
typedef volatile LONG my_pthread_once_t;83,2204
#define MY_PTHREAD_ONCE_INIT 84,2245
#define MY_PTHREAD_ONCE_INPROGRESS 85,2277
#define MY_PTHREAD_ONCE_DONE 86,2314
 union ft64 98,2615
struct timespec 102,2663
#define set_timespec(107,2798
#define set_timespec_nsec(112,2987
#define cmp_timespec(127,3339
#define ETIMEDOUT 153,4503
#define HAVE_LOCALTIME_R	155,4567
#define _REENTRANT	156,4595
#define HAVE_PTHREAD_ATTR_SETSTACKSIZE	157,4618
#undef SAFE_MUTEX	160,4661
#define pthread_key(161,4714
#define pthread_key_create(162,4748
#define pthread_key_delete(163,4810
#define my_pthread_setspecific_ptr(164,4851
#define pthread_setspecific(165,4915
#define pthread_getspecific(166,4972
#define my_pthread_getspecific(167,5020
#define my_pthread_getspecific_ptr(168,5077
#define pthread_equal(170,5139
#define pthread_mutex_init(171,5179
#define pthread_mutex_lock(172,5245
#define pthread_mutex_trylock(173,5304
#define pthread_mutex_unlock(174,5368
#define pthread_mutex_destroy(175,5430
#define pthread_kill(176,5493
#define pthread_attr_setdetachstate(180,5588
#define pthread_attr_setscope(181,5646
#define pthread_detach_this_thread(182,5681
#define pthread_condattr_init(183,5718
#define pthread_condattr_destroy(184,5751
#define pthread_yield(185,5787
#define my_sigset(186,5828
#define sigwait 191,5916
#undef sigwait193,5964
#define _REENTRANT197,6026
#define pthread_key(209,6228
#define my_pthread_getspecific_ptr(210,6269
#define my_pthread_setspecific_ptr(211,6339
#define pthread_detach_this_thread(212,6414
#define pthread_handler_t 213,6451
typedef void *(* pthread_handler)214,6492
#define my_pthread_once_t 216,6536
#define MY_PTHREAD_ONCE_INIT 218,6615
#define MY_PTHREAD_ONCE_INIT 220,6675
#define my_pthread_once(222,6729
#define HAVE_rts_threads227,6886
#define pthread_sigmask(229,6950
#define PTHREAD_CREATE_DETACHED 230,7006
#define PTHREAD_SCOPE_SYSTEM 231,7066
#define PTHREAD_SCOPE_PROCESS 232,7117
#define USE_ALARM_THREAD233,7167
#define my_sigwait(241,7399
#define pthread_mutex_init(248,7559
#define pthread_cond_init(252,7739
#define pthread_sigmask(258,8002
#define my_sigset(273,8676
#define my_sigset(282,9310
#define my_sigset(284,9375
#define pthread_attr_setscope(288,9496
#undef	HAVE_GETHOSTBYADDR_R	289,9531
#define pthread_cond_timedwait(296,9789
#define my_pthread_getspecific(300,9923
#define my_pthread_getspecific(302,9994
#define pthread_condattr_init 316,10377
#define pthread_condattr_destroy 317,10431
#define pthread_key_delete(322,10584
#define pthread_cond_destroy(326,10687
#define pthread_mutex_destroy(327,10736
#define pthread_attr_delete(328,10786
#define pthread_condattr_delete(329,10834
#define pthread_attr_setstacksize(330,10886
#define pthread_equal(331,10942
#define pthread_cond_timedwait(332,10982
#define pthread_attr_init(333,11047
#define pthread_attr_destroy(334,11099
#define pthread_attr_setdetachstate(335,11154
#define pthread_create(336,11212
#define pthread_sigmask(337,11277
#define pthread_kill(338,11333
#undef	pthread_detach_this_thread339,11390
#define pthread_detach_this_thread(340,11424
#define pthread_sigmask(344,11554
#define pthread_kill(345,11610
#define pthread_condattr_init(346,11667
#define pthread_condattr_destroy(347,11717
#undef	pthread_detach_this_thread348,11770
#define pthread_detach_this_thread(349,11804
#define pthread_key_create(354,12111
#define pthread_attr_init(358,12254
#define pthread_attr_destroy(359,12306
#define pthread_attr_setdetachstate(360,12361
#define pthread_create(361,12419
#define pthread_sigmask(363,12508
#define pthread_kill(365,12571
#undef	pthread_detach_this_thread366,12628
#define pthread_detach_this_thread(367,12662
#define HAVE_PTHREAD_KILL369,12810
#undef pthread_cond_timedwait375,12937
#define pthread_cond_timedwait(376,12967
#define pthread_attr_getstacksize(382,13184
#undef pthread_mutex_trylock387,13417
#define pthread_mutex_trylock(388,13446
#define pthread_yield(395,13712
#define pthread_yield(397,13809
#define pthread_yield(399,13882
#define set_timespec(410,14136
#define set_timespec_nsec(417,14303
#define set_timespec(426,14574
#define set_timespec_nsec(435,14798
#define cmp_timespec(455,15314
#define cmp_timespec(463,15610
typedef struct st_safe_mutex_t473,15977
} safe_mutex_t;482,16215
typedef struct st_safe_mutex_info_t491,16441
} safe_mutex_info_t;497,16598
#undef pthread_mutex_init515,17406
#undef pthread_mutex_lock516,17432
#undef pthread_mutex_unlock517,17458
#undef pthread_mutex_destroy518,17486
#undef pthread_mutex_wait519,17515
#undef pthread_mutex_timedwait520,17541
#undef pthread_mutex_t521,17572
#undef pthread_cond_wait522,17595
#undef pthread_cond_timedwait523,17620
#undef pthread_mutex_trylock524,17650
#define pthread_mutex_init(525,17679
#define pthread_mutex_lock(526,17754
#define pthread_mutex_unlock(527,17832
#define pthread_mutex_destroy(528,17905
#define pthread_cond_wait(529,17980
#define pthread_cond_timedwait(530,18053
#define pthread_mutex_trylock(531,18142
#define pthread_mutex_t 532,18222
#define safe_mutex_assert_owner(533,18259
#define safe_mutex_assert_not_owner(536,18407
#define safe_mutex_assert_owner(540,18565
#define safe_mutex_assert_not_owner(541,18601
typedef struct st_my_pthread_fastmutex_t545,18724
} my_pthread_fastmutex_t;550,18824
#undef pthread_mutex_init557,19068
#undef pthread_mutex_lock558,19094
#undef pthread_mutex_unlock559,19120
#undef pthread_mutex_destroy560,19148
#undef pthread_mutex_wait561,19177
#undef pthread_mutex_timedwait562,19203
#undef pthread_mutex_t563,19234
#undef pthread_cond_wait564,19257
#undef pthread_cond_timedwait565,19282
#undef pthread_mutex_trylock566,19312
#define pthread_mutex_init(567,19341
#define pthread_mutex_lock(568,19408
#define pthread_mutex_unlock(569,19467
#define pthread_mutex_destroy(570,19533
#define pthread_cond_wait(571,19601
#define pthread_cond_timedwait(572,19667
#define pthread_mutex_trylock(573,19749
#define pthread_mutex_t 574,19817
#undef HAVE_PTHREAD_RWLOCK_RDLOCK580,20013
#undef HAVE_RWLOCK_INIT581,20047
#undef HAVE_RWLOCK_T582,20071
#define rw_lock_t 587,20189
#define my_rwlock_init(588,20223
#define rw_rdlock(589,20279
#define rw_wrlock(590,20324
#define rw_tryrdlock(591,20369
#define rw_trywrlock(592,20420
#define rw_unlock(593,20471
#define rwlock_destroy(594,20518
#define rw_lock_t 596,20613
#define my_rwlock_init(597,20648
#define rw_rdlock(598,20705
#define rw_wrlock(599,20751
#define rw_tryrdlock(600,20797
#define rw_trywrlock(601,20851
#define rw_unlock(602,20905
#define rwlock_destroy(603,20951
#define rw_lock_t 606,21091
#define my_rwlock_init(608,21125
#define NEED_MY_RW_LOCK 611,21237
#define rw_lock_t 612,21263
#define my_rwlock_init(613,21294
#define rw_rdlock(614,21338
#define rw_wrlock(615,21377
#define rw_tryrdlock(616,21416
#define rw_trywrlock(617,21461
#define rw_unlock(618,21506
#define rwlock_destroy(619,21545
#define rw_lock_assert_write_owner(620,21590
#define rw_lock_assert_not_write_owner(621,21663
typedef struct st_rw_pr_lock_t 656,23199
} rw_pr_lock_t;677,23827
#define rw_pr_lock_assert_write_owner(685,24066
#define rw_pr_lock_assert_not_write_owner(688,24248
#define rw_pr_lock_assert_write_owner(692,24448
#define rw_pr_lock_assert_not_write_owner(693,24489
} my_rw_lock_t;734,25554
typedef struct st_my_rw_lock_t 743,25692
} my_rw_lock_t;752,26047
#define my_rw_lock_assert_write_owner(764,26396
#define my_rw_lock_assert_not_write_owner(767,26573
#define my_rw_lock_assert_write_owner(771,26762
#define my_rw_lock_assert_not_write_owner(772,26803
#define GETHOSTBYADDR_BUFF_SIZE 777,26886
#define thr_setconcurrency(780,26956
#define pthread_attr_setstacksize(783,27095
#define MY_MUTEX_INIT_SLOW 787,27203
#define MY_MUTEX_INIT_FAST 790,27328
#define MY_MUTEX_INIT_FAST 792,27380
#define MY_MUTEX_INIT_ERRCHK 796,27520
#define MY_MUTEX_INIT_ERRCHK 798,27580
#define ESRCH 803,27667
typedef ulong my_thread_id;806,27691
#define THREAD_NAME_SIZE 819,28100
#define DEFAULT_THREAD_STACK	826,28330
#define DEFAULT_THREAD_STACK	828,28377
#define INSTRUMENT_ME 834,28469
struct st_my_thread_var836,28494
extern struct st_my_thread_var *_my_thread_var(_my_thread_var857,28926
#define my_thread_var 860,29077
#define my_errno 861,29118
#define THD_LIB_OTHER 869,29315
#define THD_LIB_NPTL 870,29339
#define THD_LIB_LT 871,29363
#define thread_safe_increment(885,29795
#define thread_safe_decrement(886,29865
#define thread_safe_increment(888,29941
#define thread_safe_decrement(890,30042
#define thread_safe_add(897,30196
#define thread_safe_sub(898,30268
#define thread_safe_add(900,30354
#define thread_safe_sub(902,30454
#define statistic_increment(920,30980
#define statistic_decrement(921,31044
#define statistic_add(922,31108
#define statistic_sub(923,31170
#define statistic_decrement(925,31238
#define statistic_increment(926,31277
#define statistic_add(927,31316
#define statistic_sub(928,31358
#define status_var_increment(934,31492
#define status_var_decrement(935,31530
#define status_var_add(936,31568
#define status_var_sub(937,31609

include/my_rdtsc.h,1430
#define MY_RDTSC_H24,871
struct my_timer_unit_info29,928
struct my_timer_info45,1264
typedef struct my_timer_info MY_TIMER_INFO;59,1728
#define MY_TIMER_ROUTINE_ASM_X86 101,2497
#define MY_TIMER_ROUTINE_ASM_X86_64 102,2549
#define MY_TIMER_ROUTINE_RDTSCLL 103,2601
#define MY_TIMER_ROUTINE_ASM_X86_WIN 104,2653
#define MY_TIMER_ROUTINE_RDTSC 105,2705
#define MY_TIMER_ROUTINE_ASM_IA64 106,2757
#define MY_TIMER_ROUTINE_ASM_PPC 107,2809
#define MY_TIMER_ROUTINE_SGI_CYCLE 108,2861
#define MY_TIMER_ROUTINE_GETHRTIME 109,2913
#define MY_TIMER_ROUTINE_READ_REAL_TIME 110,2965
#define MY_TIMER_ROUTINE_CLOCK_GETTIME 111,3017
#define MY_TIMER_ROUTINE_NXGETTIME 112,3069
#define MY_TIMER_ROUTINE_GETTIMEOFDAY 113,3121
#define MY_TIMER_ROUTINE_QUERYPERFORMANCECOUNTER 114,3173
#define MY_TIMER_ROUTINE_GETTICKCOUNT 115,3225
#define MY_TIMER_ROUTINE_TIME 116,3277
#define MY_TIMER_ROUTINE_TIMES 117,3329
#define MY_TIMER_ROUTINE_FTIME 118,3381
#define MY_TIMER_ROUTINE_ASM_PPC64 119,3433
#define MY_TIMER_ROUTINE_ASM_SUNPRO_SPARC64 120,3485
#define MY_TIMER_ROUTINE_ASM_SUNPRO_SPARC32 121,3537
#define MY_TIMER_ROUTINE_ASM_SUNPRO_I386 122,3589
#define MY_TIMER_ROUTINE_ASM_GCC_SPARC64 123,3641
#define MY_TIMER_ROUTINE_ASM_GCC_SPARC32 124,3693
#define MY_TIMER_ROUTINE_MACH_ABSOLUTE_TIME 125,3745
#define MY_TIMER_ROUTINE_GETSYSTEMTIMEASFILETIME 126,3797
#define MY_TIMER_ROUTINE_ASM_SUNPRO_X86_64 127,3849

include/my_stacktrace.h,264
#define _my_stacktrace_h_17,771
#define HAVE_STACKTRACE 24,943
#define HAVE_STACKTRACE 27,1027
#undef HAVE_STACKTRACE31,1137
#define HAVE_STACKTRACE 32,1160
#define HAVE_WRITE_CORE35,1194
#define BACKTRACE_DEMANGLE 40,1338
size_t my_safe_snprintf(103,3450

include/my_sys.h,6289
#define _my_sys_h17,768
typedef struct my_aio_result 25,946
} my_aio_result;28,1022
# define MEM_UNDEFINED(33,1100
# define MEM_NOACCESS(34,1165
# define MEM_CHECK_ADDRESSABLE(35,1228
# define MEM_CHECK_DEFINED(36,1307
# define MEM_UNDEFINED(38,1404
# define MEM_NOACCESS(39,1445
# define MEM_CHECK_ADDRESSABLE(40,1485
# define MEM_CHECK_DEFINED(41,1534
#define MY_INIT(53,1793
#define MYSYS_ERRMSG_SIZE 64,2251
#define MY_FILE_ERROR	66,2286
#define MY_FFNF	69,2360
#define MY_FNABP	70,2409
#define MY_NABP	71,2469
#define MY_FAE	72,2529
#define MY_WME	73,2572
#define MY_WAIT_IF_FULL 74,2620
#define MY_IGNORE_BADFD 75,2691
#define MY_SYNC_DIR 76,2769
#define MY_UNUSED 77,2847
#define MY_FULL_IO 78,2915
#define MY_DONT_CHECK_FILESIZE 79,2994
#define MY_LINK_WARNING 80,3061
#define MY_COPYTIME	81,3128
#define MY_DELETE_OLD	82,3179
#define MY_RESOLVE_LINK 83,3236
#define MY_HOLD_ORIGINAL_MODES 84,3304
#define MY_REDEL_MAKE_BACKUP 85,3376
#define MY_SEEK_NOT_DONE 86,3409
#define MY_DONT_WAIT	87,3473
#define MY_ZEROFILL	88,3538
#define MY_ALLOW_ZERO_PTR 89,3601
#define MY_FREE_ON_ERROR 90,3670
#define MY_HOLD_ON_ERROR 91,3742
#define MY_DONT_OVERWRITE_FILE 92,3816
#define MY_THREADSAFE 93,3888
#define MY_SYNC 94,3951
#define MY_CHECK_ERROR	96,4015
#define MY_GIVE_INFO	97,4081
#define MY_DONT_FREE_DBUG 98,4138
#define ME_HIGHBYTE	100,4212
#define ME_NOCUR	101,4258
#define ME_OLDWIN	102,4308
#define ME_BELL	103,4349
#define ME_HOLDTANG	104,4406
#define ME_WAITTOT	105,4457
#define ME_WAITTANG	106,4523
#define ME_NOREFRESH	107,4576
#define ME_NOINPUT	108,4643
#define ME_COLOUR1	109,4698
#define ME_COLOUR2	110,4767
#define ME_COLOUR3	111,4807
#define ME_FATALERROR 112,4847
#define MY_REPLACE_DIR	115,4950
#define MY_REPLACE_EXT	116,5013
#define MY_UNPACK_FILENAME	117,5074
#define MY_PACK_FILENAME	118,5133
#define MY_RESOLVE_SYMLINKS	119,5188
#define MY_RETURN_REAL_PATH	120,5252
#define MY_SAFE_PATH	121,5315
#define MY_RELATIVE_PATH	122,5375
#define MY_APPEND_EXT 123,5436
#define MY_SEEK_SET	127,5538
#define MY_SEEK_CUR	128,5560
#define MY_SEEK_END	129,5582
#define MY_WAIT_FOR_USER_TO_FIX_PANIC	132,5627
#define MY_WAIT_GIVE_USER_A_MESSAGE	133,5685
#define MIN_COMPRESS_LENGTH	134,5753
#define DFLT_INIT_HITS 135,5816
#define MY_KEEP_PREALLOC	138,5867
#define MY_MARK_BLOCKS_FREE 139,5894
#define MY_ERRNO_EDOM	142,6030
#define MY_ERRNO_ERANGE	143,6056
#define GETDATE_DATE_TIME	146,6119
#define GETDATE_SHORT_DATE	147,6147
#define GETDATE_HHMMSSTIME	148,6176
#define GETDATE_GMT	149,6205
#define GETDATE_FIXEDLENGTH	150,6228
#define TRASH(161,6692
#define DEBUG_SYNC_C(164,6868
#define DEBUG_SYNC_C(169,7109
#define my_get_large_page_size(177,7361
#define my_large_malloc(178,7398
#define my_large_free(179,7451
#undef alloca187,7661
#define alloca 188,7675
#define alloca 191,7792
#define my_alloca(193,7842
#define my_afree(194,7886
#define my_alloca(196,7917
#define my_afree(197,7965
#define MY_ALL_CHARSETS_SIZE 226,8974
enum loglevel 262,10318
   ERROR_LEVEL,263,10334
   WARNING_LEVEL,264,10350
   INFORMATION_LEVEL265,10368
enum cache_type268,10393
  TYPE_NOT_SET=270,10411
  TYPE_NOT_SET= 0, READ_CACHE,270,10411
  TYPE_NOT_SET= 0, READ_CACHE, WRITE_CACHE,270,10411
  SEQ_READ_APPEND	271,10455
  READ_FIFO,272,10507
  READ_FIFO, READ_NET,272,10507
  READ_FIFO, READ_NET,WRITE_NET}WRITE_NET272,10507
enum flush_type274,10542
  FLUSH_KEEP,276,10560
  FLUSH_RELEASE,277,10627
  FLUSH_IGNORE_CHANGED,278,10698
  FLUSH_FORCE_WRITE283,10882
typedef struct st_record_cache	286,10906
} RECORD_CACHE;298,11250
enum file_type300,11267
  UNOPEN 302,11284
  UNOPEN = 0, FILE_BY_OPEN,302,11284
  UNOPEN = 0, FILE_BY_OPEN, FILE_BY_CREATE,302,11284
  UNOPEN = 0, FILE_BY_OPEN, FILE_BY_CREATE, STREAM_BY_FOPEN,302,11284
  UNOPEN = 0, FILE_BY_OPEN, FILE_BY_CREATE, STREAM_BY_FOPEN, STREAM_BY_FDOPEN,302,11284
  FILE_BY_MKSTEMP,303,11363
  FILE_BY_MKSTEMP, FILE_BY_DUP303,11363
struct st_my_file_info306,11398
typedef struct st_dynamic_array321,11704
} DYNAMIC_ARRAY;327,11832
typedef struct st_my_tmpdir329,11850
} MY_TMPDIR;335,11962
typedef struct st_dynamic_string337,11976
} DYNAMIC_STRING;341,12068
typedef int (*IO_CACHE_CALLBACK)IO_CACHE_CALLBACK344,12107
typedef struct st_io_cache_share346,12163
} IO_CACHE_SHARE;364,13064
typedef struct st_io_cache	366,13083
} IO_CACHE;489,17812
typedef int (*qsort2_cmp)qsort2_cmp491,17825
#define my_b_clear(496,17958
#define my_b_inited(497,18000
#define my_b_EOF 498,18041
#define my_b_read(500,18067
#define my_b_write(506,18304
#define my_b_get(512,18559
#define my_b_write_byte(518,18760
#define my_b_fill_cache(523,18941
#define my_b_tell(526,19049
#define my_b_get_buffer_start(529,19158
#define my_b_get_bytes_in_buffer(530,19215
#define my_b_get_pos_in_file(532,19323
#define my_b_bytes_in_cache(539,19600
typedef uint32 ha_checksum;542,19699
typedef int (*Process_option_func)Process_option_func545,19807
#define my_access 603,22594
#define my_delete_allow_opened(612,22878
#define my_delete_allow_opened(614,22962
extern void my_printf_error(638,24074
#define my_print_open_files(658,25024
#define base_name(668,25422
#define flush_io_cache(743,29531
#define my_init_dynamic_array(759,30317
#define my_init_dynamic_array_ci(760,30390
#define my_init_dynamic_array2(761,30466
#define my_init_dynamic_array2_ci(762,30539
#define dynamic_array_ptr(779,31662
#define dynamic_element(780,31764
#define push_dynamic(781,31853
#define reset_dynamic(782,31903
#define sort_dynamic(783,31955
#define my_malloc_lock(800,32829
#define my_free_lock(801,32876
#define alloc_root_inited(803,32920
#define ALLOC_ROOT_MIN_BLOCK_SIZE 804,32972
#define clear_alloc_root(805,33047
#define MAP_NOSYNC 863,35904
#define MAP_NORESERVE 866,35959
#define my_mmap(870,36041
#define my_mmap(872,36099
#define my_munmap(874,36156
#define PROT_READ 878,36283
#define PROT_WRITE 879,36310
#define MAP_NORESERVE 880,36337
#define MAP_SHARED 881,36364
#define MAP_PRIVATE 882,36396
#define MAP_NOSYNC 883,36428
#define MAP_FAILED 884,36460
#define MS_SYNC 885,36498
#define HAVE_MMAP887,36531
#define my_getpagesize(894,36689
#define BACKSLASH_MBTAIL926,38043

include/my_time.h,2157
#define _my_time_h_22,842
typedef long my_time_t;39,1236
#define MY_TIME_T_MAX 41,1261
#define MY_TIME_T_MIN 42,1292
#define TIMESTAMP_MAX_YEAR 45,1353
#define TIMESTAMP_MIN_YEAR 46,1385
#define TIMESTAMP_MAX_VALUE 47,1438
#define TIMESTAMP_MIN_VALUE 48,1476
#define YY_PART_YEAR	51,1563
# define IS_TIME_T_VALID_FOR_TIMESTAMP(58,1740
# define IS_TIME_T_VALID_FOR_TIMESTAMP(62,1860
#define TIME_FUZZY_DATE	67,1976
#define TIME_DATETIME_ONLY	68,2003
#define TIME_NO_ZERO_IN_DATE 70,2075
#define TIME_NO_ZERO_DATE	72,2170
#define TIME_INVALID_DATES	73,2221
#define MYSQL_TIME_WARN_TRUNCATED 75,2271
#define MYSQL_TIME_WARN_OUT_OF_RANGE 76,2310
#define TIME_MAX_HOUR 79,2386
#define TIME_MAX_MINUTE 80,2412
#define TIME_MAX_SECOND 81,2439
#define TIME_MAX_VALUE 82,2466
#define TIME_MAX_VALUE_SECONDS 84,2577
static inline my_bool validate_timestamp_range(125,3947
#define MAX_DATE_STRING_REP_LENGTH 149,4844
enum interval_type171,5673
  INTERVAL_YEAR,173,5694
  INTERVAL_YEAR, INTERVAL_QUARTER,173,5694
  INTERVAL_YEAR, INTERVAL_QUARTER, INTERVAL_MONTH,173,5694
  INTERVAL_YEAR, INTERVAL_QUARTER, INTERVAL_MONTH, INTERVAL_WEEK,173,5694
  INTERVAL_YEAR, INTERVAL_QUARTER, INTERVAL_MONTH, INTERVAL_WEEK, INTERVAL_DAY,173,5694
  INTERVAL_HOUR,174,5774
  INTERVAL_HOUR, INTERVAL_MINUTE,174,5774
  INTERVAL_HOUR, INTERVAL_MINUTE, INTERVAL_SECOND,174,5774
  INTERVAL_HOUR, INTERVAL_MINUTE, INTERVAL_SECOND, INTERVAL_MICROSECOND,174,5774
  INTERVAL_YEAR_MONTH,175,5847
  INTERVAL_YEAR_MONTH, INTERVAL_DAY_HOUR,175,5847
  INTERVAL_YEAR_MONTH, INTERVAL_DAY_HOUR, INTERVAL_DAY_MINUTE,175,5847
  INTERVAL_DAY_SECOND,176,5910
  INTERVAL_DAY_SECOND, INTERVAL_HOUR_MINUTE,176,5910
  INTERVAL_DAY_SECOND, INTERVAL_HOUR_MINUTE, INTERVAL_HOUR_SECOND,176,5910
  INTERVAL_MINUTE_SECOND,177,5977
  INTERVAL_MINUTE_SECOND, INTERVAL_DAY_MICROSECOND,177,5977
  INTERVAL_MINUTE_SECOND, INTERVAL_DAY_MICROSECOND, INTERVAL_HOUR_MICROSECOND,177,5977
  INTERVAL_MINUTE_MICROSECOND,178,6056
  INTERVAL_MINUTE_MICROSECOND, INTERVAL_SECOND_MICROSECOND,178,6056
  INTERVAL_MINUTE_MICROSECOND, INTERVAL_SECOND_MICROSECOND, INTERVAL_LAST178,6056

include/my_tree.h,887
#define _tree_h17,761
#define MAX_TREE_HEIGHT	26,1000
#define ELEMENT_KEY(28,1028
#define tree_set_pointer(32,1164
#define TREE_NO_DUPS 34,1246
typedef enum { left_root_right,36,1270
typedef enum { left_root_right, right_root_left 36,1270
typedef enum { left_root_right, right_root_left } TREE_WALK;36,1270
typedef uint32 element_count;37,1331
typedef int (*tree_walk_action)tree_walk_action38,1361
typedef enum { free_init,40,1424
typedef enum { free_init, free_free,40,1424
typedef enum { free_init, free_free, free_end 40,1424
typedef enum { free_init, free_free, free_end } TREE_FREE;40,1424
typedef void (*tree_element_free)tree_element_free41,1483
typedef struct st_tree_element 43,1545
} TREE_ELEMENT;47,1677
#define ELEMENT_CHILD(49,1694
typedef struct st_tree 51,1775
} TREE;62,2091
#define is_tree_inited(72,2459
#define TREE_ELEMENT_EXTRA_SIZE 91,3428

include/my_uctype.h,3680
#define MY_UCTYPE_INCLUDED2,27
static unsigned char uctype_page00[uctype_page0024,885
static unsigned char uctype_page01[uctype_page0144,2023
static unsigned char uctype_page02[uctype_page0264,3109
static unsigned char uctype_page03[uctype_page0384,4195
static unsigned char uctype_page04[uctype_page04104,5281
static unsigned char uctype_page05[uctype_page05124,6367
static unsigned char uctype_page06[uctype_page06144,7453
static unsigned char uctype_page07[uctype_page07164,8539
static unsigned char uctype_page09[uctype_page09184,9625
static unsigned char uctype_page0A[uctype_page0A204,10711
static unsigned char uctype_page0B[uctype_page0B224,11797
static unsigned char uctype_page0C[uctype_page0C244,12883
static unsigned char uctype_page0D[uctype_page0D264,13969
static unsigned char uctype_page0E[uctype_page0E284,15055
static unsigned char uctype_page0F[uctype_page0F304,16141
static unsigned char uctype_page10[uctype_page10324,17227
static unsigned char uctype_page11[uctype_page11344,18313
static unsigned char uctype_page12[uctype_page12364,19399
static unsigned char uctype_page13[uctype_page13384,20485
static unsigned char uctype_page14[uctype_page14404,21571
static unsigned char uctype_page16[uctype_page16424,22657
static unsigned char uctype_page17[uctype_page17444,23743
static unsigned char uctype_page18[uctype_page18464,24829
static unsigned char uctype_page19[uctype_page19484,25915
static unsigned char uctype_page1A[uctype_page1A504,27001
static unsigned char uctype_page1B[uctype_page1B524,28087
static unsigned char uctype_page1D[uctype_page1D544,29173
static unsigned char uctype_page1E[uctype_page1E564,30259
static unsigned char uctype_page1F[uctype_page1F584,31345
static unsigned char uctype_page20[uctype_page20604,32431
static unsigned char uctype_page21[uctype_page21624,33517
static unsigned char uctype_page23[uctype_page23644,34603
static unsigned char uctype_page24[uctype_page24664,35689
static unsigned char uctype_page26[uctype_page26684,36775
static unsigned char uctype_page27[uctype_page27704,37861
static unsigned char uctype_page2B[uctype_page2B724,38947
static unsigned char uctype_page2C[uctype_page2C744,40033
static unsigned char uctype_page2D[uctype_page2D764,41119
static unsigned char uctype_page2E[uctype_page2E784,42205
static unsigned char uctype_page2F[uctype_page2F804,43291
static unsigned char uctype_page30[uctype_page30824,44377
static unsigned char uctype_page31[uctype_page31844,45463
static unsigned char uctype_page32[uctype_page32864,46549
static unsigned char uctype_page4D[uctype_page4D884,47635
static unsigned char uctype_page9F[uctype_page9F904,48721
static unsigned char uctype_pageA4[uctype_pageA4924,49807
static unsigned char uctype_pageA7[uctype_pageA7944,50893
static unsigned char uctype_pageA8[uctype_pageA8964,51979
static unsigned char uctype_pageD7[uctype_pageD7984,53065
static unsigned char uctype_pageD8[uctype_pageD81004,54151
static unsigned char uctype_pageDB[uctype_pageDB1024,55237
static unsigned char uctype_pageDC[uctype_pageDC1044,56323
static unsigned char uctype_pageDF[uctype_pageDF1064,57409
static unsigned char uctype_pageE0[uctype_pageE01084,58495
static unsigned char uctype_pageF8[uctype_pageF81104,59581
static unsigned char uctype_pageFA[uctype_pageFA1124,60667
static unsigned char uctype_pageFB[uctype_pageFB1144,61753
static unsigned char uctype_pageFD[uctype_pageFD1164,62839
static unsigned char uctype_pageFE[uctype_pageFE1184,63925
static unsigned char uctype_pageFF[uctype_pageFF1204,65011
MY_UNI_CTYPE my_uni_ctype[my_uni_ctype1224,66097

include/my_user.h,27
#define _my_user_h_23,874

include/my_xml.h,351
#define _my_xml_h19,780
#define MY_XML_OK	26,840
#define MY_XML_ERROR	27,860
#define MY_XML_FLAG_RELATIVE_NAMES 34,1068
#define MY_XML_FLAG_SKIP_TEXT_NORMALIZATION 41,1264
enum my_xml_node_type43,1311
  MY_XML_NODE_TAG,45,1335
  MY_XML_NODE_ATTR,46,1399
  MY_XML_NODE_TEXT 47,1463
typedef struct xml_stack_st50,1531
} MY_XML_PARSER;64,1962

include/myisam.h,2229
#define _myisam_h20,830
#define MI_MAX_KEY 42,1202
#define MI_MAX_KEY 44,1287
#define MI_MAX_POSSIBLE_KEY_BUFF 47,1374
#define MI_MAX_KEY_LENGTH 52,1575
#define MI_MAX_KEY_SEG 53,1653
#define MI_MAX_KEY_BUFF 55,1733
#define MI_MAX_MSG_BUF 56,1799
#define MI_NAME_IEXT	57,1872
#define MI_NAME_DEXT	58,1900
#define MI_KEY_BLOCK_LENGTH	61,1994
#define MI_MIN_KEY_BLOCK_LENGTH	62,2058
#define MI_MAX_KEY_BLOCK_LENGTH	63,2122
#define MI_KEYMAP_BITS 72,2447
#define MI_KEYMAP_HIGH_MASK 73,2498
#define mi_get_mask_all_keys_active(74,2559
#define mi_is_key_active(81,2806
#define mi_set_key_active(85,3056
#define mi_clear_key_active(89,3308
#define mi_is_key_active(96,3579
#define mi_set_key_active(98,3693
#define mi_clear_key_active(100,3802
#define mi_is_any_key_active(105,3926
#define mi_is_all_keys_active(107,4012
#define mi_set_all_keys_active(109,4141
#define mi_clear_all_keys_active(111,4267
#define mi_intersect_keys_active(113,4354
#define mi_is_any_intersect_keys_active(115,4448
#define mi_copy_keys_active(118,4643
typedef struct st_mi_isaminfo	124,4854
} MI_ISAMINFO;152,6010
typedef struct st_mi_create_info155,6027
} MI_CREATE_INFO;166,6333
typedef struct st_myisam_info MI_INFO;170,6422
typedef struct st_mi_keydef	173,6484
} MI_KEYDEF;204,8051
#define MI_UNIQUE_HASH_LENGTH	207,8066
typedef struct st_unique_def	209,8099
} MI_UNIQUEDEF;215,8303
typedef struct st_mi_decode_tree	217,8320
} MI_DECODE_TREE;222,8444
typedef struct st_columndef	233,8643
} MI_COLUMNDEF;248,9159
#define MEMMAP_EXTRA_MARGIN 308,12196
#define   MYISAMCHK_REPAIR 311,12332
#define   MYISAMCHK_VERIFY 312,12395
#define TT_USEFRM 319,12562
#define TT_FOR_UPGRADE 320,12596
#define O_NEW_INDEX	322,12631
#define O_NEW_DATA	323,12681
#define O_DATA_LOST	324,12702
typedef struct st_sort_key_blocks	328,12787
} SORT_KEY_BLOCKS;334,12949
  MI_STATS_METHOD_NULLS_NOT_EQUAL,346,13297
  MI_STATS_METHOD_NULLS_EQUAL,348,13403
  MI_STATS_METHOD_IGNORE_NULLS350,13513
} enum_mi_stats_method;351,13544
typedef struct st_mi_check_param353,13569
} MI_CHECK;394,14928
typedef struct st_sort_ft_buf396,14941
} SORT_FT_BUF;401,15042
typedef struct st_sort_info403,15058
} SORT_INFO;419,15458

include/myisammrg.h,360
#define _myisammrg_h20,872
#define MYRG_NAME_EXT	34,1047
#define MERGE_INSERT_DISABLED	37,1113
#define MERGE_INSERT_TO_FIRST	38,1145
#define MERGE_INSERT_TO_LAST	39,1177
typedef struct st_mymerge_info	45,1278
} MYMERGE_INFO;56,1805
typedef struct st_myrg_table_info58,1822
} MYRG_TABLE;62,1915
typedef struct st_myrg_info64,1930
} MYRG_INFO;80,2484

include/myisampack.h,1240
#define MYISAMPACK_INCLUDED2,28
#define mi_sint1korr(28,1011
#define mi_uint1korr(29,1048
#define mi_sint2korr(31,1087
#define mi_sint3korr(33,1232
#define mi_sint4korr(41,1791
#define mi_sint8korr(45,2082
#define mi_uint2korr(46,2135
#define mi_uint3korr(48,2277
#define mi_uint4korr(51,2498
#define mi_uint5korr(55,2796
#define mi_uint6korr(60,3180
#define mi_uint7korr(67,3680
#define mi_uint8korr(75,4258
#define mi_int1store(86,4947
#define mi_int2store(88,5002
#define mi_int3store(91,5207
#define mi_int4store(97,5591
#define mi_int5store(102,5949
#define mi_int6store(109,6441
#define mi_int7store(117,7009
#define mi_int8store(126,7654
#define mi_float4store(133,7952
#define mi_float4get(138,8226
#define mi_float8store(145,8621
#define mi_float8get(154,9167
#define mi_float4store(166,9870
#define mi_float4get(171,10144
#define mi_float8store(179,10611
#define mi_float8get(188,11156
#define mi_float8store(200,11858
#define mi_float8get(209,12403
#define mi_rowstore(225,13244
#define mi_rowkorr(226,13291
#define mi_rowstore(228,13341
#define mi_rowkorr(230,13461
#define mi_sizestore(234,13549
#define mi_sizekorr(235,13596
#define mi_sizestore(237,13646
#define mi_sizekorr(241,13894

include/mysql.h,4315
#define _mysql_h27,1133
#undef WIN34,1310
#undef _WIN35,1321
#undef _WIN3236,1333
#undef _WIN6437,1347
#undef __WIN__38,1361
typedef char my_bool;52,1593
#define __WIN__54,1677
#define STDCALL57,1722
#define STDCALL 59,1744
#define my_socket 64,1819
typedef int my_socket;66,1850
#define CLIENT_NET_READ_TIMEOUT	80,2158
#define CLIENT_NET_WRITE_TIMEOUT	81,2225
#define IS_PRI_KEY(83,2294
#define IS_NOT_NULL(84,2337
#define IS_BLOB(85,2382
#define IS_NUM(90,2543
#define IS_LONGDATA(91,2678
typedef struct st_mysql_field 94,2761
} MYSQL_FIELD;116,3834
typedef char **MYSQL_ROW;MYSQL_ROW118,3850
typedef unsigned int MYSQL_FIELD_OFFSET;119,3915
typedef unsigned long my_ulonglong;123,4038
typedef unsigned __int64 my_ulonglong;125,4098
typedef unsigned long long my_ulonglong;127,4143
#define MYSQL_COUNT_ERROR 133,4221
#define ER_WARN_DATA_TRUNCATED 136,4331
typedef struct st_mysql_rows 138,4383
} MYSQL_ROWS;142,4506
typedef MYSQL_ROWS *MYSQL_ROW_OFFSET;MYSQL_ROW_OFFSET144,4521
typedef struct embedded_query_result EMBEDDED_QUERY_RESULT;148,4611
typedef struct st_mysql_data 149,4671
} MYSQL_DATA;157,4890
enum mysql_option 159,4905
  MYSQL_OPT_CONNECT_TIMEOUT,161,4926
  MYSQL_OPT_CONNECT_TIMEOUT, MYSQL_OPT_COMPRESS,161,4926
  MYSQL_OPT_CONNECT_TIMEOUT, MYSQL_OPT_COMPRESS, MYSQL_OPT_NAMED_PIPE,161,4926
  MYSQL_INIT_COMMAND,162,4997
  MYSQL_INIT_COMMAND, MYSQL_READ_DEFAULT_FILE,162,4997
  MYSQL_INIT_COMMAND, MYSQL_READ_DEFAULT_FILE, MYSQL_READ_DEFAULT_GROUP,162,4997
  MYSQL_SET_CHARSET_DIR,163,5070
  MYSQL_SET_CHARSET_DIR, MYSQL_SET_CHARSET_NAME,163,5070
  MYSQL_SET_CHARSET_DIR, MYSQL_SET_CHARSET_NAME, MYSQL_OPT_LOCAL_INFILE,163,5070
  MYSQL_OPT_PROTOCOL,164,5143
  MYSQL_OPT_PROTOCOL, MYSQL_SHARED_MEMORY_BASE_NAME,164,5143
  MYSQL_OPT_PROTOCOL, MYSQL_SHARED_MEMORY_BASE_NAME, MYSQL_OPT_READ_TIMEOUT,164,5143
  MYSQL_OPT_WRITE_TIMEOUT,165,5220
  MYSQL_OPT_WRITE_TIMEOUT, MYSQL_OPT_USE_RESULT,165,5220
  MYSQL_OPT_USE_REMOTE_CONNECTION,166,5269
  MYSQL_OPT_USE_REMOTE_CONNECTION, MYSQL_OPT_USE_EMBEDDED_CONNECTION,166,5269
  MYSQL_OPT_GUESS_CONNECTION,167,5339
  MYSQL_OPT_GUESS_CONNECTION, MYSQL_SET_CLIENT_IP,167,5339
  MYSQL_OPT_GUESS_CONNECTION, MYSQL_SET_CLIENT_IP, MYSQL_SECURE_AUTH,167,5339
  MYSQL_REPORT_DATA_TRUNCATION,168,5409
  MYSQL_REPORT_DATA_TRUNCATION, MYSQL_OPT_RECONNECT,168,5409
  MYSQL_OPT_SSL_VERIFY_SERVER_CERT,169,5462
  MYSQL_OPT_SSL_VERIFY_SERVER_CERT, MYSQL_PLUGIN_DIR,169,5462
  MYSQL_OPT_SSL_VERIFY_SERVER_CERT, MYSQL_PLUGIN_DIR, MYSQL_DEFAULT_AUTH,169,5462
  MYSQL_ENABLE_CLEARTEXT_PLUGIN170,5536
struct st_mysql_options 179,5698
enum mysql_status 215,7028
  MYSQL_STATUS_READY,217,7049
  MYSQL_STATUS_READY, MYSQL_STATUS_GET_RESULT,217,7049
  MYSQL_STATUS_READY, MYSQL_STATUS_GET_RESULT, MYSQL_STATUS_USE_RESULT,217,7049
  MYSQL_STATUS_STATEMENT_GET_RESULT218,7121
enum mysql_protocol_type 221,7161
  MYSQL_PROTOCOL_DEFAULT,223,7189
  MYSQL_PROTOCOL_DEFAULT, MYSQL_PROTOCOL_TCP,223,7189
  MYSQL_PROTOCOL_DEFAULT, MYSQL_PROTOCOL_TCP, MYSQL_PROTOCOL_SOCKET,223,7189
  MYSQL_PROTOCOL_PIPE,224,7258
  MYSQL_PROTOCOL_PIPE, MYSQL_PROTOCOL_MEMORY224,7258
typedef struct character_set227,7307
} MY_CHARSET_INFO;237,7914
typedef struct st_mysql242,7982
} MYSQL;284,9493
typedef struct st_mysql_res 287,9504
} MYSQL_RES;303,10112
#define MYSQL_CLIENT307,10180
typedef struct st_mysql_parameters311,10210
} MYSQL_PARAMETERS;316,10343
#define max_allowed_packet 319,10421
#define net_buffer_length 320,10496
#define mysql_library_init 340,11387
#define mysql_library_end 341,11432
#define LOCAL_INFILE_ERROR_LEN 408,14166
enum enum_mysql_stmt_state479,17221
  MYSQL_STMT_INIT_DONE=481,17250
  MYSQL_STMT_INIT_DONE= 1, MYSQL_STMT_PREPARE_DONE,481,17250
  MYSQL_STMT_INIT_DONE= 1, MYSQL_STMT_PREPARE_DONE, MYSQL_STMT_EXECUTE_DONE,481,17250
  MYSQL_STMT_FETCH_DONE482,17327
typedef struct st_mysql_bind549,20677
} MYSQL_BIND;574,22018
typedef struct st_mysql_stmt580,22091
} MYSQL_STMT;625,24358
enum enum_stmt_attr_type627,24373
  STMT_ATTR_UPDATE_MAX_LENGTH,636,24700
  STMT_ATTR_CURSOR_TYPE,641,24825
  STMT_ATTR_PREFETCH_ROWS646,24998
#define MYSQL_NO_DATA 699,27746
#define MYSQL_DATA_TRUNCATED 700,27779
#define mysql_reload(702,27813
#define HAVE_MYSQL_REAL_CONNECT710,28141

include/mysql_com.h,10258
#define _mysql_com_h21,824
#define HOSTNAME_LENGTH 23,846
#define SYSTEM_CHARSET_MBMAXLEN 24,873
#define NAME_CHAR_LEN	25,907
#define USERNAME_CHAR_LENGTH 26,975
#define NAME_LEN 27,1007
#define USERNAME_LENGTH 28,1079
#define MYSQL_AUTODETECT_CHARSET_NAME 30,1159
#define SERVER_VERSION_LENGTH 32,1205
#define SQLSTATE_LENGTH 33,1238
#define TABLE_COMMENT_INLINE_MAXLEN 38,1300
#define TABLE_COMMENT_MAXLEN 39,1369
#define COLUMN_COMMENT_MAXLEN 40,1403
#define INDEX_COMMENT_MAXLEN 41,1438
#define USER_HOST_BUFF_SIZE 49,1689
#define LOCAL_HOST	51,1756
#define LOCAL_HOST_NAMEDPIPE 52,1787
#define MYSQL_NAMEDPIPE 56,1872
#define MYSQL_SERVICENAME 57,1904
enum enum_server_command65,2093
  COM_SLEEP,67,2120
  COM_SLEEP, COM_QUIT,67,2120
  COM_SLEEP, COM_QUIT, COM_INIT_DB,67,2120
  COM_SLEEP, COM_QUIT, COM_INIT_DB, COM_QUERY,67,2120
  COM_SLEEP, COM_QUIT, COM_INIT_DB, COM_QUERY, COM_FIELD_LIST,67,2120
  COM_CREATE_DB,68,2183
  COM_CREATE_DB, COM_DROP_DB,68,2183
  COM_CREATE_DB, COM_DROP_DB, COM_REFRESH,68,2183
  COM_CREATE_DB, COM_DROP_DB, COM_REFRESH, COM_SHUTDOWN,68,2183
  COM_CREATE_DB, COM_DROP_DB, COM_REFRESH, COM_SHUTDOWN, COM_STATISTICS,68,2183
  COM_PROCESS_INFO,69,2256
  COM_PROCESS_INFO, COM_CONNECT,69,2256
  COM_PROCESS_INFO, COM_CONNECT, COM_PROCESS_KILL,69,2256
  COM_PROCESS_INFO, COM_CONNECT, COM_PROCESS_KILL, COM_DEBUG,69,2256
  COM_PROCESS_INFO, COM_CONNECT, COM_PROCESS_KILL, COM_DEBUG, COM_PING,69,2256
  COM_TIME,70,2328
  COM_TIME, COM_DELAYED_INSERT,70,2328
  COM_TIME, COM_DELAYED_INSERT, COM_CHANGE_USER,70,2328
  COM_TIME, COM_DELAYED_INSERT, COM_CHANGE_USER, COM_BINLOG_DUMP,70,2328
  COM_TABLE_DUMP,71,2394
  COM_TABLE_DUMP, COM_CONNECT_OUT,71,2394
  COM_TABLE_DUMP, COM_CONNECT_OUT, COM_REGISTER_SLAVE,71,2394
  COM_STMT_PREPARE,72,2449
  COM_STMT_PREPARE, COM_STMT_EXECUTE,72,2449
  COM_STMT_PREPARE, COM_STMT_EXECUTE, COM_STMT_SEND_LONG_DATA,72,2449
  COM_STMT_PREPARE, COM_STMT_EXECUTE, COM_STMT_SEND_LONG_DATA, COM_STMT_CLOSE,72,2449
  COM_STMT_RESET,73,2528
  COM_STMT_RESET, COM_SET_OPTION,73,2528
  COM_STMT_RESET, COM_SET_OPTION, COM_STMT_FETCH,73,2528
  COM_STMT_RESET, COM_SET_OPTION, COM_STMT_FETCH, COM_DAEMON,73,2528
  COM_END77,2686
#define SCRAMBLE_LENGTH 85,2829
#define SCRAMBLE_LENGTH_323 86,2856
#define SCRAMBLED_PASSWORD_CHAR_LENGTH 88,2966
#define SCRAMBLED_PASSWORD_CHAR_LENGTH_323 89,3027
#define NOT_NULL_FLAG	92,3096
#define PRI_KEY_FLAG	93,3147
#define UNIQUE_KEY_FLAG 94,3208
#define MULTIPLE_KEY_FLAG 95,3271
#define BLOB_FLAG	96,3329
#define UNSIGNED_FLAG	97,3373
#define ZEROFILL_FLAG	98,3423
#define BINARY_FLAG	99,3473
#define ENUM_FLAG	102,3572
#define AUTO_INCREMENT_FLAG 103,3618
#define TIMESTAMP_FLAG	104,3688
#define SET_FLAG	105,3744
#define NO_DEFAULT_VALUE_FLAG 106,3788
#define ON_UPDATE_NOW_FLAG 107,3862
#define NUM_FLAG	108,3938
#define PART_KEY_FLAG	109,3995
#define GROUP_FLAG	110,4055
#define UNIQUE_FLAG	111,4107
#define BINCMP_FLAG	112,4165
#define GET_FIXED_FIELDS_FLAG 113,4224
#define FIELD_IN_PART_FUNC_FLAG 114,4302
#define FIELD_IN_ADD_INDEX 115,4378
#define FIELD_IS_RENAMED 116,4452
#define FIELD_FLAGS_STORAGE_MEDIA 117,4529
#define FIELD_FLAGS_COLUMN_FORMAT 119,4676
#define FIELD_IS_DROPPED 121,4823
#define REFRESH_GRANT	123,4901
#define REFRESH_LOG	124,4953
#define REFRESH_TABLES	125,5004
#define REFRESH_HOSTS	126,5053
#define REFRESH_STATUS	127,5101
#define REFRESH_THREADS	128,5157
#define REFRESH_SLAVE 129,5210
#define REFRESH_MASTER 131,5307
#define REFRESH_ERROR_LOG 133,5417
#define REFRESH_ENGINE_LOG 134,5485
#define REFRESH_BINARY_LOG 135,5557
#define REFRESH_RELAY_LOG 136,5620
#define REFRESH_GENERAL_LOG 137,5682
#define REFRESH_SLOW_LOG 138,5746
#define REFRESH_READ_LOCK	141,5868
#define REFRESH_FAST	142,5927
#define REFRESH_QUERY_CACHE	145,6024
#define REFRESH_QUERY_CACHE_FREE 146,6058
#define REFRESH_DES_KEY_FILE	147,6123
#define REFRESH_USER_RESOURCES	148,6161
#define CLIENT_LONG_PASSWORD	150,6202
#define CLIENT_FOUND_ROWS	151,6265
#define CLIENT_LONG_FLAG	152,6330
#define CLIENT_CONNECT_WITH_DB	153,6384
#define CLIENT_NO_SCHEMA	154,6453
#define CLIENT_COMPRESS	155,6521
#define CLIENT_ODBC	156,6584
#define CLIENT_LOCAL_FILES	157,6626
#define CLIENT_IGNORE_SPACE	158,6687
#define CLIENT_PROTOCOL_41	159,6750
#define CLIENT_INTERACTIVE	160,6804
#define CLIENT_SSL 161,6872
#define CLIENT_IGNORE_SIGPIPE 162,6945
#define CLIENT_TRANSACTIONS	163,7007
#define CLIENT_RESERVED 164,7078
#define CLIENT_SECURE_CONNECTION 165,7151
#define CLIENT_MULTI_STATEMENTS 166,7220
#define CLIENT_MULTI_RESULTS 167,7304
#define CLIENT_PS_MULTI_RESULTS 168,7383
#define CLIENT_PLUGIN_AUTH 170,7463
#define CLIENT_SSL_VERIFY_SERVER_CERT 172,7548
#define CLIENT_REMEMBER_OPTIONS 173,7598
#define CAN_CLIENT_COMPRESS 176,7664
#define CAN_CLIENT_COMPRESS 178,7714
#define CLIENT_ALL_FLAGS 182,7822
#define CLIENT_BASIC_FLAGS 210,9159
#define SERVER_STATUS_IN_TRANS 221,9586
#define SERVER_STATUS_AUTOCOMMIT 222,9623
#define SERVER_MORE_RESULTS_EXISTS 223,9693
#define SERVER_QUERY_NO_GOOD_INDEX_USED 224,9771
#define SERVER_QUERY_NO_INDEX_USED 225,9814
#define SERVER_STATUS_CURSOR_EXISTS 231,10053
#define SERVER_STATUS_LAST_ROW_SENT 236,10195
#define SERVER_STATUS_DB_DROPPED 237,10235
#define SERVER_STATUS_NO_BACKSLASH_ESCAPES 238,10308
#define SERVER_STATUS_METADATA_CHANGED 244,10515
#define SERVER_QUERY_WAS_SLOW 245,10559
#define SERVER_PS_OUT_PARAMS 250,10667
#define SERVER_STATUS_CLEAR_SET 260,11015
#define MYSQL_ERRMSG_SIZE	269,11519
#define NET_READ_TIMEOUT	270,11549
#define NET_WRITE_TIMEOUT	271,11600
#define NET_WAIT_TIMEOUT	272,11653
#define ONLY_KILL_QUERY 274,11713
typedef struct st_vio Vio;278,11781
#define MAX_TINYINT_WIDTH 280,11809
#define MAX_SMALLINT_WIDTH 281,11886
#define MAX_MEDIUMINT_WIDTH 282,11964
#define MAX_INT_WIDTH 283,12042
#define MAX_BIGINT_WIDTH 284,12119
#define MAX_CHAR_WIDTH	285,12190
#define MAX_BLOB_WIDTH	286,12252
typedef struct st_net 288,12315
} NET;338,14290
#define packet_error 341,14299
enum enum_field_types 343,14342
enum enum_field_types { MYSQL_TYPE_DECIMAL,343,14342
enum enum_field_types { MYSQL_TYPE_DECIMAL, MYSQL_TYPE_TINY,343,14342
			MYSQL_TYPE_SHORT,344,14403
			MYSQL_TYPE_SHORT,  MYSQL_TYPE_LONG,344,14403
			MYSQL_TYPE_FLOAT,345,14442
			MYSQL_TYPE_FLOAT,  MYSQL_TYPE_DOUBLE,345,14442
			MYSQL_TYPE_NULL,346,14483
			MYSQL_TYPE_NULL,   MYSQL_TYPE_TIMESTAMP,346,14483
			MYSQL_TYPE_LONGLONG,347,14527
			MYSQL_TYPE_LONGLONG,MYSQL_TYPE_INT24,347,14527
			MYSQL_TYPE_DATE,348,14568
			MYSQL_TYPE_DATE,   MYSQL_TYPE_TIME,348,14568
			MYSQL_TYPE_DATETIME,349,14607
			MYSQL_TYPE_DATETIME, MYSQL_TYPE_YEAR,349,14607
			MYSQL_TYPE_NEWDATE,350,14648
			MYSQL_TYPE_NEWDATE, MYSQL_TYPE_VARCHAR,350,14648
			MYSQL_TYPE_BIT,351,14691
                        MYSQL_TYPE_NEWDECIMAL=352,14710
			MYSQL_TYPE_ENUM=353,14761
			MYSQL_TYPE_SET=354,14785
			MYSQL_TYPE_TINY_BLOB=355,14808
			MYSQL_TYPE_MEDIUM_BLOB=356,14837
			MYSQL_TYPE_LONG_BLOB=357,14868
			MYSQL_TYPE_BLOB=358,14897
			MYSQL_TYPE_VAR_STRING=359,14921
			MYSQL_TYPE_STRING=360,14951
			MYSQL_TYPE_GEOMETRY=361,14977
#define CLIENT_MULTI_QUERIES 366,15042
#define FIELD_TYPE_DECIMAL 367,15102
#define FIELD_TYPE_NEWDECIMAL 368,15152
#define FIELD_TYPE_TINY 369,15205
#define FIELD_TYPE_SHORT 370,15252
#define FIELD_TYPE_LONG 371,15300
#define FIELD_TYPE_FLOAT 372,15347
#define FIELD_TYPE_DOUBLE 373,15395
#define FIELD_TYPE_NULL 374,15444
#define FIELD_TYPE_TIMESTAMP 375,15491
#define FIELD_TYPE_LONGLONG 376,15543
#define FIELD_TYPE_INT24 377,15594
#define FIELD_TYPE_DATE 378,15642
#define FIELD_TYPE_TIME 379,15689
#define FIELD_TYPE_DATETIME 380,15736
#define FIELD_TYPE_YEAR 381,15787
#define FIELD_TYPE_NEWDATE 382,15834
#define FIELD_TYPE_ENUM 383,15884
#define FIELD_TYPE_SET 384,15931
#define FIELD_TYPE_TINY_BLOB 385,15977
#define FIELD_TYPE_MEDIUM_BLOB 386,16029
#define FIELD_TYPE_LONG_BLOB 387,16083
#define FIELD_TYPE_BLOB 388,16135
#define FIELD_TYPE_VAR_STRING 389,16182
#define FIELD_TYPE_STRING 390,16235
#define FIELD_TYPE_CHAR 391,16284
#define FIELD_TYPE_INTERVAL 392,16331
#define FIELD_TYPE_GEOMETRY 393,16378
#define FIELD_TYPE_BIT 394,16429
#define MYSQL_SHUTDOWN_KILLABLE_CONNECT 400,16549
#define MYSQL_SHUTDOWN_KILLABLE_TRANS 401,16616
#define MYSQL_SHUTDOWN_KILLABLE_LOCK_TABLE 402,16683
#define MYSQL_SHUTDOWN_KILLABLE_UPDATE 403,16750
enum mysql_enum_shutdown_level 405,16818
  SHUTDOWN_DEFAULT 411,17030
  SHUTDOWN_WAIT_CONNECTIONS=413,17102
  SHUTDOWN_WAIT_CONNECTIONS= MYSQL_SHUTDOWN_KILLABLE_CONNECT,413,17102
  SHUTDOWN_WAIT_TRANSACTIONS=415,17206
  SHUTDOWN_WAIT_TRANSACTIONS= MYSQL_SHUTDOWN_KILLABLE_TRANS,415,17206
  SHUTDOWN_WAIT_UPDATES=417,17341
  SHUTDOWN_WAIT_UPDATES= MYSQL_SHUTDOWN_KILLABLE_UPDATE,417,17341
  SHUTDOWN_WAIT_ALL_BUFFERS=419,17461
  SHUTDOWN_WAIT_ALL_BUFFERS= (MYSQL_SHUTDOWN_KILLABLE_UPDATE 419,17461
  SHUTDOWN_WAIT_CRITICAL_BUFFERS=421,17601
  SHUTDOWN_WAIT_CRITICAL_BUFFERS= (MYSQL_SHUTDOWN_KILLABLE_UPDATE 421,17601
  KILL_QUERY=424,17753
  KILL_CONNECTION=426,17779
enum enum_cursor_type430,17807
  CURSOR_TYPE_NO_CURSOR=432,17831
  CURSOR_TYPE_READ_ONLY=433,17859
  CURSOR_TYPE_FOR_UPDATE=434,17887
  CURSOR_TYPE_SCROLLABLE=435,17916
enum enum_mysql_set_option440,17984
  MYSQL_OPTION_MULTI_STATEMENTS_ON,442,18013
  MYSQL_OPTION_MULTI_STATEMENTS_OFF443,18049
#define net_new_transaction(446,18089
struct rand_struct 474,19003
enum Item_result 485,19173
enum Item_result {STRING_RESULT=STRING_RESULT485,19173
enum Item_result {STRING_RESULT=0, REAL_RESULT,485,19173
enum Item_result {STRING_RESULT=0, REAL_RESULT, INT_RESULT,485,19173
enum Item_result {STRING_RESULT=0, REAL_RESULT, INT_RESULT, ROW_RESULT,485,19173
                  DECIMAL_RESULT}DECIMAL_RESULT486,19245
typedef struct st_udf_args488,19281
} UDF_ARGS;498,19756
typedef struct st_udf_init502,19818
} UDF_INIT;510,20196
#define NET_HEADER_SIZE 517,20350
#define COMP_HEADER_SIZE 518,20404
#define NULL_LENGTH 572,22286
#define MYSQL_STMT_HEADER 573,22354
#define MYSQL_LONG_DATA_HEADER 574,22388
#define NOT_FIXED_DEC 576,22423

include/mysql_embed.h,88
#define MYSQL_EMBED_INCLUDED2,29
#undef HAVE_DLOPEN	26,1032
#undef HAVE_SMEM	27,1077

include/mysql_time.h,398
#define _mysql_time_h_18,745
enum enum_mysql_timestamp_type29,1121
  MYSQL_TIMESTAMP_NONE=31,1154
  MYSQL_TIMESTAMP_NONE= -2, MYSQL_TIMESTAMP_ERROR=31,1154
  MYSQL_TIMESTAMP_DATE=32,1209
  MYSQL_TIMESTAMP_DATE= 0, MYSQL_TIMESTAMP_DATETIME=32,1209
  MYSQL_TIMESTAMP_DATE= 0, MYSQL_TIMESTAMP_DATETIME= 1, MYSQL_TIMESTAMP_TIME=32,1209
typedef struct st_mysql_time48,1919
} MYSQL_TIME;54,2100

include/mysys_err.h,1649
#define _mysys_err_h17,766
#define GLOBERRS 23,828
#define EE(24,908
#define EE_ERROR_FIRST 36,1258
#define EE_CANTCREATEFILE	37,1317
#define EE_READ	38,1345
#define EE_WRITE	39,1365
#define EE_BADCLOSE	40,1385
#define EE_OUTOFMEMORY	41,1408
#define EE_DELETE	42,1434
#define EE_LINK	43,1455
#define EE_EOFERR	44,1475
#define EE_CANTLOCK	45,1496
#define EE_CANTUNLOCK	46,1520
#define EE_DIR	47,1546
#define EE_STAT	48,1566
#define EE_CANT_CHSIZE	49,1587
#define EE_CANT_OPEN_STREAM	50,1614
#define EE_GETWD	51,1645
#define EE_SETWD	52,1666
#define EE_LINK_WARNING	53,1687
#define EE_OPEN_WARNING	54,1715
#define EE_DISK_FULL	55,1743
#define EE_CANT_MKDIR	56,1768
#define EE_UNKNOWN_CHARSET	57,1794
#define EE_OUT_OF_FILERESOURCES	58,1824
#define EE_CANT_READLINK	59,1859
#define EE_CANT_SYMLINK	60,1887
#define EE_REALPATH	61,1915
#define EE_SYNC	62,1939
#define EE_UNKNOWN_COLLATION	63,1960
#define EE_FILENOTFOUND	64,1992
#define EE_FILE_NOT_CLOSED	65,2020
#define EE_CHANGE_OWNERSHIP 66,2050
#define EE_CHANGE_PERMISSIONS 67,2085
#define EE_CANT_SEEK 68,2120
#define EE_ERROR_LAST 69,2155
#define EXIT_UNSPECIFIED_ERROR	74,2331
#define EXIT_UNKNOWN_OPTION	75,2365
#define EXIT_AMBIGUOUS_OPTION	76,2396
#define EXIT_NO_ARGUMENT_ALLOWED	77,2429
#define EXIT_ARGUMENT_REQUIRED	78,2464
#define EXIT_VAR_PREFIX_NOT_UNIQUE	79,2498
#define EXIT_UNKNOWN_VARIABLE	80,2535
#define EXIT_OUT_OF_MEMORY	81,2568
#define EXIT_UNKNOWN_SUFFIX	82,2598
#define EXIT_NO_PTR_TO_VARIABLE	83,2629
#define EXIT_CANNOT_CONNECT_TO_SERVICE	84,2665
#define EXIT_OPTION_DISABLED 85,2707
#define EXIT_ARGUMENT_INVALID 86,2750

include/password.h,33
#define PASSWORD_INCLUDED17,772

include/probes_mysql.h,30
#define PROBES_MYSQL_H19,770

include/probes_mysql_nodtrace.h,4928
#define	_PROBES_MYSQL_D6,61
#define	MYSQL_CONNECTION_START(12,126
#define	MYSQL_CONNECTION_START_ENABLED(13,175
#define	MYSQL_CONNECTION_DONE(14,220
#define	MYSQL_CONNECTION_DONE_ENABLED(15,262
#define	MYSQL_COMMAND_START(16,306
#define	MYSQL_COMMAND_START_ENABLED(17,358
#define	MYSQL_COMMAND_DONE(18,400
#define	MYSQL_COMMAND_DONE_ENABLED(19,433
#define	MYSQL_QUERY_START(20,474
#define	MYSQL_QUERY_START_ENABLED(21,530
#define	MYSQL_QUERY_DONE(22,570
#define	MYSQL_QUERY_DONE_ENABLED(23,601
#define	MYSQL_QUERY_PARSE_START(24,640
#define	MYSQL_QUERY_PARSE_START_ENABLED(25,678
#define	MYSQL_QUERY_PARSE_DONE(26,724
#define	MYSQL_QUERY_PARSE_DONE_ENABLED(27,761
#define	MYSQL_QUERY_CACHE_HIT(28,806
#define	MYSQL_QUERY_CACHE_HIT_ENABLED(29,848
#define	MYSQL_QUERY_CACHE_MISS(30,892
#define	MYSQL_QUERY_CACHE_MISS_ENABLED(31,929
#define	MYSQL_QUERY_EXEC_START(32,974
#define	MYSQL_QUERY_EXEC_START_ENABLED(33,1041
#define	MYSQL_QUERY_EXEC_DONE(34,1086
#define	MYSQL_QUERY_EXEC_DONE_ENABLED(35,1122
#define	MYSQL_INSERT_ROW_START(36,1166
#define	MYSQL_INSERT_ROW_START_ENABLED(37,1209
#define	MYSQL_INSERT_ROW_DONE(38,1254
#define	MYSQL_INSERT_ROW_DONE_ENABLED(39,1290
#define	MYSQL_UPDATE_ROW_START(40,1334
#define	MYSQL_UPDATE_ROW_START_ENABLED(41,1377
#define	MYSQL_UPDATE_ROW_DONE(42,1422
#define	MYSQL_UPDATE_ROW_DONE_ENABLED(43,1458
#define	MYSQL_DELETE_ROW_START(44,1502
#define	MYSQL_DELETE_ROW_START_ENABLED(45,1545
#define	MYSQL_DELETE_ROW_DONE(46,1590
#define	MYSQL_DELETE_ROW_DONE_ENABLED(47,1626
#define	MYSQL_READ_ROW_START(48,1670
#define	MYSQL_READ_ROW_START_ENABLED(49,1717
#define	MYSQL_READ_ROW_DONE(50,1760
#define	MYSQL_READ_ROW_DONE_ENABLED(51,1794
#define	MYSQL_INDEX_READ_ROW_START(52,1836
#define	MYSQL_INDEX_READ_ROW_START_ENABLED(53,1883
#define	MYSQL_INDEX_READ_ROW_DONE(54,1932
#define	MYSQL_INDEX_READ_ROW_DONE_ENABLED(55,1972
#define	MYSQL_HANDLER_RDLOCK_START(56,2020
#define	MYSQL_HANDLER_RDLOCK_START_ENABLED(57,2067
#define	MYSQL_HANDLER_WRLOCK_START(58,2116
#define	MYSQL_HANDLER_WRLOCK_START_ENABLED(59,2163
#define	MYSQL_HANDLER_UNLOCK_START(60,2212
#define	MYSQL_HANDLER_UNLOCK_START_ENABLED(61,2259
#define	MYSQL_HANDLER_RDLOCK_DONE(62,2308
#define	MYSQL_HANDLER_RDLOCK_DONE_ENABLED(63,2348
#define	MYSQL_HANDLER_WRLOCK_DONE(64,2396
#define	MYSQL_HANDLER_WRLOCK_DONE_ENABLED(65,2436
#define	MYSQL_HANDLER_UNLOCK_DONE(66,2484
#define	MYSQL_HANDLER_UNLOCK_DONE_ENABLED(67,2524
#define	MYSQL_FILESORT_START(68,2572
#define	MYSQL_FILESORT_START_ENABLED(69,2613
#define	MYSQL_FILESORT_DONE(70,2656
#define	MYSQL_FILESORT_DONE_ENABLED(71,2696
#define	MYSQL_SELECT_START(72,2738
#define	MYSQL_SELECT_START_ENABLED(73,2771
#define	MYSQL_SELECT_DONE(74,2812
#define	MYSQL_SELECT_DONE_ENABLED(75,2850
#define	MYSQL_INSERT_START(76,2890
#define	MYSQL_INSERT_START_ENABLED(77,2923
#define	MYSQL_INSERT_DONE(78,2964
#define	MYSQL_INSERT_DONE_ENABLED(79,3002
#define	MYSQL_INSERT_SELECT_START(80,3042
#define	MYSQL_INSERT_SELECT_START_ENABLED(81,3082
#define	MYSQL_INSERT_SELECT_DONE(82,3130
#define	MYSQL_INSERT_SELECT_DONE_ENABLED(83,3175
#define	MYSQL_UPDATE_START(84,3222
#define	MYSQL_UPDATE_START_ENABLED(85,3255
#define	MYSQL_UPDATE_DONE(86,3296
#define	MYSQL_UPDATE_DONE_ENABLED(87,3340
#define	MYSQL_MULTI_UPDATE_START(88,3380
#define	MYSQL_MULTI_UPDATE_START_ENABLED(89,3419
#define	MYSQL_MULTI_UPDATE_DONE(90,3466
#define	MYSQL_MULTI_UPDATE_DONE_ENABLED(91,3516
#define	MYSQL_DELETE_START(92,3562
#define	MYSQL_DELETE_START_ENABLED(93,3595
#define	MYSQL_DELETE_DONE(94,3636
#define	MYSQL_DELETE_DONE_ENABLED(95,3674
#define	MYSQL_MULTI_DELETE_START(96,3714
#define	MYSQL_MULTI_DELETE_START_ENABLED(97,3753
#define	MYSQL_MULTI_DELETE_DONE(98,3800
#define	MYSQL_MULTI_DELETE_DONE_ENABLED(99,3844
#define	MYSQL_NET_READ_START(100,3890
#define	MYSQL_NET_READ_START_ENABLED(101,3921
#define	MYSQL_NET_READ_DONE(102,3964
#define	MYSQL_NET_READ_DONE_ENABLED(103,4004
#define	MYSQL_NET_WRITE_START(104,4046
#define	MYSQL_NET_WRITE_START_ENABLED(105,4082
#define	MYSQL_NET_WRITE_DONE(106,4126
#define	MYSQL_NET_WRITE_DONE_ENABLED(107,4161
#define	MYSQL_KEYCACHE_READ_START(108,4204
#define	MYSQL_KEYCACHE_READ_START_ENABLED(109,4262
#define	MYSQL_KEYCACHE_READ_BLOCK(110,4310
#define	MYSQL_KEYCACHE_READ_BLOCK_ENABLED(111,4350
#define	MYSQL_KEYCACHE_READ_HIT(112,4398
#define	MYSQL_KEYCACHE_READ_HIT_ENABLED(113,4432
#define	MYSQL_KEYCACHE_READ_MISS(114,4478
#define	MYSQL_KEYCACHE_READ_MISS_ENABLED(115,4513
#define	MYSQL_KEYCACHE_READ_DONE(116,4560
#define	MYSQL_KEYCACHE_READ_DONE_ENABLED(117,4605
#define	MYSQL_KEYCACHE_WRITE_START(118,4652
#define	MYSQL_KEYCACHE_WRITE_START_ENABLED(119,4711
#define	MYSQL_KEYCACHE_WRITE_BLOCK(120,4760
#define	MYSQL_KEYCACHE_WRITE_BLOCK_ENABLED(121,4801
#define	MYSQL_KEYCACHE_WRITE_DONE(122,4850
#define	MYSQL_KEYCACHE_WRITE_DONE_ENABLED(123,4896

include/queues.h,414
#define _queues_h24,929
typedef struct st_queue 32,1049
} QUEUE;41,1347
#define queue_top(43,1357
#define queue_element(44,1401
#define queue_end(45,1461
#define queue_replaced(46,1521
#define queue_set_cmp_arg(47,1570
#define queue_set_max_at_top(48,1644
typedef int (*queue_compare)queue_compare50,1731
#define queue_remove_all(66,2492
#define queue_is_full(67,2550
#define is_queue_inited(70,2689

include/rijndael.h,112
#define RIJNDAEL_INCLUDED2,26
#define AES_MAXKC	34,1210
#define AES_MAXKB	35,1237
#define AES_MAXNR	36,1263

include/service_versions.h,211
#define SERVICE_VERSION 17,759
#define SERVICE_VERSION 19,818
#define VERSION_my_snprintf 22,857
#define VERSION_thd_alloc 23,896
#define VERSION_thd_wait 24,935
#define VERSION_my_thread_scheduler 25,974

include/sha1.h,249
#define SHA1_INCLUDED2,22
enum sha_result_codes68,2808
  SHA_SUCCESS 70,2832
  SHA_NULL,71,2851
  SHA_INPUT_TOO_LONG,72,2893
  SHA_STATE_ERROR	73,2941
#define SHA1_HASH_SIZE 76,2995
typedef struct SHA1_CONTEXT83,3135
} SHA1_CONTEXT;91,3526

include/sha2.h,259
#define included_sha2_h17,749
#define SHA512_DIGEST_LENGTH 39,1094
#define SHA384_DIGEST_LENGTH 43,1190
#define SHA256_DIGEST_LENGTH 47,1286
#define SHA224_DIGEST_LENGTH 51,1382
#define GEN_YASSL_SHA2_BRIDGE(54,1449
#undef GEN_YASSL_SHA2_BRIDGE63,1724

include/sql_common.h,268
#define SQL_COMMON_INCLUDED2,28
#define SQL_COMMON_INCLUDED19,811
struct st_mysql_options_extention 31,1019
typedef struct st_mysql_methods37,1136
} MYSQL_METHODS;66,2369
#define simple_command(68,2387
#define stmt_command(71,2589
#define protocol_41(114,4456

include/sslopt-case.h,82
#define SSLOPT_CASE_INCLUDED2,29
      opt_use_ssl=29,1108
      break;30,1130

include/sslopt-longopts.h,1094
#define SSLOPT_LONGOPTS_INCLUDED2,33
  {"ssl", OPT_SSL_SSL,21,869
   &opt_use_ssl,opt_use_ssl23,966
   &opt_use_ssl, &opt_use_ssl,opt_use_ssl23,966
   &opt_use_ssl, &opt_use_ssl, 0, GET_BOOL,23,966
   &opt_use_ssl, &opt_use_ssl, 0, GET_BOOL, OPT_ARG,23,966
  {"ssl-capath", OPT_SSL_CAPATH,28,1205
   &opt_ssl_capath,opt_ssl_capath30,1294
   &opt_ssl_capath, &opt_ssl_capath,opt_ssl_capath30,1294
   &opt_ssl_capath, &opt_ssl_capath, 0, GET_STR,30,1294
   &opt_ssl_capath, &opt_ssl_capath, 0, GET_STR, REQUIRED_ARG,30,1294
  {"ssl-cipher", OPT_SSL_CIPHER,35,1533
   &opt_ssl_cipher,opt_ssl_cipher36,1604
   &opt_ssl_cipher, &opt_ssl_cipher,opt_ssl_cipher36,1604
   &opt_ssl_cipher, &opt_ssl_cipher, 0, GET_STR,36,1604
   &opt_ssl_cipher, &opt_ssl_cipher, 0, GET_STR, REQUIRED_ARG,36,1604
  {"ssl-verify-server-cert", OPT_SSL_VERIFY_SERVER_CERT,42,1858
   &opt_ssl_verify_server_cert,opt_ssl_verify_server_cert45,2046
   &opt_ssl_verify_server_cert, &opt_ssl_verify_server_cert,opt_ssl_verify_server_cert45,2046
   0, GET_BOOL,46,2107
   0, GET_BOOL, OPT_ARG,46,2107

include/sslopt-vars.h,442
#define SSLOPT_VARS_INCLUDED2,29
#define SSL_STATIC21,887
#define SSL_STATIC 23,912
SSL_STATIC my_bool opt_use_ssl 25,945
SSL_STATIC char *opt_ssl_ca opt_ssl_ca26,982
SSL_STATIC char *opt_ssl_capath opt_ssl_capath27,1019
SSL_STATIC char *opt_ssl_cert opt_ssl_cert28,1056
SSL_STATIC char *opt_ssl_cipher opt_ssl_cipher29,1093
SSL_STATIC char *opt_ssl_key opt_ssl_key30,1130
SSL_STATIC my_bool opt_ssl_verify_server_cert=32,1187

include/t_ctype.h,5059
#define _t_ctype_h30,1306
#define TOT_LEVELS 32,1326
#define LAST_LEVEL 33,1347
#define IGNORE 35,1391
enum l1_symbols 39,1440
    L1_08 40,1458
    L1_08 = TOT_LEVELS,40,1458
    L1_18,41,1482
    L1_28,42,1493
    L1_38,43,1504
    L1_48,44,1515
    L1_58,45,1526
    L1_68,46,1537
    L1_78,47,1548
    L1_88,48,1559
    L1_98,49,1570
    L1_A8,50,1581
    L1_B8,51,1592
    L1_C8,52,1603
    L1_D8,53,1614
    L1_E8,54,1625
    L1_F8,55,1636
    L1_G8,56,1647
    L1_H8,57,1658
    L1_I8,58,1669
    L1_J8,59,1680
    L1_K8,60,1691
    L1_L8,61,1702
    L1_M8,62,1713
    L1_N8,63,1724
    L1_O8,64,1735
    L1_P8,65,1746
    L1_Q8,66,1757
    L1_R8,67,1768
    L1_S8,68,1779
    L1_T8,69,1790
    L1_U8,70,1801
    L1_V8,71,1812
    L1_W8,72,1823
    L1_X8,73,1834
    L1_Y8,74,1845
    L1_Z8,75,1856
    L1_KO_KAI,76,1867
    L1_KHO_KHAI,77,1882
    L1_KHO_KHUAT,78,1899
    L1_KHO_KHWAI,79,1917
    L1_KHO_KHON,80,1935
    L1_KHO_RAKHANG,81,1952
    L1_NGO_NGU,82,1972
    L1_CHO_CHAN,83,1988
    L1_CHO_CHING,84,2005
    L1_CHO_CHANG,85,2023
    L1_SO_SO,86,2041
    L1_CHO_CHOE,87,2055
    L1_YO_YING,88,2072
    L1_DO_CHADA,89,2088
    L1_TO_PATAK,90,2105
    L1_THO_THAN,91,2122
    L1_THO_NANGMONTHO,92,2139
    L1_THO_PHUTHAO,93,2162
    L1_NO_NEN,94,2182
    L1_DO_DEK,95,2197
    L1_TO_TAO,96,2212
    L1_THO_THUNG,97,2227
    L1_THO_THAHAN,98,2245
    L1_THO_THONG,99,2264
    L1_NO_NU,100,2282
    L1_BO_BAIMAI,101,2296
    L1_PO_PLA,102,2314
    L1_PHO_PHUNG,103,2329
    L1_FO_FA,104,2347
    L1_PHO_PHAN,105,2361
    L1_FO_FAN,106,2378
    L1_PHO_SAMPHAO,107,2393
    L1_MO_MA,108,2413
    L1_YO_YAK,109,2427
    L1_RO_RUA,110,2442
    L1_RU,111,2457
    L1_LO_LING,112,2468
    L1_LU,113,2484
    L1_WO_WAEN,114,2495
    L1_SO_SALA,115,2511
    L1_SO_RUSI,116,2527
    L1_SO_SUA,117,2543
    L1_HO_HIP,118,2558
    L1_LO_CHULA,119,2573
    L1_O_ANG,120,2590
    L1_HO_NOKHUK,121,2604
    L1_NKHIT,122,2622
    L1_SARA_A,123,2636
    L1_MAI_HAN_AKAT,124,2651
    L1_SARA_AA,125,2672
    L1_SARA_AM,126,2688
    L1_SARA_I,127,2704
    L1_SARA_II,128,2719
    L1_SARA_UE,129,2735
    L1_SARA_UEE,130,2751
    L1_SARA_U,131,2768
    L1_SARA_UU,132,2783
    L1_SARA_E,133,2799
    L1_SARA_AE,134,2814
    L1_SARA_O,135,2830
    L1_SARA_AI_MAIMUAN,136,2845
    L1_SARA_AI_MAIMALAI137,2869
enum l2_symbols 141,2927
    L2_BLANK 142,2945
    L2_BLANK = TOT_LEVELS,142,2945
    L2_THAII,143,2972
    L2_YAMAK,144,2986
    L2_PINTHU,145,3000
    L2_GARAN,146,3015
    L2_TYKHU,147,3029
    L2_TONE1,148,3043
    L2_TONE2,149,3057
    L2_TONE3,150,3071
    L2_TONE4151,3085
enum l3_symbols 155,3132
	L3_BLANK 156,3150
	L3_BLANK = TOT_LEVELS,156,3150
    L3_SPACE,157,3174
    L3_NB_SACE,158,3188
    L3_LOW_LINE,159,3204
    L3_HYPHEN,160,3221
    L3_COMMA,161,3236
    L3_SEMICOLON,162,3250
    L3_COLON,163,3268
    L3_EXCLAMATION,164,3282
    L3_QUESTION,165,3302
    L3_SOLIDUS,166,3319
    L3_FULL_STOP,167,3335
    L3_PAIYAN_NOI,168,3353
    L3_MAI_YAMOK,169,3372
    L3_GRAVE,170,3390
    L3_CIRCUMFLEX,171,3404
    L3_TILDE,172,3423
    L3_APOSTROPHE,173,3437
    L3_QUOTATION,174,3456
    L3_L_PARANTHESIS,175,3474
    L3_L_BRACKET,176,3496
    L3_L_BRACE,177,3514
    L3_R_BRACE,178,3530
    L3_R_BRACKET,179,3546
    L3_R_PARENTHESIS,180,3564
    L3_AT,181,3586
    L3_BAHT,182,3597
    L3_DOLLAR,183,3610
    L3_FONGMAN,184,3625
    L3_ANGKHANKHU,185,3641
    L3_KHOMUT,186,3660
    L3_ASTERISK,187,3675
    L3_BK_SOLIDUS,188,3692
    L3_AMPERSAND,189,3711
    L3_NUMBER,190,3729
    L3_PERCENT,191,3744
    L3_PLUS,192,3760
    L3_LESS_THAN,193,3773
    L3_EQUAL,194,3791
    L3_GREATER_THAN,195,3805
    L3_V_LINE196,3826
enum l4_symbols 200,3874
    L4_BLANK 201,3892
    L4_BLANK = TOT_LEVELS,201,3892
    L4_MIN,202,3919
    L4_CAP,203,3931
    L4_EXT204,3943
enum level_symbols 207,3958
    L_UPRUPR 208,3979
    L_UPRUPR = TOT_LEVELS,208,3979
    L_UPPER,209,4006
    L_MIDDLE,210,4019
    L_LOWER211,4033
#define	_is(214,4049
#define _level	215,4093
#define _consnt	216,4112
#define _ldvowel	217,4133
#define _fllwvowel	218,4154
#define _uprvowel	219,4177
#define _lwrvowel	220,4200
#define _tone	221,4223
#define _diacrt1	222,4243
#define _diacrt2	223,4266
#define _combine	224,4289
#define _stone	225,4312
#define _tdig	226,4334
#define _rearvowel	227,4356
#define _diacrt	228,4413
#define levelof(229,4453
#define isthai(230,4493
#define istalpha(231,4527
#define isconsnt(233,4642
#define isldvowel(234,4684
#define isfllwvowel(235,4727
#define ismidvowel(236,4774
#define isuprvowel(237,4831
#define islwrvowel(238,4876
#define isuprlwrvowel(239,4921
#define isrearvowel(240,4982
#define isvowel(241,5029
#define istone(242,5088
#define isunldable(243,5131
#define iscombinable(244,5205
#define istdigit(245,5251
#define isstone(246,5294
#define isdiacrt1(247,5338
#define isdiacrt2(248,5380
#define isdiacrt(249,5422

include/thr_alarm.h,978
#define _thr_alarm_h19,823
#define USE_ONE_SIGNAL_HAND	25,909
#undef USE_ONE_SIGNAL_HAND28,1003
#define USE_ALARM_THREAD29,1030
#define THR_SERVER_ALARM 30,1055
#define THR_SERVER_ALARM 32,1094
typedef struct st_alarm_info35,1135
} ALARM_INFO;40,1237
#define USE_ALARM_THREAD46,1325
#undef USE_ONE_SIGNAL_HAND47,1350
typedef my_bool thr_alarm_t;49,1378
typedef my_bool ALARM;50,1407
#define thr_alarm_init(52,1431
#define thr_alarm_in_use(53,1466
#define thr_end_alarm(54,1506
#define thr_alarm(55,1531
#define thr_got_alarm(57,1612
#define init_thr_alarm(58,1639
#define thr_alarm_kill(59,1665
#define resize_thr_alarm(60,1691
#define end_thr_alarm(61,1719
typedef struct st_thr_alarm_entry65,1772
} thr_alarm_entry;68,1826
typedef int thr_alarm_entry;72,1885
#define thr_got_alarm(74,1915
typedef thr_alarm_entry* thr_alarm_t;78,1987
typedef struct st_alarm 80,2026
} ALARM;86,2195
#define thr_alarm_init(91,2267
#define thr_alarm_in_use(92,2302

include/thr_lock.h,1096
#define _thr_lock_h19,796
enum thr_lock_type 34,1112
enum thr_lock_type { TL_IGNORE=34,1112
		     TL_UNLOCK,35,1147
                     TL_READ_DEFAULT,43,1568
		     TL_READ,44,1606
		     TL_READ_WITH_SHARED_LOCKS,45,1640
		     TL_READ_HIGH_PRIORITY,47,1738
		     TL_READ_NO_INSERT,49,1817
		     TL_WRITE_ALLOW_WRITE,55,2009
		     TL_WRITE_CONCURRENT_INSERT,60,2176
		     TL_WRITE_DELAYED,62,2273
                     TL_WRITE_DEFAULT,67,2488
		     TL_WRITE_LOW_PRIORITY,69,2588
		     TL_WRITE,71,2649
		     TL_WRITE_ONLY}TL_WRITE_ONLY73,2716
enum enum_thr_lock_result 75,2740
enum enum_thr_lock_result { THR_LOCK_SUCCESS=75,2740
enum enum_thr_lock_result { THR_LOCK_SUCCESS= 0, THR_LOCK_ABORTED=75,2740
                            THR_LOCK_WAIT_TIMEOUT=76,2810
                            THR_LOCK_WAIT_TIMEOUT= 2, THR_LOCK_DEADLOCK=76,2810
typedef struct st_thr_lock_info88,3167
} THR_LOCK_INFO;92,3247
typedef struct st_thr_lock_data 95,3266
} THR_LOCK_DATA;104,3551
struct st_lock_list 106,3569
typedef struct st_thr_lock 110,3625
} THR_LOCK;125,4213

include/typelib.h,267
#define _typelib_h18,770
typedef struct st_typelib 22,813
} TYPELIB;27,1018
#define FIND_TYPE_BASIC 32,1223
#define FIND_TYPE_NO_PREFIX 34,1321
#define FIND_TYPE_NO_OVERWRITE 36,1429
#define FIND_TYPE_ALLOW_NUMBER 38,1515
#define FIND_TYPE_COMMA_TERM 40,1609

include/violite.h,1935
#define	vio_violite_h_22,853
typedef struct st_vio Vio;34,1095
enum enum_vio_type37,1148
  VIO_CLOSED,39,1169
  VIO_CLOSED, VIO_TYPE_TCPIP,39,1169
  VIO_CLOSED, VIO_TYPE_TCPIP, VIO_TYPE_SOCKET,39,1169
  VIO_CLOSED, VIO_TYPE_TCPIP, VIO_TYPE_SOCKET, VIO_TYPE_NAMEDPIPE,39,1169
  VIO_TYPE_SSL,40,1236
  VIO_TYPE_SSL, VIO_TYPE_SHARED_MEMORY40,1236
#define VIO_LOCALHOST 44,1280
#define VIO_BUFFERED_READ 45,1357
#define VIO_READ_BUFFER_SIZE 46,1429
#define HANDLE 59,2028
#define DES_cblock 109,4026
#define DES_key_schedule 110,4056
#define DES_set_key_unchecked(111,4098
#define DES_ede3_cbc_encrypt(112,4167
#define HEADER_DES_LOCL_H 115,4286
#define YASSL_MYSQL_COMPATIBLE116,4328
#define YASSL_PREFIX118,4380
typedef my_socket YASSL_SOCKET_T;121,4472
#define YASSL_SOCKET_T_DEFINED122,4506
enum enum_ssl_init_error127,4613
  SSL_INITERR_NOERROR=129,4640
  SSL_INITERR_NOERROR= 0, SSL_INITERR_CERT,129,4640
  SSL_INITERR_NOERROR= 0, SSL_INITERR_CERT, SSL_INITERR_KEY,129,4640
  SSL_INITERR_NOMATCH,130,4702
  SSL_INITERR_NOMATCH, SSL_INITERR_BAD_PATHS,130,4702
  SSL_INITERR_NOMATCH, SSL_INITERR_BAD_PATHS, SSL_INITERR_CIPHERS,130,4702
  SSL_INITERR_MEMFAIL,131,4770
  SSL_INITERR_MEMFAIL, SSL_INITERR_LASTERR131,4770
struct st_VioSSLFd135,4876
#define vio_delete(162,5677
#define vio_errno(163,5726
#define vio_read(164,5774
#define vio_write(165,5850
#define vio_blocking(166,5929
#define vio_is_blocking(168,6040
#define vio_fastsend(169,6096
#define vio_keepalive(170,6145
#define vio_should_retry(171,6229
#define vio_was_interrupted(172,6287
#define vio_close(173,6350
#define vio_peer_addr(174,6399
#define vio_timeout(175,6484
#define vio_poll_read(176,6561
#define vio_is_connected(177,6640
enum SSL_type181,6817
  SSL_TYPE_NOT_SPECIFIED=183,6833
  SSL_TYPE_NONE,184,6863
  SSL_TYPE_ANY,185,6880
  SSL_TYPE_X509,186,6896
  SSL_TYPE_SPECIFIED187,6913
struct st_vio193,7066

include/welcome_copyright_notice.h,138
#define _welcome_copyright_notice_h_17,782
#define COPYRIGHT_NOTICE_CURRENT_YEAR 19,820
#define ORACLE_WELCOME_COPYRIGHT_NOTICE(25,986

libmysql/client_settings.h,77
#define CLIENT_SETTINGS_INCLUDED17,787
#define CLIENT_CAPABILITIES 30,1183

libmysqld/emb_qcache.h,162
class Querycache_stream18,826
  Querycache_stream(Querycache_stream::Querycache_stream29,1024
  void use_next_block(Querycache_stream::use_next_block39,1328

libmysqld/embedded_priv.h,60
typedef struct embedded_query_result29,1188
} EQR;39,1491

libmysqld/resource.h,159
#define _APS_NEXT_RESOURCE_VALUE 10,205
#define _APS_NEXT_COMMAND_VALUE 11,249
#define _APS_NEXT_CONTROL_VALUE 12,295
#define _APS_NEXT_SYMED_VALUE 13,340

mysys/my_handler_errors.h,119
#define MYSYS_MY_HANDLER_ERRORS_INCLUDED2,41
static const char *handler_error_messages[handler_error_messages23,868

mysys/my_static.h,94
#define MYSYS_MY_STATIC_INCLUDED2,33
#define MAX_SIGNALS	27,947
struct st_remember 29,1009

mysys/mysys_priv.h,24
#define EDQUOT 75,2562

regex/cclass.h,423
#define CCLASS_ALNUM	3,29
#define CCLASS_ALPHA	4,52
#define CCLASS_BLANK	5,75
#define CCLASS_CNTRL	6,98
#define CCLASS_DIGIT	7,121
#define CCLASS_GRAPH	8,144
#define CCLASS_LOWER	9,167
#define CCLASS_PRINT	10,190
#define CCLASS_PUNCT	11,213
#define CCLASS_SPACE	12,236
#define CCLASS_UPPER	13,259
#define CCLASS_XDIGIT	14,283
#define CCLASS_LAST	15,308
extern struct cclass 17,332
} cclasses[cclasses22,428

regex/cname.h,48
static struct cname 2,27
} cnames[cnames5,88

regex/my_regex.h,1084
#define	_REGEX_H_	2,18
typedef __int64 regoff_t;12,211
typedef off_t regoff_t;14,243
} my_regex_t;23,574
} my_regmatch_t;27,681
typedef int (*my_regex_stack_check_t)my_regex_stack_check_t31,724
#define	REG_BASIC	33,847
#define	REG_EXTENDED	34,870
#define	REG_ICASE	35,896
#define	REG_NOSUB	36,919
#define	REG_NEWLINE	37,942
#define	REG_NOSPEC	38,967
#define	REG_PEND	39,991
#define	REG_DUMP	40,1013
#define	REG_NOMATCH	44,1062
#define	REG_BADPAT	45,1085
#define	REG_ECOLLATE	46,1107
#define	REG_ECTYPE	47,1131
#define	REG_EESCAPE	48,1153
#define	REG_ESUBREG	49,1176
#define	REG_EBRACK	50,1199
#define	REG_EPAREN	51,1221
#define	REG_EBRACE	52,1243
#define	REG_BADBR	53,1265
#define	REG_ERANGE	54,1286
#define	REG_ESPACE	55,1308
#define	REG_BADRPT	56,1330
#define	REG_EMPTY	57,1352
#define	REG_ASSERT	58,1373
#define	REG_INVARG	59,1395
#define	REG_ATOI	60,1417
#define	REG_ITOA	61,1471
#define	REG_NOTBOL	67,1708
#define	REG_NOTEOL	68,1733
#define	REG_STARTEND	69,1758
#define	REG_TRACE	70,1785
#define	REG_LARGE	71,1836
#define	REG_BACKR	72,1893

regex/regex2.h,1129
#define __regex2_h__19,489
#define	MAGIC1	21,511
typedef unsigned long sop;42,1496
typedef long sopno;43,1544
#define	OPRMASK	44,1564
#define	OPDMASK	45,1591
#define	OPSHIFT	46,1618
#define	OP(47,1654
#define	OPND(48,1700
#define	SOP(49,1748
#define OSHIFT(50,1800
#define	OEND	53,1925
#define	OCHAR	54,1968
#define	OBOL	55,2023
#define	OEOL	56,2068
#define	OANY	57,2114
#define	OANYOF	58,2150
#define	OBACK_	59,2199
#define	O_BACK	60,2253
#define	OPLUS_	61,2305
#define	O_PLUS	62,2360
#define	OQUEST_	63,2417
#define	O_QUEST	64,2474
#define	OLPAREN	65,2532
#define	ORPAREN	66,2578
#define	OCH_	67,2625
#define	OOR1	68,2681
#define	OOR2	69,2740
#define	O_CH	70,2798
#define	OBOW	71,2853
#define	OEOW	72,2898
} cset;94,3710
#define	CHadd(96,3789
#define	CHsub(97,3871
#define	CHIN(98,3953
#define	MCadd(99,4008
#define	MCsub(100,4079
#define	MCin(101,4121
typedef unsigned char cat_t;104,4199
struct re_guts 109,4274
#		define	MAGIC2	111,4303
#		define	USEBOL	122,4799
#		define	USEEOL	123,4832
#		define	BAD	124,4865
#undef OUT	139,5389
#define	OUT	140,5434
#define	ISWORD(141,5487

regex/utils.h,168
#define	DUPMAX	3,52
#define DUPMAX	5,118
#define	RE_INFINITY	7,145
#define	NC	8,178
typedef unsigned char uch;9,216
#define	NDEBUG	14,338
#define	memmove(21,483

sql/authors.h,143
#define AUTHORS_INCLUDED2,25
struct show_table_authors_st 21,831
struct show_table_authors_st show_table_authors[show_table_authors39,1194

sql/client_settings.h,277
#define CLIENT_SETTINGS_INCLUDED18,788
#define CLIENT_CAPABILITIES 31,1180
#define read_user_name(39,1562
#undef HAVE_SMEM40,1591
#undef _CUSTOMCONFIG_41,1608
#define mysql_server_init(43,1631
#define mysql_server_end(44,1691
#define slave_io_thread_detach_vio(51,1843

sql/contributors.h,168
#define CONTRIBUTORS_INCLUDED2,30
struct show_table_contributors_st 22,857
struct show_table_contributors_st show_table_contributors[show_table_contributors38,1135

sql/custom_conf.h,176
#define __MYSQL_CUSTOM_BUILD_CONFIG__17,739
#define MYSQL_PORT	19,778
#define MYSQL_NAMEDPIPE	21,818
#define MYSQL_SERVICENAME	22,857
#define KEY_SERVICE_PARAMETERS23,897

sql/datadict.h,127
#define DATADICT_INCLUDED2,26
enum frm_type_enum24,843
  FRMTYPE_ERROR=26,864
  FRMTYPE_TABLE,27,884
  FRMTYPE_VIEW28,901

sql/debug_sync.h,138
#define DEBUG_SYNC_INCLUDED2,28
#define DEBUG_SYNC(36,1130
#define DEBUG_SYNC_DEFAULT_WAIT_TIMEOUT 45,1579
#define DEBUG_SYNC(57,2035

sql/derror.h,31
#define DERROR_INCLUDED17,770

sql/des_key_file.h,100
#define DES_KEY_FILE_INCLUDED17,776
struct st_des_keyblock24,925
struct st_des_keyschedule29,985

sql/discover.h,33
#define DISCOVER_INCLUDED17,772

sql/event_data_objects.h,298
#define _EVENT_DATA_OBJECTS_H_2,31
class Event_queue_element_for_exec33,1035
  Event_queue_element_for_exec(Event_queue_element_for_exec::Event_queue_element_for_exec36,1080
class Event_basic54,1436
class Event_queue_element 83,1851
class Event_timed 119,2422
class Event_job_data 154,2986

sql/event_db_repository.h,878
#define _EVENT_DB_REPOSITORY_H_2,32
enum enum_events_table_field34,1131
  ET_FIELD_DB 36,1162
  ET_FIELD_NAME,37,1182
  ET_FIELD_BODY,38,1199
  ET_FIELD_DEFINER,39,1216
  ET_FIELD_EXECUTE_AT,40,1236
  ET_FIELD_INTERVAL_EXPR,41,1259
  ET_FIELD_TRANSIENT_INTERVAL,42,1285
  ET_FIELD_CREATED,43,1316
  ET_FIELD_MODIFIED,44,1336
  ET_FIELD_LAST_EXECUTED,45,1357
  ET_FIELD_STARTS,46,1383
  ET_FIELD_ENDS,47,1402
  ET_FIELD_STATUS,48,1419
  ET_FIELD_ON_COMPLETION,49,1438
  ET_FIELD_SQL_MODE,50,1464
  ET_FIELD_COMMENT,51,1485
  ET_FIELD_ORIGINATOR,52,1505
  ET_FIELD_TIME_ZONE,53,1528
  ET_FIELD_CHARACTER_SET_CLIENT,54,1550
  ET_FIELD_COLLATION_CONNECTION,55,1583
  ET_FIELD_DB_COLLATION,56,1616
  ET_FIELD_BODY_UTF8,57,1641
  ET_FIELD_COUNT 58,1663
class Event_db_repository73,1980
  Event_db_repository(Event_db_repository::Event_db_repository76,2016

sql/event_parse_data.h,830
#define _EVENT_PARSE_DATA_H_18,777
#define EVEX_GET_FIELD_FAILED 26,911
#define EVEX_BAD_PARAMS 27,946
#define EVEX_MICROSECOND_UNSUP 28,981
#define EVEX_MAX_INTERVAL_VALUE 29,1016
class Event_parse_data 31,1061
  enum enum_statusEvent_parse_data::enum_status39,1275
    ENABLED Event_parse_data::enum_status::ENABLED41,1298
    DISABLED,Event_parse_data::enum_status::DISABLED42,1315
    SLAVESIDE_DISABLED Event_parse_data::enum_status::SLAVESIDE_DISABLED43,1329
  enum enum_on_completionEvent_parse_data::enum_on_completion46,1360
    ON_COMPLETION_DEFAULT Event_parse_data::enum_on_completion::ON_COMPLETION_DEFAULT52,1515
    ON_COMPLETION_DROP,Event_parse_data::enum_on_completion::ON_COMPLETION_DROP53,1546
    ON_COMPLETION_PRESERVEEvent_parse_data::enum_on_completion::ON_COMPLETION_PRESERVE54,1570

sql/event_queue.h,55
#define _EVENT_QUEUE_H_2,24
class Event_queue47,1385

sql/event_scheduler.h,380
#define _EVENT_SCHEDULER_H_2,28
class Event_worker_thread51,1366
  init(Event_worker_thread::init55,1416
class Event_scheduler71,1687
  enum enum_stateEvent_scheduler::enum_state122,2561
    INITIALIZED Event_scheduler::enum_state::INITIALIZED124,2583
    RUNNING,Event_scheduler::enum_state::RUNNING125,2604
    STOPPINGEvent_scheduler::enum_state::STOPPING126,2617

sql/events.h,599
#define _EVENT_H_2,18
typedef class Item COND;43,1443
typedef struct charset_info_st CHARSET_INFO;44,1468
class Events70,2320
  enum enum_opt_event_scheduler Events::enum_opt_event_scheduler78,2499
  enum enum_opt_event_scheduler { EVENTS_OFF,Events::enum_opt_event_scheduler::EVENTS_OFF78,2499
  enum enum_opt_event_scheduler { EVENTS_OFF, EVENTS_ON,Events::enum_opt_event_scheduler::EVENTS_ON78,2499
  enum enum_opt_event_scheduler { EVENTS_OFF, EVENTS_ON, EVENTS_DISABLED Events::enum_opt_event_scheduler::EVENTS_DISABLED78,2499
  get_db_repository(Events::get_db_repository88,2858

sql/field.h,30736
#define FIELD_INCLUDED2,23
#define DATETIME_DEC 34,1342
enum enum_check_fields42,1476
  CHECK_FIELD_IGNORE,enum_check_fields::CHECK_FIELD_IGNORE44,1501
  CHECK_FIELD_WARN,enum_check_fields::CHECK_FIELD_WARN45,1523
  CHECK_FIELD_ERROR_FOR_NULLenum_check_fields::CHECK_FIELD_ERROR_FOR_NULL46,1543
enum Derivation50,1577
  DERIVATION_IGNORABLE=Derivation::DERIVATION_IGNORABLE52,1595
  DERIVATION_NUMERIC=Derivation::DERIVATION_NUMERIC53,1622
  DERIVATION_COERCIBLE=Derivation::DERIVATION_COERCIBLE54,1647
  DERIVATION_SYSCONST=Derivation::DERIVATION_SYSCONST55,1674
  DERIVATION_IMPLICIT=Derivation::DERIVATION_IMPLICIT56,1700
  DERIVATION_NONE=Derivation::DERIVATION_NONE57,1726
  DERIVATION_EXPLICIT=Derivation::DERIVATION_EXPLICIT58,1748
#define STORAGE_TYPE_MASK 61,1777
#define COLUMN_FORMAT_MASK 62,1805
#define COLUMN_FORMAT_SHIFT 63,1834
#define my_charset_numeric 65,1865
#define MY_REPERTOIRE_NUMERIC 66,1915
inline uint get_enum_pack_length(71,2031
inline uint get_set_pack_length(76,2116
class Field82,2227
  static void *operator new(Field::operator new87,2329
  static void operator delete(Field::operator delete89,2409
  enum utype Field::utype116,3667
  enum utype  { NONE,Field::utype::NONE116,3667
  enum utype  { NONE,DATE,Field::utype::DATE116,3667
  enum utype  { NONE,DATE,SHIELD,Field::utype::SHIELD116,3667
  enum utype  { NONE,DATE,SHIELD,NOEMPTY,Field::utype::NOEMPTY116,3667
  enum utype  { NONE,DATE,SHIELD,NOEMPTY,CASEUP,Field::utype::CASEUP116,3667
  enum utype  { NONE,DATE,SHIELD,NOEMPTY,CASEUP,PNR,Field::utype::PNR116,3667
  enum utype  { NONE,DATE,SHIELD,NOEMPTY,CASEUP,PNR,BGNR,Field::utype::BGNR116,3667
  enum utype  { NONE,DATE,SHIELD,NOEMPTY,CASEUP,PNR,BGNR,PGNR,Field::utype::PGNR116,3667
  enum utype  { NONE,DATE,SHIELD,NOEMPTY,CASEUP,PNR,BGNR,PGNR,YES,Field::utype::YES116,3667
  enum utype  { NONE,DATE,SHIELD,NOEMPTY,CASEUP,PNR,BGNR,PGNR,YES,NO,Field::utype::NO116,3667
  enum utype  { NONE,DATE,SHIELD,NOEMPTY,CASEUP,PNR,BGNR,PGNR,YES,NO,REL,Field::utype::REL116,3667
		CHECK,Field::utype::CHECK117,3741
		CHECK,EMPTY,Field::utype::EMPTY117,3741
		CHECK,EMPTY,UNKNOWN_FIELD,Field::utype::UNKNOWN_FIELD117,3741
		CHECK,EMPTY,UNKNOWN_FIELD,CASEDN,Field::utype::CASEDN117,3741
		CHECK,EMPTY,UNKNOWN_FIELD,CASEDN,NEXT_NUMBER,Field::utype::NEXT_NUMBER117,3741
		CHECK,EMPTY,UNKNOWN_FIELD,CASEDN,NEXT_NUMBER,INTERVAL_FIELD,Field::utype::INTERVAL_FIELD117,3741
                BIT_FIELD,Field::utype::BIT_FIELD118,3804
                BIT_FIELD, TIMESTAMP_OLD_FIELD,Field::utype::TIMESTAMP_OLD_FIELD118,3804
                BIT_FIELD, TIMESTAMP_OLD_FIELD, CAPITALIZE,Field::utype::CAPITALIZE118,3804
                BIT_FIELD, TIMESTAMP_OLD_FIELD, CAPITALIZE, BLOB_FIELD,Field::utype::BLOB_FIELD118,3804
                TIMESTAMP_DN_FIELD,Field::utype::TIMESTAMP_DN_FIELD119,3876
                TIMESTAMP_DN_FIELD, TIMESTAMP_UN_FIELD,Field::utype::TIMESTAMP_UN_FIELD119,3876
                TIMESTAMP_DN_FIELD, TIMESTAMP_UN_FIELD, TIMESTAMP_DNUN_FIELD}Field::utype::TIMESTAMP_DNUN_FIELD119,3876
  enum geometry_typeField::geometry_type120,3955
    GEOM_GEOMETRY Field::geometry_type::GEOM_GEOMETRY122,3980
    GEOM_GEOMETRY = 0, GEOM_POINT Field::geometry_type::GEOM_POINT122,3980
    GEOM_GEOMETRY = 0, GEOM_POINT = 1, GEOM_LINESTRING Field::geometry_type::GEOM_LINESTRING122,3980
    GEOM_GEOMETRY = 0, GEOM_POINT = 1, GEOM_LINESTRING = 2, GEOM_POLYGON Field::geometry_type::GEOM_POLYGON122,3980
    GEOM_MULTIPOINT Field::geometry_type::GEOM_MULTIPOINT123,4058
    GEOM_MULTIPOINT = 4, GEOM_MULTILINESTRING Field::geometry_type::GEOM_MULTILINESTRING123,4058
    GEOM_MULTIPOINT = 4, GEOM_MULTILINESTRING = 5, GEOM_MULTIPOLYGON Field::geometry_type::GEOM_MULTIPOLYGON123,4058
    GEOM_GEOMETRYCOLLECTION Field::geometry_type::GEOM_GEOMETRYCOLLECTION124,4132
  enum imagetype Field::imagetype126,4169
  enum imagetype { itRAW,Field::imagetype::itRAW126,4169
  enum imagetype { itRAW, itMBR}Field::imagetype::itMBR126,4169
  virtual ~Field(Field::~Field147,4889
  inline String *val_str(Field::val_str159,5484
  virtual bool str_needs_quotes(Field::str_needs_quotes178,6424
  virtual Item_result cmp_type Field::cmp_type180,6522
  virtual Item_result cast_to_int_type Field::cast_to_int_type181,6588
  virtual bool eq(Field::eq185,6856
  virtual uint32 pack_length(Field::pack_length197,7260
  virtual uint32 pack_length_in_rec(Field::pack_length_in_rec204,7532
  virtual uint pack_length_from_metadata(Field::pack_length_from_metadata207,7740
  virtual uint row_pack_length(Field::row_pack_length212,7895
  virtual int save_field_metadata(Field::save_field_metadata213,7942
  virtual uint32 data_length(Field::data_length219,8119
  virtual uint32 sort_length(Field::sort_length220,8176
  virtual uint32 max_data_length(Field::max_data_length228,8406
  virtual int reset(Field::reset232,8481
  virtual void reset_fields(Field::reset_fields233,8547
  virtual void set_default(Field::set_default234,8580
  virtual bool binary(Field::binary243,8869
  virtual bool zero_pack(Field::zero_pack244,8913
  virtual enum ha_base_keytype key_type(Field::key_type245,8960
  virtual uint32 key_length(Field::key_length246,9038
  virtual enum_field_types real_type(Field::real_type248,9144
  inline  int cmp(Field::cmp249,9208
  virtual int cmp_max(Field::cmp_max250,9269
  virtual int cmp_binary(Field::cmp_binary253,9413
  virtual int cmp_offset(Field::cmp_offset255,9532
  virtual int cmp_binary_offset(Field::cmp_binary_offset257,9612
  virtual int key_cmp(Field::key_cmp259,9708
  virtual int key_cmp(Field::key_cmp261,9785
  virtual uint decimals(Field::decimals263,9865
  inline bool is_null(Field::is_null271,10189
  inline bool is_real_null(Field::is_real_null273,10324
  inline bool is_null_in_record(Field::is_null_in_record275,10452
  inline bool is_null_in_record_with_offset(Field::is_null_in_record_with_offset282,10623
  inline void set_null(Field::set_null288,10777
  inline void set_notnull(Field::set_notnull290,10883
  inline bool maybe_null(Field::maybe_null292,11001
  inline bool real_maybe_null(Field::real_maybe_null296,11133
    LAST_NULL_BYTE_UNDEF=Field::LAST_NULL_BYTE_UNDEF299,11205
  size_t last_null_byte(Field::last_null_byte317,11681
  virtual bool can_be_compared_as_longlong(Field::can_be_compared_as_longlong334,12390
  virtual void free(Field::free335,12459
  inline void move_field(Field::move_field342,12827
  inline void move_field(Field::move_field346,12978
  virtual void move_field_offset(Field::move_field_offset347,13036
  virtual void get_image(Field::get_image353,13213
  virtual void set_image(Field::set_image355,13315
  virtual uint get_key_image(Field::get_key_image385,14292
  virtual void set_key_image(Field::set_key_image390,14436
  inline longlong val_int_offset(Field::val_int_offset392,14545
  inline longlong val_int(Field::val_int399,14701
  inline String *val_str(Field::val_str408,14908
  uchar *pack(Field::pack423,15314
  const uchar *unpack(Field::unpack435,15706
  virtual uint packed_col_length(Field::packed_col_length442,15901
  virtual uint max_packed_col_length(Field::max_packed_col_length444,15984
  uint offset(Field::offset447,16063
  virtual CHARSET_INFO *charset(Field::charset455,16325
  virtual CHARSET_INFO *charset_for_protocol(Field::charset_for_protocol456,16397
  virtual CHARSET_INFO *sort_charset(Field::sort_charset458,16507
  virtual bool has_charset(Field::has_charset459,16578
  virtual void set_charset(Field::set_charset460,16635
  virtual enum Derivation derivation(Field::derivation461,16693
  virtual uint repertoire(Field::repertoire463,16776
  virtual void set_derivation(Field::set_derivation464,16850
  inline bool check_overflow(Field::check_overflow475,17565
  void init(Field::init480,17698
  virtual uint32 char_length(Field::char_length501,18447
  virtual geometry_type get_geometry_type(Field::get_geometry_type506,18534
  ha_storage_media field_storage_type(Field::field_storage_type513,18663
  void set_storage_type(Field::set_storage_type519,18798
  column_format_type column_format(Field::column_format525,18984
  void set_column_format(Field::set_column_format531,19118
  virtual int do_save_field_metadata(Field::do_save_field_metadata578,20411
  static void handle_int16(Field::handle_int16582,20497
  static void handle_int24(Field::handle_int24601,20899
  static void handle_int32(Field::handle_int32627,21466
  static void handle_int64(Field::handle_int64649,21928
  uchar *pack_int16(Field::pack_int16668,22336
  const uchar *unpack_int16(Field::unpack_int16674,22527
  uchar *pack_int24(Field::pack_int24681,22759
  const uchar *unpack_int24(Field::unpack_int24687,22937
  uchar *pack_int32(Field::pack_int32694,23157
  const uchar *unpack_int32(Field::unpack_int32700,23348
  uchar *pack_int64(Field::pack_int64707,23580
  const uchar *unpack_int64(Field::unpack_int64713,23770
  bool field_flags_are_binary(Field::field_flags_are_binary720,24002
class Field_num 728,24103
  Item_result result_type Field_num::result_type736,24436
  enum Derivation derivation(Field_num::derivation737,24495
  uint repertoire(Field_num::repertoire738,24567
  CHARSET_INFO *charset(Field_num::charset739,24631
  uint decimals(Field_num::decimals744,24851
  uint size_of(Field_num::size_of745,24898
  uint row_pack_length(Field_num::row_pack_length750,25100
  uint32 pack_length_from_metadata(Field_num::pack_length_from_metadata751,25151
class Field_str 765,25673
  Item_result result_type Field_str::result_type773,25961
  uint decimals(Field_str::decimals785,26578
  uint size_of(Field_str::size_of790,26804
  uint repertoire(Field_str::repertoire791,26853
  CHARSET_INFO *charset(Field_str::charset795,26940
  void set_charset(Field_str::set_charset796,27002
  enum Derivation derivation(Field_str::derivation797,27080
  virtual void set_derivation(Field_str::set_derivation798,27150
  bool binary(Field_str::binary800,27252
  uint32 max_display_length(Field_str::max_display_length801,27319
  virtual bool str_needs_quotes(Field_str::str_needs_quotes804,27444
class Field_longstr 811,27609
  Field_longstr(Field_longstr::Field_longstr817,27784
class Field_real 829,28255
  Field_real(Field_real::Field_real833,28322
  uint32 max_display_length(Field_real::max_display_length844,28868
  uint size_of(Field_real::size_of845,28923
class Field_decimal 853,29219
  Field_decimal(Field_decimal::Field_decimal855,29268
  enum_field_types type(Field_decimal::type863,29635
  enum ha_base_keytype key_type(Field_decimal::key_type864,29697
  bool zero_pack(Field_decimal::zero_pack876,30153
  virtual const uchar *unpack(Field_decimal::unpack878,30228
  virtual uchar *pack(Field_decimal::pack883,30428
class Field_new_decimal 892,30680
  enum_field_types type(Field_new_decimal::type912,31541
  enum ha_base_keytype key_type(Field_new_decimal::key_type913,31606
  Item_result result_type Field_new_decimal::result_type914,31676
  bool zero_pack(Field_new_decimal::zero_pack929,32335
  uint32 max_display_length(Field_new_decimal::max_display_length931,32410
  uint size_of(Field_new_decimal::size_of932,32465
  uint32 pack_length(Field_new_decimal::pack_length933,32515
  uint row_pack_length(Field_new_decimal::row_pack_length935,32629
class Field_tiny 945,33031
  Field_tiny(Field_tiny::Field_tiny947,33076
  enum Item_result result_type Field_tiny::result_type955,33415
  enum_field_types type(Field_tiny::type956,33478
  enum ha_base_keytype key_type(Field_tiny::key_type957,33537
  int reset(Field_tiny::reset962,33777
  uint32 pack_length(Field_tiny::pack_length969,34032
  uint32 max_display_length(Field_tiny::max_display_length971,34111
  virtual uchar *pack(Field_tiny::pack973,34156
  virtual const uchar *unpack(Field_tiny::unpack980,34312
class Field_short 989,34490
  Field_short(Field_short::Field_short991,34536
  Field_short(Field_short::Field_short999,34879
  enum Item_result result_type Field_short::result_type1004,35111
  enum_field_types type(Field_short::type1005,35174
  enum ha_base_keytype key_type(Field_short::key_type1006,35234
  int reset(Field_short::reset1011,35482
  uint32 pack_length(Field_short::pack_length1018,35744
  uint32 max_display_length(Field_short::max_display_length1020,35823
  virtual uchar *pack(Field_short::pack1022,35868
  virtual const uchar *unpack(Field_short::unpack1028,36038
class Field_medium 1035,36229
  Field_medium(Field_medium::Field_medium1037,36276
  enum Item_result result_type Field_medium::result_type1045,36620
  enum_field_types type(Field_medium::type1046,36683
  enum ha_base_keytype key_type(Field_medium::key_type1047,36743
  int reset(Field_medium::reset1052,36984
  uint32 pack_length(Field_medium::pack_length1059,37253
  uint32 max_display_length(Field_medium::max_display_length1061,37332
  virtual uchar *pack(Field_medium::pack1063,37377
  virtual const uchar *unpack(Field_medium::unpack1069,37560
class Field_long 1077,37765
  Field_long(Field_long::Field_long1079,37810
  Field_long(Field_long::Field_long1087,38149
  enum Item_result result_type Field_long::result_type1092,38376
  enum_field_types type(Field_long::type1093,38439
  enum ha_base_keytype key_type(Field_long::key_type1094,38498
  int reset(Field_long::reset1099,38745
  uint32 pack_length(Field_long::pack_length1106,39021
  uint32 max_display_length(Field_long::max_display_length1108,39100
  virtual uchar *pack(Field_long::pack1109,39170
  virtual const uchar *unpack(Field_long::unpack1115,39385
class Field_longlong 1125,39653
  Field_longlong(Field_longlong::Field_longlong1127,39702
  Field_longlong(Field_longlong::Field_longlong1135,40048
  enum Item_result result_type Field_longlong::result_type1141,40280
  enum_field_types type(Field_longlong::type1142,40343
  enum ha_base_keytype key_type(Field_longlong::key_type1143,40406
  int reset(Field_longlong::reset1148,40653
  uint32 pack_length(Field_longlong::pack_length1159,40969
  bool can_be_compared_as_longlong(Field_longlong::can_be_compared_as_longlong1161,41048
  uint32 max_display_length(Field_longlong::max_display_length1162,41108
  virtual uchar *pack(Field_longlong::pack1163,41153
  virtual const uchar *unpack(Field_longlong::unpack1169,41369
class Field_float 1179,41622
  Field_float(Field_float::Field_float1181,41669
  Field_float(Field_float::Field_float1189,42056
  enum_field_types type(Field_float::type1194,42297
  enum ha_base_keytype key_type(Field_float::key_type1195,42357
  int reset(Field_float::reset1199,42558
  uint32 pack_length(Field_float::pack_length1206,42829
  uint row_pack_length(Field_float::row_pack_length1207,42884
class Field_double 1214,43034
  Field_double(Field_double::Field_double1216,43082
  Field_double(Field_double::Field_double1224,43466
  Field_double(Field_double::Field_double1229,43710
  enum_field_types type(Field_double::type1234,44003
  enum ha_base_keytype key_type(Field_double::key_type1235,44064
  int reset(Field_double::reset1239,44269
  uint32 pack_length(Field_double::pack_length1246,44541
  uint row_pack_length(Field_double::row_pack_length1247,44597
class Field_null 1256,44822
  Field_null(Field_null::Field_null1259,44891
  enum_field_types type(Field_null::type1265,45118
  bool match_collation_to_optimize_range(Field_null::match_collation_to_optimize_range1266,45177
  int  store(Field_null::store1267,45244
  int store(Field_null::store1269,45331
  int store(Field_null::store1270,45381
  int store_decimal(Field_null::store_decimal1271,45450
  int reset(Field_null::reset1272,45517
  double val_real(Field_null::val_real1273,45551
  longlong val_int(Field_null::val_int1274,45591
  my_decimal *val_decimal(Field_null::val_decimal1275,45629
  String *val_str(Field_null::val_str1276,45683
  int cmp(Field_null::cmp1278,45770
  void sort_string(Field_null::sort_string1279,45825
  uint32 pack_length(Field_null::pack_length1280,45874
  uint size_of(Field_null::size_of1282,45953
  uint32 max_display_length(Field_null::max_display_length1283,46002
class Field_timestamp 1287,46051
  enum_field_types type(Field_timestamp::type1295,46404
  bool match_collation_to_optimize_range(Field_timestamp::match_collation_to_optimize_range1296,46468
  enum ha_base_keytype key_type(Field_timestamp::key_type1297,46535
  enum Item_result cmp_type Field_timestamp::cmp_type1298,46608
  enum Derivation derivation(Field_timestamp::derivation1299,46668
  uint repertoire(Field_timestamp::repertoire1300,46740
  CHARSET_INFO *charset(Field_timestamp::charset1301,46804
  bool binary(Field_timestamp::binary1302,46872
  int  reset(Field_timestamp::reset1306,47043
  uint32 pack_length(Field_timestamp::pack_length1313,47320
  bool can_be_compared_as_longlong(Field_timestamp::can_be_compared_as_longlong1315,47399
  bool zero_pack(Field_timestamp::zero_pack1316,47459
  virtual void set_default(Field_timestamp::set_default1318,47517
  inline long get_timestamp(Field_timestamp::get_timestamp1327,47768
  inline void store_timestamp(Field_timestamp::store_timestamp1339,48032
  uchar *pack(Field_timestamp::pack1353,48401
  const uchar *unpack(Field_timestamp::unpack1358,48578
class Field_year 1367,48800
  Field_year(Field_year::Field_year1369,48846
  enum_field_types type(Field_year::type1375,49112
  bool can_be_compared_as_longlong(Field_year::can_be_compared_as_longlong1384,49470
class Field_date 1388,49535
  Field_date(Field_date::Field_date1390,49580
  Field_date(Field_date::Field_date1396,49880
  enum_field_types type(Field_date::type1400,50110
  bool match_collation_to_optimize_range(Field_date::match_collation_to_optimize_range1401,50169
  enum ha_base_keytype key_type(Field_date::key_type1402,50236
  enum Item_result cmp_type Field_date::cmp_type1403,50309
  enum Derivation derivation(Field_date::derivation1404,50369
  uint repertoire(Field_date::repertoire1405,50441
  CHARSET_INFO *charset(Field_date::charset1406,50505
  bool binary(Field_date::binary1407,50573
  int reset(Field_date::reset1411,50741
  uint32 pack_length(Field_date::pack_length1419,51053
  bool can_be_compared_as_longlong(Field_date::can_be_compared_as_longlong1421,51132
  bool zero_pack(Field_date::zero_pack1422,51192
  uchar *pack(Field_date::pack1423,51231
  const uchar *unpack(Field_date::unpack1428,51408
class Field_newdate 1437,51630
  Field_newdate(Field_newdate::Field_newdate1439,51678
  Field_newdate(Field_newdate::Field_newdate1445,51961
  enum_field_types type(Field_newdate::type1449,52191
  enum_field_types real_type(Field_newdate::real_type1450,52250
  bool match_collation_to_optimize_range(Field_newdate::match_collation_to_optimize_range1451,52318
  enum ha_base_keytype key_type(Field_newdate::key_type1452,52385
  enum Item_result cmp_type Field_newdate::cmp_type1453,52455
  enum Derivation derivation(Field_newdate::derivation1454,52515
  uint repertoire(Field_newdate::repertoire1455,52587
  CHARSET_INFO *charset(Field_newdate::charset1456,52651
  bool binary(Field_newdate::binary1457,52719
  int reset(Field_newdate::reset1462,52948
  uint32 pack_length(Field_newdate::pack_length1469,53217
  bool can_be_compared_as_longlong(Field_newdate::can_be_compared_as_longlong1471,53296
  bool zero_pack(Field_newdate::zero_pack1472,53356
class Field_time 1478,53487
  Field_time(Field_time::Field_time1480,53532
  Field_time(Field_time::Field_time1486,53819
  enum_field_types type(Field_time::type1490,54035
  bool match_collation_to_optimize_range(Field_time::match_collation_to_optimize_range1491,54094
  enum ha_base_keytype key_type(Field_time::key_type1492,54161
  enum Item_result cmp_type Field_time::cmp_type1493,54230
  enum Derivation derivation(Field_time::derivation1494,54290
  uint repertoire(Field_time::repertoire1495,54362
  CHARSET_INFO *charset(Field_time::charset1496,54426
  bool binary(Field_time::binary1497,54494
  int reset(Field_time::reset1502,54720
  uint32 pack_length(Field_time::pack_length1511,55077
  bool can_be_compared_as_longlong(Field_time::can_be_compared_as_longlong1513,55156
  bool zero_pack(Field_time::zero_pack1514,55216
class Field_datetime 1518,55260
  Field_datetime(Field_datetime::Field_datetime1520,55309
  Field_datetime(Field_datetime::Field_datetime1526,55611
  enum_field_types type(Field_datetime::type1530,55839
  bool match_collation_to_optimize_range(Field_datetime::match_collation_to_optimize_range1531,55902
  enum ha_base_keytype key_type(Field_datetime::key_type1533,55991
  enum Item_result cmp_type Field_datetime::cmp_type1535,56071
  enum Derivation derivation(Field_datetime::derivation1536,56131
  uint repertoire(Field_datetime::repertoire1537,56203
  CHARSET_INFO *charset(Field_datetime::charset1538,56267
  bool binary(Field_datetime::binary1539,56335
  uint decimals(Field_datetime::decimals1540,56371
  int reset(Field_datetime::reset1545,56613
  uint32 pack_length(Field_datetime::pack_length1556,56929
  bool can_be_compared_as_longlong(Field_datetime::can_be_compared_as_longlong1558,57008
  bool zero_pack(Field_datetime::zero_pack1559,57068
  uchar *pack(Field_datetime::pack1562,57194
  const uchar *unpack(Field_datetime::unpack1567,57371
class Field_string 1576,57593
  Field_string(Field_string::Field_string1579,57673
  Field_string(Field_string::Field_string1586,58015
  enum_field_types type(Field_string::type1592,58283
  bool match_collation_to_optimize_range(Field_string::match_collation_to_optimize_range1600,58588
  enum ha_base_keytype key_type(Field_string::key_type1601,58654
  bool zero_pack(Field_string::zero_pack1603,58757
  int reset(Field_string::reset1604,58796
  int store(Field_string::store1612,59061
  uint pack_length_from_metadata(Field_string::pack_length_from_metadata1624,59633
  uint row_pack_length(Field_string::row_pack_length1633,60039
  uint size_of(Field_string::size_of1639,60369
  enum_field_types real_type(Field_string::real_type1640,60418
  bool has_charset(Field_string::has_charset1641,60485
class Field_varstring 1650,60778
  Field_varstring(Field_varstring::Field_varstring1659,61041
  Field_varstring(Field_varstring::Field_varstring1670,61490
  enum_field_types type(Field_varstring::type1680,61845
  bool match_collation_to_optimize_range(Field_varstring::match_collation_to_optimize_range1681,61908
  uint row_pack_length(Field_varstring::row_pack_length1683,62015
  bool zero_pack(Field_varstring::zero_pack1684,62065
  int  reset(Field_varstring::reset1685,62104
  uint32 pack_length(Field_varstring::pack_length1686,62175
  uint32 key_length(Field_varstring::key_length1687,62251
  uint32 sort_length(Field_varstring::sort_length1688,62313
  int  store(Field_varstring::store1695,62586
  int cmp(Field_varstring::cmp1701,62858
  uint size_of(Field_varstring::size_of1719,63665
  enum_field_types real_type(Field_varstring::real_type1720,63714
  bool has_charset(Field_varstring::has_charset1721,63782
class Field_blob 1734,64242
  Field_blob(Field_blob::Field_blob1750,64695
  Field_blob(Field_blob::Field_blob1758,64974
  Field_blob(Field_blob::Field_blob1773,65497
  enum_field_types type(Field_blob::type1776,65653
  bool match_collation_to_optimize_range(Field_blob::match_collation_to_optimize_range1777,65712
  enum ha_base_keytype key_type(Field_blob::key_type1778,65778
  int cmp(Field_blob::cmp1788,66215
  uint32 key_length(Field_blob::key_length1794,66529
  uint32 pack_length(Field_blob::pack_length1796,66616
  uint32 pack_length_no_ptr(Field_blob::pack_length_no_ptr1807,66934
  uint row_pack_length(Field_blob::row_pack_length1809,67006
  virtual uint32 max_data_length(Field_blob::max_data_length1811,67094
  int reset(Field_blob::reset1815,67203
  void reset_fields(Field_blob::reset_fields1816,67274
  uint32 get_field_buffer_size(Field_blob::get_field_buffer_size1817,67338
  void store_length(Field_blob::store_length1822,67542
  inline void store_length(Field_blob::store_length1826,67698
  uint32 get_packed_size(Field_blob::get_packed_size1839,68034
  inline uint32 get_length(Field_blob::get_length1842,68178
  uint32 get_length(Field_blob::get_length1845,68390
  inline void get_ptr(Field_blob::get_ptr1848,68559
  inline void get_ptr(Field_blob::get_ptr1852,68657
  inline void set_ptr(Field_blob::set_ptr1856,68782
  void set_ptr_offset(Field_blob::set_ptr_offset1861,68932
  inline void set_ptr(Field_blob::set_ptr1867,69177
  inline bool copy(Field_blob::copy1874,69430
  void free(Field_blob::free1893,70050
  inline void clear_temporary(Field_blob::clear_temporary1894,70082
  uint size_of(Field_blob::size_of1896,70204
  bool has_charset(Field_blob::has_charset1897,70253
  inline bool in_read_set(Field_blob::in_read_set1902,70439
  inline bool in_write_set(Field_blob::in_write_set1903,70523
class Field_geom 1910,70692
  Field_geom(Field_geom::Field_geom1914,70771
  Field_geom(Field_geom::Field_geom1921,71172
  enum ha_base_keytype key_type(Field_geom::key_type1925,71415
  enum_field_types type(Field_geom::type1926,71489
  bool match_collation_to_optimize_range(Field_geom::match_collation_to_optimize_range1927,71553
  uint size_of(Field_geom::size_of1933,71835
  int reset(Field_geom::reset1939,72000
  geometry_type get_geometry_type(Field_geom::get_geometry_type1941,72068
class Field_enum 1946,72156
  Field_enum(Field_enum::Field_enum1951,72251
  enum_field_types type(Field_enum::type1964,72800
  bool match_collation_to_optimize_range(Field_enum::match_collation_to_optimize_range1965,72862
  enum Item_result cmp_type Field_enum::cmp_type1966,72929
  enum Item_result cast_to_int_type Field_enum::cast_to_int_type1967,72989
  uint32 pack_length(Field_enum::pack_length1977,73406
  uint size_of(Field_enum::size_of1980,73539
  enum_field_types real_type(Field_enum::real_type1981,73588
  uint pack_length_from_metadata(Field_enum::pack_length_from_metadata1982,73653
  uint row_pack_length(Field_enum::row_pack_length1984,73747
  virtual bool zero_pack(Field_enum::zero_pack1985,73798
  bool optimize_range(Field_enum::optimize_range1986,73845
  bool has_charset(Field_enum::has_charset1988,73931
  CHARSET_INFO *sort_charset(Field_enum::sort_charset1990,74023
class Field_set 2003,74441
  Field_set(Field_set::Field_set2005,74486
  int  store(Field_set::store2019,75060
  virtual bool zero_pack(Field_set::zero_pack2022,75182
  uint size_of(Field_set::size_of2025,75302
  enum_field_types real_type(Field_set::real_type2026,75351
  bool has_charset(Field_set::has_charset2027,75415
class Field_bit 2047,76020
  enum_field_types type(Field_bit::type2056,76465
  enum ha_base_keytype key_type(Field_bit::key_type2057,76524
  uint32 key_length(Field_bit::key_length2058,76591
  uint32 max_data_length(Field_bit::max_data_length2059,76663
  uint32 max_display_length(Field_bit::max_display_length2060,76731
  uint size_of(Field_bit::size_of2061,76786
  Item_result result_type Field_bit::result_type2062,76835
  int reset(Field_bit::reset2063,76893
  virtual bool str_needs_quotes(Field_bit::str_needs_quotes2076,77344
  int cmp(Field_bit::cmp2078,77436
  int cmp_binary_offset(Field_bit::cmp_binary_offset2086,77685
  int key_cmp(Field_bit::key_cmp2089,77827
  void get_image(Field_bit::get_image2093,78005
  void set_image(Field_bit::set_image2095,78111
  void set_key_image(Field_bit::set_key_image2098,78292
  void sort_string(Field_bit::sort_string2100,78408
  uint32 pack_length(Field_bit::pack_length2102,78495
  uint32 pack_length_in_rec(Field_bit::pack_length_in_rec2103,78568
  uint row_pack_length(Field_bit::row_pack_length2105,78684
  void set_bit_ptr(Field_bit::set_bit_ptr2119,79359
  bool eq(Field_bit::eq2124,79477
  void move_field_offset(Field_bit::move_field_offset2131,79694
class Field_bit_as_char:Field_bit_as_char2151,80252
  enum ha_base_keytype key_type(Field_bit_as_char::key_type2156,80495
  uint size_of(Field_bit_as_char::size_of2157,80565
  int store(Field_bit_as_char::store2159,80679
  int store(Field_bit_as_char::store2160,80735
class Create_field 2170,80914
  Create_field(Create_field::Create_field2201,81993
  Create_field *clone(Create_field::clone2204,82139
  bool field_flags_are_binary(Create_field::field_flags_are_binary2220,82891
  ha_storage_media field_storage_type(Create_field::field_storage_type2225,82987
  column_format_type column_format(Create_field::column_format2231,83122
class Send_field 2246,83351
  Send_field(Send_field::Send_field2254,83576
class Copy_field 2262,83649
  typedef void Copy_func(Copy_field::Copy_func2267,83774
  Copy_field(Copy_field::Copy_field2295,84826
  ~Copy_field(Copy_field::~Copy_field2296,84844
#define FIELDFLAG_DECIMAL	2321,85717
#define FIELDFLAG_BINARY	2322,85746
#define FIELDFLAG_NUMBER	2323,85794
#define FIELDFLAG_ZEROFILL	2324,85822
#define FIELDFLAG_PACK	2325,85852
#define FIELDFLAG_INTERVAL	2326,85906
#define FIELDFLAG_BITFIELD	2327,85968
#define FIELDFLAG_BLOB	2328,86026
#define FIELDFLAG_GEOM	2329,86082
#define FIELDFLAG_TREAT_BIT_AS_CHAR 2331,86142
#define FIELDFLAG_LEFT_FULLSCREEN	2333,86219
#define FIELDFLAG_RIGHT_FULLSCREEN	2334,86258
#define FIELDFLAG_FORMAT_NUMBER	2335,86299
#define FIELDFLAG_NO_DEFAULT	2336,86367
#define FIELDFLAG_SUM	2337,86415
#define FIELDFLAG_MAYBE_NULL	2338,86476
#define FIELDFLAG_HEX_ESCAPE	2339,86527
#define FIELDFLAG_PACK_SHIFT	2340,86574
#define FIELDFLAG_DEC_SHIFT	2341,86606
#define FIELDFLAG_MAX_DEC	2342,86637
#define FIELDFLAG_NUM_SCREEN_TYPE	2343,86667
#define FIELDFLAG_ALFA_SCREEN_TYPE	2344,86708
#define MTYP_TYPENR(2346,86751
#define f_is_dec(2348,86819
#define f_is_num(2349,86866
#define f_is_zerofill(2350,86912
#define f_is_packed(2351,86964
#define f_packtype(2352,87011
#define f_decimals(2353,87071
#define f_is_alpha(2354,87155
#define f_is_binary(2355,87193
#define f_is_enum(2356,87272
#define f_is_bitfield(2357,87376
#define f_is_blob(2358,87480
#define f_is_geom(2359,87566
#define f_is_equ(2360,87652
#define f_settype(2361,87709
#define f_maybe_null(2362,87767
#define f_no_default(2363,87819
#define f_bit_as_char(2364,87871
#define f_is_hex_escape(2365,87939

sql/filesort.h,81
#define FILESORT_INCLUDED17,772
typedef struct st_sort_field SORT_FIELD;27,990

sql/frm_crypt.h,34
#define FRM_CRYPT_INCLUDED17,773

sql/gstream.h,1013
#define GSTREAM_INCLUDED2,25
typedef struct charset_info_st CHARSET_INFO;24,1007
typedef struct st_mysql_lex_string LEX_STRING;25,1052
class Gis_read_stream27,1100
  enum enum_tok_typesGis_read_stream::enum_tok_types30,1132
    unknown,Gis_read_stream::enum_tok_types::unknown32,1158
    eostream,Gis_read_stream::enum_tok_types::eostream33,1171
    word,Gis_read_stream::enum_tok_types::word34,1185
    numeric,Gis_read_stream::enum_tok_types::numeric35,1195
    l_bra,Gis_read_stream::enum_tok_types::l_bra36,1208
    r_bra,Gis_read_stream::enum_tok_types::r_bra37,1219
    commaGis_read_stream::enum_tok_types::comma38,1230
  Gis_read_stream(Gis_read_stream::Gis_read_stream41,1246
  Gis_read_stream(Gis_read_stream::Gis_read_stream44,1402
  ~Gis_read_stream(Gis_read_stream::~Gis_read_stream46,1475
  inline void skip_space(Gis_read_stream::skip_space56,1675
  inline bool skip_char(Gis_read_stream::skip_char62,1857
  char *get_error_msg(Gis_read_stream::get_error_msg73,2111

sql/ha_ndbcluster.h,2640
#define HA_NDBCLUSTER_INCLUDED2,31
#define IS_NDB_BLOB_PREFIX(31,1148
#define NDB_HIDDEN_PRIMARY_KEY_LENGTH 36,1254
typedef enum ndb_index_type 59,1877
  UNDEFINED_INDEX ndb_index_type::UNDEFINED_INDEX60,1907
  PRIMARY_KEY_INDEX ndb_index_type::PRIMARY_KEY_INDEX61,1930
  PRIMARY_KEY_ORDERED_INDEX ndb_index_type::PRIMARY_KEY_ORDERED_INDEX62,1955
  UNIQUE_INDEX ndb_index_type::UNIQUE_INDEX63,1988
  UNIQUE_ORDERED_INDEX ndb_index_type::UNIQUE_ORDERED_INDEX64,2008
  ORDERED_INDEX ndb_index_type::ORDERED_INDEX65,2036
} NDB_INDEX_TYPE;66,2056
typedef enum ndb_index_status 68,2075
  UNDEFINED ndb_index_status::UNDEFINED69,2107
  ACTIVE ndb_index_status::ACTIVE70,2124
  TO_BE_DROPPED ndb_index_status::TO_BE_DROPPED71,2138
} NDB_INDEX_STATUS;72,2158
typedef struct ndb_index_data 74,2179
} NDB_INDEX_DATA;87,2658
typedef enum ndb_write_op 89,2677
  NDB_INSERT ndb_write_op::NDB_INSERT90,2705
  NDB_UPDATE ndb_write_op::NDB_UPDATE91,2723
  NDB_PK_UPDATE ndb_write_op::NDB_PK_UPDATE92,2741
} NDB_WRITE_OP;93,2761
typedef union { const NdbRecAttr *rec; NdbBlob *blob; void *ptr; } NdbValue;95,2778
  NSS_INITIAL=::NSS_INITIAL102,3039
  NSS_DROPPED,::NSS_DROPPED103,3057
  NSS_ALTERED ::NSS_ALTERED104,3072
} NDB_SHARE_STATE;105,3087
typedef struct st_ndbcluster_share 107,3107
} NDB_SHARE;133,3774
get_ndb_share_state(137,3811
set_ndb_share_state(148,4002
struct Ndb_tuple_id_range_guard 155,4163
  Ndb_tuple_id_range_guard(Ndb_tuple_id_range_guard::Ndb_tuple_id_range_guard156,4197
  ~Ndb_tuple_id_range_guard(Ndb_tuple_id_range_guard::~Ndb_tuple_id_range_guard161,4340
#define NSF_HIDDEN_PK 170,4512
#define NSF_BLOB_FLAG 171,4571
#define NSF_NO_BINLOG 172,4627
typedef enum ndb_query_state_bits 175,4695
  NDB_QUERY_NORMAL ndb_query_state_bits::NDB_QUERY_NORMAL176,4731
  NDB_QUERY_MULTI_READ_RANGE ndb_query_state_bits::NDB_QUERY_MULTI_READ_RANGE177,4755
} NDB_QUERY_STATE_BITS;178,4788
enum THD_NDB_OPTIONS184,4874
  TNO_NO_LOG_SCHEMA_OP=THD_NDB_OPTIONS::TNO_NO_LOG_SCHEMA_OP186,4897
enum THD_NDB_TRANS_OPTIONS189,4932
  TNTO_INJECTED_APPLY_STATUS=THD_NDB_TRANS_OPTIONS::TNTO_INJECTED_APPLY_STATUS191,4961
  ,TNTO_NO_LOGGING=THD_NDB_TRANS_OPTIONS::TNTO_NO_LOGGING192,4998
struct Ndb_local_table_statistics 195,5039
class Thd_ndb 201,5151
class ha_ndbcluster:ha_ndbcluster225,5566
  ha_rows estimate_rows_upper_bound(ha_ndbcluster::estimate_rows_upper_bound275,7372
  virtual bool is_fatal_error(ha_ndbcluster::is_fatal_error309,8927
static const char ndbcluster_hton_name[ndbcluster_hton_name583,19568
static const int ndbcluster_hton_name_length=584,19624

sql/ha_ndbcluster_binlog.h,1893
#define HA_NDBCLUSTER_BINLOG_INCLUDED2,38
typedef NdbDictionary::Object NDBOBJ;23,894
typedef NdbDictionary::Column NDBCOL;24,932
typedef NdbDictionary::Table NDBTAB;25,970
typedef NdbDictionary::Index  NDBINDEX;26,1007
typedef NdbDictionary::Dictionary  NDBDICT;27,1047
typedef NdbDictionary::Event  NDBEVENT;28,1091
#define IS_TMP_PREFIX(30,1132
#define INJECTOR_EVENT_LEN 32,1190
#define NDB_INVALID_SCHEMA_OBJECT 34,1222
#define NDB_ANYVALUE_FOR_NOLOGGING 37,1311
#define NDB_ANYVALUE_RESERVED 38,1357
enum SCHEMA_OP_TYPE48,1603
  SOT_DROP_TABLE=SCHEMA_OP_TYPE::SOT_DROP_TABLE50,1625
  SOT_CREATE_TABLE=SCHEMA_OP_TYPE::SOT_CREATE_TABLE51,1646
  SOT_RENAME_TABLE_NEW=SCHEMA_OP_TYPE::SOT_RENAME_TABLE_NEW52,1669
  SOT_ALTER_TABLE=SCHEMA_OP_TYPE::SOT_ALTER_TABLE53,1696
  SOT_DROP_DB=SCHEMA_OP_TYPE::SOT_DROP_DB54,1718
  SOT_CREATE_DB=SCHEMA_OP_TYPE::SOT_CREATE_DB55,1736
  SOT_ALTER_DB=SCHEMA_OP_TYPE::SOT_ALTER_DB56,1756
  SOT_CLEAR_SLOCK=SCHEMA_OP_TYPE::SOT_CLEAR_SLOCK57,1775
  SOT_TABLESPACE=SCHEMA_OP_TYPE::SOT_TABLESPACE58,1797
  SOT_LOGFILE_GROUP=SCHEMA_OP_TYPE::SOT_LOGFILE_GROUP59,1818
  SOT_RENAME_TABLE=SCHEMA_OP_TYPE::SOT_RENAME_TABLE60,1842
  SOT_TRUNCATE_TABLE=SCHEMA_OP_TYPE::SOT_TRUNCATE_TABLE61,1866
const uint max_ndb_nodes=64,1895
static const char *ha_ndb_ext=ha_ndb_ext66,1947
static const char share_prefix[share_prefix67,1985
class Ndb_table_guard69,2026
  Ndb_table_guard(Ndb_table_guard::Ndb_table_guard72,2058
  ~Ndb_table_guard(Ndb_table_guard::~Ndb_table_guard81,2316
  const NDBTAB *get_table(Ndb_table_guard::get_table92,2603
  void invalidate(Ndb_table_guard::invalidate93,2652
  const NDBTAB *release(Ndb_table_guard::release94,2693
inline NDB_SHARE *get_share(get_share209,6960
inline NDB_SHARE *get_share(get_share217,7240
inline void free_share(222,7329
get_thd_ndb(229,7459
set_thd_ndb(234,7556

sql/ha_ndbcluster_cond.h,4112
#define HA_NDBCLUSTER_COND_INCLUDED2,36
typedef enum ndb_item_type 35,1238
  NDB_VALUE 36,1267
  NDB_FIELD 37,1320
  NDB_FUNCTION 38,1374
  NDB_END_COND 39,1431
} NDB_ITEM_TYPE;40,1484
typedef enum ndb_func_type 42,1502
  NDB_EQ_FUNC 43,1531
  NDB_NE_FUNC 44,1550
  NDB_LT_FUNC 45,1569
  NDB_LE_FUNC 46,1588
  NDB_GT_FUNC 47,1607
  NDB_GE_FUNC 48,1626
  NDB_ISNULL_FUNC 49,1645
  NDB_ISNOTNULL_FUNC 50,1668
  NDB_LIKE_FUNC 51,1694
  NDB_NOTLIKE_FUNC 52,1715
  NDB_NOT_FUNC 53,1739
  NDB_UNKNOWN_FUNC 54,1760
  NDB_COND_AND_FUNC 55,1785
  NDB_COND_OR_FUNC 56,1811
  NDB_UNSUPPORTED_FUNC 57,1836
} NDB_FUNC_TYPE;58,1864
typedef union ndb_item_qualification 60,1882
} NDB_ITEM_QUALIFICATION;64,2070
typedef struct ndb_item_field_value 66,2097
} NDB_ITEM_FIELD_VALUE;69,2168
typedef union ndb_item_value 71,2193
} NDB_ITEM_VALUE;75,2299
struct negated_function_mapping77,2318
static const negated_function_mapping neg_map[neg_map87,2539
class Ndb_item 119,3811
  Ndb_item(Ndb_item::Ndb_item122,3855
  Ndb_item(Ndb_item::Ndb_item123,3913
  Ndb_item(Ndb_item::Ndb_item148,4703
  Ndb_item(Ndb_item::Ndb_item156,4988
  Ndb_item(Ndb_item::Ndb_item163,5251
  ~Ndb_item(Ndb_item::~Ndb_item169,5439
  uint32 pack_length(Ndb_item::pack_length178,5574
  Field * get_field(Ndb_item::get_field194,5892
  int get_field_no(Ndb_item::get_field_no196,5953
  int argument_count(Ndb_item::argument_count198,6017
  const char* get_val(Ndb_item::get_val203,6080
  void save_in_field(Ndb_item::save_in_field219,6398
  static NDB_FUNC_TYPE item_func_to_ndb_func(Ndb_item::item_func_to_ndb_func233,6801
  static NDB_FUNC_TYPE negate(Ndb_item::negate254,7788
class Ndb_cond 271,8168
  Ndb_cond(Ndb_cond::Ndb_cond274,8213
  ~Ndb_cond(Ndb_cond::~Ndb_cond275,8271
class Ndb_cond_stack 306,9036
  Ndb_cond_stack(Ndb_cond_stack::Ndb_cond_stack309,9087
  ~Ndb_cond_stack(Ndb_cond_stack::~Ndb_cond_stack310,9139
class Ndb_rewrite_context 321,9321
  Ndb_rewrite_context(Ndb_rewrite_context::Ndb_rewrite_context324,9376
  ~Ndb_rewrite_context(Ndb_rewrite_context::~Ndb_rewrite_context326,9474
class Ndb_cond_traverse_context 343,9973
   Ndb_cond_traverse_context(Ndb_cond_traverse_context::Ndb_cond_traverse_context346,10035
  ~Ndb_cond_traverse_context(Ndb_cond_traverse_context::~Ndb_cond_traverse_context360,10549
  void expect(Ndb_cond_traverse_context::expect367,10750
  void dont_expect(Ndb_cond_traverse_context::dont_expect372,10897
  bool expecting(Ndb_cond_traverse_context::expecting376,10991
  void expect_nothing(Ndb_cond_traverse_context::expect_nothing380,11087
  bool expecting_nothing(Ndb_cond_traverse_context::expecting_nothing384,11156
  void expect_only(Ndb_cond_traverse_context::expect_only388,11237
  void expect_field_type(Ndb_cond_traverse_context::expect_field_type394,11323
  void expect_all_field_types(Ndb_cond_traverse_context::expect_all_field_types398,11438
  bool expecting_field_type(Ndb_cond_traverse_context::expecting_field_type402,11524
  void expect_no_field_type(Ndb_cond_traverse_context::expect_no_field_type406,11648
  bool expecting_no_field_type(Ndb_cond_traverse_context::expecting_no_field_type410,11734
  void expect_only_field_type(Ndb_cond_traverse_context::expect_only_field_type414,11832
  void expect_field_result(Ndb_cond_traverse_context::expect_field_result420,11956
  bool expecting_field_result(Ndb_cond_traverse_context::expecting_field_result424,12074
  void expect_no_field_result(Ndb_cond_traverse_context::expect_no_field_result428,12201
  bool expecting_no_field_result(Ndb_cond_traverse_context::expecting_no_field_result432,12291
  void expect_only_field_result(Ndb_cond_traverse_context::expect_only_field_result436,12393
  void expect_collation(Ndb_cond_traverse_context::expect_collation441,12517
  bool expecting_collation(Ndb_cond_traverse_context::expecting_collation445,12589
class ha_ndbcluster_cond468,13078
  ha_ndbcluster_cond(ha_ndbcluster_cond::ha_ndbcluster_cond471,13113
  ~ha_ndbcluster_cond(ha_ndbcluster_cond::~ha_ndbcluster_cond474,13165

sql/ha_ndbcluster_tables.h,270
#define HA_NDBCLUSTER_TABLES_INCLUDED2,38
#define NDB_REP_DB 20,773
#define OLD_NDB_REP_DB 21,805
#define NDB_REP_TABLE 22,839
#define NDB_APPLY_TABLE 23,882
#define OLD_NDB_APPLY_TABLE 24,925
#define NDB_SCHEMA_TABLE 25,968
#define OLD_NDB_SCHEMA_TABLE 26,1006

sql/ha_partition.h,2783
#define HA_PARTITION_INCLUDED2,30
enum partition_keywords27,991
  PKW_HASH=29,1017
  PKW_HASH= 0, PKW_RANGE,29,1017
  PKW_HASH= 0, PKW_RANGE, PKW_LIST,29,1017
  PKW_HASH= 0, PKW_RANGE, PKW_LIST, PKW_KEY,29,1017
  PKW_HASH= 0, PKW_RANGE, PKW_LIST, PKW_KEY, PKW_MAXVALUE,29,1017
  PKW_HASH= 0, PKW_RANGE, PKW_LIST, PKW_KEY, PKW_MAXVALUE, PKW_LINEAR,29,1017
  PKW_COLUMNS,30,1088
  PKW_COLUMNS, PKW_ALGORITHM30,1088
#define PARTITION_BYTES_IN_POS 34,1122
#define PARTITION_ENABLED_TABLE_FLAGS 35,1155
#define PARTITION_DISABLED_TABLE_FLAGS 38,1327
#define PAR_WORD_SIZE 45,1714
#define PAR_CHECKSUM_OFFSET 47,1777
#define PAR_NUM_PARTS_OFFSET 49,1854
#define PAR_ENGINES_OFFSET 51,1919
class ha_partition 53,1950
  enum partition_index_scan_typeha_partition::partition_index_scan_type56,1996
    partition_index_read=ha_partition::partition_index_scan_type::partition_index_read58,2033
    partition_index_first=ha_partition::partition_index_scan_type::partition_index_first59,2062
    partition_index_first_unordered=ha_partition::partition_index_scan_type::partition_index_first_unordered60,2092
    partition_index_last=ha_partition::partition_index_scan_type::partition_index_last61,2132
    partition_index_read_last=ha_partition::partition_index_scan_type::partition_index_read_last62,2161
    partition_read_range ha_partition::partition_index_scan_type::partition_read_range63,2195
    partition_no_index_scan=ha_partition::partition_index_scan_type::partition_no_index_scan64,2225
  enum enum_handler_statusha_partition::enum_handler_status99,4099
    handler_not_initialized=ha_partition::enum_handler_status::handler_not_initialized101,4130
    handler_initialized,ha_partition::enum_handler_status::handler_initialized102,4162
    handler_opened,ha_partition::enum_handler_status::handler_opened103,4187
    handler_closedha_partition::enum_handler_status::handler_closed104,4207
  virtual void set_part_info(ha_partition::set_part_info194,8261
  bool get_no_parts(ha_partition::get_no_parts258,11436
  virtual bool is_fatal_error(ha_partition::is_fatal_error401,17410
  virtual my_bool register_query_cache_table(ha_partition::register_query_cache_table555,24141
  virtual Table_flags table_flags(ha_partition::table_flags816,33974
  virtual ulong index_flags(ha_partition::index_flags884,36832
  virtual bool low_byte_first(ha_partition::low_byte_first914,37853
  virtual bool primary_key_is_clustered(ha_partition::primary_key_is_clustered928,38284
  virtual void lock_auto_increment(ha_partition::lock_auto_increment968,40334
  virtual void unlock_auto_increment(ha_partition::unlock_auto_increment980,40692
  virtual void set_auto_increment_if_higher(ha_partition::set_auto_increment_if_higher994,41179

sql/handler.h,27975
#define HANDLER_INCLUDED2,25
#define HA_ADMIN_ALREADY_DONE	41,1380
#define HA_ADMIN_OK 42,1414
#define HA_ADMIN_NOT_IMPLEMENTED 43,1450
#define HA_ADMIN_FAILED	44,1486
#define HA_ADMIN_CORRUPT 45,1515
#define HA_ADMIN_INTERNAL_ERROR 46,1551
#define HA_ADMIN_INVALID 47,1587
#define HA_ADMIN_REJECT 48,1623
#define HA_ADMIN_TRY_ALTER 49,1659
#define HA_ADMIN_WRONG_CHECKSUM 50,1695
#define HA_ADMIN_NOT_BASE_TABLE 51,1731
#define HA_ADMIN_NEEDS_UPGRADE 52,1767
#define HA_ADMIN_NEEDS_ALTER 53,1803
#define HA_ADMIN_NEEDS_CHECK 54,1839
enum enum_alter_inplace_result 62,2029
  HA_ALTER_ERROR,63,2062
  HA_ALTER_INPLACE_NOT_SUPPORTED,64,2080
  HA_ALTER_INPLACE_EXCLUSIVE_LOCK,65,2114
  HA_ALTER_INPLACE_SHARED_LOCK_AFTER_PREPARE,66,2149
  HA_ALTER_INPLACE_SHARED_LOCK,67,2195
  HA_ALTER_INPLACE_NO_LOCK_AFTER_PREPARE,68,2227
  HA_ALTER_INPLACE_NO_LOCK69,2269
#define HA_NO_TRANSACTIONS 74,2358
#define HA_PARTIAL_COLUMN_READ 75,2433
#define HA_TABLE_SCAN_ON_INDEX 76,2511
#define HA_REC_NOT_IN_SEQ 85,2916
#define HA_CAN_GEOMETRY 86,2956
#define HA_FAST_KEY_READ 92,3219
#define HA_REQUIRES_KEY_COLUMNS_FOR_DELETE 97,3381
#define HA_NULL_IN_KEY 98,3433
#define HA_DUPLICATE_POS 99,3507
#define HA_NO_BLOBS 100,3584
#define HA_CAN_INDEX_BLOBS 101,3652
#define HA_AUTO_PART_KEY 102,3693
#define HA_REQUIRE_PRIMARY_KEY 103,3773
#define HA_STATS_RECORDS_IS_EXACT 104,3853
#define HA_CAN_INSERT_DELAYED 109,4019
#define HA_PRIMARY_KEY_IN_READ_INDEX 115,4233
#define HA_PRIMARY_KEY_REQUIRED_FOR_POSITION 123,4573
#define HA_CAN_RTREEKEYS 124,4629
#define HA_NOT_DELETE_WITH_CACHE 125,4670
#define HA_PRIMARY_KEY_REQUIRED_FOR_DELETE 130,4873
#define HA_NO_PREFIX_CHAR_KEYS 131,4926
#define HA_CAN_FULLTEXT 132,4967
#define HA_CAN_SQL_HANDLER 133,5008
#define HA_NO_AUTO_INCREMENT 134,5049
#define HA_HAS_CHECKSUM 135,5090
#define HA_FILE_BASED	137,5206
#define HA_NO_VARCHAR	138,5245
#define HA_CAN_BIT_FIELD 139,5284
#define HA_NEED_READ_RANGE_BUFFER 140,5351
#define HA_ANY_INDEX_MAY_BE_UNIQUE 141,5422
#define HA_NO_COPY_ON_ALTER 142,5467
#define HA_HAS_RECORDS	143,5512
#define HA_HAS_OWN_BINLOGGING 145,5633
#define HA_BINLOG_ROW_CAPABLE 150,5763
#define HA_BINLOG_STMT_CAPABLE 151,5808
#define HA_DUPLICATE_KEY_NOT_IN_ORDER 174,6547
#define HA_CAN_REPAIR 180,6828
#define HA_CAN_WRITE_DURING_OPTIMIZE 182,6884
#define HA_BINLOG_FLAGS 188,7023
#define HA_READ_NEXT 191,7168
#define HA_READ_PREV 192,7240
#define HA_READ_ORDER 193,7308
#define HA_READ_RANGE 194,7388
#define HA_ONLY_WHOLE_INDEX	195,7466
#define HA_KEYREAD_ONLY 196,7531
#define HA_CLUSTERED_INDEX 201,7723
#define HA_INPLACE_ADD_INDEX_NO_READ_WRITE 214,8175
#define HA_INPLACE_DROP_INDEX_NO_READ_WRITE 215,8236
#define HA_INPLACE_ADD_UNIQUE_INDEX_NO_READ_WRITE 216,8297
#define HA_INPLACE_DROP_UNIQUE_INDEX_NO_READ_WRITE 217,8358
#define HA_INPLACE_ADD_PK_INDEX_NO_READ_WRITE 218,8419
#define HA_INPLACE_DROP_PK_INDEX_NO_READ_WRITE 219,8480
#define HA_INPLACE_ADD_INDEX_NO_WRITE 226,8814
#define HA_INPLACE_DROP_INDEX_NO_WRITE 227,8875
#define HA_INPLACE_ADD_UNIQUE_INDEX_NO_WRITE 228,8936
#define HA_INPLACE_DROP_UNIQUE_INDEX_NO_WRITE 229,8997
#define HA_INPLACE_ADD_PK_INDEX_NO_WRITE 230,9058
#define HA_INPLACE_DROP_PK_INDEX_NO_WRITE 231,9120
#define HA_PARTITION_FUNCTION_SUPPORTED 257,10473
#define HA_FAST_CHANGE_PARTITION 258,10532
#define HA_PARTITION_ONE_PHASE 259,10591
#define HA_KEY_SCAN_NOT_ROR 265,10772
#define HA_KEY_SWITCH_NONUNIQ 268,10854
#define HA_KEY_SWITCH_ALL 269,10891
#define HA_KEY_SWITCH_NONUNIQ_SAVE 270,10928
#define HA_KEY_SWITCH_ALL_SAVE 271,10965
#define MAX_HA 280,11267
#define HA_SLOT_UNDEF 287,11442
#define HA_OPEN_KEYFILE	294,11586
#define HA_OPEN_RNDFILE	295,11613
#define HA_GET_INDEX	296,11640
#define HA_GET_INFO	297,11664
#define HA_READ_ONLY	298,11719
#define HA_TRY_READ_ONLY	300,11827
#define HA_WAIT_IF_LOCKED	301,11855
#define HA_ABORT_IF_LOCKED	302,11913
#define HA_BLOCK_LOCK	303,11973
#define HA_OPEN_TEMPORARY	304,12039
#define HA_KEY_NULL_LENGTH	307,12098
#define HA_KEY_BLOB_LENGTH	308,12127
#define HA_LEX_CREATE_TMP_TABLE	310,12157
#define HA_LEX_CREATE_IF_NOT_EXISTS 311,12191
#define HA_LEX_CREATE_TABLE_LIKE 312,12229
#define HA_OPTION_NO_CHECKSUM	313,12264
#define HA_OPTION_NO_DELAY_KEY_WRITE 314,12305
#define HA_MAX_REC_LENGTH	315,12353
#define HA_CACHE_TBL_NONTRANSACT 318,12411
#define HA_CACHE_TBL_NOCACHE 319,12446
#define HA_CACHE_TBL_ASKTRANSACT 320,12481
#define HA_CACHE_TBL_TRANSACT 321,12516
#define MYSQL_START_TRANS_OPT_WITH_CONS_SNAPSHOT 324,12633
#define HA_CHECK_DUP_KEY 327,12723
#define HA_CHECK_DUP_UNIQUE 328,12750
#define HA_CHECK_DUP 329,12780
enum legacy_db_type331,12843
  DB_TYPE_UNKNOWN=333,12865
  DB_TYPE_UNKNOWN=0,DB_TYPE_DIAB_ISAM=333,12865
  DB_TYPE_HASH,334,12906
  DB_TYPE_HASH,DB_TYPE_MISAM,334,12906
  DB_TYPE_HASH,DB_TYPE_MISAM,DB_TYPE_PISAM,334,12906
  DB_TYPE_RMS_ISAM,335,12950
  DB_TYPE_RMS_ISAM, DB_TYPE_HEAP,335,12950
  DB_TYPE_RMS_ISAM, DB_TYPE_HEAP, DB_TYPE_ISAM,335,12950
  DB_TYPE_MRG_ISAM,336,12998
  DB_TYPE_MRG_ISAM, DB_TYPE_MYISAM,336,12998
  DB_TYPE_MRG_ISAM, DB_TYPE_MYISAM, DB_TYPE_MRG_MYISAM,336,12998
  DB_TYPE_BERKELEY_DB,337,13054
  DB_TYPE_BERKELEY_DB, DB_TYPE_INNODB,337,13054
  DB_TYPE_GEMINI,338,13093
  DB_TYPE_GEMINI, DB_TYPE_NDBCLUSTER,338,13093
  DB_TYPE_EXAMPLE_DB,339,13131
  DB_TYPE_EXAMPLE_DB, DB_TYPE_ARCHIVE_DB,339,13131
  DB_TYPE_EXAMPLE_DB, DB_TYPE_ARCHIVE_DB, DB_TYPE_CSV_DB,339,13131
  DB_TYPE_FEDERATED_DB,340,13189
  DB_TYPE_BLACKHOLE_DB,341,13213
  DB_TYPE_PARTITION_DB,342,13237
  DB_TYPE_BINLOG,343,13261
  DB_TYPE_SOLID,344,13279
  DB_TYPE_PBXT,345,13296
  DB_TYPE_TABLE_FUNCTION,346,13312
  DB_TYPE_MEMCACHE,347,13338
  DB_TYPE_FALCON,348,13358
  DB_TYPE_MARIA,349,13376
  DB_TYPE_PERFORMANCE_SCHEMA,351,13429
  DB_TYPE_TOKUDB=352,13459
  DB_TYPE_FIRST_DYNAMIC=353,13480
  DB_TYPE_DEFAULT=354,13508
enum row_type 357,13550
enum row_type { ROW_TYPE_NOT_USED=357,13550
enum row_type { ROW_TYPE_NOT_USED=-1, ROW_TYPE_DEFAULT,357,13550
enum row_type { ROW_TYPE_NOT_USED=-1, ROW_TYPE_DEFAULT, ROW_TYPE_FIXED,357,13550
		ROW_TYPE_DYNAMIC,358,13622
		ROW_TYPE_DYNAMIC, ROW_TYPE_COMPRESSED,358,13622
		ROW_TYPE_REDUNDANT,359,13663
		ROW_TYPE_REDUNDANT, ROW_TYPE_COMPACT,359,13663
                ROW_TYPE_PAGE,361,13764
                ROW_TYPE_TOKU_UNCOMPRESSED,362,13795
                ROW_TYPE_TOKU_UNCOMPRESSED, ROW_TYPE_TOKU_ZLIB,362,13795
                ROW_TYPE_TOKU_QUICKLZ,363,13859
                ROW_TYPE_TOKU_QUICKLZ, ROW_TYPE_TOKU_LZMA,363,13859
                ROW_TYPE_TOKU_FAST,364,13918
                ROW_TYPE_TOKU_FAST, ROW_TYPE_TOKU_SMALL 364,13918
enum column_format_type 367,14037
  COLUMN_FORMAT_TYPE_DEFAULT=368,14063
  COLUMN_FORMAT_TYPE_FIXED=369,14139
  COLUMN_FORMAT_TYPE_DYNAMIC=370,14193
enum enum_binlog_func 373,14253
  BFN_RESET_LOGS=374,14277
  BFN_RESET_SLAVE=375,14305
  BFN_BINLOG_WAIT=376,14333
  BFN_BINLOG_END=377,14361
  BFN_BINLOG_PURGE_FILE=378,14389
enum enum_binlog_command 381,14420
  LOGCOM_CREATE_TABLE,382,14447
  LOGCOM_ALTER_TABLE,383,14470
  LOGCOM_RENAME_TABLE,384,14492
  LOGCOM_DROP_TABLE,385,14515
  LOGCOM_CREATE_DB,386,14536
  LOGCOM_ALTER_DB,387,14556
  LOGCOM_DROP_DB388,14575
#define HA_CREATE_USED_AUTO 394,14695
#define HA_CREATE_USED_RAID 395,14745
#define HA_CREATE_USED_UNION 396,14824
#define HA_CREATE_USED_INSERT_METHOD 397,14874
#define HA_CREATE_USED_MIN_ROWS 398,14924
#define HA_CREATE_USED_MAX_ROWS 399,14974
#define HA_CREATE_USED_AVG_ROW_LENGTH 400,15024
#define HA_CREATE_USED_PACK_KEYS 401,15074
#define HA_CREATE_USED_CHARSET 402,15124
#define HA_CREATE_USED_DEFAULT_CHARSET 403,15174
#define HA_CREATE_USED_DATADIR 404,15224
#define HA_CREATE_USED_INDEXDIR 405,15275
#define HA_CREATE_USED_ENGINE 406,15326
#define HA_CREATE_USED_CHECKSUM 407,15377
#define HA_CREATE_USED_DELAY_KEY_WRITE 408,15428
#define HA_CREATE_USED_ROW_FORMAT 409,15479
#define HA_CREATE_USED_COMMENT 410,15530
#define HA_CREATE_USED_PASSWORD 411,15581
#define HA_CREATE_USED_CONNECTION 412,15632
#define HA_CREATE_USED_KEY_BLOCK_SIZE 413,15683
#define HA_CREATE_USED_TRANSACTIONAL 415,15779
#define HA_CREATE_USED_PAGE_CHECKSUM 417,15875
struct st_system_tablename431,16289
typedef ulonglong my_xid;438,16366
#define MYSQL_XID_PREFIX 439,16435
#define MYSQL_XID_PREFIX_LEN 440,16471
#define MYSQL_XID_OFFSET 441,16529
#define MYSQL_XID_GTRID_LEN 442,16595
#define XIDDATASIZE 444,16658
#define MAXGTRIDSIZE 445,16696
#define MAXBQUALSIZE 446,16720
#define COMPATIBLE_DATA_YES 448,16745
#define COMPATIBLE_DATA_NO 449,16775
struct xid_t 459,17087
  xid_t(465,17212
  bool eq(466,17283
  bool eq(468,17378
  void set(470,17497
  void set(472,17567
  void set(478,17740
  void set(488,18035
  bool is_null(495,18170
  void null(496,18214
  my_xid quick_get_my_xid(497,18246
  my_xid get_my_xid(503,18368
  uint length(509,18571
  uchar *key(key514,18704
  uint key_length(518,18762
typedef struct xid_t XID;523,18873
#define MIN_XID_LIST_SIZE 526,18936
#define MAX_XID_LIST_SIZE 527,18967
#define UNDEF_NODEGROUP 533,19151
enum ts_command_type534,19181
  TS_CMD_NOT_DEFINED 536,19204
  CREATE_TABLESPACE 537,19231
  ALTER_TABLESPACE 538,19256
  CREATE_LOGFILE_GROUP 539,19280
  ALTER_LOGFILE_GROUP 540,19308
  DROP_TABLESPACE 541,19335
  DROP_LOGFILE_GROUP 542,19358
  CHANGE_FILE_TABLESPACE 543,19384
  ALTER_ACCESS_MODE_TABLESPACE 544,19414
enum ts_alter_tablespace_type547,19453
  TS_ALTER_TABLESPACE_TYPE_NOT_DEFINED 549,19485
  ALTER_TABLESPACE_ADD_FILE 550,19530
  ALTER_TABLESPACE_DROP_FILE 551,19563
enum tablespace_access_mode554,19600
  TS_NOT_DEFINED=556,19630
  TS_READ_ONLY 557,19652
  TS_READ_WRITE 558,19672
  TS_NOT_ACCESSIBLE 559,19693
class st_alter_tablespace 563,19740
  st_alter_tablespace(st_alter_tablespace::st_alter_tablespace584,20360
enum enum_schema_tables613,21289
  SCH_CHARSETS=enum_schema_tables::SCH_CHARSETS615,21315
  SCH_COLLATIONS,enum_schema_tables::SCH_COLLATIONS616,21334
  SCH_COLLATION_CHARACTER_SET_APPLICABILITY,enum_schema_tables::SCH_COLLATION_CHARACTER_SET_APPLICABILITY617,21352
  SCH_COLUMNS,enum_schema_tables::SCH_COLUMNS618,21397
  SCH_COLUMN_PRIVILEGES,enum_schema_tables::SCH_COLUMN_PRIVILEGES619,21412
  SCH_ENGINES,enum_schema_tables::SCH_ENGINES620,21437
  SCH_EVENTS,enum_schema_tables::SCH_EVENTS621,21452
  SCH_FILES,enum_schema_tables::SCH_FILES622,21466
  SCH_GLOBAL_STATUS,enum_schema_tables::SCH_GLOBAL_STATUS623,21479
  SCH_GLOBAL_VARIABLES,enum_schema_tables::SCH_GLOBAL_VARIABLES624,21500
  SCH_KEY_COLUMN_USAGE,enum_schema_tables::SCH_KEY_COLUMN_USAGE625,21524
  SCH_OPEN_TABLES,enum_schema_tables::SCH_OPEN_TABLES626,21548
  SCH_PARAMETERS,enum_schema_tables::SCH_PARAMETERS627,21567
  SCH_PARTITIONS,enum_schema_tables::SCH_PARTITIONS628,21585
  SCH_PLUGINS,enum_schema_tables::SCH_PLUGINS629,21603
  SCH_PROCESSLIST,enum_schema_tables::SCH_PROCESSLIST630,21618
  SCH_PROFILES,enum_schema_tables::SCH_PROFILES631,21637
  SCH_REFERENTIAL_CONSTRAINTS,enum_schema_tables::SCH_REFERENTIAL_CONSTRAINTS632,21653
  SCH_PROCEDURES,enum_schema_tables::SCH_PROCEDURES633,21684
  SCH_SCHEMATA,enum_schema_tables::SCH_SCHEMATA634,21702
  SCH_SCHEMA_PRIVILEGES,enum_schema_tables::SCH_SCHEMA_PRIVILEGES635,21718
  SCH_SESSION_STATUS,enum_schema_tables::SCH_SESSION_STATUS636,21743
  SCH_SESSION_VARIABLES,enum_schema_tables::SCH_SESSION_VARIABLES637,21765
  SCH_STATISTICS,enum_schema_tables::SCH_STATISTICS638,21790
  SCH_STATUS,enum_schema_tables::SCH_STATUS639,21808
  SCH_TABLES,enum_schema_tables::SCH_TABLES640,21822
  SCH_TABLESPACES,enum_schema_tables::SCH_TABLESPACES641,21836
  SCH_TABLE_CONSTRAINTS,enum_schema_tables::SCH_TABLE_CONSTRAINTS642,21855
  SCH_TABLE_NAMES,enum_schema_tables::SCH_TABLE_NAMES643,21880
  SCH_TABLE_PRIVILEGES,enum_schema_tables::SCH_TABLE_PRIVILEGES644,21899
  SCH_TRIGGERS,enum_schema_tables::SCH_TRIGGERS645,21923
  SCH_USER_PRIVILEGES,enum_schema_tables::SCH_USER_PRIVILEGES646,21939
  SCH_VARIABLES,enum_schema_tables::SCH_VARIABLES647,21962
  SCH_VIEWSenum_schema_tables::SCH_VIEWS648,21979
typedef struct st_foreign_key_info FOREIGN_KEY_INFO;653,22043
typedef bool (stat_print_fn)654,22096
enum ha_stat_type 657,22297
enum ha_stat_type { HA_ENGINE_STATUS,ha_stat_type::HA_ENGINE_STATUS657,22297
enum ha_stat_type { HA_ENGINE_STATUS, HA_ENGINE_LOGS,ha_stat_type::HA_ENGINE_LOGS657,22297
enum ha_stat_type { HA_ENGINE_STATUS, HA_ENGINE_LOGS, HA_ENGINE_MUTEX ha_stat_type::HA_ENGINE_MUTEX657,22297
enum log_status661,22463
  HA_LOG_STATUS_FREE=log_status::HA_LOG_STATUS_FREE663,22481
  HA_LOG_STATUS_INUSE=log_status::HA_LOG_STATUS_INUSE664,22548
  HA_LOG_STATUS_NOSUCHLOG=log_status::HA_LOG_STATUS_NOSUCHLOG665,22626
struct handler_log_file_data 680,23102
enum handler_iterator_type686,23187
  HA_TRANSACTLOG_ITERATOR=handler_iterator_type::HA_TRANSACTLOG_ITERATOR689,23260
enum handler_create_iterator_result691,23292
  HA_ITERATOR_OK,handler_create_iterator_result::HA_ITERATOR_OK693,23330
  HA_ITERATOR_UNSUPPORTED,handler_create_iterator_result::HA_ITERATOR_UNSUPPORTED694,23380
  HA_ITERATOR_ERROR handler_create_iterator_result::HA_ITERATOR_ERROR695,23452
struct handler_iterator 705,23795
struct handlerton738,24862
#define MYSQL_HANDLERTON_INCLUDE_DISCOVER2 893,31290
#define HTON_NO_FLAGS 901,31581
#define HTON_CLOSE_CURSORS_AT_COMMIT 902,31621
#define HTON_ALTER_NOT_SUPPORTED 903,31667
#define HTON_CAN_RECREATE 904,31745
#define HTON_HIDDEN 905,31825
#define HTON_FLUSH_AFTER_RENAME 906,31905
#define HTON_NOT_USER_SELECTABLE 907,31951
#define HTON_TEMPORARY_NOT_SUPPORTED 908,31997
#define HTON_SUPPORT_LOG_TABLES 909,32083
#define HTON_NO_PARTITION 910,32158
struct THD_TRANS914,32262
  void reset(THD_TRANS::reset950,33917
  bool is_empty(THD_TRANS::is_empty951,33984
class Ha_trx_info972,34638
  void register_ha(Ha_trx_info::register_ha976,34738
  void reset(Ha_trx_info::reset990,35075
  Ha_trx_info(Ha_trx_info::Ha_trx_info997,35149
  void set_trx_read_write(Ha_trx_info::set_trx_read_write999,35179
  bool is_trx_read_write(Ha_trx_info::is_trx_read_write1004,35282
  bool is_started(Ha_trx_info::is_started1009,35397
  void coalesce_trx_with(Ha_trx_info::coalesce_trx_with1011,35521
  Ha_trx_info *next(Ha_trx_info::next1022,35862
  handlerton *ht(Ha_trx_info::ht1027,35948
  enum { TRX_READ_ONLY=Ha_trx_info::TRX_READ_ONLY1033,36038
  enum { TRX_READ_ONLY= 0, TRX_READ_WRITE=Ha_trx_info::TRX_READ_WRITE1033,36038
enum enum_tx_isolation 1051,36570
enum enum_tx_isolation { ISO_READ_UNCOMMITTED,enum_tx_isolation::ISO_READ_UNCOMMITTED1051,36570
enum enum_tx_isolation { ISO_READ_UNCOMMITTED, ISO_READ_COMMITTED,enum_tx_isolation::ISO_READ_COMMITTED1051,36570
			 ISO_REPEATABLE_READ,enum_tx_isolation::ISO_REPEATABLE_READ1052,36637
			 ISO_REPEATABLE_READ, ISO_SERIALIZABLE}enum_tx_isolation::ISO_SERIALIZABLE1052,36637
} PARTITION_STATS;1066,36951
#define UNDEF_NODEGROUP 1068,36971
#define NOT_A_PARTITION_ID 1075,37097
enum enum_ha_unused 1077,37138
enum enum_ha_unused { HA_CHOICE_UNDEF,enum_ha_unused::HA_CHOICE_UNDEF1077,37138
enum enum_ha_unused { HA_CHOICE_UNDEF, HA_CHOICE_NO,enum_ha_unused::HA_CHOICE_NO1077,37138
enum enum_ha_unused { HA_CHOICE_UNDEF, HA_CHOICE_NO, HA_CHOICE_YES enum_ha_unused::HA_CHOICE_YES1077,37138
typedef struct st_ha_create_information1079,37209
} HA_CREATE_INFO;1114,38533
class inplace_alter_handler_ctx 1132,39049
  inplace_alter_handler_ctx(inplace_alter_handler_ctx::inplace_alter_handler_ctx1135,39110
  virtual ~inplace_alter_handler_ctx(inplace_alter_handler_ctx::~inplace_alter_handler_ctx1137,39144
class Alter_inplace_info1147,39462
  typedef ulong HA_ALTER_FLAGS;Alter_inplace_info::HA_ALTER_FLAGS1165,40152
  Alter_inplace_info(Alter_inplace_info::Alter_inplace_info1337,45840
  ~Alter_inplace_info(Alter_inplace_info::~Alter_inplace_info1354,46354
typedef struct st_key_create_information1360,46414
} KEY_CREATE_INFO;1366,46554
class TABLEOP_HOOKS1383,47106
  TABLEOP_HOOKS(TABLEOP_HOOKS::TABLEOP_HOOKS1386,47136
  virtual ~TABLEOP_HOOKS(TABLEOP_HOOKS::~TABLEOP_HOOKS1387,47157
  inline void prelock(TABLEOP_HOOKS::prelock1389,47188
  inline int postlock(TABLEOP_HOOKS::postlock1394,47278
  virtual void do_prelock(TABLEOP_HOOKS::do_prelock1400,47450
  virtual int do_postlock(TABLEOP_HOOKS::do_postlock1413,47731
typedef struct st_savepoint SAVEPOINT;1419,47868
typedef class Item COND;1424,48058
typedef struct st_ha_check_opt1426,48084
  st_ha_check_opt(st_ha_check_opt::st_ha_check_opt1428,48117
} HA_CHECK_OPT;1433,48413
typedef struct st_handler_buffer1444,48675
} HANDLER_BUFFER;1449,48899
typedef struct system_status_var SSV;1451,48918
class ha_statistics1453,48957
  ha_statistics(ha_statistics::ha_statistics1478,49781
#define make_keypart_map(1491,50200
#define make_prev_keypart_map(1496,50350
class handler_add_index 1506,50617
  handler_add_index(handler_add_index::handler_add_index1515,50840
  virtual ~handler_add_index(handler_add_index::~handler_add_index1518,51004
class handler 1527,51233
  typedef ulonglong Table_flags;handler::Table_flags1530,51275
  enum {NONE=handler::NONE1562,52284
  enum {NONE=0, INDEX,handler::INDEX1562,52284
  enum {NONE=0, INDEX, RND}handler::RND1562,52284
  handler(handler::handler1610,54228
  virtual ~handler(handler::~handler1621,54657
  void init(handler::init1628,54897
  int ha_index_init(handler::ha_index_init1635,55097
  int ha_index_end(handler::ha_index_end1645,55394
  int ha_rnd_init(handler::ha_rnd_init1652,55534
  int ha_rnd_end(handler::ha_rnd_end1661,55824
  int ha_index_or_rnd_end(handler::ha_index_or_rnd_end1670,56040
  Table_flags ha_table_flags(handler::ha_table_flags1677,56233
  void ha_start_bulk_insert(handler::ha_start_bulk_insert1695,57026
  int ha_end_bulk_insert(handler::ha_end_bulk_insert1700,57142
  virtual bool is_auto_inc_singleton(handler::is_auto_inc_singleton1736,58574
  virtual void change_table_ptr(handler::change_table_ptr1743,58862
  virtual double scan_time(handler::scan_time1748,58986
  virtual double read_time(handler::read_time1750,59084
  virtual const key_map *keys_to_use_for_scanning(handler::keys_to_use_for_scanning1762,59465
  bool has_transactions(handler::has_transactions1763,59544
  virtual uint extra_rec_buf_length(handler::extra_rec_buf_length1765,59629
  virtual bool is_fatal_error(handler::is_fatal_error1777,60171
  virtual ha_rows records(handler::records1791,60556
  virtual ha_rows estimate_rows_upper_bound(handler::estimate_rows_upper_bound1798,60864
  virtual enum row_type get_row_type(handler::get_row_type1805,61107
  virtual const char *index_type(handler::index_type1807,61183
  uint get_index(handler::get_index1818,61672
  virtual bool start_bulk_update(handler::start_bulk_update1825,61873
  virtual bool start_bulk_delete(handler::start_bulk_delete1830,62039
  virtual int exec_bulk_update(handler::exec_bulk_update1842,62522
  virtual void end_bulk_update(handler::end_bulk_update1851,62735
  virtual int end_bulk_delete(handler::end_bulk_delete1858,62931
  virtual int index_read_map(handler::index_read_map1869,63223
  virtual int index_next(handler::index_next1885,63937
  virtual int index_prev(handler::index_prev1887,64012
  virtual int index_first(handler::index_first1889,64087
  virtual int index_last(handler::index_last1891,64163
  virtual int index_read_last_map(handler::index_read_last_map1899,64455
  virtual int ft_init(handler::ft_init1914,65253
  void ft_end(handler::ft_end1915,65310
  virtual FT_INFO *ft_init_ext(handler::ft_init_ext1916,65347
  virtual int ft_read(handler::ft_read1918,65433
  virtual int rnd_pos_by_record(handler::rnd_pos_by_record1926,65763
  virtual int restart_rnd_next(handler::restart_rnd_next1936,66052
  virtual int rnd_same(handler::rnd_same1938,66144
  virtual ha_rows records_in_range(handler::records_in_range1940,66226
  virtual int extra(handler::extra1952,66793
  virtual int extra_opt(handler::extra_opt1954,66863
  virtual bool was_semi_consistent_read(handler::was_semi_consistent_read1969,67604
  virtual void try_semi_consistent_read(handler::try_semi_consistent_read1976,67934
  virtual void unlock_row(handler::unlock_row1977,67983
  virtual int start_stmt(handler::start_stmt1978,68014
  void set_next_insert_id(handler::set_next_insert_id1983,68346
  void restore_auto_increment(handler::restore_auto_increment1988,68488
  virtual void update_create_info(handler::update_create_info2004,69263
  virtual int assign_to_keycache(handler::assign_to_keycache2006,69354
  virtual int preload_keys(handler::preload_keys2008,69461
  virtual int indexes_are_disabled(handler::indexes_are_disabled2012,69605
  virtual char *update_table_comment(handler::update_table_comment2013,69658
  virtual void append_create_info(handler::append_create_info2015,69746
  virtual bool is_fk_defined_on_table_or_index(handler::is_fk_defined_on_table_or_index2026,70214
  virtual char* get_foreign_key_create_info(handler::get_foreign_key_create_info2028,70293
  virtual char* get_tablespace_name(handler::get_tablespace_name2030,70408
  virtual bool can_switch_engines(handler::can_switch_engines2033,70611
  get_foreign_key_list(handler::get_foreign_key_list2046,70988
  get_parent_foreign_key_list(handler::get_parent_foreign_key_list2060,71411
  virtual uint referenced_by_foreign_key(handler::referenced_by_foreign_key2062,71503
  virtual void init_table_handle_for_HANDLER(handler::init_table_handle_for_HANDLER2063,71559
  virtual void free_foreign_key_create_info(handler::free_foreign_key_create_info2065,71659
  virtual int get_default_no_partitions(handler::get_default_no_partitions2081,72443
  virtual void set_auto_partitions(handler::set_auto_partitions2082,72518
  virtual bool get_no_parts(handler::get_no_parts2083,72592
  virtual void set_part_info(handler::set_part_info2089,72722
  virtual int add_index(handler::add_index2107,73385
  virtual int final_add_index(handler::final_add_index2120,73855
  virtual int prepare_drop_index(handler::prepare_drop_index2123,73960
  virtual int final_drop_index(handler::final_drop_index2126,74114
  uint max_record_length(handler::max_record_length2129,74201
  uint max_keys(handler::max_keys2131,74302
  uint max_key_parts(handler::max_key_parts2133,74375
  uint max_key_length(handler::max_key_length2135,74464
  uint max_key_part_length(handler::max_key_part_length2137,74556
  virtual uint max_supported_record_length(handler::max_supported_record_length2140,74659
  virtual uint max_supported_keys(handler::max_supported_keys2141,74740
  virtual uint max_supported_key_parts(handler::max_supported_key_parts2142,74796
  virtual uint max_supported_key_length(handler::max_supported_key_length2143,74869
  virtual uint max_supported_key_part_length(handler::max_supported_key_part_length2144,74944
  virtual uint min_record_length(handler::min_record_length2145,75013
  virtual bool low_byte_first(handler::low_byte_first2147,75081
  virtual uint checksum(handler::checksum2148,75133
  virtual bool is_crashed(handler::is_crashed2149,75179
  virtual bool auto_repair(handler::auto_repair2150,75228
#define CHF_CREATE_FLAG 2153,75279
#define CHF_DELETE_FLAG 2154,75305
#define CHF_RENAME_FLAG 2155,75331
#define CHF_INDEX_FLAG 2156,75357
  virtual uint lock_count(handler::lock_count2162,75472
  virtual uint8 table_cache_type(handler::table_cache_type2181,76205
  virtual my_bool register_query_cache_table(handler::register_query_cache_table2214,77699
 virtual bool primary_key_is_clustered(handler::primary_key_is_clustered2230,78220
 virtual int cmp_ref(handler::cmp_ref2231,78279
 virtual const COND *cond_push(handler::cond_push2262,79244
 virtual void cond_pop(handler::cond_pop2268,79455
 virtual bool check_if_incompatible_data(handler::check_if_incompatible_data2269,79493
  virtual uint alter_table_flags(handler::alter_table_flags2279,79852
  inline void psi_open(handler::psi_open2299,80404
  inline void psi_close(handler::psi_close2313,80717
  virtual int index_init(handler::index_init2349,81748
  virtual int index_end(handler::index_end2350,81829
  virtual int rnd_end(handler::rnd_end2359,82258
  virtual int write_row(handler::write_row2360,82296
  virtual int update_row(handler::update_row2365,82398
  virtual int delete_row(handler::delete_row2371,82578
  virtual int reset(handler::reset2380,82831
  virtual int external_lock(handler::external_lock2404,83866
  virtual void release_auto_increment(handler::release_auto_increment2409,84017
  virtual int check_for_upgrade(handler::check_for_upgrade2411,84126
  virtual int check(handler::check2413,84199
  virtual int repair(handler::repair2421,84424
  virtual void start_bulk_insert(handler::start_bulk_insert2426,84579
  virtual int end_bulk_insert(handler::end_bulk_insert2427,84629
  virtual int index_read(handler::index_read2428,84675
  virtual int index_read_last(handler::index_read_last2431,84841
  virtual int bulk_update_row(handler::bulk_update_row2446,85516
  virtual int delete_all_rows(handler::delete_all_rows2458,85904
  virtual int truncate(handler::truncate2478,86756
  virtual int reset_auto_increment(handler::reset_auto_increment2485,87032
  virtual int optimize(handler::optimize2487,87119
  virtual int analyze(handler::analyze2489,87216
  virtual bool check_and_repair(handler::check_and_repair2491,87312
  virtual int disable_indexes(handler::disable_indexes2492,87371
  virtual int enable_indexes(handler::enable_indexes2493,87445
  virtual int discard_or_import_tablespace(handler::discard_or_import_tablespace2494,87518
  virtual void prepare_for_alter(handler::prepare_for_alter2496,87624
  virtual int create_handler_files(handler::create_handler_files2500,87794
  virtual int change_partitions(handler::change_partitions2504,87964
  virtual int drop_partitions(handler::drop_partitions2511,88340
  virtual int rename_partitions(handler::rename_partitions2513,88423
  virtual int prepare_index_scan(handler::prepare_index_scan2517,88518
  virtual int prepare_index_key_scan_map(handler::prepare_index_key_scan_map2519,88569
  virtual int prepare_index_key_scan(handler::prepare_index_key_scan2524,88789
  virtual int prepare_range_scan(handler::prepare_range_scan2526,88877
  virtual int new_alter_table_frm_data(handler::new_alter_table_frm_data2528,88980
  virtual bool try_hot_alter_table(handler::try_hot_alter_table2530,89074
 bool ha_inplace_alter_table(handler::ha_inplace_alter_table2652,94746
 void ha_notify_table_changed(handler::ha_notify_table_changed2672,95377
 virtual bool prepare_inplace_alter_table(handler::prepare_inplace_alter_table2706,96670
 virtual bool inplace_alter_table(handler::inplace_alter_table2730,97649
 virtual bool commit_inplace_alter_table(handler::commit_inplace_alter_table2763,99071
  virtual int fast_update(handler::fast_update2794,100393
  virtual int upsert(handler::upsert2796,100518
static inline enum legacy_db_type ha_legacy_type(2821,101469
static inline const char *ha_resolve_storage_engine_name(ha_resolve_storage_engine_name2826,101615
static inline bool ha_check_storage_engine_flag(2831,101781
static inline bool ha_storage_engine_is_enabled(2836,101938
#define trans_need_2pc(2913,104975
#define ha_reset_logs(2927,105582
#define ha_binlog_index_purge_file(2928,105623
#define ha_reset_slave(2929,105679
#define ha_binlog_log_query(2930,105721
#define ha_binlog_wait(2931,105780
#define ha_binlog_end(2932,105822
inline const char *table_case_name(table_case_name2940,106027

sql/hash_filo.h,369
#define  HASH_FILO_H23,878
class hash_filo_element33,1141
  hash_filo_element(hash_filo_element::hash_filo_element37,1219
class hash_filo42,1275
  hash_filo(hash_filo::hash_filo55,1535
  ~hash_filo(hash_filo::~hash_filo65,1939
  void clear(hash_filo::clear74,2123
  hash_filo_element *search(hash_filo::search91,2542
  my_bool add(hash_filo::add114,3111

sql/hostname.h,33
#define HOSTNAME_INCLUDED17,772

sql/init.h,53
#define INIT_INCLUDED17,768
void unireg_end(22,885

sql/item.h,35872
#define ITEM_INCLUDED2,22
char_to_byte_length_safe(39,1397
#define MY_COLL_ALLOW_SUPERSET_CONV 64,2440
#define MY_COLL_ALLOW_COERCIBLE_CONV 65,2480
#define MY_COLL_DISALLOW_NONE 66,2520
#define MY_COLL_ALLOW_NUMERIC_CONV 67,2560
#define MY_COLL_ALLOW_CONV 69,2601
#define MY_COLL_CMP_CONV 70,2689
class DTCollation 72,2762
  void set_repertoire_from_charset(DTCollation::set_repertoire_from_charset78,2873
  DTCollation(DTCollation::DTCollation83,3043
  DTCollation(DTCollation::DTCollation89,3173
  void set(DTCollation::set95,3361
  void set(DTCollation::set101,3489
  void set(DTCollation::set107,3674
  void set_numeric(DTCollation::set_numeric115,3886
  void set(DTCollation::set121,4026
  void set(DTCollation::set126,4152
  bool set(DTCollation::set129,4274
  const char *derivation_name(DTCollation::derivation_name131,4382
struct Hybrid_type156,5135
  Hybrid_type(Hybrid_type::Hybrid_type177,5707
  Hybrid_type(Hybrid_type::Hybrid_type179,5770
struct Hybrid_type_traits185,5913
  virtual Item_result type(Hybrid_type_traits::type187,5941
  virtual void set_zero(Hybrid_type_traits::set_zero193,6100
  virtual void add(Hybrid_type_traits::add194,6168
  virtual void div(Hybrid_type_traits::div196,6254
  virtual longlong val_int(Hybrid_type_traits::val_int199,6350
  virtual double val_real(Hybrid_type_traits::val_real201,6462
  Hybrid_type_traits(Hybrid_type_traits::Hybrid_type_traits205,6737
  virtual ~Hybrid_type_traits(Hybrid_type_traits::~Hybrid_type_traits206,6763
struct Hybrid_type_traits_decimal:Hybrid_type_traits_decimal210,6803
  virtual Item_result type(Hybrid_type_traits_decimal::type212,6866
  virtual my_decimal *val_decimal(Hybrid_type_traits_decimal::val_decimal224,7312
  Hybrid_type_traits_decimal(Hybrid_type_traits_decimal::Hybrid_type_traits_decimal228,7572
struct Hybrid_type_traits_integer:Hybrid_type_traits_integer232,7612
  virtual Item_result type(Hybrid_type_traits_integer::type234,7675
  virtual void set_zero(Hybrid_type_traits_integer::set_zero240,7833
  virtual void add(Hybrid_type_traits_integer::add242,7904
  virtual void div(Hybrid_type_traits_integer::div244,7992
  virtual longlong val_int(Hybrid_type_traits_integer::val_int247,8084
  virtual double val_real(Hybrid_type_traits_integer::val_real249,8182
  virtual my_decimal *val_decimal(Hybrid_type_traits_integer::val_decimal251,8268
  virtual String *val_str(Hybrid_type_traits_integer::val_str256,8454
  Hybrid_type_traits_integer(Hybrid_type_traits_integer::Hybrid_type_traits_integer259,8646
struct Name_resolution_context:Name_resolution_context282,9430
  Name_resolution_context(Name_resolution_context::Name_resolution_context341,11528
  void init(Name_resolution_context::init347,11666
  void resolve_in_table_list_only(Name_resolution_context::resolve_in_table_list_only355,11846
  void process_error(Name_resolution_context::process_error361,11997
class Name_resolution_context_state372,12167
  Name_resolution_context_state(Name_resolution_context_state::Name_resolution_context_state382,12423
  void save_state(Name_resolution_context_state::save_state386,12556
  void restore_state(Name_resolution_context_state::restore_state396,13047
  TABLE_LIST *get_first_name_resolution_table(Name_resolution_context_state::get_first_name_resolution_table405,13481
typedef enum monotonicity_info 438,14658
   NON_MONOTONIC,monotonicity_info::NON_MONOTONIC440,14692
   MONOTONIC_INCREASING,monotonicity_info::MONOTONIC_INCREASING441,14753
   MONOTONIC_INCREASING_NOT_NULL,monotonicity_info::MONOTONIC_INCREASING_NOT_NULL442,14833
   MONOTONIC_STRICT_INCREASING,monotonicity_info::MONOTONIC_STRICT_INCREASING443,14906
   MONOTONIC_STRICT_INCREASING_NOT_NULL monotonicity_info::MONOTONIC_STRICT_INCREASING_NOT_NULL444,14986
} enum_monotonicity_info;445,15065
class Settable_routine_parameter452,15190
  Settable_routine_parameter(Settable_routine_parameter::Settable_routine_parameter465,15602
  virtual ~Settable_routine_parameter(Settable_routine_parameter::~Settable_routine_parameter466,15636
  virtual void set_required_privilege(Settable_routine_parameter::set_required_privilege467,15679
  virtual void set_out_param_info(Settable_routine_parameter::set_out_param_info485,16137
  virtual const Send_field *get_out_param_info(Settable_routine_parameter::get_out_param_info487,16193
typedef bool (Item::*Item_processor)Item_processor492,16272
typedef bool (Item::*Item_analyzer)Item_analyzer504,16548
typedef Item* (Item::*Item_transformer)Item_transformer505,16600
typedef void (*Cond_traverser)Cond_traverser506,16654
class Item 509,16718
  static void *operator new(Item::operator new513,16816
  static void *operator new(Item::operator new515,16896
  static void operator delete(Item::operator delete517,17007
  static void operator delete(Item::operator delete518,17082
  enum Type Item::Type520,17147
  enum Type {FIELD_ITEM=Item::Type::FIELD_ITEM520,17147
  enum Type {FIELD_ITEM= 0, FUNC_ITEM,Item::Type::FUNC_ITEM520,17147
  enum Type {FIELD_ITEM= 0, FUNC_ITEM, SUM_FUNC_ITEM,Item::Type::SUM_FUNC_ITEM520,17147
  enum Type {FIELD_ITEM= 0, FUNC_ITEM, SUM_FUNC_ITEM, STRING_ITEM,Item::Type::STRING_ITEM520,17147
	     INT_ITEM,Item::Type::INT_ITEM521,17214
	     INT_ITEM, REAL_ITEM,Item::Type::REAL_ITEM521,17214
	     INT_ITEM, REAL_ITEM, NULL_ITEM,Item::Type::NULL_ITEM521,17214
	     INT_ITEM, REAL_ITEM, NULL_ITEM, VARBIN_ITEM,Item::Type::VARBIN_ITEM521,17214
	     COPY_STR_ITEM,Item::Type::COPY_STR_ITEM522,17265
	     COPY_STR_ITEM, FIELD_AVG_ITEM,Item::Type::FIELD_AVG_ITEM522,17265
	     COPY_STR_ITEM, FIELD_AVG_ITEM, DEFAULT_VALUE_ITEM,Item::Type::DEFAULT_VALUE_ITEM522,17265
	     PROC_ITEM,Item::Type::PROC_ITEM523,17322
	     PROC_ITEM,COND_ITEM,Item::Type::COND_ITEM523,17322
	     PROC_ITEM,COND_ITEM, REF_ITEM,Item::Type::REF_ITEM523,17322
	     PROC_ITEM,COND_ITEM, REF_ITEM, FIELD_STD_ITEM,Item::Type::FIELD_STD_ITEM523,17322
	     FIELD_VARIANCE_ITEM,Item::Type::FIELD_VARIANCE_ITEM524,17375
	     FIELD_VARIANCE_ITEM, INSERT_VALUE_ITEM,Item::Type::INSERT_VALUE_ITEM524,17375
             SUBSELECT_ITEM,Item::Type::SUBSELECT_ITEM525,17421
             SUBSELECT_ITEM, ROW_ITEM,Item::Type::ROW_ITEM525,17421
             SUBSELECT_ITEM, ROW_ITEM, CACHE_ITEM,Item::Type::CACHE_ITEM525,17421
             SUBSELECT_ITEM, ROW_ITEM, CACHE_ITEM, TYPE_HOLDER,Item::Type::TYPE_HOLDER525,17421
             PARAM_ITEM,Item::Type::PARAM_ITEM526,17485
             PARAM_ITEM, TRIGGER_FIELD_ITEM,Item::Type::TRIGGER_FIELD_ITEM526,17485
             PARAM_ITEM, TRIGGER_FIELD_ITEM, DECIMAL_ITEM,Item::Type::DECIMAL_ITEM526,17485
             XPATH_NODESET,Item::Type::XPATH_NODESET527,17544
             XPATH_NODESET, XPATH_NODESET_CMP,Item::Type::XPATH_NODESET_CMP527,17544
             VIEW_FIXER_ITEM}Item::Type::VIEW_FIXER_ITEM528,17591
  enum cond_result Item::cond_result530,17623
  enum cond_result { COND_UNDEF,Item::cond_result::COND_UNDEF530,17623
  enum cond_result { COND_UNDEF,COND_OK,Item::cond_result::COND_OK530,17623
  enum cond_result { COND_UNDEF,COND_OK,COND_TRUE,Item::cond_result::COND_TRUE530,17623
  enum cond_result { COND_UNDEF,COND_OK,COND_TRUE,COND_FALSE Item::cond_result::COND_FALSE530,17623
  enum traverse_order Item::traverse_order532,17688
  enum traverse_order { POSTFIX,Item::traverse_order::POSTFIX532,17688
  enum traverse_order { POSTFIX, PREFIX Item::traverse_order::PREFIX532,17688
  virtual ~Item(Item::~Item584,19692
  inline void quick_fix_field(Item::quick_fix_field601,20221
  virtual void save_org_in_field(Item::save_org_in_field605,20461
  virtual int save_safe_in_field(Item::save_safe_in_field607,20546
  virtual Item_result result_type(Item::result_type611,20741
  virtual Item_result cast_to_int_type(Item::cast_to_int_type612,20807
  virtual enum_monotonicity_info get_monotonicity_info(Item::get_monotonicity_info622,21201
  virtual longlong val_int_endpoint(Item::val_int_endpoint658,22590
  inline ulonglong val_uint(Item::val_uint689,23448
  virtual String *val_nodeset(Item::val_nodeset823,28329
  virtual Field *get_tmp_table_field(Item::get_tmp_table_field840,29094
  virtual Field *tmp_table_field(Item::tmp_table_field842,29212
  virtual const char *full_name(Item::full_name843,29273
  virtual double  val_result(Item::val_result851,29613
  virtual longlong val_int_result(Item::val_int_result852,29667
  virtual String *str_result(Item::str_result853,29725
  virtual my_decimal *val_decimal_result(Item::val_decimal_result854,29792
  virtual bool val_bool_result(Item::val_bool_result856,29881
  virtual bool is_null_result(Item::is_null_result857,29937
  virtual table_map used_tables(Item::used_tables860,30031
  virtual table_map not_null_tables(Item::not_null_tables872,30671
  virtual bool basic_const_item(Item::basic_const_item877,30902
  virtual Item *clone_item(Item::clone_item879,31013
  virtual cond_result eq_cmp_result(Item::eq_cmp_result880,31056
  inline uint float_length(Item::float_length881,31120
  inline int decimal_int_part(Item::decimal_int_part884,31292
  virtual bool const_item(Item::const_item890,31550
  virtual bool const_during_execution(Item::const_during_execution895,31772
  virtual inline void print(Item::print909,32286
  virtual void update_used_tables(Item::update_used_tables915,32458
  virtual void split_sum_func(Item::split_sum_func916,32497
  virtual bool get_date_result(Item::get_date_result923,32910
  virtual bool is_null(Item::is_null932,33347
  virtual void update_null_value Item::update_null_value937,33453
  virtual void top_level_item(Item::top_level_item949,33888
  virtual void set_result_field(Item::set_result_field954,34065
  virtual bool is_result_field(Item::is_result_field955,34114
  virtual bool is_bool_func(Item::is_bool_func956,34161
  virtual void save_in_result_field(Item::save_in_result_field957,34205
  virtual void no_rows_in_result(Item::no_rows_in_result961,34354
  virtual Item *copy_or_same(Item::copy_or_same962,34392
  virtual Item *copy_andor_structure(Item::copy_andor_structure963,34448
  virtual Item *real_item(Item::real_item964,34512
  virtual Item *get_tmp_table_item(Item::get_tmp_table_item965,34557
  virtual CHARSET_INFO *compare_collation(Item::compare_collation968,34675
  virtual CHARSET_INFO *charset_for_protocol(Item::charset_for_protocol974,34859
  virtual bool walk(Item::walk980,35053
  virtual Item* compile(Item::compile1003,35633
   virtual void traverse_cond(Item::traverse_cond1011,35867
  virtual bool intro_version(Item::intro_version1024,36336
  virtual bool remove_dependence_processor(Item::remove_dependence_processor1026,36396
  virtual bool remove_fixed(Item::remove_fixed1027,36466
  virtual bool collect_item_field_processor(Item::collect_item_field_processor1029,36577
  virtual bool find_item_in_field_list_processor(Item::find_item_in_field_list_processor1030,36648
  virtual bool change_context_processor(Item::change_context_processor1031,36723
  virtual bool reset_query_id_processor(Item::reset_query_id_processor1032,36793
  virtual bool is_expensive_processor(Item::is_expensive_processor1033,36868
  virtual bool find_item_processor(Item::find_item_processor1034,36932
  virtual bool register_field_in_read_map(Item::register_field_in_read_map1035,37012
  virtual bool check_partition_func_processor(Item::check_partition_func_processor1090,39919
  virtual bool subst_argument_checker(Item::subst_argument_checker1091,39998
  virtual Item *equal_fields_propagator(Item::equal_fields_propagator1098,40114
  virtual bool set_no_const_sub(Item::set_no_const_sub1099,40184
  virtual Item *replace_equal_field(Item::replace_equal_field1100,40246
  virtual bool check_valid_arguments_processor(Item::check_valid_arguments_processor1106,40530
  virtual bool find_function_processor Item::find_function_processor1123,41006
  virtual Item *this_item(Item::this_item1132,41219
  virtual const Item *this_item(Item::this_item1133,41264
  virtual Item **this_item_addr(Item::this_item_addr1139,41472
  virtual uint cols(Item::cols1142,41572
  virtual Item* element_index(Item::element_index1143,41608
  virtual Item** addr(Item::addr1144,41663
  virtual bool null_inside(Item::null_inside1147,41790
  virtual void bring_value(Item::bring_value1149,41886
  virtual Item_field *filed_for_view_update(Item::filed_for_view_update1152,41994
  virtual Item *neg_transformer(Item::neg_transformer1154,42055
  virtual Item *update_value_transformer(Item::update_value_transformer1155,42114
  void delete_self(Item::delete_self1157,42251
  virtual bool is_splocal(Item::is_splocal1163,42313
  virtual Settable_routine_parameter *get_settable_routine_parameter(Item::get_settable_routine_parameter1169,42521
  virtual bool result_as_longlong(Item::result_as_longlong1180,42943
  inline bool is_datetime(Item::is_datetime1181,42997
  inline bool has_compatible_context(Item::has_compatible_context1203,43566
  virtual Field::geometry_type get_geometry_type(Item::get_geometry_type1215,43989
  uint32 max_char_length(Item::max_char_length1219,44225
  void fix_length_and_charset(Item::fix_length_and_charset1221,44315
  void fix_char_length(Item::fix_char_length1226,44505
  void fix_char_length_ulonglong(Item::fix_char_length_ulonglong1231,44699
  void fix_length_and_charset_datetime(Item::fix_length_and_charset_datetime1243,45057
  virtual bool is_outer_field(Item::is_outer_field1251,45338
  virtual bool has_subquery(Item::has_subquery1256,45496
class Item_basic_constant 1263,45581
  Item_basic_constant(Item_basic_constant::Item_basic_constant1267,45658
  void set_used_tables(Item_basic_constant::set_used_tables1268,45713
  table_map used_tables(Item_basic_constant::used_tables1269,45776
  void cleanup(Item_basic_constant::cleanup1271,45900
class Item_sp_variable 1291,46584
inline void Item_sp_variable::make_field(1337,47660
inline bool Item_sp_variable::const_item(1348,47934
inline int Item_sp_variable::save_in_field(1353,48003
inline bool Item_sp_variable::send(1358,48146
class Item_splocal 1369,48511
  bool is_splocal(Item_splocal::is_splocal1409,49958
  inline enum_field_types field_type(Item_splocal::field_type1424,50352
  Settable_routine_parameter *get_settable_routine_parameter(Item_splocal::get_settable_routine_parameter1430,50498
inline const LEX_STRING *Item_splocal::my_name(Item_splocal::my_name1440,50787
inline uint Item_splocal::get_var_idx(1445,50865
inline enum Item::Type Item_splocal::type(1450,50936
inline Item_result Item_splocal::result_type(1455,51008
class Item_case_expr 1465,51307
inline enum Item::Type Item_case_expr::type(1494,52054
inline Item_result Item_case_expr::result_type(1499,52141
class Item_name_const 1519,52748
  Item_result result_type(Item_name_const::result_type1537,53158
  bool const_item(Item_name_const::const_item1542,53239
  int save_in_field(Item_name_const::save_in_field1547,53291
  bool send(Item_name_const::send1552,53417
agg_item_charsets_for_string_result(1567,54102
agg_item_charsets_for_comparison(1577,54504
agg_item_charsets_for_string_result_with_comparison(1587,54892
class Item_num:Item_num1600,55422
  Item_num(Item_num::Item_num1603,55475
  bool check_partition_func_processor(Item_num::check_partition_func_processor1606,55624
#define NO_CACHED_FIELD_INDEX 1609,55699
class Item_ident 1612,55764
  virtual bool change_context_processor(Item_ident::change_context_processor1653,57275
class Item_ident_for_show 1662,57645
  Item_ident_for_show(Item_ident_for_show::Item_ident_for_show1669,57760
  enum Type type(Item_ident_for_show::type1674,57943
  double val_real(Item_ident_for_show::val_real1675,57991
  longlong val_int(Item_ident_for_show::val_int1676,58041
  String *val_str(Item_ident_for_show::val_str1677,58091
  my_decimal *val_decimal(Item_ident_for_show::val_decimal1678,58154
  CHARSET_INFO *charset_for_protocol(Item_ident_for_show::charset_for_protocol1680,58275
class Item_field 1688,58410
  enum Type type(Item_field::type1722,59562
  enum Item_result result_type Item_field::result_type1741,60245
  Item_result cast_to_int_type(Item_field::cast_to_int_type1745,60326
  enum_field_types field_type(Item_field::field_type1749,60411
  enum_monotonicity_info get_monotonicity_info(Item_field::get_monotonicity_info1753,60483
  Field *get_tmp_table_field(Item_field::get_tmp_table_field1758,60648
  Field *tmp_table_field(Item_field::tmp_table_field1759,60704
  bool is_null(Item_field::is_null1763,60913
  bool check_partition_func_processor(Item_field::check_partition_func_processor1769,61176
  bool result_as_longlong(Item_field::result_as_longlong1771,61264
  inline uint32 max_disp_length(Item_field::max_disp_length1780,61571
  Item_field *filed_for_view_update(Item_field::filed_for_view_update1781,61645
  bool is_outer_field(Item_field::is_outer_field1786,61942
  Field::geometry_type get_geometry_type(Item_field::get_geometry_type1791,62060
  CHARSET_INFO *charset_for_protocol(Item_field::charset_for_protocol1796,62210
class Item_null 1803,62411
  Item_null(Item_null::Item_null1806,62465
  enum Type type(Item_null::type1814,62676
  enum Item_result result_type Item_null::result_type1823,63033
  enum_field_types field_type(Item_null::field_type1824,63099
  bool basic_const_item(Item_null::basic_const_item1825,63167
  Item *clone_item(Item_null::clone_item1826,63213
  bool is_null(Item_null::is_null1827,63266
  virtual inline void print(Item_null::print1829,63298
  bool check_partition_func_processor(Item_null::check_partition_func_processor1835,63470
class Item_null_result 1838,63544
  Item_null_result(Item_null_result::Item_null_result1842,63618
  bool is_result_field(Item_null_result::is_result_field1843,63673
  void save_in_result_field(Item_null_result::save_in_result_field1844,63728
  bool check_partition_func_processor(Item_null_result::check_partition_func_processor1848,63834
class Item_param 1853,63976
  enum enum_item_param_stateItem_param::enum_item_param_state1861,64137
    NO_VALUE,Item_param::enum_item_param_state::NO_VALUE1863,64170
    NO_VALUE, NULL_VALUE,Item_param::enum_item_param_state::NULL_VALUE1863,64170
    NO_VALUE, NULL_VALUE, INT_VALUE,Item_param::enum_item_param_state::INT_VALUE1863,64170
    NO_VALUE, NULL_VALUE, INT_VALUE, REAL_VALUE,Item_param::enum_item_param_state::REAL_VALUE1863,64170
    STRING_VALUE,Item_param::enum_item_param_state::STRING_VALUE1864,64219
    STRING_VALUE, TIME_VALUE,Item_param::enum_item_param_state::TIME_VALUE1864,64219
    STRING_VALUE, TIME_VALUE, LONG_DATA_VALUE,Item_param::enum_item_param_state::LONG_DATA_VALUE1864,64219
    DECIMAL_VALUEItem_param::enum_item_param_state::DECIMAL_VALUE1865,64266
    struct CONVERSION_INFOItem_param::CONVERSION_INFO1890,65241
  enum Item_result result_type Item_param::result_type1926,66501
  enum Type type(Item_param::type1927,66570
  enum_field_types field_type(Item_param::field_type1928,66617
  virtual table_map used_tables(Item_param::used_tables1965,67945
  bool is_null(Item_param::is_null1968,68113
    get_settable_routine_parameter(Item_param::get_settable_routine_parameter1995,69242
class Item_int 2014,69583
  Item_int(Item_int::Item_int2018,69643
  Item_int(Item_int::Item_int2021,69766
  Item_int(Item_int::Item_int2024,69881
  Item_int(Item_int::Item_int2027,70026
  enum Type type(Item_int::type2030,70199
  enum Item_result result_type Item_int::result_type2031,70245
  enum_field_types field_type(Item_int::field_type2032,70308
  longlong val_int(Item_int::val_int2033,70378
  double val_real(Item_int::val_real2034,70442
  bool basic_const_item(Item_int::basic_const_item2038,70639
  Item *clone_item(Item_int::clone_item2039,70685
  Item_num *neg(Item_int::neg2041,70817
  uint decimal_precision(Item_int::decimal_precision2042,70867
  bool check_partition_func_processor(Item_int::check_partition_func_processor2045,70999
class Item_uint 2049,71076
  Item_uint(Item_uint::Item_uint2053,71166
  double val_real(Item_uint::val_real2055,71282
  Item *clone_item(Item_uint::clone_item2058,71406
  uint decimal_precision(Item_uint::decimal_precision2062,71617
  bool check_partition_func_processor(Item_uint::check_partition_func_processor2063,71673
class Item_decimal 2068,71787
  enum Type type(Item_decimal::type2081,72247
  enum Item_result result_type Item_decimal::result_type2082,72297
  enum_field_types field_type(Item_decimal::field_type2083,72364
  my_decimal *val_decimal(Item_decimal::val_decimal2087,72507
  bool basic_const_item(Item_decimal::basic_const_item2089,72633
  Item *clone_item(Item_decimal::clone_item2090,72679
  Item_num *neg(Item_decimal::neg2095,72844
  uint decimal_precision(Item_decimal::decimal_precision2101,72965
  bool check_partition_func_processor(Item_decimal::check_partition_func_processor2104,73133
class Item_float 2108,73210
  Item_float(Item_float::Item_float2115,73370
  Item_float(Item_float::Item_float2123,73579
  enum Type type(Item_float::type2129,73776
  enum_field_types field_type(Item_float::field_type2130,73823
  double val_real(Item_float::val_real2131,73891
  longlong val_int(Item_float::val_int2132,73954
  bool basic_const_item(Item_float::basic_const_item2147,74292
  Item *clone_item(Item_float::clone_item2148,74338
  Item_num *neg(Item_float::neg2150,74423
class Item_static_float_func 2156,74589
  Item_static_float_func(Item_static_float_func::Item_static_float_func2160,74672
  virtual inline void print(Item_static_float_func::print2165,74860
class Item_string 2174,75023
  Item_string(Item_string::Item_string2177,75079
  Item_string(Item_string::Item_string2198,75981
  Item_string(Item_string::Item_string2207,76202
  void set_str_with_copy(Item_string::set_str_with_copy2224,76834
  void set_repertoire_from_value(Item_string::set_repertoire_from_value2229,77037
  enum Type type(Item_string::type2235,77280
  String *val_str(Item_string::val_str2238,77372
  enum Item_result result_type Item_string::result_type2245,77566
  enum_field_types field_type(Item_string::field_type2246,77632
  bool basic_const_item(Item_string::basic_const_item2247,77701
  Item *clone_item(Item_string::clone_item2249,77799
  inline void append(Item_string::append2255,77984
  bool check_partition_func_processor(Item_string::check_partition_func_processor2261,78205
  inline bool is_cs_specified(Item_string::is_cs_specified2282,79167
  inline void set_cs_specified(Item_string::set_cs_specified2297,79592
class Item_static_string_func 2312,79901
  Item_static_string_func(Item_static_string_func::Item_static_string_func2316,79986
  virtual inline void print(Item_static_string_func::print2323,80295
  bool check_partition_func_processor(Item_static_string_func::check_partition_func_processor2328,80401
class Item_partition_func_safe_string:Item_partition_func_safe_string2333,80497
  Item_partition_func_safe_string(Item_partition_func_safe_string::Item_partition_func_safe_string2336,80565
class Item_return_date_time 2343,80733
  Item_return_date_time(Item_return_date_time::Item_return_date_time2347,80852
  enum_field_types field_type(Item_return_date_time::field_type2351,81047
class Item_blob 2355,81123
  Item_blob(Item_blob::Item_blob2358,81189
  enum Type type(Item_blob::type2361,81327
  enum_field_types field_type(Item_blob::field_type2362,81376
class Item_empty_string 2372,81630
  Item_empty_string(Item_empty_string::Item_empty_string2375,81704
class Item_return_int 2382,81987
  Item_return_int(Item_return_int::Item_return_int2386,82071
  enum_field_types field_type(Item_return_int::field_type2392,82280
class Item_hex_string:Item_hex_string2396,82350
  enum Type type(Item_hex_string::type2401,82483
  double val_real(Item_hex_string::val_real2402,82532
  bool basic_const_item(Item_hex_string::basic_const_item2408,82673
  String *val_str(Item_hex_string::val_str2409,82719
  enum Item_result result_type Item_hex_string::result_type2412,82891
  enum Item_result cast_to_int_type(Item_hex_string::cast_to_int_type2413,82957
  enum_field_types field_type(Item_hex_string::field_type2414,83024
  bool check_partition_func_processor(Item_hex_string::check_partition_func_processor2418,83268
class Item_bin_string:Item_bin_string2424,83410
class Item_result_field 2430,83522
  Item_result_field(Item_result_field::Item_result_field2434,83647
  Item_result_field(Item_result_field::Item_result_field2436,83760
  ~Item_result_field(Item_result_field::~Item_result_field2439,83875
  Field *get_tmp_table_field(Item_result_field::get_tmp_table_field2440,83932
  Field *tmp_table_field(Item_result_field::tmp_table_field2441,83988
  table_map used_tables(Item_result_field::used_tables2442,84052
  void set_result_field(Item_result_field::set_result_field2444,84137
  bool is_result_field(Item_result_field::is_result_field2445,84200
  void save_in_result_field(Item_result_field::save_in_result_field2446,84239
class Item_ref 2471,85256
  enum Ref_Type Item_ref::Ref_Type2476,85336
  enum Ref_Type { REF,Item_ref::Ref_Type::REF2476,85336
  enum Ref_Type { REF, DIRECT_REF,Item_ref::Ref_Type::DIRECT_REF2476,85336
  enum Ref_Type { REF, DIRECT_REF, VIEW_REF,Item_ref::Ref_Type::VIEW_REF2476,85336
  enum Ref_Type { REF, DIRECT_REF, VIEW_REF, OUTER_REF,Item_ref::Ref_Type::OUTER_REF2476,85336
  enum Ref_Type { REF, DIRECT_REF, VIEW_REF, OUTER_REF, AGGREGATE_REF Item_ref::Ref_Type::AGGREGATE_REF2476,85336
  Item_ref(Item_ref::Item_ref2479,85472
  Item_ref(Item_ref::Item_ref2505,86752
  enum Type type(Item_ref::type2507,86869
  bool eq(Item_ref::eq2508,86916
  enum Item_result result_type Item_ref::result_type2531,87667
  enum_field_types field_type(Item_ref::field_type2532,87741
  Field *get_tmp_table_field(Item_ref::get_tmp_table_field2533,87814
  bool const_item(Item_ref::const_item2536,87957
  table_map used_tables(Item_ref::used_tables2540,88048
  void update_used_tables(Item_ref::update_used_tables2544,88163
  table_map not_null_tables(Item_ref::not_null_tables2549,88263
  void set_result_field(Item_ref::set_result_field2550,88337
  bool is_result_field(Item_ref::is_result_field2551,88400
  void save_in_result_field(Item_ref::save_in_result_field2552,88439
  Item *real_item(Item_ref::real_item2556,88553
  bool walk(Item_ref::walk2560,88626
  bool result_as_longlong(Item_ref::result_as_longlong2566,88861
  Item_field *filed_for_view_update(Item_ref::filed_for_view_update2571,88956
  virtual Ref_Type ref_type(Item_ref::ref_type2573,89042
  uint cols(Item_ref::cols2576,89148
  Item* element_index(Item_ref::element_index2580,89238
  Item** addr(Item_ref::addr2584,89357
  bool check_cols(Item_ref::check_cols2588,89456
  bool null_inside(Item_ref::null_inside2593,89630
  void bring_value(Item_ref::bring_value2597,89734
  bool get_time(Item_ref::get_time2602,89837
  virtual bool basic_const_item(Item_ref::basic_const_item2607,89940
  bool is_outer_field(Item_ref::is_outer_field2608,90026
  virtual bool has_subquery(Item_ref::has_subquery2618,90227
class Item_direct_ref 2629,90456
  Item_direct_ref(Item_direct_ref::Item_direct_ref2632,90505
  Item_direct_ref(Item_direct_ref::Item_direct_ref2640,90901
  Item_direct_ref(Item_direct_ref::Item_direct_ref2641,90977
  virtual Ref_Type ref_type(Item_direct_ref::ref_type2655,91418
class Item_direct_view_ref 2662,91594
  Item_direct_view_ref(Item_direct_view_ref::Item_direct_view_ref2665,91655
  Item_direct_view_ref(Item_direct_view_ref::Item_direct_view_ref2670,91975
  Item_direct_view_ref(Item_direct_view_ref::Item_direct_view_ref2672,92066
  Item *get_tmp_table_item(Item_direct_view_ref::get_tmp_table_item2679,92321
  virtual Ref_Type ref_type(Item_direct_view_ref::ref_type2685,92456
class Item_outer_ref 2701,92968
  Item_outer_ref(Item_outer_ref::Item_outer_ref2712,93276
  Item_outer_ref(Item_outer_ref::Item_outer_ref2723,93635
  void save_in_result_field(Item_outer_ref::save_in_result_field2730,93997
  table_map used_tables(Item_outer_ref::used_tables2735,94137
  table_map not_null_tables(Item_outer_ref::not_null_tables2739,94236
  virtual Ref_Type ref_type(Item_outer_ref::ref_type2741,94287
class Item_ref_null_helper:Item_ref_null_helper2757,94723
  Item_ref_null_helper(Item_ref_null_helper::Item_ref_null_helper2762,94816
  table_map used_tables(Item_ref_null_helper::used_tables2777,95426
class Item_int_with_ref 2794,95884
  Item_int_with_ref(Item_int_with_ref::Item_int_with_ref2798,95948
  int save_in_field(Item_int_with_ref::save_in_field2803,96090
  virtual Item *real_item(Item_int_with_ref::real_item2808,96229
class Item_copy 2846,97484
  Item_copy(Item_copy::Item_copy2871,98089
  Item *get_item(Item_copy::get_item2903,98929
  enum Type type(Item_copy::type2905,99026
  enum_field_types field_type(Item_copy::field_type2906,99077
  enum Item_result result_type Item_copy::result_type2907,99145
  void make_field(Item_copy::make_field2909,99217
  table_map used_tables(Item_copy::used_tables2910,99283
  bool const_item(Item_copy::const_item2911,99342
  bool is_null(Item_copy::is_null2912,99382
class Item_copy_string 2931,99850
  Item_copy_string Item_copy_string::Item_copy_string2934,99902
class Item_copy_int 2945,100144
  Item_copy_int Item_copy_int::Item_copy_int2950,100232
  virtual double val_real(Item_copy_int::val_real2955,100418
  virtual longlong val_int(Item_copy_int::val_int2959,100507
class Item_copy_uint 2967,100618
  Item_copy_uint Item_copy_uint::Item_copy_uint2970,100672
  double val_real(Item_copy_uint::val_real2976,100784
class Item_copy_float 2983,100882
  Item_copy_float Item_copy_float::Item_copy_float2988,100970
  double val_real(Item_copy_float::val_real2993,101142
  longlong val_int(Item_copy_float::val_int2997,101214
  void copy(Item_copy_float::copy3001,101283
class Item_copy_decimal 3009,101380
  Item_copy_decimal Item_copy_decimal::Item_copy_decimal3014,101473
  my_decimal *val_decimal(Item_copy_decimal::val_decimal3018,101606
class Cached_item 3028,101765
  Cached_item(Cached_item::Cached_item3032,101833
class Cached_item_str 3037,101942
class Cached_item_real 3049,102195
  Cached_item_real(Cached_item_real::Cached_item_real3054,102278
class Cached_item_int 3058,102365
  Cached_item_int(Cached_item_int::Cached_item_int3063,102449
class Cached_item_decimal 3068,102534
class Cached_item_field 3077,102685
  Cached_item_field(Cached_item_field::Cached_item_field3084,102786
class Item_default_value 3092,102938
  Item_default_value(Item_default_value::Item_default_value3096,103006
  Item_default_value(Item_default_value::Item_default_value3100,103188
  enum Type type(Item_default_value::type3104,103377
  table_map used_tables(Item_default_value::used_tables3109,103643
  bool walk(Item_default_value::walk3111,103702
class Item_insert_value 3130,104365
  Item_insert_value(Item_insert_value::Item_insert_value3134,104432
  int save_in_field(Item_insert_value::save_in_field3141,104769
  enum Type type(Item_insert_value::type3145,104901
  table_map used_tables(Item_insert_value::used_tables3150,105092
  bool walk(Item_insert_value::walk3152,105152
class Item_trigger_field 3173,105826
  enum row_version_type Item_trigger_field::row_version_type3178,106002
  enum row_version_type {OLD_ROW,Item_trigger_field::row_version_type::OLD_ROW3178,106002
  enum row_version_type {OLD_ROW, NEW_ROW}Item_trigger_field::row_version_type::NEW_ROW3178,106002
  Item_trigger_field(Item_trigger_field::Item_trigger_field3187,106352
  enum Type type(Item_trigger_field::type3197,106879
  table_map used_tables(Item_trigger_field::used_tables3201,107085
  Field *get_tmp_table_field(Item_trigger_field::get_tmp_table_field3202,107143
  Item *copy_or_same(Item_trigger_field::copy_or_same3203,107188
  Item *get_tmp_table_item(Item_trigger_field::get_tmp_table_item3204,107236
  Settable_routine_parameter *get_settable_routine_parameter(Item_trigger_field::get_settable_routine_parameter3212,107437
  bool set_value(Item_trigger_field::set_value3217,107544
class Item_cache:Item_cache3244,108402
  Item_cache(Item_cache::Item_cache3265,109134
  Item_cache(Item_cache::Item_cache3273,109306
  void set_used_tables(Item_cache::set_used_tables3282,109506
  virtual bool allocate(Item_cache::allocate3284,109570
  virtual bool setup(Item_cache::setup3285,109616
  enum Type type(Item_cache::type3296,109916
  enum_field_types field_type(Item_cache::field_type3297,109964
  table_map used_tables(Item_cache::used_tables3300,110156
  virtual void keep_array(Item_cache::keep_array3301,110215
  bool eq_def(Item_cache::eq_def3303,110309
  bool eq(Item_cache::eq3307,110411
  bool has_value(Item_cache::has_value3316,110659
  Field* field(Item_cache::field3326,110914
  bool basic_const_item(Item_cache::basic_const_item3330,111024
  virtual void clear(Item_cache::clear3332,111114
  Item_result result_type(Item_cache::result_type3333,111180
class Item_cache_int:Item_cache_int3342,111330
  Item_cache_int(Item_cache_int::Item_cache_int3347,111409
  Item_cache_int(Item_cache_int::Item_cache_int3349,111459
  virtual void store(Item_cache_int::store3352,111555
  enum Item_result result_type(Item_cache_int::result_type3358,111776
  bool result_as_longlong(Item_cache_int::result_as_longlong3359,111838
class Item_cache_real:Item_cache_real3364,111910
  Item_cache_real(Item_cache_real::Item_cache_real3368,111977
  enum Item_result result_type(Item_cache_real::result_type3375,112145
class Item_cache_decimal:Item_cache_decimal3380,112235
  Item_cache_decimal(Item_cache_decimal::Item_cache_decimal3385,112328
  enum Item_result result_type(Item_cache_decimal::result_type3391,112485
class Item_cache_str:Item_cache_str3396,112578
  Item_cache_str(Item_cache_str::Item_cache_str3403,112722
  enum Item_result result_type(Item_cache_str::result_type3415,113164
  CHARSET_INFO *charset(Item_cache_str::charset3416,113229
class Item_cache_row:Item_cache_row3421,113373
  Item_cache_row(Item_cache_row::Item_cache_row3427,113485
  void make_field(Item_cache_row::make_field3443,113927
  double val_real(Item_cache_row::val_real3447,114020
  longlong val_int(Item_cache_row::val_int3452,114108
  String *val_str(Item_cache_row::val_str3457,114201
  my_decimal *val_decimal(Item_cache_row::val_decimal3462,114301
  enum Item_result result_type(Item_cache_row::result_type3468,114421
  uint cols(Item_cache_row::cols3470,114486
  Item *element_index(Item_cache_row::element_index3471,114523
  Item **addr(Item_cache_row::addr3472,114575
  void keep_array(Item_cache_row::keep_array3476,114703
  void cleanup(Item_cache_row::cleanup3477,114742
class Item_cache_datetime:Item_cache_datetime3491,114980
  Item_cache_datetime(Item_cache_datetime::Item_cache_datetime3498,115113
  enum Item_result result_type(Item_cache_datetime::result_type3510,115462
  bool result_as_longlong(Item_cache_datetime::result_as_longlong3511,115527
  void clear(Item_cache_datetime::clear3521,115941
class Item_type_holder:Item_type_holder3532,116212
  enum_field_types field_type(Item_type_holder::field_type3547,116559
  enum Type type(Item_type_holder::type3548,116619
  Field::geometry_type get_geometry_type(Item_type_holder::get_geometry_type3557,116953

sql/item_cmpfunc.h,22667
#define ITEM_CMPFUNC_INCLUDED2,30
typedef int (Arg_comparator::*arg_cmp_func)arg_cmp_func34,1201
typedef int (*Item_field_cmpfunc)Item_field_cmpfunc36,1249
class Arg_comparator:Arg_comparator38,1329
  enum enum_date_cmp_type Arg_comparator::enum_date_cmp_type52,1925
  enum enum_date_cmp_type { CMP_DATE_DFLT=Arg_comparator::enum_date_cmp_type::CMP_DATE_DFLT52,1925
  enum enum_date_cmp_type { CMP_DATE_DFLT= 0, CMP_DATE_WITH_DATE,Arg_comparator::enum_date_cmp_type::CMP_DATE_WITH_DATE52,1925
                            CMP_DATE_WITH_STR,Arg_comparator::enum_date_cmp_type::CMP_DATE_WITH_STR53,1991
                            CMP_DATE_WITH_STR, CMP_STR_WITH_DATE Arg_comparator::enum_date_cmp_type::CMP_STR_WITH_DATE53,1991
  Arg_comparator(Arg_comparator::Arg_comparator64,2500
  Arg_comparator(Arg_comparator::Arg_comparator66,2633
  inline int set_compare_func(Arg_comparator::set_compare_func71,2873
  inline int set_cmp_func(Arg_comparator::set_cmp_func80,3192
  inline int compare(Arg_comparator::compare88,3495
  inline bool is_owner_equal_func(Arg_comparator::is_owner_equal_func117,4963
  void cleanup(Arg_comparator::cleanup122,5125
  inline void set_cmp_context_for_datetime(Arg_comparator::set_cmp_context_for_datetime130,5271
class Item_bool_func 141,5560
  Item_bool_func(Item_bool_func::Item_bool_func144,5613
  Item_bool_func(Item_bool_func::Item_bool_func145,5652
  Item_bool_func(Item_bool_func::Item_bool_func146,5699
  Item_bool_func(Item_bool_func::Item_bool_func147,5756
  bool is_bool_func(Item_bool_func::is_bool_func148,5834
  void fix_length_and_dec(Item_bool_func::fix_length_and_dec149,5870
  uint decimal_precision(Item_bool_func::decimal_precision150,5928
class Item_func_truth 159,6085
  Item_func_truth(Item_func_truth::Item_func_truth168,6310
  ~Item_func_truth(Item_func_truth::~Item_func_truth172,6443
class Item_func_istrue 191,6805
  Item_func_istrue(Item_func_istrue::Item_func_istrue194,6863
  ~Item_func_istrue(Item_func_istrue::~Item_func_istrue195,6927
  virtual const char* func_name(Item_func_istrue::func_name196,6952
class Item_func_isnottrue 204,7097
  Item_func_isnottrue(Item_func_isnottrue::Item_func_isnottrue207,7158
  ~Item_func_isnottrue(Item_func_isnottrue::~Item_func_isnottrue208,7226
  virtual const char* func_name(Item_func_isnottrue::func_name209,7254
class Item_func_isfalse 217,7399
  Item_func_isfalse(Item_func_isfalse::Item_func_isfalse220,7458
  ~Item_func_isfalse(Item_func_isfalse::~Item_func_isfalse221,7524
  virtual const char* func_name(Item_func_isfalse::func_name222,7550
class Item_func_isnotfalse 230,7697
  Item_func_isnotfalse(Item_func_isnotfalse::Item_func_isnotfalse233,7759
  ~Item_func_isnotfalse(Item_func_isnotfalse::~Item_func_isnotfalse234,7829
  virtual const char* func_name(Item_func_isnotfalse::func_name235,7858
#define UNKNOWN 240,7946
class Item_in_optimizer:Item_in_optimizer258,8550
  Item_in_optimizer(Item_in_optimizer::Item_in_optimizer271,8907
  const char *func_name(Item_in_optimizer::func_name280,9231
  Item_cache **get_cache(Item_in_optimizer::get_cache281,9292
class Comp_creator285,9373
  Comp_creator(Comp_creator::Comp_creator288,9402
  virtual ~Comp_creator(Comp_creator::~Comp_creator289,9473
class Eq_creator 296,9733
  Eq_creator(Eq_creator::Eq_creator299,9781
  virtual ~Eq_creator(Eq_creator::~Eq_creator300,9852
  virtual const char* symbol(Eq_creator::symbol302,9982
  virtual bool eqne_op(Eq_creator::eqne_op303,10061
  virtual bool l_op(Eq_creator::l_op304,10106
class Ne_creator 307,10152
  Ne_creator(Ne_creator::Ne_creator310,10200
  virtual ~Ne_creator(Ne_creator::~Ne_creator311,10271
  virtual const char* symbol(Ne_creator::symbol313,10401
  virtual bool eqne_op(Ne_creator::eqne_op314,10480
  virtual bool l_op(Ne_creator::l_op315,10525
class Gt_creator 318,10571
  Gt_creator(Gt_creator::Gt_creator321,10619
  virtual ~Gt_creator(Gt_creator::~Gt_creator322,10690
  virtual const char* symbol(Gt_creator::symbol324,10820
  virtual bool eqne_op(Gt_creator::eqne_op325,10899
  virtual bool l_op(Gt_creator::l_op326,10944
class Lt_creator 329,10990
  Lt_creator(Lt_creator::Lt_creator332,11038
  virtual ~Lt_creator(Lt_creator::~Lt_creator333,11109
  virtual const char* symbol(Lt_creator::symbol335,11239
  virtual bool eqne_op(Lt_creator::eqne_op336,11318
  virtual bool l_op(Lt_creator::l_op337,11363
class Ge_creator 340,11409
  Ge_creator(Ge_creator::Ge_creator343,11457
  virtual ~Ge_creator(Ge_creator::~Ge_creator344,11528
  virtual const char* symbol(Ge_creator::symbol346,11658
  virtual bool eqne_op(Ge_creator::eqne_op347,11737
  virtual bool l_op(Ge_creator::l_op348,11782
class Le_creator 351,11828
  Le_creator(Le_creator::Le_creator354,11876
  virtual ~Le_creator(Le_creator::~Le_creator355,11947
  virtual const char* symbol(Le_creator::symbol357,12077
  virtual bool eqne_op(Le_creator::eqne_op358,12156
  virtual bool l_op(Le_creator::l_op359,12201
class Item_bool_func2 362,12247
  Item_bool_func2(Item_bool_func2::Item_bool_func2369,12392
  void set_cmp_func(Item_bool_func2::set_cmp_func372,12530
  optimize_type select_optimize(Item_bool_func2::select_optimize376,12614
  virtual enum Functype rev_functype(Item_bool_func2::rev_functype377,12678
  bool have_rev_func(Item_bool_func2::have_rev_func378,12748
  virtual inline void print(Item_bool_func2::print380,12821
  bool is_null(Item_bool_func2::is_null385,12941
  bool is_bool_func(Item_bool_func2::is_bool_func386,13017
  CHARSET_INFO *compare_collation(Item_bool_func2::compare_collation387,13053
  uint decimal_precision(Item_bool_func2::decimal_precision388,13129
  void top_level_item(Item_bool_func2::top_level_item389,13176
  void cleanup(Item_bool_func2::cleanup390,13225
class Item_bool_rowready_func2 399,13336
  Item_bool_rowready_func2(Item_bool_rowready_func2::Item_bool_rowready_func2402,13401
  bool subst_argument_checker(Item_bool_rowready_func2::subst_argument_checker408,13610
class Item_func_not 411,13674
  Item_func_not(Item_func_not::Item_func_not414,13727
  enum Functype functype(Item_func_not::functype416,13796
  const char *func_name(Item_func_not::func_name417,13850
class Item_func_trig_cond:Item_func_trig_cond453,15372
  Item_func_trig_cond(Item_func_trig_cond::Item_func_trig_cond457,15449
  longlong val_int(Item_func_trig_cond::val_int458,15526
  enum Functype functype(Item_func_trig_cond::functype459,15594
  const char *func_name(Item_func_trig_cond::func_name460,15655
  bool const_item(Item_func_trig_cond::const_item461,15711
  bool *get_trig_var(Item_func_trig_cond::get_trig_var462,15755
class Item_func_not_all 465,15803
  Item_func_not_all(Item_func_not_all::Item_func_not_all475,16036
  virtual void top_level_item(Item_func_not_all::top_level_item479,16162
  bool top_level(Item_func_not_all::top_level480,16216
  enum Functype functype(Item_func_not_all::functype482,16283
  const char *func_name(Item_func_not_all::func_name483,16341
  void set_sum_test(Item_func_not_all::set_sum_test485,16456
  void set_sub_test(Item_func_not_all::set_sub_test486,16525
class Item_func_nop_all 492,16676
  Item_func_nop_all(Item_func_nop_all::Item_func_nop_all496,16737
  const char *func_name(Item_func_nop_all::func_name498,16813
class Item_func_eq 503,16905
  Item_func_eq(Item_func_eq::Item_func_eq506,16967
  enum Functype functype(Item_func_eq::functype508,17055
  enum Functype rev_functype(Item_func_eq::rev_functype509,17108
  cond_result eq_cmp_result(Item_func_eq::eq_cmp_result510,17165
  const char *func_name(Item_func_eq::func_name511,17223
class Item_func_equal 515,17299
  Item_func_equal(Item_func_equal::Item_func_equal518,17364
  table_map not_null_tables(Item_func_equal::not_null_tables521,17485
  enum Functype functype(Item_func_equal::functype522,17535
  enum Functype rev_functype(Item_func_equal::rev_functype523,17591
  cond_result eq_cmp_result(Item_func_equal::eq_cmp_result524,17651
  const char *func_name(Item_func_equal::func_name525,17709
  Item *neg_transformer(Item_func_equal::neg_transformer526,17759
class Item_func_ge 530,17812
  Item_func_ge(Item_func_ge::Item_func_ge533,17874
  enum Functype functype(Item_func_ge::functype535,17963
  enum Functype rev_functype(Item_func_ge::rev_functype536,18016
  cond_result eq_cmp_result(Item_func_ge::eq_cmp_result537,18073
  const char *func_name(Item_func_ge::func_name538,18131
class Item_func_gt 543,18209
  Item_func_gt(Item_func_gt::Item_func_gt546,18271
  enum Functype functype(Item_func_gt::functype548,18360
  enum Functype rev_functype(Item_func_gt::rev_functype549,18413
  cond_result eq_cmp_result(Item_func_gt::eq_cmp_result550,18470
  const char *func_name(Item_func_gt::func_name551,18529
class Item_func_le 556,18606
  Item_func_le(Item_func_le::Item_func_le559,18668
  enum Functype functype(Item_func_le::functype561,18757
  enum Functype rev_functype(Item_func_le::rev_functype562,18810
  cond_result eq_cmp_result(Item_func_le::eq_cmp_result563,18867
  const char *func_name(Item_func_le::func_name564,18925
class Item_func_lt 569,19003
  Item_func_lt(Item_func_lt::Item_func_lt572,19065
  enum Functype functype(Item_func_lt::functype574,19153
  enum Functype rev_functype(Item_func_lt::rev_functype575,19206
  cond_result eq_cmp_result(Item_func_lt::eq_cmp_result576,19263
  const char *func_name(Item_func_lt::func_name577,19322
class Item_func_ne 582,19399
  Item_func_ne(Item_func_ne::Item_func_ne585,19461
  enum Functype functype(Item_func_ne::functype587,19549
  cond_result eq_cmp_result(Item_func_ne::eq_cmp_result588,19602
  optimize_type select_optimize(Item_func_ne::select_optimize589,19661
  const char *func_name(Item_func_ne::func_name590,19727
class Item_func_opt_neg 604,20150
  Item_func_opt_neg(Item_func_opt_neg::Item_func_opt_neg610,20347
  Item_func_opt_neg(Item_func_opt_neg::Item_func_opt_neg612,20452
  inline void negate(Item_func_opt_neg::negate615,20553
  inline void top_level_item(Item_func_opt_neg::top_level_item616,20599
  Item *neg_transformer(Item_func_opt_neg::neg_transformer617,20649
  bool subst_argument_checker(Item_func_opt_neg::subst_argument_checker623,20783
class Item_func_between 627,20848
  Item_func_between(Item_func_between::Item_func_between637,21159
  optimize_type select_optimize(Item_func_between::select_optimize640,21288
  enum Functype functype(Item_func_between::functype641,21353
  const char *func_name(Item_func_between::func_name642,21408
  bool is_bool_func(Item_func_between::is_bool_func646,21589
  CHARSET_INFO *compare_collation(Item_func_between::compare_collation647,21625
  uint decimal_precision(Item_func_between::decimal_precision648,21697
class Item_func_strcmp 652,21749
  Item_func_strcmp(Item_func_strcmp::Item_func_strcmp655,21806
  optimize_type select_optimize(Item_func_strcmp::select_optimize657,21889
  const char *func_name(Item_func_strcmp::func_name658,21955
  virtual inline void print(Item_func_strcmp::print660,22009
  void fix_length_and_dec(Item_func_strcmp::fix_length_and_dec664,22125
struct interval_range672,22263
class Item_func_interval 679,22343
  Item_func_interval(Item_func_interval::Item_func_interval685,22480
  const char *func_name(Item_func_interval::func_name692,22683
  uint decimal_precision(Item_func_interval::decimal_precision693,22738
class Item_func_coalesce 697,22790
  Item_func_coalesce(Item_func_coalesce::Item_func_coalesce701,22894
  Item_func_coalesce(Item_func_coalesce::Item_func_coalesce703,22971
  void find_num_type(Item_func_coalesce::find_num_type709,23178
  enum Item_result result_type Item_func_coalesce::result_type710,23204
  const char *func_name(Item_func_coalesce::func_name711,23268
  table_map not_null_tables(Item_func_coalesce::not_null_tables712,23323
  enum_field_types field_type(Item_func_coalesce::field_type713,23373
class Item_func_ifnull 717,23446
  Item_func_ifnull(Item_func_ifnull::Item_func_ifnull722,23544
  const char *func_name(Item_func_ifnull::func_name729,23789
class Item_func_if 735,23921
  Item_func_if(Item_func_if::Item_func_if740,24045
  enum Item_result result_type Item_func_if::result_type747,24260
  enum_field_types field_type(Item_func_if::field_type748,24331
  const char *func_name(Item_func_if::func_name752,24497
class Item_func_nullif 758,24598
  Item_func_nullif(Item_func_nullif::Item_func_nullif762,24694
  enum Item_result result_type Item_func_nullif::result_type769,24909
  uint decimal_precision(Item_func_nullif::decimal_precision771,25009
  const char *func_name(Item_func_nullif::func_name772,25083
  virtual inline void print(Item_func_nullif::print774,25137
  table_map not_null_tables(Item_func_nullif::not_null_tables779,25254
class in_vector 789,25412
  in_vector(in_vector::in_vector798,25565
  in_vector(in_vector::in_vector799,25582
  virtual ~in_vector(in_vector::~in_vector804,25850
  void sort(in_vector::sort807,25961
  virtual Item* create_item(in_vector::create_item821,26462
  virtual void value_to_item(in_vector::value_to_item831,26783
  bool compare_elems(in_vector::compare_elems834,26898
class in_string 841,27066
  Item* create_item(in_string::create_item850,27310
  void value_to_item(in_string::value_to_item854,27380
  Item_result result_type(in_string::result_type860,27539
class in_longlong 863,27597
  struct packed_longlong in_longlong::packed_longlong871,27818
  Item* create_item(in_longlong::create_item881,28059
  void value_to_item(in_longlong::value_to_item889,28241
  Item_result result_type(in_longlong::result_type895,28460
class in_datetime 907,28830
  in_datetime(in_datetime::in_datetime916,29003
class in_double 925,29299
  Item *create_item(in_double::create_item932,29450
  void value_to_item(in_double::value_to_item936,29516
  Item_result result_type(in_double::result_type940,29622
class in_decimal 944,29679
  Item *create_item(in_decimal::create_item951,29837
  void value_to_item(in_decimal::value_to_item955,29907
  Item_result result_type(in_decimal::result_type961,30094
class cmp_item 970,30211
  cmp_item(cmp_item::cmp_item974,30283
  virtual ~cmp_item(cmp_item::~cmp_item975,30330
  virtual void store_value_by_template(cmp_item::store_value_by_template982,30612
class cmp_item_string 988,30714
  cmp_item_string cmp_item_string::cmp_item_string993,30796
  cmp_item_string cmp_item_string::cmp_item_string994,30820
  void set_charset(cmp_item_string::set_charset995,30878
class cmp_item_sort_string 1000,31024
  cmp_item_sort_string(cmp_item_sort_string::cmp_item_sort_string1006,31157
  cmp_item_sort_string(cmp_item_sort_string::cmp_item_sort_string1008,31208
  void store_value(cmp_item_sort_string::store_value1011,31324
  int cmp(cmp_item_sort_string::cmp1015,31401
  int compare(cmp_item_sort_string::compare1023,31659
  void set_charset(cmp_item_sort_string::set_charset1029,31835
class cmp_item_int 1036,31962
  cmp_item_int(cmp_item_int::cmp_item_int1040,32026
  void store_value(cmp_item_int::store_value1041,32097
  int cmp(cmp_item_int::cmp1045,32164
  int compare(cmp_item_int::compare1049,32229
class cmp_item_datetime 1063,32624
  cmp_item_datetime(cmp_item_datetime::cmp_item_datetime1073,32818
class cmp_item_real 1081,33037
  cmp_item_real(cmp_item_real::cmp_item_real1085,33100
  void store_value(cmp_item_real::store_value1086,33171
  int cmp(cmp_item_real::cmp1090,33239
  int compare(cmp_item_real::compare1094,33305
class cmp_item_decimal 1103,33494
  cmp_item_decimal(cmp_item_decimal::cmp_item_decimal1107,33564
class cmp_item_sort_string_in_static 1120,33840
  cmp_item_sort_string_in_static(cmp_item_sort_string_in_static::cmp_item_sort_string_in_static1125,33939
  void store_value(cmp_item_sort_string_in_static::store_value1127,34018
  int cmp(cmp_item_sort_string_in_static::cmp1131,34095
  int compare(cmp_item_sort_string_in_static::compare1137,34189
  cmp_item *make_same(cmp_item_sort_string_in_static::make_same1142,34339
class Item_func_case 1167,35280
  Item_func_case(Item_func_case::Item_func_case1179,35625
  table_map not_null_tables(Item_func_case::not_null_tables1204,36377
  enum Item_result result_type Item_func_case::result_type1205,36427
  enum_field_types field_type(Item_func_case::field_type1206,36498
  const char *func_name(Item_func_case::func_name1207,36566
  CHARSET_INFO *compare_collation(Item_func_case::compare_collation1210,36712
class Item_func_in 1230,37543
  Item_func_in(Item_func_in::Item_func_in1248,38053
  uint decimal_precision(Item_func_in::decimal_precision1258,38374
  void cleanup(Item_func_in::cleanup1259,38421
  optimize_type select_optimize(Item_func_in::select_optimize1273,38696
  enum Functype functype(Item_func_in::functype1276,38828
  const char *func_name(Item_func_in::func_name1277,38881
  bool is_bool_func(Item_func_in::is_bool_func1279,38955
  CHARSET_INFO *compare_collation(Item_func_in::compare_collation1280,38991
class cmp_item_row 1283,39067
  cmp_item_row(cmp_item_row::cmp_item_row1288,39149
class in_row 1300,39465
  Item_result result_type(in_row::result_type1309,39687
class Item_func_isnull 1314,39780
  Item_func_isnull(Item_func_isnull::Item_func_isnull1319,39872
  enum Functype functype(Item_func_isnull::functype1321,39944
  void fix_length_and_dec(Item_func_isnull::fix_length_and_dec1322,40001
  const char *func_name(Item_func_isnull::func_name1327,40107
  virtual void update_used_tables(Item_func_isnull::update_used_tables1329,40209
  table_map not_null_tables(Item_func_isnull::not_null_tables1348,40691
  optimize_type select_optimize(Item_func_isnull::select_optimize1349,40741
  CHARSET_INFO *compare_collation(Item_func_isnull::compare_collation1351,40842
class Item_is_not_null_test 1362,41100
  Item_is_not_null_test(Item_is_not_null_test::Item_is_not_null_test1366,41191
  enum Functype functype(Item_is_not_null_test::functype1369,41288
  const char *func_name(Item_is_not_null_test::func_name1371,41374
  table_map used_tables(Item_is_not_null_test::used_tables1376,41553
class Item_func_isnotnull 1381,41641
  Item_func_isnotnull(Item_func_isnotnull::Item_func_isnotnull1385,41722
  enum Functype functype(Item_func_isnotnull::functype1387,41815
  void fix_length_and_dec(Item_func_isnotnull::fix_length_and_dec1388,41875
  const char *func_name(Item_func_isnotnull::func_name1392,41955
  optimize_type select_optimize(Item_func_isnotnull::select_optimize1393,42011
  table_map not_null_tables(Item_func_isnotnull::not_null_tables1394,42077
  CHARSET_INFO *compare_collation(Item_func_isnotnull::compare_collation1398,42267
  void top_level_item(Item_func_isnotnull::top_level_item1399,42344
class Item_func_like 1403,42394
  enum { alphabet_size Item_func_like::alphabet_size1418,42953
  Item_func_like(Item_func_like::Item_func_like1427,43065
  enum Functype functype(Item_func_like::functype1432,43326
  cond_result eq_cmp_result(Item_func_like::eq_cmp_result1434,43422
  const char *func_name(Item_func_like::func_name1435,43480
class Item_func_regex 1441,43595
  Item_func_regex(Item_func_regex::Item_func_regex1453,43871
  const char *func_name(Item_func_regex::func_name1458,44052
  virtual inline void print(Item_func_regex::print1460,44106
  CHARSET_INFO *compare_collation(Item_func_regex::compare_collation1465,44215
typedef class Item COND;1469,44292
class Item_cond 1471,44318
  Item_cond(Item_cond::Item_cond1480,44509
  Item_cond(Item_cond::Item_cond1482,44585
  Item_cond(Item_cond::Item_cond1489,44752
  bool add(Item_cond::add1491,44839
  bool add_at_head(Item_cond::add_at_head1496,44926
  void add_at_head(Item_cond::add_at_head1501,45022
  enum Type type(Item_cond::type1508,45166
  List<Item>* argument_list(Item_cond::argument_list1509,45213
  void top_level_item(Item_cond::top_level_item1516,45580
  enum_field_types field_type(Item_cond::field_type1522,45916
  bool subst_argument_checker(Item_cond::subst_argument_checker1523,45986
class Item_equal:Item_equal1604,49625
  inline Item_equal(Item_equal::Item_equal1613,49920
  inline Item* get_const(Item_equal::get_const1619,50157
  Item_field* get_first(Item_equal::get_first1626,50371
  enum Functype functype(Item_equal::functype1629,50478
  const char *func_name(Item_equal::func_name1631,50562
  optimize_type select_optimize(Item_equal::select_optimize1632,50623
  CHARSET_INFO *compare_collation(Item_equal::compare_collation1641,51072
class COND_EQUAL:COND_EQUAL1645,51163
  COND_EQUAL(COND_EQUAL::COND_EQUAL1653,51578
class Item_equal_iterator 1660,51628
  inline Item_equal_iterator(Item_equal_iterator::Item_equal_iterator1663,51704
  inline Item_field* operator++(Item_equal_iterator::operator++1666,51819
  inline void rewind(Item_equal_iterator::rewind1671,51951
class Item_cond_and 1677,52038
  Item_cond_and(Item_cond_and::Item_cond_and1683,52298
  Item_cond_and(Item_cond_and::Item_cond_and1684,52332
  Item_cond_and(Item_cond_and::Item_cond_and1685,52388
  Item_cond_and(Item_cond_and::Item_cond_and1686,52460
  enum Functype functype(Item_cond_and::functype1687,52522
  const char *func_name(Item_cond_and::func_name1689,52603
  table_map not_null_tables(Item_cond_and::not_null_tables1690,52653
  Item* copy_andor_structure(Item_cond_and::copy_andor_structure1692,52759
inline bool is_cond_and(1702,52979
class Item_cond_or 1711,53183
  Item_cond_or(Item_cond_or::Item_cond_or1714,53230
  Item_cond_or(Item_cond_or::Item_cond_or1715,53263
  Item_cond_or(Item_cond_or::Item_cond_or1716,53318
  Item_cond_or(Item_cond_or::Item_cond_or1717,53388
  enum Functype functype(Item_cond_or::functype1718,53449
  const char *func_name(Item_cond_or::func_name1720,53529
  table_map not_null_tables(Item_cond_or::not_null_tables1721,53578
  Item* copy_andor_structure(Item_cond_or::copy_andor_structure1722,53643
inline bool is_cond_or(1732,53860
class Item_cond_xor 1746,54188
  Item_cond_xor(Item_cond_xor::Item_cond_xor1749,54236
  Item_cond_xor(Item_cond_xor::Item_cond_xor1750,54270
  enum Functype functype(Item_cond_xor::functype1751,54326
  enum Type type(Item_cond_xor::type1753,54455
  const char *func_name(Item_cond_xor::func_name1755,54524
  void top_level_item(Item_cond_xor::top_level_item1756,54574
inline Item *and_conds(and_conds1762,54642

sql/item_create.h,511
#define ITEM_CREATE_H19,827
typedef struct st_udf_func udf_func;21,850
class Create_func34,1401
  Create_func(Create_func::Create_func62,2637
  virtual ~Create_func(Create_func::~Create_func64,2676
class Create_qfunc 74,2891
  Create_qfunc(Create_qfunc::Create_qfunc101,3907
  virtual ~Create_qfunc(Create_qfunc::~Create_qfunc103,3948
class Create_udf_func 129,4572
  Create_udf_func(Create_udf_func::Create_udf_func148,5146
  virtual ~Create_udf_func(Create_udf_func::~Create_udf_func150,5190

sql/item_func.h,31383
#define ITEM_FUNC_INCLUDED2,27
class Item_func 33,1027
  enum Functype Item_func::Functype46,1377
  enum Functype { UNKNOWN_FUNC,Item_func::Functype::UNKNOWN_FUNC46,1377
  enum Functype { UNKNOWN_FUNC,EQ_FUNC,Item_func::Functype::EQ_FUNC46,1377
  enum Functype { UNKNOWN_FUNC,EQ_FUNC,EQUAL_FUNC,Item_func::Functype::EQUAL_FUNC46,1377
  enum Functype { UNKNOWN_FUNC,EQ_FUNC,EQUAL_FUNC,NE_FUNC,Item_func::Functype::NE_FUNC46,1377
  enum Functype { UNKNOWN_FUNC,EQ_FUNC,EQUAL_FUNC,NE_FUNC,LT_FUNC,Item_func::Functype::LT_FUNC46,1377
  enum Functype { UNKNOWN_FUNC,EQ_FUNC,EQUAL_FUNC,NE_FUNC,LT_FUNC,LE_FUNC,Item_func::Functype::LE_FUNC46,1377
		  GE_FUNC,Item_func::Functype::GE_FUNC47,1452
		  GE_FUNC,GT_FUNC,Item_func::Functype::GT_FUNC47,1452
		  GE_FUNC,GT_FUNC,FT_FUNC,Item_func::Functype::FT_FUNC47,1452
		  LIKE_FUNC,Item_func::Functype::LIKE_FUNC48,1481
		  LIKE_FUNC,ISNULL_FUNC,Item_func::Functype::ISNULL_FUNC48,1481
		  LIKE_FUNC,ISNULL_FUNC,ISNOTNULL_FUNC,Item_func::Functype::ISNOTNULL_FUNC48,1481
		  COND_AND_FUNC,Item_func::Functype::COND_AND_FUNC49,1523
		  COND_AND_FUNC, COND_OR_FUNC,Item_func::Functype::COND_OR_FUNC49,1523
		  COND_AND_FUNC, COND_OR_FUNC, COND_XOR_FUNC,Item_func::Functype::COND_XOR_FUNC49,1523
                  BETWEEN,Item_func::Functype::BETWEEN50,1571
                  BETWEEN, IN_FUNC,Item_func::Functype::IN_FUNC50,1571
                  BETWEEN, IN_FUNC, MULT_EQUAL_FUNC,Item_func::Functype::MULT_EQUAL_FUNC50,1571
		  INTERVAL_FUNC,Item_func::Functype::INTERVAL_FUNC51,1624
		  INTERVAL_FUNC, ISNOTNULLTEST_FUNC,Item_func::Functype::ISNOTNULLTEST_FUNC51,1624
		  SP_EQUALS_FUNC,Item_func::Functype::SP_EQUALS_FUNC52,1663
		  SP_EQUALS_FUNC, SP_DISJOINT_FUNC,Item_func::Functype::SP_DISJOINT_FUNC52,1663
		  SP_EQUALS_FUNC, SP_DISJOINT_FUNC,SP_INTERSECTS_FUNC,Item_func::Functype::SP_INTERSECTS_FUNC52,1663
		  SP_TOUCHES_FUNC,Item_func::Functype::SP_TOUCHES_FUNC53,1720
		  SP_TOUCHES_FUNC,SP_CROSSES_FUNC,Item_func::Functype::SP_CROSSES_FUNC53,1720
		  SP_TOUCHES_FUNC,SP_CROSSES_FUNC,SP_WITHIN_FUNC,Item_func::Functype::SP_WITHIN_FUNC53,1720
		  SP_CONTAINS_FUNC,Item_func::Functype::SP_CONTAINS_FUNC54,1772
		  SP_CONTAINS_FUNC,SP_OVERLAPS_FUNC,Item_func::Functype::SP_OVERLAPS_FUNC54,1772
		  SP_STARTPOINT,Item_func::Functype::SP_STARTPOINT55,1811
		  SP_STARTPOINT,SP_ENDPOINT,Item_func::Functype::SP_ENDPOINT55,1811
		  SP_STARTPOINT,SP_ENDPOINT,SP_EXTERIORRING,Item_func::Functype::SP_EXTERIORRING55,1811
		  SP_POINTN,Item_func::Functype::SP_POINTN56,1858
		  SP_POINTN,SP_GEOMETRYN,Item_func::Functype::SP_GEOMETRYN56,1858
		  SP_POINTN,SP_GEOMETRYN,SP_INTERIORRINGN,Item_func::Functype::SP_INTERIORRINGN56,1858
                  NOT_FUNC,Item_func::Functype::NOT_FUNC57,1903
                  NOT_FUNC, NOT_ALL_FUNC,Item_func::Functype::NOT_ALL_FUNC57,1903
                  NOW_FUNC,Item_func::Functype::NOW_FUNC58,1945
                  NOW_FUNC, TRIG_COND_FUNC,Item_func::Functype::TRIG_COND_FUNC58,1945
                  SUSERVAR_FUNC,Item_func::Functype::SUSERVAR_FUNC59,1989
                  SUSERVAR_FUNC, GUSERVAR_FUNC,Item_func::Functype::GUSERVAR_FUNC59,1989
                  SUSERVAR_FUNC, GUSERVAR_FUNC, COLLATE_FUNC,Item_func::Functype::COLLATE_FUNC59,1989
                  EXTRACT_FUNC,Item_func::Functype::EXTRACT_FUNC60,2051
                  EXTRACT_FUNC, CHAR_TYPECAST_FUNC,Item_func::Functype::CHAR_TYPECAST_FUNC60,2051
                  EXTRACT_FUNC, CHAR_TYPECAST_FUNC, FUNC_SP,Item_func::Functype::FUNC_SP60,2051
                  EXTRACT_FUNC, CHAR_TYPECAST_FUNC, FUNC_SP, UDF_FUNC,Item_func::Functype::UDF_FUNC60,2051
                  NEG_FUNC,Item_func::Functype::NEG_FUNC61,2122
                  NEG_FUNC, GSYSVAR_FUNC Item_func::Functype::GSYSVAR_FUNC61,2122
  enum optimize_type Item_func::optimize_type62,2166
  enum optimize_type { OPTIMIZE_NONE,Item_func::optimize_type::OPTIMIZE_NONE62,2166
  enum optimize_type { OPTIMIZE_NONE,OPTIMIZE_KEY,Item_func::optimize_type::OPTIMIZE_KEY62,2166
  enum optimize_type { OPTIMIZE_NONE,OPTIMIZE_KEY,OPTIMIZE_OP,Item_func::optimize_type::OPTIMIZE_OP62,2166
  enum optimize_type { OPTIMIZE_NONE,OPTIMIZE_KEY,OPTIMIZE_OP, OPTIMIZE_NULL,Item_func::optimize_type::OPTIMIZE_NULL62,2166
                       OPTIMIZE_EQUAL Item_func::optimize_type::OPTIMIZE_EQUAL63,2244
  enum Type type(Item_func::type64,2285
  virtual enum Functype functype(Item_func::functype65,2332
  Item_func(Item_func::Item_func66,2400
  Item_func(Item_func::Item_func71,2487
  Item_func(Item_func::Item_func78,2627
  Item_func(Item_func::Item_func85,2807
  Item_func(Item_func::Item_func96,3101
  Item_func(Item_func::Item_func108,3436
  virtual optimize_type select_optimize(Item_func::select_optimize127,4114
  virtual bool have_rev_func(Item_func::have_rev_func128,4188
  virtual Item *key_item(Item_func::key_item129,4239
  virtual bool const_item(Item_func::const_item130,4292
  inline Item **arguments(Item_func::arguments131,4355
  inline uint argument_count(Item_func::argument_count133,4446
  inline void remove_arguments(Item_func::remove_arguments134,4505
  inline bool get_arg0_date(Item_func::get_arg0_date143,4954
  inline bool get_arg0_time(Item_func::get_arg0_time147,5088
  bool is_null(Item_func::is_null151,5193
  Field *tmp_table_field(Item_func::tmp_table_field157,5326
  bool agg_arg_charsets(Item_func::agg_arg_charsets163,5499
  bool agg_arg_charsets_for_string_result(Item_func::agg_arg_charsets_for_string_result173,5873
  bool agg_arg_charsets_for_comparison(Item_func::agg_arg_charsets_for_comparison185,6396
  bool agg_arg_charsets_for_string_result_with_comparison(Item_func::agg_arg_charsets_for_string_result_with_comparison198,6937
  virtual bool is_expensive(Item_func::is_expensive214,7862
  inline void raise_numeric_overflow(Item_func::raise_numeric_overflow215,7906
  inline double raise_float_overflow(Item_func::raise_float_overflow223,8170
  inline longlong raise_integer_overflow(Item_func::raise_integer_overflow228,8271
  inline int raise_decimal_overflow(Item_func::raise_decimal_overflow233,8409
  inline double check_float_overflow(Item_func::check_float_overflow242,8629
  inline longlong check_integer_overflow(Item_func::check_integer_overflow251,8965
  inline int check_decimal_overflow(Item_func::check_decimal_overflow261,9332
  bool has_timestamp_args(Item_func::has_timestamp_args266,9461
  bool has_date_args(Item_func::has_date_args278,9727
  bool has_time_args(Item_func::has_time_args291,10044
  bool has_datetime_args(Item_func::has_datetime_args304,10361
  virtual bool check_valid_arguments_processor(Item_func::check_valid_arguments_processor324,11020
  virtual bool find_function_processor Item_func::find_function_processor329,11126
class Item_real_func 336,11235
  Item_real_func(Item_real_func::Item_real_func339,11284
  Item_real_func(Item_real_func::Item_real_func340,11345
  Item_real_func(Item_real_func::Item_real_func341,11414
  Item_real_func(Item_real_func::Item_real_func342,11493
  longlong val_int(Item_real_func::val_int345,11659
  enum Item_result result_type Item_real_func::result_type347,11749
  void fix_length_and_dec(Item_real_func::fix_length_and_dec348,11813
class Item_func_numhybrid:Item_func_numhybrid353,11913
  Item_func_numhybrid(Item_func_numhybrid::Item_func_numhybrid358,12005
  Item_func_numhybrid(Item_func_numhybrid::Item_func_numhybrid360,12107
  Item_func_numhybrid(Item_func_numhybrid::Item_func_numhybrid363,12223
  enum Item_result result_type Item_func_numhybrid::result_type367,12342
  bool is_null(Item_func_numhybrid::is_null412,13627
class Item_func_num1:Item_func_num1416,13755
  Item_func_num1(Item_func_num1::Item_func_num1419,13814
  Item_func_num1(Item_func_num1::Item_func_num1420,13867
  String *str_op(Item_func_num1::str_op424,13990
class Item_num_op 429,14106
  Item_num_op(Item_num_op::Item_num_op432,14163
  virtual inline void print(Item_num_op::print435,14263
  String *str_op(Item_num_op::str_op441,14396
class Item_int_func 445,14461
  Item_int_func(Item_int_func::Item_int_func448,14509
  Item_int_func(Item_int_func::Item_int_func450,14592
  Item_int_func(Item_int_func::Item_int_func452,14683
  Item_int_func(Item_int_func::Item_int_func454,14784
  Item_int_func(Item_int_func::Item_int_func456,14895
  Item_int_func(Item_int_func::Item_int_func458,14998
  enum Item_result result_type Item_int_func::result_type462,15150
  void fix_length_and_dec(Item_int_func::fix_length_and_dec463,15213
class Item_func_connection_id 467,15249
  Item_func_connection_id(Item_func_connection_id::Item_func_connection_id472,15330
  const char *func_name(Item_func_connection_id::func_name473,15361
  longlong val_int(Item_func_connection_id::val_int476,15491
class Item_func_signed 480,15560
  Item_func_signed(Item_func_signed::Item_func_signed483,15615
  const char *func_name(Item_func_signed::func_name487,15691
  void fix_length_and_dec(Item_func_signed::fix_length_and_dec490,15815
  uint decimal_precision(Item_func_signed::decimal_precision496,16021
class Item_func_unsigned 500,16100
  Item_func_unsigned(Item_func_unsigned::Item_func_unsigned503,16160
  const char *func_name(Item_func_unsigned::func_name507,16241
class Item_decimal_typecast 513,16394
  Item_decimal_typecast(Item_decimal_typecast::Item_decimal_typecast517,16478
  enum Item_result result_type Item_decimal_typecast::result_type528,16871
  enum_field_types field_type(Item_decimal_typecast::field_type529,16938
  void fix_length_and_dec(Item_decimal_typecast::fix_length_and_dec530,17010
  const char *func_name(Item_decimal_typecast::func_name531,17042
class Item_func_additive_op 536,17173
  Item_func_additive_op(Item_func_additive_op::Item_func_additive_op539,17231
  bool check_partition_func_processor(Item_func_additive_op::check_partition_func_processor541,17320
class Item_func_plus 545,17395
  Item_func_plus(Item_func_plus::Item_func_plus548,17456
  const char *func_name(Item_func_plus::func_name549,17521
class Item_func_minus 555,17654
  Item_func_minus(Item_func_minus::Item_func_minus558,17716
  const char *func_name(Item_func_minus::func_name559,17782
class Item_func_mul 567,17945
  Item_func_mul(Item_func_mul::Item_func_mul570,17995
  const char *func_name(Item_func_mul::func_name571,18049
  bool check_partition_func_processor(Item_func_mul::check_partition_func_processor576,18205
class Item_func_div 580,18280
  Item_func_div(Item_func_div::Item_func_div584,18353
  longlong int_op(Item_func_div::int_op585,18407
  const char *func_name(Item_func_div::func_name588,18517
class Item_func_int_div 594,18626
  Item_func_int_div(Item_func_int_div::Item_func_int_div597,18682
  const char *func_name(Item_func_int_div::func_name600,18766
  virtual inline void print(Item_func_int_div::print603,18846
  bool check_partition_func_processor(Item_func_int_div::check_partition_func_processor608,18955
class Item_func_mod 612,19030
  Item_func_mod(Item_func_mod::Item_func_mod615,19080
  const char *func_name(Item_func_mod::func_name619,19215
  bool check_partition_func_processor(Item_func_mod::check_partition_func_processor622,19319
class Item_func_neg 626,19394
  Item_func_neg(Item_func_neg::Item_func_neg629,19447
  const char *func_name(Item_func_neg::func_name633,19575
  enum Functype functype(Item_func_neg::functype634,19623
  uint decimal_precision(Item_func_neg::decimal_precision637,19741
  bool check_partition_func_processor(Item_func_neg::check_partition_func_processor638,19815
class Item_func_abs 642,19890
  Item_func_abs(Item_func_abs::Item_func_abs645,19943
  const char *func_name(Item_func_abs::func_name649,20071
  bool check_partition_func_processor(Item_func_abs::check_partition_func_processor651,20150
class Item_dec_func 656,20286
  Item_dec_func(Item_dec_func::Item_dec_func659,20340
  Item_dec_func(Item_dec_func::Item_dec_func660,20387
  void fix_length_and_dec(Item_dec_func::fix_length_and_dec661,20444
class Item_func_exp 668,20565
  Item_func_exp(Item_func_exp::Item_func_exp671,20617
  const char *func_name(Item_func_exp::func_name673,20684
class Item_func_ln 677,20739
  Item_func_ln(Item_func_ln::Item_func_ln680,20790
  const char *func_name(Item_func_ln::func_name682,20856
class Item_func_log 686,20910
  Item_func_log(Item_func_log::Item_func_log689,20962
  Item_func_log(Item_func_log::Item_func_log690,21008
  const char *func_name(Item_func_log::func_name692,21085
class Item_func_log2 696,21140
  Item_func_log2(Item_func_log2::Item_func_log2699,21193
  const char *func_name(Item_func_log2::func_name701,21261
class Item_func_log10 705,21317
  Item_func_log10(Item_func_log10::Item_func_log10708,21371
  const char *func_name(Item_func_log10::func_name710,21440
class Item_func_sqrt 714,21497
  Item_func_sqrt(Item_func_sqrt::Item_func_sqrt717,21550
  const char *func_name(Item_func_sqrt::func_name719,21618
class Item_func_pow 723,21674
  Item_func_pow(Item_func_pow::Item_func_pow726,21726
  const char *func_name(Item_func_pow::func_name728,21803
class Item_func_acos 732,21858
  Item_func_acos(Item_func_acos::Item_func_acos735,21911
  const char *func_name(Item_func_acos::func_name737,21979
class Item_func_asin 740,22034
  Item_func_asin(Item_func_asin::Item_func_asin743,22087
  const char *func_name(Item_func_asin::func_name745,22155
class Item_func_atan 748,22210
  Item_func_atan(Item_func_atan::Item_func_atan751,22263
  Item_func_atan(Item_func_atan::Item_func_atan752,22310
  const char *func_name(Item_func_atan::func_name754,22388
class Item_func_cos 757,22443
  Item_func_cos(Item_func_cos::Item_func_cos760,22495
  const char *func_name(Item_func_cos::func_name762,22562
class Item_func_sin 765,22616
  Item_func_sin(Item_func_sin::Item_func_sin768,22668
  const char *func_name(Item_func_sin::func_name770,22735
class Item_func_tan 773,22789
  Item_func_tan(Item_func_tan::Item_func_tan776,22841
  const char *func_name(Item_func_tan::func_name778,22908
class Item_func_cot 781,22962
  Item_func_cot(Item_func_cot::Item_func_cot784,23014
  const char *func_name(Item_func_cot::func_name786,23081
class Item_func_integer 789,23135
  inline Item_func_integer(Item_func_integer::Item_func_integer792,23191
class Item_func_int_val 797,23282
  Item_func_int_val(Item_func_int_val::Item_func_int_val800,23339
class Item_func_ceiling 806,23452
  Item_func_ceiling(Item_func_ceiling::Item_func_ceiling809,23512
  const char *func_name(Item_func_ceiling::func_name810,23566
  bool check_partition_func_processor(Item_func_ceiling::check_partition_func_processor814,23701
class Item_func_floor 818,23776
  Item_func_floor(Item_func_floor::Item_func_floor821,23834
  const char *func_name(Item_func_floor::func_name822,23886
  bool check_partition_func_processor(Item_func_floor::check_partition_func_processor826,24019
class Item_func_round 831,24132
  Item_func_round(Item_func_round::Item_func_round835,24204
  const char *func_name(Item_func_round::func_name837,24305
class Item_func_rand 845,24496
  Item_func_rand(Item_func_rand::Item_func_rand850,24638
  Item_func_rand(Item_func_rand::Item_func_rand851,24713
  const char *func_name(Item_func_rand::func_name853,24776
  bool const_item(Item_func_rand::const_item854,24827
  void cleanup(Item_func_rand::cleanup857,24937
class Item_func_sign 863,25052
  Item_func_sign(Item_func_sign::Item_func_sign866,25105
  const char *func_name(Item_func_sign::func_name867,25152
class Item_func_units 872,25230
  Item_func_units(Item_func_units::Item_func_units877,25317
  const char *func_name(Item_func_units::func_name880,25477
  void fix_length_and_dec(Item_func_units::fix_length_and_dec881,25526
class Item_func_min_max 886,25626
  Item_func_min_max(Item_func_min_max::Item_func_min_max899,25997
  enum Item_result result_type Item_func_min_max::result_type907,26311
  bool result_as_longlong(Item_func_min_max::result_as_longlong908,26372
  enum_field_types field_type(Item_func_min_max::field_type910,26470
class Item_func_min 913,26542
  Item_func_min(Item_func_min::Item_func_min916,26598
  const char *func_name(Item_func_min::func_name917,26662
class Item_func_max 920,26718
  Item_func_max(Item_func_max::Item_func_max923,26774
  const char *func_name(Item_func_max::func_name924,26839
class Item_func_rollup_const 933,27023
  Item_func_rollup_const(Item_func_rollup_const::Item_func_rollup_const936,27080
  double val_real(Item_func_rollup_const::val_real941,27188
  longlong val_int(Item_func_rollup_const::val_int942,27240
  String *val_str(Item_func_rollup_const::val_str943,27292
  my_decimal *val_decimal(Item_func_rollup_const::val_decimal944,27357
  const char *func_name(Item_func_rollup_const::func_name945,27438
  bool const_item(Item_func_rollup_const::const_item946,27497
  Item_result result_type(Item_func_rollup_const::result_type947,27537
  void fix_length_and_dec(Item_func_rollup_const::fix_length_and_dec948,27606
class Item_func_length 959,27833
  Item_func_length(Item_func_length::Item_func_length963,27904
  const char *func_name(Item_func_length::func_name965,27975
  void fix_length_and_dec(Item_func_length::fix_length_and_dec966,28028
class Item_func_bit_length 969,28079
  Item_func_bit_length(Item_func_bit_length::Item_func_bit_length972,28141
  longlong val_int(Item_func_bit_length::val_int973,28197
  const char *func_name(Item_func_bit_length::func_name975,28289
class Item_func_char_length 978,28350
  Item_func_char_length(Item_func_char_length::Item_func_char_length982,28426
  const char *func_name(Item_func_char_length::func_name984,28502
  void fix_length_and_dec(Item_func_char_length::fix_length_and_dec985,28560
class Item_func_coercibility 988,28611
  Item_func_coercibility(Item_func_coercibility::Item_func_coercibility991,28672
  const char *func_name(Item_func_coercibility::func_name993,28749
  void fix_length_and_dec(Item_func_coercibility::fix_length_and_dec994,28808
  table_map not_null_tables(Item_func_coercibility::not_null_tables995,28870
class Item_func_locate 998,28924
  Item_func_locate(Item_func_locate::Item_func_locate1003,29032
  Item_func_locate(Item_func_locate::Item_func_locate1004,29091
  const char *func_name(Item_func_locate::func_name1005,29160
class Item_func_field 1012,29332
  Item_func_field(Item_func_field::Item_func_field1018,29459
  const char *func_name(Item_func_field::func_name1020,29541
class Item_func_ascii 1025,29627
  Item_func_ascii(Item_func_ascii::Item_func_ascii1029,29697
  const char *func_name(Item_func_ascii::func_name1031,29767
  void fix_length_and_dec(Item_func_ascii::fix_length_and_dec1032,29819
class Item_func_ord 1035,29869
  Item_func_ord(Item_func_ord::Item_func_ord1039,29937
  const char *func_name(Item_func_ord::func_name1041,30005
class Item_func_find_in_set 1044,30059
  Item_func_find_in_set(Item_func_find_in_set::Item_func_find_in_set1051,30212
  const char *func_name(Item_func_find_in_set::func_name1053,30312
class Item_func_bit:Item_func_bit1059,30475
  Item_func_bit(Item_func_bit::Item_func_bit1062,30527
  Item_func_bit(Item_func_bit::Item_func_bit1063,30585
  void fix_length_and_dec(Item_func_bit::fix_length_and_dec1064,30631
  virtual inline void print(Item_func_bit::print1066,30682
class Item_func_bit_or 1072,30794
  Item_func_bit_or(Item_func_bit_or::Item_func_bit_or1075,30849
  const char *func_name(Item_func_bit_or::func_name1077,30932
class Item_func_bit_and 1080,30984
  Item_func_bit_and(Item_func_bit_and::Item_func_bit_and1083,31040
  const char *func_name(Item_func_bit_and::func_name1085,31124
class Item_func_bit_count 1088,31176
  Item_func_bit_count(Item_func_bit_count::Item_func_bit_count1091,31234
  const char *func_name(Item_func_bit_count::func_name1093,31308
  void fix_length_and_dec(Item_func_bit_count::fix_length_and_dec1094,31364
class Item_func_shift_left 1097,31414
  Item_func_shift_left(Item_func_shift_left::Item_func_shift_left1100,31473
  const char *func_name(Item_func_shift_left::func_name1102,31560
class Item_func_shift_right 1105,31613
  Item_func_shift_right(Item_func_shift_right::Item_func_shift_right1108,31673
  const char *func_name(Item_func_shift_right::func_name1110,31761
class Item_func_bit_neg 1113,31814
  Item_func_bit_neg(Item_func_bit_neg::Item_func_bit_neg1116,31870
  const char *func_name(Item_func_bit_neg::func_name1118,31942
  virtual inline void print(Item_func_bit_neg::print1120,31991
class Item_func_last_insert_id 1127,32112
  Item_func_last_insert_id(Item_func_last_insert_id::Item_func_last_insert_id1130,32175
  Item_func_last_insert_id(Item_func_last_insert_id::Item_func_last_insert_id1131,32224
  const char *func_name(Item_func_last_insert_id::func_name1133,32303
  void fix_length_and_dec(Item_func_last_insert_id::fix_length_and_dec1134,32364
class Item_func_benchmark 1144,32529
  Item_func_benchmark(Item_func_benchmark::Item_func_benchmark1147,32587
  const char *func_name(Item_func_benchmark::func_name1151,32703
  void fix_length_and_dec(Item_func_benchmark::fix_length_and_dec1152,32759
class Item_func_sleep 1157,32887
  Item_func_sleep(Item_func_sleep::Item_func_sleep1160,32941
  bool const_item(Item_func_sleep::const_item1161,32989
  const char *func_name(Item_func_sleep::func_name1162,33029
  void update_used_tables(Item_func_sleep::update_used_tables1163,33081
class Item_udf_func 1175,33246
  Item_udf_func(Item_udf_func::Item_udf_func1181,33325
  Item_udf_func(Item_udf_func::Item_udf_func1183,33394
  const char *func_name(Item_udf_func::func_name1185,33485
  enum Functype functype(Item_udf_func::functype1186,33540
  bool fix_fields(Item_udf_func::fix_fields1187,33596
  void update_used_tables(Item_udf_func::update_used_tables1196,33851
  Item_result result_type Item_udf_func::result_type1247,36207
  table_map not_null_tables(Item_udf_func::not_null_tables1248,36272
  bool is_expensive(Item_udf_func::is_expensive1249,36322
class Item_func_udf_float 1254,36426
  Item_func_udf_float(Item_func_udf_float::Item_func_udf_float1257,36485
  Item_func_udf_float(Item_func_udf_float::Item_func_udf_float1259,36557
  longlong val_int(Item_func_udf_float::val_int1262,36675
  my_decimal *val_decimal(Item_func_udf_float::val_decimal1267,36794
  void fix_length_and_dec(Item_func_udf_float::fix_length_and_dec1277,37044
class Item_func_udf_int 1281,37107
  Item_func_udf_int(Item_func_udf_int::Item_func_udf_int1284,37163
  Item_func_udf_int(Item_func_udf_int::Item_func_udf_int1286,37233
  double val_real(Item_func_udf_int::val_real1290,37369
  enum Item_result result_type Item_func_udf_int::result_type1292,37471
  void fix_length_and_dec(Item_func_udf_int::fix_length_and_dec1293,37534
class Item_func_udf_decimal 1297,37600
  Item_func_udf_decimal(Item_func_udf_decimal::Item_func_udf_decimal1300,37660
  Item_func_udf_decimal(Item_func_udf_decimal::Item_func_udf_decimal1302,37734
  enum Item_result result_type Item_func_udf_decimal::result_type1308,37948
class Item_func_udf_str 1313,38049
  Item_func_udf_str(Item_func_udf_str::Item_func_udf_str1316,38105
  Item_func_udf_str(Item_func_udf_str::Item_func_udf_str1318,38175
  double val_real(Item_func_udf_str::val_real1321,38298
  longlong val_int(Item_func_udf_str::val_int1330,38563
  my_decimal *val_decimal(Item_func_udf_str::val_decimal1337,38802
  enum Item_result result_type Item_func_udf_str::result_type1345,39003
class Item_func_udf_float 1351,39159
  Item_func_udf_float(Item_func_udf_float::Item_func_udf_float1354,39219
  Item_func_udf_float(Item_func_udf_float::Item_func_udf_float1356,39285
  double val_real(Item_func_udf_float::val_real1358,39373
class Item_func_udf_int 1362,39439
  Item_func_udf_int(Item_func_udf_int::Item_func_udf_int1365,39495
  Item_func_udf_int(Item_func_udf_int::Item_func_udf_int1367,39558
  longlong val_int(Item_func_udf_int::val_int1369,39643
class Item_func_udf_decimal 1373,39708
  Item_func_udf_decimal(Item_func_udf_decimal::Item_func_udf_decimal1376,39768
  Item_func_udf_decimal(Item_func_udf_decimal::Item_func_udf_decimal1378,39835
  my_decimal *val_decimal(Item_func_udf_decimal::val_decimal1380,39924
class Item_func_udf_str 1384,40008
  Item_func_udf_str(Item_func_udf_str::Item_func_udf_str1387,40060
  Item_func_udf_str(Item_func_udf_str::Item_func_udf_str1389,40119
  String *val_str(Item_func_udf_str::val_str1391,40200
  double val_real(Item_func_udf_str::val_real1393,40285
  longlong val_int(Item_func_udf_str::val_int1394,40361
  enum Item_result result_type Item_func_udf_str::result_type1395,40435
  void fix_length_and_dec(Item_func_udf_str::fix_length_and_dec1396,40501
class Item_func_get_lock 1410,40757
  Item_func_get_lock(Item_func_get_lock::Item_func_get_lock1414,40831
  const char *func_name(Item_func_get_lock::func_name1416,40914
  void fix_length_and_dec(Item_func_get_lock::fix_length_and_dec1417,40969
class Item_func_release_lock 1420,41032
  Item_func_release_lock(Item_func_release_lock::Item_func_release_lock1424,41109
  const char *func_name(Item_func_release_lock::func_name1426,41186
  void fix_length_and_dec(Item_func_release_lock::fix_length_and_dec1427,41245
class Item_master_pos_wait 1432,41337
  Item_master_pos_wait(Item_master_pos_wait::Item_master_pos_wait1436,41412
  Item_master_pos_wait(Item_master_pos_wait::Item_master_pos_wait1437,41475
  const char *func_name(Item_master_pos_wait::func_name1439,41570
  void fix_length_and_dec(Item_master_pos_wait::fix_length_and_dec1440,41632
class Item_func_set_user_var 1448,41764
  Item_func_set_user_var(Item_func_set_user_var::Item_func_set_user_var1491,43253
  Item_func_set_user_var(Item_func_set_user_var::Item_func_set_user_var1495,43448
  enum Functype functype(Item_func_set_user_var::functype1503,43799
  enum Item_result result_type Item_func_set_user_var::result_type1521,44469
  const char *func_name(Item_func_set_user_var::func_name1526,44736
  int save_in_field(Item_func_set_user_var::save_in_field1529,44898
  void save_org_in_field(Item_func_set_user_var::save_org_in_field1533,45013
class Item_func_get_user_var 1540,45215
  Item_func_get_user_var(Item_func_get_user_var::Item_func_get_user_var1548,45441
  enum Functype functype(Item_func_get_user_var::functype1550,45546
  LEX_STRING get_name(Item_func_get_user_var::get_name1551,45605
  const char *func_name(Item_func_get_user_var::func_name1563,46048
  table_map used_tables(Item_func_get_user_var::used_tables1565,46134
  Settable_routine_parameter *get_settable_routine_parameter(Item_func_get_user_var::get_settable_routine_parameter1572,46341
class Item_user_var_as_out_param 1588,46836
  Item_user_var_as_out_param(Item_user_var_as_out_param::Item_user_var_as_out_param1593,46936
  enum Type type(Item_user_var_as_out_param::type1596,47102
#define GET_SYS_VAR_CACHE_LONG 1611,47587
#define GET_SYS_VAR_CACHE_DOUBLE 1612,47624
#define GET_SYS_VAR_CACHE_STRING 1613,47661
class Item_func_get_system_var 1615,47699
  enum Functype functype(Item_func_get_system_var::functype1631,48189
  bool const_item(Item_func_get_system_var::const_item1635,48359
  table_map used_tables(Item_func_get_system_var::used_tables1636,48402
  const char *func_name(Item_func_get_system_var::func_name1643,48633
class Item_func_inet_aton 1659,49100
  Item_func_inet_aton(Item_func_inet_aton::Item_func_inet_aton1662,49159
  const char *func_name(Item_func_inet_aton::func_name1664,49233
  void fix_length_and_dec(Item_func_inet_aton::fix_length_and_dec1665,49289
class Item_func_match 1672,49437
  Item_func_match(Item_func_match::Item_func_match1685,49840
  void cleanup(Item_func_match::cleanup1687,49992
  enum Functype functype(Item_func_match::functype1698,50295
  const char *func_name(Item_func_match::func_name1699,50348
  void update_used_tables(Item_func_match::update_used_tables1700,50400
  table_map not_null_tables(Item_func_match::not_null_tables1701,50431
  longlong val_int(Item_func_match::val_int1705,50635
class Item_func_bit_xor 1714,50856
  Item_func_bit_xor(Item_func_bit_xor::Item_func_bit_xor1717,50913
  const char *func_name(Item_func_bit_xor::func_name1719,50997
class Item_func_is_free_lock 1722,51049
  Item_func_is_free_lock(Item_func_is_free_lock::Item_func_is_free_lock1726,51126
  const char *func_name(Item_func_is_free_lock::func_name1728,51203
  void fix_length_and_dec(Item_func_is_free_lock::fix_length_and_dec1729,51262
class Item_func_is_used_lock 1732,51337
  Item_func_is_used_lock(Item_func_is_used_lock::Item_func_is_used_lock1736,51414
  const char *func_name(Item_func_is_used_lock::func_name1738,51491
  void fix_length_and_dec(Item_func_is_used_lock::fix_length_and_dec1739,51550
enum Cast_target1744,51648
  ITEM_CAST_BINARY,Cast_target::ITEM_CAST_BINARY1746,51667
  ITEM_CAST_BINARY, ITEM_CAST_SIGNED_INT,Cast_target::ITEM_CAST_SIGNED_INT1746,51667
  ITEM_CAST_BINARY, ITEM_CAST_SIGNED_INT, ITEM_CAST_UNSIGNED_INT,Cast_target::ITEM_CAST_UNSIGNED_INT1746,51667
  ITEM_CAST_DATE,Cast_target::ITEM_CAST_DATE1747,51733
  ITEM_CAST_DATE, ITEM_CAST_TIME,Cast_target::ITEM_CAST_TIME1747,51733
  ITEM_CAST_DATE, ITEM_CAST_TIME, ITEM_CAST_DATETIME,Cast_target::ITEM_CAST_DATETIME1747,51733
  ITEM_CAST_DATE, ITEM_CAST_TIME, ITEM_CAST_DATETIME, ITEM_CAST_CHAR,Cast_target::ITEM_CAST_CHAR1747,51733
  ITEM_CAST_DECIMALCast_target::ITEM_CAST_DECIMAL1748,51803
class Item_func_row_count 1752,51828
  Item_func_row_count(Item_func_row_count::Item_func_row_count1755,51886
  const char *func_name(Item_func_row_count::func_name1757,51952
  void fix_length_and_dec(Item_func_row_count::fix_length_and_dec1758,52008
class Item_func_sp 1772,52168
  virtual ~Item_func_sp(Item_func_sp::~Item_func_sp1796,52704
  longlong val_int(Item_func_sp::val_int1813,52984
  double val_real(Item_func_sp::val_real1820,53099
  my_decimal *val_decimal(Item_func_sp::val_decimal1827,53205
  String *val_str(Item_func_sp::val_str1834,53349
  virtual bool change_context_processor(Item_func_sp::change_context_processor1853,53843
  virtual enum Functype functype(Item_func_sp::functype1857,53996
  bool is_expensive(Item_func_sp::is_expensive1861,54132
  inline Field *get_sp_result_field(Item_func_sp::get_sp_result_field1863,54169
class Item_func_found_rows 1870,54248
  Item_func_found_rows(Item_func_found_rows::Item_func_found_rows1873,54307
  const char *func_name(Item_func_found_rows::func_name1875,54374
  void fix_length_and_dec(Item_func_found_rows::fix_length_and_dec1876,54431
class Item_func_uuid_short 1882,54520
  Item_func_uuid_short(Item_func_uuid_short::Item_func_uuid_short1885,54579
  const char *func_name(Item_func_uuid_short::func_name1886,54624
  void fix_length_and_dec(Item_func_uuid_short::fix_length_and_dec1888,54703
  bool check_partition_func_processor(Item_func_uuid_short::check_partition_func_processor1890,54770

sql/item_geofunc.h,7272
#define ITEM_GEOFUNC_INCLUDED2,30
class Item_geometry_func:Item_geometry_func28,967
  Item_geometry_func(Item_geometry_func::Item_geometry_func31,1024
  Item_geometry_func(Item_geometry_func::Item_geometry_func32,1067
  Item_geometry_func(Item_geometry_func::Item_geometry_func33,1118
  Item_geometry_func(Item_geometry_func::Item_geometry_func34,1179
  Item_geometry_func(Item_geometry_func::Item_geometry_func35,1250
  enum_field_types field_type(Item_geometry_func::field_type37,1342
  bool is_null(Item_geometry_func::is_null39,1453
class Item_func_geometry_from_text:Item_func_geometry_from_text42,1515
  Item_func_geometry_from_text(Item_func_geometry_from_text::Item_func_geometry_from_text45,1587
  Item_func_geometry_from_text(Item_func_geometry_from_text::Item_func_geometry_from_text46,1653
  const char *func_name(Item_func_geometry_from_text::func_name47,1737
class Item_func_geometry_from_wkb:Item_func_geometry_from_wkb51,1833
  Item_func_geometry_from_wkb(Item_func_geometry_from_wkb::Item_func_geometry_from_wkb54,1904
  Item_func_geometry_from_wkb(Item_func_geometry_from_wkb::Item_func_geometry_from_wkb55,1969
  const char *func_name(Item_func_geometry_from_wkb::func_name56,2052
class Item_func_as_wkt:Item_func_as_wkt60,2147
  Item_func_as_wkt(Item_func_as_wkt::Item_func_as_wkt63,2208
  const char *func_name(Item_func_as_wkt::func_name64,2263
class Item_func_as_wkb:Item_func_as_wkb69,2384
  Item_func_as_wkb(Item_func_as_wkb::Item_func_as_wkb72,2444
  const char *func_name(Item_func_as_wkb::func_name73,2498
  enum_field_types field_type(Item_func_as_wkb::field_type75,2579
class Item_func_geometry_type:Item_func_geometry_type78,2650
  Item_func_geometry_type(Item_func_geometry_type::Item_func_geometry_type81,2718
  const char *func_name(Item_func_geometry_type::func_name83,2815
  void fix_length_and_dec(Item_func_geometry_type::fix_length_and_dec84,2874
class Item_func_centroid:Item_func_centroid92,3029
  Item_func_centroid(Item_func_centroid::Item_func_centroid95,3091
  const char *func_name(Item_func_centroid::func_name96,3147
class Item_func_envelope:Item_func_envelope101,3285
  Item_func_envelope(Item_func_envelope::Item_func_envelope104,3347
  const char *func_name(Item_func_envelope::func_name105,3403
class Item_func_point:Item_func_point110,3541
  Item_func_point(Item_func_point::Item_func_point113,3600
  Item_func_point(Item_func_point::Item_func_point114,3665
  const char *func_name(Item_func_point::func_name115,3748
class Item_func_spatial_decomp:Item_func_spatial_decomp120,3883
  Item_func_spatial_decomp(Item_func_spatial_decomp::Item_func_spatial_decomp124,3980
  const char *func_name(Item_func_spatial_decomp::func_name126,4089
class Item_func_spatial_decomp_n:Item_func_spatial_decomp_n144,4466
  Item_func_spatial_decomp_n(Item_func_spatial_decomp_n::Item_func_spatial_decomp_n148,4567
  const char *func_name(Item_func_spatial_decomp_n::func_name150,4691
class Item_func_spatial_collection:Item_func_spatial_collection168,5068
  Item_func_spatial_collection(Item_func_spatial_collection::Item_func_spatial_collection174,5233
  void fix_length_and_dec(Item_func_spatial_collection::fix_length_and_dec182,5443
  const char *func_name(Item_func_spatial_collection::func_name198,5864
class Item_func_spatial_rel:Item_func_spatial_rel205,5952
  Item_func_spatial_rel(Item_func_spatial_rel::Item_func_spatial_rel209,6043
  enum Functype functype(Item_func_spatial_rel::functype212,6181
  enum Functype rev_functype(Item_func_spatial_rel::rev_functype223,6408
  const char *func_name(Item_func_spatial_rel::func_name224,6469
  virtual inline void print(Item_func_spatial_rel::print249,7042
  void fix_length_and_dec(Item_func_spatial_rel::fix_length_and_dec254,7159
  bool is_null(Item_func_spatial_rel::is_null255,7206
class Item_func_isempty:Item_func_isempty258,7268
  Item_func_isempty(Item_func_isempty::Item_func_isempty261,7325
  optimize_type select_optimize(Item_func_isempty::select_optimize263,7398
  const char *func_name(Item_func_isempty::func_name264,7464
  void fix_length_and_dec(Item_func_isempty::fix_length_and_dec265,7518
class Item_func_issimple:Item_func_issimple268,7569
  Item_func_issimple(Item_func_issimple::Item_func_issimple271,7627
  optimize_type select_optimize(Item_func_issimple::select_optimize273,7701
  const char *func_name(Item_func_issimple::func_name274,7767
  void fix_length_and_dec(Item_func_issimple::fix_length_and_dec275,7822
class Item_func_isclosed:Item_func_isclosed278,7873
  Item_func_isclosed(Item_func_isclosed::Item_func_isclosed281,7931
  optimize_type select_optimize(Item_func_isclosed::select_optimize283,8005
  const char *func_name(Item_func_isclosed::func_name284,8071
  void fix_length_and_dec(Item_func_isclosed::fix_length_and_dec285,8126
class Item_func_dimension:Item_func_dimension288,8177
  Item_func_dimension(Item_func_dimension::Item_func_dimension292,8251
  const char *func_name(Item_func_dimension::func_name294,8325
  void fix_length_and_dec(Item_func_dimension::fix_length_and_dec295,8381
class Item_func_x:Item_func_x298,8448
  Item_func_x(Item_func_x::Item_func_x302,8515
  const char *func_name(Item_func_x::func_name304,8581
  void fix_length_and_dec(Item_func_x::fix_length_and_dec305,8629
class Item_func_y:Item_func_y313,8734
  Item_func_y(Item_func_y::Item_func_y317,8801
  const char *func_name(Item_func_y::func_name319,8867
  void fix_length_and_dec(Item_func_y::fix_length_and_dec320,8915
class Item_func_numgeometries:Item_func_numgeometries328,9020
  Item_func_numgeometries(Item_func_numgeometries::Item_func_numgeometries332,9098
  const char *func_name(Item_func_numgeometries::func_name334,9176
  void fix_length_and_dec(Item_func_numgeometries::fix_length_and_dec335,9236
class Item_func_numinteriorring:Item_func_numinteriorring339,9304
  Item_func_numinteriorring(Item_func_numinteriorring::Item_func_numinteriorring343,9384
  const char *func_name(Item_func_numinteriorring::func_name345,9464
  void fix_length_and_dec(Item_func_numinteriorring::fix_length_and_dec346,9527
class Item_func_numpoints:Item_func_numpoints350,9595
  Item_func_numpoints(Item_func_numpoints::Item_func_numpoints354,9669
  const char *func_name(Item_func_numpoints::func_name356,9743
  void fix_length_and_dec(Item_func_numpoints::fix_length_and_dec357,9799
class Item_func_area:Item_func_area361,9867
  Item_func_area(Item_func_area::Item_func_area365,9937
  const char *func_name(Item_func_area::func_name367,10006
  void fix_length_and_dec(Item_func_area::fix_length_and_dec368,10057
class Item_func_glength:Item_func_glength376,10162
  Item_func_glength(Item_func_glength::Item_func_glength380,10235
  const char *func_name(Item_func_glength::func_name382,10307
  void fix_length_and_dec(Item_func_glength::fix_length_and_dec383,10361
class Item_func_srid:Item_func_srid391,10466
  Item_func_srid(Item_func_srid::Item_func_srid395,10535
  const char *func_name(Item_func_srid::func_name397,10604
  void fix_length_and_dec(Item_func_srid::fix_length_and_dec398,10655
#define GEOM_NEW(401,10722
#define GEOM_NEW(405,10822

sql/item_row.h,833
#define ITEM_ROW_INCLUDED2,26
class Item_row:Item_row19,798
  Item_row(Item_row::Item_row28,993
  enum Type type(Item_row::type38,1236
  bool is_null(Item_row::is_null40,1325
  void make_field(Item_row::make_field41,1365
  double val_real(Item_row::val_real45,1458
  longlong val_int(Item_row::val_int50,1546
  String *val_str(Item_row::val_str55,1639
  my_decimal *val_decimal(Item_row::val_decimal60,1739
  table_map used_tables(Item_row::used_tables68,1993
  bool const_item(Item_row::const_item69,2056
  enum Item_result result_type(Item_row::result_type70,2112
  table_map not_null_tables(Item_row::not_null_tables72,2203
  uint cols(Item_row::cols78,2470
  Item* element_index(Item_row::element_index79,2506
  Item** addr(Item_row::addr80,2557
  bool null_inside(Item_row::null_inside82,2628

sql/item_strfunc.h,14657
#define ITEM_STRFUNC_INCLUDED2,30
class Item_str_func 28,963
  String *make_empty_result(Item_str_func::make_empty_result36,1196
  Item_str_func(Item_str_func::Item_str_func41,1311
  Item_str_func(Item_str_func::Item_str_func42,1370
  Item_str_func(Item_str_func::Item_str_func43,1436
  Item_str_func(Item_str_func::Item_str_func44,1513
  Item_str_func(Item_str_func::Item_str_func45,1600
  Item_str_func(Item_str_func::Item_str_func46,1696
  Item_str_func(Item_str_func::Item_str_func47,1803
  enum Item_result result_type Item_str_func::result_type51,1965
class Item_str_ascii_func 62,2234
  Item_str_ascii_func(Item_str_ascii_func::Item_str_ascii_func66,2312
  Item_str_ascii_func(Item_str_ascii_func::Item_str_ascii_func67,2356
  Item_str_ascii_func(Item_str_ascii_func::Item_str_ascii_func68,2408
  Item_str_ascii_func(Item_str_ascii_func::Item_str_ascii_func69,2470
  String *val_str(Item_str_ascii_func::val_str70,2542
class Item_func_md5 78,2688
  Item_func_md5(Item_func_md5::Item_func_md582,2766
  const char *func_name(Item_func_md5::func_name85,2882
class Item_func_sha 89,2937
  Item_func_sha(Item_func_sha::Item_func_sha92,2995
  const char *func_name(Item_func_sha::func_name95,3121
class Item_func_sha2 98,3176
  Item_func_sha2(Item_func_sha2::Item_func_sha2101,3235
  const char *func_name(Item_func_sha2::func_name104,3364
class Item_func_aes_encrypt 107,3419
  Item_func_aes_encrypt(Item_func_aes_encrypt::Item_func_aes_encrypt110,3479
  const char *func_name(Item_func_aes_encrypt::func_name113,3602
class Item_func_aes_decrypt 116,3664
  Item_func_aes_decrypt(Item_func_aes_decrypt::Item_func_aes_decrypt119,3725
  const char *func_name(Item_func_aes_decrypt::func_name122,3848
class Item_func_concat 126,3911
  Item_func_concat(Item_func_concat::Item_func_concat130,3986
  Item_func_concat(Item_func_concat::Item_func_concat131,4047
  const char *func_name(Item_func_concat::func_name134,4164
class Item_func_concat_ws 137,4221
  Item_func_concat_ws(Item_func_concat_ws::Item_func_concat_ws141,4299
  const char *func_name(Item_func_concat_ws::func_name144,4421
  table_map not_null_tables(Item_func_concat_ws::not_null_tables145,4477
class Item_func_reverse 148,4531
  Item_func_reverse(Item_func_reverse::Item_func_reverse152,4607
  const char *func_name(Item_func_reverse::func_name155,4715
class Item_func_replace 159,4774
  Item_func_replace(Item_func_replace::Item_func_replace163,4861
  const char *func_name(Item_func_replace::func_name167,5015
class Item_func_insert 171,5074
  Item_func_insert(Item_func_insert::Item_func_insert175,5149
  const char *func_name(Item_func_insert::func_name179,5324
class Item_str_conv 183,5382
  Item_str_conv(Item_str_conv::Item_str_conv190,5516
class Item_func_lcase 195,5602
  Item_func_lcase(Item_func_lcase::Item_func_lcase198,5656
  const char *func_name(Item_func_lcase::func_name199,5710
class Item_func_ucase 203,5795
  Item_func_ucase(Item_func_ucase::Item_func_ucase206,5849
  const char *func_name(Item_func_ucase::func_name207,5903
class Item_func_left 212,5989
  Item_func_left(Item_func_left::Item_func_left216,6062
  const char *func_name(Item_func_left::func_name219,6177
class Item_func_right 223,6233
  Item_func_right(Item_func_right::Item_func_right227,6307
  const char *func_name(Item_func_right::func_name230,6423
class Item_func_substr 234,6480
  Item_func_substr(Item_func_substr::Item_func_substr238,6555
  Item_func_substr(Item_func_substr::Item_func_substr239,6614
  const char *func_name(Item_func_substr::func_name242,6741
class Item_func_substr_index 246,6799
  Item_func_substr_index(Item_func_substr_index::Item_func_substr_index250,6880
  const char *func_name(Item_func_substr_index::func_name253,7013
class Item_func_trim 257,7080
  Item_func_trim(Item_func_trim::Item_func_trim263,7181
  Item_func_trim(Item_func_trim::Item_func_trim264,7238
  const char *func_name(Item_func_trim::func_name267,7343
  virtual const char *mode_name(Item_func_trim::mode_name269,7457
class Item_func_ltrim 273,7521
  Item_func_ltrim(Item_func_ltrim::Item_func_ltrim276,7576
  Item_func_ltrim(Item_func_ltrim::Item_func_ltrim277,7635
  const char *func_name(Item_func_ltrim::func_name279,7713
  const char *mode_name(Item_func_ltrim::mode_name280,7765
class Item_func_rtrim 284,7824
  Item_func_rtrim(Item_func_rtrim::Item_func_rtrim287,7879
  Item_func_rtrim(Item_func_rtrim::Item_func_rtrim288,7938
  const char *func_name(Item_func_rtrim::func_name290,8016
  const char *mode_name(Item_func_rtrim::mode_name291,8068
class Item_func_password 303,8485
  Item_func_password(Item_func_password::Item_func_password307,8601
  void fix_length_and_dec(Item_func_password::fix_length_and_dec309,8696
  const char *func_name(Item_func_password::func_name313,8811
class Item_func_old_password 325,9175
  Item_func_old_password(Item_func_old_password::Item_func_old_password329,9298
  void fix_length_and_dec(Item_func_old_password::fix_length_and_dec331,9397
  const char *func_name(Item_func_old_password::func_name335,9517
class Item_func_des_encrypt 340,9652
  Item_func_des_encrypt(Item_func_des_encrypt::Item_func_des_encrypt344,9740
  Item_func_des_encrypt(Item_func_des_encrypt::Item_func_des_encrypt345,9794
  void fix_length_and_dec(Item_func_des_encrypt::fix_length_and_dec347,9888
  const char *func_name(Item_func_des_encrypt::func_name353,10027
class Item_func_des_decrypt 356,10089
  Item_func_des_decrypt(Item_func_des_decrypt::Item_func_des_decrypt360,10169
  Item_func_des_decrypt(Item_func_des_decrypt::Item_func_des_decrypt361,10223
  void fix_length_and_dec(Item_func_des_decrypt::fix_length_and_dec363,10317
  const char *func_name(Item_func_des_decrypt::func_name371,10500
class Item_func_encrypt 374,10562
  void constructor_helper(Item_func_encrypt::constructor_helper379,10678
  Item_func_encrypt(Item_func_encrypt::Item_func_encrypt384,10758
  Item_func_encrypt(Item_func_encrypt::Item_func_encrypt388,10839
  void fix_length_and_dec(Item_func_encrypt::fix_length_and_dec393,10960
  const char *func_name(Item_func_encrypt::func_name394,11023
class Item_func_encode 400,11106
  Item_func_encode(Item_func_encode::Item_func_encode408,11270
  const char *func_name(Item_func_encode::func_name412,11399
class Item_func_decode 421,11582
  Item_func_decode(Item_func_decode::Item_func_decode424,11640
  const char *func_name(Item_func_decode::func_name425,11710
class Item_func_sysconst 431,11814
  Item_func_sysconst(Item_func_sysconst::Item_func_sysconst434,11871
class Item_func_database 446,12229
  Item_func_database(Item_func_database::Item_func_database449,12291
  void fix_length_and_dec(Item_func_database::fix_length_and_dec451,12368
  const char *func_name(Item_func_database::func_name456,12486
  const char *fully_qualified_func_name(Item_func_database::fully_qualified_func_name457,12541
class Item_func_user 461,12619
  Item_func_user(Item_func_user::Item_func_user467,12739
  String *val_str(Item_func_user::val_str471,12813
  void fix_length_and_dec(Item_func_user::fix_length_and_dec477,12961
  const char *func_name(Item_func_user::func_name482,13099
  const char *fully_qualified_func_name(Item_func_user::fully_qualified_func_name483,13150
  int save_in_field(Item_func_user::save_in_field484,13219
class Item_func_current_user 491,13342
  Item_func_current_user(Item_func_current_user::Item_func_current_user496,13441
  const char *func_name(Item_func_current_user::func_name499,13575
  const char *fully_qualified_func_name(Item_func_current_user::fully_qualified_func_name500,13634
class Item_func_soundex 504,13716
  Item_func_soundex(Item_func_soundex::Item_func_soundex508,13792
  const char *func_name(Item_func_soundex::func_name511,13900
class Item_func_elt 515,13959
  Item_func_elt(Item_func_elt::Item_func_elt518,14011
  const char *func_name(Item_func_elt::func_name523,14173
class Item_func_make_set 527,14228
  Item_func_make_set(Item_func_make_set::Item_func_make_set533,14318
  bool fix_fields(Item_func_make_set::fix_fields535,14429
  const char *func_name(Item_func_make_set::func_name545,14772
  bool walk(Item_func_make_set::walk547,14828
class Item_func_format 557,15149
  Item_func_format(Item_func_format::Item_func_format562,15249
  Item_func_format(Item_func_format::Item_func_format563,15324
  const char *func_name(Item_func_format::func_name569,15523
class Item_func_char 574,15644
  Item_func_char(Item_func_char::Item_func_char577,15697
  Item_func_char(Item_func_char::Item_func_char579,15791
  void fix_length_and_dec(Item_func_char::fix_length_and_dec582,15921
  const char *func_name(Item_func_char::func_name586,15989
class Item_func_repeat 590,16045
  Item_func_repeat(Item_func_repeat::Item_func_repeat594,16120
  const char *func_name(Item_func_repeat::func_name597,16249
class Item_func_rpad 601,16307
  Item_func_rpad(Item_func_rpad::Item_func_rpad605,16390
  const char *func_name(Item_func_rpad::func_name609,16537
class Item_func_lpad 613,16593
  Item_func_lpad(Item_func_lpad::Item_func_lpad617,16676
  const char *func_name(Item_func_lpad::func_name621,16823
class Item_func_conv 625,16879
  Item_func_conv(Item_func_conv::Item_func_conv628,16932
  const char *func_name(Item_func_conv::func_name629,16999
  void fix_length_and_dec(Item_func_conv::fix_length_and_dec631,17079
class Item_func_hex 640,17196
  Item_func_hex(Item_func_hex::Item_func_hex644,17274
  const char *func_name(Item_func_hex::func_name645,17326
  void fix_length_and_dec(Item_func_hex::fix_length_and_dec647,17411
class Item_func_unhex 655,17551
  Item_func_unhex(Item_func_unhex::Item_func_unhex659,17625
  const char *func_name(Item_func_unhex::func_name664,17739
  void fix_length_and_dec(Item_func_unhex::fix_length_and_dec666,17820
class Item_func_like_range 676,17972
  Item_func_like_range(Item_func_like_range::Item_func_like_range683,18099
  void fix_length_and_dec(Item_func_like_range::fix_length_and_dec687,18252
class Item_func_like_range_min 696,18380
  Item_func_like_range_min(Item_func_like_range_min::Item_func_like_range_min699,18450
  const char *func_name(Item_func_like_range_min::func_name701,18538
class Item_func_like_range_max 705,18604
  Item_func_like_range_max(Item_func_like_range_max::Item_func_like_range_max708,18674
  const char *func_name(Item_func_like_range_max::func_name710,18762
class Item_func_binary 715,18835
  Item_func_binary(Item_func_binary::Item_func_binary718,18890
  String *val_str(Item_func_binary::val_str719,18939
  void fix_length_and_dec(Item_func_binary::fix_length_and_dec728,19148
  const char *func_name(Item_func_binary::func_name734,19319
class Item_load_file 738,19385
  Item_load_file(Item_load_file::Item_load_file742,19458
  const char *func_name(Item_load_file::func_name744,19534
  void fix_length_and_dec(Item_load_file::fix_length_and_dec745,19590
class Item_func_export_set:Item_func_export_set754,19738
  Item_func_export_set(Item_func_export_set::Item_func_export_set757,19798
  Item_func_export_set(Item_func_export_set::Item_func_export_set758,19871
  Item_func_export_set(Item_func_export_set::Item_func_export_set759,19954
  const char *func_name(Item_func_export_set::func_name762,20109
class Item_func_inet_ntoa 765,20170
  Item_func_inet_ntoa(Item_func_inet_ntoa::Item_func_inet_ntoa768,20229
  const char *func_name(Item_func_inet_ntoa::func_name772,20322
  void fix_length_and_dec(Item_func_inet_ntoa::fix_length_and_dec773,20378
class Item_func_quote 781,20516
  Item_func_quote(Item_func_quote::Item_func_quote785,20590
  const char *func_name(Item_func_quote::func_name786,20638
  void fix_length_and_dec(Item_func_quote::fix_length_and_dec788,20719
class Item_func_conv_charset 797,21003
  Item_func_conv_charset(Item_func_conv_charset::Item_func_conv_charset804,21170
  Item_func_conv_charset(Item_func_conv_charset::Item_func_conv_charset806,21295
  const char *func_name(Item_func_conv_charset::func_name837,22243
class Item_func_set_collation 841,22364
  Item_func_set_collation(Item_func_set_collation::Item_func_set_collation844,22426
  const char *func_name(Item_func_set_collation::func_name848,22604
  enum Functype functype(Item_func_set_collation::functype849,22658
  Item_field *filed_for_view_update(Item_func_set_collation::filed_for_view_update851,22779
class Item_func_charset 858,22931
  Item_func_charset(Item_func_charset::Item_func_charset861,22987
  const char *func_name(Item_func_charset::func_name863,23066
  void fix_length_and_dec(Item_func_charset::fix_length_and_dec864,23120
  table_map not_null_tables(Item_func_charset::not_null_tables870,23291
class Item_func_collation 873,23345
  Item_func_collation(Item_func_collation::Item_func_collation876,23403
  const char *func_name(Item_func_collation::func_name878,23484
  void fix_length_and_dec(Item_func_collation::fix_length_and_dec879,23540
  table_map not_null_tables(Item_func_collation::not_null_tables885,23711
class Item_func_crc32 888,23765
  Item_func_crc32(Item_func_crc32::Item_func_crc32892,23835
  const char *func_name(Item_func_crc32::func_name893,23902
  void fix_length_and_dec(Item_func_crc32::fix_length_and_dec894,23954
class Item_func_uncompressed_length 898,24027
  Item_func_uncompressed_length(Item_func_uncompressed_length::Item_func_uncompressed_length902,24112
  const char *func_name(Item_func_uncompressed_length::func_name903,24172
  void fix_length_and_dec(Item_func_uncompressed_length::fix_length_and_dec904,24235
#define ZLIB_DEPENDED_FUNCTION 909,24329
#define ZLIB_DEPENDED_FUNCTION 911,24368
class Item_func_compress:Item_func_compress914,24435
  Item_func_compress(Item_func_compress::Item_func_compress918,24509
  void fix_length_and_dec(Item_func_compress::fix_length_and_dec919,24558
  const char *func_name(Item_func_compress::func_name920,24633
class Item_func_uncompress:Item_func_uncompress924,24740
  Item_func_uncompress(Item_func_uncompress::Item_func_uncompress928,24816
  void fix_length_and_dec(Item_func_uncompress::fix_length_and_dec929,24868
  const char *func_name(Item_func_uncompress::func_name930,24942
#define UUID_LENGTH 934,25051
class Item_func_uuid:Item_func_uuid935,25092
  Item_func_uuid(Item_func_uuid::Item_func_uuid938,25145
  void fix_length_and_dec(Item_func_uuid::fix_length_and_dec939,25184
  const char *func_name(Item_func_uuid::func_name945,25355

sql/item_subselect.h,5047
#define ITEM_SUBSELECT_INCLUDED2,32
typedef class st_select_lex SELECT_LEX;33,1070
typedef Comp_creator* (*chooser_compare_func_creator)chooser_compare_func_creator39,1212
class Item_subselect 43,1314
  enum trans_res Item_subselect::trans_res77,2392
  enum trans_res {RES_OK,Item_subselect::trans_res::RES_OK77,2392
  enum trans_res {RES_OK, RES_REDUCE,Item_subselect::trans_res::RES_REDUCE77,2392
  enum trans_res {RES_OK, RES_REDUCE, RES_ERROR}Item_subselect::trans_res::RES_ERROR77,2392
  enum subs_type Item_subselect::subs_type78,2442
  enum subs_type {UNKNOWN_SUBS,Item_subselect::subs_type::UNKNOWN_SUBS78,2442
  enum subs_type {UNKNOWN_SUBS, SINGLEROW_SUBS,Item_subselect::subs_type::SINGLEROW_SUBS78,2442
		  EXISTS_SUBS,Item_subselect::subs_type::EXISTS_SUBS79,2490
		  EXISTS_SUBS, IN_SUBS,Item_subselect::subs_type::IN_SUBS79,2490
		  EXISTS_SUBS, IN_SUBS, ALL_SUBS,Item_subselect::subs_type::ALL_SUBS79,2490
		  EXISTS_SUBS, IN_SUBS, ALL_SUBS, ANY_SUBS}Item_subselect::subs_type::ANY_SUBS79,2490
  virtual subs_type substype(Item_subselect::substype83,2559
  virtual void reset(Item_subselect::reset95,2961
  bool assigned(Item_subselect::assigned100,3063
  void assigned(Item_subselect::assigned101,3108
  bool is_null(Item_subselect::is_null103,3181
  table_map not_null_tables(Item_subselect::not_null_tables112,3388
  inline table_map get_used_tables_cache(Item_subselect::get_used_tables_cache114,3465
  inline bool get_const_item_cache(Item_subselect::get_const_item_cache115,3538
  virtual bool have_guarded_conds(Item_subselect::have_guarded_conds119,3734
  bool change_engine(Item_subselect::change_engine120,3788
  virtual void reset_value_registration(Item_subselect::reset_value_registration138,4261
  enum_parsing_place place(Item_subselect::place139,4306
  const char *func_name(Item_subselect::func_name147,4602
class Item_singlerow_subselect 162,5171
  Item_singlerow_subselect(Item_singlerow_subselect::Item_singlerow_subselect168,5329
  subs_type substype(Item_singlerow_subselect::substype171,5417
  Item* element_index(Item_singlerow_subselect::element_index186,5820
  Item** addr(Item_singlerow_subselect::addr187,5894
class Item_maxmin_subselect 211,6822
  bool any_value(Item_maxmin_subselect::any_value221,7157
  void register_value(Item_maxmin_subselect::register_value222,7199
  void reset_value_registration(Item_maxmin_subselect::reset_value_registration223,7245
class Item_exists_subselect 228,7330
  Item_exists_subselect(Item_exists_subselect::Item_exists_subselect235,7523
  subs_type substype(Item_exists_subselect::substype237,7571
  void reset(Item_exists_subselect::reset238,7618
  enum Item_result result_type(Item_exists_subselect::result_type243,7657
class Item_in_subselect 272,8592
  bool *get_cond_guard(Item_in_subselect::get_cond_guard289,8996
  void set_cond_guard_var(Item_in_subselect::set_cond_guard_var293,9097
  bool have_guarded_conds(Item_in_subselect::have_guarded_conds298,9209
  Item_in_subselect(Item_in_subselect::Item_in_subselect303,9420
  subs_type substype(Item_in_subselect::substype308,9571
  void reset(Item_in_subselect::reset309,9614
  void update_null_value Item_in_subselect::update_null_value323,10034
  void top_level_item(Item_in_subselect::top_level_item325,10104
  inline bool is_top_level_item(Item_in_subselect::is_top_level_item326,10149
class Item_allany_subselect 338,10515
  subs_type substype(Item_allany_subselect::substype349,10834
class subselect_engine:subselect_engine355,11003
  subselect_engine(subselect_engine::subselect_engine366,11399
  virtual ~subselect_engine(subselect_engine::~subselect_engine375,11603
  THD * get_thd(subselect_engine::get_thd383,11819
  enum Item_result type(subselect_engine::type409,12702
  enum_field_types field_type(subselect_engine::field_type410,12749
  virtual bool may_be_null(subselect_engine::may_be_null412,12837
  virtual bool is_executed(subselect_engine::is_executed418,13170
class subselect_single_select_engine:subselect_single_select_engine427,13399
  bool is_executed(subselect_single_select_engine::is_executed451,14296
class subselect_union_engine:subselect_union_engine456,14367
class subselect_uniquesubquery_engine:subselect_uniquesubquery_engine499,15490
  subselect_uniquesubquery_engine(subselect_uniquesubquery_engine::subselect_uniquesubquery_engine513,15928
  uint cols(subselect_uniquesubquery_engine::cols524,16261
  uint8 uncacheable(subselect_uniquesubquery_engine::uncacheable525,16289
  table_map upper_select_const_tables(subselect_uniquesubquery_engine::upper_select_const_tables527,16363
  bool no_rows(subselect_uniquesubquery_engine::no_rows533,16612
class subselect_indexsubquery_engine:subselect_indexsubquery_engine537,16663
  subselect_indexsubquery_engine(subselect_indexsubquery_engine::subselect_indexsubquery_engine574,18331
inline bool Item_subselect::is_evaluated(595,19062
inline bool Item_subselect::is_uncacheable(600,19148

sql/item_sum.h,15566
#define ITEM_SUM_INCLUDED2,26
class Aggregator 46,1514
  Aggregator Aggregator::Aggregator73,2269
  virtual ~Aggregator Aggregator::~Aggregator74,2344
  enum Aggregator_type Aggregator::Aggregator_type76,2412
  enum Aggregator_type { SIMPLE_AGGREGATOR,Aggregator::Aggregator_type::SIMPLE_AGGREGATOR76,2412
  enum Aggregator_type { SIMPLE_AGGREGATOR, DISTINCT_AGGREGATOR Aggregator::Aggregator_type::DISTINCT_AGGREGATOR76,2412
class Item_sum 314,13560
  bool has_force_copy_fields(Item_sum::has_force_copy_fields344,14314
  bool has_with_distinct(Item_sum::has_with_distinct345,14381
  enum SumfunctypeItem_sum::Sumfunctype347,14445
  { COUNT_FUNC,Item_sum::Sumfunctype::COUNT_FUNC348,14464
  { COUNT_FUNC, COUNT_DISTINCT_FUNC,Item_sum::Sumfunctype::COUNT_DISTINCT_FUNC348,14464
  { COUNT_FUNC, COUNT_DISTINCT_FUNC, SUM_FUNC,Item_sum::Sumfunctype::SUM_FUNC348,14464
  { COUNT_FUNC, COUNT_DISTINCT_FUNC, SUM_FUNC, SUM_DISTINCT_FUNC,Item_sum::Sumfunctype::SUM_DISTINCT_FUNC348,14464
  { COUNT_FUNC, COUNT_DISTINCT_FUNC, SUM_FUNC, SUM_DISTINCT_FUNC, AVG_FUNC,Item_sum::Sumfunctype::AVG_FUNC348,14464
    AVG_DISTINCT_FUNC,Item_sum::Sumfunctype::AVG_DISTINCT_FUNC349,14540
    AVG_DISTINCT_FUNC, MIN_FUNC,Item_sum::Sumfunctype::MIN_FUNC349,14540
    AVG_DISTINCT_FUNC, MIN_FUNC, MAX_FUNC,Item_sum::Sumfunctype::MAX_FUNC349,14540
    AVG_DISTINCT_FUNC, MIN_FUNC, MAX_FUNC, STD_FUNC,Item_sum::Sumfunctype::STD_FUNC349,14540
    VARIANCE_FUNC,Item_sum::Sumfunctype::VARIANCE_FUNC350,14593
    VARIANCE_FUNC, SUM_BIT_FUNC,Item_sum::Sumfunctype::SUM_BIT_FUNC350,14593
    VARIANCE_FUNC, SUM_BIT_FUNC, UDF_SUM_FUNC,Item_sum::Sumfunctype::UDF_SUM_FUNC350,14593
    VARIANCE_FUNC, SUM_BIT_FUNC, UDF_SUM_FUNC, GROUP_CONCAT_FUNCItem_sum::Sumfunctype::GROUP_CONCAT_FUNC350,14593
  Item_sum(Item_sum::Item_sum386,16136
  Item_sum(Item_sum::Item_sum391,16255
  Item_sum(Item_sum::Item_sum398,16442
  enum Type type(Item_sum::type408,16790
  inline bool reset_and_add(Item_sum::reset_and_add414,17006
  virtual bool keep_field_type(Item_sum::keep_field_type436,17834
  virtual void fix_length_and_dec(Item_sum::fix_length_and_dec437,17891
  virtual Item *result_item(Item_sum::result_item438,17959
  table_map used_tables(Item_sum::used_tables440,18039
  bool is_null(Item_sum::is_null442,18131
  void make_const Item_sum::make_const443,18171
  virtual bool const_item(Item_sum::const_item448,18254
  virtual bool const_during_execution(Item_sum::const_during_execution449,18313
  virtual void no_rows_in_result(Item_sum::no_rows_in_result463,18888
  virtual void make_unique(Item_sum::make_unique470,19094
  st_select_lex *depended_from(Item_sum::depended_from478,19518
  Item *get_arg(Item_sum::get_arg481,19611
  uint get_arg_count(Item_sum::get_arg_count483,19705
  void init_aggregator(Item_sum::init_aggregator486,19802
  inline bool aggregator_setup(Item_sum::aggregator_setup497,19961
  inline void aggregator_clear(Item_sum::aggregator_clear503,20083
  inline bool aggregator_add(Item_sum::aggregator_add509,20191
  void set_distinct(Item_sum::set_distinct512,20308
  virtual bool setup(Item_sum::setup528,20633
class Aggregator_distinct 545,20993
  Aggregator_distinct Aggregator_distinct::Aggregator_distinct611,23445
  Aggregator_type Aggrtype(Aggregator_distinct::Aggrtype615,23615
class Aggregator_simple 635,24165
  Aggregator_simple Aggregator_simple::Aggregator_simple639,24220
  Aggregator_type Aggrtype(Aggregator_simple::Aggrtype641,24281
  bool setup(Aggregator_simple::setup643,24353
  void clear(Aggregator_simple::clear644,24410
  bool add(Aggregator_simple::add645,24448
  void endup(Aggregator_simple::endup646,24489
class Item_sum_num 653,24635
  Item_sum_num(Item_sum_num::Item_sum_num664,24967
  Item_sum_num(Item_sum_num::Item_sum_num665,25019
  Item_sum_num(Item_sum_num::Item_sum_num667,25099
  Item_sum_num(Item_sum_num::Item_sum_num668,25170
  Item_sum_num(Item_sum_num::Item_sum_num670,25248
  longlong val_int(Item_sum_num::val_int673,25390
class Item_sum_int 684,25621
  Item_sum_int(Item_sum_int::Item_sum_int687,25671
  Item_sum_int(Item_sum_int::Item_sum_int688,25729
  Item_sum_int(Item_sum_int::Item_sum_int689,25785
  double val_real(Item_sum_int::val_real690,25858
  enum Item_result result_type Item_sum_int::result_type693,26006
  void fix_length_and_dec(Item_sum_int::fix_length_and_dec694,26069
class Item_sum_sum 699,26160
  Item_sum_sum(Item_sum_sum::Item_sum_sum709,26341
  enum Sumfunctype sum_func Item_sum_sum::sum_func714,26494
  enum Item_result result_type Item_sum_sum::result_type724,26750
  void no_rows_in_result(Item_sum_sum::no_rows_in_result727,26859
  const char *func_name(Item_sum_sum::func_name728,26889
class Item_sum_count 736,27028
  Item_sum_count(Item_sum_count::Item_sum_count747,27187
  Item_sum_count(Item_sum_count::Item_sum_count759,27463
  Item_sum_count(Item_sum_count::Item_sum_count764,27563
  enum Sumfunctype sum_func Item_sum_count::sum_func767,27666
  void no_rows_in_result(Item_sum_count::no_rows_in_result771,27781
  void make_const(Item_sum_count::make_const772,27821
  const char *func_name(Item_sum_count::func_name780,27985
class Item_avg_field 792,28202
  enum Type type(Item_avg_field::type800,28428
  bool is_null(Item_avg_field::is_null804,28564
  enum_field_types field_type(Item_avg_field::field_type806,28653
  void fix_length_and_dec(Item_avg_field::fix_length_and_dec811,28791
  enum Item_result result_type Item_avg_field::result_type812,28822
  const char *func_name(Item_avg_field::func_name813,28886
class Item_sum_avg 817,28963
  Item_sum_avg(Item_sum_avg::Item_sum_avg824,29099
  Item_sum_avg(Item_sum_avg::Item_sum_avg827,29200
  enum Sumfunctype sum_func Item_sum_avg::sum_func832,29369
  longlong val_int(Item_sum_avg::val_int840,29609
  Item *result_item(Item_sum_avg::result_item845,29788
  void no_rows_in_result(Item_sum_avg::no_rows_in_result847,29874
  const char *func_name(Item_sum_avg::func_name848,29904
  void cleanup(Item_sum_avg::cleanup854,30117
class Item_variance_field 863,30215
  enum Type type(Item_variance_field::type874,30505
  longlong val_int(Item_variance_field::val_int876,30582
  String *val_str(Item_variance_field::val_str878,30675
  my_decimal *val_decimal(Item_variance_field::val_decimal880,30746
  bool is_null(Item_variance_field::is_null882,30838
  enum_field_types field_type(Item_variance_field::field_type883,30899
  void fix_length_and_dec(Item_variance_field::fix_length_and_dec888,31037
  enum Item_result result_type Item_variance_field::result_type889,31068
  const char *func_name(Item_variance_field::func_name890,31132
class Item_sum_variance 914,31964
  Item_sum_variance(Item_sum_variance::Item_sum_variance929,32324
  enum Sumfunctype sum_func Item_sum_variance::sum_func933,32524
  Item *result_item(Item_sum_variance::result_item940,32724
  void no_rows_in_result(Item_sum_variance::no_rows_in_result942,32802
  const char *func_name(Item_sum_variance::func_name943,32832
  enum Item_result result_type Item_sum_variance::result_type947,33026
  void cleanup(Item_sum_variance::cleanup948,33090
class Item_std_field 957,33183
  enum Type type(Item_std_field::type961,33280
  enum Item_result result_type Item_std_field::result_type964,33394
  enum_field_types field_type(Item_std_field::field_type965,33458
  const char *func_name(Item_std_field::func_name966,33525
class Item_sum_std 973,33653
  Item_sum_std(Item_sum_std::Item_sum_std976,33710
  Item_sum_std(Item_sum_std::Item_sum_std978,33806
  enum Sumfunctype sum_func Item_sum_std::sum_func981,33892
  Item *result_item(Item_sum_std::result_item983,33971
  const char *func_name(Item_sum_std::func_name985,34046
  enum Item_result result_type Item_sum_std::result_type987,34129
  enum_field_types field_type(Item_sum_std::field_type988,34193
class Item_sum_hybrid 994,34371
  Item_sum_hybrid(Item_sum_hybrid::Item_sum_hybrid1005,34651
  Item_sum_hybrid(Item_sum_hybrid::Item_sum_hybrid1010,34895
  bool keep_field_type(Item_sum_hybrid::keep_field_type1023,35387
  enum Item_result result_type Item_sum_hybrid::result_type1024,35436
  enum enum_field_types field_type(Item_sum_hybrid::field_type1025,35500
  bool any_value(Item_sum_hybrid::any_value1032,35759
  bool result_as_longlong(Item_sum_hybrid::result_as_longlong1040,36048
class Item_sum_min 1044,36123
  Item_sum_min(Item_sum_min::Item_sum_min1047,36176
  Item_sum_min(Item_sum_min::Item_sum_min1048,36239
  enum Sumfunctype sum_func Item_sum_min::sum_func1049,36315
  const char *func_name(Item_sum_min::func_name1052,36386
class Item_sum_max 1057,36474
  Item_sum_max(Item_sum_max::Item_sum_max1060,36527
  Item_sum_max(Item_sum_max::Item_sum_max1061,36591
  enum Sumfunctype sum_func Item_sum_max::sum_func1062,36667
  const char *func_name(Item_sum_max::func_name1065,36738
class Item_sum_bit 1070,36826
  Item_sum_bit(Item_sum_bit::Item_sum_bit1076,36917
  Item_sum_bit(Item_sum_bit::Item_sum_bit1078,37037
  enum Sumfunctype sum_func Item_sum_bit::sum_func1080,37162
  void fix_length_and_dec(Item_sum_bit::fix_length_and_dec1085,37305
  void cleanup(Item_sum_bit::cleanup1087,37412
class Item_sum_or 1095,37493
  Item_sum_or(Item_sum_or::Item_sum_or1098,37542
  Item_sum_or(Item_sum_or::Item_sum_or1099,37605
  const char *func_name(Item_sum_or::func_name1101,37690
class Item_sum_and 1106,37781
  Item_sum_and(Item_sum_and::Item_sum_and1109,37833
  Item_sum_and(Item_sum_and::Item_sum_and1110,37906
  const char *func_name(Item_sum_and::func_name1112,37993
class Item_sum_xor 1116,38084
  Item_sum_xor(Item_sum_xor::Item_sum_xor1119,38136
  Item_sum_xor(Item_sum_xor::Item_sum_xor1120,38200
  const char *func_name(Item_sum_xor::func_name1122,38287
class Item_udf_sum 1133,38432
  Item_udf_sum(Item_udf_sum::Item_udf_sum1139,38510
  Item_udf_sum(Item_udf_sum::Item_udf_sum1142,38595
  Item_udf_sum(Item_udf_sum::Item_udf_sum1145,38701
  const char *func_name(Item_udf_sum::func_name1148,38817
  bool fix_fields(Item_udf_sum::fix_fields1149,38872
  enum Sumfunctype sum_func Item_udf_sum::sum_func1163,39198
  virtual bool have_field_update(Item_udf_sum::have_field_update1164,39260
  void reset_field(Item_udf_sum::reset_field1168,39350
  void update_field(Item_udf_sum::update_field1169,39375
class Item_sum_udf_float 1175,39487
  Item_sum_udf_float(Item_sum_udf_float::Item_sum_udf_float1178,39544
  Item_sum_udf_float(Item_sum_udf_float::Item_sum_udf_float1180,39614
  Item_sum_udf_float(Item_sum_udf_float::Item_sum_udf_float1182,39708
  longlong val_int(Item_sum_udf_float::val_int1184,39797
  void fix_length_and_dec(Item_sum_udf_float::fix_length_and_dec1192,40008
class Item_sum_udf_int 1197,40103
  Item_sum_udf_int(Item_sum_udf_int::Item_sum_udf_int1200,40157
  Item_sum_udf_int(Item_sum_udf_int::Item_sum_udf_int1202,40225
  Item_sum_udf_int(Item_sum_udf_int::Item_sum_udf_int1204,40317
  double val_real(Item_sum_udf_int::val_real1207,40424
  enum Item_result result_type Item_sum_udf_int::result_type1211,40594
  void fix_length_and_dec(Item_sum_udf_int::fix_length_and_dec1212,40657
class Item_sum_udf_str 1217,40753
  Item_sum_udf_str(Item_sum_udf_str::Item_sum_udf_str1220,40807
  Item_sum_udf_str(Item_sum_udf_str::Item_sum_udf_str1222,40875
  Item_sum_udf_str(Item_sum_udf_str::Item_sum_udf_str1224,40966
  double val_real(Item_sum_udf_str::val_real1227,41080
  longlong val_int(Item_sum_udf_str::val_int1236,41321
  enum Item_result result_type Item_sum_udf_str::result_type1250,41709
class Item_sum_udf_decimal 1256,41841
  Item_sum_udf_decimal(Item_sum_udf_decimal::Item_sum_udf_decimal1259,41899
  Item_sum_udf_decimal(Item_sum_udf_decimal::Item_sum_udf_decimal1261,41971
  Item_sum_udf_decimal(Item_sum_udf_decimal::Item_sum_udf_decimal1263,42067
  enum Item_result result_type Item_sum_udf_decimal::result_type1269,42273
  void fix_length_and_dec(Item_sum_udf_decimal::fix_length_and_dec1270,42340
class Item_sum_udf_float 1276,42491
  Item_sum_udf_float(Item_sum_udf_float::Item_sum_udf_float1279,42548
  Item_sum_udf_float(Item_sum_udf_float::Item_sum_udf_float1281,42611
  Item_sum_udf_float(Item_sum_udf_float::Item_sum_udf_float1282,42688
  enum Sumfunctype sum_func Item_sum_udf_float::sum_func1284,42777
  double val_real(Item_sum_udf_float::val_real1285,42839
  void clear(Item_sum_udf_float::clear1286,42900
  bool add(Item_sum_udf_float::add1287,42918
  void update_field(Item_sum_udf_float::update_field1288,42947
class Item_sum_udf_int 1292,42977
  Item_sum_udf_int(Item_sum_udf_int::Item_sum_udf_int1295,43031
  Item_sum_udf_int(Item_sum_udf_int::Item_sum_udf_int1297,43092
  Item_sum_udf_int(Item_sum_udf_int::Item_sum_udf_int1298,43167
  enum Sumfunctype sum_func Item_sum_udf_int::sum_func1300,43252
  longlong val_int(Item_sum_udf_int::val_int1301,43314
  double val_real(Item_sum_udf_int::val_real1302,43374
  void clear(Item_sum_udf_int::clear1303,43433
  bool add(Item_sum_udf_int::add1304,43451
  void update_field(Item_sum_udf_int::update_field1305,43480
class Item_sum_udf_decimal 1309,43510
  Item_sum_udf_decimal(Item_sum_udf_decimal::Item_sum_udf_decimal1312,43569
  Item_sum_udf_decimal(Item_sum_udf_decimal::Item_sum_udf_decimal1314,43634
  Item_sum_udf_decimal(Item_sum_udf_decimal::Item_sum_udf_decimal1316,43717
  enum Sumfunctype sum_func Item_sum_udf_decimal::sum_func1318,43808
  double val_real(Item_sum_udf_decimal::val_real1319,43870
  my_decimal *val_decimal(Item_sum_udf_decimal::val_decimal1320,43931
  void clear(Item_sum_udf_decimal::clear1321,44010
  bool add(Item_sum_udf_decimal::add1322,44028
  void update_field(Item_sum_udf_decimal::update_field1323,44055
class Item_sum_udf_str 1327,44085
  Item_sum_udf_str(Item_sum_udf_str::Item_sum_udf_str1330,44139
  Item_sum_udf_str(Item_sum_udf_str::Item_sum_udf_str1332,44200
  Item_sum_udf_str(Item_sum_udf_str::Item_sum_udf_str1334,44279
  String *val_str(Item_sum_udf_str::val_str1336,44364
  double val_real(Item_sum_udf_str::val_real1338,44449
  longlong val_int(Item_sum_udf_str::val_int1339,44524
  enum Item_result result_type Item_sum_udf_str::result_type1340,44598
  void fix_length_and_dec(Item_sum_udf_str::fix_length_and_dec1341,44664
  enum Sumfunctype sum_func Item_sum_udf_str::sum_func1342,44724
  void clear(Item_sum_udf_str::clear1343,44786
  bool add(Item_sum_udf_str::add1344,44804
  void update_field(Item_sum_udf_str::update_field1345,44833
class Item_func_group_concat 1360,45290
  enum Sumfunctype sum_func Item_func_group_concat::sum_func1412,46912
  const char *func_name(Item_func_group_concat::func_name1413,46977
  virtual Item_result result_type Item_func_group_concat::result_type1414,47036
  enum_field_types field_type(Item_func_group_concat::field_type1416,47155
  void reset_field(Item_func_group_concat::reset_field1425,47382
  void update_field(Item_func_group_concat::update_field1426,47442
  double val_real(Item_func_group_concat::val_real1430,47582
  longlong val_int(Item_func_group_concat::val_int1435,47699
  my_decimal *val_decimal(Item_func_group_concat::val_decimal1445,47946
  void no_rows_in_result(Item_func_group_concat::no_rows_in_result1451,48122
  virtual bool change_context_processor(Item_func_group_concat::change_context_processor1453,48215

sql/item_timefunc.h,22731
#define ITEM_TIMEFUNC_INCLUDED2,31
enum date_time_format_types 28,955
  TIME_ONLY=date_time_format_types::TIME_ONLY30,987
  TIME_ONLY= 0, TIME_MICROSECOND,date_time_format_types::TIME_MICROSECOND30,987
  TIME_ONLY= 0, TIME_MICROSECOND, DATE_ONLY,date_time_format_types::DATE_ONLY30,987
  TIME_ONLY= 0, TIME_MICROSECOND, DATE_ONLY, DATE_TIME,date_time_format_types::DATE_TIME30,987
  TIME_ONLY= 0, TIME_MICROSECOND, DATE_ONLY, DATE_TIME, DATE_TIME_MICROSECONDdate_time_format_types::DATE_TIME_MICROSECOND30,987
class Item_func_period_add 36,1179
  Item_func_period_add(Item_func_period_add::Item_func_period_add39,1238
  const char *func_name(Item_func_period_add::func_name41,1323
  void fix_length_and_dec(Item_func_period_add::fix_length_and_dec42,1380
class Item_func_period_diff 49,1466
  Item_func_period_diff(Item_func_period_diff::Item_func_period_diff52,1526
  const char *func_name(Item_func_period_diff::func_name54,1612
  void fix_length_and_dec(Item_func_period_diff::fix_length_and_dec55,1670
class Item_func_to_days 63,1771
  Item_func_to_days(Item_func_to_days::Item_func_to_days66,1827
  const char *func_name(Item_func_to_days::func_name68,1899
  void fix_length_and_dec(Item_func_to_days::fix_length_and_dec69,1953
  bool check_partition_func_processor(Item_func_to_days::check_partition_func_processor77,2188
  bool check_valid_arguments_processor(Item_func_to_days::check_valid_arguments_processor78,2258
class Item_func_to_seconds 85,2355
  Item_func_to_seconds(Item_func_to_seconds::Item_func_to_seconds88,2414
  const char *func_name(Item_func_to_seconds::func_name90,2489
  void fix_length_and_dec(Item_func_to_seconds::fix_length_and_dec91,2546
  bool check_partition_func_processor(Item_func_to_seconds::check_partition_func_processor99,2781
  bool intro_version(Item_func_to_seconds::intro_version101,2854
  bool check_valid_arguments_processor(Item_func_to_seconds::check_valid_arguments_processor111,3149
class Item_func_dayofmonth 118,3246
  Item_func_dayofmonth(Item_func_dayofmonth::Item_func_dayofmonth121,3305
  const char *func_name(Item_func_dayofmonth::func_name123,3380
  void fix_length_and_dec(Item_func_dayofmonth::fix_length_and_dec124,3437
  bool check_partition_func_processor(Item_func_dayofmonth::check_partition_func_processor130,3554
  bool check_valid_arguments_processor(Item_func_dayofmonth::check_valid_arguments_processor131,3624
class Item_func_month 138,3721
  Item_func_month(Item_func_month::Item_func_month141,3771
  double val_real(Item_func_month::val_real143,3863
  String *val_str(Item_func_month::val_str145,3958
  const char *func_name(Item_func_month::func_name153,4117
  enum Item_result result_type Item_func_month::result_type154,4169
  void fix_length_and_dec(Item_func_month::fix_length_and_dec155,4232
  bool check_partition_func_processor(Item_func_month::check_partition_func_processor161,4330
  bool check_valid_arguments_processor(Item_func_month::check_valid_arguments_processor162,4400
class Item_func_monthname 169,4497
  Item_func_monthname(Item_func_monthname::Item_func_monthname173,4576
  const char *func_name(Item_func_monthname::func_name174,4628
  bool check_partition_func_processor(Item_func_monthname::check_partition_func_processor177,4745
  bool check_valid_arguments_processor(Item_func_monthname::check_valid_arguments_processor178,4814
class Item_func_dayofyear 185,4911
  Item_func_dayofyear(Item_func_dayofyear::Item_func_dayofyear188,4969
  const char *func_name(Item_func_dayofyear::func_name190,5043
  void fix_length_and_dec(Item_func_dayofyear::fix_length_and_dec191,5099
  bool check_partition_func_processor(Item_func_dayofyear::check_partition_func_processor197,5197
  bool check_valid_arguments_processor(Item_func_dayofyear::check_valid_arguments_processor198,5267
class Item_func_hour 205,5364
  Item_func_hour(Item_func_hour::Item_func_hour208,5417
  const char *func_name(Item_func_hour::func_name210,5486
  void fix_length_and_dec(Item_func_hour::fix_length_and_dec211,5537
  bool check_partition_func_processor(Item_func_hour::check_partition_func_processor217,5650
  bool check_valid_arguments_processor(Item_func_hour::check_valid_arguments_processor218,5720
class Item_func_minute 225,5817
  Item_func_minute(Item_func_minute::Item_func_minute228,5872
  const char *func_name(Item_func_minute::func_name230,5943
  void fix_length_and_dec(Item_func_minute::fix_length_and_dec231,5996
  bool check_partition_func_processor(Item_func_minute::check_partition_func_processor237,6109
  bool check_valid_arguments_processor(Item_func_minute::check_valid_arguments_processor238,6179
class Item_func_quarter 245,6276
  Item_func_quarter(Item_func_quarter::Item_func_quarter248,6332
  const char *func_name(Item_func_quarter::func_name250,6404
  void fix_length_and_dec(Item_func_quarter::fix_length_and_dec251,6458
  bool check_partition_func_processor(Item_func_quarter::check_partition_func_processor257,6575
  bool check_valid_arguments_processor(Item_func_quarter::check_valid_arguments_processor258,6645
class Item_func_second 265,6742
  Item_func_second(Item_func_second::Item_func_second268,6797
  const char *func_name(Item_func_second::func_name270,6868
  void fix_length_and_dec(Item_func_second::fix_length_and_dec271,6921
  bool check_partition_func_processor(Item_func_second::check_partition_func_processor277,7036
  bool check_valid_arguments_processor(Item_func_second::check_valid_arguments_processor278,7106
class Item_func_week 285,7203
  Item_func_week(Item_func_week::Item_func_week288,7256
  const char *func_name(Item_func_week::func_name290,7335
  void fix_length_and_dec(Item_func_week::fix_length_and_dec291,7386
class Item_func_yearweek 299,7504
  Item_func_yearweek(Item_func_yearweek::Item_func_yearweek302,7561
  const char *func_name(Item_func_yearweek::func_name304,7644
  void fix_length_and_dec(Item_func_yearweek::fix_length_and_dec305,7699
  bool check_partition_func_processor(Item_func_yearweek::check_partition_func_processor311,7813
  bool check_valid_arguments_processor(Item_func_yearweek::check_valid_arguments_processor312,7883
class Item_func_year 319,7980
  Item_func_year(Item_func_year::Item_func_year322,8033
  const char *func_name(Item_func_year::func_name324,8102
  void fix_length_and_dec(Item_func_year::fix_length_and_dec327,8271
  bool check_partition_func_processor(Item_func_year::check_partition_func_processor333,8385
  bool check_valid_arguments_processor(Item_func_year::check_valid_arguments_processor334,8455
class Item_func_weekday 341,8552
  Item_func_weekday(Item_func_weekday::Item_func_weekday345,8622
  double val_real(Item_func_weekday::val_real348,8755
  String *val_str(Item_func_weekday::val_str349,8831
  const char *func_name(Item_func_weekday::func_name355,8974
  enum Item_result result_type Item_func_weekday::result_type359,9065
  void fix_length_and_dec(Item_func_weekday::fix_length_and_dec360,9128
  bool check_partition_func_processor(Item_func_weekday::check_partition_func_processor366,9224
  bool check_valid_arguments_processor(Item_func_weekday::check_valid_arguments_processor367,9294
class Item_func_dayname 373,9390
  Item_func_dayname(Item_func_dayname::Item_func_dayname377,9472
  const char *func_name(Item_func_dayname::func_name378,9528
  enum Item_result result_type Item_func_dayname::result_type380,9614
  bool check_partition_func_processor(Item_func_dayname::check_partition_func_processor382,9709
class Item_func_unix_timestamp 386,9783
  Item_func_unix_timestamp(Item_func_unix_timestamp::Item_func_unix_timestamp390,9862
  Item_func_unix_timestamp(Item_func_unix_timestamp::Item_func_unix_timestamp391,9911
  const char *func_name(Item_func_unix_timestamp::func_name393,9990
  bool check_partition_func_processor(Item_func_unix_timestamp::check_partition_func_processor396,10169
  bool check_valid_arguments_processor(Item_func_unix_timestamp::check_valid_arguments_processor402,10412
  void fix_length_and_dec(Item_func_unix_timestamp::fix_length_and_dec406,10509
class Item_func_time_to_sec 414,10610
  Item_func_time_to_sec(Item_func_time_to_sec::Item_func_time_to_sec417,10670
  const char *func_name(Item_func_time_to_sec::func_name419,10752
  void fix_length_and_dec(Item_func_time_to_sec::fix_length_and_dec420,10810
  bool check_partition_func_processor(Item_func_time_to_sec::check_partition_func_processor426,10928
  bool check_valid_arguments_processor(Item_func_time_to_sec::check_valid_arguments_processor427,10998
class Item_date 438,11180
  Item_date(Item_date::Item_date441,11224
  Item_date(Item_date::Item_date442,11254
  enum Item_result result_type Item_date::result_type443,11292
  enum_field_types field_type(Item_date::field_type444,11358
  CHARSET_INFO *charset_for_protocol(Item_date::charset_for_protocol445,11424
  double val_real(Item_date::val_real448,11555
  const char *func_name(Item_date::func_name449,11611
  void fix_length_and_dec(Item_date::fix_length_and_dec450,11662
  Field *tmp_table_field(Item_date::tmp_table_field455,11769
  bool result_as_longlong(Item_date::result_as_longlong459,11870
  my_decimal *val_decimal(Item_date::val_decimal460,11915
  int save_in_field(Item_date::save_in_field465,12055
class Item_date_func 472,12161
  Item_date_func(Item_date_func::Item_date_func475,12214
  Item_date_func(Item_date_func::Item_date_func476,12253
  Item_date_func(Item_date_func::Item_date_func477,12300
  Item_date_func(Item_date_func::Item_date_func478,12357
  enum_field_types field_type(Item_date_func::field_type479,12425
  CHARSET_INFO *charset_for_protocol(Item_date_func::charset_for_protocol480,12495
  Field *tmp_table_field(Item_date_func::tmp_table_field481,12572
  bool result_as_longlong(Item_date_func::result_as_longlong485,12673
  double val_real(Item_date_func::val_real486,12718
  my_decimal *val_decimal(Item_date_func::val_decimal487,12769
  int save_in_field(Item_date_func::save_in_field492,12909
class Item_str_timefunc 499,13015
  Item_str_timefunc(Item_str_timefunc::Item_str_timefunc502,13071
  Item_str_timefunc(Item_str_timefunc::Item_str_timefunc503,13113
  Item_str_timefunc(Item_str_timefunc::Item_str_timefunc504,13163
  Item_str_timefunc(Item_str_timefunc::Item_str_timefunc505,13223
  enum_field_types field_type(Item_str_timefunc::field_type506,13297
  CHARSET_INFO *charset_for_protocol(Item_str_timefunc::charset_for_protocol507,13363
  void fix_length_and_dec(Item_str_timefunc::fix_length_and_dec508,13440
  Field *tmp_table_field(Item_str_timefunc::tmp_table_field513,13557
  double val_real(Item_str_timefunc::val_real517,13658
  my_decimal *val_decimal(Item_str_timefunc::val_decimal518,13714
  int save_in_field(Item_str_timefunc::save_in_field523,13854
  longlong val_int(Item_str_timefunc::val_int527,13955
  bool result_as_longlong(Item_str_timefunc::result_as_longlong528,14011
class Item_func_curtime 534,14141
  Item_func_curtime(Item_func_curtime::Item_func_curtime540,14260
  Item_func_curtime(Item_func_curtime::Item_func_curtime541,14306
  double val_real(Item_func_curtime::val_real542,14360
  longlong val_int(Item_func_curtime::val_int543,14432
  bool result_as_longlong(Item_func_curtime::result_as_longlong552,14845
class Item_func_curtime_local 556,14895
  Item_func_curtime_local(Item_func_curtime_local::Item_func_curtime_local559,14961
  Item_func_curtime_local(Item_func_curtime_local::Item_func_curtime_local560,15013
  const char *func_name(Item_func_curtime_local::func_name561,15073
class Item_func_curtime_utc 566,15188
  Item_func_curtime_utc(Item_func_curtime_utc::Item_func_curtime_utc569,15252
  Item_func_curtime_utc(Item_func_curtime_utc::Item_func_curtime_utc570,15302
  const char *func_name(Item_func_curtime_utc::func_name571,15360
class Item_func_curdate 578,15538
  Item_func_curdate(Item_func_curdate::Item_func_curdate583,15628
  longlong val_int(Item_func_curdate::val_int584,15666
class Item_func_curdate_local 592,15908
  Item_func_curdate_local(Item_func_curdate_local::Item_func_curdate_local595,15974
  const char *func_name(Item_func_curdate_local::func_name596,16026
class Item_func_curdate_utc 601,16133
  Item_func_curdate_utc(Item_func_curdate_utc::Item_func_curdate_utc604,16197
  const char *func_name(Item_func_curdate_utc::func_name605,16247
class Item_func_now 612,16426
  Item_func_now(Item_func_now::Item_func_now620,16615
  Item_func_now(Item_func_now::Item_func_now621,16654
  enum Item_result result_type Item_func_now::result_type622,16701
  longlong val_int(Item_func_now::val_int623,16767
class Item_func_now_local 632,17059
  Item_func_now_local(Item_func_now_local::Item_func_now_local635,17117
  Item_func_now_local(Item_func_now_local::Item_func_now_local636,17161
  const char *func_name(Item_func_now_local::func_name637,17213
  virtual enum Functype functype(Item_func_now_local::functype639,17319
class Item_func_now_utc 643,17386
  Item_func_now_utc(Item_func_now_utc::Item_func_now_utc646,17442
  Item_func_now_utc(Item_func_now_utc::Item_func_now_utc647,17484
  const char *func_name(Item_func_now_utc::func_name648,17534
class Item_func_sysdate_local 657,17781
  Item_func_sysdate_local(Item_func_sysdate_local::Item_func_sysdate_local660,17843
  Item_func_sysdate_local(Item_func_sysdate_local::Item_func_sysdate_local661,17891
  bool const_item(Item_func_sysdate_local::const_item662,17947
  const char *func_name(Item_func_sysdate_local::func_name663,17987
  void update_used_tables(Item_func_sysdate_local::update_used_tables671,18297
class Item_func_from_days 679,18419
  Item_func_from_days(Item_func_from_days::Item_func_from_days682,18473
  const char *func_name(Item_func_from_days::func_name683,18521
  bool check_partition_func_processor(Item_func_from_days::check_partition_func_processor685,18628
  bool check_valid_arguments_processor(Item_func_from_days::check_valid_arguments_processor686,18698
class Item_func_date_format 693,18813
  Item_func_date_format(Item_func_date_format::Item_func_date_format699,18938
  const char *func_name(Item_func_date_format::func_name702,19097
class Item_func_from_unixtime 710,19322
  Item_func_from_unixtime(Item_func_from_unixtime::Item_func_from_unixtime714,19398
  const char *func_name(Item_func_from_unixtime::func_name717,19509
class Item_func_convert_tz 737,20139
  Item_func_convert_tz(Item_func_convert_tz::Item_func_convert_tz748,20503
  const char *func_name(Item_func_convert_tz::func_name752,20675
class Item_func_sec_to_time 759,20835
  Item_func_sec_to_time(Item_func_sec_to_time::Item_func_sec_to_time762,20899
  double val_real(Item_func_sec_to_time::val_real763,20963
  void fix_length_and_dec(Item_func_sec_to_time::fix_length_and_dec770,21125
  const char *func_name(Item_func_sec_to_time::func_name775,21225
  bool result_as_longlong(Item_func_sec_to_time::result_as_longlong776,21283
class Item_date_add_interval 780,21333
  Item_date_add_interval(Item_date_add_interval::Item_date_add_interval788,21569
  String *val_str(Item_date_add_interval::val_str791,21760
  const char *func_name(Item_date_add_interval::func_name795,21855
  enum_field_types field_type(Item_date_add_interval::field_type797,21948
  CHARSET_INFO *charset_for_protocol(Item_date_add_interval::charset_for_protocol798,22016
class Item_extract 817,22681
  Item_extract(Item_extract::Item_extract822,22802
  enum Functype functype(Item_extract::functype825,22917
  const char *func_name(Item_extract::func_name826,22975
  bool check_partition_func_processor(Item_extract::check_partition_func_processor830,23173
  bool check_valid_arguments_processor(Item_extract::check_valid_arguments_processor831,23243
class Item_typecast 870,24329
  Item_typecast(Item_typecast::Item_typecast873,24381
  String *val_str(Item_typecast::val_str874,24427
  void fix_length_and_dec(Item_typecast::fix_length_and_dec883,24640
class Item_typecast_maybe_null 893,24860
  Item_typecast_maybe_null(Item_typecast_maybe_null::Item_typecast_maybe_null896,24923
class Item_char_typecast 900,25001
  Item_char_typecast(Item_char_typecast::Item_char_typecast907,25159
  enum Functype functype(Item_char_typecast::functype909,25294
  const char *func_name(Item_char_typecast::func_name911,25410
  const char* cast_type(Item_char_typecast::cast_type912,25469
class Item_date_typecast 919,25648
  Item_date_typecast(Item_date_typecast::Item_date_typecast922,25716
  const char *func_name(Item_date_typecast::func_name923,25778
  const char *cast_type(Item_date_typecast::cast_type927,25958
  enum_field_types field_type(Item_date_typecast::field_type928,26009
  CHARSET_INFO *charset_for_protocol(Item_date_typecast::charset_for_protocol929,26075
  Field *tmp_table_field(Item_date_typecast::tmp_table_field930,26152
  void fix_length_and_dec(Item_date_typecast::fix_length_and_dec934,26253
  bool result_as_longlong(Item_date_typecast::result_as_longlong935,26322
  double val_real(Item_date_typecast::val_real937,26389
  my_decimal *val_decimal(Item_date_typecast::val_decimal938,26440
  int save_in_field(Item_date_typecast::save_in_field943,26580
class Item_time_typecast 950,26686
  Item_time_typecast(Item_time_typecast::Item_time_typecast953,26754
  const char *func_name(Item_time_typecast::func_name954,26816
  const char *cast_type(Item_time_typecast::cast_type957,26943
  enum_field_types field_type(Item_time_typecast::field_type958,26994
  CHARSET_INFO *charset_for_protocol(Item_time_typecast::charset_for_protocol959,27060
  Field *tmp_table_field(Item_time_typecast::tmp_table_field960,27137
  bool result_as_longlong(Item_time_typecast::result_as_longlong964,27238
  double val_real(Item_time_typecast::val_real966,27305
  my_decimal *val_decimal(Item_time_typecast::val_decimal967,27361
  int save_in_field(Item_time_typecast::save_in_field972,27501
  void fix_length_and_dec(Item_time_typecast::fix_length_and_dec976,27602
class Item_datetime_typecast 981,27702
  Item_datetime_typecast(Item_datetime_typecast::Item_datetime_typecast984,27774
  const char *func_name(Item_datetime_typecast::func_name985,27840
  const char *cast_type(Item_datetime_typecast::cast_type987,27935
  enum_field_types field_type(Item_datetime_typecast::field_type988,27990
  CHARSET_INFO *charset_for_protocol(Item_datetime_typecast::charset_for_protocol989,28060
  Field *tmp_table_field(Item_datetime_typecast::tmp_table_field990,28137
  void fix_length_and_dec(Item_datetime_typecast::fix_length_and_dec994,28238
  bool result_as_longlong(Item_datetime_typecast::result_as_longlong999,28364
  double val_real(Item_datetime_typecast::val_real1001,28431
  double val(Item_datetime_typecast::val1002,28487
  my_decimal *val_decimal(Item_datetime_typecast::val_decimal1003,28533
  int save_in_field(Item_datetime_typecast::save_in_field1008,28673
class Item_func_makedate 1014,28778
  Item_func_makedate(Item_func_makedate::Item_func_makedate1017,28836
  const char *func_name(Item_func_makedate::func_name1019,28930
  enum_field_types field_type(Item_func_makedate::field_type1020,28985
  CHARSET_INFO *charset_for_protocol(Item_func_makedate::charset_for_protocol1021,29051
  void fix_length_and_dec(Item_func_makedate::fix_length_and_dec1022,29128
class Item_func_add_time 1032,29280
  Item_func_add_time(Item_func_add_time::Item_func_add_time1039,29410
  enum_field_types field_type(Item_func_add_time::field_type1042,29582
  CHARSET_INFO *charset_for_protocol(Item_func_add_time::charset_for_protocol1044,29679
  Field *tmp_table_field(Item_func_add_time::tmp_table_field1046,29757
  const char *func_name(Item_func_add_time::func_name1051,29921
  double val_real(Item_func_add_time::val_real1052,29976
  my_decimal *val_decimal(Item_func_add_time::val_decimal1053,30032
  int save_in_field(Item_func_add_time::save_in_field1062,30376
class Item_func_timediff 1074,30783
  Item_func_timediff(Item_func_timediff::Item_func_timediff1077,30844
  const char *func_name(Item_func_timediff::func_name1080,30947
  void fix_length_and_dec(Item_func_timediff::fix_length_and_dec1081,31002
class Item_func_maketime 1088,31106
  Item_func_maketime(Item_func_maketime::Item_func_maketime1091,31167
  const char *func_name(Item_func_maketime::func_name1097,31310
class Item_func_microsecond 1100,31369
  Item_func_microsecond(Item_func_microsecond::Item_func_microsecond1103,31429
  const char *func_name(Item_func_microsecond::func_name1105,31505
  void fix_length_and_dec(Item_func_microsecond::fix_length_and_dec1106,31563
  bool check_partition_func_processor(Item_func_microsecond::check_partition_func_processor1111,31635
  bool check_valid_arguments_processor(Item_func_microsecond::check_valid_arguments_processor1112,31705
class Item_func_timestamp_diff 1119,31802
  Item_func_timestamp_diff(Item_func_timestamp_diff::Item_func_timestamp_diff1123,31897
  const char *func_name(Item_func_timestamp_diff::func_name1125,32011
  void fix_length_and_dec(Item_func_timestamp_diff::fix_length_and_dec1127,32093
enum date_time_format1136,32231
  USA_FORMAT,date_time_format::USA_FORMAT1138,32255
  USA_FORMAT, JIS_FORMAT,date_time_format::JIS_FORMAT1138,32255
  USA_FORMAT, JIS_FORMAT, ISO_FORMAT,date_time_format::ISO_FORMAT1138,32255
  USA_FORMAT, JIS_FORMAT, ISO_FORMAT, EUR_FORMAT,date_time_format::EUR_FORMAT1138,32255
  USA_FORMAT, JIS_FORMAT, ISO_FORMAT, EUR_FORMAT, INTERNAL_FORMATdate_time_format::INTERNAL_FORMAT1138,32255
class Item_func_get_format 1141,32325
  Item_func_get_format(Item_func_get_format::Item_func_get_format1145,32437
  const char *func_name(Item_func_get_format::func_name1149,32581
  void fix_length_and_dec(Item_func_get_format::fix_length_and_dec1150,32638
class Item_func_str_to_date 1160,32828
  Item_func_str_to_date(Item_func_str_to_date::Item_func_str_to_date1168,33052
  const char *func_name(Item_func_str_to_date::func_name1173,33228
  enum_field_types field_type(Item_func_str_to_date::field_type1174,33286
  Field *tmp_table_field(Item_func_str_to_date::tmp_table_field1176,33383
  bool result_as_longlong(Item_func_str_to_date::result_as_longlong1181,33506
class Item_func_last_day 1185,33556
  Item_func_last_day(Item_func_last_day::Item_func_last_day1188,33609
  const char *func_name(Item_func_last_day::func_name1189,33656
  void fix_length_and_dec(Item_func_last_day::fix_length_and_dec1191,33762

sql/item_xmlfunc.h,647
#define ITEM_XMLFUNC_INCLUDED2,30
class Item_xml_str_func:Item_xml_str_func29,948
  Item_xml_str_func(Item_xml_str_func::Item_xml_str_func35,1063
  Item_xml_str_func(Item_xml_str_func::Item_xml_str_func40,1157
class Item_func_xml_extractvalue:Item_func_xml_extractvalue50,1358
  Item_func_xml_extractvalue(Item_func_xml_extractvalue::Item_func_xml_extractvalue53,1427
  const char *func_name(Item_func_xml_extractvalue::func_name54,1500
class Item_func_xml_update:Item_func_xml_update59,1593
  Item_func_xml_update(Item_func_xml_update::Item_func_xml_update63,1689
  const char *func_name(Item_func_xml_update::func_name64,1766

sql/key.h,159
#define KEY_INCLUDED17,767
typedef struct st_bitmap MY_BITMAP;24,891
typedef struct st_key KEY;25,927
typedef struct st_key_part_info KEY_PART_INFO;26,954

sql/keycaches.h,134
#define KEYCACHES_INCLUDED2,27
  typedef int (*process_key_cache_t)process_key_cache_t24,858
class NAMED_ILIST:NAMED_ILIST29,947

sql/lex.h,299
#define LEX_INCLUDED2,21
SYM_GROUP sym_group_common=24,873
SYM_GROUP sym_group_geom=25,911
SYM_GROUP sym_group_rtree=26,977
#define SYM_OR_NULL(30,1123
#define SYM_OR_NULL(32,1154
#define SYM(35,1187
static SYMBOL symbols[symbols47,1555
static SYMBOL sql_functions[sql_functions634,22778

sql/lex_symbol.h,195
#define _lex_symbol_h20,796
typedef struct st_symbol 24,841
} SYMBOL;29,945
typedef struct st_lex_symbol31,956
} LEX_SYMBOL;36,1037
typedef struct st_sym_group 38,1052
} SYM_GROUP;41,1131

sql/lock.h,77
#define LOCK_INCLUDED17,761
typedef struct st_mysql_lock MYSQL_LOCK;26,938

sql/log.h,4938
#define LOG_H17,760
class TC_LOG38,1442
  TC_LOG(TC_LOG::TC_LOG42,1500
  virtual ~TC_LOG(TC_LOG::~TC_LOG43,1514
class TC_LOG_DUMMY:TC_LOG_DUMMY51,1708
  TC_LOG_DUMMY(TC_LOG_DUMMY::TC_LOG_DUMMY54,1785
  int open(TC_LOG_DUMMY::open55,1805
  void close(TC_LOG_DUMMY::close56,1859
  int log_xid(TC_LOG_DUMMY::log_xid57,1903
  int unlog(TC_LOG_DUMMY::unlog58,1961
class TC_LOG_MMAP:TC_LOG_MMAP62,2035
    PS_POOL,TC_LOG_MMAP::PS_POOL66,2155
    PS_ERROR,TC_LOG_MMAP::PS_ERROR67,2203
    PS_DIRTY TC_LOG_MMAP::PS_DIRTY68,2252
  } PAGE_STATE;TC_LOG_MMAP::PAGE_STATE69,2315
  typedef struct st_page TC_LOG_MMAP::st_page72,2343
  } PAGE;TC_LOG_MMAP::PAGE81,2834
  TC_LOG_MMAP(TC_LOG_MMAP::TC_LOG_MMAP99,3314
#define TC_LOG_MMAP 112,3571
#define LOG_INFO_EOF 120,3724
#define LOG_INFO_IO 121,3748
#define LOG_INFO_INVALID 122,3772
#define LOG_INFO_SEEK 123,3800
#define LOG_INFO_MEM 124,3825
#define LOG_INFO_FATAL 125,3849
#define LOG_INFO_IN_USE 126,3875
#define LOG_INFO_EMFILE 127,3902
#define LOG_CLOSE_INDEX	131,3964
#define LOG_CLOSE_TO_BE_OPENED	132,3991
#define LOG_CLOSE_STOP_EVENT	133,4024
#define MAX_LOG_UNIQUE_FN_EXT 140,4183
#define LOG_WARN_UNIQUE_FN_EXT_LEFT 146,4329
typedef struct st_log_info159,4660
  st_log_info(st_log_info::st_log_info166,4882
  ~st_log_info(st_log_info::~st_log_info173,5090
} LOG_INFO;174,5138
#define MAX_LOG_HANDLERS_NUM 180,5267
#define LOG_NONE 183,5329
#define LOG_FILE 184,5354
#define LOG_TABLE 185,5379
enum enum_log_type 190,5445
enum enum_log_type { LOG_UNKNOWN,enum_log_type::LOG_UNKNOWN190,5445
enum enum_log_type { LOG_UNKNOWN, LOG_NORMAL,enum_log_type::LOG_NORMAL190,5445
enum enum_log_type { LOG_UNKNOWN, LOG_NORMAL, LOG_BIN enum_log_type::LOG_BIN190,5445
enum enum_log_state 191,5502
enum enum_log_state { LOG_OPENED,enum_log_state::LOG_OPENED191,5502
enum enum_log_state { LOG_OPENED, LOG_CLOSED,enum_log_state::LOG_CLOSED191,5502
enum enum_log_state { LOG_OPENED, LOG_CLOSED, LOG_TO_BE_OPENED enum_log_state::LOG_TO_BE_OPENED191,5502
class MYSQL_LOG198,5675
  inline bool is_open(MYSQL_LOG::is_open219,6362
class MYSQL_QUERY_LOG:MYSQL_QUERY_LOG241,7092
  MYSQL_QUERY_LOG(MYSQL_QUERY_LOG::MYSQL_QUERY_LOG244,7142
  bool open_slow_log(MYSQL_QUERY_LOG::open_slow_log254,7676
  bool open_query_log(MYSQL_QUERY_LOG::open_query_log264,7944
class MYSQL_BIN_LOG:MYSQL_BIN_LOG279,8243
  inline uint get_sync_period(MYSQL_BIN_LOG::get_sync_period341,10658
  void set_psi_keys(MYSQL_BIN_LOG::set_psi_keys381,11979
  void reset_bytes_written(MYSQL_BIN_LOG::reset_bytes_written405,12811
  void harvest_bytes_written(MYSQL_BIN_LOG::harvest_bytes_written409,12871
  void set_need_start_event(MYSQL_BIN_LOG::set_need_start_event425,13396
  inline char* get_index_fname(MYSQL_BIN_LOG::get_index_fname505,16487
  inline char* get_log_fname(MYSQL_BIN_LOG::get_log_fname506,16547
  inline char* get_name(MYSQL_BIN_LOG::get_name507,16604
  inline mysql_mutex_t* get_log_lock(MYSQL_BIN_LOG::get_log_lock508,16647
  inline mysql_cond_t* get_log_cond(MYSQL_BIN_LOG::get_log_cond509,16708
  inline IO_CACHE* get_log_file(MYSQL_BIN_LOG::get_log_file510,16771
  inline void lock_index(MYSQL_BIN_LOG::lock_index512,16828
  inline void unlock_index(MYSQL_BIN_LOG::unlock_index513,16889
  inline IO_CACHE *get_index_file(MYSQL_BIN_LOG::get_index_file514,16954
  inline uint32 get_open_count(MYSQL_BIN_LOG::get_open_count515,17013
class Log_event_handler518,17073
  Log_event_handler(Log_event_handler::Log_event_handler521,17107
  virtual ~Log_event_handler(Log_event_handler::~Log_event_handler537,17963
class Log_to_csv_event_handler:Log_to_csv_event_handler544,18150
#define QUERY_LOG_SLOW 572,19197
#define QUERY_LOG_GENERAL 573,19222
class Log_to_file_event_handler:Log_to_file_event_handler575,19251
  Log_to_file_event_handler(Log_to_file_event_handler::Log_to_file_event_handler581,19405
  MYSQL_QUERY_LOG *get_mysql_slow_log(Log_to_file_event_handler::get_mysql_slow_log600,20326
  MYSQL_QUERY_LOG *get_mysql_log(Log_to_file_event_handler::get_mysql_log601,20394
class LOGGER606,20526
  LOGGER(LOGGER::LOGGER625,21077
  void lock_shared(LOGGER::lock_shared628,21201
  void lock_exclusive(LOGGER::lock_exclusive629,21261
  void unlock(LOGGER::unlock630,21324
  MYSQL_QUERY_LOG *get_slow_log_file_handler(LOGGER::get_slow_log_file_handler667,22976
  MYSQL_QUERY_LOG *get_log_file_handler(LOGGER::get_log_file_handler673,23134
enum enum_binlog_format 681,23286
  BINLOG_FORMAT_MIXED=enum_binlog_format::BINLOG_FORMAT_MIXED682,23312
  BINLOG_FORMAT_STMT=enum_binlog_format::BINLOG_FORMAT_STMT683,23391
  BINLOG_FORMAT_ROW=enum_binlog_format::BINLOG_FORMAT_ROW684,23438
  BINLOG_FORMAT_UNSPEC=enum_binlog_format::BINLOG_FORMAT_UNSPEC685,23479
typedef void (*sql_print_message_func)sql_print_message_func696,23979
inline bool normalize_binlog_name(738,25468

sql/log_event.h,24329
#define _log_event_h29,977
#define PREFIX_SQL_LOAD 54,1465
#define LONG_FIND_ROW_THRESHOLD 55,1501
#define ASSERT_OR_RETURN_ERROR(67,1834
#define ASSERT_OR_RETURN_ERROR(70,1932
#define LOG_READ_EOF 74,2006
#define LOG_READ_BOGUS 75,2033
#define LOG_READ_IO 76,2060
#define LOG_READ_MEM 77,2087
#define LOG_READ_TRUNC 78,2114
#define LOG_READ_TOO_LARGE 79,2141
#define LOG_EVENT_OFFSET 81,2172
#define BINLOG_VERSION 113,3615
#define ST_SERVER_VER_LEN 120,3833
#define DUMPFILE_FLAG	133,4164
#define OPT_ENCLOSED_FLAG	134,4191
#define REPLACE_FLAG	135,4221
#define IGNORE_FLAG	136,4247
#define FIELD_TERM_EMPTY	138,4273
#define ENCLOSED_EMPTY	139,4302
#define LINE_TERM_EMPTY	140,4330
#define LINE_START_EMPTY	141,4359
#define ESCAPED_EMPTY	142,4388
struct old_sql_ex149,4597
#define NUM_LOAD_DELIM_STRS 160,4748
struct sql_ex_info167,4960
  sql_ex_info(sql_ex_info::sql_ex_info169,4981
  void force_new_format(sql_ex_info::force_new_format181,5368
  int data_size(sql_ex_info::data_size182,5420
  bool new_format(sql_ex_info::new_format190,5684
#define LOG_EVENT_HEADER_LEN 221,6785
#define OLD_HEADER_LEN 222,6851
#define LOG_EVENT_MINIMAL_HEADER_LEN 230,7282
#define QUERY_HEADER_MINIMAL_LEN 234,7395
#define QUERY_HEADER_LEN 236,7497
#define STOP_HEADER_LEN 237,7557
#define LOAD_HEADER_LEN 238,7588
#define SLAVE_HEADER_LEN 239,7640
#define START_V3_HEADER_LEN 240,7671
#define ROTATE_HEADER_LEN 241,7731
#define INTVAR_HEADER_LEN 242,7815
#define CREATE_FILE_HEADER_LEN 243,7848
#define APPEND_BLOCK_HEADER_LEN 244,7881
#define EXEC_LOAD_HEADER_LEN 245,7915
#define DELETE_FILE_HEADER_LEN 246,7948
#define NEW_LOAD_HEADER_LEN 247,7981
#define RAND_HEADER_LEN 248,8028
#define USER_VAR_HEADER_LEN 249,8061
#define FORMAT_DESCRIPTION_HEADER_LEN 250,8094
#define XID_HEADER_LEN 251,8172
#define BEGIN_LOAD_QUERY_HEADER_LEN 252,8205
#define ROWS_HEADER_LEN 253,8265
#define TABLE_MAP_HEADER_LEN 254,8298
#define EXECUTE_LOAD_QUERY_EXTRA_HEADER_LEN 255,8331
#define EXECUTE_LOAD_QUERY_HEADER_LEN 256,8391
#define INCIDENT_HEADER_LEN 257,8487
#define HEARTBEAT_HEADER_LEN 258,8520
#define MAX_SIZE_LOG_EVENT_STATUS 264,8742
#define MAX_LOG_EVENT_HEADER 275,9657
#define MAX_MAX_ALLOWED_PACKET 287,10189
#define EVENT_TYPE_OFFSET 294,10320
#define SERVER_ID_OFFSET 295,10351
#define EVENT_LEN_OFFSET 296,10382
#define LOG_POS_OFFSET 297,10413
#define FLAGS_OFFSET 298,10445
#define ST_BINLOG_VER_OFFSET 302,10525
#define ST_SERVER_VER_OFFSET 303,10557
#define ST_CREATED_OFFSET 304,10589
#define ST_COMMON_HEADER_LEN_OFFSET 305,10662
#define SL_MASTER_PORT_OFFSET 309,10784
#define SL_MASTER_POS_OFFSET 310,10818
#define SL_MASTER_HOST_OFFSET 311,10852
#define Q_THREAD_ID_OFFSET	315,10919
#define Q_EXEC_TIME_OFFSET	316,10948
#define Q_DB_LEN_OFFSET	317,10977
#define Q_ERR_CODE_OFFSET	318,11004
#define Q_STATUS_VARS_LEN_OFFSET 319,11032
#define Q_DATA_OFFSET	320,11068
#define Q_FLAGS2_CODE 322,11179
#define Q_SQL_MODE_CODE 323,11213
#define Q_CATALOG_CODE 329,11415
#define Q_AUTO_INCREMENT	330,11449
#define Q_CHARSET_CODE 331,11476
#define Q_TIME_ZONE_CODE 332,11510
#define Q_CATALOG_NZ_CODE 340,11911
#define Q_LC_TIME_NAMES_CODE 342,11946
#define Q_CHARSET_DATABASE_CODE 344,11981
#define Q_TABLE_MAP_FOR_UPDATE_CODE 346,12016
#define Q_MASTER_DATA_WRITTEN_CODE 348,12055
#define Q_INVOKER 350,12094
#define I_TYPE_OFFSET 355,12172
#define I_VAL_OFFSET 356,12203
#define RAND_SEED1_OFFSET 359,12257
#define RAND_SEED2_OFFSET 360,12285
#define UV_VAL_LEN_SIZE 363,12340
#define UV_VAL_IS_NULL 364,12373
#define UV_VAL_TYPE_SIZE 365,12406
#define UV_NAME_LEN_SIZE 366,12439
#define UV_CHARSET_NUMBER_SIZE 367,12472
#define L_THREAD_ID_OFFSET 370,12535
#define L_EXEC_TIME_OFFSET 371,12566
#define L_SKIP_LINES_OFFSET 372,12597
#define L_TBL_LEN_OFFSET 373,12628
#define L_DB_LEN_OFFSET 374,12660
#define L_NUM_FIELDS_OFFSET 375,12692
#define L_SQL_EX_OFFSET 376,12724
#define L_DATA_OFFSET 377,12756
#define R_POS_OFFSET 380,12833
#define R_IDENT_OFFSET 381,12862
#define CF_FILE_ID_OFFSET 386,12957
#define CF_DATA_OFFSET 387,12986
#define AB_FILE_ID_OFFSET 390,13063
#define AB_DATA_OFFSET 391,13092
#define EL_FILE_ID_OFFSET 394,13170
#define DF_FILE_ID_OFFSET 397,13225
#define TM_MAPID_OFFSET 400,13278
#define TM_FLAGS_OFFSET 401,13307
#define RW_MAPID_OFFSET 404,13355
#define RW_FLAGS_OFFSET 405,13384
#define ELQ_FILE_ID_OFFSET 408,13447
#define ELQ_FN_POS_START_OFFSET 409,13491
#define ELQ_FN_POS_END_OFFSET 410,13546
#define ELQ_DUP_HANDLING_OFFSET 411,13599
#define BINLOG_MAGIC 414,13706
#define LOG_EVENT_TIME_F 428,14263
#define LOG_EVENT_FORCED_ROTATE_F 429,14303
#define LOG_EVENT_BINLOG_IN_USE_F 454,15483
#define LOG_EVENT_THREAD_SPECIFIC_F 464,15822
#define LOG_EVENT_SUPPRESS_USE_F 479,16371
#define LOG_EVENT_ARTIFICIAL_F 496,16808
#define LOG_EVENT_RELAY_LOG_F 504,16974
#define OPTIONS_WRITTEN_TO_BIN_LOG 527,18042
#define EXPECTED_OPTIONS 532,18230
#undef EXPECTED_OPTIONS 538,18450
enum Log_event_type545,18605
  UNKNOWN_EVENT=Log_event_type::UNKNOWN_EVENT551,18778
  START_EVENT_V3=Log_event_type::START_EVENT_V3552,18798
  QUERY_EVENT=Log_event_type::QUERY_EVENT553,18819
  STOP_EVENT=Log_event_type::STOP_EVENT554,18837
  ROTATE_EVENT=Log_event_type::ROTATE_EVENT555,18854
  INTVAR_EVENT=Log_event_type::INTVAR_EVENT556,18873
  LOAD_EVENT=Log_event_type::LOAD_EVENT557,18892
  SLAVE_EVENT=Log_event_type::SLAVE_EVENT558,18909
  CREATE_FILE_EVENT=Log_event_type::CREATE_FILE_EVENT559,18927
  APPEND_BLOCK_EVENT=Log_event_type::APPEND_BLOCK_EVENT560,18951
  EXEC_LOAD_EVENT=Log_event_type::EXEC_LOAD_EVENT561,18976
  DELETE_FILE_EVENT=Log_event_type::DELETE_FILE_EVENT562,18999
  NEW_LOAD_EVENT=Log_event_type::NEW_LOAD_EVENT568,19203
  RAND_EVENT=Log_event_type::RAND_EVENT569,19225
  USER_VAR_EVENT=Log_event_type::USER_VAR_EVENT570,19243
  FORMAT_DESCRIPTION_EVENT=Log_event_type::FORMAT_DESCRIPTION_EVENT571,19265
  XID_EVENT=Log_event_type::XID_EVENT572,19297
  BEGIN_LOAD_QUERY_EVENT=Log_event_type::BEGIN_LOAD_QUERY_EVENT573,19314
  EXECUTE_LOAD_QUERY_EVENT=Log_event_type::EXECUTE_LOAD_QUERY_EVENT574,19344
  TABLE_MAP_EVENT Log_event_type::TABLE_MAP_EVENT576,19377
  PRE_GA_WRITE_ROWS_EVENT Log_event_type::PRE_GA_WRITE_ROWS_EVENT582,19499
  PRE_GA_UPDATE_ROWS_EVENT Log_event_type::PRE_GA_UPDATE_ROWS_EVENT583,19531
  PRE_GA_DELETE_ROWS_EVENT Log_event_type::PRE_GA_DELETE_ROWS_EVENT584,19564
  WRITE_ROWS_EVENT Log_event_type::WRITE_ROWS_EVENT589,19666
  UPDATE_ROWS_EVENT Log_event_type::UPDATE_ROWS_EVENT590,19691
  DELETE_ROWS_EVENT Log_event_type::DELETE_ROWS_EVENT591,19717
  INCIDENT_EVENT=Log_event_type::INCIDENT_EVENT596,19812
  HEARTBEAT_LOG_EVENT=Log_event_type::HEARTBEAT_LOG_EVENT602,19951
  ENUM_END_EVENT Log_event_type::ENUM_END_EVENT609,20122
#define LOG_EVENT_TYPES 617,20332
enum Int_event_type619,20376
  INVALID_INT_EVENT Int_event_type::INVALID_INT_EVENT621,20398
  INVALID_INT_EVENT = 0, LAST_INSERT_ID_EVENT Int_event_type::LAST_INSERT_ID_EVENT621,20398
  INVALID_INT_EVENT = 0, LAST_INSERT_ID_EVENT = 1, INSERT_ID_EVENT Int_event_type::INSERT_ID_EVENT621,20398
enum enum_base64_output_mode 635,20627
  BASE64_OUTPUT_NEVER=enum_base64_output_mode::BASE64_OUTPUT_NEVER636,20658
  BASE64_OUTPUT_AUTO=enum_base64_output_mode::BASE64_OUTPUT_AUTO637,20684
  BASE64_OUTPUT_ALWAYS=enum_base64_output_mode::BASE64_OUTPUT_ALWAYS638,20709
  BASE64_OUTPUT_UNSPEC=enum_base64_output_mode::BASE64_OUTPUT_UNSPEC639,20736
  BASE64_OUTPUT_DECODE_ROWS=enum_base64_output_mode::BASE64_OUTPUT_DECODE_ROWS640,20763
  BASE64_OUTPUT_MODE_COUNTenum_base64_output_mode::BASE64_OUTPUT_MODE_COUNT642,20832
typedef struct st_print_event_info657,21323
  ~st_print_event_info(st_print_event_info::~st_print_event_info681,22111
  bool init_ok(st_print_event_info::init_ok685,22214
} PRINT_EVENT_INFO;714,23130
typedef struct event_coordinates726,23571
} LOG_POS_COORD;730,23731
class Log_event862,27257
  enum enum_skip_reason Log_event::enum_skip_reason872,27457
    EVENT_SKIP_NOT,Log_event::enum_skip_reason::EVENT_SKIP_NOT876,27523
    EVENT_SKIP_IGNORE,Log_event::enum_skip_reason::EVENT_SKIP_IGNORE883,27661
    EVENT_SKIP_COUNTLog_event::enum_skip_reason::EVENT_SKIP_COUNT888,27745
  enum enum_event_cache_type Log_event::enum_event_cache_type891,27772
    EVENT_INVALID_CACHE,Log_event::enum_event_cache_type::EVENT_INVALID_CACHE893,27806
    EVENT_STMT_CACHE,Log_event::enum_event_cache_type::EVENT_STMT_CACHE899,28052
    EVENT_TRANSACTIONAL_CACHE,Log_event::enum_event_cache_type::EVENT_TRANSACTIONAL_CACHE905,28252
    EVENT_NO_CACHE,Log_event::enum_event_cache_type::EVENT_NO_CACHE910,28394
    EVENT_CACHE_COUNTLog_event::enum_event_cache_type::EVENT_CACHE_COUNT914,28504
  typedef unsigned char Byte;Log_event::Byte922,28744
  virtual const char* get_db(Log_event::get_db1044,33519
  Log_event(Log_event::Log_event1049,33594
  static void *operator new(Log_event::operator new1063,34277
  static void operator delete(Log_event::operator delete1068,34389
  static void *operator new(Log_event::operator new1074,34514
  static void operator delete(Log_event::operator delete1075,34577
  virtual bool write(Log_event::write1079,34702
  virtual bool write_data_header(Log_event::write_data_header1085,34873
  virtual bool write_data_body(Log_event::write_data_body1087,34938
  inline time_t get_time(Log_event::get_time1089,35025
  void set_artificial_event(Log_event::set_artificial_event1103,35333
  void set_relay_log_event(Log_event::set_relay_log_event1104,35400
  bool is_artificial_event(Log_event::is_artificial_event1105,35465
  bool is_relay_log_event(Log_event::is_relay_log_event1106,35543
  inline bool use_trans_cache(Log_event::use_trans_cache1107,35619
  inline void set_direct_logging(Log_event::set_direct_logging1111,35731
  inline bool use_direct_logging(Log_event::use_direct_logging1115,35818
  virtual ~Log_event(Log_event::~Log_event1121,36012
  void register_temp_buf(Log_event::register_temp_buf1122,36055
  void free_temp_buf(Log_event::free_temp_buf1123,36111
  virtual int get_data_size(Log_event::get_data_size1135,36334
  int apply_event(Log_event::apply_event1162,37098
  int update_pos(Log_event::update_pos1176,37388
  enum_skip_reason shall_skip(Log_event::shall_skip1187,37583
  virtual int do_apply_event(Log_event::do_apply_event1228,38727
class Query_log_event:Query_log_event1647,52646
  const char* get_db(Query_log_event::get_db1745,56428
  ~Query_log_event(Query_log_event::~Query_log_event1758,56904
  Log_event_type get_type_code(Query_log_event::get_type_code1763,56976
  virtual bool write_post_header_for_derived(Query_log_event::write_post_header_for_derived1766,57083
  bool is_valid(Query_log_event::is_valid1768,57169
  virtual ulong get_post_header_size_for_derived(Query_log_event::get_post_header_size_for_derived1774,57358
  bool is_trans_keyword(Query_log_event::is_trans_keyword1791,58045
class Slave_log_event:Slave_log_event1862,59776
  bool is_valid(Slave_log_event::is_valid1887,60405
  Log_event_type get_type_code(Slave_log_event::get_type_code1888,60458
class Load_log_event:Load_log_event2101,67017
  void set_fname_outside_temp_buf(Load_log_event::set_fname_outside_temp_buf2147,68455
  int  check_fname_outside_temp_buf(Load_log_event::check_fname_outside_temp_buf2154,68657
  const char* get_db(Load_log_event::get_db2171,69155
  ~Load_log_event(Load_log_event::~Load_log_event2188,69867
  Log_event_type get_type_code(Load_log_event::get_type_code2190,69892
  bool is_valid(Load_log_event::is_valid2198,70103
  int get_data_size(Load_log_event::get_data_size2199,70155
  virtual int do_apply_event(Load_log_event::do_apply_event2208,70440
class Start_log_event_v3:Start_log_event_v32235,71286
  Start_log_event_v3(Start_log_event_v3::Start_log_event_v32275,72953
  ~Start_log_event_v3(Start_log_event_v3::~Start_log_event_v32281,73164
  Log_event_type get_type_code(Start_log_event_v3::get_type_code2282,73191
  bool is_valid(Start_log_event_v3::is_valid2286,73307
  int get_data_size(Start_log_event_v3::get_data_size2287,73345
  virtual enum_skip_reason do_shall_skip(Start_log_event_v3::do_shall_skip2295,73556
class Format_description_log_event:Format_description_log_event2320,74139
  ~Format_description_log_event(Format_description_log_event::~Format_description_log_event2340,74939
  Log_event_type get_type_code(Format_description_log_event::get_type_code2344,75011
  bool header_is_valid(Format_description_log_event::header_is_valid2348,75137
  bool version_is_valid(Format_description_log_event::version_is_valid2355,75360
  bool is_valid(Format_description_log_event::is_valid2363,75595
  int get_data_size(Format_description_log_event::get_data_size2368,75680
class Intvar_log_event:Intvar_log_event2427,77109
  Intvar_log_event(Intvar_log_event::Intvar_log_event2434,77212
  ~Intvar_log_event(Intvar_log_event::~Intvar_log_event2446,77619
  Log_event_type get_type_code(Intvar_log_event::get_type_code2447,77644
  int get_data_size(Intvar_log_event::get_data_size2449,77736
  bool is_valid(Intvar_log_event::is_valid2453,77863
class Rand_log_event:Rand_log_event2503,79054
  Rand_log_event(Rand_log_event::Rand_log_event2510,79163
  ~Rand_log_event(Rand_log_event::~Rand_log_event2522,79578
  Log_event_type get_type_code(Rand_log_event::get_type_code2523,79601
  int get_data_size(Rand_log_event::get_data_size2524,79656
  bool is_valid(Rand_log_event::is_valid2528,79777
typedef ulonglong my_xid;2547,80286
class Xid_log_event:Xid_log_event2550,80361
  Xid_log_event(Xid_log_event::Xid_log_event2556,80446
  ~Xid_log_event(Xid_log_event::~Xid_log_event2566,80799
  Log_event_type get_type_code(Xid_log_event::get_type_code2567,80821
  int get_data_size(Xid_log_event::get_data_size2568,80875
  bool is_valid(Xid_log_event::is_valid2572,80978
class User_var_log_event:User_var_log_event2590,81446
    UNDEF_F=User_var_log_event::UNDEF_F2594,81508
    UNSIGNED_F=User_var_log_event::UNSIGNED_F2595,81524
  User_var_log_event(User_var_log_event::User_var_log_event2608,81742
  ~User_var_log_event(User_var_log_event::~User_var_log_event2622,82405
  Log_event_type get_type_code(User_var_log_event::get_type_code2623,82432
  bool is_deferred(User_var_log_event::is_deferred2631,82713
  void set_deferred(User_var_log_event::set_deferred2636,82908
  bool is_valid(User_var_log_event::is_valid2638,82986
class Stop_log_event:Stop_log_event2657,83457
  Stop_log_event(Stop_log_event::Stop_log_event2661,83526
  Stop_log_event(Stop_log_event::Stop_log_event2667,83639
  ~Stop_log_event(Stop_log_event::~Stop_log_event2671,83789
  Log_event_type get_type_code(Stop_log_event::get_type_code2672,83812
  bool is_valid(Stop_log_event::is_valid2673,83867
  virtual enum_skip_reason do_shall_skip(Stop_log_event::do_shall_skip2678,84020
class Rotate_log_event:Rotate_log_event2741,85247
    DUP_NAME=Rotate_log_event::DUP_NAME2745,85307
    RELAY_LOG=Rotate_log_event::RELAY_LOG2746,85373
  ~Rotate_log_event(Rotate_log_event::~Rotate_log_event2765,85930
  Log_event_type get_type_code(Rotate_log_event::get_type_code2770,86024
  int get_data_size(Rotate_log_event::get_data_size2771,86081
  bool is_valid(Rotate_log_event::is_valid2772,86145
class Create_file_log_event:Create_file_log_event2793,86614
  ~Create_file_log_event(Create_file_log_event::~Create_file_log_event2828,87668
  Log_event_type get_type_code(Create_file_log_event::get_type_code2833,87736
  int get_data_size(Create_file_log_event::get_data_size2837,87853
  bool is_valid(Create_file_log_event::is_valid2843,88005
class Append_block_log_event:Append_block_log_event2867,88548
  ~Append_block_log_event(Append_block_log_event::~Append_block_log_event2900,89756
  Log_event_type get_type_code(Append_block_log_event::get_type_code2901,89787
  int get_data_size(Append_block_log_event::get_data_size2902,89850
  bool is_valid(Append_block_log_event::is_valid2903,89921
  const char* get_db(Append_block_log_event::get_db2906,90018
class Delete_file_log_event:Delete_file_log_event2922,90298
  ~Delete_file_log_event(Delete_file_log_event::~Delete_file_log_event2941,90925
  Log_event_type get_type_code(Delete_file_log_event::get_type_code2942,90955
  int get_data_size(Delete_file_log_event::get_data_size2943,91017
  bool is_valid(Delete_file_log_event::is_valid2944,91074
  const char* get_db(Delete_file_log_event::get_db2947,91173
class Execute_load_log_event:Execute_load_log_event2963,91454
  ~Execute_load_log_event(Execute_load_log_event::~Execute_load_log_event2981,92016
  Log_event_type get_type_code(Execute_load_log_event::get_type_code2982,92047
  int get_data_size(Execute_load_log_event::get_data_size2983,92107
  bool is_valid(Execute_load_log_event::is_valid2984,92163
  const char* get_db(Execute_load_log_event::get_db2987,92262
class Begin_load_query_log_event:Begin_load_query_log_event3006,92725
  ~Begin_load_query_log_event(Begin_load_query_log_event::~Begin_load_query_log_event3021,93310
  Log_event_type get_type_code(Begin_load_query_log_event::get_type_code3022,93345
enum enum_load_dup_handling 3033,93625
enum enum_load_dup_handling { LOAD_DUP_ERROR=enum_load_dup_handling::LOAD_DUP_ERROR3033,93625
enum enum_load_dup_handling { LOAD_DUP_ERROR= 0, LOAD_DUP_IGNORE,enum_load_dup_handling::LOAD_DUP_IGNORE3033,93625
                              LOAD_DUP_REPLACE enum_load_dup_handling::LOAD_DUP_REPLACE3034,93691
class Execute_load_query_log_event:Execute_load_query_log_event3045,94048
  ~Execute_load_query_log_event(Execute_load_query_log_event::~Execute_load_query_log_event3079,95538
  Log_event_type get_type_code(Execute_load_query_log_event::get_type_code3081,95576
  bool is_valid(Execute_load_query_log_event::is_valid3082,95646
class Unknown_log_event:Unknown_log_event3102,96098
  Unknown_log_event(Unknown_log_event::Unknown_log_event3110,96356
  ~Unknown_log_event(Unknown_log_event::~Unknown_log_event3114,96512
  Log_event_type get_type_code(Unknown_log_event::get_type_code3116,96600
  bool is_valid(Unknown_log_event::is_valid3117,96658
class Table_map_log_event 3436,105292
    TYPE_CODE Table_map_log_event::TYPE_CODE3442,105376
    TYPE_CODE = TABLE_MAP_EVENTTable_map_log_event::TABLE_MAP_EVENT3442,105376
  enum enum_errorTable_map_log_event::enum_error3448,105479
    ERR_OPEN_FAILURE Table_map_log_event::enum_error::ERR_OPEN_FAILURE3450,105501
    ERR_OK Table_map_log_event::enum_error::ERR_OK3451,105572
    ERR_TABLE_LIMIT_EXCEEDED Table_map_log_event::enum_error::ERR_TABLE_LIMIT_EXCEEDED3452,105637
    ERR_OUT_OF_MEM Table_map_log_event::enum_error::ERR_OUT_OF_MEM3453,105708
    ERR_BAD_TABLE_DEF Table_map_log_event::enum_error::ERR_BAD_TABLE_DEF3454,105778
    ERR_RBR_TO_SBR Table_map_log_event::enum_error::ERR_RBR_TO_SBR3455,105849
  enum enum_flagTable_map_log_event::enum_flag3458,105926
    ENUM_FLAG_COUNTTable_map_log_event::enum_flag::ENUM_FLAG_COUNT3466,106183
  typedef uint16 flag_set;Table_map_log_event::flag_set3469,106209
    TM_NO_FLAGS Table_map_log_event::TM_NO_FLAGS3474,106302
    TM_NO_FLAGS = 0U,Table_map_log_event::U3474,106302
    TM_BIT_LEN_EXACT_F Table_map_log_event::TM_BIT_LEN_EXACT_F3475,106324
    TM_BIT_LEN_EXACT_F = (1U Table_map_log_event::U3475,106324
  flag_set get_flags(Table_map_log_event::get_flags3478,106365
  table_def *create_table_def(Table_map_log_event::create_table_def3491,106754
  ulong get_table_id(Table_map_log_event::get_table_id3497,106936
  const char *get_table_name(Table_map_log_event::get_table_name3498,106995
  const char *get_db_name(Table_map_log_event::get_db_name3499,107053
  virtual Log_event_type get_type_code(Table_map_log_event::get_type_code3501,107111
  virtual bool is_valid(Table_map_log_event::is_valid3502,107180
  virtual int get_data_size(Table_map_log_event::get_data_size3504,107264
  virtual const char *get_db(Table_map_log_event::get_db3509,107481
class Rows_log_event 3569,108940
  enum enum_errorRows_log_event::enum_error3575,109055
    ERR_OPEN_FAILURE Rows_log_event::enum_error::ERR_OPEN_FAILURE3577,109077
    ERR_OK Rows_log_event::enum_error::ERR_OK3578,109148
    ERR_TABLE_LIMIT_EXCEEDED Rows_log_event::enum_error::ERR_TABLE_LIMIT_EXCEEDED3579,109213
    ERR_OUT_OF_MEM Rows_log_event::enum_error::ERR_OUT_OF_MEM3580,109284
    ERR_BAD_TABLE_DEF Rows_log_event::enum_error::ERR_BAD_TABLE_DEF3581,109354
    ERR_RBR_TO_SBR Rows_log_event::enum_error::ERR_RBR_TO_SBR3582,109425
  enum enum_flagRows_log_event::enum_flag3592,109785
    STMT_END_F Rows_log_event::enum_flag::STMT_END_F3595,109842
    STMT_END_F = (1U Rows_log_event::enum_flag::U3595,109842
    NO_FOREIGN_KEY_CHECKS_F Rows_log_event::enum_flag::NO_FOREIGN_KEY_CHECKS_F3598,109944
    NO_FOREIGN_KEY_CHECKS_F = (1U Rows_log_event::enum_flag::U3598,109944
    RELAXED_UNIQUE_CHECKS_F Rows_log_event::enum_flag::RELAXED_UNIQUE_CHECKS_F3601,110059
    RELAXED_UNIQUE_CHECKS_F = (1U Rows_log_event::enum_flag::U3601,110059
    COMPLETE_ROWS_F Rows_log_event::enum_flag::COMPLETE_ROWS_F3607,110231
    COMPLETE_ROWS_F = (1U Rows_log_event::enum_flag::U3607,110231
  typedef uint16 flag_set;Rows_log_event::flag_set3610,110269
      RLE_NO_FLAGS Rows_log_event::RLE_NO_FLAGS3615,110362
      RLE_NO_FLAGS = 0URows_log_event::U3615,110362
  void set_flags(Rows_log_event::set_flags3620,110422
  void clear_flags(Rows_log_event::clear_flags3621,110485
  flag_set get_flags(Rows_log_event::get_flags3622,110551
  int add_row_data(Rows_log_event::add_row_data3640,111275
  MY_BITMAP const *get_cols(Rows_log_event::get_cols3649,111471
  size_t get_width(Rows_log_event::get_width3650,111527
  ulong get_table_id(Rows_log_event::get_table_id3651,111583
  virtual const char *get_db(Rows_log_event::get_db3656,111761
  virtual bool is_valid(Rows_log_event::is_valid3664,112055
  int unpack_current_row(Rows_log_event::unpack_current_row3730,114319
class Write_rows_log_event 3815,117148
    TYPE_CODE Write_rows_log_event::TYPE_CODE3821,117291
    TYPE_CODE = WRITE_ROWS_EVENTWrite_rows_log_event::WRITE_ROWS_EVENT3821,117291
  static bool binlog_row_logging_function(Write_rows_log_event::binlog_row_logging_function3833,117667
  virtual Log_event_type get_type_code(Write_rows_log_event::get_type_code3847,118262
class Update_rows_log_event 3873,119089
    TYPE_CODE Update_rows_log_event::TYPE_CODE3879,119233
    TYPE_CODE = UPDATE_ROWS_EVENTUpdate_rows_log_event::UPDATE_ROWS_EVENT3879,119233
  static bool binlog_row_logging_function(Update_rows_log_event::binlog_row_logging_function3903,119833
  virtual bool is_valid(Update_rows_log_event::is_valid3915,120370
  virtual Log_event_type get_type_code(Update_rows_log_event::get_type_code3921,120481
class Delete_rows_log_event 3954,121496
    TYPE_CODE Delete_rows_log_event::TYPE_CODE3960,121640
    TYPE_CODE = DELETE_ROWS_EVENTDelete_rows_log_event::DELETE_ROWS_EVENT3960,121640
  static bool binlog_row_logging_function(Delete_rows_log_event::binlog_row_logging_function3972,121971
  virtual Log_event_type get_type_code(Delete_rows_log_event::get_type_code3986,122573
class Incident_log_event 4038,123976
  Incident_log_event(Incident_log_event::Incident_log_event4041,124050
  Incident_log_event(Incident_log_event::Incident_log_event4052,124429
  virtual Log_event_type get_type_code(Incident_log_event::get_type_code4083,125295
  virtual bool is_valid(Incident_log_event::is_valid4085,125364
  virtual int get_data_size(Incident_log_event::get_data_size4089,125474
static inline bool copy_event_cache_to_file_and_reinit(4100,125669
class Heartbeat_log_event:Heartbeat_log_event4124,126640
  Log_event_type get_type_code(Heartbeat_log_event::get_type_code4129,126827
  bool is_valid(Heartbeat_log_event::is_valid4130,126892
  const char * get_log_ident(Heartbeat_log_event::get_log_ident4135,127010
  uint get_ident_len(Heartbeat_log_event::get_ident_len4136,127063

sql/log_event_old.h,3524
#define LOG_EVENT_OLD_H17,743
class Old_rows_log_event 54,1917
  enum enum_errorOld_rows_log_event::enum_error61,2100
    ERR_OPEN_FAILURE Old_rows_log_event::enum_error::ERR_OPEN_FAILURE63,2122
    ERR_OK Old_rows_log_event::enum_error::ERR_OK64,2193
    ERR_TABLE_LIMIT_EXCEEDED Old_rows_log_event::enum_error::ERR_TABLE_LIMIT_EXCEEDED65,2258
    ERR_OUT_OF_MEM Old_rows_log_event::enum_error::ERR_OUT_OF_MEM66,2329
    ERR_BAD_TABLE_DEF Old_rows_log_event::enum_error::ERR_BAD_TABLE_DEF67,2399
    ERR_RBR_TO_SBR Old_rows_log_event::enum_error::ERR_RBR_TO_SBR68,2470
  enum enum_flagOld_rows_log_event::enum_flag78,2830
    STMT_END_F Old_rows_log_event::enum_flag::STMT_END_F81,2887
    STMT_END_F = (1U Old_rows_log_event::enum_flag::U81,2887
    NO_FOREIGN_KEY_CHECKS_F Old_rows_log_event::enum_flag::NO_FOREIGN_KEY_CHECKS_F84,2989
    NO_FOREIGN_KEY_CHECKS_F = (1U Old_rows_log_event::enum_flag::U84,2989
    RELAXED_UNIQUE_CHECKS_F Old_rows_log_event::enum_flag::RELAXED_UNIQUE_CHECKS_F87,3104
    RELAXED_UNIQUE_CHECKS_F = (1U Old_rows_log_event::enum_flag::U87,3104
    COMPLETE_ROWS_F Old_rows_log_event::enum_flag::COMPLETE_ROWS_F93,3276
    COMPLETE_ROWS_F = (1U Old_rows_log_event::enum_flag::U93,3276
  typedef uint16 flag_set;Old_rows_log_event::flag_set96,3314
      RLE_NO_FLAGS Old_rows_log_event::RLE_NO_FLAGS101,3407
      RLE_NO_FLAGS = 0UOld_rows_log_event::U101,3407
  void set_flags(Old_rows_log_event::set_flags106,3471
  void clear_flags(Old_rows_log_event::clear_flags107,3534
  flag_set get_flags(Old_rows_log_event::get_flags108,3600
  int add_row_data(Old_rows_log_event::add_row_data120,3976
  MY_BITMAP const *get_cols(Old_rows_log_event::get_cols129,4172
  size_t get_width(Old_rows_log_event::get_width130,4228
  ulong get_table_id(Old_rows_log_event::get_table_id131,4284
  virtual const char *get_db(Old_rows_log_event::get_db136,4463
  virtual bool is_valid(Old_rows_log_event::is_valid144,4765
  int unpack_current_row(Old_rows_log_event::unpack_current_row202,6766
class Write_rows_log_event_old 355,11930
  static bool binlog_row_logging_function(Write_rows_log_event_old::binlog_row_logging_function368,12436
    TYPE_CODE Write_rows_log_event_old::TYPE_CODE397,13566
    TYPE_CODE = PRE_GA_WRITE_ROWS_EVENTWrite_rows_log_event_old::PRE_GA_WRITE_ROWS_EVENT397,13566
  virtual Log_event_type get_type_code(Write_rows_log_event_old::get_type_code401,13621
  virtual int do_apply_event(Write_rows_log_event_old::do_apply_event405,13801
class Update_rows_log_event_old 429,14678
  static bool binlog_row_logging_function(Update_rows_log_event_old::binlog_row_logging_function445,15214
    TYPE_CODE Update_rows_log_event_old::TYPE_CODE475,16395
    TYPE_CODE = PRE_GA_UPDATE_ROWS_EVENTUpdate_rows_log_event_old::PRE_GA_UPDATE_ROWS_EVENT475,16395
  virtual Log_event_type get_type_code(Update_rows_log_event_old::get_type_code479,16451
  virtual int do_apply_event(Update_rows_log_event_old::do_apply_event483,16631
class Delete_rows_log_event_old 506,17567
  static bool binlog_row_logging_function(Delete_rows_log_event_old::binlog_row_logging_function519,18064
    TYPE_CODE Delete_rows_log_event_old::TYPE_CODE550,19237
    TYPE_CODE = PRE_GA_DELETE_ROWS_EVENTDelete_rows_log_event_old::PRE_GA_DELETE_ROWS_EVENT550,19237
  virtual Log_event_type get_type_code(Delete_rows_log_event_old::get_type_code554,19293
  virtual int do_apply_event(Delete_rows_log_event_old::do_apply_event558,19473

sql/mdl.h,5553
#define MDL_H2,14
enum enum_mdl_type 45,1348
  MDL_INTENTION_EXCLUSIVE=enum_mdl_type::MDL_INTENTION_EXCLUSIVE53,1633
  MDL_SHARED,enum_mdl_type::MDL_SHARED76,2903
  MDL_SHARED_HIGH_PRIO,enum_mdl_type::MDL_SHARED_HIGH_PRIO93,3811
  MDL_SHARED_READ,enum_mdl_type::MDL_SHARED_READ104,4321
  MDL_SHARED_WRITE,enum_mdl_type::MDL_SHARED_WRITE114,4777
  MDL_SHARED_NO_WRITE,enum_mdl_type::MDL_SHARED_NO_WRITE128,5423
  MDL_SHARED_NO_READ_WRITE,enum_mdl_type::MDL_SHARED_NO_READ_WRITE140,5931
  MDL_EXCLUSIVE,enum_mdl_type::MDL_EXCLUSIVE148,6274
  MDL_TYPE_END}enum_mdl_type::MDL_TYPE_END150,6327
enum enum_mdl_duration 155,6381
  MDL_STATEMENT=enum_mdl_duration::MDL_STATEMENT160,6522
  MDL_TRANSACTION,enum_mdl_duration::MDL_TRANSACTION165,6647
  MDL_EXPLICIT,enum_mdl_duration::MDL_EXPLICIT170,6836
  MDL_DURATION_END enum_mdl_duration::MDL_DURATION_END172,6886
#define MAX_MDLKEY_LENGTH 176,6971
class MDL_key188,7312
  enum enum_mdl_namespace MDL_key::enum_mdl_namespace206,7931
  enum enum_mdl_namespace { GLOBAL=MDL_key::enum_mdl_namespace::GLOBAL206,7931
                            SCHEMA,MDL_key::enum_mdl_namespace::SCHEMA207,7969
                            TABLE,MDL_key::enum_mdl_namespace::TABLE208,8005
                            FUNCTION,MDL_key::enum_mdl_namespace::FUNCTION209,8040
                            PROCEDURE,MDL_key::enum_mdl_namespace::PROCEDURE210,8078
                            TRIGGER,MDL_key::enum_mdl_namespace::TRIGGER211,8117
                            EVENT,MDL_key::enum_mdl_namespace::EVENT212,8154
                            COMMIT,MDL_key::enum_mdl_namespace::COMMIT213,8189
                            NAMESPACE_END MDL_key::enum_mdl_namespace::NAMESPACE_END215,8285
  const uchar *ptr(MDL_key::ptr217,8331
  uint length(MDL_key::length218,8385
  const char *db_name(MDL_key::db_name220,8429
  uint db_name_length(MDL_key::db_name_length221,8481
  const char *name(MDL_key::name223,8541
  uint name_length(MDL_key::name_length224,8609
  enum_mdl_namespace mdl_namespace(MDL_key::mdl_namespace226,8681
  void mdl_key_init(MDL_key::mdl_key_init240,9194
  void mdl_key_init(MDL_key::mdl_key_init253,9722
  bool is_equal(MDL_key::is_equal259,9890
  int cmp(MDL_key::cmp267,10091
  MDL_key(MDL_key::MDL_key277,10376
  MDL_key(MDL_key::MDL_key281,10437
  MDL_key(MDL_key::MDL_key286,10592
  const char * get_wait_state_name(MDL_key::get_wait_state_name292,10759
class MDL_request321,11656
  static void *operator new(MDL_request::operator new344,12214
  static void operator delete(MDL_request::operator delete346,12325
  inline void set_type(MDL_request::set_type355,12774
  MDL_request& operator=(MDL_request::operator=374,13434
  MDL_request(MDL_request::MDL_request381,13652
  MDL_request(MDL_request::MDL_request383,13672
typedef void (*mdl_cached_object_release_hook)mdl_cached_object_release_hook392,13808
class MDL_wait_for_graph_visitor400,13958
  MDL_wait_for_graph_visitor(MDL_wait_for_graph_visitor::MDL_wait_for_graph_visitor408,14195
class MDL_wait_for_subgraph426,14757
  enum enum_deadlock_weightMDL_wait_for_subgraph::enum_deadlock_weight437,15002
    DEADLOCK_WEIGHT_DML=MDL_wait_for_subgraph::enum_deadlock_weight::DEADLOCK_WEIGHT_DML439,15034
    DEADLOCK_WEIGHT_DDL=MDL_wait_for_subgraph::enum_deadlock_weight::DEADLOCK_WEIGHT_DDL440,15062
class MDL_ticket 467,16076
  MDL_context *get_ctx(MDL_ticket::get_ctx485,16543
  bool is_upgradable_or_exclusive(MDL_ticket::is_upgradable_or_exclusive486,16592
  enum_mdl_type get_type(MDL_ticket::get_type492,16771
  MDL_lock *get_lock(MDL_ticket::get_lock493,16823
  MDL_ticket(MDL_ticket::MDL_ticket508,17367
class MDL_savepoint560,18630
  MDL_savepoint(MDL_savepoint::MDL_savepoint563,18660
  MDL_savepoint(MDL_savepoint::MDL_savepoint566,18692
class MDL_wait590,19201
  enum enum_wait_status MDL_wait::enum_wait_status596,19256
  enum enum_wait_status { EMPTY MDL_wait::enum_wait_status::EMPTY596,19256
  enum enum_wait_status { EMPTY = 0, GRANTED,MDL_wait::enum_wait_status::GRANTED596,19256
  enum enum_wait_status { EMPTY = 0, GRANTED, VICTIM,MDL_wait::enum_wait_status::VICTIM596,19256
  enum enum_wait_status { EMPTY = 0, GRANTED, VICTIM, TIMEOUT,MDL_wait::enum_wait_status::TIMEOUT596,19256
  enum enum_wait_status { EMPTY = 0, GRANTED, VICTIM, TIMEOUT, KILLED MDL_wait::enum_wait_status::KILLED596,19256
typedef I_P_List<MDL_request,MDL_request617,20013
        MDL_request_list;621,20199
class MDL_context628,20326
          Ticket_list;MDL_context::Ticket_list635,20567
  typedef Ticket_list::Iterator Ticket_iterator;MDL_context::Ticket_iterator637,20591
  inline bool has_locks(MDL_context::has_locks659,21395
  MDL_savepoint mdl_savepoint(MDL_context::mdl_savepoint666,21592
  inline THD *get_thd(MDL_context::get_thd680,22067
  inline uint get_deadlock_weight(MDL_context::get_deadlock_weight683,22173
  void init(MDL_context::init693,22549
  void set_needs_thr_lock_abort(MDL_context::set_needs_thr_lock_abort695,22596
  bool get_needs_thr_lock_abort(MDL_context::get_needs_thr_lock_abort707,23135
  void will_wait_for(MDL_context::will_wait_for815,27516
  void done_waiting_for(MDL_context::done_waiting_for823,27790
  void lock_deadlock_victim(MDL_context::lock_deadlock_victim829,27941
  void unlock_deadlock_victim(MDL_context::unlock_deadlock_victim833,28025
static const ulong MDL_LOCKS_CACHE_SIZE_DEFAULT 867,28972
extern "C" ulong max_write_lock_count;874,29200

sql/mem_root_array.h,820
#define MEM_ROOT_ARRAY_INCLUDED18,777
template<typename Element_type,46,1786
class Mem_root_array47,1847
  Mem_root_array(Mem_root_array::Mem_root_array50,1878
  ~Mem_root_array(Mem_root_array::~Mem_root_array56,2013
  Element_type &at(Mem_root_array::at61,2055
  const Element_type &at(Mem_root_array::at67,2145
  Element_type *begin(Mem_root_array::begin74,2305
  Element_type *end(Mem_root_array::end77,2419
  void clear(Mem_root_array::clear80,2505
  void chop(Mem_root_array::chop90,2681
  bool reserve(Mem_root_array::reserve111,3195
  bool push_back(Mem_root_array::push_back145,4154
  size_t capacity(Mem_root_array::capacity158,4536
  size_t element_size(Mem_root_array::element_size159,4589
  bool   empty(Mem_root_array::empty160,4652
  size_t size(Mem_root_array::size161,4706

sql/message.h,59
#define MESSAGE_INCLUDED2,26
#define MSG_DEFAULT 74,2098

sql/my_decimal.h,2329
#define my_decimal_h29,1126
typedef struct st_mysql_time MYSQL_TIME;40,1332
#define DECIMAL_LONGLONG_DIGITS 42,1374
#define DECIMAL_LONG_DIGITS 43,1409
#define DECIMAL_LONG3_DIGITS 44,1440
#define DECIMAL_BUFF_LENGTH 47,1532
#define DECIMAL_MAX_POSSIBLE_PRECISION 50,1627
#define DECIMAL_MAX_PRECISION 59,1970
#define DECIMAL_MAX_SCALE 60,2039
#define DECIMAL_NOT_SPECIFIED 61,2068
#define DECIMAL_MAX_STR_LENGTH 67,2256
#define DECIMAL_MAX_FIELD_SIZE 72,2365
inline uint my_decimal_size(75,2420
inline int my_decimal_int_part(85,2624
class my_decimal 99,3037
  my_decimal(my_decimal::my_decimal120,3505
  my_decimal& operator=(my_decimal::operator=131,3749
  void init(my_decimal::init146,4078
  my_decimal(my_decimal::my_decimal156,4222
  ~my_decimal(my_decimal::~my_decimal160,4257
  void sanity_check(my_decimal::sanity_check165,4302
  void fix_buffer_pointer(my_decimal::fix_buffer_pointer171,4407
  bool sign(my_decimal::sign173,4453
  void sign(my_decimal::sign174,4501
  uint precision(my_decimal::precision175,4545
  void swap(my_decimal::swap178,4631
#define dbug_decimal_as_string(190,4932
inline int decimal_operation_results(202,5258
void max_my_decimal(209,5360
inline void max_internal_decimal(216,5559
inline int check_result(221,5661
inline int check_result_and_overflow(228,5790
inline uint my_decimal_length_to_precision(240,6059
inline uint32 my_decimal_precision_to_length_no_truncation(249,6404
inline uint32 my_decimal_precision_to_length(262,6905
int my_decimal_string_length(276,7410
int my_decimal_max_length(284,7573
int my_decimal_get_binary_size(292,7708
void my_decimal2decimal(299,7835
int binary2my_decimal(310,8024
int my_decimal_set_zero(318,8195
bool my_decimal_is_zero(331,8498
int my_decimal_round(338,8609
int my_decimal_floor(347,8842
int my_decimal_ceiling(354,8991
inline bool str_set_decimal(360,9137
int my_decimal2int(373,9492
int my_decimal2double(386,9855
int str2my_decimal(394,10034
int string2my_decimal(405,10382
int double2my_decimal(417,10670
int int2my_decimal(424,10812
void my_decimal_neg(433,11029
int my_decimal_add(445,11164
int my_decimal_sub(455,11412
int my_decimal_mul(465,11660
int my_decimal_div(475,11908
int my_decimal_mod(485,12190
int my_decimal_cmp(499,12493
int my_decimal_intg(506,12595

sql/mysqld.h,4784
#define MYSQLD_INCLUDED17,770
typedef struct st_mysql_const_lex_string LEX_CSTRING;33,1325
typedef struct st_mysql_show_var SHOW_VAR;34,1379
typedef struct charset_info_st CHARSET_INFO;43,1670
typedef Bitmap<64>  key_map;47,1773
typedef Bitmap<((MAX_INDEXES+MAX_INDEXES49,1845
#define TEST_PRINT_CACHED_TABLES 53,1954
#define TEST_NO_KEY_GROUP	54,1989
#define TEST_MIT_THREAD	55,2018
#define TEST_BLOCKING	56,2045
#define TEST_KEEP_TMP_TABLES	57,2070
#define TEST_READCHECK	58,2102
#define TEST_NO_EXTRA	59,2160
#define TEST_CORE_ON_SIGNAL	60,2187
#define TEST_NO_STACKTRACE	61,2247
#define TEST_SIGINT	62,2278
#define TEST_SYNCHRONIZATION 63,2336
extern "C" MYSQL_PLUGIN_IMPORT CHARSET_INFO *system_charset_info;system_charset_info76,2855
extern "C" MYSQL_PLUGIN_IMPORT ulong server_id;188,7783
extern "C" MYSQL_PLUGIN_IMPORT int orig_argc;210,8810
extern "C" MYSQL_PLUGIN_IMPORT char **orig_argv;orig_argv211,8856
extern "C" MYSQL_PLUGIN_IMPORT char server_version[server_version329,13547
#define mysql_tmpdir 335,13845
enum options_mysqld372,15228
  OPT_to_set_the_start_number=options_mysqld::OPT_to_set_the_start_number374,15250
  OPT_BIND_ADDRESS,options_mysqld::OPT_BIND_ADDRESS375,15285
  OPT_BINLOG_DO_DB,options_mysqld::OPT_BINLOG_DO_DB376,15305
  OPT_BINLOG_FORMAT,options_mysqld::OPT_BINLOG_FORMAT377,15325
  OPT_BINLOG_IGNORE_DB,options_mysqld::OPT_BINLOG_IGNORE_DB378,15346
  OPT_BIN_LOG,options_mysqld::OPT_BIN_LOG379,15370
  OPT_BOOTSTRAP,options_mysqld::OPT_BOOTSTRAP380,15385
  OPT_CONSOLE,options_mysqld::OPT_CONSOLE381,15402
  OPT_DEBUG_SYNC_TIMEOUT,options_mysqld::OPT_DEBUG_SYNC_TIMEOUT382,15417
  OPT_DELAY_KEY_WRITE_ALL,options_mysqld::OPT_DELAY_KEY_WRITE_ALL383,15443
  OPT_ISAM_LOG,options_mysqld::OPT_ISAM_LOG384,15470
  OPT_KEY_BUFFER_SIZE,options_mysqld::OPT_KEY_BUFFER_SIZE385,15486
  OPT_KEY_CACHE_AGE_THRESHOLD,options_mysqld::OPT_KEY_CACHE_AGE_THRESHOLD386,15509
  OPT_KEY_CACHE_BLOCK_SIZE,options_mysqld::OPT_KEY_CACHE_BLOCK_SIZE387,15540
  OPT_KEY_CACHE_DIVISION_LIMIT,options_mysqld::OPT_KEY_CACHE_DIVISION_LIMIT388,15568
  OPT_LOWER_CASE_TABLE_NAMES,options_mysqld::OPT_LOWER_CASE_TABLE_NAMES389,15600
  OPT_ONE_THREAD,options_mysqld::OPT_ONE_THREAD390,15630
  OPT_POOL_OF_THREADS,options_mysqld::OPT_POOL_OF_THREADS391,15648
  OPT_REPLICATE_DO_DB,options_mysqld::OPT_REPLICATE_DO_DB392,15671
  OPT_REPLICATE_DO_TABLE,options_mysqld::OPT_REPLICATE_DO_TABLE393,15694
  OPT_REPLICATE_IGNORE_DB,options_mysqld::OPT_REPLICATE_IGNORE_DB394,15720
  OPT_REPLICATE_IGNORE_TABLE,options_mysqld::OPT_REPLICATE_IGNORE_TABLE395,15747
  OPT_REPLICATE_REWRITE_DB,options_mysqld::OPT_REPLICATE_REWRITE_DB396,15777
  OPT_REPLICATE_WILD_DO_TABLE,options_mysqld::OPT_REPLICATE_WILD_DO_TABLE397,15805
  OPT_REPLICATE_WILD_IGNORE_TABLE,options_mysqld::OPT_REPLICATE_WILD_IGNORE_TABLE398,15836
  OPT_SAFE,options_mysqld::OPT_SAFE399,15871
  OPT_SERVER_ID,options_mysqld::OPT_SERVER_ID400,15883
  OPT_SKIP_HOST_CACHE,options_mysqld::OPT_SKIP_HOST_CACHE401,15900
  OPT_SKIP_LOCK,options_mysqld::OPT_SKIP_LOCK402,15923
  OPT_SKIP_NEW,options_mysqld::OPT_SKIP_NEW403,15940
  OPT_SKIP_PRIOR,options_mysqld::OPT_SKIP_PRIOR404,15956
  OPT_SKIP_RESOLVE,options_mysqld::OPT_SKIP_RESOLVE405,15974
  OPT_SKIP_STACK_TRACE,options_mysqld::OPT_SKIP_STACK_TRACE406,15994
  OPT_SKIP_SYMLINKS,options_mysqld::OPT_SKIP_SYMLINKS407,16018
  OPT_SLOW_QUERY_LOG,options_mysqld::OPT_SLOW_QUERY_LOG408,16039
  OPT_SSL_CA,options_mysqld::OPT_SSL_CA409,16061
  OPT_SSL_CAPATH,options_mysqld::OPT_SSL_CAPATH410,16075
  OPT_SSL_CERT,options_mysqld::OPT_SSL_CERT411,16093
  OPT_SSL_CIPHER,options_mysqld::OPT_SSL_CIPHER412,16109
  OPT_SSL_KEY,options_mysqld::OPT_SSL_KEY413,16127
  OPT_UPDATE_LOG,options_mysqld::OPT_UPDATE_LOG414,16142
  OPT_WANT_CORE,options_mysqld::OPT_WANT_CORE415,16160
  OPT_ENGINE_CONDITION_PUSHDOWN,options_mysqld::OPT_ENGINE_CONDITION_PUSHDOWN416,16177
  OPT_LOG_ERROR,options_mysqld::OPT_LOG_ERROR417,16210
  OPT_MAX_LONG_DATA_SIZEoptions_mysqld::OPT_MAX_LONG_DATA_SIZE418,16227
enum enum_query_type425,16314
  QT_ORDINARY=enum_query_type::QT_ORDINARY428,16381
  QT_TO_SYSTEM_CHARSET=enum_query_type::QT_TO_SYSTEM_CHARSET430,16414
  QT_WITHOUT_INTRODUCERS=enum_query_type::QT_WITHOUT_INTRODUCERS432,16489
typedef int64 query_id_t;436,16543
inline query_id_t next_query_id(443,16744
inline query_id_t get_query_id(452,16963
#define unireg_abort(469,17376
inline void table_case_convert(472,17481
inline ulong sql_rnd_with_mutex(479,17696
inc_thread_running(488,17925
dec_thread_running(498,18184
get_thread_running(508,18444
#define _current_thd(519,18778
inline THD *_current_thd(_current_thd526,19006
#define current_thd 531,19099

sql/mysqld_suffix.h,118
#define MYSQLD_SUFFIX_INCLUDED2,31
#define MYSQL_SERVER_SUFFIX_STR 30,1029
#define MYSQL_SERVER_SUFFIX_STR 32,1102

sql/nt_servc.h,198
#define NT_SERVC_INCLUDED2,26
typedef void (*THREAD_FC)THREAD_FC15,264
class NTService17,300
    BOOL IsNT(NTService::IsNT49,972
    void SetShutdownEvent(NTService::SetShutdownEvent54,1126

sql/opt_range.h,4233
#define _opt_range_h20,816
typedef struct st_key_part 40,1441
} KEY_PART;52,1826
class QUICK_RANGE 55,1840
  QUICK_RANGE(QUICK_RANGE::QUICK_RANGE65,2205
  void make_min_endpoint(QUICK_RANGE::make_min_endpoint97,3358
  void make_min_endpoint(QUICK_RANGE::make_min_endpoint113,3959
  void make_max_endpoint(QUICK_RANGE::make_max_endpoint135,4770
  void make_max_endpoint(QUICK_RANGE::make_max_endpoint151,5369
class QUICK_SELECT_I207,6762
  virtual ~QUICK_SELECT_I(QUICK_SELECT_I::~QUICK_SELECT_I236,7522
  virtual void range_end(QUICK_SELECT_I::range_end278,8802
  virtual bool unique_key_range(QUICK_SELECT_I::unique_key_range281,8870
  virtual bool clustered_pk_range(QUICK_SELECT_I::clustered_pk_range282,8922
    QS_TYPE_RANGE QUICK_SELECT_I::QS_TYPE_RANGE285,8986
    QS_TYPE_INDEX_MERGE QUICK_SELECT_I::QS_TYPE_INDEX_MERGE286,9009
    QS_TYPE_RANGE_DESC QUICK_SELECT_I::QS_TYPE_RANGE_DESC287,9038
    QS_TYPE_FULLTEXT QUICK_SELECT_I::QS_TYPE_FULLTEXT288,9066
    QS_TYPE_ROR_INTERSECT QUICK_SELECT_I::QS_TYPE_ROR_INTERSECT289,9094
    QS_TYPE_ROR_UNION QUICK_SELECT_I::QS_TYPE_ROR_UNION290,9125
    QS_TYPE_GROUP_MIN_MAX QUICK_SELECT_I::QS_TYPE_GROUP_MIN_MAX291,9152
  virtual int init_ror_merged_scan(QUICK_SELECT_I::init_ror_merged_scan310,9741
  virtual void save_last_pos(QUICK_SELECT_I::save_last_pos316,9916
  virtual void add_info_string(QUICK_SELECT_I::add_info_string332,10576
  virtual bool is_valid(QUICK_SELECT_I::is_valid344,10943
  virtual QUICK_SELECT_I *make_reverse(QUICK_SELECT_I::make_reverse367,11533
class QUICK_RANGE_SELECT 379,11772
  bool reverse_sorted(QUICK_RANGE_SELECT::reverse_sorted442,14225
  void save_last_pos(QUICK_RANGE_SELECT::save_last_pos445,14338
  int get_type(QUICK_RANGE_SELECT::get_type447,14391
class QUICK_RANGE_SELECT_GEOM:QUICK_RANGE_SELECT_GEOM459,14732
  QUICK_RANGE_SELECT_GEOM(QUICK_RANGE_SELECT_GEOM::QUICK_RANGE_SELECT_GEOM462,14799
class QUICK_INDEX_MERGE_SELECT 529,16997
  bool reverse_sorted(QUICK_INDEX_MERGE_SELECT::reverse_sorted539,17218
  bool unique_key_range(QUICK_INDEX_MERGE_SELECT::unique_key_range540,17260
  int get_type(QUICK_INDEX_MERGE_SELECT::get_type541,17304
  bool clustered_pk_range(QUICK_INDEX_MERGE_SELECT::clustered_pk_range564,18001
  virtual bool is_valid(QUICK_INDEX_MERGE_SELECT::is_valid566,18064
class QUICK_ROR_INTERSECT_SELECT 605,19178
  bool reverse_sorted(QUICK_ROR_INTERSECT_SELECT::reverse_sorted616,19494
  bool unique_key_range(QUICK_ROR_INTERSECT_SELECT::unique_key_range617,19536
  int get_type(QUICK_ROR_INTERSECT_SELECT::get_type618,19580
  virtual bool is_valid(QUICK_ROR_INTERSECT_SELECT::is_valid634,20099
class QUICK_ROR_UNION_SELECT 677,21277
  bool reverse_sorted(QUICK_ROR_UNION_SELECT::reverse_sorted686,21474
  bool unique_key_range(QUICK_ROR_UNION_SELECT::unique_key_range687,21516
  int get_type(QUICK_ROR_UNION_SELECT::get_type688,21560
  virtual bool is_valid(QUICK_ROR_UNION_SELECT::is_valid700,21953
class QUICK_GROUP_MIN_MAX_SELECT 762,23778
  bool reverse_sorted(QUICK_GROUP_MIN_MAX_SELECT::reverse_sorted827,26828
  bool unique_key_range(QUICK_GROUP_MIN_MAX_SELECT::unique_key_range828,26870
  int get_type(QUICK_GROUP_MIN_MAX_SELECT::get_type829,26914
  bool is_agg_distinct(QUICK_GROUP_MIN_MAX_SELECT::is_agg_distinct834,27103
  virtual void append_loose_scan_type(QUICK_GROUP_MIN_MAX_SELECT::append_loose_scan_type835,27158
class QUICK_SELECT_DESC:QUICK_SELECT_DESC843,27297
  bool reverse_sorted(QUICK_SELECT_DESC::reverse_sorted848,27441
  int get_type(QUICK_SELECT_DESC::get_type849,27479
  QUICK_SELECT_I *make_reverse(QUICK_SELECT_DESC::make_reverse850,27527
  int reset(QUICK_SELECT_DESC::reset856,27696
class SQL_SELECT 863,27868
  void set_quick(SQL_SELECT::set_quick879,28377
  bool check_quick(SQL_SELECT::check_quick880,28457
  inline bool skip_record(SQL_SELECT::skip_record886,28642
class FT_SELECT:FT_SELECT896,28911
  FT_SELECT(FT_SELECT::FT_SELECT898,28964
  ~FT_SELECT(FT_SELECT::~FT_SELECT900,29077
  int init(FT_SELECT::init901,29112
  int reset(FT_SELECT::reset902,29159
  int get_next(FT_SELECT::get_next903,29187
  int get_type(FT_SELECT::get_type904,29244

sql/parse_file.h,1071
#define _PARSE_FILE_H_18,786
typedef struct st_mem_root MEM_ROOT;26,1003
#define PARSE_FILE_TIMESTAMPLENGTH 28,1041
enum file_opt_type 30,1080
  FILE_OPTIONS_STRING,file_opt_type::FILE_OPTIONS_STRING31,1101
  FILE_OPTIONS_ESTRING,file_opt_type::FILE_OPTIONS_ESTRING32,1153
  FILE_OPTIONS_ULONGLONG,file_opt_type::FILE_OPTIONS_ULONGLONG33,1214
  FILE_OPTIONS_TIMESTAMP,file_opt_type::FILE_OPTIONS_TIMESTAMP34,1280
  FILE_OPTIONS_STRLIST,file_opt_type::FILE_OPTIONS_STRLIST36,1386
  FILE_OPTIONS_ULLLIST file_opt_type::FILE_OPTIONS_ULLLIST38,1504
struct File_option42,1626
class Unknown_key_hook55,1904
  Unknown_key_hook(Unknown_key_hook::Unknown_key_hook58,1937
  virtual ~Unknown_key_hook(Unknown_key_hook::~Unknown_key_hook59,2008
class File_parser_dummy_hook:File_parser_dummy_hook67,2300
  File_parser_dummy_hook(File_parser_dummy_hook::File_parser_dummy_hook70,2364
class File_parser:File_parser96,3392
  File_parser(File_parser::File_parser102,3512
  my_bool ok(File_parser::ok105,3618
  LEX_STRING *type(File_parser::type106,3656

sql/partition_element.h,842
#define PARTITION_ELEMENT_INCLUDED2,35
enum partition_type 25,1026
  NOT_A_PARTITION=26,1048
  RANGE_PARTITION,27,1070
  HASH_PARTITION,28,1089
  LIST_PARTITION29,1107
enum partition_state 32,1128
  PART_NORMAL=33,1151
  PART_IS_DROPPED=34,1169
  PART_TO_BE_DROPPED=35,1191
  PART_TO_BE_ADDED=36,1216
  PART_TO_BE_REORGED=37,1239
  PART_REORGED_DROPPED=38,1264
  PART_CHANGED=39,1291
  PART_IS_CHANGED=40,1310
  PART_IS_ADDED=41,1332
  PART_ADMIN=42,1352
typedef struct p_column_list_val62,2216
} part_column_list_val;71,2399
typedef struct p_elem_val81,2619
} part_elem_value;88,2765
class partition_element 92,2818
  partition_element(partition_element::partition_element112,3428
  partition_element(partition_element::partition_element122,3800
  ~partition_element(partition_element::~partition_element136,4327

sql/partition_info.h,884
#define PARTITION_INFO_INCLUDED2,32
typedef int (*get_part_id_func)get_part_id_func28,982
typedef int (*get_subpart_id_func)get_subpart_id_func31,1147
class partition_info 36,1297
  enum enum_key_algorithmpartition_info::enum_key_algorithm201,6376
      KEY_ALGORITHM_NONE=partition_info::enum_key_algorithm::KEY_ALGORITHM_NONE203,6408
      KEY_ALGORITHM_51=partition_info::enum_key_algorithm::KEY_ALGORITHM_51204,6437
      KEY_ALGORITHM_55=partition_info::enum_key_algorithm::KEY_ALGORITHM_55205,6464
  partition_info(partition_info::partition_info224,6921
  ~partition_info(partition_info::~partition_info266,8752
  bool is_sub_partitioned(partition_info::is_sub_partitioned270,8883
  uint get_tot_partitions(partition_info::get_tot_partitions276,9047
static inline void init_single_partition_iterator(332,11579
void init_all_partitions_iterator(343,12018

sql/procedure.h,2265
#define PROCEDURE_INCLUDED2,27
#define PROC_NO_SORT 34,1236
#define PROC_GROUP 35,1284
class Item_proc 39,1427
  Item_proc(Item_proc::Item_proc42,1466
  enum Type type(Item_proc::type46,1550
  void set(Item_proc::set51,1788
  void make_field(Item_proc::make_field52,1868
  unsigned int size_of(Item_proc::size_of56,1962
class Item_proc_real 59,2018
  Item_proc_real(Item_proc_real::Item_proc_real63,2083
  enum Item_result result_type Item_proc_real::result_type67,2210
  enum_field_types field_type(Item_proc_real::field_type68,2274
  void set(Item_proc_real::set69,2342
  void set(Item_proc_real::set70,2378
  void set(Item_proc_real::set71,2425
  double val_real(Item_proc_real::val_real77,2612
  longlong val_int(Item_proc_real::val_int78,2650
  String *val_str(Item_proc_real::val_str79,2700
  unsigned int size_of(Item_proc_real::size_of85,2843
class Item_proc_int 88,2897
  Item_proc_int(Item_proc_int::Item_proc_int92,2963
  enum Item_result result_type Item_proc_int::result_type94,3043
  enum_field_types field_type(Item_proc_int::field_type95,3106
  void set(Item_proc_int::set96,3176
  void set(Item_proc_int::set97,3223
  void set(Item_proc_int::set98,3261
  double val_real(Item_proc_int::val_real100,3381
  longlong val_int(Item_proc_int::val_int101,3428
  String *val_str(Item_proc_int::val_str102,3467
  unsigned int size_of(Item_proc_int::size_of104,3585
class Item_proc_string 108,3640
  Item_proc_string(Item_proc_string::Item_proc_string111,3691
  enum Item_result result_type Item_proc_string::result_type113,3798
  enum_field_types field_type(Item_proc_string::field_type114,3864
  void set(Item_proc_string::set115,3933
  void set(Item_proc_string::set116,4005
  void set(Item_proc_string::set117,4071
  double val_real(Item_proc_string::val_real119,4167
  longlong val_int(Item_proc_string::val_int127,4394
  String *val_str(Item_proc_string::val_str133,4555
  unsigned int size_of(Item_proc_string::size_of138,4691
class Procedure 143,4786
  Procedure(Procedure::Procedure150,4920
  virtual ~Procedure(Procedure::~Procedure152,5030
  virtual void update_refs(Procedure::update_refs157,5249
  virtual int end_of_records(Procedure::end_of_records158,5285

sql/protocol.h,1794
#define PROTOCOL_INCLUDED2,26
typedef struct st_mysql_field MYSQL_FIELD;30,1032
typedef struct st_mysql_rows MYSQL_ROWS;31,1075
class Protocol33,1117
  Protocol(Protocol::Protocol67,2159
  Protocol(Protocol::Protocol68,2175
  virtual ~Protocol(Protocol::~Protocol69,2219
  enum { SEND_NUM_ROWS=Protocol::SEND_NUM_ROWS72,2272
  enum { SEND_NUM_ROWS= 1, SEND_DEFAULTS=Protocol::SEND_DEFAULTS72,2272
  enum { SEND_NUM_ROWS= 1, SEND_DEFAULTS= 2, SEND_EOF=Protocol::SEND_EOF72,2272
  String *storage_packet(Protocol::storage_packet78,2547
  inline void free(Protocol::free79,2593
  inline  bool store(Protocol::store81,2658
  inline  bool store(Protocol::store83,2731
  inline  bool store(Protocol::store85,2807
  inline  bool store(Protocol::store87,2892
  inline bool store(Protocol::store89,2978
  virtual bool prepare_for_send(Protocol::prepare_for_send92,3083
  virtual void remove_last_row(Protocol::remove_last_row120,4194
  void remove_last_row(Protocol::remove_last_row122,4236
  enum enum_protocol_typeProtocol::enum_protocol_type124,4271
    PROTOCOL_TEXT=Protocol::enum_protocol_type::PROTOCOL_TEXT130,4429
    PROTOCOL_TEXT= 0, PROTOCOL_BINARY=Protocol::enum_protocol_type::PROTOCOL_BINARY130,4429
    PROTOCOL_TEXT= 0, PROTOCOL_BINARY= 1, PROTOCOL_LOCAL=Protocol::enum_protocol_type::PROTOCOL_LOCAL130,4429
class Protocol_text 140,4622
  Protocol_text(Protocol_text::Protocol_text143,4669
  Protocol_text(Protocol_text::Protocol_text144,4690
  virtual enum enum_protocol_type type(Protocol_text::type166,5652
class Protocol_binary 170,5725
  Protocol_binary(Protocol_binary::Protocol_binary175,5802
  Protocol_binary(Protocol_binary::Protocol_binary176,5825
  virtual enum enum_protocol_type type(Protocol_binary::type201,6896

sql/records.h,292
#define SQL_RECORDS_H 2,22
struct READ_RECORD43,1318
  typedef int (*Read_func)READ_RECORD::Read_func45,1339
  typedef void (*Unlock_row_func)READ_RECORD::Unlock_row_func46,1381
  typedef int (*Setup_func)READ_RECORD::Setup_func47,1433
  READ_RECORD(READ_RECORD::READ_RECORD67,2118

sql/repl_failsafe.h,485
#define REPL_FAILSAFE_INCLUDED2,31
typedef enum {RPL_AUTH_MASTER=RPL_AUTH_MASTER25,892
typedef enum {RPL_AUTH_MASTER=0,RPL_IDLE_SLAVE,25,892
typedef enum {RPL_AUTH_MASTER=0,RPL_IDLE_SLAVE,RPL_ACTIVE_SLAVE,25,892
	      RPL_LOST_SOLDIER,26,957
	      RPL_LOST_SOLDIER,RPL_TROOP_SOLDIER,26,957
	      RPL_RECOVERY_CAPTAIN,27,1000
	      RPL_RECOVERY_CAPTAIN,RPL_NULL 27,1000
	      RPL_ANY 28,1053
	      RPL_ANY /* wild card used by change_rpl_status */ } RPL_STATUS;28,1053

sql/replication.h,891
#define REPLICATION_H17,767
typedef struct st_mysql MYSQL;21,810
enum Trans_flags 30,920
  TRANS_IS_REAL_TRANS 32,982
typedef struct Trans_param 38,1053
} Trans_param;51,1465
typedef struct Trans_observer 56,1534
} Trans_observer;96,2646
enum Binlog_storage_flags 101,2696
  BINLOG_STORAGE_IS_SYNCED 103,2756
typedef struct Binlog_storage_param 109,2837
} Binlog_storage_param;111,2895
typedef struct Binlog_storage_observer 116,2961
} Binlog_storage_observer;137,3680
typedef struct Binlog_transmit_param 142,3783
} Binlog_transmit_param;145,3858
typedef struct Binlog_transmit_observer 150,3941
} Binlog_transmit_observer;241,6777
enum Binlog_relay_IO_flags 246,6838
  BINLOG_RELAY_IS_SYNCED 248,6905
typedef struct Binlog_relay_IO_param 255,6995
} Binlog_relay_IO_param;267,7263
typedef struct Binlog_relay_IO_observer 272,7352
} Binlog_relay_IO_observer;349,9588

sql/rpl_constants.h,134
#define RPL_CONSTANTS_H18,785
enum Incident 23,881
  INCIDENT_NONE 25,918
  INCIDENT_LOST_EVENTS 28,1006
  INCIDENT_COUNT31,1083

sql/rpl_filter.h,175
#define RPL_FILTER_H17,775
typedef struct st_dynamic_array DYNAMIC_ARRAY;25,970
typedef struct st_table_rule_ent27,1018
} TABLE_RULE_ENT;32,1099
class Rpl_filter 41,1266

sql/rpl_handler.h,1374
#define RPL_HANDLER_H17,767
class Observer_info 25,903
  Observer_info(Observer_info::Observer_info31,1002
class Delegate 38,1134
  typedef List<Observer_info> Observer_info_list;Delegate::Observer_info_list40,1159
  typedef List_iterator<Observer_info> Observer_info_iterator;Delegate::Observer_info_iterator41,1209
  int add_observer(Delegate::add_observer43,1275
  int remove_observer(Delegate::remove_observer65,1787
  inline Observer_info_iterator observer_info_iter(Delegate::observer_info_iter86,2206
  inline bool is_empty(Delegate::is_empty91,2323
  inline int read_lock(Delegate::read_lock96,2399
  inline int write_lock(Delegate::write_lock103,2498
  inline int unlock(Delegate::unlock110,2598
  inline bool is_inited(Delegate::is_inited117,2694
  Delegate(Delegate::Delegate122,2750
  ~Delegate(Delegate::~Delegate130,2898
class Trans_delegate144,3107
  typedef Trans_observer Observer;Trans_delegate::Observer147,3157
class Binlog_storage_delegate154,3362
  typedef Binlog_storage_observer Observer;Binlog_storage_delegate::Observer157,3421
class Binlog_transmit_delegate163,3593
  typedef Binlog_transmit_observer Observer;Binlog_transmit_delegate::Observer166,3653
class Binlog_relay_IO_delegate179,4207
  typedef Binlog_relay_IO_observer Observer;Binlog_relay_IO_delegate::Observer182,4267
#define RUN_HOOK(212,5366

sql/rpl_injector.h,1712
#define INJECTOR_H17,765
class injector 44,1571
    class transaction injector::transaction73,2246
      typedef uchar* record_type;injector::transaction::record_type77,2347
      typedef uint32 server_id_type;injector::transaction::server_id_type78,2381
      class table injector::transaction::table117,3681
        table(injector::transaction::table::table120,3722
        char const *db_name(injector::transaction::table::db_name125,3863
        char const *table_name(injector::transaction::table::table_name126,3930
        TABLE *get_table(injector::transaction::table::get_table127,4008
        bool is_transactional(injector::transaction::table::is_transactional128,4061
      class binlog_pos injector::transaction::binlog_pos138,4271
        char const *file_name(injector::transaction::binlog_pos::file_name141,4344
        my_off_t file_pos(injector::transaction::binlog_pos::file_pos142,4406
      transaction(injector::transaction::transaction149,4551
      void clear(injector::transaction::clear154,4725
      bool good(injector::transaction::good157,4810
      transaction& operator=(injector::transaction::operator=160,4926
      void swap(injector::transaction::swap227,6981
      enum enum_stateinjector::transaction::enum_state248,7472
        START_STATE,injector::transaction::enum_state::START_STATE250,7502
        TABLE_STATE,injector::transaction::enum_state::TABLE_STATE251,7568
        ROW_STATE,injector::transaction::enum_state::ROW_STATE252,7639
        STATE_COUNT injector::transaction::enum_state::STATE_COUNT253,7710
      int check_state(injector::transaction::check_state286,8658
    ~injector(injector::~injector331,10107

sql/rpl_mi.h,89
#define RPL_MI_H17,762
typedef struct st_mysql MYSQL;25,874
class Master_info 59,1862

sql/rpl_record.h,71
#define RPL_RECORD_H17,766
typedef struct st_bitmap MY_BITMAP;24,912

sql/rpl_record_old.h,32
#define RPL_RECORD_OLD_H17,770

sql/rpl_reporting.h,429
#define RPL_REPORTING_H17,770
#define MAX_SLAVE_ERRMSG 24,924
class Slave_reporting_capability33,1175
  void clear_error(Slave_reporting_capability::clear_error62,2082
  class Error Slave_reporting_capability::Error71,2250
    Error(Slave_reporting_capability::Error::Error74,2321
    void clear(Slave_reporting_capability::Error::clear79,2361
  Error const& last_error(Slave_reporting_capability::last_error91,2540

sql/rpl_rli.h,2361
#define RPL_RLI_H17,763
class Relay_log_info 55,1805
  enum enum_state_flag Relay_log_info::enum_state_flag61,1929
    IN_STMT,Relay_log_info::enum_state_flag::IN_STMT63,2010
    STATE_FLAGS_COUNTRelay_log_info::enum_state_flag::STATE_FLAGS_COUNT66,2072
  enum {UNTIL_NONE=Relay_log_info::UNTIL_NONE264,8741
  enum {UNTIL_NONE= 0, UNTIL_MASTER_POS,Relay_log_info::UNTIL_MASTER_POS264,8741
  enum {UNTIL_NONE= 0, UNTIL_MASTER_POS, UNTIL_RELAY_POS}Relay_log_info::UNTIL_RELAY_POS264,8741
    UNTIL_LOG_NAMES_CMP_UNKNOWN=Relay_log_info::UNTIL_LOG_NAMES_CMP_UNKNOWN275,9130
    UNTIL_LOG_NAMES_CMP_UNKNOWN= -2, UNTIL_LOG_NAMES_CMP_LESS=Relay_log_info::UNTIL_LOG_NAMES_CMP_LESS275,9130
    UNTIL_LOG_NAMES_CMP_EQUAL=Relay_log_info::UNTIL_LOG_NAMES_CMP_EQUAL276,9197
    UNTIL_LOG_NAMES_CMP_EQUAL= 0, UNTIL_LOG_NAMES_CMP_GREATER=Relay_log_info::UNTIL_LOG_NAMES_CMP_GREATER276,9197
  inline void notify_group_relay_log_name_update(Relay_log_info::notify_group_relay_log_name_update315,10676
  inline void notify_group_master_log_name_update(Relay_log_info::notify_group_master_log_name_update324,10908
  inline void inc_event_relay_log_pos(Relay_log_info::inc_event_relay_log_pos330,11077
  inline ulonglong until_pos(Relay_log_info::until_pos344,11505
  bool get_table_data(Relay_log_info::get_table_data354,11861
  bool is_deferred_event(Relay_log_info::is_deferred_event409,13920
  inline void cleanup_after_query(Relay_log_info::cleanup_after_query414,14125
  void cleanup_after_session(Relay_log_info::cleanup_after_session420,14307
  void set_flag(Relay_log_info::set_flag453,15296
  bool get_flag(Relay_log_info::get_flag465,15535
  void clear_flag(Relay_log_info::clear_flag475,15712
  bool is_in_group(Relay_log_info::is_in_group490,16168
  time_t get_row_stmt_start_timestamp(Relay_log_info::get_row_stmt_start_timestamp495,16300
  time_t set_row_stmt_start_timestamp(Relay_log_info::set_row_stmt_start_timestamp500,16386
  void reset_row_stmt_start_timestamp(Relay_log_info::reset_row_stmt_start_timestamp508,16556
  void set_long_find_row_note_printed(Relay_log_info::set_long_find_row_note_printed513,16638
  void unset_long_find_row_note_printed(Relay_log_info::unset_long_find_row_note_printed518,16725
  bool is_long_find_row_note_printed(Relay_log_info::is_long_find_row_note_printed523,16815

sql/rpl_tblmap.h,536
#define TABLE_MAPPING_H17,769
typedef Table_map_log_event TABLE;24,889
class table_mapping 57,1998
  enum enum_error table_mapping::enum_error64,2063
      ERR_NO_ERROR table_mapping::enum_error::ERR_NO_ERROR65,2083
      ERR_LIMIT_EXCEEDED,table_mapping::enum_error::ERR_LIMIT_EXCEEDED66,2107
      ERR_MEMORY_ALLOCATIONtable_mapping::enum_error::ERR_MEMORY_ALLOCATION67,2133
  ulong     count(table_mapping::count78,2367
  struct entry table_mapping::entry85,2558
  entry *find_entry(table_mapping::find_entry93,2660

sql/rpl_utility.h,655
#define RPL_UTILITY_H17,768
class table_def42,1381
  ulong size(table_def::size64,2014
  enum_field_types type(table_def::type76,2322
  uint16 field_metadata(table_def::field_metadata125,3974
  my_bool maybe_null(table_def::maybe_null138,4285
struct RPL_TABLE_LIST226,7308
  class auto_afree_ptr249,7962
    auto_afree_ptr(auto_afree_ptr::auto_afree_ptr253,8015
    ~auto_afree_ptr(auto_afree_ptr::~auto_afree_ptr254,8061
    void assign(auto_afree_ptr::assign255,8115
    Obj* get(auto_afree_ptr::get260,8271
class Deferred_log_events265,8330
  bool is_last(Deferred_log_events::is_last279,8660
#define DBUG_PRINT_BITSET(285,8798

sql/scheduler.h,364
#define SCHEDULER_INCLUDED2,27
struct scheduler_functions31,956
enum scheduler_types58,1838
  SCHEDULER_ONE_THREAD_PER_CONNECTION=scheduler_types::SCHEDULER_ONE_THREAD_PER_CONNECTION67,2163
  SCHEDULER_NO_THREADS,scheduler_types::SCHEDULER_NO_THREADS68,2204
  SCHEDULER_TYPES_COUNTscheduler_types::SCHEDULER_TYPES_COUNT69,2228
class thd_scheduler78,2410

sql/set_var.h,2318
#define SET_VAR_INCLUDED2,25
struct sys_var_chain41,1326
class sys_var57,1807
  enum flag_enum sys_var::flag_enum62,1868
  enum flag_enum { GLOBAL,sys_var::flag_enum::GLOBAL62,1868
  enum flag_enum { GLOBAL, SESSION,sys_var::flag_enum::SESSION62,1868
  enum flag_enum { GLOBAL, SESSION, ONLY_SESSION,sys_var::flag_enum::ONLY_SESSION62,1868
  enum flag_enum { GLOBAL, SESSION, ONLY_SESSION, SCOPE_MASK=sys_var::flag_enum::SCOPE_MASK62,1868
                   READONLY=sys_var::flag_enum::READONLY63,1935
                   READONLY=1024, ALLOCATED=sys_var::flag_enum::ALLOCATED63,1935
  enum binlog_status_enum sys_var::binlog_status_enum70,2181
  enum binlog_status_enum { VARIABLE_NOT_IN_BINLOG,sys_var::binlog_status_enum::VARIABLE_NOT_IN_BINLOG70,2181
                            SESSION_VARIABLE_IN_BINLOG sys_var::binlog_status_enum::SESSION_VARIABLE_IN_BINLOG71,2233
  typedef bool (*on_check_function)sys_var::on_check_function74,2317
  typedef bool (*on_update_function)sys_var::on_update_function75,2393
  virtual ~sys_var(sys_var::~sys_var96,3507
  virtual void cleanup(sys_var::cleanup101,3599
  virtual sys_var_pluginvar *cast_pluginvar(sys_var::cast_pluginvar106,3750
  SHOW_TYPE show_type(sys_var::show_type119,4197
  int scope(sys_var::scope120,4247
  bool is_readonly(sys_var::is_readonly122,4333
  bool is_struct(sys_var::is_struct127,4513
  bool is_written_to_binlog(sys_var::is_written_to_binlog128,4575
  bool check_type(sys_var::check_type131,4759
  bool register_option(sys_var::register_option141,5023
  uchar *session_var_ptr(sys_var::session_var_ptr175,6239
  uchar *global_var_ptr(sys_var::global_var_ptr178,6326
class set_var_base 193,6892
  set_var_base(set_var_base::set_var_base196,6939
  virtual ~set_var_base(set_var_base::~set_var_base197,6959
  virtual int light_check(set_var_base::light_check200,7136
class set_var 207,7289
  set_var(set_var::set_var224,8081
class set_var_user:set_var_user260,9199
  set_var_user(set_var_user::set_var_user264,9290
class set_var_password:set_var_password274,9469
  set_var_password(set_var_password::set_var_password279,9559
class set_var_collation_client:set_var_collation_client289,9761
  set_var_collation_client(set_var_collation_client::set_var_collation_client295,9938

sql/slave.h,415
#define SLAVE_H17,761
#define SLAVE_MAX_HEARTBEAT_PERIOD 34,1014
#define SLAVE_NET_TIMEOUT 43,1170
#define MAX_SLAVE_ERROR 45,1203
#define MYSQL_SLAVE_NOT_RUN 132,4891
#define MYSQL_SLAVE_RUN_NOT_CONNECT 133,4929
#define MYSQL_SLAVE_RUN_CONNECT 134,4967
#define RPL_LOG_NAME 136,5006
#define IO_RPL_LOG_NAME 138,5100
#define SLAVE_FORCE_ALL 145,5302
#define SLAVE_IO 237,9067
#define SLAVE_SQL 238,9087

sql/sp.h,1951
#define _SP_H_18,778
typedef struct st_hash HASH;36,1117
#define SP_DEFAULT_ACCESS_MAPPING 41,1243
#define SP_OK 44,1354
#define SP_KEY_NOT_FOUND 45,1386
#define SP_OPEN_TABLE_FAILED 46,1418
#define SP_WRITE_ROW_FAILED 47,1450
#define SP_DELETE_ROW_FAILED 48,1482
#define SP_GET_FIELD_FAILED 49,1514
#define SP_PARSE_ERROR 50,1546
#define SP_INTERNAL_ERROR 51,1578
#define SP_NO_DB_ERROR 52,1610
#define SP_BAD_IDENTIFIER 53,1642
#define SP_BODY_TOO_LONG 54,1674
#define SP_FLD_STORE_FAILED 55,1706
  MYSQL_PROC_FIELD_DB ::MYSQL_PROC_FIELD_DB60,1798
  MYSQL_PROC_FIELD_NAME,::MYSQL_PROC_FIELD_NAME61,1825
  MYSQL_PROC_MYSQL_TYPE,::MYSQL_PROC_MYSQL_TYPE62,1850
  MYSQL_PROC_FIELD_SPECIFIC_NAME,::MYSQL_PROC_FIELD_SPECIFIC_NAME63,1875
  MYSQL_PROC_FIELD_LANGUAGE,::MYSQL_PROC_FIELD_LANGUAGE64,1909
  MYSQL_PROC_FIELD_ACCESS,::MYSQL_PROC_FIELD_ACCESS65,1938
  MYSQL_PROC_FIELD_DETERMINISTIC,::MYSQL_PROC_FIELD_DETERMINISTIC66,1965
  MYSQL_PROC_FIELD_SECURITY_TYPE,::MYSQL_PROC_FIELD_SECURITY_TYPE67,1999
  MYSQL_PROC_FIELD_PARAM_LIST,::MYSQL_PROC_FIELD_PARAM_LIST68,2033
  MYSQL_PROC_FIELD_RETURNS,::MYSQL_PROC_FIELD_RETURNS69,2064
  MYSQL_PROC_FIELD_BODY,::MYSQL_PROC_FIELD_BODY70,2092
  MYSQL_PROC_FIELD_DEFINER,::MYSQL_PROC_FIELD_DEFINER71,2117
  MYSQL_PROC_FIELD_CREATED,::MYSQL_PROC_FIELD_CREATED72,2145
  MYSQL_PROC_FIELD_MODIFIED,::MYSQL_PROC_FIELD_MODIFIED73,2173
  MYSQL_PROC_FIELD_SQL_MODE,::MYSQL_PROC_FIELD_SQL_MODE74,2202
  MYSQL_PROC_FIELD_COMMENT,::MYSQL_PROC_FIELD_COMMENT75,2231
  MYSQL_PROC_FIELD_CHARACTER_SET_CLIENT,::MYSQL_PROC_FIELD_CHARACTER_SET_CLIENT76,2259
  MYSQL_PROC_FIELD_COLLATION_CONNECTION,::MYSQL_PROC_FIELD_COLLATION_CONNECTION77,2300
  MYSQL_PROC_FIELD_DB_COLLATION,::MYSQL_PROC_FIELD_DB_COLLATION78,2341
  MYSQL_PROC_FIELD_BODY_UTF8,::MYSQL_PROC_FIELD_BODY_UTF879,2374
  MYSQL_PROC_FIELD_COUNT::MYSQL_PROC_FIELD_COUNT80,2404
class Sroutine_hash_entry133,3535

sql/sp_cache.h,28
#define _SP_CACHE_H_18,784

sql/sp_head.h,6806
#define _SP_HEAD_H_18,783
#define TYPE_ENUM_FUNCTION 42,1486
#define TYPE_ENUM_PROCEDURE 43,1516
#define TYPE_ENUM_TRIGGER 44,1546
#define TYPE_ENUM_PROXY 45,1576
class Stored_program_creation_ctx 70,2104
  CHARSET_INFO *get_db_cl(Stored_program_creation_ctx::get_db_cl73,2184
  Stored_program_creation_ctx(Stored_program_creation_ctx::Stored_program_creation_ctx82,2331
  Stored_program_creation_ctx(Stored_program_creation_ctx::Stored_program_creation_ctx87,2467
  virtual void change_env(Stored_program_creation_ctx::change_env95,2732
class sp_name 115,3250
  sp_name(sp_name::sp_name124,3434
  ~sp_name(sp_name::~sp_name137,3834
class sp_head 145,3902
    HAS_RETURN=sp_head::HAS_RETURN154,4105
    MULTI_RESULTS=sp_head::MULTI_RESULTS155,4181
    CONTAINS_DYNAMIC_SQL=sp_head::CONTAINS_DYNAMIC_SQL156,4253
    IS_INVOKED=sp_head::IS_INVOKED157,4331
    HAS_SET_AUTOCOMMIT_STMT=sp_head::HAS_SET_AUTOCOMMIT_STMT158,4403
    HAS_COMMIT_OR_ROLLBACK=sp_head::HAS_COMMIT_OR_ROLLBACK160,4560
    LOG_SLOW_STATEMENTS=sp_head::LOG_SLOW_STATEMENTS161,4593
    LOG_GENERAL_LOG=sp_head::LOG_GENERAL_LOG162,4643
    HAS_SQLCOM_RESET=sp_head::HAS_SQLCOM_RESET163,4694
    HAS_SQLCOM_FLUSH=sp_head::HAS_SQLCOM_FLUSH164,4722
  bool is_invoked(sp_head::is_invoked190,5483
  ulong sp_cache_version(sp_head::sp_cache_version196,5661
  void set_sp_cache_version(sp_head::set_sp_cache_version199,5775
  inline Stored_program_creation_ctx *get_creation_ctx(sp_head::get_creation_ctx223,6563
  inline void set_creation_ctx(sp_head::set_creation_ctx228,6656
  instructions(sp_head::instructions328,9494
  last_instruction(sp_head::last_instruction334,9569
  char *name(sp_head::name380,10642
  get_instr(sp_head::get_instr423,11883
  bool is_not_allowed_in_function(sp_head::is_not_allowed_in_function444,12462
  void propagate_attributes(sp_head::propagate_attributes473,13588
  sp_pcontext *get_parse_context(sp_head::get_parse_context490,14310
  } bp_t;sp_head::bp_t504,14705
class sp_instr 550,16177
  sp_instr(sp_instr::sp_instr562,16488
  virtual ~sp_instr(sp_instr::~sp_instr566,16610
  virtual void backpatch(sp_instr::backpatch617,18280
  virtual uint opt_mark(sp_instr::opt_mark625,18531
  virtual uint opt_shortcut_jump(sp_instr::opt_shortcut_jump637,18879
  virtual void opt_move(sp_instr::opt_move648,19237
class sp_lex_keeper669,19709
  sp_lex_keeper(sp_lex_keeper::sp_lex_keeper676,19845
  virtual ~sp_lex_keeper(sp_lex_keeper::~sp_lex_keeper682,20003
  inline uint sql_command(sp_lex_keeper::sql_command703,20564
  void disable_query_cache(sp_lex_keeper::disable_query_cache708,20644
class sp_instr_stmt 745,21503
  sp_instr_stmt(sp_instr_stmt::sp_instr_stmt754,21701
  virtual ~sp_instr_stmt(sp_instr_stmt::~sp_instr_stmt761,21855
class sp_instr_set 777,22108
  sp_instr_set(sp_instr_set::sp_instr_set784,22258
  virtual ~sp_instr_set(sp_instr_set::~sp_instr_set791,22519
class sp_instr_set_trigger_field 813,22945
  sp_instr_set_trigger_field(sp_instr_set_trigger_field::sp_instr_set_trigger_field820,23122
  virtual ~sp_instr_set_trigger_field(sp_instr_set_trigger_field::~sp_instr_set_trigger_field828,23389
class sp_instr_opt_meta 851,23965
  sp_instr_opt_meta(sp_instr_opt_meta::sp_instr_opt_meta858,24127
  sp_instr_opt_meta(sp_instr_opt_meta::sp_instr_opt_meta863,24270
  virtual ~sp_instr_opt_meta(sp_instr_opt_meta::~sp_instr_opt_meta868,24427
class sp_instr_jump 883,24746
  sp_instr_jump(sp_instr_jump::sp_instr_jump890,24909
  sp_instr_jump(sp_instr_jump::sp_instr_jump894,24991
  virtual ~sp_instr_jump(sp_instr_jump::~sp_instr_jump898,25090
  virtual void backpatch(sp_instr_jump::backpatch911,25390
  virtual void set_destination(sp_instr_jump::set_destination921,25637
class sp_instr_jump_if_not 930,25814
  sp_instr_jump_if_not(sp_instr_jump_if_not::sp_instr_jump_if_not937,26001
  sp_instr_jump_if_not(sp_instr_jump_if_not::sp_instr_jump_if_not942,26147
  virtual ~sp_instr_jump_if_not(sp_instr_jump_if_not::~sp_instr_jump_if_not947,26310
  virtual uint opt_shortcut_jump(sp_instr_jump_if_not::opt_shortcut_jump959,26601
  virtual void set_destination(sp_instr_jump_if_not::set_destination966,26747
class sp_instr_freturn 981,27071
  sp_instr_freturn(sp_instr_freturn::sp_instr_freturn988,27237
  virtual ~sp_instr_freturn(sp_instr_freturn::~sp_instr_freturn994,27434
  virtual uint opt_mark(sp_instr_freturn::opt_mark1003,27602
class sp_instr_hpush_jump 1018,27848
  sp_instr_hpush_jump(sp_instr_hpush_jump::sp_instr_hpush_jump1025,28031
  virtual ~sp_instr_hpush_jump(sp_instr_hpush_jump::~sp_instr_hpush_jump1031,28201
  virtual uint opt_shortcut_jump(sp_instr_hpush_jump::opt_shortcut_jump1043,28466
  virtual void backpatch(sp_instr_hpush_jump::backpatch1048,28555
  inline void add_condition(sp_instr_hpush_jump::add_condition1057,28733
class sp_instr_hpop 1072,29050
  sp_instr_hpop(sp_instr_hpop::sp_instr_hpop1079,29204
  virtual ~sp_instr_hpop(sp_instr_hpop::~sp_instr_hpop1083,29305
class sp_instr_hreturn 1097,29494
  sp_instr_hreturn(sp_instr_hreturn::sp_instr_hreturn1104,29665
  virtual ~sp_instr_hreturn(sp_instr_hreturn::~sp_instr_hreturn1108,29768
  virtual uint opt_shortcut_jump(sp_instr_hreturn::opt_shortcut_jump1116,29945
class sp_instr_cpush 1131,30207
  sp_instr_cpush(sp_instr_cpush::sp_instr_cpush1138,30365
  virtual ~sp_instr_cpush(sp_instr_cpush::~sp_instr_cpush1142,30505
  virtual void cleanup_stmt(sp_instr_cpush::cleanup_stmt1154,30809
class sp_instr_cpop 1163,31012
  sp_instr_cpop(sp_instr_cpop::sp_instr_cpop1170,31166
  virtual ~sp_instr_cpop(sp_instr_cpop::~sp_instr_cpop1174,31267
class sp_instr_copen 1188,31456
  sp_instr_copen(sp_instr_copen::sp_instr_copen1195,31614
  virtual ~sp_instr_copen(sp_instr_copen::~sp_instr_copen1199,31709
class sp_instr_cclose 1215,31973
  sp_instr_cclose(sp_instr_cclose::sp_instr_cclose1222,32135
  virtual ~sp_instr_cclose(sp_instr_cclose::~sp_instr_cclose1226,32231
class sp_instr_cfetch 1240,32425
  sp_instr_cfetch(sp_instr_cfetch::sp_instr_cfetch1247,32587
  virtual ~sp_instr_cfetch(sp_instr_cfetch::~sp_instr_cfetch1253,32709
  void add_to_varlist(sp_instr_cfetch::add_to_varlist1260,32827
class sp_instr_error 1273,33027
  sp_instr_error(sp_instr_error::sp_instr_error1280,33185
  virtual ~sp_instr_error(sp_instr_error::~sp_instr_error1284,33292
  virtual uint opt_mark(sp_instr_error::opt_mark1291,33409
class sp_instr_set_case_expr 1304,33589
  sp_instr_set_case_expr(sp_instr_set_case_expr::sp_instr_set_case_expr1308,33656
  virtual ~sp_instr_set_case_expr(sp_instr_set_case_expr::~sp_instr_set_case_expr1315,33909
  virtual void set_destination(sp_instr_set_case_expr::set_destination1328,34202

sql/sp_pcontext.h,2167
#define _SP_PCONTEXT_H_18,787
  sp_param_in,::sp_param_in32,1129
  sp_param_out,::sp_param_out33,1144
  sp_param_inout::sp_param_inout34,1160
} sp_param_mode_t;35,1177
typedef struct sp_variable37,1197
} sp_variable_t;53,1621
#define SP_LAB_IMPL 56,1640
#define SP_LAB_BEGIN 57,1702
#define SP_LAB_ITER 58,1744
typedef struct sp_label69,2200
} sp_label_t;75,2370
typedef struct sp_cond_type77,2385
  enum { number,sp_cond_type::number79,2415
  enum { number, state,sp_cond_type::state79,2415
  enum { number, state, warning,sp_cond_type::warning79,2415
  enum { number, state, warning, notfound,sp_cond_type::notfound79,2415
  enum { number, state, warning, notfound, exception sp_cond_type::exception79,2415
} sp_cond_type_t;82,2529
typedef struct sp_cond91,2749
} sp_cond_t;95,2816
enum label_scope_type101,2936
  LABEL_DEFAULT_SCOPE,label_scope_type::LABEL_DEFAULT_SCOPE106,3029
  LABEL_HANDLER_SCOPElabel_scope_type::LABEL_HANDLER_SCOPE110,3125
class sp_pcontext 129,3988
  parent_context(sp_pcontext::parent_context159,4508
  max_var_index(sp_pcontext::max_var_index185,5133
  current_var_count(sp_pcontext::current_var_count195,5313
  context_var_count(sp_pcontext::context_var_count202,5455
  var_context2runtime(sp_pcontext::var_context2runtime209,5581
  set_type(sp_pcontext::set_type216,5724
  set_default(sp_pcontext::set_default226,5937
  declare_var_boundary(sp_pcontext::declare_var_boundary258,6645
  register_case_expr(sp_pcontext::register_case_expr268,6759
  get_num_case_exprs(sp_pcontext::get_num_case_exprs274,6835
  push_case_expr_id(sp_pcontext::push_case_expr_id280,6916
  pop_case_expr_id(sp_pcontext::pop_case_expr_id286,7049
  get_current_case_expr_id(sp_pcontext::get_current_case_expr_id292,7130
  last_label(sp_pcontext::last_label313,7488
  pop_label(sp_pcontext::pop_label323,7649
  push_handler(sp_pcontext::push_handler343,7892
  max_handler_index(sp_pcontext::max_handler_index352,8044
  add_handlers(sp_pcontext::add_handlers358,8142
  max_cursor_index(sp_pcontext::max_cursor_index378,8452
  current_cursor_count(sp_pcontext::current_cursor_count384,8548

sql/sp_rcontext.h,1188
#define _SP_RCONTEXT_H_18,787
typedef class st_select_lex_unit SELECT_LEX_UNIT;35,1143
#define SP_HANDLER_NONE 38,1220
#define SP_HANDLER_EXIT 39,1251
#define SP_HANDLER_CONTINUE 40,1282
#define SP_HANDLER_UNDO 41,1313
} sp_handler_t;51,1563
} sp_active_handler_t;59,1720
class Sql_condition_info 62,1745
  void set(Sql_condition_info::set77,2033
  void clear(Sql_condition_info::clear90,2359
class sp_rcontext 120,3302
  is_return_value_set(sp_rcontext::is_return_value_set169,4501
  pop_all_cursors(sp_rcontext::pop_all_cursors215,5342
  get_cursor(sp_rcontext::get_cursor221,5419
class Select_fetch_into_spvars:Select_fetch_into_spvars307,7447
  Select_fetch_into_spvars(Select_fetch_into_spvars::Select_fetch_into_spvars312,7582
  uint get_field_count(Select_fetch_into_spvars::get_field_count313,7653
  void set_spvar_list(Select_fetch_into_spvars::set_spvar_list314,7702
  virtual bool send_eof(Select_fetch_into_spvars::send_eof316,7779
class sp_cursor 324,8002
  virtual ~sp_cursor(sp_cursor::~sp_cursor330,8108
  get_lex_keeper(sp_cursor::get_lex_keeper336,8173
  is_open(sp_cursor::is_open345,8286
  get_instr(sp_cursor::get_instr354,8425

sql/spatial.h,4953
#define _spatial_h17,764
const uint SRID_SIZE=26,928
const uint SIZEOF_STORED_DOUBLE=27,953
const uint POINT_DATA_SIZE=28,989
const uint WKB_HEADER_SIZE=29,1046
const uint32 GET_SIZE_ERROR=30,1079
struct st_point_2d32,1124
struct st_linear_ring38,1173
struct MBR52,1407
  MBR(MBR::MBR56,1454
  MBR(MBR::MBR62,1522
  MBR(MBR::MBR67,1700
  inline void add_xy(MBR::add_xy71,1817
  void add_xy(MBR::add_xy83,2062
  void add_mbr(MBR::add_mbr90,2194
  int equals(MBR::equals102,2430
  int disjoint(MBR::disjoint109,2643
  int intersects(MBR::intersects116,2854
  int touches(MBR::touches121,2923
  int within(MBR::within132,3371
  int contains(MBR::contains139,3584
  bool inner_point(MBR::inner_point146,3799
  int dimension(MBR::dimension159,4128
  int overlaps(MBR::overlaps176,4342
class Geometry200,4954
  Geometry(Geometry::Geometry203,4979
  virtual ~Geometry(Geometry::~Geometry204,5050
  static void *operator new(Geometry::operator new205,5123
  static void operator delete(Geometry::operator delete210,5206
  static void operator delete(Geometry::operator delete213,5267
  enum wkbTypeGeometry::wkbType218,5353
    wkb_point=Geometry::wkbType::wkb_point220,5372
    wkb_linestring=Geometry::wkbType::wkb_linestring221,5390
    wkb_polygon=Geometry::wkbType::wkb_polygon222,5413
    wkb_multipoint=Geometry::wkbType::wkb_multipoint223,5433
    wkb_multilinestring=Geometry::wkbType::wkb_multilinestring224,5456
    wkb_multipolygon=Geometry::wkbType::wkb_multipolygon225,5484
    wkb_geometrycollection=Geometry::wkbType::wkb_geometrycollection226,5509
    wkb_last=Geometry::wkbType::wkb_last227,5540
  enum wkbByteOrderGeometry::wkbByteOrder229,5560
    wkb_xdr=Geometry::wkbByteOrder::wkb_xdr231,5584
    wkb_ndr=Geometry::wkbByteOrder::wkb_ndr232,5620
  typedef Geometry *(*create_geom_t)Geometry::create_geom_t236,5743
  class Class_infoGeometry::Class_info238,5790
  virtual int get_x(Geometry::get_x257,6508
  virtual int get_y(Geometry::get_y258,6560
  virtual int geom_length(Geometry::geom_length259,6612
  virtual int area(Geometry::area260,6673
  virtual int is_closed(Geometry::is_closed261,6742
  virtual int num_interior_ring(Geometry::num_interior_ring262,6800
  virtual int num_points(Geometry::num_points263,6874
  virtual int num_geometries(Geometry::num_geometries264,6938
  virtual int start_point(Geometry::start_point265,7001
  virtual int end_point(Geometry::end_point266,7063
  virtual int exterior_ring(Geometry::exterior_ring267,7123
  virtual int centroid(Geometry::centroid268,7186
  virtual int point_n(Geometry::point_n269,7245
  virtual int interior_ring_n(Geometry::interior_ring_n270,7316
  virtual int geometry_n(Geometry::geometry_n271,7395
  int as_wkt(Geometry::as_wkt283,7942
  inline void set_data_ptr(Geometry::set_data_ptr296,8273
  inline void shift_wkb_header(Geometry::shift_wkb_header302,8395
  static Class_info *find_class(Geometry::find_class311,8566
  inline bool no_data(Geometry::no_data331,9329
  inline bool not_enough_points(Geometry::not_enough_points347,9910
class Gis_point:Gis_point361,10346
  Gis_point(Gis_point::Gis_point364,10389
  virtual ~Gis_point(Gis_point::~Gis_point365,10460
  int get_xy(Gis_point::get_xy372,10813
  int get_x(Gis_point::get_x382,11045
  int get_y(Gis_point::get_y390,11187
  bool dimension(Gis_point::dimension398,11376
class Gis_line_string:Gis_line_string410,11628
  Gis_line_string(Gis_line_string::Gis_line_string417,11868
  virtual ~Gis_line_string(Gis_line_string::~Gis_line_string418,11939
  bool dimension(Gis_line_string::dimension430,12530
class Gis_polygon:Gis_polygon442,12779
  Gis_polygon(Gis_polygon::Gis_polygon445,12824
  virtual ~Gis_polygon(Gis_polygon::~Gis_polygon446,12895
  bool dimension(Gis_polygon::dimension458,13530
class Gis_multi_point:Gis_multi_point470,13782
  Gis_multi_point(Gis_multi_point::Gis_multi_point477,14042
  virtual ~Gis_multi_point(Gis_multi_point::~Gis_multi_point478,14113
  bool dimension(Gis_multi_point::dimension486,14556
class Gis_multi_line_string:Gis_multi_line_string498,14813
  Gis_multi_line_string(Gis_multi_line_string::Gis_multi_line_string501,14868
  virtual ~Gis_multi_line_string(Gis_multi_line_string::~Gis_multi_line_string502,14939
  bool dimension(Gis_multi_line_string::dimension512,15456
class Gis_multi_polygon:Gis_multi_polygon524,15710
  Gis_multi_polygon(Gis_multi_polygon::Gis_multi_polygon527,15761
  virtual ~Gis_multi_polygon(Gis_multi_polygon::~Gis_multi_polygon528,15832
  bool dimension(Gis_multi_polygon::dimension538,16361
class Gis_geometry_collection:Gis_geometry_collection550,16615
  Gis_geometry_collection(Gis_geometry_collection::Gis_geometry_collection553,16672
  virtual ~Gis_geometry_collection(Gis_geometry_collection::~Gis_geometry_collection554,16743
struct Geometry_buffer 566,17289

sql/sql_acl.h,3466
#define SQL_ACL_INCLUDED2,25
#define SELECT_ACL	23,1005
#define INSERT_ACL	24,1034
#define UPDATE_ACL	25,1063
#define DELETE_ACL	26,1092
#define CREATE_ACL	27,1121
#define DROP_ACL	28,1150
#define RELOAD_ACL	29,1177
#define SHUTDOWN_ACL	30,1206
#define PROCESS_ACL	31,1237
#define FILE_ACL	32,1267
#define GRANT_ACL	33,1294
#define REFERENCES_ACL	34,1323
#define INDEX_ACL	35,1357
#define ALTER_ACL	36,1386
#define SHOW_DB_ACL	37,1415
#define SUPER_ACL	38,1446
#define CREATE_TMP_ACL	39,1475
#define LOCK_TABLES_ACL	40,1509
#define EXECUTE_ACL	41,1544
#define REPL_SLAVE_ACL	42,1575
#define REPL_CLIENT_ACL	43,1609
#define CREATE_VIEW_ACL	44,1644
#define SHOW_VIEW_ACL	45,1679
#define CREATE_PROC_ACL	46,1712
#define ALTER_PROC_ACL 47,1747
#define CREATE_USER_ACL 48,1782
#define EVENT_ACL 49,1817
#define TRIGGER_ACL 50,1852
#define CREATE_TABLESPACE_ACL 51,1887
#define NO_ACCESS	60,2268
#define DB_ACLS 61,2297
#define TABLE_ACLS 67,2598
#define COL_ACLS 72,2803
#define PROC_ACLS 75,2879
#define SHOW_PROC_ACLS 78,2943
#define GLOBAL_ACLS 81,3018
#define DEFAULT_CREATE_PROC_ACLS 90,3488
#define SHOW_CREATE_TABLE_ACLS 93,3555
#define DB_CHUNK0 104,3991
#define DB_CHUNK1 106,4106
#define DB_CHUNK2 107,4177
#define DB_CHUNK3 108,4230
#define DB_CHUNK4 110,4325
#define DB_CHUNK5 111,4357
#define fix_rights_for_db(113,4402
#define get_rights_for_db(119,4668
#define TBL_CHUNK0 125,4934
#define TBL_CHUNK1 126,4963
#define TBL_CHUNK2 127,4992
#define TBL_CHUNK3 128,5045
#define fix_rights_for_table(129,5076
#define get_rights_for_table(133,5325
#define fix_rights_for_column(137,5574
#define get_rights_for_column(138,5639
#define fix_rights_for_procedure(139,5697
#define get_rights_for_procedure(142,5845
enum mysql_db_table_field146,5995
  MYSQL_DB_FIELD_HOST 148,6023
  MYSQL_DB_FIELD_DB,149,6050
  MYSQL_DB_FIELD_USER,150,6071
  MYSQL_DB_FIELD_SELECT_PRIV,151,6094
  MYSQL_DB_FIELD_INSERT_PRIV,152,6124
  MYSQL_DB_FIELD_UPDATE_PRIV,153,6154
  MYSQL_DB_FIELD_DELETE_PRIV,154,6184
  MYSQL_DB_FIELD_CREATE_PRIV,155,6214
  MYSQL_DB_FIELD_DROP_PRIV,156,6244
  MYSQL_DB_FIELD_GRANT_PRIV,157,6272
  MYSQL_DB_FIELD_REFERENCES_PRIV,158,6301
  MYSQL_DB_FIELD_INDEX_PRIV,159,6335
  MYSQL_DB_FIELD_ALTER_PRIV,160,6364
  MYSQL_DB_FIELD_CREATE_TMP_TABLE_PRIV,161,6393
  MYSQL_DB_FIELD_LOCK_TABLES_PRIV,162,6433
  MYSQL_DB_FIELD_CREATE_VIEW_PRIV,163,6468
  MYSQL_DB_FIELD_SHOW_VIEW_PRIV,164,6503
  MYSQL_DB_FIELD_CREATE_ROUTINE_PRIV,165,6536
  MYSQL_DB_FIELD_ALTER_ROUTINE_PRIV,166,6574
  MYSQL_DB_FIELD_EXECUTE_PRIV,167,6611
  MYSQL_DB_FIELD_EVENT_PRIV,168,6642
  MYSQL_DB_FIELD_TRIGGER_PRIV,169,6671
  MYSQL_DB_FIELD_COUNT170,6702
#define check_grant(242,10449
#define check_grant_db(243,10484
enum ACL_internal_access_result259,10988
  ACL_INTERNAL_ACCESS_GRANTED,267,11216
  ACL_INTERNAL_ACCESS_DENIED,269,11300
  ACL_INTERNAL_ACCESS_CHECK_GRANT271,11378
class ACL_internal_table_access280,11598
  ACL_internal_table_access(ACL_internal_table_access::ACL_internal_table_access283,11640
  virtual ~ACL_internal_table_access(ACL_internal_table_access::~ACL_internal_table_access286,11676
class ACL_internal_schema_access319,12891
  ACL_internal_schema_access(ACL_internal_schema_access::ACL_internal_schema_access322,12934
  virtual ~ACL_internal_schema_access(ACL_internal_schema_access::~ACL_internal_schema_access325,12971
class ACL_internal_schema_registry358,14172

sql/sql_admin.h,904
#define SQL_TABLE_MAINTENANCE_H17,777
#define SQL_ADMIN_MSG_TEXT_SIZE 20,890
class Analyze_table_statement 31,1297
  Analyze_table_statement(Analyze_table_statement::Analyze_table_statement38,1486
  ~Analyze_table_statement(Analyze_table_statement::~Analyze_table_statement42,1553
class Check_table_statement 58,1815
  Check_table_statement(Check_table_statement::Check_table_statement65,2000
  ~Check_table_statement(Check_table_statement::~Check_table_statement69,2065
class Optimize_table_statement 85,2329
  Optimize_table_statement(Optimize_table_statement::Optimize_table_statement92,2520
  ~Optimize_table_statement(Optimize_table_statement::~Optimize_table_statement96,2588
class Repair_table_statement 112,2854
  Repair_table_statement(Repair_table_statement::Repair_table_statement119,3041
  ~Repair_table_statement(Repair_table_statement::~Repair_table_statement123,3107

sql/sql_alter.h,845
#define SQL_ALTER_TABLE_H17,765
class Alter_table_common 24,960
  Alter_table_common(Alter_table_common::Alter_table_common31,1102
  virtual ~Alter_table_common(Alter_table_common::~Alter_table_common35,1164
class Alter_table_statement 44,1358
  Alter_table_statement(Alter_table_statement::Alter_table_statement51,1548
  ~Alter_table_statement(Alter_table_statement::~Alter_table_statement55,1618
class Alter_table_ctx67,1845
  bool is_database_changed(Alter_table_ctx::is_database_changed78,2122
  bool is_table_renamed(Alter_table_ctx::is_table_renamed84,2259
  const char *get_new_filename(Alter_table_ctx::get_new_filename90,2426
  const char *get_path(Alter_table_ctx::get_path99,2580
  const char *get_new_path(Alter_table_ctx::get_new_path108,2713
  const char *get_tmp_path(Alter_table_ctx::get_tmp_path117,2887

sql/sql_analyse.h,2317
#define SQL_ANALYSE_INCLUDED2,29
#define my_thd_charset	28,982
#define DEC_IN_AVG 30,1027
typedef struct st_number_info32,1049
} NUM_INFO;40,1283
typedef struct st_extreme_value_number_info42,1296
} EV_NUM_INFO;47,1413
typedef struct st_tree_info49,1429
} TREE_INFO;54,1504
class field_info 74,2426
  field_info(field_info::field_info85,2641
  virtual ~field_info(field_info::~field_info89,2811
  virtual uint decimals(field_info::decimals97,3165
class field_str 108,3409
  field_str(field_str::field_str118,3644
  String *get_min_arg(field_str::get_min_arg128,4038
  String *get_max_arg(field_str::get_max_arg130,4125
  String *avg(field_str::avg132,4212
  tree_walk_action collect_enum(field_str::collect_enum143,4559
  String *std(field_str::std145,4641
class field_decimal 154,4862
  field_decimal(field_decimal::field_decimal161,5006
  tree_walk_action collect_enum(field_decimal::collect_enum175,5521
class field_real:field_real183,5723
  field_real(field_real::field_real190,5849
  String *get_min_arg(field_real::get_min_arg197,6124
  String *get_max_arg(field_real::get_max_arg202,6237
  String *avg(field_real::avg207,6350
  String *std(field_real::std215,6587
  uint	 decimals(field_real::decimals228,6962
  tree_walk_action collect_enum(field_real::collect_enum231,7095
class field_longlong:field_longlong238,7265
  field_longlong(field_longlong::field_longlong244,7370
  String *get_min_arg(field_longlong::get_min_arg251,7629
  String *get_max_arg(field_longlong::get_max_arg252,7708
  String *avg(field_longlong::avg253,7787
  String *std(field_longlong::std261,8021
  tree_walk_action collect_enum(field_longlong::collect_enum276,8488
class field_ulonglong:field_ulonglong283,8665
  field_ulonglong(field_ulonglong::field_ulonglong289,8773
  String *get_min_arg(field_ulonglong::get_min_arg295,9033
  String *get_max_arg(field_ulonglong::get_max_arg296,9112
  String *avg(field_ulonglong::avg297,9191
  String *std(field_ulonglong::std306,9447
  tree_walk_action collect_enum(field_ulonglong::collect_enum322,9962
class analyse:analyse331,10170
  analyse(analyse::analyse343,10422
  ~analyse(analyse::~analyse346,10532
  virtual void add(analyse::add354,10646
  virtual void end_group(analyse::end_group357,10770

sql/sql_array.h,506
#define SQL_ARRAY_INCLUDED2,27
template <class Elem> class Dynamic_array26,897
  Dynamic_array(Dynamic_array::Dynamic_array30,973
  Elem& at(Dynamic_array::at35,1105
  Elem *front(Dynamic_array::front40,1177
  Elem *back(Dynamic_array::back45,1234
  bool append(Dynamic_array::append50,1309
  int elements(Dynamic_array::elements55,1392
  ~Dynamic_array(Dynamic_array::~Dynamic_array60,1445
  typedef int (*CMP_FUNC)Dynamic_array::CMP_FUNC65,1501
  void sort(Dynamic_array::sort67,1563

sql/sql_audit.h,395
#define SQL_AUDIT_INCLUDED2,27
#define mysql_audit_notify(41,1313
#define MAX_USER_HOST_SIZE 45,1396
static inline uint make_user_name(46,1427
void mysql_audit_general_log(71,2339
void mysql_audit_general(124,4218
#define MYSQL_AUDIT_NOTIFY_CONNECTION_CONNECT(174,5929
#define MYSQL_AUDIT_NOTIFY_CONNECTION_DISCONNECT(189,6738
#define MYSQL_AUDIT_NOTIFY_CONNECTION_CHANGE_USER(194,6981

sql/sql_base.h,4349
#define SQL_BASE_INCLUDED17,772
typedef class st_select_lex SELECT_LEX;34,1266
typedef struct st_lock_param_type ALTER_PARTITION_PARAM_TYPE;36,1307
enum enum_resolution_type 50,2012
  NOT_RESOLVED=enum_resolution_type::NOT_RESOLVED51,2040
  RESOLVED_IGNORING_ALIAS,enum_resolution_type::RESOLVED_IGNORING_ALIAS52,2058
  RESOLVED_BEHIND_ALIAS,enum_resolution_type::RESOLVED_BEHIND_ALIAS53,2085
  RESOLVED_WITH_NO_ALIAS,enum_resolution_type::RESOLVED_WITH_NO_ALIAS54,2110
  RESOLVED_AGAINST_ALIASenum_resolution_type::RESOLVED_AGAINST_ALIAS55,2136
enum find_item_error_report_type 58,2165
enum find_item_error_report_type {REPORT_ALL_ERRORS,find_item_error_report_type::REPORT_ALL_ERRORS58,2165
enum find_item_error_report_type {REPORT_ALL_ERRORS, REPORT_EXCEPT_NOT_FOUND,find_item_error_report_type::REPORT_EXCEPT_NOT_FOUND58,2165
				  IGNORE_ERRORS,find_item_error_report_type::IGNORE_ERRORS59,2243
				  IGNORE_ERRORS, REPORT_EXCEPT_NON_UNIQUE,find_item_error_report_type::REPORT_EXCEPT_NON_UNIQUE59,2243
                                  IGNORE_EXCEPT_NON_UNIQUE}find_item_error_report_type::IGNORE_EXCEPT_NON_UNIQUE60,2290
enum enum_tdc_remove_table_type 62,2352
enum enum_tdc_remove_table_type {TDC_RT_REMOVE_ALL,enum_tdc_remove_table_type::TDC_RT_REMOVE_ALL62,2352
enum enum_tdc_remove_table_type {TDC_RT_REMOVE_ALL, TDC_RT_REMOVE_NOT_OWN,enum_tdc_remove_table_type::TDC_RT_REMOVE_NOT_OWN62,2352
                                 TDC_RT_REMOVE_UNUSED}enum_tdc_remove_table_type::TDC_RT_REMOVE_UNUSED63,2427
#define RTFC_NO_FLAG 66,2542
#define RTFC_OWNED_BY_THD_FLAG 67,2585
#define RTFC_WAIT_OTHER_THREAD_FLAG 68,2628
#define RTFC_CHECK_KILLED_FLAG 69,2671
create_table_def_key(98,3529
#define MYSQL_OPEN_IGNORE_GLOBAL_READ_LOCK 119,4387
#define MYSQL_OPEN_IGNORE_FLUSH 120,4442
#define MYSQL_OPEN_TEMPORARY_ONLY 121,4497
#define MYSQL_LOCK_IGNORE_GLOBAL_READ_ONLY 122,4552
#define MYSQL_LOCK_LOG_TABLE 123,4607
#define MYSQL_OPEN_HAS_MDL_LOCK 128,4746
#define MYSQL_OPEN_GET_NEW_TABLE 133,4900
#define MYSQL_OPEN_SKIP_TEMPORARY 135,5019
#define MYSQL_OPEN_FAIL_ON_MDL_CONFLICT 137,5150
#define MYSQL_OPEN_FORCE_SHARED_MDL 139,5282
#define MYSQL_OPEN_FORCE_SHARED_HIGH_PRIO_MDL 144,5428
#define MYSQL_LOCK_IGNORE_TIMEOUT 149,5622
#define MYSQL_OPEN_SKIP_SCOPED_MDL_LOCK 154,5812
#define MYSQL_OPEN_REOPEN 157,5913
inline void setup_table_map(340,15649
inline TABLE_LIST *find_table_in_global_list(find_table_in_global_list361,16323
inline TABLE_LIST *find_table_in_local_list(find_table_in_local_list369,16638
inline bool setup_fields_with_no_wrap(378,16950
class Prelocking_strategy398,17703
  virtual ~Prelocking_strategy(Prelocking_strategy::~Prelocking_strategy401,17739
class DML_prelocking_strategy 421,18509
class Lock_tables_prelocking_strategy 439,19162
class Alter_table_prelocking_strategy 454,19608
  Alter_table_prelocking_strategy(Alter_table_prelocking_strategy::Alter_table_prelocking_strategy458,19686
open_tables(476,20329
inline TABLE *open_n_lock_single_table(open_n_lock_single_table484,20526
inline bool open_and_lock_tables(495,20898
class Open_table_context510,21305
  enum enum_open_table_actionOpen_table_context::enum_open_table_action513,21340
    OT_NO_ACTION=Open_table_context::enum_open_table_action::OT_NO_ACTION515,21374
    OT_BACKOFF_AND_RETRY,Open_table_context::enum_open_table_action::OT_BACKOFF_AND_RETRY516,21395
    OT_REOPEN_TABLES,Open_table_context::enum_open_table_action::OT_REOPEN_TABLES517,21421
    OT_DISCOVER,Open_table_context::enum_open_table_action::OT_DISCOVER518,21443
    OT_REPAIROpen_table_context::enum_open_table_action::OT_REPAIR519,21460
  bool can_recover_from_failed_open(Open_table_context::can_recover_from_failed_open527,21675
  const MDL_savepoint &start_of_statement_svp(Open_table_context::start_of_statement_svp536,21978
  inline ulong get_timeout(Open_table_context::get_timeout541,22078
  uint get_flags(Open_table_context::get_flags546,22144
  void set_has_protection_against_grl(Open_table_context::set_has_protection_against_grl552,22333
  bool has_protection_against_grl(Open_table_context::has_protection_against_grl557,22422
class No_such_table_error_handler 599,23559
  No_such_table_error_handler(No_such_table_error_handler::No_such_table_error_handler602,23635

sql/sql_binlog.h,35
#define SQL_BINLOG_INCLUDED17,774

sql/sql_bitmap.h,2397
#define SQL_BITMAP_INCLUDED23,953
template <uint default_width> class Bitmap28,1026
  Bitmap(Bitmap::Bitmap33,1136
  Bitmap(Bitmap::Bitmap34,1159
  explicit Bitmap(Bitmap::Bitmap35,1204
  void init(Bitmap::init36,1267
  void init(Bitmap::init37,1330
  uint length(Bitmap::length38,1401
  Bitmap& operator=(Bitmap::operator=39,1449
  void set_bit(Bitmap::set_bit45,1576
  void clear_bit(Bitmap::clear_bit46,1628
  void set_prefix(Bitmap::set_prefix47,1684
  void set_all(Bitmap::set_all48,1742
  void clear_all(Bitmap::clear_all49,1785
  void intersect(Bitmap::intersect50,1832
  void intersect(Bitmap::intersect51,1902
  void intersect_extended(Bitmap::intersect_extended58,2135
  void subtract(Bitmap::subtract65,2387
  void merge(Bitmap::merge66,2455
  my_bool is_set(Bitmap::is_set67,2517
  my_bool is_prefix(Bitmap::is_prefix68,2583
  my_bool is_clear_all(Bitmap::is_clear_all69,2655
  my_bool is_set_all(Bitmap::is_set_all70,2724
  my_bool is_subset(Bitmap::is_subset71,2789
  my_bool is_overlapping(Bitmap::is_overlapping72,2881
  my_bool operator==(Bitmap::operator==73,2983
  my_bool operator!=(Bitmap::operator!=74,3070
  char *print(Bitmap::print75,3146
  ulonglong to_ulonglong(Bitmap::to_ulonglong92,3516
template <> class Bitmap<Bitmap101,3702
  Bitmap<Bitmap::Bitmap105,3758
  explicit Bitmap<Bitmap::Bitmap106,3777
  void init(Bitmap::init107,3850
  void init(Bitmap::init108,3868
  uint length(Bitmap::length109,3931
  void set_bit(Bitmap::set_bit110,3968
  void clear_bit(Bitmap::clear_bit111,4022
  void set_prefix(Bitmap::set_prefix112,4081
  void set_all(Bitmap::set_all119,4200
  void clear_all(Bitmap::clear_all120,4240
  void intersect(Bitmap::intersect121,4281
  void intersect(Bitmap::intersect122,4336
  void intersect_extended(Bitmap::intersect_extended123,4385
  void subtract(Bitmap::subtract124,4443
  void merge(Bitmap::merge125,4498
  my_bool is_set(Bitmap::is_set126,4549
  my_bool is_prefix(Bitmap::is_prefix127,4626
  my_bool is_clear_all(Bitmap::is_clear_all128,4703
  my_bool is_set_all(Bitmap::is_set_all129,4766
  my_bool is_subset(Bitmap::is_subset130,4828
  my_bool is_overlapping(Bitmap::is_overlapping131,4909
  my_bool operator==(Bitmap::operator==132,4997
  char *print(Bitmap::print133,5076
  ulonglong to_ulonglong(Bitmap::to_ulonglong134,5149

sql/sql_cache.h,6254
#define _SQL_CACHE_H17,766
typedef struct st_changed_table_list CHANGED_TABLE_LIST;27,948
#define QUERY_CACHE_MIN_ALLOCATION_UNIT	37,1245
#define QUERY_CACHE_DEF_QUERY_HASH_SIZE	40,1321
#define QUERY_CACHE_DEF_TABLE_HASH_SIZE	41,1367
#define QUERY_CACHE_MIN_RESULT_DATA_SIZE	44,1465
#define QUERY_CACHE_MIN_ESTIMATED_QUERIES_NUMBER 50,1613
#define QUERY_CACHE_MEM_BIN_FIRST_STEP_PWR2	55,1746
#define QUERY_CACHE_MEM_BIN_STEP_PWR2	56,1792
#define QUERY_CACHE_MEM_BIN_PARTS_INC	57,1833
#define QUERY_CACHE_MEM_BIN_PARTS_MUL	58,1874
#define QUERY_CACHE_MEM_BIN_SPC_LIM_PWR2	59,1917
#define QUERY_CACHE_MEM_BIN_TRY 63,2066
#define QUERY_CACHE_PACK_ITERATION	66,2142
#define QUERY_CACHE_PACK_LIMIT	67,2180
#define TABLE_COUNTER_TYPE 69,2226
typedef my_bool (*qc_engine_callback)qc_engine_callback81,2463
struct Query_cache_block_table92,2874
  Query_cache_block_table(Query_cache_block_table::Query_cache_block_table94,2907
struct Query_cache_block123,3663
  Query_cache_block(Query_cache_block::Query_cache_block125,3690
  enum block_type Query_cache_block::block_type126,3761
  enum block_type {FREE,Query_cache_block::block_type::FREE126,3761
  enum block_type {FREE, QUERY,Query_cache_block::block_type::QUERY126,3761
  enum block_type {FREE, QUERY, RESULT,Query_cache_block::block_type::RESULT126,3761
  enum block_type {FREE, QUERY, RESULT, RES_CONT,Query_cache_block::block_type::RES_CONT126,3761
  enum block_type {FREE, QUERY, RESULT, RES_CONT, RES_BEG,Query_cache_block::block_type::RES_BEG126,3761
		   RES_INCOMPLETE,Query_cache_block::block_type::RES_INCOMPLETE127,3820
		   RES_INCOMPLETE, TABLE,Query_cache_block::block_type::TABLE127,3820
		   RES_INCOMPLETE, TABLE, INCOMPLETE}Query_cache_block::block_type::INCOMPLETE127,3820
  inline my_bool is_free(Query_cache_block::is_free141,4327
struct Query_cache_query152,4665
  Query_cache_query(Query_cache_query::Query_cache_query162,4856
  inline ulonglong found_rows(Query_cache_query::found_rows165,4983
  inline void found_rows(Query_cache_query::found_rows166,5048
  inline Query_cache_block *result(Query_cache_query::result167,5119
  inline void result(Query_cache_query::result168,5175
  inline Query_cache_tls *writer(Query_cache_query::writer169,5230
  inline void writer(Query_cache_query::writer170,5284
  inline uint8 tables_type(Query_cache_query::tables_type171,5339
  inline void tables_type(Query_cache_query::tables_type172,5404
  inline ulong length(Query_cache_query::length173,5468
  inline ulong add(Query_cache_query::add174,5513
  inline void length(Query_cache_query::length175,5583
  inline uchar* query(Query_cache_query::query176,5646
struct Query_cache_table188,5878
  Query_cache_table(Query_cache_table::Query_cache_table190,5905
  inline char *db(Query_cache_table::db204,6263
  inline char *table(Query_cache_table::table205,6318
  inline void table(Query_cache_table::table206,6364
  inline uint32 key_length(Query_cache_table::key_length207,6426
  inline void key_length(Query_cache_table::key_length208,6491
  inline uint8 type(Query_cache_table::type209,6554
  inline void type(Query_cache_table::type210,6622
  inline qc_engine_callback callback(Query_cache_table::callback211,6686
  inline void callback(Query_cache_table::callback212,6757
  inline ulonglong engine_data(Query_cache_table::engine_data213,6825
  inline void engine_data(Query_cache_table::engine_data214,6899
  inline uchar* data(Query_cache_table::data215,6976
struct Query_cache_result222,7091
  Query_cache_result(Query_cache_result::Query_cache_result224,7119
  inline uchar* data(Query_cache_result::data227,7219
  inline Query_cache_block *parent(Query_cache_result::parent233,7400
  inline void parent Query_cache_result::parent234,7458
struct Query_cache_memory_bin248,7872
  Query_cache_memory_bin(Query_cache_memory_bin::Query_cache_memory_bin250,7904
  inline void init(Query_cache_memory_bin::init257,8063
struct Query_cache_memory_bin_step267,8192
  Query_cache_memory_bin_step(Query_cache_memory_bin_step::Query_cache_memory_bin_step269,8229
  inline void init(Query_cache_memory_bin_step::init273,8345
class Query_cache281,8498
  enum Cache_lock_status Query_cache::Cache_lock_status296,8835
  enum Cache_lock_status { UNLOCKED,Query_cache::Cache_lock_status::UNLOCKED296,8835
  enum Cache_lock_status { UNLOCKED, LOCKED_NO_WAIT,Query_cache::Cache_lock_status::LOCKED_NO_WAIT296,8835
  enum Cache_lock_status { UNLOCKED, LOCKED_NO_WAIT, LOCKED Query_cache::Cache_lock_status::LOCKED296,8835
  void disable_query_cache(Query_cache::disable_query_cache303,9104
  bool is_disabled(Query_cache::is_disabled447,15168
  inline void result_size_limit(Query_cache::result_size_limit454,15420
struct Query_cache_query_flags521,17676
#define QUERY_CACHE_FLAGS_SIZE 542,18237
#define query_cache_abort(544,18323
#define query_cache_end_of_result(545,18373
#define query_cache_store_query(546,18439
#define query_cache_destroy(547,18507
#define query_cache_result_size_limit(548,18559
#define query_cache_init(549,18633
#define query_cache_resize(550,18679
#define query_cache_set_min_res_unit(551,18731
#define query_cache_invalidate3(552,18803
#define query_cache_invalidate1(553,18876
#define query_cache_send_result_to_client(554,18937
#define query_cache_invalidate_by_MyISAM_filename_ref 556,19035
#define query_cache_maybe_disabled(559,19186
#define query_cache_is_cacheable_query(561,19334
#define QUERY_CACHE_FLAGS_SIZE 564,19452
#define query_cache_store_query(565,19485
#define query_cache_destroy(566,19523
#define query_cache_result_size_limit(567,19553
#define query_cache_init(568,19594
#define query_cache_resize(569,19621
#define query_cache_set_min_res_unit(570,19651
#define query_cache_invalidate3(571,19691
#define query_cache_invalidate1(572,19732
#define query_cache_send_result_to_client(573,19767
#define query_cache_invalidate_by_MyISAM_filename_ref 574,19820
#define query_cache_abort(576,19880
#define query_cache_end_of_result(577,19909
#define query_cache_invalidate_by_MyISAM_filename_ref 578,19946
#define query_cache_maybe_disabled(579,20005
#define query_cache_is_cacheable_query(580,20045

sql/sql_callback.h,106
#define SQL_CALLBACK_INCLUDED19,761
#define MYSQL_CALLBACK(33,1166
#define MYSQL_CALLBACK_ELSE(39,1389

sql/sql_class.h,26151
#define SQL_CLASS_INCLUDED18,778
enum enum_enable_or_disable 58,1915
enum enum_enable_or_disable { LEAVE_AS_IS,enum_enable_or_disable::LEAVE_AS_IS58,1915
enum enum_enable_or_disable { LEAVE_AS_IS, ENABLE,enum_enable_or_disable::ENABLE58,1915
enum enum_enable_or_disable { LEAVE_AS_IS, ENABLE, DISABLE enum_enable_or_disable::DISABLE58,1915
enum enum_ha_read_modes 59,1977
enum enum_ha_read_modes { RFIRST,enum_ha_read_modes::RFIRST59,1977
enum enum_ha_read_modes { RFIRST, RNEXT,enum_ha_read_modes::RNEXT59,1977
enum enum_ha_read_modes { RFIRST, RNEXT, RPREV,enum_ha_read_modes::RPREV59,1977
enum enum_ha_read_modes { RFIRST, RNEXT, RPREV, RLAST,enum_ha_read_modes::RLAST59,1977
enum enum_ha_read_modes { RFIRST, RNEXT, RPREV, RLAST, RKEY,enum_ha_read_modes::RKEY59,1977
enum enum_ha_read_modes { RFIRST, RNEXT, RPREV, RLAST, RKEY, RNEXT_SAME enum_ha_read_modes::RNEXT_SAME59,1977
enum enum_duplicates 60,2052
enum enum_duplicates { DUP_ERROR,enum_duplicates::DUP_ERROR60,2052
enum enum_duplicates { DUP_ERROR, DUP_REPLACE,enum_duplicates::DUP_REPLACE60,2052
enum enum_duplicates { DUP_ERROR, DUP_REPLACE, DUP_UPDATE enum_duplicates::DUP_UPDATE60,2052
enum enum_delay_key_write 61,2113
enum enum_delay_key_write { DELAY_KEY_WRITE_NONE,enum_delay_key_write::DELAY_KEY_WRITE_NONE61,2113
enum enum_delay_key_write { DELAY_KEY_WRITE_NONE, DELAY_KEY_WRITE_ON,enum_delay_key_write::DELAY_KEY_WRITE_ON61,2113
			    DELAY_KEY_WRITE_ALL enum_delay_key_write::DELAY_KEY_WRITE_ALL62,2183
enum enum_slave_exec_mode 63,2213
enum enum_slave_exec_mode { SLAVE_EXEC_MODE_STRICT,enum_slave_exec_mode::SLAVE_EXEC_MODE_STRICT63,2213
                            SLAVE_EXEC_MODE_IDEMPOTENT,enum_slave_exec_mode::SLAVE_EXEC_MODE_IDEMPOTENT64,2265
                            SLAVE_EXEC_MODE_LAST_BIT}enum_slave_exec_mode::SLAVE_EXEC_MODE_LAST_BIT65,2321
enum enum_slave_type_conversions 66,2376
enum enum_slave_type_conversions { SLAVE_TYPE_CONVERSIONS_ALL_LOSSY,enum_slave_type_conversions::SLAVE_TYPE_CONVERSIONS_ALL_LOSSY66,2376
                                   SLAVE_TYPE_CONVERSIONS_ALL_NON_LOSSY}enum_slave_type_conversions::SLAVE_TYPE_CONVERSIONS_ALL_NON_LOSSY67,2445
enum enum_mark_columns68,2519
{ MARK_COLUMNS_NONE,enum_mark_columns::MARK_COLUMNS_NONE69,2542
{ MARK_COLUMNS_NONE, MARK_COLUMNS_READ,enum_mark_columns::MARK_COLUMNS_READ69,2542
{ MARK_COLUMNS_NONE, MARK_COLUMNS_READ, MARK_COLUMNS_WRITE}enum_mark_columns::MARK_COLUMNS_WRITE69,2542
enum enum_filetype 70,2603
enum enum_filetype { FILETYPE_CSV,enum_filetype::FILETYPE_CSV70,2603
enum enum_filetype { FILETYPE_CSV, FILETYPE_XML enum_filetype::FILETYPE_XML70,2603
#define MODE_REAL_AS_FLOAT 73,2718
#define MODE_PIPES_AS_CONCAT 74,2760
#define MODE_ANSI_QUOTES 75,2802
#define MODE_IGNORE_SPACE 76,2844
#define MODE_NOT_USED 77,2886
#define MODE_ONLY_FULL_GROUP_BY 78,2929
#define MODE_NO_UNSIGNED_SUBTRACTION 79,2972
#define MODE_NO_DIR_IN_CREATE 80,3015
#define MODE_POSTGRESQL 81,3059
#define MODE_ORACLE 82,3103
#define MODE_MSSQL 83,3147
#define MODE_DB2 84,3192
#define MODE_MAXDB 85,3237
#define MODE_NO_KEY_OPTIONS 86,3282
#define MODE_NO_TABLE_OPTIONS 87,3327
#define MODE_NO_FIELD_OPTIONS 88,3373
#define MODE_MYSQL323 89,3419
#define MODE_MYSQL40 90,3466
#define MODE_ANSI 91,3524
#define MODE_NO_AUTO_VALUE_ON_ZERO 92,3581
#define MODE_NO_BACKSLASH_ESCAPES 93,3635
#define MODE_STRICT_TRANS_TABLES 94,3706
#define MODE_STRICT_ALL_TABLES 95,3776
#define MODE_NO_ZERO_IN_DATE 96,3845
#define MODE_NO_ZERO_DATE 97,3912
#define MODE_INVALID_DATES 98,3977
#define MODE_ERROR_FOR_DIVISION_BY_ZERO 99,4039
#define MODE_TRADITIONAL 100,4102
#define MODE_NO_AUTO_CREATE_USER 101,4178
#define MODE_HIGH_NOT_PRECEDENCE 102,4239
#define MODE_NO_ENGINE_SUBSTITUTION 103,4308
#define MODE_PAD_CHAR_TO_FULL_LENGTH 104,4377
class CSET_STRING119,4765
  CSET_STRING(CSET_STRING::CSET_STRING125,4843
  CSET_STRING(CSET_STRING::CSET_STRING130,4933
  inline char *str(CSET_STRING::str138,5116
  inline uint32 length(CSET_STRING::length139,5166
  CHARSET_INFO *charset(CSET_STRING::charset140,5223
#define TC_LOG_PAGE_SIZE 147,5374
#define TC_LOG_MIN_SIZE 148,5406
#define TC_HEURISTIC_RECOVER_COMMIT 150,5455
#define TC_HEURISTIC_RECOVER_ROLLBACK 151,5495
typedef struct st_user_var_events154,5571
} BINLOG_USER_VAR_EVENT;162,5737
typedef struct st_copy_info 176,6351
} COPY_INFO;191,6903
class Key_part_spec 194,6918
  Key_part_spec(Key_part_spec::Key_part_spec198,7006
  Key_part_spec(Key_part_spec::Key_part_spec201,7097
  Key_part_spec *clone(Key_part_spec::clone214,7620
class Alter_drop 219,7724
  enum drop_type Alter_drop::drop_type221,7769
  enum drop_type {KEY,Alter_drop::drop_type::KEY221,7769
  enum drop_type {KEY, COLUMN Alter_drop::drop_type::COLUMN221,7769
  Alter_drop(Alter_drop::Alter_drop224,7845
  Alter_drop *clone(Alter_drop::clone230,8058
class Alter_column 235,8158
  Alter_column(Alter_column::Alter_column239,8238
  Alter_column *clone(Alter_column::clone245,8441
class Key 250,8545
  enum Keytype Key::Keytype252,8583
  enum Keytype { PRIMARY,Key::Keytype::PRIMARY252,8583
  enum Keytype { PRIMARY, UNIQUE,Key::Keytype::UNIQUE252,8583
  enum Keytype { PRIMARY, UNIQUE, MULTIPLE,Key::Keytype::MULTIPLE252,8583
  enum Keytype { PRIMARY, UNIQUE, MULTIPLE, FULLTEXT,Key::Keytype::FULLTEXT252,8583
  enum Keytype { PRIMARY, UNIQUE, MULTIPLE, FULLTEXT, SPATIAL,Key::Keytype::SPATIAL252,8583
  enum Keytype { PRIMARY, UNIQUE, MULTIPLE, FULLTEXT, SPATIAL, FOREIGN_KEY,Key::Keytype::FOREIGN_KEY252,8583
  enum Keytype { PRIMARY, UNIQUE, MULTIPLE, FULLTEXT, SPATIAL, FOREIGN_KEY, CLUSTERING}Key::Keytype::CLUSTERING252,8583
  Key(Key::Key259,8797
  Key(Key::Key265,9062
  virtual ~Key(Key::~Key275,9435
  virtual Key *clone(Key::clone282,9672
class Foreign_key:Foreign_key288,9795
  enum fk_match_opt Foreign_key::fk_match_opt290,9835
  enum fk_match_opt { FK_MATCH_UNDEF,Foreign_key::fk_match_opt::FK_MATCH_UNDEF290,9835
  enum fk_match_opt { FK_MATCH_UNDEF, FK_MATCH_FULL,Foreign_key::fk_match_opt::FK_MATCH_FULL290,9835
		      FK_MATCH_PARTIAL,Foreign_key::fk_match_opt::FK_MATCH_PARTIAL291,9888
		      FK_MATCH_PARTIAL, FK_MATCH_SIMPLE}Foreign_key::fk_match_opt::FK_MATCH_SIMPLE291,9888
  enum fk_option Foreign_key::fk_option292,9932
  enum fk_option { FK_OPTION_UNDEF,Foreign_key::fk_option::FK_OPTION_UNDEF292,9932
  enum fk_option { FK_OPTION_UNDEF, FK_OPTION_RESTRICT,Foreign_key::fk_option::FK_OPTION_RESTRICT292,9932
  enum fk_option { FK_OPTION_UNDEF, FK_OPTION_RESTRICT, FK_OPTION_CASCADE,Foreign_key::fk_option::FK_OPTION_CASCADE292,9932
		   FK_OPTION_SET_NULL,Foreign_key::fk_option::FK_OPTION_SET_NULL293,10007
		   FK_OPTION_SET_NULL, FK_OPTION_NO_ACTION,Foreign_key::fk_option::FK_OPTION_NO_ACTION293,10007
		   FK_OPTION_SET_NULL, FK_OPTION_NO_ACTION, FK_OPTION_DEFAULT}Foreign_key::fk_option::FK_OPTION_DEFAULT293,10007
  Foreign_key(Foreign_key::Foreign_key298,10177
  virtual Key *clone(Foreign_key::clone311,10756
typedef struct st_mysql_lock315,10865
} MYSQL_LOCK;320,10969
class LEX_COLUMN 323,10985
  LEX_COLUMN LEX_COLUMN::LEX_COLUMN328,11063
struct Query_cache_tls339,11245
  void set_first_query_block(Query_cache_tls::set_first_query_block346,11438
  Query_cache_tls(Query_cache_tls::Query_cache_tls351,11564
typedef enum enum_diag_condition_item_name360,11763
  DIAG_CLASS_ORIGIN=enum_diag_condition_item_name::DIAG_CLASS_ORIGIN367,11919
  FIRST_DIAG_SET_PROPERTY=enum_diag_condition_item_name::FIRST_DIAG_SET_PROPERTY368,11943
  FIRST_DIAG_SET_PROPERTY= DIAG_CLASS_ORIGIN,enum_diag_condition_item_name::DIAG_CLASS_ORIGIN368,11943
  DIAG_SUBCLASS_ORIGIN=enum_diag_condition_item_name::DIAG_SUBCLASS_ORIGIN369,11989
  DIAG_CONSTRAINT_CATALOG=enum_diag_condition_item_name::DIAG_CONSTRAINT_CATALOG370,12016
  DIAG_CONSTRAINT_SCHEMA=enum_diag_condition_item_name::DIAG_CONSTRAINT_SCHEMA371,12046
  DIAG_CONSTRAINT_NAME=enum_diag_condition_item_name::DIAG_CONSTRAINT_NAME372,12075
  DIAG_CATALOG_NAME=enum_diag_condition_item_name::DIAG_CATALOG_NAME373,12102
  DIAG_SCHEMA_NAME=enum_diag_condition_item_name::DIAG_SCHEMA_NAME374,12126
  DIAG_TABLE_NAME=enum_diag_condition_item_name::DIAG_TABLE_NAME375,12149
  DIAG_COLUMN_NAME=enum_diag_condition_item_name::DIAG_COLUMN_NAME376,12171
  DIAG_CURSOR_NAME=enum_diag_condition_item_name::DIAG_CURSOR_NAME377,12194
  DIAG_MESSAGE_TEXT=enum_diag_condition_item_name::DIAG_MESSAGE_TEXT378,12217
  DIAG_MYSQL_ERRNO=enum_diag_condition_item_name::DIAG_MYSQL_ERRNO379,12242
  LAST_DIAG_SET_PROPERTY=enum_diag_condition_item_name::LAST_DIAG_SET_PROPERTY380,12266
  LAST_DIAG_SET_PROPERTY= DIAG_MYSQL_ERRNOenum_diag_condition_item_name::DIAG_MYSQL_ERRNO380,12266
} Diag_condition_item_name;381,12309
#define THD_SENTRY_MAGIC 396,12662
#define THD_SENTRY_GONE 397,12698
#define THD_CHECK_SENTRY(399,12735
typedef struct system_variables401,12816
} SV;512,16232
typedef struct system_status_var521,16382
} STATUS_VAR;588,18200
#define last_system_status_var 596,18376
#define INIT_ARENA_DBUG_INFO 607,18624
#define INIT_ARENA_DBUG_INFO609,18701
class Query_arena612,18738
  enum enum_stateQuery_arena::enum_state632,19434
    STMT_INITIALIZED=Query_arena::enum_state::STMT_INITIALIZED634,19456
    STMT_INITIALIZED= 0, STMT_INITIALIZED_FOR_SP=Query_arena::enum_state::STMT_INITIALIZED_FOR_SP634,19456
    STMT_INITIALIZED= 0, STMT_INITIALIZED_FOR_SP= 1, STMT_PREPARED=Query_arena::enum_state::STMT_PREPARED634,19456
    STMT_CONVENTIONAL_EXECUTION=Query_arena::enum_state::STMT_CONVENTIONAL_EXECUTION635,19527
    STMT_CONVENTIONAL_EXECUTION= 3, STMT_EXECUTED=Query_arena::enum_state::STMT_EXECUTED635,19527
    STMT_CONVENTIONAL_EXECUTION= 3, STMT_EXECUTED= 4, STMT_ERROR=Query_arena::enum_state::STMT_ERROR635,19527
  enum TypeQuery_arena::Type641,19685
    STATEMENT,Query_arena::Type::STATEMENT643,19701
    STATEMENT, PREPARED_STATEMENT,Query_arena::Type::PREPARED_STATEMENT643,19701
    STATEMENT, PREPARED_STATEMENT, STORED_PROCEDUREQuery_arena::Type::STORED_PROCEDURE643,19701
  Query_arena(Query_arena::Query_arena646,19759
  Query_arena(Query_arena::Query_arena653,20044
  virtual ~Query_arena(Query_arena::~Query_arena656,20116
  inline bool is_stmt_prepare(Query_arena::is_stmt_prepare658,20146
  inline bool is_stmt_prepare_or_first_sp_execute(Query_arena::is_stmt_prepare_or_first_sp_execute659,20222
  inline bool is_stmt_prepare_or_first_stmt_execute(Query_arena::is_stmt_prepare_or_first_stmt_execute661,20326
  inline bool is_conventional(Query_arena::is_conventional663,20433
  inline void* alloc(Query_arena::alloc666,20523
  inline void* calloc(Query_arena::calloc667,20595
  inline char *strdup(Query_arena::strdup674,20734
  inline char *strmake(Query_arena::strmake676,20813
  inline void *memdup(Query_arena::memdup678,20912
  inline void *memdup_w_gap(Query_arena::memdup_w_gap680,21009
class Statement:Statement714,22070
  inline char *query(Statement::query758,23906
  inline uint32 query_length(Statement::query_length759,23966
  CHARSET_INFO *query_charset(Statement::query_charset760,24037
  void set_query_inner(Statement::set_query_inner761,24110
  void set_query_inner(Statement::set_query_inner765,24202
  void reset_query_inner(Statement::reset_query_inner770,24391
  Statement(Statement::Statement793,25064
class Statement_map819,25948
  Statement *find_by_name(Statement_map::find_by_name826,26045
  Statement *find(Statement_map::find834,26257
struct st_savepoint 863,27114
enum xa_states 872,27363
enum xa_states {XA_NOTR=xa_states::XA_NOTR872,27363
enum xa_states {XA_NOTR=0, XA_ACTIVE,xa_states::XA_ACTIVE872,27363
enum xa_states {XA_NOTR=0, XA_ACTIVE, XA_IDLE,xa_states::XA_IDLE872,27363
enum xa_states {XA_NOTR=0, XA_ACTIVE, XA_IDLE, XA_PREPARED,xa_states::XA_PREPARED872,27363
enum xa_states {XA_NOTR=0, XA_ACTIVE, XA_IDLE, XA_PREPARED, XA_ROLLBACK_ONLY}xa_states::XA_ROLLBACK_ONLY872,27363
typedef struct st_xid_state 875,27480
} XID_STATE;882,27821
class Security_context 898,28244
  Security_context(Security_context::Security_context905,28333
  inline char *priv_host_name(Security_context::priv_host_name926,29122
typedef I_List<Item_change_record> Item_change_list;962,30123
enum enum_locked_tables_mode970,30284
  LTM_NONE=enum_locked_tables_mode::LTM_NONE972,30315
  LTM_LOCK_TABLES,enum_locked_tables_mode::LTM_LOCK_TABLES973,30330
  LTM_PRELOCKED,enum_locked_tables_mode::LTM_PRELOCKED974,30349
  LTM_PRELOCKED_UNDER_LOCK_TABLESenum_locked_tables_mode::LTM_PRELOCKED_UNDER_LOCK_TABLES975,30366
class Open_tables_state985,30607
  enum enum_flags Open_tables_state::enum_flags1070,34195
    BACKUPS_AVAIL Open_tables_state::enum_flags::BACKUPS_AVAIL1071,34215
    BACKUPS_AVAIL = (1U Open_tables_state::enum_flags::U1071,34215
  Open_tables_state(Open_tables_state::Open_tables_state1084,34648
  void set_open_tables_state(Open_tables_state::set_open_tables_state1086,34693
  void reset_open_tables_state(Open_tables_state::reset_open_tables_state1091,34776
class Open_tables_backup:Open_tables_backup1108,35139
#define SUB_STMT_TRIGGER 1128,35670
#define SUB_STMT_FUNCTION 1129,35697
class Sub_statement_state1132,35727
enum enum_thread_type1152,36337
  NON_SYSTEM_THREAD=enum_thread_type::NON_SYSTEM_THREAD1154,36361
  SYSTEM_THREAD_DELAYED_INSERT=enum_thread_type::SYSTEM_THREAD_DELAYED_INSERT1155,36385
  SYSTEM_THREAD_SLAVE_IO=enum_thread_type::SYSTEM_THREAD_SLAVE_IO1156,36420
  SYSTEM_THREAD_SLAVE_SQL=enum_thread_type::SYSTEM_THREAD_SLAVE_SQL1157,36449
  SYSTEM_THREAD_NDBCLUSTER_BINLOG=enum_thread_type::SYSTEM_THREAD_NDBCLUSTER_BINLOG1158,36479
  SYSTEM_THREAD_EVENT_SCHEDULER=enum_thread_type::SYSTEM_THREAD_EVENT_SCHEDULER1159,36517
  SYSTEM_THREAD_EVENT_WORKER=enum_thread_type::SYSTEM_THREAD_EVENT_WORKER1160,36554
show_system_thread(1164,36611
#define RETURN_NAME_AS_STRING(1166,36657
#undef RETURN_NAME_AS_STRING1180,37231
class Internal_error_handler1188,37423
  Internal_error_handler(Internal_error_handler::Internal_error_handler1191,37465
  virtual ~Internal_error_handler(Internal_error_handler::~Internal_error_handler1195,37534
class Dummy_error_handler 1240,39216
  bool handle_condition(Dummy_error_handler::handle_condition1243,39284
class Drop_table_error_handler 1263,39876
  Drop_table_error_handler(Drop_table_error_handler::Drop_table_error_handler1266,39949
class Locked_tables_list1305,41188
  Locked_tables_list(Locked_tables_list::Locked_tables_list1321,41674
  ~Locked_tables_list(Locked_tables_list::~Locked_tables_list1330,41938
  TABLE_LIST *locked_tables(Locked_tables_list::locked_tables1335,42036
struct Ha_data1349,42445
  Ha_data(Ha_data::Ha_data1372,43082
class Global_read_lock1380,43204
  enum enum_grl_stateGlobal_read_lock::enum_grl_state1383,43237
    GRL_NONE,Global_read_lock::enum_grl_state::GRL_NONE1385,43263
    GRL_ACQUIRED,Global_read_lock::enum_grl_state::GRL_ACQUIRED1386,43277
    GRL_ACQUIRED_AND_BLOCKS_COMMITGlobal_read_lock::enum_grl_state::GRL_ACQUIRED_AND_BLOCKS_COMMIT1387,43295
  Global_read_lock(Global_read_lock::Global_read_lock1390,43336
  bool can_acquire_protection(Global_read_lock::can_acquire_protection1402,43654
  bool is_acquired(Global_read_lock::is_acquired1412,43873
class THD 1439,44623
  inline bool is_stmt_prepare(THD::is_stmt_prepare1443,44699
  inline bool is_stmt_prepare_or_first_sp_execute(THD::is_stmt_prepare_or_first_sp_execute1446,44797
  inline bool is_stmt_prepare_or_first_stmt_execute(THD::is_stmt_prepare_or_first_stmt_execute1449,44935
  inline bool is_conventional(THD::is_conventional1452,45077
  void set_server_id(THD::set_server_id1631,51332
  inline int binlog_flush_pending_rows_event(THD::binlog_flush_pending_rows_event1645,51995
  int is_current_stmt_binlog_format_row(THD::is_current_stmt_binlog_format_row1661,52577
  uint get_binlog_table_maps(THD::get_binlog_table_maps1696,53724
  void clear_binlog_table_maps(THD::clear_binlog_table_maps1699,53797
  struct st_transactions THD::st_transactions1706,53898
    void cleanup(THD::st_transactions::cleanup1721,54538
    my_bool is_active(THD::st_transactions::is_active1735,54979
    st_transactions(THD::st_transactions::st_transactions1739,55051
  inline void record_first_successful_insert_id_in_cur_stmt(THD::record_first_successful_insert_id_in_cur_stmt1893,62381
  inline ulonglong read_first_successful_insert_id_in_prev_stmt(THD::read_first_successful_insert_id_in_prev_stmt1898,62574
  inline void force_one_auto_inc_interval(THD::force_one_auto_inc_interval1914,63171
  inline longlong get_row_count_func(THD::get_row_count_func1955,64669
  inline void set_row_count_func(THD::set_row_count_func1960,64752
  const USER_CONN* get_user_connect(THD::get_user_connect1990,65556
  enum killed_stateTHD::killed_state2068,68585
    NOT_KILLED=THD::killed_state::NOT_KILLED2070,68609
    KILL_BAD_DATA=THD::killed_state::KILL_BAD_DATA2071,68627
    KILL_CONNECTION=THD::killed_state::KILL_CONNECTION2072,68648
    KILL_CONNECTION=ER_SERVER_SHUTDOWN,THD::killed_state::ER_SERVER_SHUTDOWN2072,68648
    KILL_QUERY=THD::killed_state::KILL_QUERY2073,68688
    KILL_QUERY=ER_QUERY_INTERRUPTED,THD::killed_state::ER_QUERY_INTERRUPTED2073,68688
    KILLED_NO_VALUE THD::killed_state::KILLED_NO_VALUE2074,68725
  inline void set_active_vio(THD::set_active_vio2238,74514
  inline void clear_active_vio(THD::clear_active_vio2244,74661
  enum enum_binlog_query_type THD::enum_binlog_query_type2258,74983
    ROW_QUERY_TYPE,THD::enum_binlog_query_type::ROW_QUERY_TYPE2260,75087
    STMT_QUERY_TYPE,THD::enum_binlog_query_type::STMT_QUERY_TYPE2263,75170
    QUERY_TYPE_COUNTTHD::enum_binlog_query_type::QUERY_TYPE_COUNT2265,75196
  inline const char* enter_cond(THD::enter_cond2279,75649
  inline void exit_cond(THD::exit_cond2289,75969
  inline time_t query_start(THD::query_start2305,76530
  inline void set_time(THD::set_time2306,76603
  inline void	set_current_time(THD::set_current_time2316,76833
  inline void	set_time(THD::set_time2317,76902
  inline bool	is_valid_time(THD::is_valid_time2323,77102
  void set_time_after_lock(THD::set_time_after_lock2327,77198
  ulonglong current_utime(THD::current_utime2328,77267
  void update_server_status(THD::update_server_status2337,77591
  inline ulonglong found_rows(THD::found_rows2343,77800
  inline bool in_multi_stmt_transaction_mode(THD::in_multi_stmt_transaction_mode2370,78924
  inline bool in_active_multi_stmt_transaction(THD::in_active_multi_stmt_transaction2407,80296
  inline bool fill_derived_tables(THD::fill_derived_tables2411,80404
  inline bool fill_information_schema_tables(THD::fill_information_schema_tables2415,80522
  inline void* trans_alloc(THD::trans_alloc2419,80620
  inline void clear_error(THD::clear_error2446,81641
  inline bool vio_ok(THD::vio_ok2455,81848
  bool is_connected(THD::is_connected2457,81959
  inline bool vio_ok(THD::vio_ok2467,82244
  inline bool is_connected(THD::is_connected2468,82290
  inline void fatal_error(THD::fatal_error2475,82519
  inline bool is_error(THD::is_error2494,83092
  inline CHARSET_INFO *charset(THD::charset2495,83155
  inline Query_arena *activate_stmt_arena_if_needed(THD::activate_stmt_arena_if_needed2498,83257
  void change_item_tree(THD::change_item_tree2512,83687
  inline int killed_errno(THD::killed_errno2528,84262
  inline void send_kill_message(THD::send_kill_message2533,84437
  inline bool really_abort_on_warning(THD::really_abort_on_warning2544,84734
  inline void set_current_stmt_binlog_format_row_if_mixed(THD::set_current_stmt_binlog_format_row_if_mixed2562,85519
  inline void set_current_stmt_binlog_format_row(THD::set_current_stmt_binlog_format_row2588,86617
  inline void clear_current_stmt_binlog_format_row(THD::clear_current_stmt_binlog_format_row2594,86803
  inline void reset_current_stmt_binlog_format_row(THD::reset_current_stmt_binlog_format_row2600,86994
  bool set_db(THD::set_db2653,89238
  void reset_db(THD::reset_db2688,90430
  bool copy_db_to(THD::copy_db_to2698,90737
  inline Internal_error_handler *get_internal_handler(THD::get_internal_handler2712,91028
  void set_query(THD::set_query2813,94219
  void set_query(THD::set_query2818,94390
  void reset_query(THD::reset_query2823,94609
  void set_open_tables(THD::set_open_tables2828,94878
  void enter_locked_tables_mode(THD::enter_locked_tables_mode2835,95107
  void binlog_invoker(THD::binlog_invoker2856,95856
  bool need_binlog_invoker(THD::need_binlog_invoker2857,95908
  void set_invoker(THD::set_invoker2859,96005
  LEX_STRING get_invoker_user(THD::get_invoker_user2864,96130
  LEX_STRING get_invoker_host(THD::get_invoker_host2865,96187
  bool has_invoker(THD::has_invoker2866,96244
my_ok(2915,97928
my_eof(2926,98204
#define tmp_disable_binlog(2932,98294
#define reenable_binlog(2936,98457
class sql_exchange 2950,98917
class select_result 2971,99395
  virtual ~select_result(select_result::~select_result2977,99510
  virtual int prepare(select_result::prepare2978,99541
  virtual int prepare2(select_result::prepare22983,99636
  virtual uint field_count(select_result::field_count2989,99874
  virtual bool initialize_tables select_result::initialize_tables2993,100077
  virtual void abort_result_set(select_result::abort_result_set3004,100497
  void set_thd(select_result::set_thd3010,100670
  virtual void begin_dataset(select_result::begin_dataset3012,100741
  void begin_dataset(select_result::begin_dataset3014,100781
class select_result_interceptor:select_result_interceptor3025,101021
  select_result_interceptor(select_result_interceptor::select_result_interceptor3028,101085
  uint field_count(select_result_interceptor::field_count3029,101156
  bool send_result_set_metadata(select_result_interceptor::send_result_set_metadata3030,101215
class select_send 3034,101301
  select_send(select_send::select_send3042,101552
  virtual bool check_simple_select(select_send::check_simple_select3046,101720
class select_to_file 3052,101839
  select_to_file(select_to_file::select_to_file3061,102018
#define ESCAPE_CHARS 3070,102220
#define NUMERIC_CHARS 3076,102377
class select_export 3079,102418
  select_export(select_export::select_export3104,103383
class select_dump 3111,103555
  select_dump(select_dump::select_dump3113,103606
class select_insert 3119,103756
  virtual bool can_rollback_data(select_insert::can_rollback_data3136,104373
class select_create:select_create3145,104627
  select_create select_create::select_create3157,104938
  virtual bool can_rollback_data(select_create::can_rollback_data3176,105660
  const THD *get_thd(select_create::get_thd3179,105796
  const HA_CREATE_INFO *get_create_info(select_create::get_create_info3180,105839
  int prepare2(select_create::prepare23181,105906
class TMP_TABLE_PARAM 3192,106098
  TMP_TABLE_PARAM(TMP_TABLE_PARAM::TMP_TABLE_PARAM3252,108104
  ~TMP_TABLE_PARAM(TMP_TABLE_PARAM::~TMP_TABLE_PARAM3257,108300
  inline void cleanup(TMP_TABLE_PARAM::cleanup3262,108363
class select_union 3272,108533
  select_union(select_union::select_union3278,108648
class select_subselect 3290,109019
  bool send_eof(select_subselect::send_eof3297,109202
class select_singlerow_subselect 3301,109284
  select_singlerow_subselect(select_singlerow_subselect::select_singlerow_subselect3304,109352
class select_max_min_finder_subselect 3311,109532
  select_max_min_finder_subselect(select_max_min_finder_subselect::select_max_min_finder_subselect3317,109688
class select_exists_subselect 3329,109989
  select_exists_subselect(select_exists_subselect::select_exists_subselect3332,110054
typedef struct st_sort_field 3339,110214
} SORT_FIELD;3347,110595
typedef struct st_sort_buffer 3350,110611
} SORT_BUFFER;3356,110785
class Table_ident 3360,110845
  inline Table_ident(Table_ident::Table_ident3366,110952
  inline Table_ident(Table_ident::Table_ident3375,111208
  inline Table_ident(Table_ident::Table_ident3386,111579
  bool is_derived_table(Table_ident::is_derived_table3394,111868
  inline void change_db(Table_ident::change_db3395,111922
class user_var_entry3402,112066
  user_var_entry(user_var_entry::user_var_entry3405,112098
class Unique 3428,112895
  ulong elements_in_tree(Unique::elements_in_tree3444,113244
  inline bool unique_add(Unique::unique_add3445,113305
  inline static int get_cost_calc_buff_size(Unique::get_cost_calc_buff_size3459,113820
  uint get_size(Unique::get_size3470,114231
  ulonglong get_max_in_memory_size(Unique::get_max_in_memory_size3471,114272
class multi_delete 3478,114520
  inline ha_rows num_deleted(multi_delete::num_deleted3507,115457
class multi_update 3515,115556
  inline ha_rows num_found(multi_update::num_found3554,116966
  inline ha_rows num_updated(multi_update::num_updated3558,117021
class my_var 3565,117119
  my_var my_var::my_var3578,117409
  ~my_var(my_var::~my_var3581,117515
class select_dumpvar 3584,117534
  select_dumpvar(select_dumpvar::select_dumpvar3588,117645
  ~select_dumpvar(select_dumpvar::~select_dumpvar3589,117700
#define CF_CHANGES_DATA 3599,117931
#define CF_STATUS_COMMAND 3601,118038
#define CF_SHOW_TABLE_COMMAND 3602,118082
#define CF_WRITE_LOGS_COMMAND 3603,118126
#define CF_REEXECUTION_FRAGILE 3617,118775
#define CF_IMPLICT_COMMIT_BEGIN 3629,119162
#define CF_IMPLICIT_COMMIT_END 3640,119541
#define CF_AUTO_COMMIT_TRANS 3647,119838
#define CF_DIAGNOSTIC_STMT 3657,120093
#define CF_CAN_GENERATE_ROW_EVENTS 3663,120239
#define CF_SKIP_QUERY_ID 3672,120485
#define CF_SKIP_QUESTIONS 3680,120776
inline bool add_item_to_list(3690,121074
inline bool add_value_to_list(3695,121194
inline bool add_order_to_list(3700,121300
inline bool add_gorder_to_list(3705,121437
inline bool add_group_to_list(3710,121576
#define thd_proc_info(3727,122101

sql/sql_connect.h,123
#define SQL_CONNECT_INCLUDED17,775
typedef struct st_lex_user LEX_USER;23,959
typedef struct user_conn USER_CONN;24,996

sql/sql_const.h,4042
#define SQL_CONST_INCLUDED24,921
#define LIBLEN 26,949
#define MAX_DBKEY_LENGTH 28,1049
#define MAX_ALIAS_NAME 29,1095
#define MAX_FIELD_NAME 30,1122
#define MAX_SYS_VAR_LENGTH 31,1181
#define MAX_KEY 32,1211
#define MAX_REF_PARTS 33,1279
#define MAX_KEY_LENGTH 34,1334
#define MAX_REFLENGTH 36,1408
#define MAX_REFLENGTH 38,1473
#define MAX_HOSTNAME 40,1539
#define MAX_MBWIDTH	42,1593
#define MAX_FIELD_CHARLENGTH	43,1646
#define MAX_FIELD_VARCHARLENGTH	44,1679
#define MAX_FIELD_BLOBLENGTH 45,1717
#define CONVERT_IF_BIGGER_TO_BLOB 46,1795
#define MAX_FIELD_WIDTH	49,1894
#define MAX_BIT_FIELD_LENGTH 51,1957
#define MAX_DATE_WIDTH	53,2038
#define MAX_TIME_WIDTH	54,2082
#define MAX_DATETIME_FULL_WIDTH 55,2139
#define MAX_DATETIME_WIDTH	56,2210
#define MAX_DATETIME_COMPRESSED_WIDTH 57,2266
#define MAX_TABLES	59,2330
#define PARAM_TABLE_BIT	60,2398
#define OUTER_REF_TABLE_BIT	61,2467
#define RAND_TABLE_BIT	62,2540
#define PSEUDO_TABLE_BITS 63,2608
#define MAX_FIELDS	65,2720
#define MAX_PARTITIONS 66,2775
#define MAX_SELECT_NESTING 68,2805
#define MAX_SORT_MEMORY 70,2859
#define MIN_SORT_MEMORY 71,2893
#define portable_sizeof_char_ptr 75,2955
#define STRING_BUFFER_USUAL_SIZE 76,2990
#define MEM_ROOT_BLOCK_SIZE 79,3096
#define MEM_ROOT_PREALLOC 80,3135
#define TRANS_MEM_ROOT_BLOCK_SIZE 81,3174
#define TRANS_MEM_ROOT_PREALLOC 82,3213
#define DEFAULT_ERROR_COUNT	84,3253
#define EXTRA_RECORDS	85,3284
#define SCROLL_EXTRA	86,3339
#define FIELD_NAME_USED 87,3389
#define FORM_NAME_USED	88,3461
#define FIELD_NR_MASK	89,3531
#define FERR	90,3586
#define CREATE_MODE	91,3635
#define NAMES_SEP_CHAR	92,3691
#define READ_RECORD_BUFFER	94,3749
#define DISK_BUFFER_SIZE	95,3821
#define FRM_VER_TRUE_VARCHAR 97,3892
#define ACL_CACHE_SIZE	103,4126
#define MAX_PASSWORD_LENGTH	104,4154
#define HOST_CACHE_SIZE	105,4185
#define MAX_ACCEPT_RETRY	106,4214
#define MAX_FIELDS_BEFORE_HASH	107,4273
#define USER_VARS_HASH_SIZE 108,4307
#define TABLE_OPEN_CACHE_MIN 109,4342
#define TABLE_OPEN_CACHE_DEFAULT 110,4378
#define TABLE_DEF_CACHE_DEFAULT 111,4415
#define TABLE_DEF_CACHE_MIN 125,5150
#define STACK_MIN_SIZE 132,5320
#define STACK_MIN_SIZE_FOR_OPEN 134,5397
#define STACK_BUFF_ALLOC 135,5437
#define MYSQLD_NET_RETRY_COUNT 137,5538
#define QUERY_ALLOC_BLOCK_SIZE	140,5618
#define QUERY_ALLOC_PREALLOC_SIZE 141,5655
#define TRANS_ALLOC_BLOCK_SIZE	142,5697
#define TRANS_ALLOC_PREALLOC_SIZE	143,5734
#define RANGE_ALLOC_BLOCK_SIZE	144,5773
#define ACL_ALLOC_BLOCK_SIZE	145,5810
#define UDF_ALLOC_BLOCK_SIZE	146,5845
#define TABLE_ALLOC_BLOCK_SIZE	147,5880
#define WARN_ALLOC_BLOCK_SIZE	148,5917
#define WARN_ALLOC_PREALLOC_SIZE	149,5953
#define MIN_FILE_LENGTH_TO_USE_ROW_CACHE 155,6126
#define MIN_ROWS_TO_USE_TABLE_CACHE	156,6183
#define MIN_ROWS_TO_USE_BULK_INSERT	157,6224
#define TIME_FOR_COMPARE 164,6486
#define TIME_FOR_COMPARE_ROWID 170,6636
#define DISK_SEEK_BASE_COST 179,6913
#define BLOCKS_IN_AVG_SEEK 181,6956
#define DISK_SEEK_PROP_COST 183,6989
#define MATCHING_ROWS_IN_OTHER_TABLE 191,7221
#define MY_CHARSET_BIN_MB_MAXLEN 193,7262
#define KEY_DEFAULT_PACK_LENGTH 196,7375
#define PROCESS_LIST_WIDTH 199,7473
#define PROCESS_LIST_INFO_WIDTH 201,7579
#define PRECISION_FOR_DOUBLE 203,7618
#define PRECISION_FOR_FLOAT 204,7650
#define MAX_FLOAT_STR_LENGTH 207,7704
#define MAX_DOUBLE_STR_LENGTH 209,7769
#define CONNECT_TIMEOUT	215,7943
#define DEFAULT_CONCURRENCY	218,8034
#define DELAYED_LIMIT	219,8065
#define DELAYED_QUEUE_SIZE	220,8125
#define DELAYED_WAIT_TIMEOUT	221,8157
#define FLUSH_TIME	222,8224
#define MAX_CONNECT_ERRORS	223,8274
#define LONG_TIMEOUT 225,8340
#define MAX_TIME_ZONE_NAME_LENGTH 231,8505
#undef	FLUSH_TIME234,8582
#define FLUSH_TIME	235,8600
#define INTERRUPT_PRIOR 237,8657
#define CONNECT_PRIOR	238,8684
#define WAIT_PRIOR	239,8709
#define QUERY_PRIOR	240,8730
#define INTERRUPT_PRIOR 242,8758
#define CONNECT_PRIOR	243,8785
#define WAIT_PRIOR	244,8809
#define QUERY_PRIOR	245,8830

sql/sql_crypt.h,226
#define SQL_CRYPT_INCLUDED2,27
class SQL_CRYPT 27,1020
  SQL_CRYPT(SQL_CRYPT::SQL_CRYPT33,1157
  SQL_CRYPT(SQL_CRYPT::SQL_CRYPT34,1174
  ~SQL_CRYPT(SQL_CRYPT::~SQL_CRYPT38,1223
  void reinit(SQL_CRYPT::reinit40,1267

sql/sql_cursor.h,152
#define _sql_cursor_h_17,768
class Server_side_cursor:Server_side_cursor42,1392
  Server_side_cursor(Server_side_cursor::Server_side_cursor48,1544

sql/sql_db.h,232
#define SQL_DB_INCLUDED17,770
typedef struct charset_info_st CHARSET_INFO;22,866
typedef struct st_ha_create_information HA_CREATE_INFO;23,911
typedef struct st_mysql_lex_string LEX_STRING;24,967
#define MY_DB_OPT_FILE 48,2054

sql/sql_delete.h,67
#define SQL_DELETE_INCLUDED17,774
typedef class Item COND;25,909

sql/sql_derived.h,36
#define SQL_DERIVED_INCLUDED17,775

sql/sql_do.h,31
#define SQL_DO_INCLUDED17,770

sql/sql_error.h,3392
#define SQL_ERROR_H17,769
class Diagnostics_area33,1199
  enum enum_diagnostics_statusDiagnostics_area::enum_diagnostics_status36,1232
    DA_EMPTY=Diagnostics_area::enum_diagnostics_status::DA_EMPTY39,1323
    DA_OK,Diagnostics_area::enum_diagnostics_status::DA_OK41,1383
    DA_EOF,Diagnostics_area::enum_diagnostics_status::DA_EOF43,1438
    DA_ERROR,Diagnostics_area::enum_diagnostics_status::DA_ERROR45,1512
    DA_DISABLEDDiagnostics_area::enum_diagnostics_status::DA_DISABLED47,1606
  bool is_set(Diagnostics_area::is_set65,2180
  bool is_error(Diagnostics_area::is_error66,2235
  bool is_eof(Diagnostics_area::is_eof67,2292
  bool is_ok(Diagnostics_area::is_ok68,2345
  bool is_disabled(Diagnostics_area::is_disabled69,2396
  enum_diagnostics_status status(Diagnostics_area::status70,2459
  const char *message(Diagnostics_area::message72,2522
  uint sql_errno(Diagnostics_area::sql_errno75,2633
  const char* get_sqlstate(Diagnostics_area::get_sqlstate78,2720
  ulonglong affected_rows(Diagnostics_area::affected_rows81,2816
  ulonglong last_insert_id(Diagnostics_area::last_insert_id84,2913
  uint statement_warn_count(Diagnostics_area::statement_warn_count87,3012
  Diagnostics_area(Diagnostics_area::Diagnostics_area93,3150
class MYSQL_ERROR 143,4882
  enum enum_warning_levelMYSQL_ERROR::enum_warning_level152,5115
  { WARN_LEVEL_NOTE,MYSQL_ERROR::enum_warning_level::WARN_LEVEL_NOTE153,5141
  { WARN_LEVEL_NOTE, WARN_LEVEL_WARN,MYSQL_ERROR::enum_warning_level::WARN_LEVEL_WARN153,5141
  { WARN_LEVEL_NOTE, WARN_LEVEL_WARN, WARN_LEVEL_ERROR,MYSQL_ERROR::enum_warning_level::WARN_LEVEL_ERROR153,5141
  { WARN_LEVEL_NOTE, WARN_LEVEL_WARN, WARN_LEVEL_ERROR, WARN_LEVEL_END}MYSQL_ERROR::enum_warning_level::WARN_LEVEL_END153,5141
  const char* get_sqlstate(MYSQL_ERROR::get_sqlstate170,5575
  uint get_sql_errno(MYSQL_ERROR::get_sql_errno177,5746
  MYSQL_ERROR::enum_warning_level get_level(MYSQL_ERROR::get_level184,5900
  ~MYSQL_ERROR(MYSQL_ERROR::~MYSQL_ERROR229,7282
class Warning_info321,9597
  void opt_clear_warning_info(Warning_info::opt_clear_warning_info376,11492
  void append_warning_info(Warning_info::append_warning_info382,11618
  void append_warnings(Warning_info::append_warnings391,11833
  void reset_for_next_command(Warning_info::reset_for_next_command413,12493
  ulong warn_count(Warning_info::warn_count419,12677
  List<MYSQL_ERROR> &warn_list(Warning_info::warn_list434,13171
  ulong error_count(Warning_info::error_count440,13363
  ulonglong warn_id(Warning_info::warn_id446,13508
  bool is_empty(Warning_info::is_empty449,13623
  void inc_current_row_for_warning(Warning_info::inc_current_row_for_warning452,13755
  void reset_current_row_for_warning(Warning_info::reset_current_row_for_warning454,13900
  ulong current_row_for_warning(Warning_info::current_row_for_warning456,14016
  ulong statement_warn_count(Warning_info::statement_warn_count458,14095
  void set_read_only(Warning_info::set_read_only480,14954
  bool is_read_only(Warning_info::is_read_only487,15090
class ErrConvString500,15374
  ErrConvString(ErrConvString::ErrConvString505,15443
  ErrConvString(ErrConvString::ErrConvString511,15597
  ErrConvString(ErrConvString::ErrConvString517,15752
  ~ErrConvString(ErrConvString::~ErrConvString523,15915
  char *ptr(ErrConvString::ptr524,15939

sql/sql_handler.h,36
#define SQL_HANDLER_INCLUDED17,775

sql/sql_help.h,33
#define SQL_HELP_INCLUDED17,772

sql/sql_hset.h,597
#define SQL_HSET_INCLUDED2,26
template <typename T,26,888
class Hash_set27,929
  typedef T Value_type;Hash_set::Value_type30,954
  enum { START_SIZE=Hash_set::START_SIZE31,978
  Hash_set(Hash_set::Hash_set36,1147
  ~Hash_set(Hash_set::~Hash_set44,1306
  bool insert(Hash_set::insert57,1640
  bool is_empty(Hash_set::is_empty67,2025
  size_t size(Hash_set::size69,2129
  class IteratorHash_set::Iterator71,2262
    Iterator(Hash_set::Iterator::Iterator74,2293
    inline T *operator++(Hash_set::Iterator::operator++82,2487
    void rewind(Hash_set::Iterator::rewind88,2654

sql/sql_insert.h,160
#define SQL_INSERT_INCLUDED17,774
typedef List<Item> List_item;23,958
typedef struct st_copy_info COPY_INFO;24,988
inline void kill_delayed_threads(46,2161

sql/sql_lex.h,30944
#define SQL_LEX_INCLUDED22,829
struct sys_var_with_base102,2945
#define LEX_YYSTYPE 114,3166
#define LEX_YYSTYPE 120,3330
#define LEX_YYSTYPE 122,3366
enum enum_sql_command 137,3743
  SQLCOM_SELECT,enum_sql_command::SQLCOM_SELECT138,3767
  SQLCOM_SELECT, SQLCOM_CREATE_TABLE,enum_sql_command::SQLCOM_CREATE_TABLE138,3767
  SQLCOM_SELECT, SQLCOM_CREATE_TABLE, SQLCOM_CREATE_INDEX,enum_sql_command::SQLCOM_CREATE_INDEX138,3767
  SQLCOM_SELECT, SQLCOM_CREATE_TABLE, SQLCOM_CREATE_INDEX, SQLCOM_ALTER_TABLE,enum_sql_command::SQLCOM_ALTER_TABLE138,3767
  SQLCOM_UPDATE,enum_sql_command::SQLCOM_UPDATE139,3846
  SQLCOM_UPDATE, SQLCOM_INSERT,enum_sql_command::SQLCOM_INSERT139,3846
  SQLCOM_UPDATE, SQLCOM_INSERT, SQLCOM_INSERT_SELECT,enum_sql_command::SQLCOM_INSERT_SELECT139,3846
  SQLCOM_DELETE,enum_sql_command::SQLCOM_DELETE140,3900
  SQLCOM_DELETE, SQLCOM_TRUNCATE,enum_sql_command::SQLCOM_TRUNCATE140,3900
  SQLCOM_DELETE, SQLCOM_TRUNCATE, SQLCOM_DROP_TABLE,enum_sql_command::SQLCOM_DROP_TABLE140,3900
  SQLCOM_DELETE, SQLCOM_TRUNCATE, SQLCOM_DROP_TABLE, SQLCOM_DROP_INDEX,enum_sql_command::SQLCOM_DROP_INDEX140,3900
  SQLCOM_SHOW_DATABASES,enum_sql_command::SQLCOM_SHOW_DATABASES142,3973
  SQLCOM_SHOW_DATABASES, SQLCOM_SHOW_TABLES,enum_sql_command::SQLCOM_SHOW_TABLES142,3973
  SQLCOM_SHOW_DATABASES, SQLCOM_SHOW_TABLES, SQLCOM_SHOW_FIELDS,enum_sql_command::SQLCOM_SHOW_FIELDS142,3973
  SQLCOM_SHOW_KEYS,enum_sql_command::SQLCOM_SHOW_KEYS143,4038
  SQLCOM_SHOW_KEYS, SQLCOM_SHOW_VARIABLES,enum_sql_command::SQLCOM_SHOW_VARIABLES143,4038
  SQLCOM_SHOW_KEYS, SQLCOM_SHOW_VARIABLES, SQLCOM_SHOW_STATUS,enum_sql_command::SQLCOM_SHOW_STATUS143,4038
  SQLCOM_SHOW_ENGINE_LOGS,enum_sql_command::SQLCOM_SHOW_ENGINE_LOGS144,4101
  SQLCOM_SHOW_ENGINE_LOGS, SQLCOM_SHOW_ENGINE_STATUS,enum_sql_command::SQLCOM_SHOW_ENGINE_STATUS144,4101
  SQLCOM_SHOW_ENGINE_LOGS, SQLCOM_SHOW_ENGINE_STATUS, SQLCOM_SHOW_ENGINE_MUTEX,enum_sql_command::SQLCOM_SHOW_ENGINE_MUTEX144,4101
  SQLCOM_SHOW_PROCESSLIST,enum_sql_command::SQLCOM_SHOW_PROCESSLIST145,4181
  SQLCOM_SHOW_PROCESSLIST, SQLCOM_SHOW_MASTER_STAT,enum_sql_command::SQLCOM_SHOW_MASTER_STAT145,4181
  SQLCOM_SHOW_PROCESSLIST, SQLCOM_SHOW_MASTER_STAT, SQLCOM_SHOW_SLAVE_STAT,enum_sql_command::SQLCOM_SHOW_SLAVE_STAT145,4181
  SQLCOM_SHOW_GRANTS,enum_sql_command::SQLCOM_SHOW_GRANTS146,4257
  SQLCOM_SHOW_GRANTS, SQLCOM_SHOW_CREATE,enum_sql_command::SQLCOM_SHOW_CREATE146,4257
  SQLCOM_SHOW_GRANTS, SQLCOM_SHOW_CREATE, SQLCOM_SHOW_CHARSETS,enum_sql_command::SQLCOM_SHOW_CHARSETS146,4257
  SQLCOM_SHOW_COLLATIONS,enum_sql_command::SQLCOM_SHOW_COLLATIONS147,4321
  SQLCOM_SHOW_COLLATIONS, SQLCOM_SHOW_CREATE_DB,enum_sql_command::SQLCOM_SHOW_CREATE_DB147,4321
  SQLCOM_SHOW_COLLATIONS, SQLCOM_SHOW_CREATE_DB, SQLCOM_SHOW_TABLE_STATUS,enum_sql_command::SQLCOM_SHOW_TABLE_STATUS147,4321
  SQLCOM_SHOW_TRIGGERS,enum_sql_command::SQLCOM_SHOW_TRIGGERS148,4396
  SQLCOM_LOAD,enum_sql_command::SQLCOM_LOAD150,4421
  SQLCOM_LOAD,SQLCOM_SET_OPTION,enum_sql_command::SQLCOM_SET_OPTION150,4421
  SQLCOM_LOAD,SQLCOM_SET_OPTION,SQLCOM_LOCK_TABLES,enum_sql_command::SQLCOM_LOCK_TABLES150,4421
  SQLCOM_LOAD,SQLCOM_SET_OPTION,SQLCOM_LOCK_TABLES,SQLCOM_UNLOCK_TABLES,enum_sql_command::SQLCOM_UNLOCK_TABLES150,4421
  SQLCOM_GRANT,enum_sql_command::SQLCOM_GRANT151,4494
  SQLCOM_CHANGE_DB,enum_sql_command::SQLCOM_CHANGE_DB152,4510
  SQLCOM_CHANGE_DB, SQLCOM_CREATE_DB,enum_sql_command::SQLCOM_CREATE_DB152,4510
  SQLCOM_CHANGE_DB, SQLCOM_CREATE_DB, SQLCOM_DROP_DB,enum_sql_command::SQLCOM_DROP_DB152,4510
  SQLCOM_CHANGE_DB, SQLCOM_CREATE_DB, SQLCOM_DROP_DB, SQLCOM_ALTER_DB,enum_sql_command::SQLCOM_ALTER_DB152,4510
  SQLCOM_REPAIR,enum_sql_command::SQLCOM_REPAIR153,4581
  SQLCOM_REPAIR, SQLCOM_REPLACE,enum_sql_command::SQLCOM_REPLACE153,4581
  SQLCOM_REPAIR, SQLCOM_REPLACE, SQLCOM_REPLACE_SELECT,enum_sql_command::SQLCOM_REPLACE_SELECT153,4581
  SQLCOM_CREATE_FUNCTION,enum_sql_command::SQLCOM_CREATE_FUNCTION154,4637
  SQLCOM_CREATE_FUNCTION, SQLCOM_DROP_FUNCTION,enum_sql_command::SQLCOM_DROP_FUNCTION154,4637
  SQLCOM_REVOKE,enum_sql_command::SQLCOM_REVOKE155,4685
  SQLCOM_REVOKE,SQLCOM_OPTIMIZE,enum_sql_command::SQLCOM_OPTIMIZE155,4685
  SQLCOM_REVOKE,SQLCOM_OPTIMIZE, SQLCOM_CHECK,enum_sql_command::SQLCOM_CHECK155,4685
  SQLCOM_ASSIGN_TO_KEYCACHE,enum_sql_command::SQLCOM_ASSIGN_TO_KEYCACHE156,4732
  SQLCOM_ASSIGN_TO_KEYCACHE, SQLCOM_PRELOAD_KEYS,enum_sql_command::SQLCOM_PRELOAD_KEYS156,4732
  SQLCOM_FLUSH,enum_sql_command::SQLCOM_FLUSH157,4782
  SQLCOM_FLUSH, SQLCOM_KILL,enum_sql_command::SQLCOM_KILL157,4782
  SQLCOM_FLUSH, SQLCOM_KILL, SQLCOM_ANALYZE,enum_sql_command::SQLCOM_ANALYZE157,4782
  SQLCOM_ROLLBACK,enum_sql_command::SQLCOM_ROLLBACK158,4827
  SQLCOM_ROLLBACK, SQLCOM_ROLLBACK_TO_SAVEPOINT,enum_sql_command::SQLCOM_ROLLBACK_TO_SAVEPOINT158,4827
  SQLCOM_COMMIT,enum_sql_command::SQLCOM_COMMIT159,4876
  SQLCOM_COMMIT, SQLCOM_SAVEPOINT,enum_sql_command::SQLCOM_SAVEPOINT159,4876
  SQLCOM_COMMIT, SQLCOM_SAVEPOINT, SQLCOM_RELEASE_SAVEPOINT,enum_sql_command::SQLCOM_RELEASE_SAVEPOINT159,4876
  SQLCOM_SLAVE_START,enum_sql_command::SQLCOM_SLAVE_START160,4937
  SQLCOM_SLAVE_START, SQLCOM_SLAVE_STOP,enum_sql_command::SQLCOM_SLAVE_STOP160,4937
  SQLCOM_BEGIN,enum_sql_command::SQLCOM_BEGIN161,4978
  SQLCOM_BEGIN, SQLCOM_CHANGE_MASTER,enum_sql_command::SQLCOM_CHANGE_MASTER161,4978
  SQLCOM_RENAME_TABLE,enum_sql_command::SQLCOM_RENAME_TABLE162,5016
  SQLCOM_RESET,enum_sql_command::SQLCOM_RESET163,5039
  SQLCOM_RESET, SQLCOM_PURGE,enum_sql_command::SQLCOM_PURGE163,5039
  SQLCOM_RESET, SQLCOM_PURGE, SQLCOM_PURGE_BEFORE,enum_sql_command::SQLCOM_PURGE_BEFORE163,5039
  SQLCOM_RESET, SQLCOM_PURGE, SQLCOM_PURGE_BEFORE, SQLCOM_SHOW_BINLOGS,enum_sql_command::SQLCOM_SHOW_BINLOGS163,5039
  SQLCOM_SHOW_OPEN_TABLES,enum_sql_command::SQLCOM_SHOW_OPEN_TABLES164,5111
  SQLCOM_HA_OPEN,enum_sql_command::SQLCOM_HA_OPEN165,5138
  SQLCOM_HA_OPEN, SQLCOM_HA_CLOSE,enum_sql_command::SQLCOM_HA_CLOSE165,5138
  SQLCOM_HA_OPEN, SQLCOM_HA_CLOSE, SQLCOM_HA_READ,enum_sql_command::SQLCOM_HA_READ165,5138
  SQLCOM_SHOW_SLAVE_HOSTS,enum_sql_command::SQLCOM_SHOW_SLAVE_HOSTS166,5189
  SQLCOM_SHOW_SLAVE_HOSTS, SQLCOM_DELETE_MULTI,enum_sql_command::SQLCOM_DELETE_MULTI166,5189
  SQLCOM_SHOW_SLAVE_HOSTS, SQLCOM_DELETE_MULTI, SQLCOM_UPDATE_MULTI,enum_sql_command::SQLCOM_UPDATE_MULTI166,5189
  SQLCOM_SHOW_BINLOG_EVENTS,enum_sql_command::SQLCOM_SHOW_BINLOG_EVENTS167,5258
  SQLCOM_SHOW_BINLOG_EVENTS, SQLCOM_DO,enum_sql_command::SQLCOM_DO167,5258
  SQLCOM_SHOW_WARNS,enum_sql_command::SQLCOM_SHOW_WARNS168,5298
  SQLCOM_SHOW_WARNS, SQLCOM_EMPTY_QUERY,enum_sql_command::SQLCOM_EMPTY_QUERY168,5298
  SQLCOM_SHOW_WARNS, SQLCOM_EMPTY_QUERY, SQLCOM_SHOW_ERRORS,enum_sql_command::SQLCOM_SHOW_ERRORS168,5298
  SQLCOM_SHOW_STORAGE_ENGINES,enum_sql_command::SQLCOM_SHOW_STORAGE_ENGINES169,5359
  SQLCOM_SHOW_STORAGE_ENGINES, SQLCOM_SHOW_PRIVILEGES,enum_sql_command::SQLCOM_SHOW_PRIVILEGES169,5359
  SQLCOM_HELP,enum_sql_command::SQLCOM_HELP170,5414
  SQLCOM_HELP, SQLCOM_CREATE_USER,enum_sql_command::SQLCOM_CREATE_USER170,5414
  SQLCOM_HELP, SQLCOM_CREATE_USER, SQLCOM_DROP_USER,enum_sql_command::SQLCOM_DROP_USER170,5414
  SQLCOM_HELP, SQLCOM_CREATE_USER, SQLCOM_DROP_USER, SQLCOM_RENAME_USER,enum_sql_command::SQLCOM_RENAME_USER170,5414
  SQLCOM_REVOKE_ALL,enum_sql_command::SQLCOM_REVOKE_ALL171,5487
  SQLCOM_REVOKE_ALL, SQLCOM_CHECKSUM,enum_sql_command::SQLCOM_CHECKSUM171,5487
  SQLCOM_CREATE_PROCEDURE,enum_sql_command::SQLCOM_CREATE_PROCEDURE172,5525
  SQLCOM_CREATE_PROCEDURE, SQLCOM_CREATE_SPFUNCTION,enum_sql_command::SQLCOM_CREATE_SPFUNCTION172,5525
  SQLCOM_CREATE_PROCEDURE, SQLCOM_CREATE_SPFUNCTION, SQLCOM_CALL,enum_sql_command::SQLCOM_CALL172,5525
  SQLCOM_DROP_PROCEDURE,enum_sql_command::SQLCOM_DROP_PROCEDURE173,5591
  SQLCOM_DROP_PROCEDURE, SQLCOM_ALTER_PROCEDURE,enum_sql_command::SQLCOM_ALTER_PROCEDURE173,5591
  SQLCOM_DROP_PROCEDURE, SQLCOM_ALTER_PROCEDURE,SQLCOM_ALTER_FUNCTION,enum_sql_command::SQLCOM_ALTER_FUNCTION173,5591
  SQLCOM_SHOW_CREATE_PROC,enum_sql_command::SQLCOM_SHOW_CREATE_PROC174,5662
  SQLCOM_SHOW_CREATE_PROC, SQLCOM_SHOW_CREATE_FUNC,enum_sql_command::SQLCOM_SHOW_CREATE_FUNC174,5662
  SQLCOM_SHOW_STATUS_PROC,enum_sql_command::SQLCOM_SHOW_STATUS_PROC175,5714
  SQLCOM_SHOW_STATUS_PROC, SQLCOM_SHOW_STATUS_FUNC,enum_sql_command::SQLCOM_SHOW_STATUS_FUNC175,5714
  SQLCOM_PREPARE,enum_sql_command::SQLCOM_PREPARE176,5766
  SQLCOM_PREPARE, SQLCOM_EXECUTE,enum_sql_command::SQLCOM_EXECUTE176,5766
  SQLCOM_PREPARE, SQLCOM_EXECUTE, SQLCOM_DEALLOCATE_PREPARE,enum_sql_command::SQLCOM_DEALLOCATE_PREPARE176,5766
  SQLCOM_CREATE_VIEW,enum_sql_command::SQLCOM_CREATE_VIEW177,5827
  SQLCOM_CREATE_VIEW, SQLCOM_DROP_VIEW,enum_sql_command::SQLCOM_DROP_VIEW177,5827
  SQLCOM_CREATE_TRIGGER,enum_sql_command::SQLCOM_CREATE_TRIGGER178,5867
  SQLCOM_CREATE_TRIGGER, SQLCOM_DROP_TRIGGER,enum_sql_command::SQLCOM_DROP_TRIGGER178,5867
  SQLCOM_XA_START,enum_sql_command::SQLCOM_XA_START179,5913
  SQLCOM_XA_START, SQLCOM_XA_END,enum_sql_command::SQLCOM_XA_END179,5913
  SQLCOM_XA_START, SQLCOM_XA_END, SQLCOM_XA_PREPARE,enum_sql_command::SQLCOM_XA_PREPARE179,5913
  SQLCOM_XA_COMMIT,enum_sql_command::SQLCOM_XA_COMMIT180,5966
  SQLCOM_XA_COMMIT, SQLCOM_XA_ROLLBACK,enum_sql_command::SQLCOM_XA_ROLLBACK180,5966
  SQLCOM_XA_COMMIT, SQLCOM_XA_ROLLBACK, SQLCOM_XA_RECOVER,enum_sql_command::SQLCOM_XA_RECOVER180,5966
  SQLCOM_SHOW_PROC_CODE,enum_sql_command::SQLCOM_SHOW_PROC_CODE181,6025
  SQLCOM_SHOW_PROC_CODE, SQLCOM_SHOW_FUNC_CODE,enum_sql_command::SQLCOM_SHOW_FUNC_CODE181,6025
  SQLCOM_ALTER_TABLESPACE,enum_sql_command::SQLCOM_ALTER_TABLESPACE182,6073
  SQLCOM_INSTALL_PLUGIN,enum_sql_command::SQLCOM_INSTALL_PLUGIN183,6100
  SQLCOM_INSTALL_PLUGIN, SQLCOM_UNINSTALL_PLUGIN,enum_sql_command::SQLCOM_UNINSTALL_PLUGIN183,6100
  SQLCOM_SHOW_AUTHORS,enum_sql_command::SQLCOM_SHOW_AUTHORS184,6150
  SQLCOM_SHOW_AUTHORS, SQLCOM_BINLOG_BASE64_EVENT,enum_sql_command::SQLCOM_BINLOG_BASE64_EVENT184,6150
  SQLCOM_SHOW_PLUGINS,enum_sql_command::SQLCOM_SHOW_PLUGINS185,6201
  SQLCOM_SHOW_CONTRIBUTORS,enum_sql_command::SQLCOM_SHOW_CONTRIBUTORS186,6224
  SQLCOM_CREATE_SERVER,enum_sql_command::SQLCOM_CREATE_SERVER187,6252
  SQLCOM_CREATE_SERVER, SQLCOM_DROP_SERVER,enum_sql_command::SQLCOM_DROP_SERVER187,6252
  SQLCOM_CREATE_SERVER, SQLCOM_DROP_SERVER, SQLCOM_ALTER_SERVER,enum_sql_command::SQLCOM_ALTER_SERVER187,6252
  SQLCOM_CREATE_EVENT,enum_sql_command::SQLCOM_CREATE_EVENT188,6317
  SQLCOM_CREATE_EVENT, SQLCOM_ALTER_EVENT,enum_sql_command::SQLCOM_ALTER_EVENT188,6317
  SQLCOM_CREATE_EVENT, SQLCOM_ALTER_EVENT, SQLCOM_DROP_EVENT,enum_sql_command::SQLCOM_DROP_EVENT188,6317
  SQLCOM_SHOW_CREATE_EVENT,enum_sql_command::SQLCOM_SHOW_CREATE_EVENT189,6379
  SQLCOM_SHOW_CREATE_EVENT, SQLCOM_SHOW_EVENTS,enum_sql_command::SQLCOM_SHOW_EVENTS189,6379
  SQLCOM_SHOW_CREATE_TRIGGER,enum_sql_command::SQLCOM_SHOW_CREATE_TRIGGER190,6427
  SQLCOM_ALTER_DB_UPGRADE,enum_sql_command::SQLCOM_ALTER_DB_UPGRADE191,6457
  SQLCOM_SHOW_PROFILE,enum_sql_command::SQLCOM_SHOW_PROFILE192,6484
  SQLCOM_SHOW_PROFILE, SQLCOM_SHOW_PROFILES,enum_sql_command::SQLCOM_SHOW_PROFILES192,6484
  SQLCOM_SIGNAL,enum_sql_command::SQLCOM_SIGNAL193,6529
  SQLCOM_SIGNAL, SQLCOM_RESIGNAL,enum_sql_command::SQLCOM_RESIGNAL193,6529
  SQLCOM_SHOW_RELAYLOG_EVENTS,enum_sql_command::SQLCOM_SHOW_RELAYLOG_EVENTS194,6563
  SQLCOM_BACKUP,enum_sql_command::SQLCOM_BACKUP195,6595
  SQLCOM_ENDenum_sql_command::SQLCOM_END201,6778
#define DESCRIBE_NORMAL	205,6821
#define DESCRIBE_EXTENDED	206,6848
#define DESCRIBE_PARTITIONS	211,7036
enum enum_sp_suid_behaviour215,7088
  SP_IS_DEFAULT_SUID=enum_sp_suid_behaviour::SP_IS_DEFAULT_SUID217,7118
  SP_IS_NOT_SUID,enum_sp_suid_behaviour::SP_IS_NOT_SUID218,7143
  SP_IS_SUIDenum_sp_suid_behaviour::SP_IS_SUID219,7161
enum enum_sp_data_access222,7178
  SP_DEFAULT_ACCESS=enum_sp_data_access::SP_DEFAULT_ACCESS224,7205
  SP_CONTAINS_SQL,enum_sp_data_access::SP_CONTAINS_SQL225,7229
  SP_NO_SQL,enum_sp_data_access::SP_NO_SQL226,7248
  SP_READS_SQL_DATA,enum_sp_data_access::SP_READS_SQL_DATA227,7261
  SP_MODIFIES_SQL_DATAenum_sp_data_access::SP_MODIFIES_SQL_DATA228,7282
const LEX_STRING sp_data_access_name[sp_data_access_name231,7309
#define DERIVED_SUBQUERY	240,7548
#define DERIVED_VIEW	241,7575
enum enum_view_create_mode243,7600
  VIEW_CREATE_NEW,enum_view_create_mode::VIEW_CREATE_NEW245,7629
  VIEW_ALTER,enum_view_create_mode::VIEW_ALTER246,7693
  VIEW_CREATE_OR_REPLACE	enum_view_create_mode::VIEW_CREATE_OR_REPLACE247,7755
enum enum_drop_mode250,7828
  DROP_DEFAULT,enum_drop_mode::DROP_DEFAULT252,7850
  DROP_CASCADE,enum_drop_mode::DROP_CASCADE253,7891
  DROP_RESTRICT enum_drop_mode::DROP_RESTRICT254,7925
#define TL_OPTION_UPDATING	258,8001
#define TL_OPTION_FORCE_INDEX	259,8030
#define TL_OPTION_IGNORE_LEAVES 260,8062
#define TL_OPTION_ALIAS 261,8096
typedef List<Item> List_item;263,8131
typedef Mem_root_array<ORDER*ORDER264,8161
typedef Mem_root_array<ORDER*, true> Group_list_ptrs;264,8161
typedef struct st_lex_server_options267,8244
} LEX_SERVER_OPTIONS;272,8404
typedef struct st_lex_master_info282,8716
  enum {LEX_MI_UNCHANGED,st_lex_master_info::LEX_MI_UNCHANGED293,9021
  enum {LEX_MI_UNCHANGED, LEX_MI_DISABLE,st_lex_master_info::LEX_MI_DISABLE293,9021
  enum {LEX_MI_UNCHANGED, LEX_MI_DISABLE, LEX_MI_ENABLE}st_lex_master_info::LEX_MI_ENABLE293,9021
} LEX_MASTER_INFO;300,9334
typedef struct st_lex_reset_slave302,9354
} LEX_RESET_SLAVE;305,9402
enum sub_select_type307,9422
  UNSPECIFIED_TYPE,sub_select_type::UNSPECIFIED_TYPE309,9445
  UNSPECIFIED_TYPE,UNION_TYPE,sub_select_type::UNION_TYPE309,9445
  UNSPECIFIED_TYPE,UNION_TYPE, INTERSECT_TYPE,sub_select_type::INTERSECT_TYPE309,9445
  EXCEPT_TYPE,sub_select_type::EXCEPT_TYPE310,9492
  EXCEPT_TYPE, GLOBAL_OPTIONS_TYPE,sub_select_type::GLOBAL_OPTIONS_TYPE310,9492
  EXCEPT_TYPE, GLOBAL_OPTIONS_TYPE, DERIVED_TABLE_TYPE,sub_select_type::DERIVED_TABLE_TYPE310,9492
  EXCEPT_TYPE, GLOBAL_OPTIONS_TYPE, DERIVED_TABLE_TYPE, OLAP_TYPEsub_select_type::OLAP_TYPE310,9492
enum olap_type 313,9562
  UNSPECIFIED_OLAP_TYPE,olap_type::UNSPECIFIED_OLAP_TYPE315,9580
  UNSPECIFIED_OLAP_TYPE, CUBE_TYPE,olap_type::CUBE_TYPE315,9580
  UNSPECIFIED_OLAP_TYPE, CUBE_TYPE, ROLLUP_TYPEolap_type::ROLLUP_TYPE315,9580
enum tablespace_op_type318,9632
  NO_TABLESPACE_OP,tablespace_op_type::NO_TABLESPACE_OP320,9658
  NO_TABLESPACE_OP, DISCARD_TABLESPACE,tablespace_op_type::DISCARD_TABLESPACE320,9658
  NO_TABLESPACE_OP, DISCARD_TABLESPACE, IMPORT_TABLESPACEtablespace_op_type::IMPORT_TABLESPACE320,9658
typedef uchar index_clause_map;328,9867
#define INDEX_HINT_MASK_JOIN 334,10021
#define INDEX_HINT_MASK_GROUP 335,10055
#define INDEX_HINT_MASK_ORDER 336,10094
#define INDEX_HINT_MASK_ALL 338,10134
class Index_hint 342,10345
  Index_hint Index_hint::Index_hint355,10702
class st_select_lex_node 489,15264
  enum e_sql_cache st_select_lex_node::e_sql_cache502,15660
  enum e_sql_cache { SQL_CACHE_UNSPECIFIED,st_select_lex_node::e_sql_cache::SQL_CACHE_UNSPECIFIED502,15660
  enum e_sql_cache { SQL_CACHE_UNSPECIFIED, SQL_NO_CACHE,st_select_lex_node::e_sql_cache::SQL_NO_CACHE502,15660
  enum e_sql_cache { SQL_CACHE_UNSPECIFIED, SQL_NO_CACHE, SQL_CACHE st_select_lex_node::e_sql_cache::SQL_CACHE502,15660
  static void *operator new(st_select_lex_node::operator new518,16148
  static void *operator new(st_select_lex_node::operator new522,16234
  static void operator delete(st_select_lex_node::operator delete524,16360
  static void operator delete(st_select_lex_node::operator delete525,16435
  st_select_lex_node(st_select_lex_node::st_select_lex_node528,16578
  virtual ~st_select_lex_node(st_select_lex_node::~st_select_lex_node535,16744
  inline st_select_lex_node* get_master(st_select_lex_node::get_master537,16780
  virtual void set_lock_for_tables(st_select_lex_node::set_lock_for_tables563,17858
typedef class st_select_lex_node SELECT_LEX_NODE;572,18173
class st_select_lex_unit:st_select_lex_unit585,18397
  st_select_lex_unit(st_select_lex_unit::st_select_lex_unit597,18763
  st_select_lex* first_select(st_select_lex_unit::first_select645,20354
  st_select_lex_unit* next_unit(st_select_lex_unit::next_unit649,20446
  st_select_lex* return_after_parsing(st_select_lex_unit::return_after_parsing653,20544
  inline void unclean(st_select_lex_unit::unclean661,20784
  inline bool is_prepared(st_select_lex_unit::is_prepared668,20998
  void set_thd(st_select_lex_unit::set_thd671,21166
typedef class st_select_lex_unit SELECT_LEX_UNIT;680,21366
class st_select_lex:st_select_lex685,21482
  st_select_lex_unit* first_inner_unit(st_select_lex::first_inner_unit826,27689
  st_select_lex* next_select(st_select_lex::next_select831,27814
  st_select_lex* next_select_in_list(st_select_lex::next_select_in_list832,27879
  st_select_lex_node** next_select_in_list_addr(st_select_lex::next_select_in_list_addr836,27966
  st_select_lex* return_after_parsing(st_select_lex::return_after_parsing840,28047
  inline void init_order(st_select_lex::init_order872,29203
  void cut_subtree(st_select_lex::cut_subtree884,29627
  st_select_lex(st_select_lex::st_select_lex888,29719
  void make_empty_select(st_select_lex::make_empty_select890,29804
  List<Index_hint>* pop_index_hints(st_select_lex::pop_index_hints924,30977
  void clear_index_hints(st_select_lex::clear_index_hints931,31112
  bool non_agg_field_used(st_select_lex::non_agg_field_used939,31408
  bool agg_func_used(st_select_lex::agg_func_used940,31475
  void set_non_agg_field_used(st_select_lex::set_non_agg_field_used942,31538
  void set_agg_func_used(st_select_lex::set_agg_func_used943,31609
typedef class st_select_lex SELECT_LEX;955,31974
inline bool st_select_lex_unit::is_union 957,32015
#define ALTER_ADD_COLUMN	963,32166
#define ALTER_DROP_COLUMN	964,32201
#define ALTER_CHANGE_COLUMN	965,32237
#define ALTER_ADD_INDEX	966,32275
#define ALTER_DROP_INDEX	967,32310
#define ALTER_RENAME	968,32345
#define ALTER_ORDER	969,32377
#define ALTER_OPTIONS	970,32408
#define ALTER_CHANGE_COLUMN_DEFAULT 971,32441
#define ALTER_KEYS_ONOFF 972,32487
#define ALTER_CONVERT 973,32529
#define ALTER_RECREATE 974,32572
#define ALTER_ADD_PARTITION 975,32615
#define ALTER_DROP_PARTITION 976,32658
#define ALTER_COALESCE_PARTITION 977,32701
#define ALTER_REORGANIZE_PARTITION 978,32745
#define ALTER_PARTITION 979,32791
#define ALTER_ADMIN_PARTITION 980,32835
#define ALTER_TABLE_REORG 981,32879
#define ALTER_REBUILD_PARTITION 982,32923
#define ALTER_ALL_PARTITION 983,32967
#define ALTER_REMOVE_PARTITIONING 984,33011
#define ALTER_FOREIGN_KEY 985,33056
#define ALTER_TRUNCATE_PARTITION 986,33100
enum enum_alter_table_change_level988,33145
  ALTER_TABLE_METADATA_ONLY=enum_alter_table_change_level::ALTER_TABLE_METADATA_ONLY990,33182
  ALTER_TABLE_DATA_CHANGED=enum_alter_table_change_level::ALTER_TABLE_DATA_CHANGED991,33214
  ALTER_TABLE_INDEX_CHANGED=enum_alter_table_change_level::ALTER_TABLE_INDEX_CHANGED992,33245
class Alter_table_change_level1002,33471
  typedef enum enum_alter_table_change_level enum_type;Alter_table_change_level::enum_type1005,33513
  void operator = Alter_table_change_level::operator =1008,33596
  operator enum_type Alter_table_change_level::operator enum_type1009,33643
class Alter_info1020,33840
  Alter_info(Alter_info::Alter_info1037,34411
  void reset(Alter_info::reset1047,34633
struct st_sp_chistics1068,35180
struct st_trg_chistics1079,35397
enum xa_option_words 1087,35535
enum xa_option_words {XA_NONE,xa_option_words::XA_NONE1087,35535
enum xa_option_words {XA_NONE, XA_JOIN,xa_option_words::XA_JOIN1087,35535
enum xa_option_words {XA_NONE, XA_JOIN, XA_RESUME,xa_option_words::XA_RESUME1087,35535
enum xa_option_words {XA_NONE, XA_JOIN, XA_RESUME, XA_ONE_PHASE,xa_option_words::XA_ONE_PHASE1087,35535
                      XA_SUSPEND,xa_option_words::XA_SUSPEND1088,35600
                      XA_SUSPEND, XA_FOR_MIGRATE}xa_option_words::XA_FOR_MIGRATE1088,35600
class Query_tables_list1108,36241
  enum { START_SROUTINES_HASH_SIZE=Query_tables_list::START_SROUTINES_HASH_SIZE1133,37173
  Query_tables_list(Query_tables_list::Query_tables_list1152,38017
  ~Query_tables_list(Query_tables_list::~Query_tables_list1153,38042
  void set_query_tables_list(Query_tables_list::set_query_tables_list1158,38221
  void add_to_query_tables(Query_tables_list::add_to_query_tables1168,38490
  bool requires_prelocking(Query_tables_list::requires_prelocking1173,38641
  void mark_as_requiring_prelocking(Query_tables_list::mark_as_requiring_prelocking1177,38718
  TABLE_LIST* first_not_own_table(Query_tables_list::first_not_own_table1182,38903
  void chop_off_not_own_tables(Query_tables_list::chop_off_not_own_tables1186,39013
  TABLE_LIST *last_table(Query_tables_list::last_table1197,39278
  enum enum_binlog_stmt_unsafe Query_tables_list::enum_binlog_stmt_unsafe1214,39854
    BINLOG_STMT_UNSAFE_LIMIT=Query_tables_list::enum_binlog_stmt_unsafe::BINLOG_STMT_UNSAFE_LIMIT1219,39992
    BINLOG_STMT_UNSAFE_INSERT_DELAYED,Query_tables_list::enum_binlog_stmt_unsafe::BINLOG_STMT_UNSAFE_INSERT_DELAYED1224,40138
    BINLOG_STMT_UNSAFE_SYSTEM_TABLE,Query_tables_list::enum_binlog_stmt_unsafe::BINLOG_STMT_UNSAFE_SYSTEM_TABLE1229,40291
    BINLOG_STMT_UNSAFE_AUTOINC_COLUMNS,Query_tables_list::enum_binlog_stmt_unsafe::BINLOG_STMT_UNSAFE_AUTOINC_COLUMNS1239,40798
    BINLOG_STMT_UNSAFE_UDF,Query_tables_list::enum_binlog_stmt_unsafe::BINLOG_STMT_UNSAFE_UDF1243,40906
    BINLOG_STMT_UNSAFE_SYSTEM_VARIABLE,Query_tables_list::enum_binlog_stmt_unsafe::BINLOG_STMT_UNSAFE_SYSTEM_VARIABLE1248,41058
    BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION,Query_tables_list::enum_binlog_stmt_unsafe::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION1252,41164
    BINLOG_STMT_UNSAFE_NONTRANS_AFTER_TRANS,Query_tables_list::enum_binlog_stmt_unsafe::BINLOG_STMT_UNSAFE_NONTRANS_AFTER_TRANS1259,41408
    BINLOG_STMT_UNSAFE_MULTIPLE_ENGINES_AND_SELF_LOGGING_ENGINE,Query_tables_list::enum_binlog_stmt_unsafe::BINLOG_STMT_UNSAFE_MULTIPLE_ENGINES_AND_SELF_LOGGING_ENGINE1265,41556
    BINLOG_STMT_UNSAFE_MIXED_STATEMENT,Query_tables_list::enum_binlog_stmt_unsafe::BINLOG_STMT_UNSAFE_MIXED_STATEMENT1271,41760
    BINLOG_STMT_UNSAFE_INSERT_IGNORE_SELECT,Query_tables_list::enum_binlog_stmt_unsafe::BINLOG_STMT_UNSAFE_INSERT_IGNORE_SELECT1278,42025
    BINLOG_STMT_UNSAFE_INSERT_SELECT_UPDATE,Query_tables_list::enum_binlog_stmt_unsafe::BINLOG_STMT_UNSAFE_INSERT_SELECT_UPDATE1285,42297
    BINLOG_STMT_UNSAFE_WRITE_AUTOINC_SELECT,Query_tables_list::enum_binlog_stmt_unsafe::BINLOG_STMT_UNSAFE_WRITE_AUTOINC_SELECT1292,42556
    BINLOG_STMT_UNSAFE_REPLACE_SELECT,Query_tables_list::enum_binlog_stmt_unsafe::BINLOG_STMT_UNSAFE_REPLACE_SELECT1299,42828
    BINLOG_STMT_UNSAFE_CREATE_IGNORE_SELECT,Query_tables_list::enum_binlog_stmt_unsafe::BINLOG_STMT_UNSAFE_CREATE_IGNORE_SELECT1306,43102
    BINLOG_STMT_UNSAFE_CREATE_REPLACE_SELECT,Query_tables_list::enum_binlog_stmt_unsafe::BINLOG_STMT_UNSAFE_CREATE_REPLACE_SELECT1313,43384
    BINLOG_STMT_UNSAFE_CREATE_SELECT_AUTOINC,Query_tables_list::enum_binlog_stmt_unsafe::BINLOG_STMT_UNSAFE_CREATE_SELECT_AUTOINC1321,43700
    BINLOG_STMT_UNSAFE_UPDATE_IGNORE,Query_tables_list::enum_binlog_stmt_unsafe::BINLOG_STMT_UNSAFE_UPDATE_IGNORE1328,43952
    BINLOG_STMT_UNSAFE_INSERT_TWO_KEYS,Query_tables_list::enum_binlog_stmt_unsafe::BINLOG_STMT_UNSAFE_INSERT_TWO_KEYS1334,44106
    BINLOG_STMT_UNSAFE_AUTOINC_NOT_FIRST,Query_tables_list::enum_binlog_stmt_unsafe::BINLOG_STMT_UNSAFE_AUTOINC_NOT_FIRST1340,44256
    BINLOG_STMT_UNSAFE_COUNTQuery_tables_list::enum_binlog_stmt_unsafe::BINLOG_STMT_UNSAFE_COUNT1343,44352
  inline bool is_stmt_unsafe(Query_tables_list::is_stmt_unsafe1363,44904
  inline void set_stmt_unsafe(Query_tables_list::set_stmt_unsafe1374,45240
  inline void set_stmt_unsafe_flags(Query_tables_list::set_stmt_unsafe_flags1389,45797
  inline uint32 get_stmt_unsafe_flags(Query_tables_list::get_stmt_unsafe_flags1402,46270
  inline void clear_stmt_unsafe(Query_tables_list::clear_stmt_unsafe1412,46588
  inline bool is_stmt_row_injection(Query_tables_list::is_stmt_row_injection1424,46917
  inline void set_stmt_row_injection(Query_tables_list::set_stmt_row_injection1434,47249
  enum enum_stmt_accessed_tableQuery_tables_list::enum_stmt_accessed_table1441,47458
    STMT_READS_TRANS_TABLE=Query_tables_list::enum_stmt_accessed_table::STMT_READS_TRANS_TABLE1447,47602
    STMT_READS_NON_TRANS_TABLE,Query_tables_list::enum_stmt_accessed_table::STMT_READS_NON_TRANS_TABLE1452,47745
    STMT_READS_TEMP_TRANS_TABLE,Query_tables_list::enum_stmt_accessed_table::STMT_READS_TEMP_TRANS_TABLE1457,47895
    STMT_READS_TEMP_NON_TRANS_TABLE,Query_tables_list::enum_stmt_accessed_table::STMT_READS_TEMP_NON_TRANS_TABLE1462,48049
    STMT_WRITES_TRANS_TABLE,Query_tables_list::enum_stmt_accessed_table::STMT_WRITES_TRANS_TABLE1466,48156
    STMT_WRITES_NON_TRANS_TABLE,Query_tables_list::enum_stmt_accessed_table::STMT_WRITES_NON_TRANS_TABLE1470,48259
    STMT_WRITES_TEMP_TRANS_TABLE,Query_tables_list::enum_stmt_accessed_table::STMT_WRITES_TEMP_TRANS_TABLE1474,48372
    STMT_WRITES_TEMP_NON_TRANS_TABLE,Query_tables_list::enum_stmt_accessed_table::STMT_WRITES_TEMP_NON_TRANS_TABLE1478,48490
    STMT_ACCESS_TABLE_COUNTQuery_tables_list::enum_stmt_accessed_table::STMT_ACCESS_TABLE_COUNT1483,48638
  static inline const char *stmt_accessed_table_string(Query_tables_list::stmt_accessed_table_string1487,48689
  #define BINLOG_DIRECT_ON 1525,49795
  #define BINLOG_DIRECT_OFF 1529,49965
  #define TRX_CACHE_EMPTY 1533,50136
  #define TRX_CACHE_NOT_EMPTY 1535,50209
  #define IL_LT_REPEATABLE 1537,50286
  #define IL_GTE_REPEATABLE 1539,50362
  inline void set_stmt_accessed_table(Query_tables_list::set_stmt_accessed_table1548,50694
  inline bool stmt_accessed_table(Query_tables_list::stmt_accessed_table1569,51339
  inline bool stmt_accessed_non_trans_temp_table(Query_tables_list::stmt_accessed_non_trans_temp_table1587,51890
  inline bool is_mixed_stmt_unsafe(Query_tables_list::is_mixed_stmt_unsafe1611,52673
  bool uses_stored_routines(Query_tables_list::uses_stored_routines1658,54395
  enum enum_binlog_stmt_type Query_tables_list::enum_binlog_stmt_type1668,54606
    BINLOG_STMT_TYPE_ROW_INJECTION Query_tables_list::enum_binlog_stmt_type::BINLOG_STMT_TYPE_ROW_INJECTION1673,54780
    BINLOG_STMT_TYPE_COUNTQuery_tables_list::enum_binlog_stmt_type::BINLOG_STMT_TYPE_COUNT1676,54875
struct st_parsing_options1709,55728
  st_parsing_options(st_parsing_options::st_parsing_options1716,55863
enum enum_comment_state1724,55985
  NO_COMMENT,enum_comment_state::NO_COMMENT1729,56048
  PRESERVE_COMMENT,enum_comment_state::PRESERVE_COMMENT1734,56181
  DISCARD_COMMENTenum_comment_state::DISCARD_COMMENT1741,56433
class Lex_input_stream1759,57057
  Lex_input_stream(Lex_input_stream::Lex_input_stream1762,57090
  ~Lex_input_stream(Lex_input_stream::~Lex_input_stream1766,57120
  void set_echo(Lex_input_stream::set_echo1787,57573
  void save_in_comment_state(Lex_input_stream::save_in_comment_state1792,57627
  void restore_in_comment_state(Lex_input_stream::restore_in_comment_state1798,57727
  void skip_binary(Lex_input_stream::skip_binary1808,57920
  unsigned char yyGet(Lex_input_stream::yyGet1822,58156
  unsigned char yyGetLast(Lex_input_stream::yyGetLast1834,58354
  unsigned char yyPeek(Lex_input_stream::yyPeek1842,58487
  unsigned char yyPeekn(Lex_input_stream::yyPeekn1851,58644
  void yyUnget(Lex_input_stream::yyUnget1861,58911
  void yySkip(Lex_input_stream::yySkip1871,59051
  void yySkipn(Lex_input_stream::yySkipn1883,59247
  char *yyUnput(Lex_input_stream::yyUnput1899,59595
  bool eof(Lex_input_stream::eof1911,59824
  bool eof(Lex_input_stream::eof1921,60055
  const char *get_buf(Lex_input_stream::get_buf1927,60161
  const char *get_cpp_buf(Lex_input_stream::get_cpp_buf1933,60257
  const char *get_end_of_query(Lex_input_stream::get_end_of_query1939,60362
  void start_token(Lex_input_stream::start_token1945,60494
  void restart_token(Lex_input_stream::restart_token1960,60833
  const char *get_tok_start(Lex_input_stream::get_tok_start1967,60979
  const char *get_cpp_tok_start(Lex_input_stream::get_cpp_tok_start1973,61110
  const char *get_tok_end(Lex_input_stream::get_tok_end1979,61237
  const char *get_cpp_tok_end(Lex_input_stream::get_cpp_tok_end1985,61362
  const char *get_tok_start_prev(Lex_input_stream::get_tok_start_prev1991,61496
  const char *get_ptr(Lex_input_stream::get_ptr1997,61629
  const char *get_cpp_ptr(Lex_input_stream::get_cpp_ptr2003,61750
  uint yyLength(Lex_input_stream::yyLength2009,61874
  const char *get_body_utf8_str(Lex_input_stream::get_body_utf8_str2020,62146
  uint get_body_utf8_length(Lex_input_stream::get_body_utf8_length2026,62248
class Sql_statement 2193,66900
  Sql_statement(Sql_statement::Sql_statement2208,67205
  virtual ~Sql_statement(Sql_statement::~Sql_statement2213,67275
struct LEX:LEX2238,68078
  virtual ~LEX(LEX::~LEX2506,77635
  inline bool is_ps_or_view_context_analysis(LEX::is_ps_or_view_context_analysis2513,77802
  inline void uncacheable(LEX::uncacheable2520,77982
  inline bool which_check_option_applicable(LEX::which_check_option_applicable2561,79128
  bool push_context(LEX::push_context2579,79496
  void pop_context(LEX::pop_context2584,79605
  Name_resolution_context *current_context(LEX::current_context2591,79720
  bool is_single_level_stmt(LEX::is_single_level_stmt2613,80425
class Set_signal_information2635,81005
 Set_signal_information(Set_signal_information::Set_signal_information2639,81092
  ~Set_signal_information(Set_signal_information::~Set_signal_information2645,81233
class Yacc_state2665,81723
  Yacc_state(Yacc_state::Yacc_state2668,81750
  void reset(Yacc_state::reset2673,81787
  void reset_before_substatement(Yacc_state::reset_before_substatement2688,82063
class Parser_state2748,83723
  Parser_state(Parser_state::Parser_state2751,83752
  bool init(Parser_state::init2761,83903
  ~Parser_state(Parser_state::~Parser_state2766,84009
  void reset(Parser_state::reset2772,84081
struct st_lex_local:st_lex_local2780,84213
  static void *operator new(st_lex_local::operator new2782,84247
  static void *operator new(st_lex_local::operator new2786,84332
  static void operator delete(st_lex_local::operator delete2790,84463
  static void operator delete(st_lex_local::operator delete2792,84540

sql/sql_list.h,7087
#define INCLUDES_MYSQL_SQL_LIST_H2,34
class Sql_alloc36,1319
  static void *operator new(Sql_alloc::operator new39,1345
  static void *operator new[](Sql_alloc::operator new[]43,1431
  static void *operator new[](Sql_alloc::operator new[]47,1519
  static void *operator new(Sql_alloc::operator new49,1632
  static void operator delete(Sql_alloc::operator delete51,1743
  static void operator delete(Sql_alloc::operator delete52,1819
  static void operator delete[](Sql_alloc::operator delete[]54,1905
  static void operator delete[](Sql_alloc::operator delete[]56,1993
  inline Sql_alloc(Sql_alloc::Sql_alloc59,2104
  inline ~Sql_alloc(Sql_alloc::~Sql_alloc60,2138
  inline Sql_alloc(Sql_alloc::Sql_alloc62,2169
  inline ~Sql_alloc(Sql_alloc::~Sql_alloc63,2193
class SQL_I_List 77,2470
  SQL_I_List(SQL_I_List::SQL_I_List86,2651
  SQL_I_List(SQL_I_List::SQL_I_List88,2680
  inline void empty(SQL_I_List::empty95,2829
  inline void link_in_list(SQL_I_List::link_in_list102,2912
  inline void save_and_clear(SQL_I_List::save_and_clear110,3049
  inline void push_front(SQL_I_List::push_front116,3139
  inline void push_back(SQL_I_List::push_back124,3306
struct list_node 152,3948
  list_node(list_node::list_node156,4018
  list_node(list_node::list_node159,4106
class base_list 169,4239
  bool operator==(base_list::operator==177,4340
  inline void empty(base_list::empty185,4492
  inline base_list(base_list::base_list186,4563
  inline base_list(base_list::base_list196,5071
  inline base_list(base_list::base_list209,5533
  inline bool push_back(base_list::push_back210,5568
  inline bool push_back(base_list::push_back220,5753
  inline bool push_front(base_list::push_front230,5969
  void remove(base_list::remove243,6199
  inline void concat(base_list::concat253,6404
  inline void *pop(base_list::pop262,6572
  inline void disjoin(base_list::disjoin271,6758
  inline void prepand(base_list::prepand286,7071
  inline void swap(base_list::swap298,7273
  inline list_node* last_node(base_list::last_node304,7467
  inline list_node* first_node(base_list::first_node305,7517
  inline void *head(base_list::head306,7567
  inline void **head_ref(base_list::head_ref307,7613
  inline bool is_empty(base_list::is_empty308,7693
  inline list_node *last_ref(base_list::last_ref309,7753
  bool check_list(base_list::check_list330,8311
  void after(base_list::after363,9097
class base_list_iterator374,9308
  void sublist(base_list_iterator::sublist379,9399
  base_list_iterator(base_list_iterator::base_list_iterator386,9521
  base_list_iterator(base_list_iterator::base_list_iterator390,9592
  inline void init(base_list_iterator::init393,9658
  inline void *next(base_list_iterator::next401,9782
  inline void *next_fast(base_list_iterator::next_fast408,9897
  inline void rewind(base_list_iterator::rewind415,10012
  inline void *replace(base_list_iterator::replace419,10069
  void *replace(base_list_iterator::replace426,10251
  inline void remove(base_list_iterator::remove440,10680
  void after(base_list_iterator::after446,10804
  inline void **ref(base_list_iterator::ref452,10959
  inline bool is_last(base_list_iterator::is_last456,11047
template <class T> class List 463,11165
  inline List(List::List466,11223
  inline List(List::List467,11255
  inline List(List::List468,11308
  inline bool push_back(List::push_back470,11396
  inline bool push_back(List::push_back471,11462
  inline bool push_front(List::push_front473,11560
  inline T* head(List::head474,11628
  inline T** head_ref(List::head_ref475,11681
  inline T* pop(List::pop476,11744
  inline void concat(List::concat477,11796
  inline void disjoin(List::disjoin478,11861
  inline void prepand(List::prepand479,11928
  void delete_elements(List::delete_elements480,11995
template <class T> class List_iterator 493,12214
  List_iterator(List_iterator::List_iterator496,12290
  List_iterator(List_iterator::List_iterator497,12345
  inline void init(List_iterator::init498,12389
  inline T* operator++(List_iterator::operator++499,12453
  inline T *replace(List_iterator::replace500,12525
  inline T *replace(List_iterator::replace501,12601
  inline void rewind(List_iterator::rewind502,12681
  inline void remove(List_iterator::remove503,12743
  inline void after(List_iterator::after504,12805
  inline T** ref(List_iterator::ref505,12867
template <class T> class List_iterator_fast 509,12943
  inline T *replace(List_iterator_fast::replace512,13027
  inline T *replace(List_iterator_fast::replace513,13074
  inline void remove(List_iterator_fast::remove514,13125
  inline void after(List_iterator_fast::after515,13157
  inline T** ref(List_iterator_fast::ref516,13189
  inline List_iterator_fast(List_iterator_fast::List_iterator_fast519,13245
  inline List_iterator_fast(List_iterator_fast::List_iterator_fast520,13312
  inline void init(List_iterator_fast::init521,13368
  inline T* operator++(List_iterator_fast::operator++522,13432
  inline void rewind(List_iterator_fast::rewind523,13509
  void sublist(List_iterator_fast::sublist524,13571
struct ilink536,13789
  static void *operator new(ilink::operator new539,13833
  static void operator delete(ilink::operator delete543,13970
  inline ilink(ilink::ilink548,14060
  inline void unlink(ilink::unlink552,14105
  virtual ~ilink(ilink::~ilink559,14279
class i_string:i_string565,14409
  i_string(i_string::i_string569,14467
  i_string(i_string::i_string570,14491
class i_string_pair:i_string_pair574,14602
  i_string_pair(i_string_pair::i_string_pair579,14684
  i_string_pair(i_string_pair::i_string_pair580,14720
class base_ilist588,14863
  inline void empty(base_ilist::empty593,14934
  base_ilist(base_ilist::base_ilist594,14993
  inline bool is_empty(base_ilist::is_empty595,15021
  inline bool is_last(base_ilist::is_last598,15178
  inline void append(base_ilist::append599,15258
  inline void push_back(base_ilist::push_back604,15369
  inline struct ilink *get(base_ilist::get611,15499
  inline struct ilink *head(base_ilist::head619,15688
  void move_elements_to(base_ilist::move_elements_to631,15982
class base_ilist_iterator651,16470
  base_ilist_iterator(base_ilist_iterator::base_ilist_iterator656,16556
  void *next(base_ilist_iterator::next658,16656
class I_List 670,16872
  I_List(I_List::I_List673,16915
  inline bool is_last(I_List::is_last674,16943
  inline void empty(I_List::empty675,17010
  inline bool is_empty(I_List::is_empty676,17058
  inline void append(I_List::append677,17126
  inline void push_back(I_List::push_back678,17180
  inline T* get(I_List::get679,17240
  inline T* head(I_List::head680,17294
  inline void move_elements_to(I_List::move_elements_to681,17350
template <class T> class I_List_iterator 690,17515
  I_List_iterator(I_List_iterator::I_List_iterator693,17594
  inline T* operator++(I_List_iterator::operator++694,17654
list_copy_and_replace_each_value(715,18335

sql/sql_load.h,33
#define SQL_LOAD_INCLUDED17,772

sql/sql_locale.h,211
#define SQL_LOCALE_INCLUDED17,774
typedef struct my_locale_errmsgs19,803
} MY_LOCALE_ERRMSGS;23,886
typedef struct st_typelib TYPELIB;27,968
class MY_LOCALE29,1004
  MY_LOCALE(MY_LOCALE::MY_LOCALE46,1369

sql/sql_manager.h,36
#define SQL_MANAGER_INCLUDED17,775

sql/sql_parse.h,1006
#define SQL_PARSE_INCLUDED17,773
enum enum_mysql_completiontype 31,1089
  ROLLBACK_RELEASE=enum_mysql_completiontype::ROLLBACK_RELEASE32,1122
  ROLLBACK_RELEASE=-2, ROLLBACK=enum_mysql_completiontype::ROLLBACK32,1122
  ROLLBACK_RELEASE=-2, ROLLBACK=1,  ROLLBACK_AND_CHAIN=enum_mysql_completiontype::ROLLBACK_AND_CHAIN32,1122
  COMMIT_RELEASE=enum_mysql_completiontype::COMMIT_RELEASE33,1180
  COMMIT_RELEASE=-1,   COMMIT=enum_mysql_completiontype::COMMIT33,1180
  COMMIT_RELEASE=-1,   COMMIT=0,    COMMIT_AND_CHAIN=enum_mysql_completiontype::COMMIT_AND_CHAIN33,1180
inline bool check_identifier_name(139,5927
inline bool check_identifier_name(144,6064
inline bool check_one_table_access(165,7094
inline bool check_single_table_access(167,7194
inline bool check_routine_access(170,7319
inline bool check_some_access(173,7482
inline bool check_some_routine_access(178,7619
inline bool check_access(181,7771
check_table_access(189,7980
inline bool is_supported_parser_charset(200,8345

sql/sql_partition.h,1028
#define SQL_PARTITION_INCLUDED2,31
typedef struct st_bitmap MY_BITMAP;33,1114
typedef struct st_ha_create_information HA_CREATE_INFO;34,1150
typedef struct st_key KEY;35,1206
typedef struct st_key_range key_range;36,1233
#define HA_CAN_PARTITION 39,1308
#define HA_CAN_UPDATE_PARTITION_KEY 40,1372
#define HA_CAN_PARTITION_UNIQUE 41,1417
#define HA_USE_AUTO_PARTITION 42,1458
#define NORMAL_PART_NAME 44,1498
#define TEMP_PART_NAME 45,1525
#define RENAMED_PART_NAME 46,1550
typedef struct st_lock_param_type48,1579
} ALTER_PARTITION_PARAM_TYPE;66,1968
} LIST_PART_ENTRY;71,2062
} part_id_range;76,2139
#define NOT_A_PARTITION_ID 79,2183
typedef uint32 (*partition_iter_func)partition_iter_func152,5933
typedef struct st_partition_iter170,6513
  struct st_part_num_rangest_partition_iter::st_part_num_range178,6777
  struct st_field_value_rangest_partition_iter::st_field_value_range185,6864
} PARTITION_ITERATOR;198,7095
typedef int (*get_partitions_in_range_iter)get_partitions_in_range_iter239,8773

sql/sql_partition_admin.h,3520
#define SQL_PARTITION_ADMIN_H17,769
class Partition_statement_unsupported 25,932
  Partition_statement_unsupported(Partition_statement_unsupported::Partition_statement_unsupported28,1003
  ~Partition_statement_unsupported(Partition_statement_unsupported::~Partition_statement_unsupported32,1078
class Alter_table_analyze_partition_statement 39,1152
  Alter_table_analyze_partition_statement(Alter_table_analyze_partition_statement::Alter_table_analyze_partition_statement43,1251
  ~Alter_table_analyze_partition_statement(Alter_table_analyze_partition_statement::~Alter_table_analyze_partition_statement47,1352
class Alter_table_check_partition_statement 52,1407
  Alter_table_check_partition_statement(Alter_table_check_partition_statement::Alter_table_check_partition_statement56,1504
  ~Alter_table_check_partition_statement(Alter_table_check_partition_statement::~Alter_table_check_partition_statement60,1603
class Alter_table_optimize_partition_statement 65,1656
  Alter_table_optimize_partition_statement(Alter_table_optimize_partition_statement::Alter_table_optimize_partition_statement69,1756
  ~Alter_table_optimize_partition_statement(Alter_table_optimize_partition_statement::~Alter_table_optimize_partition_statement73,1858
class Alter_table_repair_partition_statement 78,1914
  Alter_table_repair_partition_statement(Alter_table_repair_partition_statement::Alter_table_repair_partition_statement82,2012
  ~Alter_table_repair_partition_statement(Alter_table_repair_partition_statement::~Alter_table_repair_partition_statement86,2112
class Alter_table_truncate_partition_statement 91,2166
  Alter_table_truncate_partition_statement(Alter_table_truncate_partition_statement::Alter_table_truncate_partition_statement95,2266
  ~Alter_table_truncate_partition_statement(Alter_table_truncate_partition_statement::~Alter_table_truncate_partition_statement99,2368
class Alter_table_analyze_partition_statement 109,2512
  Alter_table_analyze_partition_statement(Alter_table_analyze_partition_statement::Alter_table_analyze_partition_statement116,2743
  ~Alter_table_analyze_partition_statement(Alter_table_analyze_partition_statement::~Alter_table_analyze_partition_statement120,2836
class Alter_table_check_partition_statement 135,3139
  Alter_table_check_partition_statement(Alter_table_check_partition_statement::Alter_table_check_partition_statement142,3364
  ~Alter_table_check_partition_statement(Alter_table_check_partition_statement::~Alter_table_check_partition_statement146,3453
class Alter_table_optimize_partition_statement 161,3755
  Alter_table_optimize_partition_statement(Alter_table_optimize_partition_statement::Alter_table_optimize_partition_statement168,3989
  ~Alter_table_optimize_partition_statement(Alter_table_optimize_partition_statement::~Alter_table_optimize_partition_statement172,4084
class Alter_table_repair_partition_statement 187,4390
  Alter_table_repair_partition_statement(Alter_table_repair_partition_statement::Alter_table_repair_partition_statement194,4618
  ~Alter_table_repair_partition_statement(Alter_table_repair_partition_statement::~Alter_table_repair_partition_statement198,4709
class Alter_table_truncate_partition_statement 213,5013
  Alter_table_truncate_partition_statement(Alter_table_truncate_partition_statement::Alter_table_truncate_partition_statement220,5236
  virtual ~Alter_table_truncate_partition_statement(Alter_table_truncate_partition_statement::~Alter_table_truncate_partition_statement224,5320

sql/sql_plist.h,1851
#define SQL_PLIST_H2,20
template <typename T,21,810
template <typename T, typename B,21,810
template <typename T, typename B, typename C,21,810
template <typename T,64,2397
template <typename T, typename B,64,2397
          typename C 65,2431
  typedef I_P_List_iterator<T, B, C, I> Iterator;157,4602
template <typename T,165,4691
template <typename T, typename B,165,4691
          typename C 166,4725
  inline T* operator++(182,5197
  inline T* operator++(189,5330
template <typename T,206,5611
template <typename T, T* T::*next,next206,5611
struct I_P_List_adapter207,5660
  static inline T **next_ptr(I_P_List_adapter::next_ptr209,5686
  static inline T ***prev_ptr(I_P_List_adapter::prev_ptr211,5748
class I_P_List_null_counter220,5931
  void reset(I_P_List_null_counter::reset223,5972
  void inc(I_P_List_null_counter::inc224,5990
  void dec(I_P_List_null_counter::dec225,6006
  void swap(I_P_List_null_counter::swap226,6022
class I_P_List_counter235,6164
  I_P_List_counter(I_P_List_counter::I_P_List_counter239,6218
  void reset(I_P_List_counter::reset240,6258
  void inc(I_P_List_counter::inc241,6289
  void dec(I_P_List_counter::dec242,6317
  void swap(I_P_List_counter::swap243,6345
  uint elements(I_P_List_counter::elements246,6442
template <typename T> class I_P_List_no_push_back255,6613
  I_P_List_no_push_back(I_P_List_no_push_back::I_P_List_no_push_back258,6676
  void set_last(I_P_List_no_push_back::set_last259,6711
  void swap(I_P_List_no_push_back::swap265,6904
template <typename T> class I_P_List_fast_push_back274,7069
  I_P_List_fast_push_back(I_P_List_fast_push_back::I_P_List_fast_push_back278,7148
  void set_last(I_P_List_fast_push_back::set_last279,7198
  T** get_last(I_P_List_fast_push_back::get_last280,7236
  void swap(I_P_List_fast_push_back::swap281,7278

sql/sql_plugin.h,2510
#define _sql_plugin_h17,767
#define SHOW_always_last 25,924
#undef SHOW_always_last30,1207
enum SHOW_COMP_OPTION 36,1368
enum SHOW_COMP_OPTION { SHOW_OPTION_YES,SHOW_COMP_OPTION::SHOW_OPTION_YES36,1368
enum SHOW_COMP_OPTION { SHOW_OPTION_YES, SHOW_OPTION_NO,SHOW_COMP_OPTION::SHOW_OPTION_NO36,1368
enum SHOW_COMP_OPTION { SHOW_OPTION_YES, SHOW_OPTION_NO, SHOW_OPTION_DISABLED}SHOW_COMP_OPTION::SHOW_OPTION_DISABLED36,1368
enum enum_plugin_load_option 37,1448
enum enum_plugin_load_option { PLUGIN_OFF,enum_plugin_load_option::PLUGIN_OFF37,1448
enum enum_plugin_load_option { PLUGIN_OFF, PLUGIN_ON,enum_plugin_load_option::PLUGIN_ON37,1448
enum enum_plugin_load_option { PLUGIN_OFF, PLUGIN_ON, PLUGIN_FORCE,enum_plugin_load_option::PLUGIN_FORCE37,1448
  PLUGIN_FORCE_PLUS_PERMANENT enum_plugin_load_option::PLUGIN_FORCE_PLUS_PERMANENT38,1516
#define plugin_ref_to_int(44,1637
#define plugin_int_to_ref(45,1668
#define plugin_ref_to_int(47,1705
#define plugin_int_to_ref(48,1752
#define PLUGIN_INIT_SKIP_DYNAMIC_LOADING 54,1850
#define PLUGIN_INIT_SKIP_PLUGIN_TABLE 55,1893
#define PLUGIN_INIT_SKIP_INITIALIZATION 56,1936
#define INITIAL_LEX_PLUGIN_LIST_SIZE 58,1980
typedef enum enum_mysql_show_type SHOW_TYPE;60,2024
typedef struct st_mysql_show_var SHOW_VAR;61,2069
typedef struct st_mysql_lex_string LEX_STRING;62,2112
#define MYSQL_ANY_PLUGIN 64,2160
#define PLUGIN_IS_FREED 73,2457
#define PLUGIN_IS_DELETED 74,2491
#define PLUGIN_IS_UNINITIALIZED 75,2525
#define PLUGIN_IS_READY 76,2559
#define PLUGIN_IS_DYING 77,2593
#define PLUGIN_IS_DISABLED 78,2628
struct st_plugin_dl82,2736
struct st_plugin_int93,2950
typedef struct st_plugin_int *plugin_ref;plugin_ref112,3569
#define plugin_decl(113,3611
#define plugin_dlib(114,3650
#define plugin_data(115,3692
#define plugin_name(116,3742
#define plugin_state(117,3782
#define plugin_load_option(118,3821
#define plugin_equals(119,3872
typedef struct st_plugin_int **plugin_ref;plugin_ref121,3922
#define plugin_decl(122,3965
#define plugin_dlib(123,4007
#define plugin_data(124,4052
#define plugin_name(125,4105
#define plugin_state(126,4148
#define plugin_load_option(127,4190
#define plugin_equals(128,4244
typedef int (*plugin_type_init)plugin_type_init131,4318
#define my_plugin_lock_by_name(142,4755
#define my_plugin_lock_by_name_ci(143,4820
#define my_plugin_lock(144,4888
#define my_plugin_lock_ci(145,4933
typedef my_bool (plugin_foreach_func)160,5780
#define plugin_foreach(163,5935

sql/sql_plugin_services.h,367
struct st_service_ref 19,803
static struct my_snprintf_service_st my_snprintf_handler 25,884
static struct thd_alloc_service_st thd_alloc_handler=30,979
static struct thd_wait_service_st thd_wait_handler=39,1131
static struct my_thread_scheduler_service my_thread_scheduler_handler=44,1222
static struct st_service_ref list_of_services[list_of_services50,1356

sql/sql_prepare.h,1592
#define SQL_PREPARE_H2,22
class Reprepare_observer52,1940
  bool is_invalidated(Reprepare_observer::is_invalidated62,2252
  void reset_reprepare_observer(Reprepare_observer::reset_reprepare_observer63,2308
class Server_runnable87,3204
class Ed_result_set:Ed_result_set109,3562
  operator List<Ed_row>&(Ed_result_set::operator List<Ed_row>&112,3610
  unsigned int size(Ed_result_set::size113,3657
  ~Ed_result_set(Ed_result_set::~Ed_result_set119,3885
  size_t get_field_count(Ed_result_set::get_field_count121,3908
class Ed_connection136,4326
  ulong get_field_count(Ed_connection::get_field_count218,7018
  ulonglong get_affected_rows(Ed_connection::get_affected_rows231,7352
  ulonglong get_last_insert_id(Ed_connection::get_last_insert_id241,7539
  ulong get_warn_count(Ed_connection::get_warn_count254,7880
  List<MYSQL_ERROR> *get_warn_list(Ed_connection::get_warn_list265,8154
  const char *get_last_error(Ed_connection::get_last_error272,8464
  unsigned int get_last_errno(Ed_connection::get_last_errno273,8542
  const char *get_last_sqlstate(Ed_connection::get_last_sqlstate274,8623
  Ed_result_set *use_result_set(Ed_connection::use_result_set284,9078
  bool has_next_result(Ed_connection::has_next_result300,9591
  bool move_to_next_result(Ed_connection::move_to_next_result305,9777
  ~Ed_connection(Ed_connection::~Ed_connection311,9897
struct Ed_column:Ed_column337,10724
class Ed_row:Ed_row345,10871
  const Ed_column *get_column(Ed_row::get_column352,11027
  size_t size(Ed_row::size357,11186
  Ed_row(Ed_row::Ed_row359,11236

sql/sql_priv.h,3664
#define SQL_PRIV_INCLUDED27,1082
#define WARN_DEPRECATED(48,1611
#define SELECT_DISTINCT 84,3274
#define SELECT_STRAIGHT_JOIN 85,3338
#define SELECT_DESCRIBE 86,3402
#define SELECT_SMALL_RESULT 87,3466
#define SELECT_BIG_RESULT 88,3530
#define OPTION_FOUND_ROWS 89,3594
#define OPTION_TO_QUERY_CACHE 90,3658
#define SELECT_NO_JOIN_CACHE 91,3722
#define OPTION_AUTOCOMMIT 93,3864
#define OPTION_BIG_SELECTS 94,3924
#define OPTION_LOG_OFF 95,3985
#define OPTION_QUOTE_SHOW_CREATE 96,4046
#define TMP_TABLE_ALL_COLUMNS 97,4115
#define OPTION_WARNINGS 98,4181
#define OPTION_AUTO_IS_NULL 99,4242
#define OPTION_FOUND_COMMENT 100,4311
#define OPTION_SAFE_UPDATES 101,4385
#define OPTION_BUFFER_RESULT 102,4446
#define OPTION_BIN_LOG 103,4510
#define OPTION_NOT_AUTOCOMMIT 104,4571
#define OPTION_BEGIN 105,4632
#define OPTION_TABLE_LOCK 106,4695
#define OPTION_QUICK 107,4758
#define OPTION_KEEP_LOG 108,4829
#define SELECT_ALL 111,4954
#define OPTION_NO_FOREIGN_KEY_CHECKS 114,5133
#define OPTION_RELAXED_UNIQUE_CHECKS 117,5313
#define SELECT_NO_UNLOCK 118,5387
#define OPTION_SCHEMA_TABLE 119,5458
#define OPTION_SETUP_TABLES_DONE 121,5574
#define OPTION_SQL_NOTES 123,5714
#define TMP_TABLE_FORCE_MYISAM 128,5905
#define OPTION_PROFILING 129,5958
#define SELECT_HIGH_PRIORITY 135,6173
#define OPTION_MASTER_SQL_ERROR 145,6593
#define OPTION_ALLOW_BATCH 152,6782
template <class T> T available_buffer(163,7131
template <class T> bool valid_buffer_range(181,7714
#define OPTIMIZER_SWITCH_INDEX_MERGE 193,8192
#define OPTIMIZER_SWITCH_INDEX_MERGE_UNION 194,8255
#define OPTIMIZER_SWITCH_INDEX_MERGE_SORT_UNION 195,8318
#define OPTIMIZER_SWITCH_INDEX_MERGE_INTERSECT 196,8381
#define OPTIMIZER_SWITCH_ENGINE_CONDITION_PUSHDOWN 197,8444
#define OPTIMIZER_SWITCH_LAST 198,8507
#define OPTIMIZER_SWITCH_DEFAULT 201,8651
#define CONTEXT_ANALYSIS_ONLY_PREPARE 232,9838
#define CONTEXT_ANALYSIS_ONLY_VIEW 240,10200
#define CONTEXT_ANALYSIS_ONLY_DERIVED 245,10337
#define UNCACHEABLE_DEPENDENT 248,10398
#define UNCACHEABLE_RAND 249,10432
#define UNCACHEABLE_SIDEEFFECT	250,10466
#define UNCACHEABLE_EXPLAIN 252,10536
#define UNCACHEABLE_UNITED 254,10641
#define UNCACHEABLE_CHECKOPTION 255,10675
#define UNDEF_POS 258,10781
#define BINLOG_DUMP_NON_BLOCK 262,10832
#define IS_EQUAL_NO 267,10935
#define IS_EQUAL_YES 268,10957
#define IS_EQUAL_PACK_LENGTH 269,10980
enum enum_parsing_place271,11012
  NO_MATTER,enum_parsing_place::NO_MATTER273,11038
  IN_HAVING,enum_parsing_place::IN_HAVING274,11051
  SELECT_LIST,enum_parsing_place::SELECT_LIST275,11064
  IN_WHERE,enum_parsing_place::IN_WHERE276,11079
  IN_ONenum_parsing_place::IN_ON277,11091
enum enum_var_type281,11104
  OPT_DEFAULT=enum_var_type::OPT_DEFAULT283,11125
  OPT_DEFAULT= 0, OPT_SESSION,enum_var_type::OPT_SESSION283,11125
  OPT_DEFAULT= 0, OPT_SESSION, OPT_GLOBALenum_var_type::OPT_GLOBAL283,11125
enum enum_yes_no_unknown288,11187
  TVL_YES,enum_yes_no_unknown::TVL_YES290,11214
  TVL_YES, TVL_NO,enum_yes_no_unknown::TVL_NO290,11214
  TVL_YES, TVL_NO, TVL_UNKNOWNenum_yes_no_unknown::TVL_UNKNOWN290,11214
inline int hexchar_to_int(312,11468
#define ER_NOT_RW_DIR_PATHSIZE 323,11700
#define IS_TABLESPACES_TABLESPACE_NAME 325,11736
#define IS_TABLESPACES_ENGINE 326,11780
#define IS_TABLESPACES_TABLESPACE_TYPE 327,11824
#define IS_TABLESPACES_LOGFILE_GROUP_NAME 328,11868
#define IS_TABLESPACES_EXTENT_SIZE 329,11912
#define IS_TABLESPACES_AUTOEXTEND_SIZE 330,11956
#define IS_TABLESPACES_MAXIMUM_SIZE 331,12000
#define IS_TABLESPACES_NODEGROUP_ID 332,12044
#define IS_TABLESPACES_TABLESPACE_COMMENT 333,12088

sql/sql_profile.h,1076
#define _SQL_PROFILE_H17,768
typedef struct st_field_info ST_FIELD_INFO;22,834
typedef struct st_schema_table ST_SCHEMA_TABLE;23,878
#define PROFILE_NONE 30,1139
#define PROFILE_CPU 31,1176
#define PROFILE_MEMORY 32,1218
#define PROFILE_BLOCK_IO 33,1260
#define PROFILE_CONTEXT 34,1302
#define PROFILE_PAGE_FAULTS 35,1344
#define PROFILE_IPC 36,1386
#define PROFILE_SWAPS 37,1428
#define PROFILE_SOURCE 38,1470
#define PROFILE_ALL 39,1513
template <class T> class Queue60,1895
  struct queue_itemQueue::queue_item64,1938
  Queue(Queue::Queue73,2068
  void empty(Queue::empty79,2127
  void push_back(Queue::push_back92,2379
  T *pop(Queue::pop114,2807
  bool is_empty(Queue::is_empty138,3216
  void *new_iterator(Queue::new_iterator144,3365
  void *iterator_next(Queue::iterator_next149,3415
  T *iterator_value(Queue::iterator_value154,3511
class PROF_MEASUREMENT165,3658
class QUERY_PROFILE205,4585
class PROFILING242,5478
  query_id_t next_profile_id(PROFILING::next_profile_id260,5811
  inline void set_thd(PROFILING::set_thd277,6278

sql/sql_reload.h,33
#define SQL_RELOAD_INCLUDED2,28

sql/sql_rename.h,35
#define SQL_RENAME_INCLUDED17,774

sql/sql_repl.h,158
#define SQL_REPL_INCLUDED17,771
typedef struct st_slave_info24,867
} SLAVE_INFO;33,1088
typedef struct st_load_file_info57,1984
} LOAD_FILE_INFO;62,2099

sql/sql_select.h,4604
#define SQL_SELECT_INCLUDED2,28
typedef struct keyuse_t 38,1198
} KEYUSE;61,2040
typedef struct st_table_ref65,2069
} TABLE_REF;102,3672
#define CACHE_BLOB 106,3688
#define CACHE_STRIPPED 107,3739
typedef struct st_cache_field 114,3905
} CACHE_FIELD;119,4075
typedef struct st_join_cache 122,4092
} JOIN_CACHE;127,4260
enum join_type 133,4345
enum join_type { JT_UNKNOWN,join_type::JT_UNKNOWN133,4345
enum join_type { JT_UNKNOWN,JT_SYSTEM,join_type::JT_SYSTEM133,4345
enum join_type { JT_UNKNOWN,JT_SYSTEM,JT_CONST,join_type::JT_CONST133,4345
enum join_type { JT_UNKNOWN,JT_SYSTEM,JT_CONST,JT_EQ_REF,join_type::JT_EQ_REF133,4345
enum join_type { JT_UNKNOWN,JT_SYSTEM,JT_CONST,JT_EQ_REF,JT_REF,join_type::JT_REF133,4345
enum join_type { JT_UNKNOWN,JT_SYSTEM,JT_CONST,JT_EQ_REF,JT_REF,JT_MAYBE_REF,join_type::JT_MAYBE_REF133,4345
		 JT_ALL,join_type::JT_ALL134,4423
		 JT_ALL, JT_RANGE,join_type::JT_RANGE134,4423
		 JT_ALL, JT_RANGE, JT_NEXT,join_type::JT_NEXT134,4423
		 JT_ALL, JT_RANGE, JT_NEXT, JT_FT,join_type::JT_FT134,4423
		 JT_ALL, JT_RANGE, JT_NEXT, JT_FT, JT_REF_OR_NULL,join_type::JT_REF_OR_NULL134,4423
		 JT_UNIQUE_SUBQUERY,join_type::JT_UNIQUE_SUBQUERY135,4476
		 JT_UNIQUE_SUBQUERY, JT_INDEX_SUBQUERY,join_type::JT_INDEX_SUBQUERY135,4476
		 JT_UNIQUE_SUBQUERY, JT_INDEX_SUBQUERY, JT_INDEX_MERGE}join_type::JT_INDEX_MERGE135,4476
enum enum_nested_loop_state139,4549
  NESTED_LOOP_KILLED=enum_nested_loop_state::NESTED_LOOP_KILLED141,4579
  NESTED_LOOP_KILLED= -2, NESTED_LOOP_ERROR=enum_nested_loop_state::NESTED_LOOP_ERROR141,4579
  NESTED_LOOP_OK=enum_nested_loop_state::NESTED_LOOP_OK142,4628
  NESTED_LOOP_OK= 0, NESTED_LOOP_NO_MORE_ROWS=enum_nested_loop_state::NESTED_LOOP_NO_MORE_ROWS142,4628
  NESTED_LOOP_QUERY_LIMIT=enum_nested_loop_state::NESTED_LOOP_QUERY_LIMIT143,4678
  NESTED_LOOP_QUERY_LIMIT= 3, NESTED_LOOP_CURSOR_LIMIT=enum_nested_loop_state::NESTED_LOOP_CURSOR_LIMIT143,4678
#define TAB_INFO_HAVE_VALUE 148,4780
#define TAB_INFO_USING_INDEX 149,4810
#define TAB_INFO_USING_WHERE 150,4841
#define TAB_INFO_FULL_SCAN_ON_NULL 151,4872
(*Next_select_func)Next_select_func154,4941
typedef struct st_join_table 158,5054
  st_join_table(st_join_table::st_join_table159,5085
  inline bool is_using_loose_index_scan(st_join_table::is_using_loose_index_scan264,9610
  bool is_using_agg_loose_index_scan st_join_table::is_using_agg_loose_index_scan272,9859
} JOIN_TAB;281,10199
typedef struct st_position292,10565
} POSITION;317,11328
typedef struct st_rollup320,11342
  enum State st_rollup::State322,11369
  enum State { STATE_NONE,st_rollup::State::STATE_NONE322,11369
  enum State { STATE_NONE, STATE_INITED,st_rollup::State::STATE_INITED322,11369
  enum State { STATE_NONE, STATE_INITED, STATE_READY st_rollup::State::STATE_READY322,11369
} ROLLUP;327,11525
class JOIN 330,11537
  JOIN(JOIN::JOIN496,18622
  void init(JOIN::init503,18832
  inline void set_items_ref_array(JOIN::set_items_ref_array574,20833
  inline void init_items_ref_array(JOIN::init_items_ref_array579,20999
  bool send_row_on_empty_set(JOIN::send_row_on_empty_set605,21901
  bool is_top_level_join(JOIN::is_top_level_join611,22107
typedef struct st_select_check 628,22569
} SELECT_CHECK;630,22628
class store_key 669,24479
  enum store_key_result store_key::store_key_result673,24592
  enum store_key_result { STORE_KEY_OK,store_key::store_key_result::STORE_KEY_OK673,24592
  enum store_key_result { STORE_KEY_OK, STORE_KEY_FATAL,store_key::store_key_result::STORE_KEY_FATAL673,24592
  enum store_key_result { STORE_KEY_OK, STORE_KEY_FATAL, STORE_KEY_CONV store_key::store_key_result::STORE_KEY_CONV673,24592
  store_key(store_key::store_key674,24667
  virtual ~store_key(store_key::~store_key693,25415
  enum store_key_result copy(store_key::copy702,25757
class store_key_field:store_key_field729,26398
  store_key_field(store_key_field::store_key_field734,26500
  const char *name(store_key_field::name746,26901
  enum store_key_result copy_inner(store_key_field::copy_inner749,26965
class store_key_item 762,27379
  store_key_item(store_key_item::store_key_item767,27454
  const char *name(store_key_item::name773,27737
  enum store_key_result copy_inner(store_key_item::copy_inner776,27798
class store_key_const_item 796,28520
  store_key_const_item(store_key_const_item::store_key_const_item800,28595
  const char *name(store_key_const_item::name808,28893
  enum store_key_result copy_inner(store_key_const_item::copy_inner811,28954
inline bool optimizer_flag(880,31894

sql/sql_servers.h,211
#define SQL_SERVERS_INCLUDED2,29
typedef struct st_lex_server_options LEX_SERVER_OPTIONS;23,918
typedef struct st_mem_root MEM_ROOT;24,975
typedef struct st_federated_server27,1027
} FOREIGN_SERVER;33,1200

sql/sql_show.h,1972
#define SQL_SHOW_H17,765
typedef class st_select_lex SELECT_LEX;30,1127
typedef st_ha_create_information HA_CREATE_INFO;31,1167
typedef struct st_mysql_show_var SHOW_VAR;33,1228
typedef struct st_schema_table ST_SCHEMA_TABLE;34,1271
typedef struct system_status_var STATUS_VAR;36,1333
enum find_files_result 38,1379
  FIND_FILES_OK,find_files_result::FIND_FILES_OK39,1404
  FIND_FILES_OOM,find_files_result::FIND_FILES_OOM40,1421
  FIND_FILES_DIRfind_files_result::FIND_FILES_DIR41,1439
#define IS_FILES_FILE_ID 45,1516
#define IS_FILES_FILE_NAME 46,1556
#define IS_FILES_FILE_TYPE 47,1596
#define IS_FILES_TABLESPACE_NAME 48,1636
#define IS_FILES_TABLE_CATALOG 49,1676
#define IS_FILES_TABLE_SCHEMA 50,1716
#define IS_FILES_TABLE_NAME 51,1756
#define IS_FILES_LOGFILE_GROUP_NAME 52,1796
#define IS_FILES_LOGFILE_GROUP_NUMBER 53,1836
#define IS_FILES_ENGINE 54,1876
#define IS_FILES_FULLTEXT_KEYS 55,1916
#define IS_FILES_DELETED_ROWS 56,1956
#define IS_FILES_UPDATE_COUNT 57,1996
#define IS_FILES_FREE_EXTENTS 58,2036
#define IS_FILES_TOTAL_EXTENTS 59,2076
#define IS_FILES_EXTENT_SIZE 60,2116
#define IS_FILES_INITIAL_SIZE 61,2156
#define IS_FILES_MAXIMUM_SIZE 62,2196
#define IS_FILES_AUTOEXTEND_SIZE 63,2236
#define IS_FILES_CREATION_TIME 64,2276
#define IS_FILES_LAST_UPDATE_TIME 65,2316
#define IS_FILES_LAST_ACCESS_TIME 66,2356
#define IS_FILES_RECOVER_TIME 67,2396
#define IS_FILES_TRANSACTION_COUNTER 68,2436
#define IS_FILES_VERSION 69,2476
#define IS_FILES_ROW_FORMAT 70,2516
#define IS_FILES_TABLE_ROWS 71,2556
#define IS_FILES_AVG_ROW_LENGTH 72,2596
#define IS_FILES_DATA_LENGTH 73,2636
#define IS_FILES_MAX_DATA_LENGTH 74,2676
#define IS_FILES_INDEX_LENGTH 75,2716
#define IS_FILES_DATA_FREE 76,2756
#define IS_FILES_CREATE_TIME 77,2796
#define IS_FILES_UPDATE_TIME 78,2836
#define IS_FILES_CHECK_TIME 79,2876
#define IS_FILES_CHECKSUM 80,2916
#define IS_FILES_STATUS 81,2956
#define IS_FILES_EXTRA 82,2996

sql/sql_signal.h,529
#define SQL_SIGNAL_H18,782
class Signal_common 24,901
  Signal_common(Signal_common::Signal_common33,1158
  virtual ~Signal_common(Signal_common::~Signal_common41,1367
class Signal_statement 97,2986
  Signal_statement(Signal_statement::Signal_statement106,3281
  virtual ~Signal_statement(Signal_statement::~Signal_statement112,3447
class Resignal_statement 126,3701
  Resignal_statement(Resignal_statement::Resignal_statement135,4017
  virtual ~Resignal_statement(Resignal_statement::~Resignal_statement141,4195

sql/sql_sort.h,440
#define SQL_SORT_INCLUDED2,26
typedef struct st_buffpek BUFFPEK;23,986
typedef struct st_queue QUEUE;24,1021
typedef struct st_sort_field SORT_FIELD;25,1052
#define MERGEBUFF	33,1167
#define MERGEBUFF2	34,1188
typedef struct st_sort_addon_field 52,1995
} SORT_ADDON_FIELD;58,2370
typedef struct st_buffpek 60,2391
} BUFFPEK;66,2706
struct BUFFPEK_COMPARE_CONTEXT68,2718
typedef struct st_sort_param 74,2806
} SORTPARAM;92,3570

sql/sql_string.h,2559
#define SQL_STRING_INCLUDED2,28
typedef struct charset_info_st CHARSET_INFO;30,1179
typedef struct st_io_cache IO_CACHE;31,1224
typedef struct st_mem_root MEM_ROOT;32,1261
class String54,2413
  String(String::String61,2530
  String(String::String66,2637
  String(String::String71,2773
  String(String::String76,2927
  String(String::String81,3077
  String(String::String86,3218
  static void *operator new(String::operator new92,3385
  static void operator delete(String::operator delete94,3511
  static void operator delete(String::operator delete100,3640
  ~String(String::~String102,3715
  inline void set_charset(String::set_charset104,3740
  inline CHARSET_INFO *charset(String::charset106,3825
  inline uint32 length(String::length107,3888
  inline uint32 alloced_length(String::alloced_length108,3941
  inline char& operator [] String::operator []109,4006
  inline void length(String::length110,4069
  inline bool is_empty(String::is_empty111,4123
  inline void mark_as_const(String::mark_as_const112,4184
  inline const char *ptr(String::ptr113,4236
  inline char *c_ptr(String::c_ptr114,4285
  inline char *c_ptr_quick(String::c_ptr_quick123,4533
  inline char *c_ptr_safe(String::c_ptr_safe129,4655
  LEX_STRING lex_string(String::lex_string137,4819
  void set(String::set143,4940
  inline void set(String::set164,5618
  inline void set(String::set170,5794
  inline void set_quick(String::set_quick177,6033
  bool set(String::set186,6291
  bool set(String::set188,6372
  inline void chop(String::chop214,7247
  inline void free(String::free219,7307
  inline bool alloc(String::alloc230,7475
  inline void shrink(String::shrink240,7773
  bool is_alloced(String::is_alloced259,8123
  inline String& operator = String::operator =260,8169
  bool append(String::append290,9246
  inline bool append(String::append304,9958
  int reserve(String::reserve326,10511
  void q_append(String::q_append337,10838
  void q_append(String::q_append341,10903
  void q_append(String::q_append346,11000
  void q_append(String::q_append351,11093
  void q_append(String::q_append356,11188
  void write_at_position(String::write_at_position362,11322
  inline void qs_append(String::qs_append370,11525
  inline char *prep_append(String::prep_append380,11734
  inline bool append(String::append393,12079
  inline bool uses_buffer_owned_by(String::uses_buffer_owned_by407,12526
  bool is_ascii(String::is_ascii411,12666
static inline bool check_if_only_end_space(426,12940

sql/sql_table.h,1944
#define SQL_TABLE_INCLUDED17,773
typedef struct st_ha_check_opt HA_CHECK_OPT;28,1032
typedef struct st_ha_create_information HA_CREATE_INFO;29,1077
typedef struct st_key KEY;30,1133
typedef struct st_key_cache KEY_CACHE;31,1160
typedef struct st_lock_param_type ALTER_PARTITION_PARAM_TYPE;32,1199
typedef struct st_mysql_lex_string LEX_STRING;33,1261
typedef struct st_order ORDER;34,1308
enum ddl_log_entry_code37,1372
  DDL_LOG_EXECUTE_CODE ddl_log_entry_code::DDL_LOG_EXECUTE_CODE50,1767
  DDL_LOG_ENTRY_CODE ddl_log_entry_code::DDL_LOG_ENTRY_CODE51,1797
  DDL_IGNORE_LOG_ENTRY_CODE ddl_log_entry_code::DDL_IGNORE_LOG_ENTRY_CODE52,1825
enum ddl_log_action_code55,1863
  DDL_LOG_DELETE_ACTION ddl_log_action_code::DDL_LOG_DELETE_ACTION68,2212
  DDL_LOG_RENAME_ACTION ddl_log_action_code::DDL_LOG_RENAME_ACTION69,2243
  DDL_LOG_REPLACE_ACTION ddl_log_action_code::DDL_LOG_REPLACE_ACTION70,2274
typedef struct st_ddl_log_entry74,2310
} DDL_LOG_ENTRY;90,2784
typedef struct st_ddl_log_memory_entry92,2802
} DDL_LOG_MEMORY_ENTRY;98,3018
enum enum_explain_filename_mode101,3044
  EXPLAIN_ALL_VERBOSE=enum_explain_filename_mode::EXPLAIN_ALL_VERBOSE103,3078
  EXPLAIN_PARTITIONS_VERBOSE,enum_explain_filename_mode::EXPLAIN_PARTITIONS_VERBOSE104,3104
  EXPLAIN_PARTITIONS_AS_COMMENTenum_explain_filename_mode::EXPLAIN_PARTITIONS_AS_COMMENT105,3134
#define EXPLAIN_FILENAME_MAX_EXTRA_LENGTH 109,3227
#define MYSQL50_TABLE_NAME_PREFIX 111,3273
#define MYSQL50_TABLE_NAME_PREFIX_LENGTH 112,3327
#define WFRM_WRITE_SHADOW 114,3372
#define WFRM_INSTALL_SHADOW 115,3400
#define WFRM_PACK_FRM 116,3430
#define WFRM_KEEP_SHARE 117,3454
static const uint FN_FROM_IS_TMP=120,3519
static const uint FN_TO_IS_TMP=121,3562
static const uint FN_IS_TMP=122,3605
static const uint NO_FRM_RENAME=123,3671
static const uint FRM_ONLY=124,3714
static const uint NO_FK_CHECKS=126,3821
static const uint NO_HA_TABLE=128,3940

sql/sql_tablespace.h,39
#define SQL_TABLESPACE_INCLUDED17,778

sql/sql_test.h,160
#define SQL_TEST_INCLUDED17,772
typedef class Item COND;23,851
typedef class st_select_lex SELECT_LEX;24,876
typedef struct st_sort_field SORT_FIELD;25,916

sql/sql_time.h,372
#define SQL_TIME_INCLUDED17,772
typedef enum enum_mysql_timestamp_type timestamp_type;25,1079
typedef struct st_date_time_format DATE_TIME_FORMAT;26,1134
typedef struct st_known_date_time_format KNOWN_DATE_TIME_FORMAT;27,1187
#define WEEK_MONDAY_FIRST 30,1292
#define WEEK_YEAR 31,1323
#define WEEK_FIRST_WEEKDAY 32,1354
inline bool parse_date_time_format(85,4136

sql/sql_trigger.h,956
#define SQL_TRIGGER_INCLUDED2,29
enum trg_event_type30,1003
  TRG_EVENT_INSERT=trg_event_type::TRG_EVENT_INSERT32,1025
  TRG_EVENT_UPDATE=trg_event_type::TRG_EVENT_UPDATE33,1048
  TRG_EVENT_DELETE=trg_event_type::TRG_EVENT_DELETE34,1071
  TRG_EVENT_MAXtrg_event_type::TRG_EVENT_MAX35,1094
enum trg_action_time_type47,1405
  TRG_ACTION_BEFORE=trg_action_time_type::TRG_ACTION_BEFORE49,1433
  TRG_ACTION_BEFORE= 0, TRG_ACTION_AFTER=trg_action_time_type::TRG_ACTION_AFTER49,1433
  TRG_ACTION_BEFORE= 0, TRG_ACTION_AFTER= 1, TRG_ACTION_MAXtrg_action_time_type::TRG_ACTION_MAX49,1433
class Table_triggers_list:Table_triggers_list59,1618
  Table_triggers_list(Table_triggers_list::Table_triggers_list143,4575
  bool has_triggers(Table_triggers_list::has_triggers187,6574
  bool has_delete_triggers(Table_triggers_list::has_delete_triggers192,6738
  bool check_for_broken_triggers(Table_triggers_list::check_for_broken_triggers222,7910

sql/sql_truncate.h,216
#define SQL_TRUNCATE_INCLUDED2,30
class Truncate_statement 24,893
  Truncate_statement(Truncate_statement::Truncate_statement35,1184
  virtual ~Truncate_statement(Truncate_statement::~Truncate_statement39,1246

sql/sql_udf.h,990
#define SQL_UDF_INCLUDED2,25
enum Item_udftype 27,938
enum Item_udftype {UDFTYPE_FUNCTION=UDFTYPE_FUNCTION27,938
enum Item_udftype {UDFTYPE_FUNCTION=1,UDFTYPE_AGGREGATE}UDFTYPE_AGGREGATE27,938
typedef void (*Udf_func_clear)Udf_func_clear29,997
typedef void (*Udf_func_add)Udf_func_add30,1059
typedef void (*Udf_func_deinit)Udf_func_deinit31,1131
typedef my_bool (*Udf_func_init)Udf_func_init32,1175
typedef void (*Udf_func_any)Udf_func_any33,1242
typedef double (*Udf_func_double)Udf_func_double34,1274
typedef longlong (*Udf_func_longlong)Udf_func_longlong35,1351
typedef struct st_udf_func38,1471
} udf_func;51,1747
class udf_handler 55,1786
  udf_handler(udf_handler::udf_handler71,2076
  const char *name(udf_handler::name75,2217
  Item_result result_type udf_handler::result_type76,2282
  double val(udf_handler::val82,2494
  longlong val_int(udf_handler::val_int100,2852
  void clear(udf_handler::clear119,3295
  void add(udf_handler::add125,3413

sql/sql_union.h,91
#define SQL_UNION_INCLUDED17,773
typedef class st_select_lex_unit SELECT_LEX_UNIT;25,907

sql/sql_update.h,139
#define SQL_UPDATE_INCLUDED17,774
typedef class st_select_lex SELECT_LEX;25,917
typedef class st_select_lex_unit SELECT_LEX_UNIT;26,957

sql/sql_view.h,61
#define SQL_VIEW_INCLUDED2,26
#define VIEW_ANY_ACL 54,1861

sql/strfunc.h,180
#define STRFUNC_INCLUDED17,771
typedef struct charset_info_st CHARSET_INFO;21,868
typedef struct st_mysql_lex_string LEX_STRING;22,913
typedef struct st_typelib TYPELIB;23,960

sql/structs.h,3181
#define STRUCTS_INCLUDED2,25
typedef struct st_date_time_format 34,1205
} DATE_TIME_FORMAT;39,1384
typedef struct st_keyfile_info 42,1406
} KEYFILE_INFO;61,2280
typedef struct st_key_part_info 64,2298
} KEY_PART_INFO 81,3033
typedef struct st_key 84,3053
} KEY;114,3999
typedef struct st_reginfo 119,4031
} REGINFO;128,4357
typedef enum enum_mysql_timestamp_type timestamp_type;137,4564
} INTERVAL;144,4718
typedef struct st_known_date_time_format 147,4732
} KNOWN_DATE_TIME_FORMAT;152,4887
typedef int *(*update_var)update_var156,4959
typedef struct	st_lex_user 158,5023
} LEX_USER;160,5101
typedef struct user_resources 167,5270
  enum {QUERIES_PER_HOUR=user_resources::QUERIES_PER_HOUR183,5832
  enum {QUERIES_PER_HOUR= 1, UPDATES_PER_HOUR=user_resources::UPDATES_PER_HOUR183,5832
  enum {QUERIES_PER_HOUR= 1, UPDATES_PER_HOUR= 2, CONNECTIONS_PER_HOUR=user_resources::CONNECTIONS_PER_HOUR183,5832
        USER_CONNECTIONS=user_resources::USER_CONNECTIONS184,5907
} USER_RESOURCES;186,5962
typedef struct  user_conn 193,6100
} USER_CONN;219,7116
#define REG_MAKE_DUPP	222,7158
#define REG_NEW_RECORD	223,7221
#define REG_UPDATE	224,7285
#define REG_DELETE	225,7328
#define REG_PROG	226,7376
#define REG_CLEAR_AFTER_WRITE	227,7429
#define REG_MAY_BE_UPDATED	228,7462
#define REG_AUTO_UPDATE	229,7492
#define REG_OVERWRITE	230,7560
#define REG_SKIP_DUP	231,7587
#define STATUS_NO_RECORD	234,7642
#define STATUS_GARBAGE	235,7699
#define STATUS_NOT_FOUND	236,7725
#define STATUS_NO_PARENT	237,7792
#define STATUS_NOT_READ	238,7852
#define STATUS_UPDATED	239,7903
#define STATUS_NULL_ROW	240,7965
#define STATUS_DELETED	241,8022
class Discrete_interval 252,8472
  void replace(Discrete_interval::replace259,8709
  Discrete_interval(Discrete_interval::Discrete_interval265,8906
  Discrete_interval(Discrete_interval::Discrete_interval267,9023
  ulonglong minimum(Discrete_interval::minimum268,9081
  ulonglong values(Discrete_interval::values269,9138
  ulonglong maximum(Discrete_interval::maximum270,9195
  bool merge_if_contiguous(Discrete_interval::merge_if_contiguous276,9477
class Discrete_intervals_list 296,9878
  void set_members(Discrete_intervals_list::set_members308,10353
  Discrete_intervals_list(Discrete_intervals_list::Discrete_intervals_list320,10678
  void empty_no_free(Discrete_intervals_list::empty_no_free321,10751
  void empty(Discrete_intervals_list::empty325,10820
  void copy_shallow(Discrete_intervals_list::copy_shallow335,10988
  void swap Discrete_intervals_list::swap342,11174
  const Discrete_interval* get_next(Discrete_intervals_list::get_next353,11435
  ~Discrete_intervals_list(Discrete_intervals_list::~Discrete_intervals_list360,11589
  ulonglong minimum(Discrete_intervals_list::minimum363,11739
  ulonglong maximum(Discrete_intervals_list::maximum364,11813
  uint      nb_elements(Discrete_intervals_list::nb_elements365,11887
  Discrete_interval* get_head(Discrete_intervals_list::get_head366,11940
  Discrete_interval* get_tail(Discrete_intervals_list::get_tail367,11996
  Discrete_interval* get_current(Discrete_intervals_list::get_current368,12052

sql/sys_vars.h,12706
#define VALID_RANGE(36,1258
#define DEFAULT(37,1287
#define BLOCK_SIZE(38,1308
#define GLOBAL_VAR(39,1332
#define SESSION_VAR(40,1430
#define SESSION_ONLY(41,1509
#define NO_CMD_LINE 42,1594
#define NO_MUTEX_GUARD 47,1770
#define IN_BINLOG 48,1808
#define NOT_IN_BINLOG 49,1862
#define ON_READ(50,1916
#define ON_CHECK(51,1937
#define ON_UPDATE(52,1959
#define READ_ONLY 53,1982
#define PREALLOCATED 55,2083
#define REVERSE(60,2229
#define DEPRECATED(61,2253
#define session_var(63,2278
#define global_var(64,2340
#define GET_HA_ROWS 67,2437
#define GET_HA_ROWS 69,2471
enum charset_enum 72,2509
enum charset_enum {IN_SYSTEM_CHARSET,IN_SYSTEM_CHARSET72,2509
enum charset_enum {IN_SYSTEM_CHARSET, IN_FS_CHARSET}IN_FS_CHARSET72,2509
static const char *bool_values[bool_values74,2564
struct CMD_LINE81,2792
  CMD_LINE(85,2854
template <typename T,100,3476
template <typename T, ulong ARGT,100,3476
class Sys_var_unsigned:Sys_var_unsigned101,3543
  Sys_var_unsigned(Sys_var_unsigned::Sys_var_unsigned104,3592
  bool do_check(Sys_var_unsigned::do_check137,4854
  bool session_update(Sys_var_unsigned::session_update159,5507
  bool global_update(Sys_var_unsigned::global_update164,5638
  bool check_update_type(Sys_var_unsigned::check_update_type169,5762
  void session_save_default(Sys_var_unsigned::session_save_default171,5838
  void global_save_default(Sys_var_unsigned::global_save_default173,5972
  T *max_var_ptr(Sys_var_unsigned::max_var_ptr176,6092
typedef Sys_var_unsigned<uint,uint183,6237
typedef Sys_var_unsigned<uint, GET_UINT,183,6237
typedef Sys_var_unsigned<uint, GET_UINT, SHOW_INT> Sys_var_uint;183,6237
typedef Sys_var_unsigned<ulong,ulong184,6302
typedef Sys_var_unsigned<ulong, GET_ULONG,184,6302
typedef Sys_var_unsigned<ulong, GET_ULONG, SHOW_LONG> Sys_var_ulong;184,6302
typedef Sys_var_unsigned<ha_rows,ha_rows185,6371
typedef Sys_var_unsigned<ha_rows, GET_HA_ROWS,185,6371
typedef Sys_var_unsigned<ha_rows, GET_HA_ROWS, SHOW_HA_ROWS> Sys_var_harows;185,6371
typedef Sys_var_unsigned<ulonglong,ulonglong186,6448
typedef Sys_var_unsigned<ulonglong, GET_ULL,186,6448
typedef Sys_var_unsigned<ulonglong, GET_ULL, SHOW_LONGLONG> Sys_var_ulonglong;186,6448
class Sys_var_typelib:Sys_var_typelib191,6596
  Sys_var_typelib(Sys_var_typelib::Sys_var_typelib196,6674
  bool do_check(Sys_var_typelib::do_check215,7589
  bool check_update_type(Sys_var_typelib::check_update_type242,8307
class Sys_var_enum:Sys_var_enum260,8846
  Sys_var_enum(Sys_var_enum::Sys_var_enum263,8899
  bool session_update(Sys_var_enum::session_update281,9685
  bool global_update(Sys_var_enum::global_update286,9820
  void session_save_default(Sys_var_enum::session_save_default291,9948
  void global_save_default(Sys_var_enum::global_save_default293,10059
  uchar *session_value_ptr(Sys_var_enum::session_value_ptr295,10168
  uchar *global_value_ptr(Sys_var_enum::global_value_ptr297,10289
class Sys_var_mybool:Sys_var_mybool307,10552
  Sys_var_mybool(Sys_var_mybool::Sys_var_mybool310,10607
  bool session_update(Sys_var_mybool::session_update330,11492
  bool global_update(Sys_var_mybool::global_update335,11629
  void session_save_default(Sys_var_mybool::session_save_default340,11759
  void global_save_default(Sys_var_mybool::global_save_default342,11900
class Sys_var_charptr:Sys_var_charptr362,12623
  Sys_var_charptr(Sys_var_charptr::Sys_var_charptr365,12671
  void cleanup(Sys_var_charptr::cleanup391,13863
  bool do_check(Sys_var_charptr::do_check397,13973
  bool session_update(Sys_var_charptr::session_update423,14778
  bool global_update(Sys_var_charptr::global_update428,14873
  void session_save_default(Sys_var_charptr::session_save_default446,15338
  void global_save_default(Sys_var_charptr::global_save_default448,15416
  bool check_update_type(Sys_var_charptr::check_update_type454,15632
class Sys_var_proxy_user:Sys_var_proxy_user459,15716
  Sys_var_proxy_user(Sys_var_proxy_user::Sys_var_proxy_user462,15767
  bool do_check(Sys_var_proxy_user::do_check472,16193
  bool session_update(Sys_var_proxy_user::session_update477,16282
  bool global_update(Sys_var_proxy_user::global_update482,16377
  void session_save_default(Sys_var_proxy_user::session_save_default487,16472
  void global_save_default(Sys_var_proxy_user::global_save_default489,16550
  bool check_update_type(Sys_var_proxy_user::check_update_type491,16627
  virtual uchar *session_value_ptr(Sys_var_proxy_user::session_value_ptr494,16700
class Sys_var_external_user 501,16881
  Sys_var_external_user(Sys_var_external_user::Sys_var_external_user504,16947
  virtual uchar *session_value_ptr(Sys_var_external_user::session_value_ptr510,17152
class Sys_var_lexstring:Sys_var_lexstring529,17667
  Sys_var_lexstring(Sys_var_lexstring::Sys_var_lexstring532,17725
  bool global_update(Sys_var_lexstring::global_update549,18539
class Sys_var_dbug:Sys_var_dbug570,19148
  Sys_var_dbug(Sys_var_dbug::Sys_var_dbug573,19193
  bool do_check(Sys_var_dbug::do_check587,19911
  bool session_update(Sys_var_dbug::session_update598,20279
  bool global_update(Sys_var_dbug::global_update607,20476
  void session_save_default(Sys_var_dbug::session_save_default613,20630
  void global_save_default(Sys_var_dbug::global_save_default615,20688
  uchar *session_value_ptr(Sys_var_dbug::session_value_ptr620,20839
  uchar *global_value_ptr(Sys_var_dbug::global_value_ptr626,20995
  bool check_update_type(Sys_var_dbug::check_update_type632,21158
#define KEYCACHE_VAR(637,21248
#define keycache_var_ptr(638,21340
#define keycache_var(639,21397
typedef bool (*keycache_update_function)keycache_update_function640,21468
class Sys_var_keycache:Sys_var_keycache653,21815
  Sys_var_keycache(Sys_var_keycache::Sys_var_keycache657,21918
  bool global_update(Sys_var_keycache::global_update680,22949
  uchar *global_value_ptr(Sys_var_keycache::global_value_ptr710,23964
class Sys_var_double:Sys_var_double726,24302
  Sys_var_double(Sys_var_double::Sys_var_double729,24349
  bool do_check(Sys_var_double::do_check753,25471
  bool session_update(Sys_var_double::session_update761,25717
  bool global_update(Sys_var_double::global_update766,25850
  bool check_update_type(Sys_var_double::check_update_type771,25976
  void session_save_default(Sys_var_double::session_save_default775,26107
  void global_save_default(Sys_var_double::global_save_default777,26216
class Sys_var_max_user_conn:Sys_var_max_user_conn791,26595
  Sys_var_max_user_conn(Sys_var_max_user_conn::Sys_var_max_user_conn794,26654
  uchar *session_value_ptr(Sys_var_max_user_conn::session_value_ptr808,27323
#define MAX_SET(818,27607
class Sys_var_flagset:Sys_var_flagset834,28106
  Sys_var_flagset(Sys_var_flagset::Sys_var_flagset837,28162
  bool do_check(Sys_var_flagset::do_check858,29116
  bool session_update(Sys_var_flagset::session_update910,30571
  bool global_update(Sys_var_flagset::global_update915,30710
  void session_save_default(Sys_var_flagset::session_save_default920,30842
  void global_save_default(Sys_var_flagset::global_save_default922,30957
  uchar *session_value_ptr(Sys_var_flagset::session_value_ptr924,31066
  uchar *global_value_ptr(Sys_var_flagset::global_value_ptr929,31261
class Sys_var_set:Sys_var_set945,31710
  Sys_var_set(Sys_var_set::Sys_var_set948,31762
  bool do_check(Sys_var_set::do_check968,32642
  bool session_update(Sys_var_set::session_update1011,33862
  bool global_update(Sys_var_set::global_update1016,34001
  void session_save_default(Sys_var_set::session_save_default1021,34133
  void global_save_default(Sys_var_set::global_save_default1023,34248
  uchar *session_value_ptr(Sys_var_set::session_value_ptr1025,34357
  uchar *global_value_ptr(Sys_var_set::global_value_ptr1030,34544
class Sys_var_plugin:Sys_var_plugin1050,35114
  Sys_var_plugin(Sys_var_plugin::Sys_var_plugin1054,35180
  bool do_check(Sys_var_plugin::do_check1073,36043
  void do_update(Sys_var_plugin::do_update1103,36992
  bool session_update(Sys_var_plugin::session_update1112,37207
  bool global_update(Sys_var_plugin::global_update1118,37368
  void session_save_default(Sys_var_plugin::session_save_default1124,37524
  void global_save_default(Sys_var_plugin::global_save_default1129,37690
  bool check_update_type(Sys_var_plugin::check_update_type1145,38190
  uchar *session_value_ptr(Sys_var_plugin::session_value_ptr1147,38269
  uchar *global_value_ptr(Sys_var_plugin::global_value_ptr1153,38530
class Sys_var_debug_sync 1165,38878
  Sys_var_debug_sync(Sys_var_debug_sync::Sys_var_debug_sync1168,38929
  bool do_check(Sys_var_debug_sync::do_check1185,39701
  bool session_update(Sys_var_debug_sync::session_update1196,40069
  bool global_update(Sys_var_debug_sync::global_update1201,40253
  void session_save_default(Sys_var_debug_sync::session_save_default1206,40347
  void global_save_default(Sys_var_debug_sync::global_save_default1211,40514
  uchar *session_value_ptr(Sys_var_debug_sync::session_value_ptr1215,40597
  uchar *global_value_ptr(Sys_var_debug_sync::global_value_ptr1220,40748
  bool check_update_type(Sys_var_debug_sync::check_update_type1225,40848
class Sys_var_bit:Sys_var_bit1249,41583
  void set(Sys_var_bit::set1253,41674
  Sys_var_bit(Sys_var_bit::Sys_var_bit1261,41856
  bool session_update(Sys_var_bit::session_update1282,42820
  bool global_update(Sys_var_bit::global_update1287,42957
  void session_save_default(Sys_var_bit::session_save_default1292,43089
  void global_save_default(Sys_var_bit::global_save_default1294,43214
  uchar *session_value_ptr(Sys_var_bit::session_value_ptr1296,43323
  uchar *global_value_ptr(Sys_var_bit::global_value_ptr1302,43549
class Sys_var_session_special:Sys_var_session_special1325,44285
  typedef bool (*session_special_update_function)Sys_var_session_special::session_special_update_function1327,44343
  typedef ulonglong (*session_special_read_function)Sys_var_session_special::session_special_read_function1328,44418
  Sys_var_session_special(Sys_var_session_special::Sys_var_session_special1333,44581
  bool session_update(Sys_var_session_special::session_update1351,45477
  bool global_update(Sys_var_session_special::global_update1353,45559
  void session_save_default(Sys_var_session_special::session_save_default1358,45653
  void global_save_default(Sys_var_session_special::global_save_default1360,45726
  uchar *session_value_ptr(Sys_var_session_special::session_value_ptr1362,45803
  uchar *global_value_ptr(Sys_var_session_special::global_value_ptr1367,45975
class Sys_var_have:Sys_var_have1384,46363
  Sys_var_have(Sys_var_have::Sys_var_have1387,46408
  bool do_check(Sys_var_have::do_check1409,47375
  bool session_update(Sys_var_have::session_update1413,47462
  bool global_update(Sys_var_have::global_update1418,47557
  void session_save_default(Sys_var_have::session_save_default1423,47651
  void global_save_default(Sys_var_have::global_save_default1424,47707
  uchar *session_value_ptr(Sys_var_have::session_value_ptr1425,47762
  uchar *global_value_ptr(Sys_var_have::global_value_ptr1430,47863
  bool check_update_type(Sys_var_have::check_update_type1434,48002
class Sys_var_struct:Sys_var_struct1452,48645
  Sys_var_struct(Sys_var_struct::Sys_var_struct1456,48767
  bool do_check(Sys_var_struct::do_check1483,49919
  bool session_update(Sys_var_struct::session_update1485,49979
  bool global_update(Sys_var_struct::global_update1490,50102
  void session_save_default(Sys_var_struct::session_save_default1495,50218
  void global_save_default(Sys_var_struct::global_save_default1497,50317
  bool check_update_type(Sys_var_struct::check_update_type1502,50488
  uchar *session_value_ptr(Sys_var_struct::session_value_ptr1504,50589
  uchar *global_value_ptr(Sys_var_struct::global_value_ptr1509,50744
class Sys_var_tz:Sys_var_tz1526,51197
  Sys_var_tz(Sys_var_tz::Sys_var_tz1529,51240
  bool do_check(Sys_var_tz::do_check1546,52023
  bool session_update(Sys_var_tz::session_update1563,52445
  bool global_update(Sys_var_tz::global_update1568,52579
  void session_save_default(Sys_var_tz::session_save_default1573,52706
  void global_save_default(Sys_var_tz::global_save_default1577,52822
  uchar *session_value_ptr(Sys_var_tz::session_value_ptr1582,52959
  uchar *global_value_ptr(Sys_var_tz::global_value_ptr1595,53537
  bool check_update_type(Sys_var_tz::check_update_type1599,53664
class Sys_var_tx_isolation:Sys_var_tx_isolation1604,53748
  Sys_var_tx_isolation(Sys_var_tx_isolation::Sys_var_tx_isolation1607,53806

sql/sys_vars_shared.h,818
#define SYS_VARS_SHARED_INCLUDED2,33
class PolyLock40,1550
  virtual ~PolyLock(PolyLock::~PolyLock46,1659
class PolyLock_mutex:PolyLock_mutex49,1688
  PolyLock_mutex(PolyLock_mutex::PolyLock_mutex53,1760
  void rdlock(PolyLock_mutex::rdlock54,1812
  void wrlock(PolyLock_mutex::wrlock55,1857
  void unlock(PolyLock_mutex::unlock56,1902
class PolyLock_rwlock:PolyLock_rwlock59,1953
  PolyLock_rwlock(PolyLock_rwlock::PolyLock_rwlock63,2028
  void rdlock(PolyLock_rwlock::rdlock64,2083
  void wrlock(PolyLock_rwlock::wrlock65,2132
  void unlock(PolyLock_rwlock::unlock66,2181
class AutoWLock69,2234
  AutoWLock(AutoWLock::AutoWLock73,2278
  ~AutoWLock(AutoWLock::~AutoWLock74,2343
class AutoRLock77,2392
  AutoRLock(AutoRLock::AutoRLock81,2436
  ~AutoRLock(AutoRLock::~AutoRLock82,2501

sql/table.h,11217
#define TABLE_INCLUDED2,23
typedef ulonglong nested_join_map;53,1779
#define tmp_file_prefix 56,1816
#define tmp_file_prefix_length 57,1879
#define TMP_TABLE_KEY_EXTRA 58,1912
enum enum_table_ref_type75,2449
  TABLE_REF_NULL=enum_table_ref_type::TABLE_REF_NULL78,2517
  TABLE_REF_VIEW,enum_table_ref_type::TABLE_REF_VIEW79,2538
  TABLE_REF_BASE_TABLE,enum_table_ref_type::TABLE_REF_BASE_TABLE80,2556
  TABLE_REF_I_S_TABLE,enum_table_ref_type::TABLE_REF_I_S_TABLE81,2580
  TABLE_REF_TMP_TABLEenum_table_ref_type::TABLE_REF_TMP_TABLE82,2603
class Object_creation_ctx95,2984
  Object_creation_ctx(Object_creation_ctx::Object_creation_ctx103,3143
  virtual ~Object_creation_ctx(Object_creation_ctx::~Object_creation_ctx109,3297
class Default_object_creation_ctx 120,3505
  CHARSET_INFO *get_client_cs(Default_object_creation_ctx::get_client_cs123,3578
  CHARSET_INFO *get_connection_cl(Default_object_creation_ctx::get_connection_cl128,3643
class View_creation_ctx 172,4857
  View_creation_ctx(View_creation_ctx::View_creation_ctx182,5128
typedef struct st_order 191,5317
} ORDER;204,5973
struct st_grant_internal_info212,6146
typedef struct st_grant_internal_info GRANT_INTERNAL_INFO;223,6544
typedef struct st_grant_info239,7233
} GRANT_INFO;288,9064
enum tmp_table_type290,9079
  NO_TMP_TABLE,tmp_table_type::NO_TMP_TABLE292,9101
  NO_TMP_TABLE, NON_TRANSACTIONAL_TMP_TABLE,tmp_table_type::NON_TRANSACTIONAL_TMP_TABLE292,9101
  NO_TMP_TABLE, NON_TRANSACTIONAL_TMP_TABLE, TRANSACTIONAL_TMP_TABLE,tmp_table_type::TRANSACTIONAL_TMP_TABLE292,9101
  INTERNAL_TMP_TABLE,tmp_table_type::INTERNAL_TMP_TABLE293,9171
  INTERNAL_TMP_TABLE, SYSTEM_TMP_TABLEtmp_table_type::SYSTEM_TMP_TABLE293,9171
enum release_type 295,9213
enum release_type { RELEASE_NORMAL,release_type::RELEASE_NORMAL295,9213
enum release_type { RELEASE_NORMAL, RELEASE_WAIT_FOR_DROP release_type::RELEASE_WAIT_FOR_DROP295,9213
typedef struct st_filesort_info297,9275
} FILESORT_INFO;310,10065
enum timestamp_auto_set_type323,10592
  TIMESTAMP_NO_AUTO_SET=timestamp_auto_set_type::TIMESTAMP_NO_AUTO_SET325,10623
  TIMESTAMP_NO_AUTO_SET= 0, TIMESTAMP_AUTO_SET_ON_INSERT=timestamp_auto_set_type::TIMESTAMP_AUTO_SET_ON_INSERT325,10623
  TIMESTAMP_AUTO_SET_ON_UPDATE=timestamp_auto_set_type::TIMESTAMP_AUTO_SET_ON_UPDATE326,10684
  TIMESTAMP_AUTO_SET_ON_UPDATE= 2, TIMESTAMP_AUTO_SET_ON_BOTH=timestamp_auto_set_type::TIMESTAMP_AUTO_SET_ON_BOTH326,10684
#define clear_timestamp_auto_bits(328,10752
enum enum_table_category338,11008
  TABLE_UNKNOWN_CATEGORY=enum_table_category::TABLE_UNKNOWN_CATEGORY343,11065
  TABLE_CATEGORY_TEMPORARY=enum_table_category::TABLE_CATEGORY_TEMPORARY356,11418
  TABLE_CATEGORY_USER=enum_table_category::TABLE_CATEGORY_USER366,11650
  TABLE_CATEGORY_SYSTEM=enum_table_category::TABLE_CATEGORY_SYSTEM378,12020
  TABLE_CATEGORY_INFORMATION=enum_table_category::TABLE_CATEGORY_INFORMATION400,12759
  TABLE_CATEGORY_LOG=enum_table_category::TABLE_CATEGORY_LOG422,13481
  TABLE_CATEGORY_PERFORMANCE=enum_table_category::TABLE_CATEGORY_PERFORMANCE444,14287
typedef enum enum_table_category TABLE_CATEGORY;446,14321
typedef struct st_table_field_type456,14540
} TABLE_FIELD_TYPE;461,14634
typedef struct st_table_field_def464,14656
} TABLE_FIELD_DEF;468,14739
typedef struct st_ha_data_partition475,14841
} HA_DATA_PARTITION;480,15067
class Table_check_intact484,15097
  Table_check_intact(Table_check_intact::Table_check_intact490,15209
  virtual ~Table_check_intact(Table_check_intact::~Table_check_intact491,15235
class Wait_for_flush 504,15553
  Wait_for_flush(Wait_for_flush::Wait_for_flush510,15687
  MDL_context *get_ctx(Wait_for_flush::get_ctx516,15884
typedef I_P_List <Wait_for_flush,Wait_for_flush530,16203
                 Wait_for_flush_list;534,16424
struct TABLE_SHARE542,16602
  TABLE_SHARE(TABLE_SHARE::TABLE_SHARE544,16623
  inline handlerton *db_type(TABLE_SHARE::db_type606,19053
  void set_table_cache_key(TABLE_SHARE::set_table_cache_key722,23400
  void set_table_cache_key(TABLE_SHARE::set_table_cache_key752,24318
  inline bool honor_global_locks(TABLE_SHARE::honor_global_locks758,24490
  inline bool require_write_privileges(TABLE_SHARE::require_write_privileges764,24645
  inline ulong get_table_def_version(TABLE_SHARE::get_table_def_version769,24746
  inline bool has_old_version(TABLE_SHARE::has_old_version776,24898
  enum enum_table_ref_type get_table_ref_type(TABLE_SHARE::get_table_ref_type786,25145
  ulong get_table_ref_version(TABLE_SHARE::get_table_ref_version874,29063
enum index_hint_type890,29547
  INDEX_HINT_IGNORE,index_hint_type::INDEX_HINT_IGNORE892,29570
  INDEX_HINT_USE,index_hint_type::INDEX_HINT_USE893,29591
  INDEX_HINT_FORCEindex_hint_type::INDEX_HINT_FORCE894,29609
typedef Bitmap<MAX_FIELDS> Field_map;898,29663
struct TABLE900,29702
  TABLE(TABLE::TABLE902,29717
  inline void column_bitmaps_set(TABLE::column_bitmaps_set1114,37674
  inline void column_bitmaps_set_no_signal(TABLE::column_bitmaps_set_no_signal1122,37908
  inline void use_all_columns(TABLE::use_all_columns1128,38111
  inline void default_column_bitmaps(TABLE::default_column_bitmaps1132,38201
  inline bool needs_reopen(TABLE::needs_reopen1138,38364
  inline void set_keyread(TABLE::set_keyread1141,38435
struct TABLE_share1165,38900
  static inline TABLE **next_ptr(TABLE_share::next_ptr1167,38921
  static inline TABLE ***prev_ptr(TABLE_share::prev_ptr1171,38999
enum enum_schema_table_state1178,39083
  NOT_PROCESSED=enum_schema_table_state::NOT_PROCESSED1180,39115
  PROCESSED_BY_CREATE_SORT_INDEX,enum_schema_table_state::PROCESSED_BY_CREATE_SORT_INDEX1181,39135
  PROCESSED_BY_JOIN_EXECenum_schema_table_state::PROCESSED_BY_JOIN_EXEC1182,39169
typedef struct st_foreign_key_info1185,39198
} FOREIGN_KEY_INFO;1197,39543
#define MY_I_S_MAYBE_NULL 1199,39564
#define MY_I_S_UNSIGNED 1200,39592
#define SKIP_OPEN_TABLE 1203,39622
#define OPEN_FRM_ONLY 1204,39684
#define OPEN_FULL_TABLE 1205,39747
typedef struct st_field_info1207,39816
} ST_FIELD_INFO;1240,40950
typedef class Item COND;1244,40988
typedef struct st_schema_table1246,41014
} ST_SCHEMA_TABLE;1261,41674
#define JOIN_TYPE_LEFT	1264,41695
#define JOIN_TYPE_RIGHT	1265,41720
#define VIEW_ALGORITHM_UNDEFINED 1267,41747
#define VIEW_ALGORITHM_TMPTABLE 1268,41789
#define VIEW_ALGORITHM_MERGE 1269,41831
#define VIEW_SUID_INVOKER 1271,41874
#define VIEW_SUID_DEFINER 1272,41916
#define VIEW_SUID_DEFAULT 1273,41958
#define VIEW_CHECK_NONE 1276,42048
#define VIEW_CHECK_LOCAL 1277,42080
#define VIEW_CHECK_CASCADED 1278,42112
#define VIEW_CHECK_OK 1281,42200
#define VIEW_CHECK_ERROR 1282,42232
#define VIEW_CHECK_SKIP 1283,42264
#define MAX_TDC_BLOB_SIZE 1286,42362
struct Field_translator1294,42553
class Natural_join_column:Natural_join_column1307,42825
enum enum_open_type1337,43833
  OT_TEMPORARY_OR_BASE=enum_open_type::OT_TEMPORARY_OR_BASE1339,43855
  OT_TEMPORARY_OR_BASE= 0, OT_TEMPORARY_ONLY,enum_open_type::OT_TEMPORARY_ONLY1339,43855
  OT_TEMPORARY_OR_BASE= 0, OT_TEMPORARY_ONLY, OT_BASE_ONLYenum_open_type::OT_BASE_ONLY1339,43855
struct TABLE_LIST1377,45223
  TABLE_LIST(TABLE_LIST::TABLE_LIST1379,45243
  inline void init_one_table(TABLE_LIST::init_one_table1385,45424
    OPEN_NORMAL=TABLE_LIST::OPEN_NORMAL1636,55810
    OPEN_IF_EXISTS,TABLE_LIST::OPEN_IF_EXISTS1638,55894
    OPEN_STUBTABLE_LIST::OPEN_STUB1640,55955
  bool placeholder(TABLE_LIST::placeholder1701,57764
  inline TABLE_LIST *top_table(TABLE_LIST::top_table1714,58282
  inline bool prepare_check_option(TABLE_LIST::prepare_check_option1716,58370
  inline bool prepare_where(TABLE_LIST::prepare_where1723,58547
  bool is_table_ref_id_equal(TABLE_LIST::is_table_ref_id_equal1759,59646
  void set_table_ref_id(TABLE_LIST::set_table_ref_id1772,60013
  void set_table_ref_id(TABLE_LIST::set_table_ref_id1776,60140
  bool is_anonymous_derived_table(TABLE_LIST::is_anonymous_derived_table1787,60479
  char *get_db_name(TABLE_LIST::get_db_name1793,60650
  char *get_table_name(TABLE_LIST::get_table_name1801,60899
class Field_iterator:Field_iterator1818,61354
  Field_iterator(Field_iterator::Field_iterator1821,61403
  virtual ~Field_iterator(Field_iterator::~Field_iterator1822,61474
class Field_iterator_table:Field_iterator_table1837,61846
  Field_iterator_table(Field_iterator_table::Field_iterator_table1841,61921
  void set(Field_iterator_table::set1842,61957
  void set_table(Field_iterator_table::set_table1843,62017
  void next(Field_iterator_table::next1844,62071
  bool end_of_fields(Field_iterator_table::end_of_fields1845,62096
  Field *field(Field_iterator_table::field1848,62194
class Field_iterator_view:Field_iterator_view1854,62282
  Field_iterator_view(Field_iterator_view::Field_iterator_view1859,62398
  void next(Field_iterator_view::next1861,62478
  bool end_of_fields(Field_iterator_view::end_of_fields1862,62503
  Item **item_ptr(Field_iterator_view::item_ptr1865,62608
  Field *field(Field_iterator_view::field1866,62650
  inline Item *item(Field_iterator_view::item1867,62681
  Field_translator *field_translator(Field_iterator_view::field_translator1868,62725
class Field_iterator_natural_join:Field_iterator_natural_join1877,62881
  Field_iterator_natural_join(Field_iterator_natural_join::Field_iterator_natural_join1882,63044
  ~Field_iterator_natural_join(Field_iterator_natural_join::~Field_iterator_natural_join1883,63101
  bool end_of_fields(Field_iterator_natural_join::end_of_fields1886,63183
  const char *name(Field_iterator_natural_join::name1887,63234
  Item *create_item(Field_iterator_natural_join::create_item1888,63290
  Field *field(Field_iterator_natural_join::field1889,63365
  Natural_join_column *column_ref(Field_iterator_natural_join::column_ref1890,63418
class Field_iterator_table_ref:Field_iterator_table_ref1910,64100
  Field_iterator_table_ref(Field_iterator_table_ref::Field_iterator_table_ref1919,64409
  bool end_of_fields(Field_iterator_table_ref::end_of_fields1922,64503
  const char *name(Field_iterator_table_ref::name1924,64594
  Item *create_item(Field_iterator_table_ref::create_item1928,64728
  Field *field(Field_iterator_table_ref::field1929,64797
typedef struct st_nested_join1935,64987
  bool is_fully_covered(st_nested_join::is_fully_covered1962,66084
} NESTED_JOIN;1963,66158
typedef struct st_changed_table_list1966,66175
} CHANGED_TABLE_LIST;1971,66294
typedef struct st_open_table_list{st_open_table_list1974,66318
} OPEN_TABLE_LIST;1978,66431
static inline my_bitmap_map *tmp_use_all_columns(tmp_use_all_columns1981,66452
static inline void tmp_restore_column_map(1990,66685
static inline my_bitmap_map *dbug_tmp_use_all_columns(dbug_tmp_use_all_columns1998,66886
static inline void dbug_tmp_restore_column_map(2008,67119
static inline void dbug_tmp_use_all_columns(2021,67463
static inline void dbug_tmp_restore_column_maps(2035,67902
inline bool is_infoschema_db(2096,70494
inline bool is_infoschema_db(2103,70717
inline bool is_user_table(2114,70994
inline void mark_as_null_row(2120,71151

sql/thr_malloc.h,131
#define THR_MALLOC_INCLUDED17,774
typedef struct charset_info_st CHARSET_INFO;21,868
typedef struct st_mem_root MEM_ROOT;22,913

sql/transaction.h,29
#define TRANSACTION_H18,783

sql/tzfile.h,698
#define TZFILE_INCLUDED2,24
#define TZDIR	31,1098
#define	TZ_MAGIC	38,1237
struct tzhead 40,1262
#define TZ_MAX_TIMES	88,3525
#define TZ_MAX_TYPES	93,3620
#define TZ_MAX_TYPES	99,3812
#define TZ_MAX_CHARS	104,3961
#define TZ_MAX_LEAPS	109,4142
#define TZ_MAX_REV_RANGES 115,4367
#define TZ_MAX_REV_RANGES 117,4433
#define SECS_PER_MIN	121,4504
#define MINS_PER_HOUR	122,4528
#define HOURS_PER_DAY	123,4553
#define DAYS_PER_WEEK	124,4578
#define DAYS_PER_NYEAR	125,4602
#define DAYS_PER_LYEAR	126,4629
#define SECS_PER_HOUR	127,4656
#define SECS_PER_DAY	128,4709
#define MONS_PER_YEAR	129,4769
#define TM_YEAR_BASE	131,4795
#define EPOCH_YEAR	133,4822
#define isleap(140,4929

sql/tztime.h,203
#define TZTIME_INCLUDED2,24
class Time_zone:Time_zone41,1436
  Time_zone(Time_zone::Time_zone44,1481
  virtual ~Time_zone(Time_zone::~Time_zone69,2522
static const int MY_TZ_TABLES_COUNT=90,3249

sql/unireg.h,2144
#define UNIREG_INCLUDED2,24
typedef struct st_ha_create_information HA_CREATE_INFO;25,974
#define NO_ALARM_LOOP	28,1053
#define LANGUAGE	33,1190
#define ERRMSG_FILE	34,1218
#define TEMP_PREFIX	35,1251
#define LOG_PREFIX	36,1276
#define PROGDIR	37,1300
#define MYSQL_DATADIR	39,1346
#define SHAREDIR	42,1401
#define PLUGINDIR	45,1452
#define CURRENT_THD_ERRMSGS 48,1491
#define DEFAULT_ERRMSGS 49,1572
#define ER(51,1642
#define ER_DEFAULT(52,1706
#define ER_SAFE(53,1766
#define ER_THD(54,1866
#define ER_THD_OR_DEFAULT(56,1984
#define ME_INFO 59,2060
#define ME_ERROR 60,2113
#define MYF_RW 61,2163
#define SPECIAL_USE_LOCKS	63,2229
#define SPECIAL_NO_NEW_FUNC	64,2284
#define SPECIAL_SKIP_SHOW_DB 65,2340
#define SPECIAL_WAIT_IF_LOCKED	66,2416
#define SPECIAL_SAME_DB_NAME 67,2480
#define SPECIAL_ENGLISH 68,2543
#define SPECIAL_NO_RESOLVE 69,2607
#define SPECIAL_NO_PRIOR	70,2670
#define SPECIAL_BIG_SELECTS	71,2715
#define SPECIAL_NO_HOST_CACHE	72,2776
#define SPECIAL_SHORT_LOG_FORMAT 73,2835
#define SPECIAL_SAFE_MODE	74,2873
#define SPECIAL_LOG_QUERIES_NOT_USING_INDEXES 75,2904
#define store_record(78,2993
#define restore_record(79,3076
#define cmp_record(80,3161
#define empty_record(81,3242
#define READ_ALL	88,3496
#define CHANGE_FRM	89,3551
#define READ_KEYINFO	90,3608
#define EXTRA_RECORD	91,3664
#define DONT_OPEN_TABLES	92,3727
#define DONT_OPEN_MASTER_REG	93,3792
#define EXTRA_LONG_RECORD	94,3862
#define COMPUTE_TYPES	95,3925
#define SEARCH_PRG	96,3986
#define READ_USED_NAMES	97,4047
#define DONT_GIVE_ERROR	98,4107
#define READ_SCREENS	99,4173
#define DELAYED_OPEN	100,4238
#define OPEN_VIEW	101,4288
#define OPEN_VIEW_NO_PARSE 102,4337
#define OPEN_FRM_FILE_ONLY 109,4705
#define OPEN_TABLE_ONLY 116,4990
#define OPEN_VIEW_ONLY 123,5290
#define OPEN_VIEW_FULL 130,5581
#define OPTIMIZE_I_S_TABLE 136,5836
#define OPEN_TRIGGER_ONLY 141,5952
#define SC_INFO_LENGTH 143,6005
#define TE_INFO_LENGTH 144,6058
#define MTYP_NOEMPTY_BIT 145,6083
#define MIN_TURBOBM_PATTERN_LEN 152,6270
#define BIN_LOG_HEADER_SIZE 160,6446
#define DEFAULT_KEY_CACHE_NAME 162,6481

strings/t_ctype.h,5100
#define _t_ctype_h32,1308
typedef unsigned char tchar;34,1328
#define TOT_LEVELS 36,1358
#define LAST_LEVEL 37,1379
#define IGNORE 39,1423
enum l1_symbols 43,1472
    L1_08 44,1490
    L1_08 = TOT_LEVELS,44,1490
    L1_18,45,1514
    L1_28,46,1525
    L1_38,47,1536
    L1_48,48,1547
    L1_58,49,1558
    L1_68,50,1569
    L1_78,51,1580
    L1_88,52,1591
    L1_98,53,1602
    L1_A8,54,1613
    L1_B8,55,1624
    L1_C8,56,1635
    L1_D8,57,1646
    L1_E8,58,1657
    L1_F8,59,1668
    L1_G8,60,1679
    L1_H8,61,1690
    L1_I8,62,1701
    L1_J8,63,1712
    L1_K8,64,1723
    L1_L8,65,1734
    L1_M8,66,1745
    L1_N8,67,1756
    L1_O8,68,1767
    L1_P8,69,1778
    L1_Q8,70,1789
    L1_R8,71,1800
    L1_S8,72,1811
    L1_T8,73,1822
    L1_U8,74,1833
    L1_V8,75,1844
    L1_W8,76,1855
    L1_X8,77,1866
    L1_Y8,78,1877
    L1_Z8,79,1888
    L1_KO_KAI,80,1899
    L1_KHO_KHAI,81,1914
    L1_KHO_KHUAT,82,1931
    L1_KHO_KHWAI,83,1949
    L1_KHO_KHON,84,1967
    L1_KHO_RAKHANG,85,1984
    L1_NGO_NGU,86,2004
    L1_CHO_CHAN,87,2020
    L1_CHO_CHING,88,2037
    L1_CHO_CHANG,89,2055
    L1_SO_SO,90,2073
    L1_CHO_CHOE,91,2087
    L1_YO_YING,92,2104
    L1_DO_CHADA,93,2120
    L1_TO_PATAK,94,2137
    L1_THO_THAN,95,2154
    L1_THO_NANGMONTHO,96,2171
    L1_THO_PHUTHAO,97,2194
    L1_NO_NEN,98,2214
    L1_DO_DEK,99,2229
    L1_TO_TAO,100,2244
    L1_THO_THUNG,101,2259
    L1_THO_THAHAN,102,2277
    L1_THO_THONG,103,2296
    L1_NO_NU,104,2314
    L1_BO_BAIMAI,105,2328
    L1_PO_PLA,106,2346
    L1_PHO_PHUNG,107,2361
    L1_FO_FA,108,2379
    L1_PHO_PHAN,109,2393
    L1_FO_FAN,110,2410
    L1_PHO_SAMPHAO,111,2425
    L1_MO_MA,112,2445
    L1_YO_YAK,113,2459
    L1_RO_RUA,114,2474
    L1_RU,115,2489
    L1_LO_LING,116,2500
    L1_LU,117,2516
    L1_WO_WAEN,118,2527
    L1_SO_SALA,119,2543
    L1_SO_RUSI,120,2559
    L1_SO_SUA,121,2575
    L1_HO_HIP,122,2590
    L1_LO_CHULA,123,2605
    L1_O_ANG,124,2622
    L1_HO_NOKHUK,125,2636
    L1_NKHIT,126,2654
    L1_SARA_A,127,2668
    L1_MAI_HAN_AKAT,128,2683
    L1_SARA_AA,129,2704
    L1_SARA_AM,130,2720
    L1_SARA_I,131,2736
    L1_SARA_II,132,2751
    L1_SARA_UE,133,2767
    L1_SARA_UEE,134,2783
    L1_SARA_U,135,2800
    L1_SARA_UU,136,2815
    L1_SARA_E,137,2831
    L1_SARA_AE,138,2846
    L1_SARA_O,139,2862
    L1_SARA_AI_MAIMUAN,140,2877
    L1_SARA_AI_MAIMALAI141,2901
enum l2_symbols 145,2959
    L2_BLANK 146,2977
    L2_BLANK = TOT_LEVELS,146,2977
    L2_THAII,147,3004
    L2_YAMAK,148,3018
    L2_PINTHU,149,3032
    L2_GARAN,150,3047
    L2_TYKHU,151,3061
    L2_TONE1,152,3075
    L2_TONE2,153,3089
    L2_TONE3,154,3103
    L2_TONE4155,3117
enum l3_symbols 159,3164
	L3_BLANK 160,3182
	L3_BLANK = TOT_LEVELS,160,3182
    L3_SPACE,161,3206
    L3_NB_SACE,162,3220
    L3_LOW_LINE,163,3236
    L3_HYPHEN,164,3253
    L3_COMMA,165,3268
    L3_SEMICOLON,166,3282
    L3_COLON,167,3300
    L3_EXCLAMATION,168,3314
    L3_QUESTION,169,3334
    L3_SOLIDUS,170,3351
    L3_FULL_STOP,171,3367
    L3_PAIYAN_NOI,172,3385
    L3_MAI_YAMOK,173,3404
    L3_GRAVE,174,3422
    L3_CIRCUMFLEX,175,3436
    L3_TILDE,176,3455
    L3_APOSTROPHE,177,3469
    L3_QUOTATION,178,3488
    L3_L_PARANTHESIS,179,3506
    L3_L_BRACKET,180,3528
    L3_L_BRACE,181,3546
    L3_R_BRACE,182,3562
    L3_R_BRACKET,183,3578
    L3_R_PARENTHESIS,184,3596
    L3_AT,185,3618
    L3_BAHT,186,3629
    L3_DOLLAR,187,3642
    L3_FONGMAN,188,3657
    L3_ANGKHANKHU,189,3673
    L3_KHOMUT,190,3692
    L3_ASTERISK,191,3707
    L3_BK_SOLIDUS,192,3724
    L3_AMPERSAND,193,3743
    L3_NUMBER,194,3761
    L3_PERCENT,195,3776
    L3_PLUS,196,3792
    L3_LESS_THAN,197,3805
    L3_EQUAL,198,3823
    L3_GREATER_THAN,199,3837
    L3_V_LINE200,3858
enum l4_symbols 204,3906
    L4_BLANK 205,3924
    L4_BLANK = TOT_LEVELS,205,3924
    L4_MIN,206,3951
    L4_CAP,207,3963
    L4_EXT208,3975
enum level_symbols 211,3990
    L_UPRUPR 212,4011
    L_UPRUPR = TOT_LEVELS,212,4011
    L_UPPER,213,4038
    L_MIDDLE,214,4051
    L_LOWER215,4065
#define	_is(218,4081
#define _level	219,4125
#define _consnt	220,4144
#define _ldvowel	221,4165
#define _fllwvowel	222,4186
#define _uprvowel	223,4209
#define _lwrvowel	224,4232
#define _tone	225,4255
#define _diacrt1	226,4275
#define _diacrt2	227,4298
#define _combine	228,4321
#define _stone	229,4344
#define _tdig	230,4366
#define _rearvowel	231,4388
#define _diacrt	232,4445
#define levelof(233,4485
#define isthai(234,4525
#define istalpha(235,4559
#define isconsnt(237,4674
#define isldvowel(238,4716
#define isfllwvowel(239,4759
#define ismidvowel(240,4806
#define isuprvowel(241,4863
#define islwrvowel(242,4908
#define isuprlwrvowel(243,4953
#define isrearvowel(244,5014
#define isvowel(245,5061
#define istone(246,5120
#define isunldable(247,5163
#define iscombinable(248,5237
#define istdigit(249,5283
#define isstone(250,5326
#define isdiacrt1(251,5370
#define isdiacrt2(252,5412
#define isdiacrt(253,5454

vio/vio_priv.h,59
#define VIO_PRIV_INCLUDED2,26
#define DONT_MAP_VIO21,857

zlib/crc32.h,56
local const unsigned long FAR crc_table[crc_table5,90

zlib/deflate.h,1143
#define DEFLATE_H14,395
#  define GZIP23,705
#define LENGTH_CODES 30,843
#define LITERALS 33,938
#define L_CODES 36,998
#define D_CODES 39,1111
#define BL_CODES 42,1164
#define HEAP_SIZE 45,1241
#define MAX_BITS 48,1298
#define INIT_STATE 51,1365
#define EXTRA_STATE 52,1390
#define NAME_STATE 53,1415
#define COMMENT_STATE 54,1440
#define HCRC_STATE 55,1465
#define BUSY_STATE 56,1490
#define FINISH_STATE 57,1515
typedef struct ct_data_s 62,1630
} FAR ct_data;71,1901
#define Freq 73,1917
#define Code 74,1938
#define Dad 75,1959
#define Len 76,1979
typedef struct static_tree_desc_s  static_tree_desc;78,2000
typedef struct tree_desc_s 80,2054
} FAR tree_desc;84,2284
typedef ush Pos;86,2302
typedef Pos FAR Posf;87,2319
typedef unsigned IPos;88,2341
typedef struct internal_state 94,2525
#   define max_insert_length 176,6054
} FAR deflate_state;263,9909
#define put_byte(268,10021
#define MIN_LOOKAHEAD 271,10084
#define MAX_DIST(276,10257
#define d_code(290,10849
# define _tr_tally_lit(308,11348
# define _tr_tally_dist(315,11560
# define _tr_tally_lit(326,11913
# define _tr_tally_dist(327,11976

zlib/inffixed.h,91
    static const code lenfix[lenfix10,318
    static const code distfix[distfix87,5905

zlib/inflate.h,712
#  define GUNZIP16,632
    HEAD,21,725
    FLAGS,22,775
    TIME,23,836
    OS,24,898
    EXLEN,25,975
    EXTRA,26,1032
    NAME,27,1088
    COMMENT,28,1149
    HCRC,29,1208
    DICTID,30,1263
    DICT,31,1323
        TYPE,32,1385
        TYPEDO,33,1461
        STORED,34,1540
        COPY,35,1617
        TABLE,36,1697
        LENLENS,37,1766
        CODELENS,38,1832
            LEN,39,1910
            LENEXT,40,1971
            DIST,41,2034
            DISTEXT,42,2093
            MATCH,43,2158
            LIT,44,2231
    CHECK,45,2306
    LENGTH,46,2362
    DONE,47,2420
    BAD,48,2490
    MEM,49,2556
    SYNC 50,2635
} inflate_mode;51,2712
struct inflate_state 77,3516

zlib/inftrees.h,137
} code;28,1441
#define ENOUGH 43,2018
#define MAXD 44,2038
    CODES,48,2114
    LENS,49,2125
    DISTS50,2135
} codetype;51,2145

zlib/trees.h,290
local const ct_data static_ltree[static_ltree3,55
local const ct_data static_dtree[static_dtree64,4426
const uch _dist_code[_dist_code73,4865
const uch _length_code[_length_code102,6956
local const int base_length[base_length118,8032
local const int base_dist[base_dist123,8192

zlib/zconf.h,3295
#define ZCONF_H9,217
#  define deflateInit_ 20,462
#  define deflate 21,509
#  define deflateEnd 22,551
#  define inflateInit_ 23,596
#  define inflate 24,643
#  define inflateEnd 25,685
#  define deflateInit2_ 26,730
#  define deflateSetDictionary 27,778
#  define deflateCopy 28,833
#  define deflateReset 29,879
#  define deflateParams 30,926
#  define deflateBound 31,974
#  define deflatePrime 32,1021
#  define inflateInit2_ 33,1068
#  define inflateSetDictionary 34,1116
#  define inflateSync 35,1171
#  define inflateSyncPoint 36,1217
#  define inflateCopy 37,1268
#  define inflateReset 38,1314
#  define inflateBack 39,1361
#  define inflateBackEnd 40,1407
#  define compress 41,1456
#  define compress2 42,1499
#  define compressBound 43,1543
#  define uncompress 44,1591
#  define adler32 45,1636
#  define crc32 46,1678
#  define get_crc_table 47,1718
#  define zError 48,1766
#  define alloc_func 50,1808
#  define free_func 51,1853
#  define in_func 52,1897
#  define out_func 53,1939
#  define Byte 54,1982
#  define uInt 55,2021
#  define uLong 56,2060
#  define Bytef 57,2100
#  define charf 58,2140
#  define intf 59,2180
#  define uIntf 60,2219
#  define uLongf 61,2259
#  define voidpf 62,2300
#  define voidp 63,2341
#  define MSDOS67,2431
#  define OS270,2511
#  define WINDOWS73,2575
#    define WIN3277,2681
#      define SYS16BIT83,2880
#  define MAXSEG_64K93,3091
#  define UNALIGNED_OK96,3132
#    define STDC101,3202
#      define STDC99105,3281
#  define STDC110,3395
#  define STDC113,3484
#  define STDC116,3583
#  define STDC119,3666
#  define STDC123,3766
#    define const 128,3876
#  define NO_DUMMY_DECL134,4095
#    define MAX_MEM_LEVEL 140,4218
#    define MAX_MEM_LEVEL 142,4254
#  define MAX_WBITS 152,4544
#    define OF(172,5324
#    define OF(174,5359
#    define SMALL_MEDIUM187,5818
#      define FAR 189,5863
#      define FAR 191,5896
#    define SMALL_MEDIUM196,6029
#      define FAR 198,6078
#      define FAR 200,6111
#        define ZEXTERN 212,6463
#        define ZEXTERN 214,6528
#      undef FAR224,6848
#    define ZEXPORT 229,7029
#      define ZEXPORTVA 231,7073
#      define ZEXPORTVA 233,7115
#      define ZEXPORT 241,7243
#      define ZEXPORTVA 242,7289
#      define ZEXPORT 244,7345
#      define ZEXPORTVA 245,7391
#  define ZEXTERN 251,7481
#  define ZEXPORT254,7529
#  define ZEXPORTVA257,7572
#  define FAR261,7612
typedef unsigned char  Byte;265,7661
typedef unsigned int   uInt;267,7711
typedef unsigned long  uLong;268,7763
#  define Bytef 272,7911
   typedef Byte  FAR Bytef;274,7942
typedef char  FAR charf;276,7977
typedef int   FAR intf;277,8002
typedef uInt  FAR uIntf;278,8026
typedef uLong FAR uLongf;279,8051
   typedef void const *voidpc;voidpc282,8090
   typedef void FAR   *voidpf;voidpf283,8121
   typedef void       *voidp;voidp284,8152
   typedef Byte const *voidpc;voidpc286,8188
   typedef Byte FAR   *voidpf;voidpf287,8219
   typedef Byte       *voidp;voidp288,8250
#  define z_off_t 297,8466
#  define SEEK_SET 300,8514
#  define SEEK_CUR 301,8584
#  define SEEK_END 302,8653
#  define z_off_t 305,8754
#  define NO_vsnprintf309,8808
#  define NO_vsnprintf313,8860
#    undef FAR315,8896

zlib/zlib.h,1653
#define ZLIB_H32,1350
#define ZLIB_VERSION 40,1426
#define ZLIB_VERNUM 41,1455
typedef voidpf (*alloc_func)alloc_func77,3233
typedef void   (*free_func)free_func78,3306
typedef struct z_stream_s 82,3397
} z_stream;101,4344
typedef z_stream FAR *z_streamp;z_streamp103,4357
typedef struct gz_header_s 109,4526
} gz_header;124,5518
typedef gz_header FAR *gz_headerp;gz_headerp126,5532
#define Z_NO_FLUSH 162,7286
#define Z_PARTIAL_FLUSH 163,7312
#define Z_SYNC_FLUSH 164,7386
#define Z_FULL_FLUSH 165,7412
#define Z_FINISH 166,7438
#define Z_BLOCK 167,7464
#define Z_OK 170,7565
#define Z_STREAM_END 171,7591
#define Z_NEED_DICT 172,7617
#define Z_ERRNO 173,7643
#define Z_STREAM_ERROR 174,7671
#define Z_DATA_ERROR 175,7699
#define Z_MEM_ERROR 176,7727
#define Z_BUF_ERROR 177,7755
#define Z_VERSION_ERROR 178,7783
#define Z_NO_COMPRESSION 183,7965
#define Z_BEST_SPEED 184,8000
#define Z_BEST_COMPRESSION 185,8035
#define Z_DEFAULT_COMPRESSION 186,8070
#define Z_FILTERED 189,8132
#define Z_HUFFMAN_ONLY 190,8164
#define Z_RLE 191,8196
#define Z_FIXED 192,8228
#define Z_DEFAULT_STRATEGY 193,8260
#define Z_BINARY 196,8358
#define Z_TEXT 197,8379
#define Z_ASCII 198,8400
#define Z_UNKNOWN 199,8475
#define Z_DEFLATED 202,8565
#define Z_NULL 205,8667
#define zlib_version 207,8732
typedef unsigned (*in_func)in_func877,44416
typedef int (*out_func)out_func878,44489
typedef voidp gzFile;1066,53977
#define deflateInit(1331,65115
#define inflateInit(1333,65226
#define deflateInit2(1335,65330
#define inflateInit2(1338,65554
#define inflateBackInit(1340,65671
    struct internal_state 1346,65873

zlib/zutil.h,2035
#define ZUTIL_H14,429
#define ZLIB_INTERNAL16,446
#     define errno 33,942
#  define local 43,1082
typedef unsigned char  uch;47,1183
typedef uch FAR uchf;48,1211
typedef unsigned short ush;49,1233
typedef ush FAR ushf;50,1261
typedef unsigned long  ulg;51,1283
#define ERR_MSG(56,1442
#define ERR_RETURN(58,1492
#  define DEF_WBITS 65,1682
#  define DEF_MEM_LEVEL 70,1821
#  define DEF_MEM_LEVEL 72,1853
#define STORED_BLOCK 76,1923
#define STATIC_TREES 77,1946
#define DYN_TREES 78,1969
#define MIN_MATCH 81,2029
#define MAX_MATCH 82,2050
#define PRESET_DICT 85,2118
#  define OS_CODE 90,2283
#  define OS_CODE 105,2717
#  define OS_CODE 109,2783
#  define F_OPEN(110,2807
#  define OS_CODE 115,2955
#  define OS_CODE 119,2998
#  define OS_CODE 126,3124
#      define fdopen(131,3291
#  define OS_CODE 137,3386
#    define OS_CODE 142,3485
#  define OS_CODE 147,3565
#  define fdopen(151,3636
#    define fdopen(156,3763
       typedef int ptrdiff_t;158,3845
#      define _PTRDIFF_T_DEFINED159,3875
#    define fdopen(162,3927
#  define OS_CODE 169,4037
#  define F_OPEN(173,4103
#    define HAVE_VSNPRINTF180,4281
#    define HAVE_VSNPRINTF185,4373
#    define NO_vsnprintf192,4567
#    define NO_vsnprintf195,4621
#      define vsnprintf 200,4847
#    define NO_vsnprintf204,4918
#  define NO_vsnprintf208,4970
#  define NO_MEMCPY212,5018
#  define NO_MEMCPY219,5294
#  define HAVE_MEMCPY222,5387
#    define zmemcpy 226,5491
#    define zmemcmp 227,5520
#    define zmemzero(228,5549
#    define zmemcpy 230,5612
#    define zmemcmp 231,5639
#    define zmemzero(232,5666
#  define Assert(245,6070
#  define Trace(246,6125
#  define Tracev(247,6176
#  define Tracevv(248,6227
#  define Tracec(249,6279
#  define Tracecv(250,6339
#  define Assert(252,6406
#  define Trace(253,6433
#  define Tracev(254,6452
#  define Tracevv(255,6472
#  define Tracec(256,6493
#  define Tracecv(257,6515
#define ZALLOC(264,6663
#define ZFREE(266,6763
#define TRY_FREE(267,6841

client/completion_hash.cc,401
uint hashpjw(28,1062
int completion_hash_init(42,1301
int completion_hash_update(60,1674
static Bucket *completion_hash_find(completion_hash_find113,2688
int completion_hash_exists(136,3117
Bucket *find_all_matches(find_all_matches158,3504
Bucket *find_longest_match(find_longest_match173,3770
void completion_hash_clean(205,4308
void completion_hash_free(212,4455
void add_word(219,4557

client/mysql.cc,6756
#define __GNU_LIBRARY__	38,1244
const char *VER=VER48,1467
#define MAX_COLUMN_LENGTH	51,1554
static char *server_version=server_version54,1644
#define MAX_SERVER_ARGS 57,1725
#undef VOID74,2194
#undef SYSV	81,2309
#define HAVE_READLINE92,2490
#define USE_POPEN93,2512
#undef vidattr99,2638
#define vidattr(100,2653
#define cmp_database(104,2735
#define cmp_database(106,2800
#define PROMPT_CHAR 112,2956
#define DEFAULT_DELIMITER 113,2981
#define MAX_BATCH_BUFFER_SIZE 115,3012
typedef struct st_status117,3067
} STATUS;124,3213
static HashTable ht;127,3225
static char **defaults_argv;defaults_argv128,3246
enum enum_info_type 130,3276
enum enum_info_type { INFO_INFO,enum_info_type::INFO_INFO130,3276
enum enum_info_type { INFO_INFO,INFO_ERROR,enum_info_type::INFO_ERROR130,3276
enum enum_info_type { INFO_INFO,INFO_ERROR,INFO_RESULT}enum_info_type::INFO_RESULT130,3276
typedef enum enum_info_type INFO_TYPE;131,3333
static MYSQL mysql;133,3373
static my_bool ignore_errors=134,3416
static my_bool debug_info_flag,146,4081
static my_bool debug_info_flag, debug_check_flag;146,4081
static my_bool column_types_flag;147,4131
static my_bool preserve_comments=148,4165
static ulong opt_max_allowed_packet,149,4202
static ulong opt_max_allowed_packet, opt_net_buffer_length;149,4202
static uint verbose=150,4262
static uint opt_enable_cleartext_plugin=151,4335
static my_bool using_opt_enable_cleartext_plugin=152,4379
static uint my_end_arg;153,4432
static char * opt_mysql_unix_port=154,4456
static int connect_flag=155,4493
static char *current_host,current_host156,4537
static char *current_host,*current_db,current_db156,4537
static char *current_host,*current_db,*current_user=current_user156,4537
static char *histfile;histfile160,4761
static char *histfile_tmp;histfile_tmp161,4784
static String glob_buffer,162,4811
static String glob_buffer,old_buffer;162,4811
static String processed_prompt;163,4849
static char *full_username=full_username164,4881
static int wait_time 165,4946
static STATUS status;166,4972
static ulong select_limit,167,4994
static ulong select_limit,max_join_size,167,4994
static ulong select_limit,max_join_size,opt_connect_timeout=167,4994
static char mysql_charsets_dir[mysql_charsets_dir168,5057
static char *opt_plugin_dir=opt_plugin_dir169,5102
static const char *xmlmeta[xmlmeta170,5156
static const char *day_names[day_names179,5350
static const char *month_names[month_names180,5426
static char default_pager[default_pager182,5542
static char pager[pager183,5580
static char pager[FN_REFLEN], outfile[outfile183,5580
static FILE *PAGER,PAGER184,5630
static FILE *PAGER, *OUTFILE;OUTFILE184,5630
static MEM_ROOT hash_mem_root;185,5660
static uint prompt_counter;186,5691
static char delimiter[delimiter187,5719
static uint delimiter_length=188,5765
unsigned short terminal_width=189,5798
static char *shared_memory_base_name=shared_memory_base_name192,5851
static uint opt_protocol=194,5898
static CHARSET_INFO *charset_info=charset_info195,5926
const char *default_dbug_option=default_dbug_option199,6008
} COMMANDS;257,8707
static COMMANDS commands[commands259,8720
static const char *load_default_groups[load_default_groups1023,32280
static int         embedded_server_arg_count=1025,32347
static char       *embedded_server_args[embedded_server_args1026,32396
static const char *embedded_server_groups[embedded_server_groups1027,32454
typedef struct _hist_entry 1036,32718
} HIST_ENTRY;1039,32797
extern "C" int history_length;1046,33045
int main(1073,34146
sig_handler mysql_end(1243,38994
sig_handler handle_sigint(1295,40335
sig_handler window_resize(1350,42085
static struct my_option my_long_options[my_long_options1359,42262
static void usage(1587,53946
get_one_option(1615,54680
static int get_options(1781,58726
static int read_and_execute(1845,60223
static COMMANDS *find_command(find_command1995,64051
static bool add_line(2053,65661
extern "C" char *no_completion(no_completion2351,74536
static void fix_history(2358,74685
static int not_in_history(2414,76048
static int fake_magic_space(2427,76294
static void initialize_readline 2437,76431
static char **new_mysql_completion(new_mysql_completion2468,77596
static char *new_command_generator(new_command_generator2482,78051
static void build_completion_hash(2563,79392
char *index(index2690,82857
char *rindex(rindex2699,82987
static int reconnect(2712,83167
static void get_current_db(2728,83530
int mysql_real_query_for_lazy(2753,84203
int mysql_store_result_for_lazy(2769,84566
static void print_help_item(2779,84754
static int com_server_help(2791,85054
com_help(2898,87802
com_clear(2938,89151
com_charset(2950,89359
com_go(2982,90117
static void init_pager(3154,94327
static void end_pager(3170,94581
static void init_tee(3179,94674
static void end_tee(3197,95101
com_ego(3207,95212
static const char *fieldtype2str(fieldtype2str3218,95381
static char *fieldflags2str(fieldflags2str3251,96829
#define ff2s_check_flag(3255,96915
#undef ff2s_check_flag3276,97574
print_field_types(3283,97673
print_table_data(3313,98661
static int get_field_disp_length(3440,102962
static int get_result_width(3463,103503
tee_print_sized_data(3485,103972
print_table_data_html(3515,104739
print_table_data_xml(3554,105720
print_table_data_vertically(3593,106806
static void print_warnings(3646,108077
static const char *array_value(array_value3689,109136
xmlencode_print(3699,109302
safe_put_field(3718,109606
print_tab_data(3760,110514
com_tee(3791,111197
com_notee(3836,112306
com_pager(3851,112578
com_nopager(3895,113766
com_edit(3913,114085
com_quit(3957,115306
com_rehash(3965,115445
com_shell(3977,115639
com_print(4005,116201
com_connect(4017,116549
static int com_source(4070,117755
com_delimiter(4125,119412
com_use(4154,120027
normalize_dbname(4262,122860
com_warnings(4299,123696
com_nowarnings(4308,123885
char *get_arg(get_arg4326,124527
get_quote_count(4381,125614
sql_real_connect(4393,125818
sql_connect(4481,128460
com_status(4516,129107
server_version_string(4641,133370
put_info(4682,134485
put_error(4753,136162
static void remove_cntrl(4760,136284
void tee_fprintf(4770,136510
void tee_fputs(4787,136771
void tee_puts(4795,136879
void tee_putc(4806,137040
#undef CLOCKS_PER_SEC4818,137246
#define CLOCKS_PER_SEC 4819,137268
static ulong start_timer(4823,137329
static void nice_time(4839,137627
static void end_timer(4870,138338
static void mysql_end_timer(4877,138476
static const char* construct_prompt(4885,138628
static void add_int_to_prompt(5050,142351
static void init_username(5057,142484
static int com_prompt(5074,142909

client/mysqladmin.cc,3921
#define ADMIN_VERSION 27,1040
#define MAX_MYSQL_VAR 28,1069
#define SHUTDOWN_DEF_TIMEOUT 29,1095
#define MAX_TRUNC_LENGTH 30,1154
char *host=host32,1182
char truncated_var_names[truncated_var_names34,1290
char ex_var_names[ex_var_names35,1349
ulonglong last_values[last_values36,1394
static int interval=37,1432
static my_bool option_force=38,1455
static my_bool debug_info_flag=41,1633
static uint tcp_port 42,1689
static uint opt_count_iterations=43,1764
static ulong opt_connect_timeout,44,1813
static ulong opt_connect_timeout, opt_shutdown_timeout;44,1813
static char * unix_port=45,1869
static char *opt_plugin_dir=opt_plugin_dir46,1896
static uint opt_enable_cleartext_plugin=47,1950
static my_bool using_opt_enable_cleartext_plugin=48,1994
static char *shared_memory_base_name=shared_memory_base_name51,2065
static uint opt_protocol=53,2112
static myf error_flags;54,2140
static uint ex_val_max_len[ex_val_max_len62,2438
static my_bool ex_status_printed 63,2481
static uint ex_var_count,64,2555
static uint ex_var_count, max_var_length,64,2555
static uint ex_var_count, max_var_length, max_val_length;64,2555
enum commands 94,3789
  ADMIN_ERROR,commands::ADMIN_ERROR95,3805
  ADMIN_CREATE,commands::ADMIN_CREATE96,3820
  ADMIN_CREATE,           ADMIN_DROP,commands::ADMIN_DROP96,3820
  ADMIN_CREATE,           ADMIN_DROP,            ADMIN_SHUTDOWN,commands::ADMIN_SHUTDOWN96,3820
  ADMIN_RELOAD,commands::ADMIN_RELOAD97,3885
  ADMIN_RELOAD,           ADMIN_REFRESH,commands::ADMIN_REFRESH97,3885
  ADMIN_RELOAD,           ADMIN_REFRESH,         ADMIN_VER,commands::ADMIN_VER97,3885
  ADMIN_PROCESSLIST,commands::ADMIN_PROCESSLIST98,3945
  ADMIN_PROCESSLIST,      ADMIN_STATUS,commands::ADMIN_STATUS98,3945
  ADMIN_PROCESSLIST,      ADMIN_STATUS,          ADMIN_KILL,commands::ADMIN_KILL98,3945
  ADMIN_DEBUG,commands::ADMIN_DEBUG99,4006
  ADMIN_DEBUG,            ADMIN_VARIABLES,commands::ADMIN_VARIABLES99,4006
  ADMIN_DEBUG,            ADMIN_VARIABLES,       ADMIN_FLUSH_LOGS,commands::ADMIN_FLUSH_LOGS99,4006
  ADMIN_FLUSH_HOSTS,commands::ADMIN_FLUSH_HOSTS100,4073
  ADMIN_FLUSH_HOSTS,      ADMIN_FLUSH_TABLES,commands::ADMIN_FLUSH_TABLES100,4073
  ADMIN_FLUSH_HOSTS,      ADMIN_FLUSH_TABLES,    ADMIN_PASSWORD,commands::ADMIN_PASSWORD100,4073
  ADMIN_PING,commands::ADMIN_PING101,4138
  ADMIN_PING,             ADMIN_EXTENDED_STATUS,commands::ADMIN_EXTENDED_STATUS101,4138
  ADMIN_PING,             ADMIN_EXTENDED_STATUS, ADMIN_FLUSH_STATUS,commands::ADMIN_FLUSH_STATUS101,4138
  ADMIN_FLUSH_PRIVILEGES,commands::ADMIN_FLUSH_PRIVILEGES102,4207
  ADMIN_FLUSH_PRIVILEGES, ADMIN_START_SLAVE,commands::ADMIN_START_SLAVE102,4207
  ADMIN_FLUSH_PRIVILEGES, ADMIN_START_SLAVE,     ADMIN_STOP_SLAVE,commands::ADMIN_STOP_SLAVE102,4207
  ADMIN_FLUSH_THREADS,commands::ADMIN_FLUSH_THREADS103,4274
  ADMIN_FLUSH_THREADS,    ADMIN_OLD_PASSWORDcommands::ADMIN_OLD_PASSWORD103,4274
static const char *command_names[command_names105,4322
static TYPELIB command_typelib=117,4836
static struct my_option my_long_options[my_long_options120,4937
static const char *load_default_groups[load_default_groups226,9881
get_one_option(229,9961
int main(305,11527
sig_handler endprog(485,16529
static my_bool sql_connect(502,16919
static int execute_commands(595,19370
static void print_version(1093,32196
static void usage(1100,32360
static int drop_db(1140,34006
static void nice_time(1170,34829
static void print_header(1199,35393
static void print_top(1215,35685
static void print_row(1237,36157
static void print_relative_row(1255,36549
static void print_relative_row_vert(1273,37030
static void store_values(1295,37620
static void print_relative_header(1317,38106
static void print_relative_line(1328,38298
static void truncate_names(1344,38525
static my_bool get_pidfile(1380,39437
static my_bool wait_pidfile(1405,39990

client/mysqlbinlog.cc,4223
#define MYSQL_CLIENT31,1176
#undef MYSQL_SERVER32,1197
#define BIN_LOG_HEADER_SIZE	42,1502
#define PROBE_HEADER_LEN	43,1532
#define CLIENT_CAPABILITIES	46,1580
char server_version[server_version48,1672
ulong server_id 49,1716
ulong bytes_sent 52,1762
ulong mysqld_net_retry_count 53,1806
ulong open_files_limit;54,1842
uint test_flags 55,1866
static uint opt_protocol=56,1888
static FILE *result_file;result_file57,1917
static const char* default_dbug_option 60,1961
static const char *load_default_groups[load_default_groups62,2041
static bool one_database=67,2267
static bool opt_hexdump=68,2338
const char *base64_output_mode_names[base64_output_mode_names69,2366
TYPELIB base64_output_mode_typelib=71,2467
static enum_base64_output_mode opt_base64_output_mode=74,2595
static char *opt_base64_output_mode_str=opt_base64_output_mode_str75,2672
static char* database=76,2720
static my_bool force_opt=77,2746
static my_bool debug_info_flag,78,2805
static my_bool debug_info_flag, debug_check_flag;78,2805
static my_bool force_if_open_opt=79,2855
static ulonglong offset 80,2892
static char* host 81,2921
static int port=82,2944
static uint my_end_arg;83,2964
static const char* sock=84,2988
static char *opt_plugin_dir=opt_plugin_dir85,3016
static char *shared_memory_base_name=shared_memory_base_name88,3088
static char* user 90,3136
static char* pass 91,3159
static char *charset=charset92,3182
static uint verbose=94,3208
static ulonglong start_position,96,3233
static ulonglong start_position, stop_position;96,3233
#define start_position_mot 97,3281
#define stop_position_mot 98,3335
static char *start_datetime_str,start_datetime_str100,3389
static char *start_datetime_str, *stop_datetime_str;stop_datetime_str100,3389
static my_time_t start_datetime=101,3442
static ulonglong rec_count=102,3508
static short binlog_flags 103,3539
static MYSQL* mysql 104,3571
static char* dirname_for_local_load=105,3599
static Format_description_log_event* glob_description_event=113,3868
enum Exit_status 118,3985
  OK_CONTINUE=Exit_status::OK_CONTINUE120,4062
  ERROR_STOP,Exit_status::ERROR_STOP122,4134
  OK_STOPExit_status::OK_STOP124,4202
class Load_log_processor135,4597
  struct File_name_recordLoad_log_processor::File_name_record150,5223
  File create_unique_file(Load_log_processor::create_unique_file179,6212
  Load_log_processor(Load_log_processor::Load_log_processor194,6620
  ~Load_log_processor(Load_log_processor::~Load_log_processor195,6646
  int init(Load_log_processor::init197,6674
  void init_by_dir_name(Load_log_processor::init_by_dir_name203,6785
  void init_by_cur_dir(Load_log_processor::init_by_cur_dir208,6938
  void destroy(Load_log_processor::destroy214,7110
  Create_file_log_event *grab_event(Load_log_processor::grab_event246,8115
  char *grab_fname(Load_log_processor::grab_fname274,9147
File Load_log_processor::prepare_new_file_for_old_format(312,10506
Exit_status Load_log_processor::load_old_format_file(350,11428
Exit_status Load_log_processor::process_first_event(420,13582
Exit_status  Load_log_processor::process(499,15803
Exit_status Load_log_processor::process(519,16452
Exit_status Load_log_processor::process(548,17548
static Load_log_processor load_processor;589,18727
static void convert_path_to_forward_slashes(606,19219
static bool shall_skip_database(626,19606
write_event_header_and_base64(651,20399
Exit_status process_event(693,21931
static struct my_option my_long_options[my_long_options1066,34319
static void error_or_warning(1237,43012
static void error(1251,43364
static void sql_print_error(1266,43653
static void warning(1281,43989
static void cleanup(1292,44198
static void print_version(1306,44404
static void usage(1312,44517
static my_time_t convert_str_to_timestamp(1325,44868
get_one_option(1349,45595
static int parse_args(1423,47384
static Exit_status safe_connect(1445,47932
static Exit_status dump_log_entries(1491,49205
static Exit_status check_master_version(1527,50293
static Exit_status dump_remote_log_entries(1605,52477
static Exit_status check_header(1798,59193
static Exit_status dump_local_log_entries(1971,65499
int main(2095,68967

client/mysqltest.cc,21688
#define MTEST_VERSION 27,985
#define SIGNAL_FMT 52,1520
#define SIGNAL_FMT 54,1562
#define USE_CYGWIN59,1682
#define MAX_VAR_NAME_LENGTH 62,1709
#define MAX_COLUMNS 63,1744
#define MAX_EMBEDDED_SERVER_ARGS 64,1779
#define MAX_DELIMITER_LENGTH 65,1815
#define DEFAULT_MAX_CONN 66,1847
#define QUERY_SEND_FLAG 69,1921
#define QUERY_REAP_FLAG 70,1948
  OPT_PS_PROTOCOL=::OPT_PS_PROTOCOL83,2265
  OPT_PS_PROTOCOL=OPT_MAX_CLIENT_OPTION,::OPT_MAX_CLIENT_OPTION83,2265
  OPT_PS_PROTOCOL=OPT_MAX_CLIENT_OPTION, OPT_SP_PROTOCOL,::OPT_SP_PROTOCOL83,2265
  OPT_CURSOR_PROTOCOL,::OPT_CURSOR_PROTOCOL84,2323
  OPT_CURSOR_PROTOCOL, OPT_VIEW_PROTOCOL,::OPT_VIEW_PROTOCOL84,2323
  OPT_CURSOR_PROTOCOL, OPT_VIEW_PROTOCOL, OPT_MAX_CONNECT_RETRIES,::OPT_MAX_CONNECT_RETRIES84,2323
  OPT_MAX_CONNECTIONS,::OPT_MAX_CONNECTIONS85,2390
  OPT_MAX_CONNECTIONS, OPT_MARK_PROGRESS,::OPT_MARK_PROGRESS85,2390
  OPT_MAX_CONNECTIONS, OPT_MARK_PROGRESS, OPT_LOG_DIR,::OPT_LOG_DIR85,2390
  OPT_TAIL_LINES,::OPT_TAIL_LINES86,2445
  OPT_TAIL_LINES, OPT_RESULT_FORMAT_VERSION::OPT_RESULT_FORMAT_VERSION86,2445
static int record=89,2493
static char *opt_db=opt_db90,2530
const char *opt_user=opt_user91,2568
static char *shared_memory_base_name=shared_memory_base_name92,2642
const char *opt_logdir=opt_logdir93,2682
const char *opt_include=opt_include94,2710
static int opt_port=95,2757
static int opt_max_connect_retries;96,2781
static int opt_result_format_version;97,2817
static int opt_max_connections=98,2855
static my_bool opt_compress=99,2905
static my_bool debug_info_flag=100,2960
static my_bool tty_password=101,3016
static my_bool opt_mark_progress=102,3048
static my_bool ps_protocol=103,3085
static my_bool sp_protocol=104,3140
static my_bool view_protocol=105,3195
static my_bool cursor_protocol=106,3254
static my_bool parsing_disabled=107,3317
static my_bool display_result_vertically=108,3353
static my_bool disable_query_log=110,3488
static my_bool disable_connect_log=111,3548
static my_bool disable_warnings=112,3587
static my_bool disable_info=113,3623
static my_bool abort_on_error=114,3655
static my_bool server_initialized=115,3689
static my_bool is_windows=116,3727
static char **default_argv;default_argv117,3757
static const char *load_default_groups[load_default_groups118,3785
static char line_buffer[line_buffer119,3857
static char line_buffer[MAX_DELIMITER_LENGTH], *line_buffer_pos=line_buffer_pos119,3857
struct property 123,4010
static struct property prop_list[prop_list131,4281
static my_bool once_property=142,4777
enum enum_prop 144,4815
  P_ABORT=enum_prop::P_ABORT145,4832
  P_CONNECT,enum_prop::P_CONNECT146,4846
  P_INFO,enum_prop::P_INFO147,4859
  P_META,enum_prop::P_META148,4869
  P_PS,enum_prop::P_PS149,4879
  P_QUERY,enum_prop::P_QUERY150,4887
  P_RESULT,enum_prop::P_RESULT151,4898
  P_WARN,enum_prop::P_WARN152,4910
  P_MAXenum_prop::P_MAX153,4920
static uint start_lineno=156,4932
static uint my_end_arg=157,4997
static uint opt_tail_lines=160,5090
static uint opt_connect_timeout=162,5122
static char delimiter[delimiter164,5159
static uint delimiter_length=165,5209
static char TMPDIR[TMPDIR167,5243
enum block_cmd 170,5293
  cmd_none,block_cmd::cmd_none171,5310
  cmd_if,block_cmd::cmd_if172,5322
  cmd_whileblock_cmd::cmd_while173,5332
struct st_block176,5348
static struct st_block block_stack[block_stack184,5607
static struct st_block *cur_block,cur_block185,5647
static struct st_block *cur_block, *block_stack_end;block_stack_end185,5647
struct st_test_file188,5723
static struct st_test_file file_stack[file_stack195,5824
static struct st_test_file* cur_file;196,5867
static struct st_test_file* file_stack_end;197,5905
static CHARSET_INFO *charset_info=charset_info200,5951
static const char *embedded_server_groups[embedded_server_groups202,6029
static int embedded_server_arg_count=210,6136
static char *embedded_server_args[embedded_server_args211,6176
static char *timer_file timer_file217,6318
static ulonglong timer_start;218,6350
static ulong connection_retry_sleep=223,6448
static char *opt_plugin_dir=opt_plugin_dir225,6513
static my_regex_t ps_re;228,6569
static my_regex_t sp_re;229,6643
static my_regex_t view_re;230,6707
static uint opt_protocol=236,6871
DYNAMIC_ARRAY q_lines;238,6900
struct Parser242,6950
} parser;245,6997
struct MasterPos247,7008
} master_pos;251,7064
const char *result_file_name=result_file_name254,7149
} VAR;267,7411
VAR var_reg[var_reg270,7459
HASH var_hash;272,7477
struct st_connection274,7493
struct st_connection *connections=connections299,8056
struct st_connection* cur_con=300,8097
enum enum_commands 307,8278
  Q_CONNECTION=enum_commands::Q_CONNECTION308,8299
  Q_CONNECTION=1,     Q_QUERY,enum_commands::Q_QUERY308,8299
  Q_CONNECT,enum_commands::Q_CONNECT309,8330
  Q_CONNECT,	    Q_SLEEP,enum_commands::Q_SLEEP309,8330
  Q_CONNECT,	    Q_SLEEP, Q_REAL_SLEEP,enum_commands::Q_REAL_SLEEP309,8330
  Q_INC,enum_commands::Q_INC310,8370
  Q_INC,		    Q_DEC,enum_commands::Q_DEC310,8370
  Q_SOURCE,enum_commands::Q_SOURCE311,8391
  Q_SOURCE,	    Q_DISCONNECT,enum_commands::Q_DISCONNECT311,8391
  Q_LET,enum_commands::Q_LET312,8421
  Q_LET,		    Q_ECHO,enum_commands::Q_ECHO312,8421
  Q_WHILE,enum_commands::Q_WHILE313,8443
  Q_WHILE,	    Q_END_BLOCK,enum_commands::Q_END_BLOCK313,8443
  Q_SYSTEM,enum_commands::Q_SYSTEM314,8471
  Q_SYSTEM,	    Q_RESULT,enum_commands::Q_RESULT314,8471
  Q_REQUIRE,enum_commands::Q_REQUIRE315,8497
  Q_REQUIRE,	    Q_SAVE_MASTER_POS,enum_commands::Q_SAVE_MASTER_POS315,8497
  Q_SYNC_WITH_MASTER,enum_commands::Q_SYNC_WITH_MASTER316,8533
  Q_SYNC_SLAVE_WITH_MASTER,enum_commands::Q_SYNC_SLAVE_WITH_MASTER317,8555
  Q_ERROR,enum_commands::Q_ERROR318,8583
  Q_SEND,enum_commands::Q_SEND319,8594
  Q_SEND,		    Q_REAP,enum_commands::Q_REAP319,8594
  Q_DIRTY_CLOSE,enum_commands::Q_DIRTY_CLOSE320,8617
  Q_DIRTY_CLOSE,	    Q_REPLACE,enum_commands::Q_REPLACE320,8617
  Q_DIRTY_CLOSE,	    Q_REPLACE, Q_REPLACE_COLUMN,enum_commands::Q_REPLACE_COLUMN320,8617
  Q_PING,enum_commands::Q_PING321,8667
  Q_PING,		    Q_EVAL,enum_commands::Q_EVAL321,8667
  Q_EVAL_RESULT,enum_commands::Q_EVAL_RESULT322,8690
  Q_ENABLE_QUERY_LOG,enum_commands::Q_ENABLE_QUERY_LOG323,8707
  Q_ENABLE_QUERY_LOG, Q_DISABLE_QUERY_LOG,enum_commands::Q_DISABLE_QUERY_LOG323,8707
  Q_ENABLE_RESULT_LOG,enum_commands::Q_ENABLE_RESULT_LOG324,8750
  Q_ENABLE_RESULT_LOG, Q_DISABLE_RESULT_LOG,enum_commands::Q_DISABLE_RESULT_LOG324,8750
  Q_ENABLE_CONNECT_LOG,enum_commands::Q_ENABLE_CONNECT_LOG325,8795
  Q_ENABLE_CONNECT_LOG, Q_DISABLE_CONNECT_LOG,enum_commands::Q_DISABLE_CONNECT_LOG325,8795
  Q_WAIT_FOR_SLAVE_TO_STOP,enum_commands::Q_WAIT_FOR_SLAVE_TO_STOP326,8842
  Q_ENABLE_WARNINGS,enum_commands::Q_ENABLE_WARNINGS327,8870
  Q_ENABLE_WARNINGS, Q_DISABLE_WARNINGS,enum_commands::Q_DISABLE_WARNINGS327,8870
  Q_ENABLE_INFO,enum_commands::Q_ENABLE_INFO328,8911
  Q_ENABLE_INFO, Q_DISABLE_INFO,enum_commands::Q_DISABLE_INFO328,8911
  Q_ENABLE_METADATA,enum_commands::Q_ENABLE_METADATA329,8944
  Q_ENABLE_METADATA, Q_DISABLE_METADATA,enum_commands::Q_DISABLE_METADATA329,8944
  Q_EXEC,enum_commands::Q_EXEC330,8985
  Q_EXEC, Q_DELIMITER,enum_commands::Q_DELIMITER330,8985
  Q_DISABLE_ABORT_ON_ERROR,enum_commands::Q_DISABLE_ABORT_ON_ERROR331,9008
  Q_DISABLE_ABORT_ON_ERROR, Q_ENABLE_ABORT_ON_ERROR,enum_commands::Q_ENABLE_ABORT_ON_ERROR331,9008
  Q_DISPLAY_VERTICAL_RESULTS,enum_commands::Q_DISPLAY_VERTICAL_RESULTS332,9061
  Q_DISPLAY_VERTICAL_RESULTS, Q_DISPLAY_HORIZONTAL_RESULTS,enum_commands::Q_DISPLAY_HORIZONTAL_RESULTS332,9061
  Q_QUERY_VERTICAL,enum_commands::Q_QUERY_VERTICAL333,9121
  Q_QUERY_VERTICAL, Q_QUERY_HORIZONTAL,enum_commands::Q_QUERY_HORIZONTAL333,9121
  Q_QUERY_VERTICAL, Q_QUERY_HORIZONTAL, Q_SORTED_RESULT,enum_commands::Q_SORTED_RESULT333,9121
  Q_LOWERCASE,enum_commands::Q_LOWERCASE334,9178
  Q_START_TIMER,enum_commands::Q_START_TIMER335,9193
  Q_START_TIMER, Q_END_TIMER,enum_commands::Q_END_TIMER335,9193
  Q_CHARACTER_SET,enum_commands::Q_CHARACTER_SET336,9223
  Q_CHARACTER_SET, Q_DISABLE_PS_PROTOCOL,enum_commands::Q_DISABLE_PS_PROTOCOL336,9223
  Q_CHARACTER_SET, Q_DISABLE_PS_PROTOCOL, Q_ENABLE_PS_PROTOCOL,enum_commands::Q_ENABLE_PS_PROTOCOL336,9223
  Q_DISABLE_RECONNECT,enum_commands::Q_DISABLE_RECONNECT337,9287
  Q_DISABLE_RECONNECT, Q_ENABLE_RECONNECT,enum_commands::Q_ENABLE_RECONNECT337,9287
  Q_IF,enum_commands::Q_IF338,9330
  Q_DISABLE_PARSING,enum_commands::Q_DISABLE_PARSING339,9338
  Q_DISABLE_PARSING, Q_ENABLE_PARSING,enum_commands::Q_ENABLE_PARSING339,9338
  Q_REPLACE_REGEX,enum_commands::Q_REPLACE_REGEX340,9377
  Q_REPLACE_REGEX, Q_REMOVE_FILE,enum_commands::Q_REMOVE_FILE340,9377
  Q_REPLACE_REGEX, Q_REMOVE_FILE, Q_FILE_EXIST,enum_commands::Q_FILE_EXIST340,9377
  Q_WRITE_FILE,enum_commands::Q_WRITE_FILE341,9425
  Q_WRITE_FILE, Q_COPY_FILE,enum_commands::Q_COPY_FILE341,9425
  Q_WRITE_FILE, Q_COPY_FILE, Q_PERL,enum_commands::Q_PERL341,9425
  Q_WRITE_FILE, Q_COPY_FILE, Q_PERL, Q_DIE,enum_commands::Q_DIE341,9425
  Q_WRITE_FILE, Q_COPY_FILE, Q_PERL, Q_DIE, Q_EXIT,enum_commands::Q_EXIT341,9425
  Q_WRITE_FILE, Q_COPY_FILE, Q_PERL, Q_DIE, Q_EXIT, Q_SKIP,enum_commands::Q_SKIP341,9425
  Q_CHMOD_FILE,enum_commands::Q_CHMOD_FILE342,9485
  Q_CHMOD_FILE, Q_APPEND_FILE,enum_commands::Q_APPEND_FILE342,9485
  Q_CHMOD_FILE, Q_APPEND_FILE, Q_CAT_FILE,enum_commands::Q_CAT_FILE342,9485
  Q_CHMOD_FILE, Q_APPEND_FILE, Q_CAT_FILE, Q_DIFF_FILES,enum_commands::Q_DIFF_FILES342,9485
  Q_SEND_QUIT,enum_commands::Q_SEND_QUIT343,9542
  Q_SEND_QUIT, Q_CHANGE_USER,enum_commands::Q_CHANGE_USER343,9542
  Q_SEND_QUIT, Q_CHANGE_USER, Q_MKDIR,enum_commands::Q_MKDIR343,9542
  Q_SEND_QUIT, Q_CHANGE_USER, Q_MKDIR, Q_RMDIR,enum_commands::Q_RMDIR343,9542
  Q_LIST_FILES,enum_commands::Q_LIST_FILES344,9590
  Q_LIST_FILES, Q_LIST_FILES_WRITE_FILE,enum_commands::Q_LIST_FILES_WRITE_FILE344,9590
  Q_LIST_FILES, Q_LIST_FILES_WRITE_FILE, Q_LIST_FILES_APPEND_FILE,enum_commands::Q_LIST_FILES_APPEND_FILE344,9590
  Q_SEND_SHUTDOWN,enum_commands::Q_SEND_SHUTDOWN345,9657
  Q_SEND_SHUTDOWN, Q_SHUTDOWN_SERVER,enum_commands::Q_SHUTDOWN_SERVER345,9657
  Q_RESULT_FORMAT_VERSION,enum_commands::Q_RESULT_FORMAT_VERSION346,9695
  Q_MOVE_FILE,enum_commands::Q_MOVE_FILE347,9722
  Q_MOVE_FILE, Q_REMOVE_FILES_WILDCARD,enum_commands::Q_REMOVE_FILES_WILDCARD347,9722
  Q_MOVE_FILE, Q_REMOVE_FILES_WILDCARD, Q_SEND_EVAL,enum_commands::Q_SEND_EVAL347,9722
  Q_UNKNOWN,enum_commands::Q_UNKNOWN348,9775
  Q_COMMENT,enum_commands::Q_COMMENT349,9822
  Q_COMMENT_WITH_COMMAND,enum_commands::Q_COMMENT_WITH_COMMAND350,9869
  Q_EMPTY_LINEenum_commands::Q_EMPTY_LINE351,9895
const char *command_names[command_names355,9915
enum match_err_type460,12033
  ERR_EMPTY=match_err_type::ERR_EMPTY462,12055
  ERR_ERRNO,match_err_type::ERR_ERRNO463,12071
  ERR_SQLSTATEmatch_err_type::ERR_SQLSTATE464,12084
struct st_match_err467,12103
struct st_expected_errors477,12262
static struct st_expected_errors saved_expected_errors;482,12338
struct st_command484,12395
TYPELIB command_typelib=495,12685
DYNAMIC_STRING ds_res;498,12770
DYNAMIC_STRING *ds_warn=ds_warn500,12853
struct st_command *curr_command=curr_command501,12881
char builtin_echo[builtin_echo503,12918
struct st_replace_regex505,12949
struct st_replace_regex *glob_replace_regex=glob_replace_regex523,13451
struct st_replace *glob_replace=glob_replace526,13519
static char *replace_column[replace_column568,15133
static uint max_replace_column=569,15175
void free_all_replace(584,15547
class LogFile 591,15643
  LogFile(LogFile::LogFile596,15740
  ~LogFile(LogFile::~LogFile600,15839
  const char* file_name(LogFile::file_name604,15872
  size_t bytes_written(LogFile::bytes_written605,15928
  void open(LogFile::open607,15988
  void close(LogFile::close630,16591
  void flush(LogFile::flush641,16744
  void write(LogFile::write650,16910
  void show_tail(LogFile::show_tail666,17322
LogFile log_file;761,19833
LogFile progress_file;762,19851
#define EMB_SEND_QUERY 781,20623
#define EMB_READ_QUERY_RESULT 782,20648
#define EMB_END_CONNECTION 783,20680
pthread_attr_t cn_thd_attrib;786,20747
pthread_handler_t connection_thread(796,21002
static void wait_query_thread_done(837,22024
static void signal_connection_thd(850,22339
static int do_send_query(868,22883
static int do_read_query_result(878,23144
static void emb_close_connection(889,23373
static void init_connection_thd(904,23778
#define do_send_query(919,24255
#define do_read_query_result(920,24328
void do_eval(924,24427
static void show_query(996,25993
static void show_warnings_before_error(1061,27498
enum arg_type1119,28744
  ARG_STRING,arg_type::ARG_STRING1121,28760
  ARG_RESTarg_type::ARG_REST1122,28774
struct command_arg 1125,28789
void check_command_args(1134,29096
void handle_command_error(1222,31554
void close_connections(1260,32799
void close_statements(1281,33262
void close_files(1295,33503
void free_used_memory(1312,33854
static void cleanup_and_exit(1359,34927
void print_file_stack(1384,35329
void die(1395,35570
void abort_not_supported_test(1446,36646
void abort_not_in_this_version(1473,37255
void verbose_msg(1479,37347
void log_msg(1501,37827
int cat_file(1529,38298
static int run_command(1574,39315
static int run_tool(1616,40216
static int diff_check(1671,41567
void show_diff(1707,42345
enum compare_files_result_enum 1818,45371
   RESULT_OK=compare_files_result_enum::RESULT_OK1819,45404
   RESULT_CONTENT_MISMATCH=compare_files_result_enum::RESULT_CONTENT_MISMATCH1820,45421
   RESULT_LENGTH_MISMATCH=compare_files_result_enum::RESULT_LENGTH_MISMATCH1821,45452
int compare_files2(1838,45756
int compare_files(1899,46987
int dyn_string_cmp(1927,47510
void check_result(1973,48598
void check_require(2041,50334
static int strip_surrounding(2060,50751
static void strip_parentheses(2091,51314
static uchar *get_var_key(get_var_key2101,51590
static void var_free(2111,51817
void var_check_int(2121,51949
VAR *var_init(var_init2139,52356
VAR* var_from_env(2181,53435
VAR* var_get(2194,53685
VAR *var_obtain(var_obtain2251,55129
void var_set(2268,55554
void var_set_string(2310,56593
void var_set_int(2316,56724
void var_set_errno(2329,56995
void set_once_property(2337,57207
void set_property(2347,57417
void revert_properties(2362,57759
void var_query_set(2403,58627
set_result_format_version(2495,61037
do_result_format_version(2519,61510
void var_set_query_get_value(2569,63067
void var_copy(2678,66123
void eval_expr(2700,66755
int open_file(2777,68812
void do_source(2828,69889
char tmp_sh_name[tmp_sh_name2861,70767
char tmp_sh_name[64], tmp_sh_cmd[tmp_sh_cmd2861,70767
void init_tmp_sh_file(2864,70813
void free_tmp_sh_file(2875,71148
FILE* my_popen(2884,71244
static void init_builtin_echo(2896,71558
static int replace(2936,72390
void do_exec(2976,73576
enum enum_operator3086,76732
  DO_DEC,enum_operator::DO_DEC3088,76753
  DO_INCenum_operator::DO_INC3089,76763
int do_modify_var(3107,76972
int my_system(3148,78021
void do_system(3173,78505
void set_wild_chars 3225,79893
void do_remove_file(3259,80450
void do_remove_files_wildcard(3290,81277
void do_copy_file(3378,83975
void do_move_file(3415,85071
void do_chmod_file(3452,86062
void do_file_exist(3495,87213
void do_mkdir(3527,88013
void do_rmdir(3557,88754
static int get_list_files(3589,89560
static void do_list_files(3632,90762
static void do_list_files_write_file_command(3670,91900
int my_getc(3712,93404
void my_ungetc(3720,93525
void read_until_delimiter(3726,93585
void do_write_file_command(3775,94894
void do_write_file(3849,96860
void do_append_file(3880,97349
void do_cat_file(3898,97578
void do_diff_files(3934,98385
struct st_connection * find_connection_by_name(3979,99787
void do_send_quit(4003,100190
void do_change_user(4046,101083
void do_perl(4113,102757
int do_echo(4226,105964
void do_wait_for_slave_to_stop(4241,106372
void do_sync_with_master2(4270,107092
void do_sync_with_master(4337,109051
int do_save_master_pos(4360,109632
void do_let(4540,115198
int do_sleep(4602,116970
void do_get_file_name(4645,118378
void do_set_charset(4661,118738
int query_get_string(4686,119357
static int my_kill(4711,119985
void do_shutdown_server(4747,120569
} st_error;4828,122739
static st_error global_error_names[global_error_names4830,122752
uint get_errcode_from_name(4837,122867
const char *get_errname_from_code get_errname_from_code4864,123649
void do_get_errcodes(4886,124090
char *get_string(get_string5023,127436
void set_reconnect(5096,129039
void set_current_connection(5114,129485
void select_connection_name(5125,129855
void select_connection(5150,130424
void do_close_connection(5168,131053
void safe_connect(5273,133918
int connect_n_handle_errors(5343,136147
void do_connect(5460,139903
int do_done(5693,147083
enum block_op 5727,147931
  EQ_OP,block_op::EQ_OP5728,147947
  NE_OP,block_op::NE_OP5729,147956
  GT_OP,block_op::GT_OP5730,147965
  GE_OP,block_op::GE_OP5731,147974
  LT_OP,block_op::LT_OP5732,147983
  LE_OP,block_op::LE_OP5733,147992
  ILLEG_OPblock_op::ILLEG_OP5734,148001
enum block_op find_operand(5738,148017
void do_block(5793,149155
void do_delimiter(5983,154071
my_bool match_delimiter(6004,154577
my_bool end_of_query(6028,155018
int read_line(6058,155849
  enum {R_NORMAL,::R_NORMAL6065,156028
  enum {R_NORMAL, R_Q,::R_Q6065,156028
  enum {R_NORMAL, R_Q, R_SLASH_IN_Q,::R_SLASH_IN_Q6065,156028
        R_COMMENT,::R_COMMENT6066,156065
        R_COMMENT, R_LINE_START}::R_LINE_START6066,156065
void convert_to_format_v1(6276,161268
void check_eol_junk_line(6323,162160
void check_eol_junk(6343,162638
bool is_delimiter(6374,163222
#define MAX_QUERY 6405,163974
static char read_command_buf[read_command_buf6406,164045
int read_command(6408,164087
static struct my_option my_long_options[my_long_options6480,166007
void print_version(6605,172199
void usage(6611,172354
void read_embedded_server_arguments(6628,172854
get_one_option(6670,173867
int parse_args(6770,176439
void str_to_file2(6816,177445
void str_to_file(6850,178398
void check_regerr(6856,178502
DYNAMIC_ARRAY patterns;6870,178695
void init_win_path_patterns(6881,178883
void free_win_path_patterns(6932,180078
void fix_win_paths(6957,180679
void append_field(6993,181450
void append_result(7056,182993
void append_stmt_result(7081,183614
void append_metadata(7144,185533
void append_info(7196,187384
void append_table_headings(7215,187790
int append_warnings(7236,188255
void run_query_normal(7281,189354
static int match_expected_error(7427,193171
void handle_error(7473,194450
void handle_no_error(7570,197378
void run_query_stmt(7607,198516
int util_query(7818,204546
void run_query(7860,205664
char *re_eprint(re_eprint8086,211822
void init_re_comp(8095,212015
void init_re(8108,212371
int match_re(8147,213377
void free_re(8175,213970
void get_command_type(8185,214160
void mark_progress(8249,215775
static void dump_backtrace(8293,216886
static void dump_backtrace(8315,217479
static sig_handler signal_handler(8322,217572
LONG WINAPI exception_filter(8337,217877
static void init_signal_handling(8353,218189
static void init_signal_handling(8374,218859
int main(8402,219400
void timer_output(9089,240315
ulonglong timer_now(9103,240618
void do_get_replace_column(9117,240953
void free_replace_column(9150,241954
typedef struct st_pointer_array 9172,242318
} POINTER_ARRAY;9177,242566
void do_get_replace(9192,243011
void free_replace(9239,244385
typedef struct st_replace 9248,244508
} REPLACE;9251,244585
typedef struct st_replace_found 9253,244597
} REPLACE_STRING;9258,244709
void replace_strings_append(9261,244729
struct st_regex9320,246433
#define PARSE_REGEX_ARG 9337,246877
struct st_replace_regex* init_replace_regex(9367,248191
int multi_reg_replace(9467,250683
void do_get_replace_regex(9521,251898
void free_replace_regex(9536,252340
#define SECURE_REG_BUF 9554,252700
int reg_replace(9574,253653
#define WORD_BIT 9748,257805
#define SET_MALLOC_HUNC 9751,257847
#define LAST_CHAR_CODE 9752,257874
typedef struct st_rep_set 9754,257902
} REP_SET;9761,258163
typedef struct st_rep_sets 9763,258175
} REP_SETS;9770,258398
typedef struct st_found_set 9772,258411
} FOUND_SET;9775,258482
typedef struct st_follow 9777,258496
} FOLLOWS;9781,258567
static uint found_sets=9801,259236
uint replace_len(9804,259264
REPLACE *init_replace(init_replace9817,259421
int init_sets(10072,266639
void make_sets_invisible(10090,267102
REP_SET *make_new_set(make_new_set10097,267222
void free_last_set(10134,268284
void free_sets(10141,268368
void internal_set_bit(10148,268472
void internal_clear_bit(10154,268587
void or_bits(10161,268709
void copy_bits(10169,268852
int cmp_bits(10175,268994
int get_next_bit(10184,269168
int find_set(10209,269722
int find_found(10230,270296
uint start_at_word(10245,270741
uint end_of_word(10251,270870
#define PC_MALLOC	10262,271231
#define PS_MALLOC	10263,271279
int insert_pointer_name(10265,271324
void free_pointer_array(10338,273873
void replace_dynstr_append_mem(10353,274200
void replace_dynstr_append(10393,275055
void replace_dynstr_append_uint(10399,275222
static int comp_lines(10420,275717
void dynstr_append_sorted(10425,275802
static int setenv(10477,277035

client/readline.cc,372
LINE_BUFFER *batch_readline_init(batch_readline_init33,1180
char *batch_readline(batch_readline57,1736
void batch_readline_end(73,2149
LINE_BUFFER *batch_readline_command(batch_readline_command83,2284
init_line_buffer(103,2855
static bool init_line_buffer_from_string(121,3408
static size_t fill_buffer(148,4215
char *intern_read_line(intern_read_line218,6035

client/sql_string.cc,1279
bool String::real_alloc(36,1233
bool String::realloc(61,1767
bool String::set(93,2593
bool String::set(104,2814
bool String::set(115,3035
bool String::copy(133,3504
bool String::copy(143,3643
bool String::copy(154,3884
bool String::needs_conversion(188,4671
bool String::copy_aligned(230,5626
bool String::set_or_copy_aligned(256,6382
bool String::copy(272,6784
bool String::set_ascii(315,7861
bool String::fill(329,8154
void String::strip_sp(343,8441
bool String::append(349,8555
bool String::append(366,8851
bool String::append(401,9640
bool String::append(412,9809
bool String::append(437,10451
bool String::append(451,10745
bool String::append_with_prefill(464,11013
uint32 String::numchars(481,11441
int String::charpos(486,11544
int String::strstr(493,11696
int String::strrstr(524,12375
bool String::replace(556,13077
bool String::replace(561,13211
int String::reserve(593,13954
void String::qs_append(603,14175
void String::qs_append(609,14295
void String::qs_append(616,14475
void String::qs_append(623,14572
void String::qs_append(630,14713
int sortcmp(656,15109
int stringcmp(682,15604
String *copy_if_not_alloced(copy_if_not_alloced690,15814
copy_and_convert(732,16874
void String::print(786,18116
void String::swap(829,18908

libmysqld/emb_qcache.cc,836
void Querycache_stream::store_uchar(25,976
void Querycache_stream::store_short(35,1141
void Querycache_stream::store_int(58,1546
void Querycache_stream::store_ll(85,2037
void Querycache_stream::store_str_only(110,2509
void Querycache_stream::store_str(131,2930
void Querycache_stream::store_safe_str(137,3054
uchar Querycache_stream::load_uchar(148,3233
ushort Querycache_stream::load_short(155,3355
uint Querycache_stream::load_int(177,3772
ulonglong Querycache_stream::load_ll(203,4275
void Querycache_stream::load_str_only(227,4765
char *Querycache_stream::load_str(Querycache_stream::load_str247,5180
int Querycache_stream::load_safe_str(257,5415
int Querycache_stream::load_column(271,5701
uint emb_count_querycache_size(288,6041
void emb_store_querycache_result(340,7375
int emb_load_querycache_result(404,9266

libmysqld/lib_sql.cc,1940
#define main 22,662
#define mysql_unix_port 23,681
#define mysql_port 24,722
#undef ER36,894
extern "C" void unireg_clear(45,1107
static void embedded_error_handler(58,1488
void embedded_get_error(87,2332
emb_advanced_command(99,2712
static void emb_flush_use_result(174,4637
emb_read_rows(207,5242
static MYSQL_FIELD *emb_list_fields(emb_list_fields222,5630
static my_bool emb_read_prepare_result(235,5939
static void emb_fetch_lengths(271,7032
static my_bool emb_read_query_result(280,7274
static int emb_stmt_execute(321,8308
int emb_read_binary_rows(351,9205
int emb_read_rows_from_cursor(365,9486
int emb_unbuffered_fetch(387,10058
static void emb_free_embedded_thd(415,10594
static const char * emb_read_statistics(427,10835
static MYSQL_RES * emb_store_result(434,10982
int emb_read_change_user_result(439,11073
MYSQL_METHODS embedded_methods=445,11258
char **copy_arguments(copy_arguments469,11737
char **		copy_arguments_ptr=491,12233
int init_embedded_server(493,12266
void end_embedded_server(620,15094
void init_embedded_mysql(628,15197
void *create_embedded_thd(create_embedded_thd648,15824
int check_embedded_connection(694,16892
int check_embedded_connection(718,17733
void THD::clear_data_list(781,19368
static char *dup_str_aux(dup_str_aux795,19593
MYSQL_DATA *THD::alloc_new_dataset(THD::alloc_new_dataset836,20589
write_eof_packet(866,21245
int Protocol::begin_dataset(899,22192
void Protocol_text::remove_last_row(923,22685
bool Protocol::send_result_set_metadata(940,23058
bool Protocol::write(1050,27173
bool Protocol_binary::write(1059,27311
net_send_ok(1103,28585
net_send_eof(1138,29443
bool net_send_error_packet(1146,29629
void Protocol_text::prepare_for_resend(1178,30572
bool Protocol_text::store_null(1206,31256
bool Protocol::net_store_data(1213,31357
#define vsnprintf 1233,31938
int vprint_msg_to_log(1236,31975
bool Protocol::net_store_data(1246,32260

mysys/my_new.cc,213
void *operator new operator new26,952
void *operator new[] operator new[]31,1028
void operator delete operator delete36,1106
void operator delete[] operator delete[]42,1170
int __cxa_pure_virtual(50,1259

sql/datadict.cc,148
frm_type_enum dd_frm_type(34,1167
bool dd_frm_storage_engine(82,2695
bool dd_check_storage_engine_flag(137,4287
bool dd_recreate_table(163,4883

sql/debug_sync.cc,1605
struct st_debug_sync_action339,12941
struct st_debug_sync_control352,13561
struct st_debug_sync_globals374,14434
static st_debug_sync_globals debug_sync_global;383,14875
static void debug_sync_C_callback(429,16690
static PSI_mutex_key key_debug_sync_globals_ds_mutex;437,16931
static PSI_mutex_info all_debug_sync_mutexes[all_debug_sync_mutexes439,16986
static PSI_cond_key key_debug_sync_globals_ds_cond;444,17116
static PSI_cond_info all_debug_sync_conds[all_debug_sync_conds446,17169
static void init_debug_sync_psi_keys(451,17294
int debug_sync_init(476,17832
void debug_sync_end(512,18704
static void debug_sync_emergency_disable(553,19901
void debug_sync_init_thread(575,20353
void debug_sync_end_thread(604,20985
static char *debug_sync_bmove_len(debug_sync_bmove_len659,22545
static void debug_sync_action_string(681,23098
static void debug_sync_print_actions(739,24784
static int debug_sync_qsort_cmp(777,25838
static st_debug_sync_action *debug_sync_find(debug_sync_find809,26810
static void debug_sync_reset(861,28030
static void debug_sync_remove_action(893,28907
static st_debug_sync_action *debug_sync_get_action(debug_sync_get_action965,31409
static bool debug_sync_set_action(1075,35690
static char *debug_sync_token(debug_sync_token1194,40191
static char *debug_sync_number(debug_sync_number1264,41914
static bool debug_sync_eval_action(1318,43401
bool debug_sync_update(1592,50318
uchar *debug_sync_value_ptr(debug_sync_value_ptr1623,51114
static void debug_sync_execute(1673,52467
void debug_sync(1859,59349
bool debug_sync_set_action(1916,61010

sql/derror.cc,161
static const char **get_server_errmsgs(get_server_errmsgs35,1130
bool init_errmessage(57,1604
bool read_texts(99,2783
static void init_myfunc_errs(199,5846

sql/des_key_file.cc,149
struct st_des_keyschedule des_keyschedule[des_keyschedule24,974
uint   des_default_key;25,1021
#define des_cs	27,1046
load_des_key_file(41,1251

sql/discover.cc,44
int readfrm(48,1300
int writefrm(109,2707

sql/event_data_objects.cc,1424
#define MYSQL_LEX 16,745
class Event_creation_ctx 46,1821
  virtual Stored_program_creation_ctx *clone(Event_creation_ctx::clone58,2242
  virtual Object_creation_ctx *create_backup_ctx(Event_creation_ctx::create_backup_ctx65,2427
  Event_creation_ctx(Event_creation_ctx::Event_creation_ctx77,2741
Event_creation_ctx::load_from_db(89,3151
Event_queue_element_for_exec::init(173,5552
Event_queue_element_for_exec::~Event_queue_element_for_exec(193,5957
Event_basic::Event_basic(207,6133
Event_basic::~Event_basic(226,6437
Event_basic::load_string_fields(246,6884
Event_basic::load_time_zone(276,7561
Event_queue_element::Event_queue_element(292,7825
Event_queue_element::~Event_queue_element(312,8272
Event_timed::Event_timed(324,8386
Event_timed::~Event_timed(340,8595
Event_job_data::Event_job_data(352,8699
Event_timed::init(365,8828
Event_job_data::load_from_row(391,9418
Event_queue_element::load_from_row(452,10991
Event_timed::load_from_row(590,15184
add_interval(653,16994
bool get_next_time(689,17997
Event_queue_element::compute_next_execution_time(910,25778
Event_queue_element::mark_last_executed(1138,32282
append_datetime(1148,32421
Event_timed::get_create_event(1182,33448
Event_job_data::construct_sp_sql(1250,35479
Event_job_data::construct_drop_event_sql(1299,36895
Event_job_data::execute(1329,37704
event_basic_db_equal(1506,42928
event_basic_identifier_equal(1527,43281

sql/event_db_repository.cc,859
const TABLE_FIELD_TYPE event_table_fields[event_table_fields39,1530
  event_table_def=165,4958
class Event_db_intact 167,5016
  void report_error(Event_db_intact::report_error170,5079
static Event_db_intact table_intact;180,5312
mysql_event_fill_row(199,5740
Event_db_repository::index_read_for_db_for_i_s(405,12137
Event_db_repository::table_scan_all_for_i_s(491,14565
Event_db_repository::fill_schema_events(535,15814
Event_db_repository::open_event_table(602,18086
Event_db_repository::create_event(649,19525
Event_db_repository::update_event(768,23103
Event_db_repository::drop_event(882,26652
Event_db_repository::find_named_event(943,28220
Event_db_repository::drop_schema_events(988,29622
Event_db_repository::load_named_event(1046,31432
update_timing_fields_for_event(1100,33102
Event_db_repository::check_system_tables(1178,35332

sql/event_parse_data.cc,563
Event_parse_data::new_instance(37,1102
Event_parse_data::Event_parse_data(50,1270
Event_parse_data::init_name(80,1983
Event_parse_data::check_if_in_the_past(114,3098
Event_parse_data::check_dates(174,4811
Event_parse_data::init_execute_at(202,5379
Event_parse_data::init_interval(257,6634
Event_parse_data::init_starts(372,9670
Event_parse_data::init_ends(426,10896
Event_parse_data::report_bad_value(475,11992
Event_parse_data::check_parse_data(497,12503
Event_parse_data::init_definer(525,13172
void Event_parse_data::check_originator_id(566,14540

sql/event_queue.cc,1076
#define EVENT_QUEUE_INITIAL_SIZE 32,1116
#define EVENT_QUEUE_EXTENT 33,1152
#define SCHED_FUNC 37,1223
#define SCHED_FUNC 40,1268
#define LOCK_QUEUE_DATA(43,1307
#define UNLOCK_QUEUE_DATA(44,1367
int event_queue_element_compare_q(68,2045
Event_queue::Event_queue(92,2612
Event_queue::~Event_queue(109,3153
Event_queue::init_queue(134,3711
Event_queue::deinit_queue(167,4379
Event_queue::create_event(199,5194
Event_queue::update_event(240,6335
Event_queue::drop_event(289,7583
Event_queue::drop_matching_events(327,8483
Event_queue::drop_schema_events(379,10113
Event_queue::find_n_remove_event(403,10672
Event_queue::recalculate_activation_times(439,11691
Event_queue::empty_queue(495,13207
Event_queue::dbug_dump_queue(522,13818
static const char *queue_empty_msg=queue_empty_msg547,14803
static const char *queue_wait_msg=queue_wait_msg548,14865
Event_queue::get_top_for_execution_if_time(566,15372
Event_queue::lock_data(693,18914
Event_queue::unlock_data(724,19736
Event_queue::cond_wait(749,20423
Event_queue::dump_internal_status(792,21410

sql/event_scheduler.cc,1058
#define SCHED_FUNC 33,1121
#define SCHED_FUNC 36,1166
#define LOCK_DATA(39,1205
#define UNLOCK_DATA(40,1263
#define COND_STATE_WAIT(41,1323
Event_db_repository *Event_worker_thread::db_repository;Event_worker_thread::db_repository47,1475
const LEX_STRING scheduler_states_names[scheduler_states_names51,1541
struct scheduler_param 58,1703
Event_worker_thread::print_warnings(76,2046
post_init_event_thread(126,3578
deinit_event_thread(153,4052
pre_init_event_thread(183,4817
event_scheduler_thread(227,5932
event_worker_thread(270,6871
Event_worker_thread::run(298,7507
Event_scheduler::Event_scheduler(343,8690
Event_scheduler::~Event_scheduler(361,9237
Event_scheduler::start(385,9954
Event_scheduler::run(471,12355
Event_scheduler::execute_top(537,14034
Event_scheduler::is_running(606,15947
Event_scheduler::stop(631,16409
Event_scheduler::workers_count(696,18786
Event_scheduler::lock_data(724,19449
Event_scheduler::unlock_data(747,20036
Event_scheduler::cond_wait(772,20743
Event_scheduler::dump_internal_status(813,21812

sql/events.cc,1545
Event_queue *Events::event_queue;Events::event_queue78,3343
Event_scheduler *Events::scheduler;Events::scheduler79,3377
Event_db_repository *Events::db_repository;Events::db_repository80,3413
ulong Events::opt_event_scheduler=81,3457
bool Events::check_system_tables_error=82,3512
int sortcmp_lex_string(100,3778
bool Events::check_if_system_tables_error(112,4065
Events::reconstruct_interval_expression(145,4800
create_query_string(272,8208
Events::create_event(306,9217
Events::update_event(428,13247
Events::drop_event(548,17431
Events::drop_schema_events(599,19007
send_show_create_event(624,19551
Events::show_create_event(703,22067
Events::fill_schema_events(753,23629
Events::init(797,24938
Events::deinit(906,27696
PSI_mutex_key key_LOCK_event_queue,925,28106
              key_event_scheduler_LOCK_scheduler_state;926,28142
static PSI_mutex_info all_events_mutexes[all_events_mutexes928,28199
PSI_cond_key key_event_scheduler_COND_state,934,28419
PSI_cond_key key_event_scheduler_COND_state, key_COND_queue_state;934,28419
static PSI_cond_info all_events_conds[all_events_conds936,28487
PSI_thread_key key_thread_event_scheduler,942,28685
PSI_thread_key key_thread_event_scheduler, key_thread_event_worker;942,28685
static PSI_thread_info all_events_threads[all_events_threads944,28754
static void init_events_psi_keys(950,28924
Events::init_mutexes(978,29511
Events::dump_internal_status(997,29870
bool Events::start(1021,30514
bool Events::stop(1026,30586
Events::load_events_from_db(1050,31201

sql/field.cc,17322
#define MAX_EXPONENT 46,1838
uchar Field_null::null[Field_null::null57,2200
const char field_separator=58,2231
#define DOUBLE_TO_STRING_CONVERSION_BUFFER_SIZE 60,2264
#define LONGLONG_TO_STRING_CONVERSION_BUFFER_SIZE 61,2334
#define DECIMAL_TO_STRING_CONVERSION_BUFFER_SIZE 62,2388
#define BLOB_PACK_LENGTH_TO_MAX_LENGH(63,2441
#define ASSERT_COLUMN_MARKED_FOR_READ 66,2534
#define ASSERT_COLUMN_MARKED_FOR_WRITE 67,2661
#define FLAGSTR(69,2792
#define FIELDTYPE_TEAR_FROM 78,3087
#define FIELDTYPE_TEAR_TO 79,3136
#define FIELDTYPE_NUM 80,3192
inline int field_type2index 81,3264
static enum_field_types field_types_merge_rules 89,3474
enum_field_types Field::field_type_merge(940,39653
static Item_result field_types_result_type 950,40020
test_if_important_data(1000,41665
int compare(1016,42053
Item_result Field::result_merge_type(1036,42370
static void push_numerical_conversion_warning(1060,43306
bool Field::type_can_have_key_part(1092,44423
Field_num::Field_num(1113,44832
void Field_num::prepend_zeros(1128,45345
int Field_num::check_int(1164,46185
bool Field_num::get_int(1211,47603
int Field::warn_if_overflow(1265,48886
String *Field::val_int_as_str(Field::val_int_as_str1287,49404
Field::Field(1306,50073
void Field::hash(1324,50655
Field::do_last_null_byte(1339,50888
void Field::copy_from_tmp(1348,51094
bool Field::send_binary(1359,51324
bool Field::compatible_field_size(1402,52960
int Field::store(1416,53564
Field::pack(1466,55398
Field::unpack(1506,56851
my_decimal *Field::val_decimal(Field::val_decimal1537,57593
void Field_num::add_zerofill_and_unsigned(1545,57718
void Field::make_field(1554,57914
longlong Field::convert_decimal2longlong(1598,59173
int Field_num::store_decimal(1643,60236
my_decimal* Field_num::val_decimal(1666,60809
Field_str::Field_str(1676,61075
void Field_num::make_field(1689,61530
int Field_str::store_decimal(1715,62075
my_decimal *Field_str::val_decimal(Field_str::val_decimal1726,62378
uint Field::fill_cache_field(1735,62588
bool Field::get_date(1763,63139
bool Field::get_time(1774,63477
int Field::store_time(1791,63870
bool Field::optimize_range(1802,64268
Field *Field::new_field(Field::new_field1808,64393
Field *Field::new_key_field(Field::new_key_field1829,64989
Field *Field::clone(Field::clone1846,65426
void Field_null::sql_type(1863,65956
Field_decimal::reset(1875,66313
void Field_decimal::overflow(1881,66419
int Field_decimal::store(1920,67294
int Field_decimal::store(2286,78956
int Field_decimal::store(2325,79619
double Field_decimal::val_real(2361,80349
longlong Field_decimal::val_int(2370,80573
String *Field_decimal::val_str(Field_decimal::val_str2382,80888
int Field_decimal::cmp(2404,81489
void Field_decimal::sort_string(2437,82284
void Field_decimal::sql_type(2463,82827
Field_new_decimal::Field_new_decimal(2481,83315
Field_new_decimal::Field_new_decimal(2499,84179
Field *Field_new_decimal::create_from_item Field_new_decimal::create_from_item2516,84875
int Field_new_decimal::reset(2560,86094
void Field_new_decimal::set_value_on_overflow(2574,86347
bool Field_new_decimal::store_value(2605,87057
int Field_new_decimal::store(2649,88492
int Field_new_decimal::store(2711,90604
int Field_new_decimal::store(2735,91249
int Field_new_decimal::store_decimal(2757,91867
int Field_new_decimal::store_time(2764,92014
double Field_new_decimal::val_real(2771,92190
longlong Field_new_decimal::val_int(2781,92401
my_decimal* Field_new_decimal::val_decimal(2792,92638
String *Field_new_decimal::val_str(Field_new_decimal::val_str2804,93048
int Field_new_decimal::cmp(2817,93493
void Field_new_decimal::sort_string(2823,93589
void Field_new_decimal::sql_type(2830,93748
int Field_new_decimal::do_save_field_metadata(2850,94355
uint Field_new_decimal::pack_length_from_metadata(2870,94935
bool Field_new_decimal::compatible_field_size(2880,95297
uint Field_new_decimal::is_equal(2893,95855
Field_new_decimal::unpack(2918,96698
int Field_tiny::store(2962,98359
int Field_tiny::store(2974,98631
int Field_tiny::store(3017,99458
double Field_tiny::val_real(3062,100424
longlong Field_tiny::val_int(3071,100597
String *Field_tiny::val_str(Field_tiny::val_str3080,100773
bool Field_tiny::send_binary(3104,101428
int Field_tiny::cmp(3109,101539
void Field_tiny::sort_string(3118,101815
void Field_tiny::sql_type(3126,102003
int Field_short::store(3138,102425
int Field_short::store(3159,102885
int Field_short::store(3211,103908
double Field_short::val_real(3266,105060
longlong Field_short::val_int(3279,105326
String *Field_short::val_str(Field_short::val_str3293,105598
bool Field_short::send_binary(3323,106359
int Field_short::cmp(3329,106471
void Field_short::sort_string(3351,106910
void Field_short::sql_type(3373,107351
int Field_medium::store(3386,107778
int Field_medium::store(3400,108117
int Field_medium::store(3446,109138
double Field_medium::val_real(3495,110302
longlong Field_medium::val_int(3503,110464
String *Field_medium::val_str(Field_medium::val_str3511,110629
bool Field_medium::send_binary(3531,111227
int Field_medium::cmp(3538,111373
void Field_medium::sort_string(3554,111633
void Field_medium::sql_type(3565,111859
int Field_long::store(3577,112267
int Field_long::store(3598,112720
int Field_long::store(3650,113608
double Field_long::val_real(3703,114553
longlong Field_long::val_int(3716,114809
String *Field_long::val_str(Field_long::val_str3731,115171
bool Field_long::send_binary(3760,115901
int Field_long::cmp(3766,116042
void Field_long::sort_string(3786,116441
void Field_long::sql_type(3813,116970
int Field_longlong::store(3825,117392
int Field_longlong::store(3855,118033
int Field_longlong::store(3907,118933
double Field_longlong::val_real(3938,119625
longlong Field_longlong::val_int(3960,120022
String *Field_longlong::val_str(Field_longlong::val_str3974,120244
bool Field_longlong::send_binary(4000,120881
int Field_longlong::cmp(4007,121050
void Field_longlong::sort_string(4028,121480
void Field_longlong::sql_type(4063,122189
Field_real::pack(4077,122468
Field_real::unpack(4096,122946
int Field_float::store(4117,123574
int Field_float::store(4134,124038
int Field_float::store(4152,124324
double Field_float::val_real(4159,124505
longlong Field_float::val_int(4174,124746
String *Field_float::val_str(Field_float::val_str4189,124962
int Field_float::cmp(4233,126002
#define FLT_EXP_DIG 4251,126334
void Field_float::sort_string(4253,126386
bool Field_float::send_binary(4296,127327
int Field_float::do_save_field_metadata(4312,127700
void Field_float::sql_type(4319,127811
int Field_double::store(4339,128354
int Field_double::store(4356,128823
int Field_double::store(4373,129082
int Field_real::truncate(4385,129441
int Field_real::store_decimal(4441,130618
double Field_double::val_real(4448,130760
longlong Field_double::val_int(4463,130982
my_decimal *Field_real::val_decimal(Field_real::val_decimal4504,131899
String *Field_double::val_str(Field_double::val_str4512,132092
bool Field_double::send_binary(4548,132948
int Field_double::cmp(4554,133084
#define DBL_EXP_DIG 4573,133393
void Field_double::sort_string(4577,133488
int Field_double::do_save_field_metadata(4602,134010
void Field_double::sql_type(4609,134122
Field_timestamp::Field_timestamp(4669,136913
Field_timestamp::Field_timestamp(4691,137635
timestamp_auto_set_type Field_timestamp::get_auto_set_type(4711,138279
int Field_timestamp::store(4740,139051
int Field_timestamp::store(4787,140564
int Field_timestamp::store(4803,140967
double Field_timestamp::val_real(4846,142284
longlong Field_timestamp::val_int(4852,142407
String *Field_timestamp::val_str(Field_timestamp::val_str4878,143072
bool Field_timestamp::get_date(4952,144929
bool Field_timestamp::get_time(4976,145474
bool Field_timestamp::send_binary(4982,145575
int Field_timestamp::cmp(4990,145720
void Field_timestamp::sort_string(5009,146066
void Field_timestamp::sql_type(5030,146412
void Field_timestamp::set_time(5036,146515
int Field_time::store(5051,146947
int Field_time::store_time(5093,148009
int Field_time::store(5103,148299
int Field_time::store(5141,149233
double Field_time::val_real(5179,150231
longlong Field_time::val_int(5186,150361
String *Field_time::val_str(Field_time::val_str5199,150578
bool Field_time::get_date(5229,151312
bool Field_time::get_time(5244,151774
bool Field_time::send_binary(5264,152181
int Field_time::cmp(5274,152388
void Field_time::sort_string(5282,152567
void Field_time::sql_type(5289,152718
int Field_year::store(5300,153059
int Field_year::store(5337,153863
int Field_year::store(5348,154058
bool Field_year::send_binary(5369,154531
double Field_year::val_real(5377,154696
longlong Field_year::val_int(5383,154777
String *Field_year::val_str(Field_year::val_str5396,155052
void Field_year::sql_type(5409,155433
int Field_date::store(5424,155899
int Field_date::store(5460,156811
int Field_date::store(5479,157268
bool Field_date::send_binary(5520,158388
double Field_date::val_real(5531,158641
longlong Field_date::val_int(5545,158878
String *Field_date::val_str(Field_date::val_str5559,159118
bool Field_date::get_time(5582,159729
int Field_date::cmp(5589,159836
void Field_date::sort_string(5608,160181
void Field_date::sql_type(5628,160521
int Field_newdate::store(5659,161417
int Field_newdate::store(5696,162604
int Field_newdate::store(5709,162926
int Field_newdate::store_time(5745,164020
bool Field_newdate::send_binary(5790,165561
double Field_newdate::val_real(5798,165706
longlong Field_newdate::val_int(5805,165826
String *Field_newdate::val_str(Field_newdate::val_str5814,166013
bool Field_newdate::get_date(5844,166845
bool Field_newdate::get_time(5857,167258
int Field_newdate::cmp(5863,167355
void Field_newdate::sort_string(5872,167541
void Field_newdate::sql_type(5880,167680
int Field_datetime::store(5893,168109
int Field_datetime::store(5930,169216
int Field_datetime::store(5946,169592
int Field_datetime::store_time(5984,170592
bool Field_datetime::send_binary(6029,171949
double Field_datetime::val_real(6037,172106
longlong Field_datetime::val_int(6042,172194
String *Field_datetime::val_str(Field_datetime::val_str6056,172425
bool Field_datetime::get_date(6106,173934
bool Field_datetime::get_time(6125,174560
int Field_datetime::cmp(6130,174658
void Field_datetime::sort_string(6149,175033
void Field_datetime::sql_type(6178,175538
check_string_copy_error(6215,176651
Field_longstr::report_if_important_data(6262,178196
int Field_string::store(6287,178934
int Field_str::store(6328,180380
uint Field::is_equal(6351,181059
uint Field_str::is_equal(6357,181158
int Field_string::store(6368,181439
int Field_longstr::store_decimal(6379,181727
uint32 Field_longstr::max_data_length(6387,181994
double Field_string::val_real(6393,182100
longlong Field_string::val_int(6417,182836
String *Field_string::val_str(Field_string::val_str6441,183579
my_decimal *Field_string::val_decimal(Field_string::val_decimal6460,184256
struct Check_field_param 6478,184844
check_field_for_37426(6484,184927
Field_string::compatible_field_size(6497,185373
int Field_string::cmp(6512,185969
void Field_string::sort_string(6535,186689
void Field_string::sql_type(6543,186878
uchar *Field_string::pack(Field_string::pack6563,187632
Field_string::unpack(6621,189652
int Field_string::do_save_field_metadata(6689,192094
uint Field_string::packed_col_length(6701,192473
uint Field_string::max_packed_col_length(6709,192637
uint Field_string::get_key_image(6715,192749
Field *Field_string::new_field(Field_string::new_field6728,193208
const uint Field_varstring::MAX_SIZE=6771,194819
int Field_varstring::do_save_field_metadata(6784,195200
int Field_varstring::store(6791,195368
int Field_varstring::store(6821,196420
double Field_varstring::val_real(6835,196996
longlong Field_varstring::val_int(6858,197704
String *Field_varstring::val_str(Field_varstring::val_str6880,198440
my_decimal *Field_varstring::val_decimal(Field_varstring::val_decimal6890,198733
int Field_varstring::cmp_max(6908,199334
int Field_varstring::key_cmp(6942,200208
int Field_varstring::key_cmp(6967,201149
void Field_varstring::sort_string(6978,201562
enum ha_base_keytype Field_varstring::key_type(6999,202095
void Field_varstring::sql_type(7011,202370
uint32 Field_varstring::data_length(7028,202954
uchar *Field_varstring::pack(Field_varstring::pack7038,203173
Field_varstring::unpack(7075,204237
uint Field_varstring::packed_col_length(7101,204838
uint Field_varstring::max_packed_col_length(7109,205005
uint Field_varstring::get_key_image(7114,205119
void Field_varstring::set_key_image(7137,205886
int Field_varstring::cmp_binary(7145,206138
Field *Field_varstring::new_field(Field_varstring::new_field7168,206655
Field *Field_varstring::new_key_field(Field_varstring::new_key_field7179,206990
uint Field_varstring::is_equal(7198,207688
void Field_varstring::hash(7214,208190
Field_blob::Field_blob(7235,208757
void Field_blob::store_length(7251,209401
uint32 Field_blob::get_length(7286,210084
void Field_blob::put_length(7332,211066
int Field_blob::store(7351,211348
int Field_blob::store(7436,214090
int Field_blob::store(7444,214267
double Field_blob::val_real(7452,214464
longlong Field_blob::val_int(7469,214806
String *Field_blob::val_str(Field_blob::val_str7481,215080
my_decimal *Field_blob::val_decimal(Field_blob::val_decimal7495,215445
int Field_blob::cmp(7515,215844
int Field_blob::cmp_max(7524,216113
int Field_blob::cmp_binary(7537,216533
uint Field_blob::get_key_image(7558,217098
void Field_blob::set_key_image(7613,218526
int Field_blob::key_cmp(7621,218738
int Field_blob::key_cmp(7636,219265
int Field_blob::do_save_field_metadata(7653,219691
uint32 Field_blob::sort_length(7662,219943
void Field_blob::sort_string(7669,220122
void Field_blob::sql_type(7712,221010
uchar *Field_blob::pack(Field_blob::pack7731,221448
const uchar *Field_blob::unpack(Field_blob::unpack7775,222876
uint Field_blob::packed_col_length(7795,223766
uint Field_blob::max_packed_col_length(7803,223928
uint Field_blob::is_equal(7809,224038
void Field_geom::sql_type(7822,224386
int Field_geom::store(7854,225189
int Field_geom::store(7862,225344
int Field_geom::store_decimal(7870,225520
int Field_geom::store(7878,225692
enum ha_base_keytype Field_enum::key_type(7919,226956
void Field_enum::store_type(7930,227230
int Field_enum::store(7974,228015
int Field_enum::store(8017,229237
int Field_enum::store(8023,229326
double Field_enum::val_real(8041,229713
longlong Field_enum::val_int(8047,229794
int Field_enum::do_save_field_metadata(8104,230899
String *Field_enum::val_str(Field_enum::val_str8112,231045
int Field_enum::cmp(8125,231399
void Field_enum::sort_string(8136,231656
void Field_enum::sql_type(8148,231897
Field *Field_enum::new_field(Field_enum::new_field8172,232496
int Field_set::store(8192,233017
int Field_set::store(8232,234226
String *Field_set::val_str(Field_set::val_str8254,234666
void Field_set::sql_type(8291,235485
bool Field::eq_def(8321,236189
static bool compare_type_names(8336,236501
bool Field_enum::eq_def(8353,236948
uint Field_enum::is_equal(8379,237550
uchar *Field_enum::pack(Field_enum::pack8409,238458
const uchar *Field_enum::unpack(Field_enum::unpack8432,239113
bool Field_num::eq_def(8461,239861
uint Field_num::is_equal(8481,240337
Field_bit::Field_bit(8521,241496
void Field_bit::hash(8543,242405
Field_bit::do_last_null_byte(8561,242702
Field *Field_bit::new_key_field(Field_bit::new_key_field8587,243413
uint Field_bit::is_equal(8607,244074
int Field_bit::store(8614,244256
int Field_bit::store(8661,245405
int Field_bit::store(8667,245492
int Field_bit::store_decimal(8676,245622
double Field_bit::val_real(8684,245785
longlong Field_bit::val_int(8690,245864
String *Field_bit::val_str(Field_bit::val_str8714,246493
my_decimal *Field_bit::val_decimal(Field_bit::val_decimal8731,246973
int Field_bit::cmp_max(8752,247677
int Field_bit::key_cmp(8768,248082
int Field_bit::cmp_offset(8783,248352
uint Field_bit::get_key_image(8797,248683
int Field_bit::do_save_field_metadata(8822,249313
uint Field_bit::pack_length_from_metadata(8850,250244
Field_bit::compatible_field_size(8860,250517
void Field_bit::sql_type(8891,251603
Field_bit::pack(8901,251872
Field_bit::unpack(8949,253254
void Field_bit::set_default(9011,255574
Field_bit_as_char::Field_bit_as_char(9026,255903
int Field_bit_as_char::store(9039,256373
void Field_bit_as_char::sql_type(9066,257150
void Create_field::create_length_to_internal_length(9083,257700
void Create_field::init_for_tmp_table(9134,258996
bool Create_field::init(9262,262754
enum_field_types get_blob_type_from_length(9629,274189
uint32 calc_pack_length(9648,274553
uint pack_length_to_packflag(9685,275854
Field *make_field(make_field9698,276239
Create_field::Create_field(9884,282807
uint32 Field_blob::char_length(9995,286365
uint32 Field_blob::max_display_length(10021,286708
Field::set_warning(10065,287936
Field::set_datetime_warning(10101,289141
Field::set_datetime_warning(10130,290263
Field::set_datetime_warning(10161,291335

sql/field_conv.cc,1436
static void do_field_eq(31,1014
static void do_field_1(36,1118
static void do_field_2(41,1201
static void do_field_3(47,1321
static void do_field_4(54,1478
static void do_field_6(62,1672
static void do_field_8(72,1963
static void do_field_to_null_str(85,2306
static void do_outer_field_to_null_str(100,2607
set_field_to_null(117,2970
set_field_to_null_with_conversions(160,4179
static void do_skip(206,5377
static void do_copy_null(211,5445
static void do_outer_field_null(226,5697
static void do_copy_not_null(242,6008
static void do_copy_maybe_null(255,6297
static void do_copy_timestamp(263,6492
static void do_copy_next_number(275,6745
static void do_copy_blob(288,7041
static void do_conv_blob(295,7263
static void do_save_blob(305,7509
static void do_field_string(317,7811
static void do_field_enum(328,8083
static void do_field_varbinary_pre50(337,8271
static void do_field_int(352,8773
static void do_field_real(359,8971
static void do_field_decimal(366,9098
static void do_cut_string(378,9342
static void do_cut_string_complex(400,10002
static void do_expand_binary(432,11213
static void do_expand_string(442,11497
static void do_varstring1(451,11779
static void do_varstring1_mb(466,12232
static void do_varstring2(487,13011
static void do_varstring2_mb(503,13524
void Copy_field::set(536,14825
void Copy_field::set(579,16017
Copy_field::get_copy_func(642,17416
int field_conv(771,21579

sql/filesort.cc,881
#define WRITE_REF(39,1239
ha_rows filesort(104,3789
void filesort_free_buffers(373,12558
static size_t char_array_size(398,13149
static uchar **make_char_array(make_char_array404,13256
static uchar *read_buffpek_from_file(read_buffpek_from_file431,13905
static void dbug_print_record(461,14737
static ha_rows find_all_keys(540,16916
write_keys(714,22000
static inline void store_length(756,23364
static void make_sortkey(777,23710
static void register_used_fields(1016,30302
static bool save_index(1054,31144
int merge_many_buff(1080,31944
uint read_to_buffer(1138,33627
void reuse_freed_buff(1170,34591
int merge_buffers(1210,35661
static int merge_index(1418,41984
static uint suffix_length(1430,42355
sortlength(1462,43144
get_addon_fields(1572,46677
unpack_addon_fields(1660,49051
#define DBL_EXP_DIG 1682,49557
void change_double_for_sort(1684,49610

sql/frm_crypt.cc,99
ulong password_seed[password_seed30,1049
SQL_CRYPT *get_crypt_for_frm(get_crypt_for_frm32,1099

sql/gen_lex_hash.cc,747
#define NO_YACC_SYMBOLS80,2407
struct hash_lex_struct90,2635
hash_lex_struct *get_hash_struct_by_len(get_hash_struct_by_len101,2777
void insert_into_hash(115,3236
hash_lex_struct *root_by_len=root_by_len176,5021
int max_len=177,5054
hash_lex_struct *root_by_len2=root_by_len2179,5070
int max_len2=180,5104
void insert_symbols(182,5121
void insert_sql_functions(193,5387
void calc_length(205,5675
void generate_find_structs(215,5977
char *hash_map=hash_map232,6194
int size_hash_map=233,6213
void add_struct_to_map(235,6236
void add_structs_to_map(257,6980
void set_links(269,7303
void print_hash_map(285,7693
void print_find_structs(308,8134
int check_dup_symbols(325,8450
int check_duplicates(340,8849
int main(373,9464

sql/gstream.cc,267
enum Gis_read_stream::enum_tok_types Gis_read_stream::get_next_toc_type(25,976
bool Gis_read_stream::get_next_word(44,1410
bool Gis_read_stream::get_next_number(72,2047
bool Gis_read_stream::check_next_symbol(96,2479
void Gis_read_stream::set_error_msg(116,2779

sql/ha_ndbcluster.cc,14068
int ha_ndb_dummy;47,1805
#undef assert66,2371
#define assert(67,2385
static const int DEFAULT_PARALLELISM=74,2729
static const ha_rows DEFAULT_AUTO_PREFETCH=75,2770
static const ulong ONE_YEAR_IN_SECONDS=76,2818
ulong opt_ndb_extra_logging;78,2883
static ulong opt_ndb_cache_check_time;79,2912
static char* opt_ndb_connectstring;80,2951
static char* opt_ndb_mgmd_host;81,2987
static uint opt_ndb_nodeid;82,3019
static const int parallelism=191,6659
static const int max_transactions=195,6785
handlerton *ndbcluster_hton;ndbcluster_hton217,7944
static handler *ndbcluster_create_handler(ndbcluster_create_handler219,7974
static uint ndbcluster_partition_flags(226,8215
static uint ndbcluster_alter_table_flags(232,8380
#define NDB_AUTO_INCREMENT_RETRIES 243,8670
#define ERR_PRINT(245,8709
#define ERR_RETURN(248,8801
#define ERR_RETURN_PREPARE(255,9019
#define ERR_BREAK(262,9240
static int ndbcluster_inited=270,9501
int ndbcluster_terminating=271,9534
static Ndb* g_ndb=273,9566
Ndb_cluster_connection* g_ndb_cluster_connection=274,9591
uchar g_node_id_map[g_node_id_map275,9647
mysql_mutex_t ndbcluster_mutex;278,9712
HASH ndbcluster_open_tables;281,9769
pthread_t ndb_util_thread;293,10205
int ndb_util_thread_running=294,10232
mysql_mutex_t LOCK_ndb_util_thread;295,10264
mysql_cond_t COND_ndb_util_thread;296,10300
mysql_cond_t COND_ndb_util_ready;297,10335
static uint32 dummy_buf;304,10505
struct Ndb_statistics 310,10579
static long ndb_cluster_node_id=319,10755
static const char * ndb_connected_host=320,10791
static long ndb_connected_port=321,10834
static long ndb_number_of_replicas=322,10869
long ndb_number_of_data_nodes=323,10908
long ndb_number_of_ready_data_nodes=324,10942
long ndb_connect_count=325,10982
static int update_status_variables(327,11010
SHOW_VAR ndb_status_variables[ndb_status_variables339,11428
static int ndb_to_mysql_error(354,11998
int execute_no_commit_ignore_no_key(392,13069
int execute_no_commit(409,13551
int execute_commit(421,13889
int execute_commit(429,14103
int execute_no_commit_ie(437,14317
typedef struct st_thd_ndb_share 449,14675
} THD_NDB_SHARE;452,14770
uchar *thd_ndb_share_get_key(thd_ndb_share_get_key454,14794
Thd_ndb::Thd_ndb(461,15022
Thd_ndb::~Thd_ndb(476,15375
Thd_ndb::init_open_tables(501,15905
Ndb *ha_ndbcluster::get_ndb(ha_ndbcluster::get_ndb510,16025
void ha_ndbcluster::set_rec_per_key(519,16186
ha_rows ha_ndbcluster::records(529,16424
int ha_ndbcluster::records_update(557,17179
void ha_ndbcluster::no_uncommitted_rows_execute_failure(593,18218
void ha_ndbcluster::no_uncommitted_rows_update(603,18497
void ha_ndbcluster::no_uncommitted_rows_reset(616,18970
static void set_ndb_err(632,19385
int ha_ndbcluster::ndb_err(663,20267
bool ha_ndbcluster::get_error_message(735,22123
static bool ndb_supported_type(758,22737
static bool field_type_forces_var_part(799,23727
bool ha_ndbcluster::set_hidden_key(820,24145
int ha_ndbcluster::set_ndb_key(832,24445
int ha_ndbcluster::set_ndb_value(853,25132
NdbBlob::ActiveHook g_get_ndb_blobs_value;945,28120
int g_get_ndb_blobs_value(961,28634
int get_ndb_blobs_value(978,29218
int ha_ndbcluster::get_ndb_value(1062,31851
int ha_ndbcluster::get_ndb_partition_id(1114,33479
bool ha_ndbcluster::uses_blob_value(1125,33776
int cmp_frm(1156,34472
int ha_ndbcluster::get_metadata(1169,34801
static int fix_unique_index_attr_order(1230,36376
int ha_ndbcluster::create_indexes(1275,37736
static void ndb_init_index(1299,38321
static void ndb_clear_index(1312,38641
int ha_ndbcluster::add_index_handle(1329,38959
int ha_ndbcluster::open_indexes(1413,42134
void ha_ndbcluster::renumber_indexes(1464,43378
int ha_ndbcluster::drop_indexes(1500,44304
NDB_INDEX_TYPE ha_ndbcluster::get_index_type_from_table(1556,45824
NDB_INDEX_TYPE ha_ndbcluster::get_index_type_from_key(1562,46029
bool ha_ndbcluster::check_index_fields_not_null(1576,46567
void ha_ndbcluster::release_metadata(1592,46961
int ha_ndbcluster::get_ndb_lock_type(1635,47998
static const ulong index_type_flags[index_type_flags1645,48284
static const int index_flags_size=1681,48964
inline NDB_INDEX_TYPE ha_ndbcluster::get_index_type(1683,49040
inline bool ha_ndbcluster::has_null_in_unique_index(1689,49180
inline ulong ha_ndbcluster::index_flags(1703,49432
static void shrink_varchar(1713,49830
int ha_ndbcluster::set_primary_key(1732,50339
int ha_ndbcluster::set_primary_key_from_record(1754,50945
bool ha_ndbcluster::check_index_fields_in_write_set(1771,51464
int ha_ndbcluster::set_index_key_from_record(1791,51946
ha_ndbcluster::set_index_key(1811,52650
int ha_ndbcluster::define_read_attrs(1834,53378
int ha_ndbcluster::pk_read(1876,54342
int ha_ndbcluster::complemented_read(1945,56214
bool ha_ndbcluster::check_all_operations_for_error(2025,58292
check_null_in_record(2082,59876
int ha_ndbcluster::peek_indexed_rows(2109,60579
int ha_ndbcluster::unique_index_read(2218,63736
inline int ha_ndbcluster::fetch_next(2260,64947
inline int ha_ndbcluster::next_result(2367,67755
int ha_ndbcluster::set_bounds(2401,68380
    struct part_st 2443,69521
int ha_ndbcluster::ordered_index_scan(2582,73908
guess_scan_flags(2663,76543
int ha_ndbcluster::unique_index_scan(2690,77244
int ha_ndbcluster::full_table_scan(2766,79690
ha_ndbcluster::set_auto_inc(2831,81848
int ha_ndbcluster::write_row(2859,82680
int ha_ndbcluster::key_cmp(3079,88632
int ha_ndbcluster::update_row(3115,89623
int ha_ndbcluster::delete_row(3345,96633
void ndb_unpack_record(3468,100148
void ha_ndbcluster::unpack_record(3600,104660
void ha_ndbcluster::print_results(3629,105487
int ha_ndbcluster::index_init(3686,106713
int ha_ndbcluster::index_end(3702,107114
check_null_in_key(3713,107269
int ha_ndbcluster::index_read(3730,107674
int ha_ndbcluster::index_next(3763,108619
int ha_ndbcluster::index_prev(3775,108929
int ha_ndbcluster::index_first(3787,109239
int ha_ndbcluster::index_last(3802,109701
int ha_ndbcluster::index_read_last(3813,110040
int ha_ndbcluster::read_range_first_to_buf(3819,110241
int ha_ndbcluster::read_range_first(3898,112996
int ha_ndbcluster::read_range_next(3912,113511
int ha_ndbcluster::rnd_init(3923,113781
int ha_ndbcluster::close_scan(3943,114198
int ha_ndbcluster::rnd_end(3993,115492
int ha_ndbcluster::rnd_next(4000,115581
int ha_ndbcluster::rnd_pos(4023,116106
void ha_ndbcluster::position(4074,117721
int ha_ndbcluster::info(4163,120054
void ha_ndbcluster::get_dynamic_partition_info(4252,122390
int ha_ndbcluster::extra(4265,122746
int ha_ndbcluster::reset(4318,124465
void ha_ndbcluster::start_bulk_insert(4354,125311
int ha_ndbcluster::end_bulk_insert(4404,126713
int ha_ndbcluster::extra_opt(4447,127763
static const char *ha_ndbcluster_exts[ha_ndbcluster_exts4454,127965
const char** ha_ndbcluster::bas_ext(4459,128033
double ha_ndbcluster::scan_time(4471,128312
THR_LOCK_DATA **ha_ndbcluster::store_lock(ha_ndbcluster::store_lock4488,128840
#define PRINT_OPTION_FLAGS(4525,130004
#define PRINT_OPTION_FLAGS(4534,130443
static int ndbcluster_update_apply_status(4556,131254
void ha_ndbcluster::transaction_checks(4606,132697
int ha_ndbcluster::start_statement(4621,133138
int ha_ndbcluster::init_handler_for_statement(4664,134449
int ha_ndbcluster::external_lock(4745,137305
void ha_ndbcluster::unlock_row(4859,140536
int ha_ndbcluster::start_stmt(4876,140970
static int ndbcluster_commit(4902,141491
static int ndbcluster_rollback(4973,143624
static int create_ndb_column(5022,144914
int ha_ndbcluster::create(5311,152404
int ha_ndbcluster::create_handler_files(5714,164191
int ha_ndbcluster::create_index(5782,166224
int ha_ndbcluster::create_ordered_index(5840,168054
int ha_ndbcluster::create_unique_index(5847,168282
int ha_ndbcluster::create_ndb_index(5863,168604
void ha_ndbcluster::prepare_for_alter(5910,169850
int ha_ndbcluster::add_index(5922,170195
int ha_ndbcluster::prepare_drop_index(5961,171482
int ha_ndbcluster::final_drop_index(5984,172145
int ha_ndbcluster::rename_table(6008,172811
ha_ndbcluster::delete_table(6193,178431
int ha_ndbcluster::delete_table(6378,184017
void ha_ndbcluster::get_auto_increment(6408,184714
#define HA_NDBCLUSTER_TABLE_FLAGS 6471,186749
ha_ndbcluster::ha_ndbcluster(6486,187328
int ha_ndbcluster::ha_initialise(6540,188602
ha_ndbcluster::~ha_ndbcluster(6554,188830
int ha_ndbcluster::open(6604,189797
void ha_ndbcluster::set_part_info(6702,192152
int ha_ndbcluster::close(6715,192483
Thd_ndb* ha_ndbcluster::seize_thd_ndb(6736,193053
void ha_ndbcluster::release_thd_ndb(6763,193624
Ndb* check_ndb_in_thd(6778,193922
int ha_ndbcluster::check_ndb_connection(6792,194148
static int ndbcluster_close_connection(6807,194433
int ndbcluster_discover(6824,194799
int ndbcluster_table_exists_in_engine(6933,197458
extern "C" uchar* tables_get_key(6962,198413
int ndbcluster_drop_database_impl(6976,198752
static void ndbcluster_drop_database(7034,200493
int ndb_create_table_from_engine(7061,201211
int ndbcluster_find_all_files(7075,201571
int ndbcluster_find_files(7205,205617
static int connect_callback(7460,214284
PSI_mutex_key key_injector_mutex,7481,214843
PSI_mutex_key key_injector_mutex, key_ndb_schema_share_mutex,7481,214843
              key_ndb_schema_object_mutex;7482,214905
PSI_mutex_key key_NDB_SHARE_mutex,7485,214978
PSI_mutex_key key_NDB_SHARE_mutex, key_ndbcluster_mutex,7485,214978
              key_LOCK_ndb_util_thread;7486,215035
static PSI_mutex_info all_ndbcluster_mutexes[all_ndbcluster_mutexes7488,215076
PSI_cond_key key_injector_cond;7501,215623
PSI_cond_key key_COND_ndb_util_thread,7504,215685
PSI_cond_key key_COND_ndb_util_thread, key_COND_ndb_util_ready;7504,215685
static PSI_cond_info all_ndbcluster_conds[all_ndbcluster_conds7506,215750
PSI_thread_key key_thread_ndb_binlog;7516,216078
PSI_thread_key key_thread_ndb_util;7518,216145
static PSI_thread_info all_ndbcluster_threads[all_ndbcluster_threads7520,216182
PSI_file_key key_file_ndb;7528,216404
static PSI_file_info all_ndbcluster_files[all_ndbcluster_files7530,216432
void init_ndbcluster_psi_keys(7535,216512
static int ndbcluster_init(7557,217146
static int ndbcluster_fill_is_table(7751,223805
static int ndbcluster_end(7768,224243
void ha_ndbcluster::print_error(7835,226048
void ndbcluster_print_error(7853,226478
void ha_ndbcluster::set_dbname(7871,227007
void ha_ndbcluster::set_dbname(7907,227749
ha_ndbcluster::set_tabname(7917,227913
void ha_ndbcluster::set_tabname(7948,228568
ha_ndbcluster::records_in_range(7955,228675
ulonglong ha_ndbcluster::table_flags(8057,232124
const char * ha_ndbcluster::table_type(8071,232569
uint ha_ndbcluster::max_supported_record_length(8075,232645
uint ha_ndbcluster::max_supported_keys(8079,232735
uint ha_ndbcluster::max_supported_key_parts(8083,232804
uint ha_ndbcluster::max_supported_key_length(8087,232903
uint ha_ndbcluster::max_supported_key_part_length(8091,232987
bool ha_ndbcluster::low_byte_first(8095,233076
const char* ha_ndbcluster::index_type(8103,233191
uint8 ha_ndbcluster::table_cache_type(8117,233477
uint ndb_get_commitcount(8124,233638
ndbcluster_cache_retrieval_allowed(8248,237723
ha_ndbcluster::register_query_cache_table(8317,239894
static uchar *ndbcluster_get_key(ndbcluster_get_key8357,241132
static void print_share(8367,241357
static void print_ndbcluster_open_tables(8387,241929
#define dbug_print_open_tables(8401,242279
#define dbug_print_share(8405,242429
int handle_trailing_share(8423,243131
static int rename_share(8529,246548
NDB_SHARE *ndbcluster_get_share(ndbcluster_get_share8604,248961
NDB_SHARE *ndbcluster_get_share(ndbcluster_get_share8631,249607
void ndbcluster_real_free_share(8715,252435
void ndbcluster_free_share(8748,253333
ndb_get_table_statistics(8770,253781
int ha_ndbcluster::write_ndb_file(8912,257291
ha_ndbcluster::release_completed_operations(8935,257823
ha_ndbcluster::null_value_index_search(8959,258375
ha_ndbcluster::read_multi_range_first(8983,259074
#define DBUG_MULTI_RANGE(9223,267089
#define DBUG_MULTI_RANGE(9225,267184
ha_ndbcluster::read_multi_range_next(9229,267224
int ha_ndbcluster::loc_read_multi_range_next(9244,267689
ha_ndbcluster::setup_recattr(9396,271712
ha_ndbcluster::update_table_comment(9427,272305
pthread_handler_t ndb_util_thread_func(9470,273351
ha_ndbcluster::cond_push(9779,283329
ha_ndbcluster::cond_pop(9797,283766
char* ha_ndbcluster::get_tablespace_name(9807,283889
ndbcluster_show_status(9850,285047
static uint get_no_fragments(9908,286761
static bool adjusted_frag_count(9935,287550
int ha_ndbcluster::get_default_no_partitions(9946,287898
enum ndb_distribution_enum 9991,289080
enum ndb_distribution_enum { ND_KEYHASH=ndb_distribution_enum::ND_KEYHASH9991,289080
enum ndb_distribution_enum { ND_KEYHASH= 0, ND_LINHASH=ndb_distribution_enum::ND_LINHASH9991,289080
static const char* distribution_names[distribution_names9992,289141
static ulong default_ndb_distribution=9993,289215
static TYPELIB distribution_typelib=9994,289266
void ha_ndbcluster::set_auto_partitions(10011,289794
int ha_ndbcluster::set_range_data(10029,290200
int ha_ndbcluster::set_list_data(10068,291283
uint ha_ndbcluster::set_up_partition_info(10118,293027
bool ha_ndbcluster::check_if_incompatible_data(10245,296932
bool set_up_tablespace(10347,299983
bool set_up_datafile(10356,300282
bool set_up_logfile_group(10370,300669
bool set_up_undofile(10378,300922
int ndbcluster_alter_tablespace(10387,301202
bool ha_ndbcluster::get_no_parts(10619,307094
static int ndbcluster_fill_files_table(10649,307752
SHOW_VAR ndb_status_variables_export[ndb_status_variables_export10879,317534
ulong opt_ndb_report_thresh_binlog_epoch_slip;10915,318832
ulong opt_ndb_report_thresh_binlog_mem_usage;10934,319639
static struct st_mysql_sys_var* system_variables[system_variables10987,321661
struct st_mysql_storage_engine ndbcluster_storage_engine=11010,322340
mysql_declare_plugin(11013,322439
mysql_declare_plugin_end;11029,322992

sql/ha_ndbcluster_binlog.cc,4681
#undef assert44,1690
#define assert(45,1704
#define NDB_APPLY_TABLE_FILE 54,2087
#define NDB_SCHEMA_TABLE_FILE 55,2152
static const int DEFAULT_SYNC_TIMEOUT=61,2327
static int ndb_binlog_thread_running=69,2523
my_bool ndb_binlog_running=75,2652
my_bool ndb_binlog_tables_inited=76,2687
THD *injector_thd=injector_thd84,2881
static Ndb *injector_ndb=injector_ndb96,3274
static Ndb *schema_ndb=schema_ndb97,3303
static int ndbcluster_binlog_inited=99,3331
static int ndbcluster_binlog_terminating=114,3833
pthread_t ndb_binlog_thread;120,3976
mysql_mutex_t injector_mutex;121,4005
mysql_cond_t  injector_cond;122,4035
static ulonglong ndb_latest_applied_binlog_epoch=125,4118
static ulonglong ndb_latest_handled_binlog_epoch=126,4171
static ulonglong ndb_latest_received_binlog_epoch=127,4224
NDB_SHARE *ndb_apply_status_share=ndb_apply_status_share129,4279
NDB_SHARE *ndb_schema_share=ndb_schema_share130,4317
mysql_mutex_t ndb_schema_share_mutex;131,4349
static my_bool g_ndb_log_slave_updates;134,4426
HASH ndb_schema_objects;137,4509
typedef struct st_ndb_schema_object 138,4534
} NDB_SCHEMA_OBJECT;145,4732
static Uint64 *p_latest_trans_gci=p_latest_trans_gci152,5091
static TABLE *ndb_binlog_index=ndb_binlog_index157,5204
static TABLE_LIST binlog_tables;158,5239
static void print_records(166,5346
#define print_records(187,5911
static void dbug_print_table(192,5964
#define dbug_print_table(246,8059
static void run_query(257,8223
ndbcluster_binlog_close_table(336,11084
ndbcluster_binlog_open_table(358,11484
int ndbcluster_binlog_init_share(424,13704
static void ndbcluster_binlog_wait(514,16477
static int ndbcluster_reset_logs(540,17115
ndbcluster_binlog_index_purge_file(567,17653
ndbcluster_binlog_log_query(587,18186
static int ndbcluster_binlog_end(642,19491
static void ndbcluster_reset_slave(690,21107
static bool ndbcluster_flush_logs(711,21644
static int ndbcluster_binlog_func(717,21756
void ndbcluster_binlog_init_handlerton(742,22331
static NDB_SHARE *ndbcluster_check_ndb_apply_status_share(ndbcluster_check_ndb_apply_status_share759,22702
static NDB_SHARE *ndbcluster_check_ndb_schema_share(ndbcluster_check_ndb_schema_share777,23322
static int ndbcluster_create_ndb_apply_status_table(793,23843
static int ndbcluster_create_schema_table(851,25640
int ndbcluster_setup_binlog_table_shares(909,27516
#define SCHEMA_DB_I 950,28646
#define SCHEMA_NAME_I 951,28669
#define SCHEMA_SLOCK_I 952,28694
#define SCHEMA_QUERY_I 953,28720
#define SCHEMA_NODE_ID_I 954,28746
#define SCHEMA_EPOCH_I 955,28774
#define SCHEMA_ID_I 956,28800
#define SCHEMA_VERSION_I 957,28823
#define SCHEMA_TYPE_I 958,28851
#define SCHEMA_SIZE 959,28876
#define SCHEMA_SLOCK_SIZE 960,28899
struct Cluster_schema962,28930
static void print_could_not_discover_error(980,29235
static void ndbcluster_get_schema(998,29925
char *ndb_pack_varchar(ndb_pack_varchar1072,32204
ndbcluster_update_slock(1096,32717
static void ndb_report_waiting(1247,36733
int ndbcluster_log_schema_op(1272,37679
ndb_handle_schema_change(1669,50169
static void ndb_binlog_query(1876,57331
ndb_binlog_thread_handle_schema_event(1904,58310
ndb_binlog_thread_handle_schema_event_post_epoch(2182,69255
struct ndb_binlog_index_row 2332,74646
static int open_ndb_binlog_index(2345,74890
int ndb_add_ndb_binlog_index(2380,75921
enum Binlog_thread_state2441,77990
  BCCC_running=Binlog_thread_state::BCCC_running2443,78017
  BCCC_exit=Binlog_thread_state::BCCC_exit2444,78036
  BCCC_restart=Binlog_thread_state::BCCC_restart2445,78052
static enum Binlog_thread_state do_ndbcluster_binlog_close_connection=2448,78074
int ndbcluster_binlog_start(2450,78160
ndb_rep_event_name(2502,79778
ndbcluster_check_if_local_table(2514,79999
ndbcluster_check_if_local_tables_in_db(2536,80659
int ndbcluster_create_binlog_setup(2565,81518
ndbcluster_create_event(2717,86215
inline int is_ndb_compatible_type(2865,91439
ndbcluster_create_event_ops(2881,91792
ndbcluster_handle_drop_table(3110,99790
#define SYNC_DROP_3161,101608
static int ndb_binlog_thread_handle_error(3211,102958
ndb_binlog_thread_handle_non_data_event(3252,104201
ndb_binlog_thread_handle_data_event(3331,107221
class Timer3522,114303
  Timer(Timer::Timer3525,114325
  void start(Timer::start3526,114348
  void stop(Timer::stop3527,114394
  ulong elapsed_ms(Timer::elapsed_ms3528,114438
ndb_schema_objects_get_key(3545,114873
static NDB_SCHEMA_OBJECT *ndb_get_schema_object(ndb_get_schema_object3553,115127
static void ndb_free_schema_object(3606,116961
pthread_handler_t ndb_binlog_thread_func(3633,117846
ndbcluster_show_status_binlog(4403,144700

sql/ha_ndbcluster_cond.cc,684
typedef NdbDictionary::Column NDBCOL;35,1211
typedef NdbDictionary::Table NDBTAB;36,1249
static void ndb_serialize_const(48,1538
void ndb_serialize_cond(148,4537
ha_ndbcluster_cond::cond_push(944,36027
ha_ndbcluster_cond::cond_pop(975,36634
ha_ndbcluster_cond::cond_clear(990,36890
ha_ndbcluster_cond::serialize_cond(1000,37021
ha_ndbcluster_cond::build_scan_filter_predicate(1016,37618
ha_ndbcluster_cond::build_scan_filter_group(1257,45249
ha_ndbcluster_cond::build_scan_filter(1332,47151
ha_ndbcluster_cond::generate_scan_filter(1362,47818
ha_ndbcluster_cond::generate_scan_filter_from_cond(1396,48561
int ha_ndbcluster_cond::generate_scan_filter_from_key(1427,49235

sql/ha_partition.cc,9052
static const char *ha_par_ext=ha_par_ext70,2942
static int partition_initialize(88,3668
static handler *partition_create_handler(partition_create_handler117,4405
static uint partition_flags(149,5313
static uint alter_table_flags(154,5375
const uint ha_partition::NO_CURRENT_PART_ID=160,5527
ha_partition::ha_partition(173,5714
ha_partition::ha_partition(193,6043
ha_partition::ha_partition(217,6736
void ha_partition::init_handler_variables(243,7380
const char *ha_partition::table_type(ha_partition::table_type305,8885
ha_partition::~ha_partition(322,9119
bool ha_partition::initialize_partition(384,11339
int ha_partition::delete_table(475,14222
int ha_partition::rename_table(505,14952
int ha_partition::create_handler_files(533,15731
int ha_partition::create(596,17716
int ha_partition::drop_partitions(629,18495
int ha_partition::rename_partitions(718,21513
#define OPTIMIZE_PARTS 899,28613
#define ANALYZE_PARTS 900,28638
#define CHECK_PARTS 901,28662
#define REPAIR_PARTS 902,28686
#define ASSIGN_KEYCACHE_PARTS 903,28709
#define PRELOAD_KEYS_PARTS 904,28741
static const char *opt_op_name[opt_op_name906,28771
int ha_partition::optimize(923,29186
int ha_partition::analyze(944,29585
int ha_partition::check(965,29977
int ha_partition::repair(986,30365
int ha_partition::assign_to_keycache(1004,30732
int ha_partition::preload_keys(1023,31134
int ha_partition::handle_opt_part(1046,31716
static bool print_admin_msg(1105,33506
int ha_partition::handle_opt_partitions(1177,35530
bool ha_partition::check_and_repair(1273,38799
bool ha_partition::auto_repair(1294,39193
bool ha_partition::is_crashed(1313,39548
int ha_partition::prepare_new_partition(1342,40163
void ha_partition::cleanup_new_partition(1425,43109
int ha_partition::change_partitions(1477,44780
int ha_partition::copy_partitions(1793,54973
void ha_partition::update_create_info(1879,57218
void ha_partition::change_table_ptr(1899,57790
char *ha_partition::update_table_comment(ha_partition::update_table_comment1943,58691
int ha_partition::del_ren_cre_table(1973,59552
partition_element *ha_partition::find_partition_element(ha_partition::find_partition_element2113,64013
int ha_partition::set_up_table_before_create(2164,65296
static uint name_add(2221,67089
bool ha_partition::create_handler_file(2241,67545
void ha_partition::clear_handler_file(2385,72565
bool ha_partition::create_handlers(2406,72965
bool ha_partition::new_handlers_from_part_info(2454,74237
bool ha_partition::read_par_file(2526,76271
bool ha_partition::setup_engine_array(2597,78568
bool ha_partition::get_from_handler_file(2656,80056
void ha_data_partition_destroy(2684,80757
int ha_partition::open(2715,81585
handler *ha_partition::clone(ha_partition::clone2926,88758
int ha_partition::close(2970,90039
int ha_partition::external_lock(3041,92217
THR_LOCK_DATA **ha_partition::store_lock(ha_partition::store_lock3128,94902
int ha_partition::start_stmt(3160,95649
uint ha_partition::lock_count(3192,96347
void ha_partition::unlock_row(3214,96755
bool ha_partition::was_semi_consistent_read(3244,97762
void ha_partition::try_semi_consistent_read(3271,98594
int ha_partition::write_row(3326,100157
int ha_partition::update_row(3452,104302
int ha_partition::delete_row(3596,109438
int ha_partition::delete_all_rows(3659,111412
int ha_partition::truncate(3682,111766
int ha_partition::truncate_partition(3715,112468
void ha_partition::start_bulk_insert(3789,114536
void ha_partition::start_part_bulk_insert(3805,114968
long ha_partition::estimate_read_buffer_size(3837,116268
ha_rows ha_partition::guess_bulk_insert_rows(3872,117382
int ha_partition::end_bulk_insert(3909,118383
int ha_partition::rnd_init(3959,119882
int ha_partition::rnd_end(4063,122571
int ha_partition::rnd_next(4112,123833
void ha_partition::position(4208,126333
void ha_partition::column_bitmaps_signal(4225,126803
int ha_partition::rnd_pos(4254,127676
int ha_partition::rnd_pos_by_record(4287,128454
bool ha_partition::init_record_priority_queue(4322,129664
void ha_partition::destroy_record_priority_queue(4377,131375
int ha_partition::index_init(4407,132063
int ha_partition::index_end(4496,134674
int ha_partition::index_read_map(4542,136067
int ha_partition::common_index_read(4585,137785
int ha_partition::index_first(4664,140269
int ha_partition::index_last(4695,141014
int ha_partition::common_first_last(4712,141317
int ha_partition::index_read_last_map(4743,142069
int ha_partition::index_read_idx_map(4762,142614
int ha_partition::index_next(4831,144637
int ha_partition::index_next_same(4869,145630
int ha_partition::index_prev(4896,146288
int ha_partition::read_range_first(4927,147170
int ha_partition::read_range_next(4969,148097
int ha_partition::partition_scan_set_up(5007,149175
int ha_partition::handle_unordered_next(5090,151975
int ha_partition::handle_unordered_scan_next_partition(5161,153723
int ha_partition::handle_ordered_index_scan(5257,156981
void ha_partition::return_top_record(5387,161140
int ha_partition::handle_ordered_index_scan_key_not_found(5408,161680
int ha_partition::handle_ordered_next(5467,163412
int ha_partition::handle_ordered_prev(5558,165800
int ha_partition::compare_number_of_records(5602,166935
int ha_partition::info(5681,169259
void ha_partition::get_dynamic_partition_info(5913,177546
int ha_partition::extra(6247,192905
int ha_partition::reset(6410,197485
int ha_partition::extra_opt(6439,198115
void ha_partition::prepare_extra_cache(6460,198531
int ha_partition::prepare_for_rename(6486,199071
int ha_partition::loop_extra(6518,199795
void ha_partition::late_extra_cache(6550,200443
void ha_partition::late_extra_no_cache(6588,201384
const key_map *ha_partition::keys_to_use_for_scanning(ha_partition::keys_to_use_for_scanning6617,202117
ha_rows ha_partition::min_rows_for_estimate(6629,202354
uint ha_partition::get_biggest_used_partition(6691,204759
double ha_partition::scan_time(6714,205179
ha_rows ha_partition::records_in_range(6740,205836
ha_rows ha_partition::estimate_rows_upper_bound(6800,207976
double ha_partition::read_time(6839,208927
ha_rows ha_partition::records(6857,209243
bool ha_partition::can_switch_engines(6890,209861
uint8 ha_partition::table_cache_type(6913,210182
const char *ha_partition::index_type(ha_partition::index_type6925,210517
enum row_type ha_partition::get_row_type(6933,210656
void ha_partition::append_row_to_str(6949,210960
void ha_partition::print_error(7000,212410
bool ha_partition::get_error_message(7078,214638
uint ha_partition::alter_table_flags(7099,215369
bool ha_partition::check_if_incompatible_data(7143,217154
class ha_partition_add_index 7167,217822
  ha_partition_add_index(ha_partition_add_index::ha_partition_add_index7171,217921
  ~ha_partition_add_index(ha_partition_add_index::~ha_partition_add_index7175,218101
int ha_partition::add_index(7192,218542
int ha_partition::final_add_index(7258,220477
int ha_partition::prepare_drop_index(7361,223781
int ha_partition::final_drop_index(7377,224137
static const char *ha_partition_ext[ha_partition_ext7395,224576
const char **ha_partition::bas_ext(ha_partition::bas_ext7400,224641
uint ha_partition::min_of_the_max_uint(7404,224715
uint ha_partition::max_supported_key_parts(7419,225062
uint ha_partition::max_supported_key_length(7425,225184
uint ha_partition::max_supported_key_part_length(7431,225308
uint ha_partition::max_supported_record_length(7437,225442
uint ha_partition::max_supported_keys(7443,225572
uint ha_partition::extra_rec_buf_length(7449,225684
uint ha_partition::min_record_length(7461,225953
int ha_partition::cmp_ref(7496,227006
int ha_partition::reset_auto_increment(7534,227851
void ha_partition::get_auto_increment(7561,228703
void ha_partition::release_auto_increment(7651,232353
void ha_partition::init_table_handle_for_HANDLER(7700,234063
int ha_partition::disable_indexes(7720,234528
int ha_partition::enable_indexes(7744,234926
int ha_partition::indexes_are_disabled(7768,235324
class ha_partition_inplace_ctx 7789,235632
  ha_partition_inplace_ctx(ha_partition_inplace_ctx::ha_partition_inplace_ctx7798,235817
  ~ha_partition_inplace_ctx(ha_partition_inplace_ctx::~ha_partition_inplace_ctx7805,235999
ha_partition::try_hot_alter_table(7816,236182
ha_partition::check_if_supported_inplace_alter(7825,236383
bool ha_partition::prepare_inplace_alter_table(7866,237698
bool ha_partition::inplace_alter_table(7892,238545
bool ha_partition::commit_inplace_alter_table(7925,239687
void ha_partition::notify_table_changed(8052,245048
int ha_partition::check_misplaced_rows(8075,245501
#define KEY_PARTITIONING_CHANGED_STR 8229,250540
int ha_partition::check_for_upgrade(8232,250647
int ha_partition::new_alter_table_frm_data(8346,254819
int ha_partition::discover(8364,255204
static int partition_discover(8423,256762
struct st_mysql_storage_engine partition_storage_engine=8435,257197
mysql_declare_plugin(8438,257295
mysql_declare_plugin_end;8454,257858

sql/handler.cc,8673
st_plugin_int *hton2plugin[hton2plugin54,1845
static handlerton *installed_htons[installed_htons56,1882
#define BITMAP_STACKBUF_SIZE 58,1924
KEY_CREATE_INFO default_key_create_info=60,1962
ulong total_ha=64,2096
ulong total_ha_2pc=66,2185
ulong savepoint_alloc_size=68,2259
static const LEX_STRING sys_table_aliases[sys_table_aliases70,2291
const char *ha_row_type[ha_row_type79,2647
const char *tx_isolation_names[tx_isolation_names87,2919
TYPELIB tx_isolation_typelib=90,3039
static TYPELIB known_extensions=93,3149
uint known_extensions_id=94,3212
const char* mysqld_system_database=101,3415
st_system_tablename mysqld_system_tables[mysqld_system_tables104,3517
static const char **known_system_databases=known_system_databases133,4681
struct st_sys_tbl_chk_params150,5397
  enum enum_sys_tbl_chk_statusst_sys_tbl_chk_params::enum_sys_tbl_chk_status157,5661
    NOT_KNOWN_SYSTEM_TABLE,st_sys_tbl_chk_params::enum_sys_tbl_chk_status::NOT_KNOWN_SYSTEM_TABLE160,5750
    KNOWN_SYSTEM_TABLE,st_sys_tbl_chk_params::enum_sys_tbl_chk_status::KNOWN_SYSTEM_TABLE165,5869
    SUPPORTED_SYSTEM_TABLEst_sys_tbl_chk_params::enum_sys_tbl_chk_status::SUPPORTED_SYSTEM_TABLE170,5976
static plugin_ref ha_default_plugin(175,6067
handlerton *ha_default_handlerton(ha_default_handlerton193,6445
plugin_ref ha_resolve_by_name(214,6902
plugin_ref ha_lock_engine(256,8086
handlerton *ha_resolve_by_legacy_type(ha_resolve_by_legacy_type272,8356
handlerton *ha_checktype(ha_checktype292,8876
handler *get_new_handler(get_new_handler322,9616
handler *get_ha_partition(get_ha_partition345,10297
static const char **handler_errmsgs;handler_errmsgs369,10808
static const char **get_handler_errmsgs(get_handler_errmsgs372,10859
int ha_init_errors(388,11073
#define SETMSG(390,11100
static int ha_finish_errors(459,15072
int ha_finalize_handlerton(471,15317
int ha_initialize_handlerton(528,16674
int ha_init(660,20263
int ha_end(684,20859
static my_bool dropdb_handlerton(701,21134
void ha_drop_database(711,21428
static my_bool closecon_handlerton(717,21546
void ha_close_connection(740,22156
void trans_register_ha(1051,36098
int ha_prepare(1085,36888
ha_check_and_coalesce_trx_read_only(1142,38534
int ha_commit_trans(1196,40198
int ha_commit_one_phase(1369,45905
int ha_rollback_trans(1423,47671
struct xahton_st 1521,51303
static my_bool xacommit_handlerton(1526,51352
static my_bool xarollback_handlerton(1538,51710
int ha_commit_or_rollback_by_xid(1551,52075
static char* xid_to_str(1569,52441
struct xarecover_st1636,54137
static my_bool xarecover_handlerton(1644,54259
int ha_recover(1703,56110
bool mysql_xa_recover(1776,58658
int ha_release_temporary_latches(1836,60866
int ha_rollback_to_savepoint(1855,61447
int ha_savepoint(1912,63221
int ha_release_savepoint(1947,64147
static my_bool snapshot_handlerton(1972,64765
int ha_start_consistent_snapshot(1985,65113
static my_bool handle_fatal_signal(2002,65573
int ha_handle_fatal_signal(2016,65930
static my_bool flush_handlerton(2022,66072
bool ha_flush_logs(2033,66361
const char *get_canonical_filename(get_canonical_filename2073,67407
struct Ha_delete_table_error_handler:Ha_delete_table_error_handler2105,68255
handle_condition(2120,68729
int ha_delete_table(2138,69173
handler *handler::clone(handler::clone2198,71236
double handler::keyread_time(2223,72180
void handler::ha_statistic_increment(2232,72470
void **handler::ha_data(handler::ha_data2237,72597
THD *handler::ha_thd(handler::ha_thd2242,72673
PSI_table_share *handler::ha_table_share_psi(handler::ha_table_share_psi2248,72849
int handler::ha_open(2260,73115
int handler::read_first_row(2315,74690
compute_next_insert_id(2366,76158
void handler::adjust_next_insert_id_after_explicit_value(2388,76723
prev_insert_id(2416,77580
#define AUTO_INC_DEFAULT_NB_ROWS 2514,81942
#define AUTO_INC_DEFAULT_NB_MAX_BITS 2515,82002
#define AUTO_INC_DEFAULT_NB_MAX 2516,82042
int handler::update_auto_increment(2518,82117
void handler::column_bitmaps_signal(2705,89218
void handler::get_auto_increment(2731,90094
void handler::ha_release_auto_increment(2803,92294
void handler::print_keydup_error(2821,92722
void handler::print_error(2858,93695
bool handler::get_error_message(3084,99743
int handler::check_collation_compatibility(3099,100015
int handler::ha_check_for_upgrade(3137,101452
int handler::check_old_types(3176,102447
static bool update_frm_version(3199,102865
uint handler::get_dup_key(3241,103875
int handler::delete_table(3268,104635
int handler::rename_table(3299,105448
void handler::drop_table(3323,105912
int handler::ha_check(3345,106412
handler::mark_trx_read_write(3378,107194
int handler::ha_repair(3408,108076
handler::ha_bulk_update_row(3431,108485
handler::ha_delete_all_rows(3447,108778
handler::ha_truncate(3462,108943
handler::ha_reset_auto_increment(3477,109112
handler::ha_optimize(3492,109307
handler::ha_analyze(3507,109503
handler::ha_check_and_repair(3522,109716
handler::ha_disable_indexes(3537,109902
handler::ha_enable_indexes(3552,110086
handler::ha_discard_or_import_tablespace(3567,110296
handler::ha_prepare_for_alter(3584,110562
handler::ha_rename_table(3599,110726
handler::ha_delete_table(3614,110927
handler::ha_drop_table(3629,111119
handler::ha_create(3644,111306
handler::ha_create_handler_files(3659,111555
handler::ha_change_partitions(3675,111876
handler::ha_drop_partitions(3696,112395
handler::ha_rename_partitions(3711,112592
int ha_enable_transaction(3727,113094
int handler::index_next_same(3747,113678
void handler::get_dynamic_partition_info(3799,115240
int ha_create_table(3832,116427
int ha_create_table_from_engine(3880,117676
ha_check_if_table_exists(3945,119315
bool ha_check_if_supported_system_table(3984,120784
static my_bool check_engine_system_table_handlerton(4062,123277
const char** ha_known_system_databases(4125,125475
static my_bool system_databases_handlerton(4163,126595
void st_ha_check_opt::init(4181,127018
int ha_init_key_cache(4200,127573
int ha_resize_key_cache(4224,128232
int ha_change_key_cache_param(4247,128904
int ha_change_key_cache(4263,129369
struct st_discover_args4281,129737
static my_bool discover_handlerton(4289,129843
int ha_discover(4303,130300
struct st_find_files_args4329,131106
static my_bool find_files_handlerton(4338,131235
ha_find_files(4354,131694
struct st_table_exists_in_engine_args4378,132414
static my_bool table_exists_in_engine_handlerton(4385,132507
int ha_table_exists_in_engine(4403,133046
#define MAX_HTON_LIST_ST 4421,133695
struct hton_list_st4422,133723
struct binlog_func_st4428,133798
static my_bool binlog_func_list(4437,133942
static my_bool binlog_func_foreach(4455,134377
int ha_reset_logs(4469,134748
void ha_reset_slave(4476,134870
void ha_binlog_wait(4482,134983
int ha_binlog_end(4488,135096
int ha_binlog_index_purge_file(4495,135218
struct binlog_log_query_st4502,135389
static my_bool binlog_log_query_handlerton2(4511,135546
static my_bool binlog_log_query_handlerton(4526,136113
void ha_binlog_log_query(4533,136373
int handler::read_multi_range_first(4576,137792
int handler::read_multi_range_next(4626,139456
int handler::read_range_first(4699,141648
int handler::read_range_next(4758,143006
int handler::compare_key(4805,144042
int handler::index_read_idx_map(4817,144273
static my_bool exts_handlerton(4842,144944
TYPELIB *ha_known_exts(ha_known_exts4871,145657
static bool stat_print(4902,146504
static my_bool showstat_handlerton(4917,146993
bool ha_show_status(4928,147365
static bool check_table_binlog_row_based(4986,149128
static int write_locked_table_maps(5025,150163
typedef bool Log_func(5085,152360
static int binlog_log_row(5088,152472
int handler::ha_external_lock(5139,154366
int handler::ha_reset(5203,156107
int handler::ha_write_row(5223,156753
int handler::ha_update_row(5247,157402
int handler::ha_delete_row(5271,158097
int handler::ha_fast_update(5295,158799
int handler::ha_upsert(5303,159041
void handler::use_hidden_primary_key(5316,159437
void signal_log_not_needed(5327,159679
int example_of_iterator_using_for_logs_cleanup(5342,160043
#define fl_dir 5380,161163
enum log_status fl_get_log_status(5388,161363
struct fl_buff5397,161564
int fl_log_iterator_next(5406,161672
void fl_log_iterator_destroy(5421,162115
fl_log_iterator_buffer_init(5431,162324
fl_create_iterator(5492,164319
handler::check_if_supported_inplace_alter(5510,164746
void handler::notify_table_changed(5558,166640
bool handler::ha_prepare_inplace_alter_table(5563,166757
bool handler::ha_commit_inplace_alter_table(5571,167003

sql/hostname.cc,616
#define HOST_ENTRY_KEY_SIZE 56,1683
class Host_entry 69,1999
static hash_filo *hostname_cache;hostname_cache93,2531
void hostname_cache_refresh(95,2566
bool hostname_cache_init(100,2628
void hostname_cache_free(116,3052
static void prepare_hostname_cache_key(122,3133
static inline Host_entry *hostname_cache_search(hostname_cache_search132,3441
static bool add_hostname_impl(137,3583
static bool add_hostname(176,4535
void inc_host_errors(190,4837
void reset_host_errors(209,5189
static inline bool is_ip_loopback(228,5544
static inline bool is_hostname_valid(252,6068
bool ip_to_hostname(297,7335

sql/init.cc,26
void unireg_init(32,1110

sql/item.cc,19679
void Hybrid_type_traits::fix_length_and_dec(51,2188
static const Hybrid_type_traits real_traits_instance;57,2354
const Hybrid_type_traits *Hybrid_type_traits::instance(Hybrid_type_traits::instance59,2409
Hybrid_type_traits::val_decimal(66,2517
Hybrid_type_traits::val_str(74,2692
static const Hybrid_type_traits_decimal decimal_traits_instance;81,2877
const Hybrid_type_traits_decimal *Hybrid_type_traits_decimal::instance(Hybrid_type_traits_decimal::instance83,2943
Hybrid_type_traits_decimal::fix_length_and_dec(90,3062
void Hybrid_type_traits_decimal::set_zero(98,3293
void Hybrid_type_traits_decimal::add(105,3433
void Hybrid_type_traits_decimal::div(119,3778
Hybrid_type_traits_decimal::val_int(132,4182
Hybrid_type_traits_decimal::val_real(142,4426
Hybrid_type_traits_decimal::val_str(151,4631
static const Hybrid_type_traits_integer integer_traits_instance;161,5007
const Hybrid_type_traits_integer *Hybrid_type_traits_integer::instance(Hybrid_type_traits_integer::instance163,5073
Hybrid_type_traits_integer::fix_length_and_dec(169,5191
void item_init(184,5579
bool Item::val_bool(196,5708
String *Item::val_str_ascii(Item::val_str_ascii228,6501
String *Item::val_string_from_real(Item::val_string_from_real249,6944
String *Item::val_string_from_int(Item::val_string_from_int259,7145
String *Item::val_string_from_decimal(Item::val_string_from_decimal269,7322
my_decimal *Item::val_decimal_from_real(Item::val_decimal_from_real280,7611
my_decimal *Item::val_decimal_from_int(Item::val_decimal_from_int290,7826
my_decimal *Item::val_decimal_from_string(Item::val_decimal_from_string300,8051
my_decimal *Item::val_decimal_from_date(Item::val_decimal_from_date321,8647
my_decimal *Item::val_decimal_from_time(Item::val_decimal_from_time335,8997
double Item::val_real_from_decimal(348,9252
longlong Item::val_int_from_decimal(360,9554
int Item::save_time_in_field(371,9858
int Item::save_date_in_field(381,10090
int Item::save_str_value_in_field(412,10897
Item::Item(422,11131
Item::Item(459,12152
uint Item::decimal_precision(483,12792
void Item::print_item_w_name(498,13180
void Item::cleanup(511,13432
bool Item::cleanup_processor(528,13667
void Item::rename(542,13867
Item* Item::transform(583,15224
Item_ident::Item_ident(591,15391
Item_ident::Item_ident(605,15915
Item_ident::Item_ident(621,16437
void Item_ident::cleanup(636,16923
bool Item_ident::remove_dependence_processor(655,17517
bool Item_field::collect_item_field_processor(683,18412
bool Item_field::find_item_in_field_list_processor(716,19404
bool Item_field::register_field_in_read_map(739,19949
bool Item::check_cols(748,20157
void Item::set_name(759,20286
bool Item::eq(811,21787
Item *Item::safe_charset_converter(Item::safe_charset_converter823,22151
Item *Item_num::safe_charset_converter(Item_num::safe_charset_converter841,22700
Item *Item_static_float_func::safe_charset_converter(Item_static_float_func::safe_charset_converter881,24089
Item *Item_string::safe_charset_converter(Item_string::safe_charset_converter897,24498
Item *Item_param::safe_charset_converter(Item_param::safe_charset_converter925,25489
Item *Item_static_string_func::safe_charset_converter(Item_static_string_func::safe_charset_converter943,25981
bool Item_string::eq(970,26923
bool Item::get_date(988,27405
bool Item::get_time(1030,28440
CHARSET_INFO *Item::default_charset(Item::default_charset1043,28745
int Item::save_in_field_no_warnings(1057,29050
Item_sp_variable::Item_sp_variable(1081,29863
bool Item_sp_variable::fix_fields(1093,30104
double Item_sp_variable::val_real(1112,30477
longlong Item_sp_variable::val_int(1122,30640
String *Item_sp_variable::val_str(Item_sp_variable::val_str1132,30805
my_decimal *Item_sp_variable::val_decimal(Item_sp_variable::val_decimal1168,31861
bool Item_sp_variable::is_null(1178,32078
Item_splocal::Item_splocal(1188,32332
Item_splocal::this_item(1206,32866
Item_splocal::this_item(1214,32998
Item_splocal::this_item_addr(1223,33132
void Item_splocal::print(1231,33275
bool Item_splocal::set_value(1240,33460
Item_case_expr::Item_case_expr(1250,33770
Item_case_expr::this_item(1258,33919
Item_case_expr::this_item(1268,34065
Item_case_expr::this_item_addr(1277,34211
void Item_case_expr::print(1285,34366
double Item_name_const::val_real(1298,34831
longlong Item_name_const::val_int(1307,34984
String *Item_name_const::val_str(Item_name_const::val_str1316,35139
my_decimal *Item_name_const::val_decimal(Item_name_const::val_decimal1325,35304
bool Item_name_const::is_null(1334,35511
Item_name_const::Item_name_const(1340,35581
Item::Type Item_name_const::type(1357,36287
bool Item_name_const::fix_fields(1395,37577
void Item_name_const::print(1423,38347
class Item_aggregate_ref 1438,38798
  Item_aggregate_ref(Item_aggregate_ref::Item_aggregate_ref1441,38851
  virtual inline void print Item_aggregate_ref::print1445,39066
  virtual Ref_Type ref_type(Item_aggregate_ref::ref_type1452,39246
void Item::split_sum_func2(1475,39902
left_is_superset(1523,41906
bool DTCollation::aggregate(1582,44461
void my_coll_agg_error(1677,46571
void my_coll_agg_error(1687,46832
void my_coll_agg_error(1699,47159
bool agg_item_collations(1712,47580
bool agg_item_collations_for_comparison(1758,48689
bool agg_item_set_converter(1766,48962
bool agg_item_charsets(1899,53601
void Item_ident_for_show::make_field(1909,53906
Item_field::Item_field(1924,54449
Item_field::Item_field(1945,54954
Item_field::Item_field(1986,56541
Item_field::Item_field(2003,57165
adjust_max_effective_column_length(2035,58312
void Item_field::set_field(2070,59246
void Item_field::reset_field(2098,60138
const char *Item_ident::full_name(Item_ident::full_name2105,60290
void Item_ident::print(2130,60915
String *Item_field::val_str(Item_field::val_str2185,62545
double Item_field::val_real(2195,62752
longlong Item_field::val_int(2204,62896
my_decimal *Item_field::val_decimal(Item_field::val_decimal2213,63038
String *Item_field::str_result(Item_field::str_result2221,63203
bool Item_field::get_date(2229,63399
bool Item_field::get_date_result(2239,63612
bool Item_field::get_time(2250,63852
double Item_field::val_result(2260,64040
longlong Item_field::val_int_result(2267,64172
my_decimal *Item_field::val_decimal_result(Item_field::val_decimal_result2275,64308
bool Item_field::val_bool_result(2283,64494
bool Item_field::is_null_result(2309,65098
bool Item_field::eq(2315,65185
table_map Item_field::used_tables(2345,66313
Item *Item_field::get_tmp_table_item(Item_field::get_tmp_table_item2353,66494
longlong Item_field::val_int_endpoint(2361,66677
Item_int::Item_int(2373,67003
my_decimal *Item_int::val_decimal(Item_int::val_decimal2384,67247
String *Item_int::val_str(Item_int::val_str2390,67411
void Item_int::print(2398,67631
Item_uint::Item_uint(2406,67832
Item_uint::Item_uint(2413,67942
String *Item_uint::val_str(Item_uint::val_str2420,68067
void Item_uint::print(2429,68282
Item_decimal::Item_decimal(2437,68471
Item_decimal::Item_decimal(2450,69036
Item_decimal::Item_decimal(2462,69505
Item_decimal::Item_decimal(2474,69982
Item_decimal::Item_decimal(2485,70252
Item_decimal::Item_decimal(2497,70702
longlong Item_decimal::val_int(2508,71085
double Item_decimal::val_real(2515,71236
String *Item_decimal::val_str(Item_decimal::val_str2522,71372
void Item_decimal::print(2529,71557
bool Item_decimal::eq(2536,71732
void Item_decimal::set_decimal_value(2554,72251
String *Item_float::val_str(Item_float::val_str2566,72739
my_decimal *Item_float::val_decimal(Item_float::val_decimal2575,72952
void Item_string::print(2584,73212
double_from_string_with_check 2649,75137
double Item_string::val_real(2673,75804
longlong_from_string_with_check 2682,76045
longlong Item_string::val_int(2711,76809
my_decimal *Item_string::val_decimal(Item_string::val_decimal2719,77029
bool Item_null::eq(2725,77148
double Item_null::val_real(2729,77245
longlong Item_null::val_int(2736,77411
String *Item_null::val_str(Item_null::val_str2744,77591
my_decimal *Item_null::val_decimal(Item_null::val_decimal2752,77767
Item *Item_null::safe_charset_converter(Item_null::safe_charset_converter2758,77847
default_set_param_func(2772,78157
Item_param::Item_param(2780,78344
void Item_param::set_null(2803,79056
void Item_param::set_int(2820,79529
void Item_param::set_double(2831,79764
void Item_param::set_decimal(2855,80251
void Item_param::set_decimal(2871,80720
void Item_param::set_time(2896,81572
bool Item_param::set_str(2924,82401
bool Item_param::set_longdata(2944,82987
bool Item_param::set_from_user_var(2988,84224
void Item_param::reset(3068,86631
int Item_param::save_in_field(3099,87554
bool Item_param::get_time(3127,88265
bool Item_param::get_date(3142,88539
double Item_param::val_real(3153,88716
longlong Item_param::val_int(3189,89522
my_decimal *Item_param::val_decimal(Item_param::val_decimal3220,90186
String *Item_param::val_str(Item_param::val_str3250,90868
const String *Item_param::query_val_str(Item_param::query_val_str3294,92010
bool Item_param::convert_str_value(3350,93357
bool Item_param::basic_const_item(3389,94789
Item_param::clone_item(3398,94925
Item_param::eq(3425,95591
void Item_param::print(3457,96386
Item_param::set_param_type_and_swap_value(3496,97415
Item_param::set_value(3532,98284
Item_param::set_out_param_info(3609,99841
Item_param::get_out_param_info(3627,100309
void Item_param::make_field(3641,100619
Item_copy *Item_copy::create Item_copy::create3669,101503
double Item_copy_string::val_real(3693,102159
longlong Item_copy_string::val_int(3702,102411
int Item_copy_string::save_in_field(3711,102671
void Item_copy_string::copy(3717,102801
String *Item_copy_string::val_str(Item_copy_string::val_str3726,102981
my_decimal *Item_copy_string::val_decimal(Item_copy_string::val_decimal3735,103151
void Item_copy_int::copy(3749,103593
int Item_copy_int::save_in_field(3758,103828
String *Item_copy_int::val_str(Item_copy_int::val_str3765,104018
my_decimal *Item_copy_int::val_decimal(Item_copy_int::val_decimal3775,104169
String *Item_copy_uint::val_str(Item_copy_uint::val_str3789,104568
String *Item_copy_float::val_str(Item_copy_float::val_str3803,104907
my_decimal *Item_copy_float::val_decimal(Item_copy_float::val_decimal3816,105109
int Item_copy_float::save_in_field(3829,105359
int Item_copy_decimal::save_in_field(3842,105728
String *Item_copy_decimal::val_str(Item_copy_decimal::val_str3851,105931
double Item_copy_decimal::val_real(3861,106160
longlong Item_copy_decimal::val_int(3874,106356
void Item_copy_decimal::copy(3887,106569
bool Item::fix_fields(3901,106857
double Item_ref_null_helper::val_real(3910,107048
longlong Item_ref_null_helper::val_int(3919,107223
my_decimal *Item_ref_null_helper::val_decimal(Item_ref_null_helper::val_decimal3928,107405
bool Item_ref_null_helper::val_bool(3937,107639
String* Item_ref_null_helper::val_str(3946,107815
bool Item_ref_null_helper::get_date(3955,108001
static void mark_as_dependent(3973,108586
void mark_select_range_as_dependent(4017,110390
static Item** find_field_in_group_list(4076,112423
resolve_ref_in_select_and_group(4204,116604
Item_field::fix_outer_field(4317,120310
bool Item_field::fix_fields(4620,131535
Item *Item_field::safe_charset_converter(Item_field::safe_charset_converter4845,139413
void Item_field::cleanup(4852,139546
Item_equal *Item_field::find_item_equal(Item_field::find_item_equal4885,140532
bool Item_field::subst_argument_checker(4936,141808
static void convert_zerofill_number_to_string(4954,142346
Item *Item_field::equal_fields_propagator(Item_field::equal_fields_propagator4995,143604
bool Item_field::set_no_const_sub(5036,145012
Item *Item_field::replace_equal_field(Item_field::replace_equal_field5069,145966
void Item::init_make_field(5088,146385
void Item::make_field(5108,147127
enum_field_types Item::string_field_type(5114,147222
void Item_empty_string::make_field(5125,147476
enum_field_types Item::field_type(5131,147591
String *Item::check_well_formed_result(Item::check_well_formed_result5146,147955
bool Item::eq_by_collation(5204,149703
Field *Item::make_string_field(Item::make_string_field5237,150496
Field *Item::tmp_table_field_from_field_type(Item::tmp_table_field_from_field_type5270,151456
void Item_field::make_field(5378,154973
void Item_field::save_org_in_field(5395,155323
int Item_field::save_in_field(5410,155553
int Item_null::save_in_field(5450,156350
int Item_null::save_safe_in_field(5467,156642
int Item::save_in_field(5482,157054
int Item_string::save_in_field(5542,158780
int Item_uint::save_in_field(5550,158949
static int save_int_value_in_field 5556,159141
int Item_int::save_in_field(5566,159405
int Item_decimal::save_in_field(5572,159554
bool Item_int::eq(5579,159698
Item *Item_int_with_ref::clone_item(Item_int_with_ref::clone_item5595,160131
Item_num *Item_uint::neg(Item_uint::neg5608,160476
static uint nr_of_decimals(5615,160581
Item_float::Item_float(5669,162424
int Item_float::save_in_field(5688,162932
void Item_float::print(5698,163134
bool Item_float::eq(5718,163528
inline uint char_val(5733,163852
Item_hex_string::Item_hex_string(5740,163985
Item_hex_string::Item_hex_string(5745,164051
void Item_hex_string::hex_string_init(5750,164159
longlong Item_hex_string::val_int(5774,164781
my_decimal *Item_hex_string::val_decimal(Item_hex_string::val_decimal5788,165168
int Item_hex_string::save_in_field(5798,165477
void Item_hex_string::print(5831,166325
bool Item_hex_string::eq(5844,166689
Item *Item_hex_string::safe_charset_converter(Item_hex_string::safe_charset_converter5856,166985
Item_bin_string::Item_bin_string(5875,167384
bool Item_null::send(5917,168171
bool Item::send(5926,168339
bool Item::cache_const_expr_analyzer(6045,170777
Item* Item::cache_const_expr_transformer(6082,171752
bool Item_field::send(6098,172032
void Item_field::update_null_value(6104,172136
Item *Item_field::update_value_transformer(Item_field::update_value_transformer6142,173156
void Item_field::print(6165,173792
Item_ref::Item_ref(6186,174218
Item_ref::Item_ref(6202,174717
bool Item_ref::fix_fields(6280,177299
void Item_ref::set_properties(6513,186496
void Item_ref::cleanup(6535,187119
void Item_ref::print(6544,187249
bool Item_ref::send(6563,187712
double Item_ref::val_result(6571,187859
bool Item_ref::is_null_result(6583,188046
longlong Item_ref::val_int_result(6592,188174
String *Item_ref::str_result(Item_ref::str_result6604,188363
my_decimal *Item_ref::val_decimal_result(Item_ref::val_decimal_result6617,188619
bool Item_ref::val_bool_result(6629,188874
double Item_ref::val_real(6658,189493
longlong Item_ref::val_int(6667,189631
bool Item_ref::val_bool(6676,189776
String *Item_ref::val_str(Item_ref::val_str6685,189917
bool Item_ref::is_null(6694,190062
bool Item_ref::get_date(6703,190199
my_decimal *Item_ref::val_decimal(Item_ref::val_decimal6709,190327
int Item_ref::save_in_field(6716,190503
void Item_ref::save_org_in_field(6726,190708
void Item_ref::make_field(6732,190797
Item *Item_ref::get_tmp_table_item(Item_ref::get_tmp_table_item6749,191180
void Item_ref_null_helper::print(6764,191444
double Item_direct_ref::val_real(6775,191674
longlong Item_direct_ref::val_int(6783,191795
String *Item_direct_ref::val_str(Item_direct_ref::val_str6791,191918
my_decimal *Item_direct_ref::val_decimal(Item_direct_ref::val_decimal6799,192045
bool Item_direct_ref::val_bool(6807,192221
bool Item_direct_ref::is_null(6815,192339
bool Item_direct_ref::get_date(6821,192405
bool Item_direct_view_ref::fix_fields(6841,192811
bool Item_outer_ref::fix_fields(6882,193978
bool Item_direct_view_ref::eq(6914,194886
bool Item_default_value::eq(6928,195223
bool Item_default_value::fix_fields(6935,195406
void Item_default_value::print(6979,196452
int Item_default_value::save_in_field(6992,196702
Item *Item_default_value::transform(Item_default_value::transform7038,198115
bool Item_insert_value::eq(7065,198873
bool Item_insert_value::fix_fields(7072,199053
void Item_insert_value::print(7123,200575
void Item_trigger_field::setup_field(7151,201644
bool Item_trigger_field::eq(7175,202565
void Item_trigger_field::set_required_privilege(7184,202880
bool Item_trigger_field::set_value(7194,203145
bool Item_trigger_field::fix_fields(7221,203710
void Item_trigger_field::print(7265,204912
void Item_trigger_field::cleanup(7273,205097
Item_result item_cmp_type(7284,205346
void resolve_const_item(7299,205763
int stored_field_cmp_to_item(7411,209575
Item_cache* Item_cache::get_cache(7482,211956
Item_cache* Item_cache::get_cache(7497,212212
void Item_cache::store(7522,212969
void Item_cache::print(7530,213084
bool  Item_cache_int::cache_value(7540,213310
void Item_cache_int::store(7552,213535
String *Item_cache_int::val_str(Item_cache_int::val_str7562,213754
my_decimal *Item_cache_int::val_decimal(Item_cache_int::val_decimal7572,213940
double Item_cache_int::val_real(7581,214168
longlong Item_cache_int::val_int(7589,214295
bool  Item_cache_datetime::cache_value_int(7597,214412
bool  Item_cache_datetime::cache_value(7640,215273
void Item_cache_datetime::store(7688,216441
void Item_cache_datetime::store(7698,216669
String *Item_cache_datetime::val_str(Item_cache_datetime::val_str7704,216772
my_decimal *Item_cache_datetime::val_decimal(Item_cache_datetime::val_decimal7764,218438
double Item_cache_datetime::val_real(7773,218675
longlong Item_cache_datetime::val_int(7781,218850
bool Item_cache_real::cache_value(7789,219015
double Item_cache_real::val_real(7800,219195
longlong Item_cache_real::val_int(7808,219314
String* Item_cache_real::val_str(7817,219450
my_decimal *Item_cache_real::val_decimal(Item_cache_real::val_decimal7827,219633
bool Item_cache_decimal::cache_value(7837,219851
double Item_cache_decimal::val_real(7848,220142
longlong Item_cache_decimal::val_int(7858,220333
String* Item_cache_decimal::val_str(7868,220537
my_decimal *Item_cache_decimal::val_decimal(Item_cache_decimal::val_decimal7879,220841
bool Item_cache_str::cache_value(7888,220992
double Item_cache_str::val_real(7913,221661
longlong Item_cache_str::val_int(7927,221958
String* Item_cache_str::val_str(7941,222219
my_decimal *Item_cache_str::val_decimal(Item_cache_str::val_decimal7950,222347
int Item_cache_str::save_in_field(7963,222606
bool Item_cache_row::allocate(7973,222976
bool Item_cache_row::setup(7982,223156
void Item_cache_row::store(7999,223482
bool Item_cache_row::cache_value(8012,223685
void Item_cache_row::illegal_method_call(8028,223957
bool Item_cache_row::check_cols(8038,224232
bool Item_cache_row::null_inside(8049,224380
void Item_cache_row::bring_value(8069,224673
Item_type_holder::Item_type_holder(8080,224872
Item_result Item_type_holder::result_type(8105,225572
enum_field_types Item_type_holder::get_real_type(8118,225786
bool Item_type_holder::join_types(8192,227799
uint32 Item_type_holder::display_length(8308,231718
Field *Item_type_holder::make_field_by_type(Item_type_holder::make_field_by_type8368,233046
void Item_type_holder::get_full_info(8410,234296
double Item_type_holder::val_real(8438,235302
longlong Item_type_holder::val_int(8445,235402
my_decimal *Item_type_holder::val_decimal(Item_type_holder::val_decimal8451,235500
String *Item_type_holder::val_str(Item_type_holder::val_str8457,235617
void Item_result_field::cleanup(8463,235721
void dummy_error_processor(8478,235964
void view_error_processor(8489,236173

sql/item_buff.cc,411
Cached_item *new_Cached_item(new_Cached_item37,1173
Cached_item::~Cached_item(58,1804
Cached_item_str::Cached_item_str(67,1953
bool Cached_item_str::cmp(73,2127
Cached_item_str::~Cached_item_str(95,2644
bool Cached_item_real::cmp(100,2709
bool Cached_item_int::cmp(112,2920
bool Cached_item_field::cmp(125,3131
Cached_item_decimal::Cached_item_decimal(139,3396
bool Cached_item_decimal::cmp(146,3496

sql/item_cmpfunc.cc,11486
static Item_result item_store_type(39,1316
static void agg_result_type(55,1790
static int cmp_row_type(101,3045
static int agg_cmp_type(140,4167
enum_field_types agg_field_type(179,5436
static uint collect_cmp_types(208,6352
static void my_coll_agg_error(235,7222
Item_bool_func2* Eq_creator::create(245,7514
Item_bool_func2* Ne_creator::create(251,7613
Item_bool_func2* Gt_creator::create(257,7712
Item_bool_func2* Lt_creator::create(263,7811
Item_bool_func2* Ge_creator::create(269,7910
Item_bool_func2* Le_creator::create(275,8009
longlong Item_func_not::val_int(286,8217
void Item_func_not::print(303,8736
longlong Item_func_not_all::val_int(315,8926
bool Item_func_not_all::empty_underlying_subquery(332,9277
void Item_func_not_all::print(338,9453
longlong Item_func_nop_all::val_int(356,9868
static bool convert_constant_item(400,11238
void Item_bool_func2::fix_length_and_dec(471,13776
int Arg_comparator::set_compare_func(552,16273
bool get_mysql_time_from_str(679,20169
static ulonglong get_date_from_str(733,21957
Arg_comparator::can_compare_as_dates(779,23843
get_time_value(868,26716
int Arg_comparator::set_cmp_func(906,27779
bool Arg_comparator::try_year_cmp_func(992,30272
Item** Arg_comparator::cache_converted_constant(1045,31614
void Arg_comparator::set_datetime_cmp_func(1062,32161
get_datetime_value(1111,33895
get_year_value(1202,36892
int Arg_comparator::compare_datetime(1267,38747
int Arg_comparator::compare_string(1301,39579
int Arg_comparator::compare_binary_string(1330,40054
int Arg_comparator::compare_e_string(1356,40617
int Arg_comparator::compare_e_binary_string(1367,40867
int Arg_comparator::compare_real(1378,41101
int Arg_comparator::compare_decimal(1404,41671
int Arg_comparator::compare_e_real(1424,42082
int Arg_comparator::compare_e_decimal(1433,42318
int Arg_comparator::compare_real_fixed(1444,42644
int Arg_comparator::compare_e_real_fixed(1473,43270
int Arg_comparator::compare_int_signed(1483,43546
int Arg_comparator::compare_int_unsigned(1508,43971
int Arg_comparator::compare_int_signed_unsigned(1533,44404
int Arg_comparator::compare_int_unsigned_signed(1560,44909
int Arg_comparator::compare_e_int(1585,45391
int Arg_comparator::compare_e_int_diff_signedness(1597,45703
int Arg_comparator::compare_row(1606,45971
int Arg_comparator::compare_e_row(1659,47322
void Item_func_truth::fix_length_and_dec(1673,47533
void Item_func_truth::print(1682,47648
bool Item_func_truth::val_bool(1697,48006
longlong Item_func_truth::val_int(1720,48427
bool Item_in_optimizer::fix_left(1726,48500
bool Item_in_optimizer::fix_fields(1760,49422
longlong Item_in_optimizer::val_int(1857,52852
void Item_in_optimizer::keep_top_level_cache(1945,55561
void Item_in_optimizer::cleanup(1952,55654
bool Item_in_optimizer::is_null(1962,55820
longlong Item_func_eq::val_int(1969,55894
void Item_func_equal::fix_length_and_dec(1979,56064
longlong Item_func_equal::val_int(1985,56180
longlong Item_func_ne::val_int(1991,56272
longlong Item_func_ge::val_int(1999,56410
longlong Item_func_gt::val_int(2007,56533
longlong Item_func_le::val_int(2014,56654
longlong Item_func_lt::val_int(2022,56792
longlong Item_func_strcmp::val_int(2030,56929
bool Item_func_opt_neg::eq(2046,57278
void Item_func_interval::fix_length_and_dec(2066,57811
longlong Item_func_interval::val_int(2144,59823
bool Item_func_between::fix_fields(2251,62863
void Item_func_between::fix_length_and_dec(2271,63395
longlong Item_func_between::val_int(2344,65391
void Item_func_between::print(2454,68661
Item_func_ifnull::fix_length_and_dec(2468,69030
uint Item_func_ifnull::decimal_precision(2509,70110
enum_field_types Item_func_ifnull::field_type(2519,70410
Field *Item_func_ifnull::tmp_table_field(Item_func_ifnull::tmp_table_field2524,70498
Item_func_ifnull::real_op(2530,70617
Item_func_ifnull::int_op(2546,70897
my_decimal *Item_func_ifnull::decimal_op(Item_func_ifnull::decimal_op2562,71164
Item_func_ifnull::str_op(2579,71522
Item_func_if::fix_fields(2624,72739
void Item_func_if::cache_type_info(2639,73026
Item_func_if::fix_length_and_dec(2652,73380
uint Item_func_if::decimal_precision(2705,74839
Item_func_if::val_real(2715,75090
Item_func_if::val_int(2725,75289
Item_func_if::val_str(2735,75487
Item_func_if::val_decimal(2748,75753
Item_func_nullif::fix_length_and_dec(2759,75999
Item_func_nullif::val_real(2787,76683
Item_func_nullif::val_int(2802,76913
Item_func_nullif::val_str(2817,77140
Item_func_nullif::val_decimal(2833,77379
Item_func_nullif::is_null(2849,77649
Item *Item_func_case::find_item(Item_func_case::find_item2876,78634
String *Item_func_case::val_str(Item_func_case::val_str2916,79822
longlong Item_func_case::val_int(2934,80081
double Item_func_case::val_real(2952,80409
my_decimal *Item_func_case::val_decimal(Item_func_case::val_decimal2971,80737
bool Item_func_case::fix_fields(2991,81124
void Item_func_case::agg_str_lengths(3009,81672
void Item_func_case::agg_num_lengths(3017,81889
static void change_item_tree_if_needed(3038,82595
void Item_func_case::fix_length_and_dec(3049,82842
uint Item_func_case::decimal_precision(3196,87472
void Item_func_case::print(3213,87886
void Item_func_case::cleanup(3239,88529
String *Item_func_coalesce::str_op(Item_func_coalesce::str_op3257,88813
longlong Item_func_coalesce::int_op(3271,89056
double Item_func_coalesce::real_op(3285,89302
my_decimal *Item_func_coalesce::decimal_op(Item_func_coalesce::decimal_op3300,89548
void Item_func_coalesce::fix_length_and_dec(3315,89848
static inline int cmp_longs 3364,91201
static inline int cmp_ulongs 3388,91884
int cmp_longlong(3417,92899
static int cmp_double(3442,93742
static int cmp_row(3447,93847
static int cmp_decimal(3453,93945
int in_vector::find(3465,94262
in_string::in_string(3487,94726
in_string::~in_string(3492,94902
void in_string::set(3502,95090
uchar *in_string::get_value(in_string::get_value3525,95576
in_row::in_row(3530,95660
in_row::~in_row(3543,95983
uchar *in_row::get_value(in_row::get_value3549,96054
void in_row::set(3557,96182
in_longlong::in_longlong(3565,96410
void in_longlong::set(3569,96530
uchar *in_longlong::get_value(in_longlong::get_value3577,96720
void in_datetime::set(3586,96899
uchar *in_datetime::get_value(in_datetime::get_value3596,97155
in_double::in_double(3607,97439
void in_double::set(3611,97544
uchar *in_double::get_value(in_double::get_value3616,97633
in_decimal::in_decimal(3625,97795
void in_decimal::set(3630,97909
uchar *in_decimal::get_value(in_decimal::get_value3643,98325
cmp_item* cmp_item::get_comparator(3652,98483
cmp_item* cmp_item_sort_string::make_same(3674,98962
cmp_item* cmp_item_int::make_same(3679,99069
cmp_item* cmp_item_real::make_same(3684,99139
cmp_item* cmp_item_row::make_same(3689,99211
cmp_item_row::~cmp_item_row(3695,99282
void cmp_item_row::alloc_comparators(3711,99542
void cmp_item_row::store_value(3718,99681
void cmp_item_row::store_value_by_template(3742,100324
int cmp_item_row::cmp(3767,100979
int cmp_item_row::compare(3790,101388
void cmp_item_decimal::store_value(3803,101619
int cmp_item_decimal::cmp(3812,101824
int cmp_item_decimal::compare(3821,101998
cmp_item* cmp_item_decimal::make_same(3828,102149
void cmp_item_datetime::store_value(3834,102228
int cmp_item_datetime::cmp(3842,102430
int cmp_item_datetime::compare(3851,102597
cmp_item *cmp_item_datetime::make_same(cmp_item_datetime::make_same3858,102775
bool Item_func_in::nulls_in_row(3864,102865
Item_func_in::fix_fields(3905,104086
static int srtcmp_in(3925,104631
void Item_func_in::fix_length_and_dec(3933,104874
void Item_func_in::print(4169,111770
longlong Item_func_in::val_int(4206,112949
longlong Item_func_bit_or::val_int(4249,114038
longlong Item_func_bit_and::val_int(4269,114443
Item_cond::Item_cond(4288,114898
void Item_cond::copy_andor_arguments(4299,115136
Item_cond::fix_fields(4308,115330
bool Item_cond::walk(4379,117699
Item *Item_cond::transform(Item_cond::transform4408,118655
Item *Item_cond::compile(Item_cond::compile4457,120353
void Item_cond::traverse_cond(4479,120992
void Item_cond::split_sum_func(4520,122029
Item_cond::used_tables(4531,122307
void Item_cond::update_used_tables(4537,122404
void Item_cond::print(4553,122694
void Item_cond::neg_arguments(4571,123045
longlong Item_cond_and::val_int(4608,123865
longlong Item_cond_or::val_int(4626,124188
Item *and_expressions(and_expressions4665,125035
longlong Item_func_isnull::val_int(4687,125617
longlong Item_is_not_null_test::val_int(4699,125904
void Item_is_not_null_test::update_used_tables(4722,126402
longlong Item_func_isnotnull::val_int(4741,126823
void Item_func_isnotnull::print(4748,126933
longlong Item_func_like::val_int(4756,127116
Item_func::optimize_type Item_func_like::select_optimize(4785,127762
bool Item_func_like::fix_fields(4805,128177
void Item_func_like::cleanup(4916,131860
int Item_func_regex::regcomp(4935,132278
Item_func_regex::fix_fields(4980,133247
longlong Item_func_regex::val_int(5033,134899
void Item_func_regex::cleanup(5060,135582
#define likeconv(5075,135837
#define likeconv(5077,135891
void Item_func_like::turboBM_compute_suffixes(5085,136017
void Item_func_like::turboBM_compute_good_suffix_shifts(5141,137022
void Item_func_like::turboBM_compute_bad_character_shifts(5185,137783
bool Item_func_like::turboBM_matches(5216,138347
longlong Item_cond_xor::val_int(5310,140404
Item *Item_func_not::neg_transformer(Item_func_not::neg_transformer5355,141432
Item *Item_bool_rowready_func2::neg_transformer(Item_bool_rowready_func2::neg_transformer5361,141523
Item *Item_func_isnull::neg_transformer(Item_func_isnull::neg_transformer5371,141671
Item *Item_func_isnotnull::neg_transformer(Item_func_isnotnull::neg_transformer5381,141829
Item *Item_cond_and::neg_transformer(Item_cond_and::neg_transformer5388,141948
Item *Item_cond_or::neg_transformer(Item_cond_or::neg_transformer5397,142140
Item *Item_func_nop_all::neg_transformer(Item_func_nop_all::neg_transformer5406,142332
Item *Item_func_not_all::neg_transformer(Item_func_not_all::neg_transformer5417,142715
Item *Item_func_eq::negated_item(Item_func_eq::negated_item5428,143097
Item *Item_func_ne::negated_item(Item_func_ne::negated_item5434,143208
Item *Item_func_lt::negated_item(Item_func_lt::negated_item5440,143319
Item *Item_func_ge::negated_item(Item_func_ge::negated_item5446,143430
Item *Item_func_gt::negated_item(Item_func_gt::negated_item5452,143541
Item *Item_func_le::negated_item(Item_func_le::negated_item5458,143652
Item *Item_bool_rowready_func2::negated_item(Item_bool_rowready_func2::negated_item5466,143813
Item_equal::Item_equal(5472,143895
Item_equal::Item_equal(5481,144120
Item_equal::Item_equal(5491,144324
void Item_equal::compare_const(5507,144712
void Item_equal::add(5526,145079
void Item_equal::add(5541,145298
void Item_equal::add(5553,145441
uint Item_equal::members(5558,145505
bool Item_equal::contains(5577,145878
void Item_equal::merge(5601,146479
void Item_equal::sort(5635,147546
void Item_equal::update_const(5677,148473
bool Item_equal::fix_fields(5705,149411
void Item_equal::update_used_tables(5725,149881
longlong Item_equal::val_int(5741,150312
void Item_equal::fix_length_and_dec(5763,150855
bool Item_equal::walk(5770,151050
Item *Item_equal::transform(Item_equal::transform5782,151349
void Item_equal::print(5806,152058

sql/item_create.cc,51270
class Create_native_func 49,1637
  Create_native_func(Create_native_func::Create_native_func66,2168
  virtual ~Create_native_func(Create_native_func::~Create_native_func68,2215
class Create_func_arg0 76,2322
  Create_func_arg0(Create_func_arg0::Create_func_arg090,2663
  virtual ~Create_func_arg0(Create_func_arg0::~Create_func_arg092,2708
class Create_func_arg1 100,2811
  Create_func_arg1(Create_func_arg1::Create_func_arg1115,3215
  virtual ~Create_func_arg1(Create_func_arg1::~Create_func_arg1117,3260
class Create_func_arg2 125,3364
  Create_func_arg2(Create_func_arg2::Create_func_arg2141,3833
  virtual ~Create_func_arg2(Create_func_arg2::~Create_func_arg2143,3878
class Create_func_arg3 151,3984
  Create_func_arg3(Create_func_arg3::Create_func_arg3168,4518
  virtual ~Create_func_arg3(Create_func_arg3::~Create_func_arg3170,4563
class Create_sp_func 178,4650
  Create_sp_func(Create_sp_func::Create_sp_func188,4911
  virtual ~Create_sp_func(Create_sp_func::~Create_sp_func190,4954
class Create_func_no_geom 201,5159
  Create_func_no_geom(Create_func_no_geom::Create_func_no_geom211,5392
  virtual ~Create_func_no_geom(Create_func_no_geom::~Create_func_no_geom213,5440
class Create_func_abs 224,5677
  Create_func_abs(Create_func_abs::Create_func_abs232,5832
  virtual ~Create_func_abs(Create_func_abs::~Create_func_abs233,5855
class Create_func_acos 237,5892
  Create_func_acos(Create_func_acos::Create_func_acos245,6049
  virtual ~Create_func_acos(Create_func_acos::~Create_func_acos246,6073
class Create_func_addtime 250,6111
  Create_func_addtime(Create_func_addtime::Create_func_addtime258,6286
  virtual ~Create_func_addtime(Create_func_addtime::~Create_func_addtime259,6313
class Create_func_aes_encrypt 263,6354
  Create_func_aes_encrypt(Create_func_aes_encrypt::Create_func_aes_encrypt271,6537
  virtual ~Create_func_aes_encrypt(Create_func_aes_encrypt::~Create_func_aes_encrypt272,6568
class Create_func_aes_decrypt 276,6613
  Create_func_aes_decrypt(Create_func_aes_decrypt::Create_func_aes_decrypt284,6796
  virtual ~Create_func_aes_decrypt(Create_func_aes_decrypt::~Create_func_aes_decrypt285,6827
class Create_func_area 290,6892
  Create_func_area(Create_func_area::Create_func_area298,7049
  virtual ~Create_func_area(Create_func_area::~Create_func_area299,7073
class Create_func_as_wkb 305,7138
  Create_func_as_wkb(Create_func_as_wkb::Create_func_as_wkb313,7299
  virtual ~Create_func_as_wkb(Create_func_as_wkb::~Create_func_as_wkb314,7325
class Create_func_as_wkt 320,7392
  Create_func_as_wkt(Create_func_as_wkt::Create_func_as_wkt328,7553
  virtual ~Create_func_as_wkt(Create_func_as_wkt::~Create_func_as_wkt329,7579
class Create_func_asin 334,7626
  Create_func_asin(Create_func_asin::Create_func_asin342,7783
  virtual ~Create_func_asin(Create_func_asin::~Create_func_asin343,7807
class Create_func_atan 347,7845
  Create_func_atan(Create_func_atan::Create_func_atan355,8039
  virtual ~Create_func_atan(Create_func_atan::~Create_func_atan356,8063
class Create_func_benchmark 360,8101
  Create_func_benchmark(Create_func_benchmark::Create_func_benchmark368,8280
  virtual ~Create_func_benchmark(Create_func_benchmark::~Create_func_benchmark369,8309
class Create_func_bin 373,8352
  Create_func_bin(Create_func_bin::Create_func_bin381,8507
  virtual ~Create_func_bin(Create_func_bin::~Create_func_bin382,8530
class Create_func_bit_count 386,8567
  Create_func_bit_count(Create_func_bit_count::Create_func_bit_count394,8734
  virtual ~Create_func_bit_count(Create_func_bit_count::~Create_func_bit_count395,8763
class Create_func_bit_length 399,8806
  Create_func_bit_length(Create_func_bit_length::Create_func_bit_length407,8975
  virtual ~Create_func_bit_length(Create_func_bit_length::~Create_func_bit_length408,9005
class Create_func_ceiling 412,9049
  Create_func_ceiling(Create_func_ceiling::Create_func_ceiling420,9212
  virtual ~Create_func_ceiling(Create_func_ceiling::~Create_func_ceiling421,9239
class Create_func_centroid 426,9300
  Create_func_centroid(Create_func_centroid::Create_func_centroid434,9465
  virtual ~Create_func_centroid(Create_func_centroid::~Create_func_centroid435,9493
class Create_func_char_length 440,9542
  Create_func_char_length(Create_func_char_length::Create_func_char_length448,9713
  virtual ~Create_func_char_length(Create_func_char_length::~Create_func_char_length449,9744
class Create_func_coercibility 453,9789
  Create_func_coercibility(Create_func_coercibility::Create_func_coercibility461,9962
  virtual ~Create_func_coercibility(Create_func_coercibility::~Create_func_coercibility462,9994
class Create_func_compress 466,10040
  Create_func_compress(Create_func_compress::Create_func_compress474,10205
  virtual ~Create_func_compress(Create_func_compress::~Create_func_compress475,10233
class Create_func_concat 479,10275
  Create_func_concat(Create_func_concat::Create_func_concat487,10473
  virtual ~Create_func_concat(Create_func_concat::~Create_func_concat488,10499
class Create_func_concat_ws 492,10539
  Create_func_concat_ws(Create_func_concat_ws::Create_func_concat_ws500,10743
  virtual ~Create_func_concat_ws(Create_func_concat_ws::~Create_func_concat_ws501,10772
class Create_func_connection_id 505,10815
  Create_func_connection_id(Create_func_connection_id::Create_func_connection_id513,10978
  virtual ~Create_func_connection_id(Create_func_connection_id::~Create_func_connection_id514,11011
class Create_func_contains 519,11078
  Create_func_contains(Create_func_contains::Create_func_contains527,11255
  virtual ~Create_func_contains(Create_func_contains::~Create_func_contains528,11283
class Create_func_conv 533,11332
  Create_func_conv(Create_func_conv::Create_func_conv541,11513
  virtual ~Create_func_conv(Create_func_conv::~Create_func_conv542,11537
class Create_func_convert_tz 546,11575
  Create_func_convert_tz(Create_func_convert_tz::Create_func_convert_tz554,11768
  virtual ~Create_func_convert_tz(Create_func_convert_tz::~Create_func_convert_tz555,11798
class Create_func_cos 559,11842
  Create_func_cos(Create_func_cos::Create_func_cos567,11997
  virtual ~Create_func_cos(Create_func_cos::~Create_func_cos568,12020
class Create_func_cot 572,12057
  Create_func_cot(Create_func_cot::Create_func_cot580,12212
  virtual ~Create_func_cot(Create_func_cot::~Create_func_cot581,12235
class Create_func_crc32 585,12272
  Create_func_crc32(Create_func_crc32::Create_func_crc32593,12431
  virtual ~Create_func_crc32(Create_func_crc32::~Create_func_crc32594,12456
class Create_func_crosses 599,12515
  Create_func_crosses(Create_func_crosses::Create_func_crosses607,12690
  virtual ~Create_func_crosses(Create_func_crosses::~Create_func_crosses608,12717
class Create_func_date_format 613,12765
  Create_func_date_format(Create_func_date_format::Create_func_date_format621,12948
  virtual ~Create_func_date_format(Create_func_date_format::~Create_func_date_format622,12979
class Create_func_datediff 626,13024
  Create_func_datediff(Create_func_datediff::Create_func_datediff634,13201
  virtual ~Create_func_datediff(Create_func_datediff::~Create_func_datediff635,13229
class Create_func_dayname 639,13271
  Create_func_dayname(Create_func_dayname::Create_func_dayname647,13434
  virtual ~Create_func_dayname(Create_func_dayname::~Create_func_dayname648,13461
class Create_func_dayofmonth 652,13502
  Create_func_dayofmonth(Create_func_dayofmonth::Create_func_dayofmonth660,13671
  virtual ~Create_func_dayofmonth(Create_func_dayofmonth::~Create_func_dayofmonth661,13701
class Create_func_dayofweek 665,13745
  Create_func_dayofweek(Create_func_dayofweek::Create_func_dayofweek673,13912
  virtual ~Create_func_dayofweek(Create_func_dayofweek::~Create_func_dayofweek674,13941
class Create_func_dayofyear 678,13984
  Create_func_dayofyear(Create_func_dayofyear::Create_func_dayofyear686,14151
  virtual ~Create_func_dayofyear(Create_func_dayofyear::~Create_func_dayofyear687,14180
class Create_func_decode 691,14223
  Create_func_decode(Create_func_decode::Create_func_decode699,14396
  virtual ~Create_func_decode(Create_func_decode::~Create_func_decode700,14422
class Create_func_degrees 704,14462
  Create_func_degrees(Create_func_degrees::Create_func_degrees712,14625
  virtual ~Create_func_degrees(Create_func_degrees::~Create_func_degrees713,14652
class Create_func_des_decrypt 717,14693
  Create_func_des_decrypt(Create_func_des_decrypt::Create_func_des_decrypt725,14901
  virtual ~Create_func_des_decrypt(Create_func_des_decrypt::~Create_func_des_decrypt726,14932
class Create_func_des_encrypt 730,14977
  Create_func_des_encrypt(Create_func_des_encrypt::Create_func_des_encrypt738,15185
  virtual ~Create_func_des_encrypt(Create_func_des_encrypt::~Create_func_des_encrypt739,15216
class Create_func_dimension 744,15281
  Create_func_dimension(Create_func_dimension::Create_func_dimension752,15448
  virtual ~Create_func_dimension(Create_func_dimension::~Create_func_dimension753,15477
class Create_func_disjoint 759,15547
  Create_func_disjoint(Create_func_disjoint::Create_func_disjoint767,15724
  virtual ~Create_func_disjoint(Create_func_disjoint::~Create_func_disjoint768,15752
class Create_func_elt 773,15801
  Create_func_elt(Create_func_elt::Create_func_elt781,15993
  virtual ~Create_func_elt(Create_func_elt::~Create_func_elt782,16016
class Create_func_encode 786,16053
  Create_func_encode(Create_func_encode::Create_func_encode794,16226
  virtual ~Create_func_encode(Create_func_encode::~Create_func_encode795,16252
class Create_func_encrypt 799,16292
  Create_func_encrypt(Create_func_encrypt::Create_func_encrypt807,16492
  virtual ~Create_func_encrypt(Create_func_encrypt::~Create_func_encrypt808,16519
class Create_func_endpoint 813,16580
  Create_func_endpoint(Create_func_endpoint::Create_func_endpoint821,16745
  virtual ~Create_func_endpoint(Create_func_endpoint::~Create_func_endpoint822,16773
class Create_func_envelope 828,16842
  Create_func_envelope(Create_func_envelope::Create_func_envelope836,17007
  virtual ~Create_func_envelope(Create_func_envelope::~Create_func_envelope837,17035
class Create_func_equals 843,17104
  Create_func_equals(Create_func_equals::Create_func_equals851,17277
  virtual ~Create_func_equals(Create_func_equals::~Create_func_equals852,17303
class Create_func_exp 857,17350
  Create_func_exp(Create_func_exp::Create_func_exp865,17505
  virtual ~Create_func_exp(Create_func_exp::~Create_func_exp866,17528
class Create_func_export_set 870,17565
  Create_func_export_set(Create_func_export_set::Create_func_export_set878,17771
  virtual ~Create_func_export_set(Create_func_export_set::~Create_func_export_set879,17801
class Create_func_exteriorring 884,17865
  Create_func_exteriorring(Create_func_exteriorring::Create_func_exteriorring892,18038
  virtual ~Create_func_exteriorring(Create_func_exteriorring::~Create_func_exteriorring893,18070
class Create_func_field 898,18123
  Create_func_field(Create_func_field::Create_func_field906,18319
  virtual ~Create_func_field(Create_func_field::~Create_func_field907,18344
class Create_func_find_in_set 911,18383
  Create_func_find_in_set(Create_func_find_in_set::Create_func_find_in_set919,18566
  virtual ~Create_func_find_in_set(Create_func_find_in_set::~Create_func_find_in_set920,18597
class Create_func_floor 924,18642
  Create_func_floor(Create_func_floor::Create_func_floor932,18801
  virtual ~Create_func_floor(Create_func_floor::~Create_func_floor933,18826
class Create_func_format 937,18865
  Create_func_format(Create_func_format::Create_func_format945,19063
  virtual ~Create_func_format(Create_func_format::~Create_func_format946,19089
class Create_func_found_rows 950,19129
  Create_func_found_rows(Create_func_found_rows::Create_func_found_rows958,19286
  virtual ~Create_func_found_rows(Create_func_found_rows::~Create_func_found_rows959,19316
class Create_func_from_days 963,19360
  Create_func_from_days(Create_func_from_days::Create_func_from_days971,19527
  virtual ~Create_func_from_days(Create_func_from_days::~Create_func_from_days972,19556
class Create_func_from_unixtime 976,19599
  Create_func_from_unixtime(Create_func_from_unixtime::Create_func_from_unixtime984,19811
  virtual ~Create_func_from_unixtime(Create_func_from_unixtime::~Create_func_from_unixtime985,19844
class Create_func_geometry_from_text 990,19911
  Create_func_geometry_from_text(Create_func_geometry_from_text::Create_func_geometry_from_text998,20133
  virtual ~Create_func_geometry_from_text(Create_func_geometry_from_text::~Create_func_geometry_from_text999,20171
class Create_func_geometry_from_wkb 1005,20250
  Create_func_geometry_from_wkb(Create_func_geometry_from_wkb::Create_func_geometry_from_wkb1013,20470
  virtual ~Create_func_geometry_from_wkb(Create_func_geometry_from_wkb::~Create_func_geometry_from_wkb1014,20507
class Create_func_geometry_type 1020,20585
  Create_func_geometry_type(Create_func_geometry_type::Create_func_geometry_type1028,20760
  virtual ~Create_func_geometry_type(Create_func_geometry_type::~Create_func_geometry_type1029,20793
class Create_func_geometryn 1035,20867
  Create_func_geometryn(Create_func_geometryn::Create_func_geometryn1043,21046
  virtual ~Create_func_geometryn(Create_func_geometryn::~Create_func_geometryn1044,21075
class Create_func_get_lock 1049,21125
  Create_func_get_lock(Create_func_get_lock::Create_func_get_lock1057,21302
  virtual ~Create_func_get_lock(Create_func_get_lock::~Create_func_get_lock1058,21330
class Create_func_glength 1063,21392
  Create_func_glength(Create_func_glength::Create_func_glength1071,21555
  virtual ~Create_func_glength(Create_func_glength::~Create_func_glength1072,21582
class Create_func_greatest 1077,21630
  Create_func_greatest(Create_func_greatest::Create_func_greatest1085,21832
  virtual ~Create_func_greatest(Create_func_greatest::~Create_func_greatest1086,21860
class Create_func_hex 1090,21902
  Create_func_hex(Create_func_hex::Create_func_hex1098,22057
  virtual ~Create_func_hex(Create_func_hex::~Create_func_hex1099,22080
class Create_func_ifnull 1103,22117
  Create_func_ifnull(Create_func_ifnull::Create_func_ifnull1111,22290
  virtual ~Create_func_ifnull(Create_func_ifnull::~Create_func_ifnull1112,22316
class Create_func_inet_ntoa 1116,22356
  Create_func_inet_ntoa(Create_func_inet_ntoa::Create_func_inet_ntoa1124,22523
  virtual ~Create_func_inet_ntoa(Create_func_inet_ntoa::~Create_func_inet_ntoa1125,22552
class Create_func_inet_aton 1129,22595
  Create_func_inet_aton(Create_func_inet_aton::Create_func_inet_aton1137,22762
  virtual ~Create_func_inet_aton(Create_func_inet_aton::~Create_func_inet_aton1138,22791
class Create_func_instr 1142,22834
  Create_func_instr(Create_func_instr::Create_func_instr1150,23005
  virtual ~Create_func_instr(Create_func_instr::~Create_func_instr1151,23030
class Create_func_interiorringn 1156,23089
  Create_func_interiorringn(Create_func_interiorringn::Create_func_interiorringn1164,23276
  virtual ~Create_func_interiorringn(Create_func_interiorringn::~Create_func_interiorringn1165,23309
class Create_func_intersects 1171,23383
  Create_func_intersects(Create_func_intersects::Create_func_intersects1179,23564
  virtual ~Create_func_intersects(Create_func_intersects::~Create_func_intersects1180,23594
class Create_func_is_free_lock 1185,23645
  Create_func_is_free_lock(Create_func_is_free_lock::Create_func_is_free_lock1193,23818
  virtual ~Create_func_is_free_lock(Create_func_is_free_lock::~Create_func_is_free_lock1194,23850
class Create_func_is_used_lock 1198,23896
  Create_func_is_used_lock(Create_func_is_used_lock::Create_func_is_used_lock1206,24069
  virtual ~Create_func_is_used_lock(Create_func_is_used_lock::~Create_func_is_used_lock1207,24101
class Create_func_isclosed 1212,24167
  Create_func_isclosed(Create_func_isclosed::Create_func_isclosed1220,24332
  virtual ~Create_func_isclosed(Create_func_isclosed::~Create_func_isclosed1221,24360
class Create_func_isempty 1227,24429
  Create_func_isempty(Create_func_isempty::Create_func_isempty1235,24592
  virtual ~Create_func_isempty(Create_func_isempty::~Create_func_isempty1236,24619
class Create_func_isnull 1241,24667
  Create_func_isnull(Create_func_isnull::Create_func_isnull1249,24828
  virtual ~Create_func_isnull(Create_func_isnull::~Create_func_isnull1250,24854
class Create_func_issimple 1255,24914
  Create_func_issimple(Create_func_issimple::Create_func_issimple1263,25079
  virtual ~Create_func_issimple(Create_func_issimple::~Create_func_issimple1264,25107
class Create_func_last_day 1269,25156
  Create_func_last_day(Create_func_last_day::Create_func_last_day1277,25321
  virtual ~Create_func_last_day(Create_func_last_day::~Create_func_last_day1278,25349
class Create_func_last_insert_id 1282,25391
  Create_func_last_insert_id(Create_func_last_insert_id::Create_func_last_insert_id1290,25605
  virtual ~Create_func_last_insert_id(Create_func_last_insert_id::~Create_func_last_insert_id1291,25639
class Create_func_lcase 1295,25687
  Create_func_lcase(Create_func_lcase::Create_func_lcase1303,25846
  virtual ~Create_func_lcase(Create_func_lcase::~Create_func_lcase1304,25871
class Create_func_least 1308,25910
  Create_func_least(Create_func_least::Create_func_least1316,26106
  virtual ~Create_func_least(Create_func_least::~Create_func_least1317,26131
class Create_func_length 1321,26170
  Create_func_length(Create_func_length::Create_func_length1329,26331
  virtual ~Create_func_length(Create_func_length::~Create_func_length1330,26357
class Create_func_like_range_min 1335,26414
  Create_func_like_range_min(Create_func_like_range_min::Create_func_like_range_min1343,26603
  virtual ~Create_func_like_range_min(Create_func_like_range_min::~Create_func_like_range_min1344,26637
class Create_func_like_range_max 1348,26685
  Create_func_like_range_max(Create_func_like_range_max::Create_func_like_range_max1356,26874
  virtual ~Create_func_like_range_max(Create_func_like_range_max::~Create_func_like_range_max1357,26908
class Create_func_ln 1362,26963
  Create_func_ln(Create_func_ln::Create_func_ln1370,27116
  virtual ~Create_func_ln(Create_func_ln::~Create_func_ln1371,27138
class Create_func_load_file 1375,27174
  Create_func_load_file(Create_func_load_file::Create_func_load_file1383,27341
  virtual ~Create_func_load_file(Create_func_load_file::~Create_func_load_file1384,27370
class Create_func_locate 1388,27413
  Create_func_locate(Create_func_locate::Create_func_locate1396,27611
  virtual ~Create_func_locate(Create_func_locate::~Create_func_locate1397,27637
class Create_func_log 1401,27677
  Create_func_log(Create_func_log::Create_func_log1409,27869
  virtual ~Create_func_log(Create_func_log::~Create_func_log1410,27892
class Create_func_log10 1414,27929
  Create_func_log10(Create_func_log10::Create_func_log101422,28088
  virtual ~Create_func_log10(Create_func_log10::~Create_func_log101423,28113
class Create_func_log2 1427,28152
  Create_func_log2(Create_func_log2::Create_func_log21435,28309
  virtual ~Create_func_log2(Create_func_log2::~Create_func_log21436,28333
class Create_func_lpad 1440,28371
  Create_func_lpad(Create_func_lpad::Create_func_lpad1448,28552
  virtual ~Create_func_lpad(Create_func_lpad::~Create_func_lpad1449,28576
class Create_func_ltrim 1453,28614
  Create_func_ltrim(Create_func_ltrim::Create_func_ltrim1461,28773
  virtual ~Create_func_ltrim(Create_func_ltrim::~Create_func_ltrim1462,28798
class Create_func_makedate 1466,28837
  Create_func_makedate(Create_func_makedate::Create_func_makedate1474,29014
  virtual ~Create_func_makedate(Create_func_makedate::~Create_func_makedate1475,29042
class Create_func_maketime 1479,29084
  Create_func_maketime(Create_func_maketime::Create_func_maketime1487,29273
  virtual ~Create_func_maketime(Create_func_maketime::~Create_func_maketime1488,29301
class Create_func_make_set 1492,29343
  Create_func_make_set(Create_func_make_set::Create_func_make_set1500,29545
  virtual ~Create_func_make_set(Create_func_make_set::~Create_func_make_set1501,29573
class Create_func_master_pos_wait 1505,29615
  Create_func_master_pos_wait(Create_func_master_pos_wait::Create_func_master_pos_wait1513,29831
  virtual ~Create_func_master_pos_wait(Create_func_master_pos_wait::~Create_func_master_pos_wait1514,29866
class Create_func_md5 1518,29915
  Create_func_md5(Create_func_md5::Create_func_md51526,30070
  virtual ~Create_func_md5(Create_func_md5::~Create_func_md51527,30093
class Create_func_monthname 1531,30130
  Create_func_monthname(Create_func_monthname::Create_func_monthname1539,30297
  virtual ~Create_func_monthname(Create_func_monthname::~Create_func_monthname1540,30326
class Create_func_name_const 1544,30369
  Create_func_name_const(Create_func_name_const::Create_func_name_const1552,30550
  virtual ~Create_func_name_const(Create_func_name_const::~Create_func_name_const1553,30580
class Create_func_nullif 1557,30624
  Create_func_nullif(Create_func_nullif::Create_func_nullif1565,30797
  virtual ~Create_func_nullif(Create_func_nullif::~Create_func_nullif1566,30823
class Create_func_numgeometries 1571,30883
  Create_func_numgeometries(Create_func_numgeometries::Create_func_numgeometries1579,31058
  virtual ~Create_func_numgeometries(Create_func_numgeometries::~Create_func_numgeometries1580,31091
class Create_func_numinteriorring 1586,31165
  Create_func_numinteriorring(Create_func_numinteriorring::Create_func_numinteriorring1594,31344
  virtual ~Create_func_numinteriorring(Create_func_numinteriorring::~Create_func_numinteriorring1595,31379
class Create_func_numpoints 1601,31455
  Create_func_numpoints(Create_func_numpoints::Create_func_numpoints1609,31622
  virtual ~Create_func_numpoints(Create_func_numpoints::~Create_func_numpoints1610,31651
class Create_func_oct 1615,31701
  Create_func_oct(Create_func_oct::Create_func_oct1623,31856
  virtual ~Create_func_oct(Create_func_oct::~Create_func_oct1624,31879
class Create_func_ord 1628,31916
  Create_func_ord(Create_func_ord::Create_func_ord1636,32071
  virtual ~Create_func_ord(Create_func_ord::~Create_func_ord1637,32094
class Create_func_overlaps 1642,32151
  Create_func_overlaps(Create_func_overlaps::Create_func_overlaps1650,32328
  virtual ~Create_func_overlaps(Create_func_overlaps::~Create_func_overlaps1651,32356
class Create_func_period_add 1656,32405
  Create_func_period_add(Create_func_period_add::Create_func_period_add1664,32586
  virtual ~Create_func_period_add(Create_func_period_add::~Create_func_period_add1665,32616
class Create_func_period_diff 1669,32660
  Create_func_period_diff(Create_func_period_diff::Create_func_period_diff1677,32843
  virtual ~Create_func_period_diff(Create_func_period_diff::~Create_func_period_diff1678,32874
class Create_func_pi 1682,32919
  Create_func_pi(Create_func_pi::Create_func_pi1690,33060
  virtual ~Create_func_pi(Create_func_pi::~Create_func_pi1691,33082
class Create_func_pointn 1696,33138
  Create_func_pointn(Create_func_pointn::Create_func_pointn1704,33311
  virtual ~Create_func_pointn(Create_func_pointn::~Create_func_pointn1705,33337
class Create_func_pow 1710,33384
  Create_func_pow(Create_func_pow::Create_func_pow1718,33551
  virtual ~Create_func_pow(Create_func_pow::~Create_func_pow1719,33574
class Create_func_quote 1723,33611
  Create_func_quote(Create_func_quote::Create_func_quote1731,33770
  virtual ~Create_func_quote(Create_func_quote::~Create_func_quote1732,33795
class Create_func_radians 1736,33834
  Create_func_radians(Create_func_radians::Create_func_radians1744,33997
  virtual ~Create_func_radians(Create_func_radians::~Create_func_radians1745,34024
class Create_func_rand 1749,34065
  Create_func_rand(Create_func_rand::Create_func_rand1757,34259
  virtual ~Create_func_rand(Create_func_rand::~Create_func_rand1758,34283
class Create_func_release_lock 1762,34321
  Create_func_release_lock(Create_func_release_lock::Create_func_release_lock1770,34494
  virtual ~Create_func_release_lock(Create_func_release_lock::~Create_func_release_lock1771,34526
class Create_func_reverse 1775,34572
  Create_func_reverse(Create_func_reverse::Create_func_reverse1783,34735
  virtual ~Create_func_reverse(Create_func_reverse::~Create_func_reverse1784,34762
class Create_func_round 1788,34803
  Create_func_round(Create_func_round::Create_func_round1796,34999
  virtual ~Create_func_round(Create_func_round::~Create_func_round1797,35024
class Create_func_row_count 1801,35063
  Create_func_row_count(Create_func_row_count::Create_func_row_count1809,35218
  virtual ~Create_func_row_count(Create_func_row_count::~Create_func_row_count1810,35247
class Create_func_rpad 1814,35290
  Create_func_rpad(Create_func_rpad::Create_func_rpad1822,35471
  virtual ~Create_func_rpad(Create_func_rpad::~Create_func_rpad1823,35495
class Create_func_rtrim 1827,35533
  Create_func_rtrim(Create_func_rtrim::Create_func_rtrim1835,35692
  virtual ~Create_func_rtrim(Create_func_rtrim::~Create_func_rtrim1836,35717
class Create_func_sec_to_time 1840,35756
  Create_func_sec_to_time(Create_func_sec_to_time::Create_func_sec_to_time1848,35927
  virtual ~Create_func_sec_to_time(Create_func_sec_to_time::~Create_func_sec_to_time1849,35958
class Create_func_sha 1853,36003
  Create_func_sha(Create_func_sha::Create_func_sha1861,36158
  virtual ~Create_func_sha(Create_func_sha::~Create_func_sha1862,36181
class Create_func_sha2 1866,36218
  Create_func_sha2(Create_func_sha2::Create_func_sha21874,36387
  virtual ~Create_func_sha2(Create_func_sha2::~Create_func_sha21875,36411
class Create_func_sign 1879,36449
  Create_func_sign(Create_func_sign::Create_func_sign1887,36606
  virtual ~Create_func_sign(Create_func_sign::~Create_func_sign1888,36630
class Create_func_sin 1892,36668
  Create_func_sin(Create_func_sin::Create_func_sin1900,36823
  virtual ~Create_func_sin(Create_func_sin::~Create_func_sin1901,36846
class Create_func_sleep 1905,36883
  Create_func_sleep(Create_func_sleep::Create_func_sleep1913,37042
  virtual ~Create_func_sleep(Create_func_sleep::~Create_func_sleep1914,37067
class Create_func_soundex 1918,37106
  Create_func_soundex(Create_func_soundex::Create_func_soundex1926,37269
  virtual ~Create_func_soundex(Create_func_soundex::~Create_func_soundex1927,37296
class Create_func_space 1931,37337
  Create_func_space(Create_func_space::Create_func_space1939,37496
  virtual ~Create_func_space(Create_func_space::~Create_func_space1940,37521
class Create_func_sqrt 1944,37560
  Create_func_sqrt(Create_func_sqrt::Create_func_sqrt1952,37717
  virtual ~Create_func_sqrt(Create_func_sqrt::~Create_func_sqrt1953,37741
class Create_func_srid 1958,37799
  Create_func_srid(Create_func_srid::Create_func_srid1966,37956
  virtual ~Create_func_srid(Create_func_srid::~Create_func_srid1967,37980
class Create_func_startpoint 1973,38045
  Create_func_startpoint(Create_func_startpoint::Create_func_startpoint1981,38214
  virtual ~Create_func_startpoint(Create_func_startpoint::~Create_func_startpoint1982,38244
class Create_func_str_to_date 1987,38295
  Create_func_str_to_date(Create_func_str_to_date::Create_func_str_to_date1995,38478
  virtual ~Create_func_str_to_date(Create_func_str_to_date::~Create_func_str_to_date1996,38509
class Create_func_strcmp 2000,38554
  Create_func_strcmp(Create_func_strcmp::Create_func_strcmp2008,38727
  virtual ~Create_func_strcmp(Create_func_strcmp::~Create_func_strcmp2009,38753
class Create_func_substr_index 2013,38793
  Create_func_substr_index(Create_func_substr_index::Create_func_substr_index2021,38990
  virtual ~Create_func_substr_index(Create_func_substr_index::~Create_func_substr_index2022,39022
class Create_func_subtime 2026,39068
  Create_func_subtime(Create_func_subtime::Create_func_subtime2034,39243
  virtual ~Create_func_subtime(Create_func_subtime::~Create_func_subtime2035,39270
class Create_func_tan 2039,39311
  Create_func_tan(Create_func_tan::Create_func_tan2047,39466
  virtual ~Create_func_tan(Create_func_tan::~Create_func_tan2048,39489
class Create_func_time_format 2052,39526
  Create_func_time_format(Create_func_time_format::Create_func_time_format2060,39709
  virtual ~Create_func_time_format(Create_func_time_format::~Create_func_time_format2061,39740
class Create_func_time_to_sec 2065,39785
  Create_func_time_to_sec(Create_func_time_to_sec::Create_func_time_to_sec2073,39956
  virtual ~Create_func_time_to_sec(Create_func_time_to_sec::~Create_func_time_to_sec2074,39987
class Create_func_timediff 2078,40032
  Create_func_timediff(Create_func_timediff::Create_func_timediff2086,40209
  virtual ~Create_func_timediff(Create_func_timediff::~Create_func_timediff2087,40237
class Create_func_to_days 2091,40279
  Create_func_to_days(Create_func_to_days::Create_func_to_days2099,40442
  virtual ~Create_func_to_days(Create_func_to_days::~Create_func_to_days2100,40469
class Create_func_to_seconds 2103,40509
  Create_func_to_seconds(Create_func_to_seconds::Create_func_to_seconds2111,40678
  virtual ~Create_func_to_seconds(Create_func_to_seconds::~Create_func_to_seconds2112,40708
class Create_func_touches 2117,40772
  Create_func_touches(Create_func_touches::Create_func_touches2125,40947
  virtual ~Create_func_touches(Create_func_touches::~Create_func_touches2126,40974
class Create_func_ucase 2131,41022
  Create_func_ucase(Create_func_ucase::Create_func_ucase2139,41181
  virtual ~Create_func_ucase(Create_func_ucase::~Create_func_ucase2140,41206
class Create_func_uncompress 2144,41245
  Create_func_uncompress(Create_func_uncompress::Create_func_uncompress2152,41414
  virtual ~Create_func_uncompress(Create_func_uncompress::~Create_func_uncompress2153,41444
class Create_func_uncompressed_length 2157,41488
  Create_func_uncompressed_length(Create_func_uncompressed_length::Create_func_uncompressed_length2165,41675
  virtual ~Create_func_uncompressed_length(Create_func_uncompressed_length::~Create_func_uncompressed_length2166,41714
class Create_func_unhex 2170,41767
  Create_func_unhex(Create_func_unhex::Create_func_unhex2178,41926
  virtual ~Create_func_unhex(Create_func_unhex::~Create_func_unhex2179,41951
class Create_func_unix_timestamp 2183,41990
  Create_func_unix_timestamp(Create_func_unix_timestamp::Create_func_unix_timestamp2191,42204
  virtual ~Create_func_unix_timestamp(Create_func_unix_timestamp::~Create_func_unix_timestamp2192,42238
class Create_func_uuid 2196,42286
  Create_func_uuid(Create_func_uuid::Create_func_uuid2204,42431
  virtual ~Create_func_uuid(Create_func_uuid::~Create_func_uuid2205,42455
class Create_func_uuid_short 2209,42493
  Create_func_uuid_short(Create_func_uuid_short::Create_func_uuid_short2217,42650
  virtual ~Create_func_uuid_short(Create_func_uuid_short::~Create_func_uuid_short2218,42680
class Create_func_version 2222,42724
  Create_func_version(Create_func_version::Create_func_version2230,42875
  virtual ~Create_func_version(Create_func_version::~Create_func_version2231,42902
class Create_func_weekday 2235,42943
  Create_func_weekday(Create_func_weekday::Create_func_weekday2243,43106
  virtual ~Create_func_weekday(Create_func_weekday::~Create_func_weekday2244,43133
class Create_func_weekofyear 2248,43174
  Create_func_weekofyear(Create_func_weekofyear::Create_func_weekofyear2256,43343
  virtual ~Create_func_weekofyear(Create_func_weekofyear::~Create_func_weekofyear2257,43373
class Create_func_within 2262,43437
  Create_func_within(Create_func_within::Create_func_within2270,43610
  virtual ~Create_func_within(Create_func_within::~Create_func_within2271,43636
class Create_func_x 2277,43703
  Create_func_x(Create_func_x::Create_func_x2285,43854
  virtual ~Create_func_x(Create_func_x::~Create_func_x2286,43875
class Create_func_xml_extractvalue 2291,43917
  Create_func_xml_extractvalue(Create_func_xml_extractvalue::Create_func_xml_extractvalue2299,44110
  virtual ~Create_func_xml_extractvalue(Create_func_xml_extractvalue::~Create_func_xml_extractvalue2300,44146
class Create_func_xml_update 2304,44196
  Create_func_xml_update(Create_func_xml_update::Create_func_xml_update2312,44389
  virtual ~Create_func_xml_update(Create_func_xml_update::~Create_func_xml_update2313,44419
class Create_func_y 2318,44483
  Create_func_y(Create_func_y::Create_func_y2326,44634
  virtual ~Create_func_y(Create_func_y::~Create_func_y2327,44655
class Create_func_year_week 2332,44697
  Create_func_year_week(Create_func_year_week::Create_func_year_week2340,44901
  virtual ~Create_func_year_week(Create_func_year_week::~Create_func_year_week2341,44930
static bool has_named_parameters(2358,45459
Create_func_no_geom Create_func_no_geom::s_singleton;2375,45732
Create_func_no_geom::create_func(2378,45793
Create_qfunc::create_func(2391,46141
Create_udf_func Create_udf_func::s_singleton;2421,46996
Create_udf_func::create_func(2424,47049
Create_udf_func::create(2433,47248
Create_sp_func Create_sp_func::s_singleton;2531,49550
Create_sp_func::create(2534,49601
Create_native_func::create_func(2576,50851
Create_func_arg0::create_func(2589,51123
Create_func_arg1::create_func(2607,51435
Create_func_arg2::create_func(2633,51917
Create_func_arg3::create_func(2661,52492
Create_func_abs Create_func_abs::s_singleton;2690,53149
Create_func_abs::create(2693,53202
Create_func_acos Create_func_acos::s_singleton;2699,53304
Create_func_acos::create(2702,53359
Create_func_addtime Create_func_addtime::s_singleton;2708,53463
Create_func_addtime::create(2711,53524
Create_func_aes_encrypt Create_func_aes_encrypt::s_singleton;2717,53659
Create_func_aes_encrypt::create(2720,53728
Create_func_aes_decrypt Create_func_aes_decrypt::s_singleton;2726,53864
Create_func_aes_decrypt::create(2729,53933
Create_func_area Create_func_area::s_singleton;2736,54089
Create_func_area::create(2739,54144
Create_func_as_wkb Create_func_as_wkb::s_singleton;2747,54275
Create_func_as_wkb::create(2750,54334
Create_func_as_wkt Create_func_as_wkt::s_singleton;2758,54469
Create_func_as_wkt::create(2761,54528
Create_func_asin Create_func_asin::s_singleton;2768,54643
Create_func_asin::create(2771,54698
Create_func_atan Create_func_atan::s_singleton;2777,54802
Create_func_atan::create_native(2780,54857
Create_func_benchmark Create_func_benchmark::s_singleton;2814,55508
Create_func_benchmark::create(2817,55573
Create_func_bin Create_func_bin::s_singleton;2824,55754
Create_func_bin::create(2827,55807
Create_func_bit_count Create_func_bit_count::s_singleton;2835,56031
Create_func_bit_count::create(2838,56096
Create_func_bit_length Create_func_bit_length::s_singleton;2844,56210
Create_func_bit_length::create(2847,56277
Create_func_ceiling Create_func_ceiling::s_singleton;2853,56393
Create_func_ceiling::create(2856,56454
Create_func_centroid Create_func_centroid::s_singleton;2863,56584
Create_func_centroid::create(2866,56647
Create_func_char_length Create_func_char_length::s_singleton;2873,56766
Create_func_char_length::create(2876,56835
Create_func_coercibility Create_func_coercibility::s_singleton;2882,56953
Create_func_coercibility::create(2885,57024
Create_func_concat Create_func_concat::s_singleton;2891,57144
Create_func_concat::create_native(2894,57203
Create_func_concat_ws Create_func_concat_ws::s_singleton;2912,57583
Create_func_concat_ws::create_native(2915,57648
Create_func_compress Create_func_compress::s_singleton;2934,58112
Create_func_compress::create(2937,58175
Create_func_connection_id Create_func_connection_id::s_singleton;2943,58287
Create_func_connection_id::create(2946,58360
Create_func_contains Create_func_contains::s_singleton;2954,58522
Create_func_contains::create(2957,58585
Create_func_conv Create_func_conv::s_singleton;2965,58805
Create_func_conv::create(2968,58860
Create_func_convert_tz Create_func_convert_tz::s_singleton;2974,59000
Create_func_convert_tz::create(2977,59067
Create_func_cos Create_func_cos::s_singleton;2983,59219
Create_func_cos::create(2986,59272
Create_func_cot Create_func_cot::s_singleton;2992,59374
Create_func_cot::create(2995,59427
Create_func_crc32 Create_func_crc32::s_singleton;3001,59529
Create_func_crc32::create(3004,59586
Create_func_crosses Create_func_crosses::s_singleton;3011,59712
Create_func_crosses::create(3014,59773
Create_func_date_format Create_func_date_format::s_singleton;3022,59991
Create_func_date_format::create(3025,60060
Create_func_datediff Create_func_datediff::s_singleton;3031,60199
Create_func_datediff::create(3034,60262
Create_func_dayname Create_func_dayname::s_singleton;3043,60500
Create_func_dayname::create(3046,60561
Create_func_dayofmonth Create_func_dayofmonth::s_singleton;3052,60671
Create_func_dayofmonth::create(3055,60738
Create_func_dayofweek Create_func_dayofweek::s_singleton;3061,60854
Create_func_dayofweek::create(3064,60919
Create_func_dayofyear Create_func_dayofyear::s_singleton;3070,61034
Create_func_dayofyear::create(3073,61099
Create_func_decode Create_func_decode::s_singleton;3079,61213
Create_func_decode::create(3082,61272
Create_func_degrees Create_func_degrees::s_singleton;3088,61398
Create_func_degrees::create(3091,61459
Create_func_des_decrypt Create_func_des_decrypt::s_singleton;3098,61646
Create_func_des_decrypt::create_native(3101,61715
Create_func_des_encrypt Create_func_des_encrypt::s_singleton;3135,62394
Create_func_des_encrypt::create_native(3138,62463
Create_func_dimension Create_func_dimension::s_singleton;3173,63162
Create_func_dimension::create(3176,63227
Create_func_disjoint Create_func_disjoint::s_singleton;3184,63368
Create_func_disjoint::create(3187,63431
Create_func_elt Create_func_elt::s_singleton;3195,63651
Create_func_elt::create_native(3198,63704
Create_func_encode Create_func_encode::s_singleton;3216,64075
Create_func_encode::create(3219,64134
Create_func_encrypt Create_func_encrypt::s_singleton;3225,64260
Create_func_encrypt::create_native(3228,64321
Create_func_endpoint Create_func_endpoint::s_singleton;3264,65049
Create_func_endpoint::create(3267,65112
Create_func_envelope Create_func_envelope::s_singleton;3276,65335
Create_func_envelope::create(3279,65398
Create_func_equals Create_func_equals::s_singleton;3287,65537
Create_func_equals::create(3290,65596
Create_func_exp Create_func_exp::s_singleton;3298,65812
Create_func_exp::create(3301,65865
Create_func_export_set Create_func_export_set::s_singleton;3307,65967
Create_func_export_set::create_native(3310,66034
Create_func_exteriorring Create_func_exteriorring::s_singleton;3361,67326
Create_func_exteriorring::create(3364,67397
Create_func_field Create_func_field::s_singleton;3372,67608
Create_func_field::create_native(3375,67665
Create_func_find_in_set Create_func_find_in_set::s_singleton;3393,68042
Create_func_find_in_set::create(3396,68111
Create_func_floor Create_func_floor::s_singleton;3402,68247
Create_func_floor::create(3405,68304
Create_func_format Create_func_format::s_singleton;3411,68410
Create_func_format::create_native(3414,68469
Create_func_found_rows Create_func_found_rows::s_singleton;3445,69184
Create_func_found_rows::create(3448,69251
Create_func_from_days Create_func_from_days::s_singleton;3457,69511
Create_func_from_days::create(3460,69576
Create_func_from_unixtime Create_func_from_unixtime::s_singleton;3466,69690
Create_func_from_unixtime::create_native(3469,69763
Create_func_geometry_from_text Create_func_geometry_from_text::s_singleton;3505,70534
Create_func_geometry_from_text::create_native(3508,70617
Create_func_geometry_from_wkb Create_func_geometry_from_wkb::s_singleton;3545,71396
Create_func_geometry_from_wkb::create_native(3548,71477
Create_func_geometry_type Create_func_geometry_type::s_singleton;3585,72252
Create_func_geometry_type::create(3588,72325
Create_func_geometryn Create_func_geometryn::s_singleton;3596,72474
Create_func_geometryn::create(3599,72539
Create_func_get_lock Create_func_get_lock::s_singleton;3607,72766
Create_func_get_lock::create(3610,72829
Create_func_glength Create_func_glength::s_singleton;3619,73098
Create_func_glength::create(3622,73159
Create_func_greatest Create_func_greatest::s_singleton;3629,73276
Create_func_greatest::create_native(3632,73339
Create_func_hex Create_func_hex::s_singleton;3650,73720
Create_func_hex::create(3653,73773
Create_func_ifnull Create_func_ifnull::s_singleton;3659,73875
Create_func_ifnull::create(3662,73934
Create_func_inet_ntoa Create_func_inet_ntoa::s_singleton;3668,74060
Create_func_inet_ntoa::create(3671,74125
Create_func_inet_aton Create_func_inet_aton::s_singleton;3677,74239
Create_func_inet_aton::create(3680,74304
Create_func_instr Create_func_instr::s_singleton;3686,74418
Create_func_instr::create(3689,74475
Create_func_interiorringn Create_func_interiorringn::s_singleton;3696,74620
Create_func_interiorringn::create(3699,74693
Create_func_intersects Create_func_intersects::s_singleton;3708,74948
Create_func_intersects::create(3711,75015
Create_func_is_free_lock Create_func_is_free_lock::s_singleton;3719,75239
Create_func_is_free_lock::create(3722,75310
Create_func_is_used_lock Create_func_is_used_lock::s_singleton;3730,75549
Create_func_is_used_lock::create(3733,75620
Create_func_isclosed Create_func_isclosed::s_singleton;3742,75879
Create_func_isclosed::create(3745,75942
Create_func_isempty Create_func_isempty::s_singleton;3753,76081
Create_func_isempty::create(3756,76142
Create_func_isnull Create_func_isnull::s_singleton;3763,76259
Create_func_isnull::create(3766,76318
Create_func_issimple Create_func_issimple::s_singleton;3773,76446
Create_func_issimple::create(3776,76509
Create_func_last_day Create_func_last_day::s_singleton;3783,76628
Create_func_last_day::create(3786,76691
Create_func_last_insert_id Create_func_last_insert_id::s_singleton;3792,76803
Create_func_last_insert_id::create_native(3795,76878
Create_func_lcase Create_func_lcase::s_singleton;3829,77555
Create_func_lcase::create(3832,77612
Create_func_least Create_func_least::s_singleton;3838,77718
Create_func_least::create_native(3841,77775
Create_func_length Create_func_length::s_singleton;3859,78150
Create_func_length::create(3862,78209
Create_func_like_range_min Create_func_like_range_min::s_singleton;3869,78334
Create_func_like_range_min::create(3872,78409
Create_func_like_range_max Create_func_like_range_max::s_singleton;3878,78551
Create_func_like_range_max::create(3881,78626
Create_func_ln Create_func_ln::s_singleton;3888,78775
Create_func_ln::create(3891,78826
Create_func_load_file Create_func_load_file::s_singleton;3897,78926
Create_func_load_file::create(3900,78991
Create_func_locate Create_func_locate::s_singleton;3909,79272
Create_func_locate::create_native(3912,79331
Create_func_log Create_func_log::s_singleton;3950,80179
Create_func_log::create_native(3953,80232
Create_func_log10 Create_func_log10::s_singleton;3987,80879
Create_func_log10::create(3990,80936
Create_func_log2 Create_func_log2::s_singleton;3996,81042
Create_func_log2::create(3999,81097
Create_func_lpad Create_func_lpad::s_singleton;4005,81201
Create_func_lpad::create(4008,81256
Create_func_ltrim Create_func_ltrim::s_singleton;4014,81396
Create_func_ltrim::create(4017,81453
Create_func_makedate Create_func_makedate::s_singleton;4023,81559
Create_func_makedate::create(4026,81622
Create_func_maketime Create_func_maketime::s_singleton;4032,81752
Create_func_maketime::create(4035,81815
Create_func_make_set Create_func_make_set::s_singleton;4041,81963
Create_func_make_set::create_native(4044,82026
Create_func_master_pos_wait Create_func_master_pos_wait::s_singleton;4063,82456
Create_func_master_pos_wait::create_native(4066,82533
Create_func_md5 Create_func_md5::s_singleton;4107,83458
Create_func_md5::create(4110,83511
Create_func_monthname Create_func_monthname::s_singleton;4116,83613
Create_func_monthname::create(4119,83678
Create_func_name_const Create_func_name_const::s_singleton;4125,83792
Create_func_name_const::create(4128,83859
Create_func_nullif Create_func_nullif::s_singleton;4134,83988
Create_func_nullif::create(4137,84047
Create_func_numgeometries Create_func_numgeometries::s_singleton;4144,84193
Create_func_numgeometries::create(4147,84266
Create_func_numinteriorring Create_func_numinteriorring::s_singleton;4155,84415
Create_func_numinteriorring::create(4158,84492
Create_func_numpoints Create_func_numpoints::s_singleton;4166,84645
Create_func_numpoints::create(4169,84710
Create_func_oct Create_func_oct::s_singleton;4176,84831
Create_func_oct::create(4179,84884
Create_func_ord Create_func_ord::s_singleton;4187,85108
Create_func_ord::create(4190,85161
Create_func_overlaps Create_func_overlaps::s_singleton;4197,85283
Create_func_overlaps::create(4200,85346
Create_func_period_add Create_func_period_add::s_singleton;4208,85566
Create_func_period_add::create(4211,85633
Create_func_period_diff Create_func_period_diff::s_singleton;4217,85767
Create_func_period_diff::create(4220,85836
Create_func_pi Create_func_pi::s_singleton;4226,85972
Create_func_pi::create(4229,86023
Create_func_pointn Create_func_pointn::s_singleton;4236,86155
Create_func_pointn::create(4239,86214
Create_func_pow Create_func_pow::s_singleton;4247,86435
Create_func_pow::create(4250,86488
Create_func_quote Create_func_quote::s_singleton;4256,86608
Create_func_quote::create(4259,86665
Create_func_radians Create_func_radians::s_singleton;4265,86771
Create_func_radians::create(4268,86832
Create_func_rand Create_func_rand::s_singleton;4275,87019
Create_func_rand::create_native(4278,87074
Create_func_release_lock Create_func_release_lock::s_singleton;4322,88203
Create_func_release_lock::create(4325,88274
Create_func_reverse Create_func_reverse::s_singleton;4333,88513
Create_func_reverse::create(4336,88574
Create_func_round Create_func_round::s_singleton;4342,88684
Create_func_round::create_native(4345,88741
Create_func_row_count Create_func_row_count::s_singleton;4380,89469
Create_func_row_count::create(4383,89534
Create_func_rpad Create_func_rpad::s_singleton;4392,89791
Create_func_rpad::create(4395,89846
Create_func_rtrim Create_func_rtrim::s_singleton;4401,89986
Create_func_rtrim::create(4404,90043
Create_func_sec_to_time Create_func_sec_to_time::s_singleton;4410,90149
Create_func_sec_to_time::create(4413,90218
Create_func_sha Create_func_sha::s_singleton;4419,90336
Create_func_sha::create(4422,90389
Create_func_sha2 Create_func_sha2::s_singleton;4428,90491
Create_func_sha2::create(4431,90546
Create_func_sign Create_func_sign::s_singleton;4437,90668
Create_func_sign::create(4440,90723
Create_func_sin Create_func_sin::s_singleton;4446,90827
Create_func_sin::create(4449,90880
Create_func_sleep Create_func_sleep::s_singleton;4455,90982
Create_func_sleep::create(4458,91039
Create_func_soundex Create_func_soundex::s_singleton;4466,91264
Create_func_soundex::create(4469,91325
Create_func_space Create_func_space::s_singleton;4475,91435
Create_func_space::create(4478,91492
Create_func_sqrt Create_func_sqrt::s_singleton;4503,92141
Create_func_sqrt::create(4506,92196
Create_func_srid Create_func_srid::s_singleton;4513,92320
Create_func_srid::create(4516,92375
Create_func_startpoint Create_func_startpoint::s_singleton;4524,92506
Create_func_startpoint::create(4527,92573
Create_func_str_to_date Create_func_str_to_date::s_singleton;4535,92780
Create_func_str_to_date::create(4538,92849
Create_func_strcmp Create_func_strcmp::s_singleton;4544,92985
Create_func_strcmp::create(4547,93044
Create_func_substr_index Create_func_substr_index::s_singleton;4553,93170
Create_func_substr_index::create(4556,93241
Create_func_subtime Create_func_subtime::s_singleton;4562,93397
Create_func_subtime::create(4565,93458
Create_func_tan Create_func_tan::s_singleton;4571,93593
Create_func_tan::create(4574,93646
Create_func_time_format Create_func_time_format::s_singleton;4580,93748
Create_func_time_format::create(4583,93817
Create_func_time_to_sec Create_func_time_to_sec::s_singleton;4589,93956
Create_func_time_to_sec::create(4592,94025
Create_func_timediff Create_func_timediff::s_singleton;4598,94143
Create_func_timediff::create(4601,94206
Create_func_to_days Create_func_to_days::s_singleton;4607,94336
Create_func_to_days::create(4610,94397
Create_func_to_seconds Create_func_to_seconds::s_singleton;4616,94507
Create_func_to_seconds::create(4619,94574
Create_func_touches Create_func_touches::s_singleton;4626,94710
Create_func_touches::create(4629,94771
Create_func_ucase Create_func_ucase::s_singleton;4637,94989
Create_func_ucase::create(4640,95046
Create_func_uncompress Create_func_uncompress::s_singleton;4646,95152
Create_func_uncompress::create(4649,95219
Create_func_uncompressed_length Create_func_uncompressed_length::s_singleton;4655,95335
Create_func_uncompressed_length::create(4658,95420
Create_func_unhex Create_func_unhex::s_singleton;4664,95554
Create_func_unhex::create(4667,95611
Create_func_unix_timestamp Create_func_unix_timestamp::s_singleton;4673,95717
Create_func_unix_timestamp::create_native(4676,95792
Create_func_uuid Create_func_uuid::s_singleton;4709,96431
Create_func_uuid::create(4712,96486
Create_func_uuid_short Create_func_uuid_short::s_singleton;4721,96728
Create_func_uuid_short::create(4724,96795
Create_func_version Create_func_version::s_singleton;4733,97055
Create_func_version::create(4736,97116
Create_func_weekday Create_func_weekday::s_singleton;4747,97598
Create_func_weekday::create(4750,97659
Create_func_weekofyear Create_func_weekofyear::s_singleton;4756,97772
Create_func_weekofyear::create(4759,97839
Create_func_within Create_func_within::s_singleton;4767,98034
Create_func_within::create(4770,98093
Create_func_x Create_func_x::s_singleton;4779,98329
Create_func_x::create(4782,98378
Create_func_xml_extractvalue Create_func_xml_extractvalue::s_singleton;4789,98483
Create_func_xml_extractvalue::create(4792,98562
Create_func_xml_update Create_func_xml_update::s_singleton;4798,98708
Create_func_xml_update::create(4801,98775
Create_func_y Create_func_y::s_singleton;4808,98947
Create_func_y::create(4811,98996
Create_func_year_week Create_func_year_week::s_singleton;4818,99101
Create_func_year_week::create_native(4821,99166
struct Native_func_registry4856,99902
#define BUILDER(4862,99979
  #define GEOM_BUILDER(4865,100036
  #define GEOM_BUILDER(4867,100085
static Native_func_registry func_array[func_array4881,100586
static HASH native_functions_hash;5091,115726
get_native_fct_hash_key(5094,115780
int item_create_init(5108,116185
void item_create_cleanup(5148,117291
find_native_function_builder(5156,117435
find_qualified_function_builder(5175,117859
create_func_cast(5182,117954

sql/item_func.cc,14998
#define sp_restore_security_context(58,1974
bool check_reserved_words(61,2036
eval_const_cond(77,2369
static inline bool test_if_sum_overflows_ull(86,2529
void Item_func::set_arguments(91,2649
Item_func::Item_func(111,3131
Item_func::Item_func(117,3221
Item_func::fix_fields(173,4922
bool Item_func::walk(235,6754
void Item_func::traverse_cond(250,7105
Item *Item_func::transform(Item_func::transform295,8417
Item *Item_func::compile(Item_func::compile346,10181
void Item_func::split_sum_func(373,10929
void Item_func::update_used_tables(382,11217
table_map Item_func::used_tables(395,11479
table_map Item_func::not_null_tables(401,11554
void Item_func::print(407,11637
void Item_func::print_args(416,11808
void Item_func::print_op(427,12023
bool Item_func::eq(442,12340
Field *Item_func::tmp_table_field(Item_func::tmp_table_field465,13045
bool Item_func::is_expensive_processor(500,13908
my_decimal *Item_func::val_decimal(Item_func::val_decimal506,13990
String *Item_real_func::val_str(Item_real_func::val_str517,14258
my_decimal *Item_real_func::val_decimal(Item_real_func::val_decimal528,14484
void Item_func::fix_num_length_and_dec(539,14744
void Item_func_numhybrid::fix_num_length_and_dec(557,15120
void Item_func::count_decimal_length(566,15305
void Item_func::count_only_length(588,15991
void Item_func::count_real_length(606,16407
void Item_func::signal_divide_by_null(633,16992
Item *Item_func::get_tmp_table_item(Item_func::get_tmp_table_item643,17261
double Item_int_func::val_real(650,17420
String *Item_int_func::val_str(Item_int_func::val_str658,17567
void Item_func_connection_id::fix_length_and_dec(669,17771
bool Item_func_connection_id::fix_fields(676,17885
void Item_num_op::find_num_type(691,18208
void Item_func_num1::find_num_type(733,19374
void Item_func_num1::fix_num_length_and_dec(760,20132
void Item_func_numhybrid::fix_length_and_dec(767,20250
String *Item_func_numhybrid::val_str(Item_func_numhybrid::val_str774,20350
double Item_func_numhybrid::val_real(813,21281
longlong Item_func_numhybrid::val_int(848,22110
my_decimal *Item_func_numhybrid::val_decimal(Item_func_numhybrid::val_decimal883,22921
void Item_func_signed::print(921,23751
longlong Item_func_signed::val_int_from_str(930,23951
longlong Item_func_signed::val_int(970,24982
void Item_func_unsigned::print(994,25536
longlong Item_func_unsigned::val_int(1003,25740
String *Item_decimal_typecast::val_str(Item_decimal_typecast::val_str1034,26532
double Item_decimal_typecast::val_real(1044,26749
longlong Item_decimal_typecast::val_int(1055,26960
my_decimal *Item_decimal_typecast::val_decimal(Item_decimal_typecast::val_decimal1066,27184
void Item_decimal_typecast::print(1103,28101
double Item_func_plus::real_op(1127,28731
longlong Item_func_plus::int_op(1136,28946
my_decimal *Item_func_plus::decimal_op(Item_func_plus::decimal_op1208,30561
void Item_func_additive_op::result_precision(1228,31279
void Item_func_minus::fix_length_and_dec(1250,32116
double Item_func_minus::real_op(1259,32318
longlong Item_func_minus::int_op(1268,32534
my_decimal *Item_func_minus::decimal_op(Item_func_minus::decimal_op1336,33960
double Item_func_mul::real_op(1355,34619
longlong Item_func_mul::int_op(1365,34860
my_decimal *Item_func_mul::decimal_op(Item_func_mul::decimal_op1446,36930
void Item_func_mul::result_precision(1464,37585
double Item_func_div::real_op(1479,38251
my_decimal *Item_func_div::decimal_op(Item_func_div::decimal_op1495,38584
void Item_func_div::result_precision(1523,39443
void Item_func_div::fix_length_and_dec(1540,40127
longlong Item_func_int_div::val_int(1577,41041
void Item_func_int_div::fix_length_and_dec(1648,42969
longlong Item_func_mod::int_op(1660,43345
double Item_func_mod::real_op(1691,44292
my_decimal *Item_func_mod::decimal_op(Item_func_mod::decimal_op1707,44635
void Item_func_mod::result_precision(1732,45235
void Item_func_mod::fix_length_and_dec(1739,45396
double Item_func_neg::real_op(1747,45538
longlong Item_func_neg::int_op(1755,45665
my_decimal *Item_func_neg::decimal_op(Item_func_neg::decimal_op1767,46001
void Item_func_neg::fix_num_length_and_dec(1780,46295
void Item_func_neg::fix_length_and_dec(1788,46454
double Item_func_abs::real_op(1819,47397
longlong Item_func_abs::int_op(1827,47529
my_decimal *Item_func_abs::decimal_op(Item_func_abs::decimal_op1841,47883
void Item_func_abs::fix_length_and_dec(1855,48210
double Item_func_ln::val_real(1863,48378
double Item_func_log::val_real(1883,48802
double Item_func_log2::val_real(1909,49323
double Item_func_log10::val_real(1924,49585
double Item_func_exp::val_real(1938,49842
double Item_func_sqrt::val_real(1947,50068
double Item_func_pow::val_real(1956,50289
double Item_func_acos::val_real(1968,50609
double Item_func_asin::val_real(1980,51018
double Item_func_atan::val_real(1990,51323
double Item_func_cos::val_real(2006,51684
double Item_func_sin::val_real(2015,51863
double Item_func_tan::val_real(2024,52042
double Item_func_cot::val_real(2034,52244
longlong Item_func_shift_left::val_int(2047,52501
longlong Item_func_shift_right::val_int(2062,52850
longlong Item_func_bit_neg::val_int(2078,53199
void Item_func_integer::fix_length_and_dec(2090,53413
void Item_func_int_val::fix_num_length_and_dec(2098,53602
void Item_func_int_val::find_num_type(2110,53972
longlong Item_func_ceiling::int_op(2151,55071
double Item_func_ceiling::real_op(2175,55577
my_decimal *Item_func_ceiling::decimal_op(Item_func_ceiling::decimal_op2187,55815
longlong Item_func_floor::int_op(2198,56154
double Item_func_floor::real_op(2222,56654
my_decimal *Item_func_floor::decimal_op(Item_func_floor::decimal_op2234,56891
void Item_func_round::fix_length_and_dec(2245,57224
double my_double_round(2322,59434
double Item_func_round::real_op(2360,60605
static inline ulonglong my_unsigned_round(2376,61035
longlong Item_func_round::int_op(2383,61201
my_decimal *Item_func_round::decimal_op(Item_func_round::decimal_op2413,61944
void Item_func_rand::seed_random(2430,62490
bool Item_func_rand::fix_fields(2442,62776
void Item_func_rand::update_used_tables(2479,63829
double Item_func_rand::val_real(2486,63955
longlong Item_func_sign::val_int(2507,64465
double Item_func_units::val_real(2516,64653
void Item_func_min_max::fix_length_and_dec(2526,64862
uint Item_func_min_max::cmp_datetimes(2592,66937
String *Item_func_min_max::val_str(Item_func_min_max::val_str2628,67699
double Item_func_min_max::val_real(2706,69407
longlong Item_func_min_max::val_int(2733,69931
my_decimal *Item_func_min_max::val_decimal(Item_func_min_max::val_decimal2760,70456
longlong Item_func_length::val_int(2801,71313
longlong Item_func_char_length::val_int(2815,71551
longlong Item_func_coercibility::val_int(2829,71796
void Item_func_locate::fix_length_and_dec(2837,71940
longlong Item_func_locate::val_int(2844,72092
void Item_func_locate::print(2887,73216
longlong Item_func_field::val_int(2902,73534
void Item_func_field::fix_length_and_dec(2957,74844
longlong Item_func_ascii::val_int(2968,75162
longlong Item_func_ord::val_int(2981,75407
void Item_func_find_in_set::fix_length_and_dec(3011,76151
static const char separator=3036,76835
longlong Item_func_find_in_set::val_int(3038,76869
longlong Item_func_bit_count::val_int(3117,79175
void udf_handler::cleanup(3135,79738
udf_handler::fix_fields(3157,80102
bool udf_handler::get_arguments(3328,85472
String *udf_handler::val_str(udf_handler::val_str3379,86513
my_decimal *udf_handler::val_decimal(udf_handler::val_decimal3423,87727
void Item_udf_func::cleanup(3449,88370
void Item_udf_func::print(3456,88447
double Item_func_udf_float::val_real(3470,88724
String *Item_func_udf_float::val_str(Item_func_udf_float::val_str3480,88974
longlong Item_func_udf_int::val_int(3491,89203
String *Item_func_udf_int::val_str(Item_func_udf_int::val_str3499,89359
longlong Item_func_udf_decimal::val_int(3510,89563
double Item_func_udf_decimal::val_real(3521,89813
my_decimal *Item_func_udf_decimal::val_decimal(Item_func_udf_decimal::val_decimal3532,90050
String *Item_func_udf_decimal::val_str(Item_func_udf_decimal::val_str3543,90371
void Item_func_udf_decimal::fix_length_and_dec(3556,90767
void Item_func_udf_str::fix_length_and_dec(3564,90899
String *Item_func_udf_str::val_str(Item_func_udf_str::val_str3573,91130
udf_handler::~udf_handler(3588,91444
bool udf_handler::get_arguments(3595,91606
mysql_mutex_t LOCK_user_locks;3602,91707
static HASH hash_user_locks;3603,91738
class User_level_lock3605,91768
  void set_thread(User_level_lock::set_thread3615,91911
  User_level_lock(User_level_lock::User_level_lock3617,91971
  ~User_level_lock(User_level_lock::~User_level_lock3631,92334
  inline bool initialized(User_level_lock::initialized3640,92493
uchar *ull_get_key(ull_get_key3646,92725
static PSI_mutex_key key_LOCK_user_locks;3654,92927
static PSI_mutex_info all_user_mutexes[all_user_mutexes3656,92970
static void init_user_lock_psi_keys(3661,93080
static bool item_user_lock_inited=3674,93326
void item_user_lock_init(3676,93365
void item_user_lock_free(3688,93675
void item_user_lock_release(3698,93857
longlong Item_master_pos_wait::val_int(3713,94123
class Interruptible_wait3746,94882
    Interruptible_wait(Interruptible_wait::Interruptible_wait3753,95014
    ~Interruptible_wait(Interruptible_wait::~Interruptible_wait3756,95068
    void set_timeout(Interruptible_wait::set_timeout3764,95219
const ulonglong Interruptible_wait::m_interrupt_interval=3781,95715
int Interruptible_wait::wait(3795,96048
longlong Item_func_get_lock::val_int(3836,96946
longlong Item_func_release_lock::val_int(3964,100344
longlong Item_func_last_insert_id::val_int(4007,101518
bool Item_func_last_insert_id::fix_fields(4031,102239
longlong Item_func_benchmark::val_int(4040,102475
void Item_func_benchmark::print(4094,103759
longlong Item_func_sleep::val_int(4106,104061
#define extra_size 4161,105494
static user_var_entry *get_variable(get_variable4163,105529
void Item_func_set_user_var::cleanup(4208,107125
bool Item_func_set_user_var::set_entry(4215,107209
bool Item_func_set_user_var::fix_fields(4246,108066
Item_func_set_user_var::fix_length_and_dec(4279,109241
bool Item_func_set_user_var::register_field_in_read_map(4303,109865
update_hash(4336,110745
Item_func_set_user_var::update_hash(4396,112336
double user_var_entry::val_real(4419,113050
longlong user_var_entry::val_int(4447,113679
String *user_var_entry::val_str(user_var_entry::val_str4478,114349
my_decimal *user_var_entry::val_decimal(user_var_entry::val_decimal4509,115141
Item_func_set_user_var::check(4549,116078
void Item_func_set_user_var::save_item_result(4600,117371
Item_func_set_user_var::update(4651,118559
double Item_func_set_user_var::val_real(4703,119986
longlong Item_func_set_user_var::val_int(4711,120147
String *Item_func_set_user_var::val_str(Item_func_set_user_var::val_str4719,120308
my_decimal *Item_func_set_user_var::val_decimal(Item_func_set_user_var::val_decimal4728,120495
double Item_func_set_user_var::val_result(4737,120688
longlong Item_func_set_user_var::val_int_result(4745,120854
bool Item_func_set_user_var::val_bool_result(4753,121025
String *Item_func_set_user_var::str_result(Item_func_set_user_var::str_result4761,121198
my_decimal *Item_func_set_user_var::val_decimal_result(Item_func_set_user_var::val_decimal_result4770,121391
bool Item_func_set_user_var::is_null_result(4779,121594
void Item_func_set_user_var::print(4788,121744
void Item_func_set_user_var::print_as_stmt(4798,121995
bool Item_func_set_user_var::send(4808,122299
void Item_func_set_user_var::make_field(4819,122513
int Item_func_set_user_var::save_in_field(4871,124525
Item_func_get_user_var::val_str(4934,126334
double Item_func_get_user_var::val_real(4944,126594
my_decimal *Item_func_get_user_var::val_decimal(Item_func_get_user_var::val_decimal4953,126772
longlong Item_func_get_user_var::val_int(4962,126953
get_var_with_binlog(4993,127810
void Item_func_get_user_var::fix_length_and_dec(5110,131835
bool Item_func_get_user_var::const_item(5163,133140
enum Item_result Item_func_get_user_var::result_type(5169,133272
void Item_func_get_user_var::print(5175,133370
bool Item_func_get_user_var::eq(5183,133572
bool Item_func_get_user_var::set_value(5198,134071
bool Item_user_var_as_out_param::fix_fields(5210,134454
void Item_user_var_as_out_param::set_null_value(5231,135104
void Item_user_var_as_out_param::set_value(5238,135290
double Item_user_var_as_out_param::val_real(5246,135559
longlong Item_user_var_as_out_param::val_int(5253,135643
String* Item_user_var_as_out_param::val_str(5260,135726
my_decimal* Item_user_var_as_out_param::val_decimal(5267,135819
void Item_user_var_as_out_param::print(5274,135935
Item_func_get_system_var(5282,136130
bool Item_func_get_system_var::is_written_to_binlog(5293,136545
void Item_func_get_system_var::update_null_value(5299,136651
void Item_func_get_system_var::fix_length_and_dec(5309,136858
void Item_func_get_system_var::print(5391,139449
enum Item_result Item_func_get_system_var::result_type(5397,139567
enum_field_types Item_func_get_system_var::field_type(5421,140120
#define get_sys_var_safe(5449,140812
longlong Item_func_get_system_var::val_int(5463,141245
String* Item_func_get_system_var::val_str(5541,143659
double Item_func_get_system_var::val_real(5626,145891
bool Item_func_get_system_var::eq(5711,148557
void Item_func_get_system_var::cleanup(5725,149023
longlong Item_func_inet_aton::val_int(5734,149165
void Item_func_match::init_search(5789,150463
bool Item_func_match::fix_fields(5867,152449
bool Item_func_match::fix_index(5924,154091
bool Item_func_match::eq(6017,155937
double Item_func_match::val_real(6034,156333
void Item_func_match::print(6063,157117
longlong Item_func_bit_xor::val_int(6076,157553
Item *get_system_var(get_system_var6108,158368
longlong Item_func_is_free_lock::val_int(6155,159306
longlong Item_func_is_used_lock::val_int(6177,159815
longlong Item_func_row_count::val_int(6199,160329
Item_func_sp::Item_func_sp(6210,160466
Item_func_sp::Item_func_sp(6220,160812
Item_func_sp::cleanup(6232,161211
Item_func_sp::func_name(6245,161405
void my_missing_function_error(6270,162312
Item_func_sp::init_result_field(6298,163207
void Item_func_sp::fix_length_and_dec(6357,164733
Item_func_sp::execute(6381,165264
Item_func_sp::execute_impl(6415,165974
Item_func_sp::make_field(6471,167531
Item_func_sp::field_type(6483,167786
Item_func_sp::result_type(6491,167950
longlong Item_func_found_rows::val_int(6499,168163
Item_func_sp::tmp_table_field(6507,168281
Item_func_sp::sp_check_access(6531,168879
Item_func_sp::fix_fields(6546,169181
void Item_func_sp::update_used_tables(6602,170823
ulonglong uuid_value;6632,171522
void uuid_short_init(6634,171545
longlong Item_func_uuid_short::val_int(6641,171681

sql/item_geofunc.cc,1928
Field *Item_geometry_func::tmp_table_field(Item_geometry_func::tmp_table_field39,1236
void Item_geometry_func::fix_length_and_dec(48,1480
String *Item_func_geometry_from_text::val_str(Item_func_geometry_from_text::val_str57,1633
String *Item_func_geometry_from_wkb::val_str(Item_func_geometry_from_wkb::val_str84,2274
String *Item_func_as_wkt::val_str_ascii(Item_func_as_wkt::val_str_ascii120,3156
void Item_func_as_wkt::fix_length_and_dec(142,3606
String *Item_func_as_wkb::val_str(Item_func_as_wkb::val_str150,3781
String *Item_func_geometry_type::val_str_ascii(Item_func_geometry_type::val_str_ascii168,4182
Field::geometry_type Item_func_envelope::get_geometry_type(187,4660
String *Item_func_envelope::val_str(Item_func_envelope::val_str193,4763
Field::geometry_type Item_func_centroid::get_geometry_type(217,5331
String *Item_func_centroid::val_str(Item_func_centroid::val_str223,5432
String *Item_func_spatial_decomp::val_str(Item_func_spatial_decomp::val_str251,6037
String *Item_func_spatial_decomp_n::val_str(Item_func_spatial_decomp_n::val_str298,6926
Field::geometry_type Item_func_point::get_geometry_type(357,7984
String *Item_func_point::val_str(Item_func_point::val_str363,8082
String *Item_func_spatial_collection::val_str(Item_func_spatial_collection::val_str396,9009
longlong Item_func_spatial_rel::val_int(519,11838
longlong Item_func_isempty::val_int(564,12948
longlong Item_func_issimple::val_int(581,13312
longlong Item_func_isclosed::val_int(595,13655
longlong Item_func_dimension::val_int(618,14102
longlong Item_func_numinteriorring::val_int(635,14522
longlong Item_func_numgeometries::val_int(651,14939
longlong Item_func_numpoints::val_int(667,15351
double Item_func_x::val_real(684,15786
double Item_func_y::val_real(700,16167
double Item_func_area::val_real(716,16546
double Item_func_glength::val_real(732,16955
longlong Item_func_srid::val_int(748,17389

sql/item_row.cc,414
Item_row::Item_row(39,1370
void Item_row::illegal_method_call(59,1817
bool Item_row::fix_fields(68,2079
void Item_row::cleanup(102,2900
void Item_row::split_sum_func(116,3107
void Item_row::update_used_tables(125,3395
bool Item_row::check_cols(137,3661
void Item_row::print(147,3801
bool Item_row::walk(160,4028
Item *Item_row::transform(Item_row::transform171,4263
void Item_row::bring_value(193,4917

sql/item_strfunc.cc,7388
String *Item_str_func::val_str_from_val_str_ascii(Item_str_func::val_str_from_val_str_ascii74,2473
static void array_to_hex(108,3209
bool Item_str_func::fix_fields(119,3467
my_decimal *Item_str_func::val_decimal(Item_str_func::val_decimal133,3867
double Item_str_func::val_real(147,4243
longlong Item_str_func::val_int(159,4558
String *Item_func_md5::val_str_ascii(Item_func_md5::val_str_ascii173,4849
void Item_func_md5::fix_length_and_dec(198,5361
String *Item_func_sha::val_str_ascii(Item_func_sha::val_str_ascii212,5806
void Item_func_sha::fix_length_and_dec(240,6768
String *Item_func_sha2::val_str_ascii(Item_func_sha2::val_str_ascii254,7268
void Item_func_sha2::fix_length_and_dec(339,9574
String *Item_func_aes_encrypt::val_str(Item_func_aes_encrypt::val_str395,11105
void Item_func_aes_encrypt::fix_length_and_dec(425,11983
String *Item_func_aes_decrypt::val_str(Item_func_aes_decrypt::val_str431,12089
void Item_func_aes_decrypt::fix_length_and_dec(464,13073
String *Item_func_concat::val_str(Item_func_concat::val_str477,13347
void Item_func_concat::fix_length_and_dec(610,17051
String *Item_func_des_encrypt::val_str(Item_func_des_encrypt::val_str634,17713
String *Item_func_des_decrypt::val_str(Item_func_des_decrypt::val_str730,21053
String *Item_func_concat_ws::val_str(Item_func_concat_ws::val_str814,23722
void Item_func_concat_ws::fix_length_and_dec(957,27839
String *Item_func_reverse::val_str(Item_func_reverse::val_str977,28336
void Item_func_reverse::fix_length_and_dec(1025,29358
String *Item_func_replace::val_str(Item_func_replace::val_str1041,29743
void Item_func_replace::fix_length_and_dec(1162,32766
String *Item_func_insert::val_str(Item_func_insert::val_str1178,33292
void Item_func_insert::fix_length_and_dec(1241,35404
String *Item_str_conv::val_str(Item_str_conv::val_str1254,35764
void Item_func_lcase::fix_length_and_dec(1287,36643
void Item_func_ucase::fix_length_and_dec(1296,36971
String *Item_func_left::val_str(Item_func_left::val_str1306,37300
void Item_str_func::left_right_max_length(1330,37936
void Item_func_left::fix_length_and_dec(1345,38248
String *Item_func_right::val_str(Item_func_right::val_str1353,38425
void Item_func_right::fix_length_and_dec(1379,39185
String *Item_func_substr::val_str(Item_func_substr::val_str1387,39363
void Item_func_substr::fix_length_and_dec(1434,41108
void Item_func_substr_index::fix_length_and_dec(1460,41800
String *Item_func_substr_index::val_str(Item_func_substr_index::val_str1468,41994
String *Item_func_ltrim::val_str(Item_func_ltrim::val_str1598,45494
String *Item_func_rtrim::val_str(Item_func_rtrim::val_str1645,46624
String *Item_func_trim::val_str(Item_func_trim::val_str1726,48353
void Item_func_trim::fix_length_and_dec(1788,49880
void Item_func_trim::print(1808,50492
String *Item_func_password::val_str_ascii(Item_func_password::val_str_ascii1828,50917
char *Item_func_password::alloc(Item_func_password::alloc1841,51312
String *Item_func_old_password::val_str_ascii(Item_func_old_password::val_str_ascii1852,51614
char *Item_func_old_password::alloc(Item_func_old_password::alloc1865,52020
#define bin_to_ascii(1875,52309
String *Item_func_encrypt::val_str(Item_func_encrypt::val_str1877,52386
bool Item_func_encode::seed(1921,53504
void Item_func_encode::fix_length_and_dec(1936,53788
String *Item_func_encode::val_str(Item_func_encode::val_str1946,54120
void Item_func_encode::crypto_transform(1971,54498
void Item_func_decode::crypto_transform(1977,54647
Item *Item_func_sysconst::safe_charset_converter(Item_func_sysconst::safe_charset_converter1983,54760
String *Item_func_database::val_str(Item_func_database::val_str2009,55542
bool Item_func_user::init(2029,55972
bool Item_func_user::fix_fields(2054,56594
bool Item_func_current_user::fix_fields(2062,56804
void Item_func_soundex::fix_length_and_dec(2078,57251
static int soundex_toupper(2095,57699
static char get_scode(2101,57797
static bool my_uni_isalpha(2113,58006
String *Item_func_soundex::val_str(Item_func_soundex::val_str2127,58434
const int FORMAT_MAX_DECIMALS=2239,61279
MY_LOCALE *Item_func_format::get_locale(Item_func_format::get_locale2242,61316
void Item_func_format::fix_length_and_dec(2259,61839
String *Item_func_format::val_str_ascii(Item_func_format::val_str_ascii2278,62378
void Item_func_format::print(2382,65291
void Item_func_elt::fix_length_and_dec(2396,65605
double Item_func_elt::val_real(2414,66017
longlong Item_func_elt::val_int(2427,66285
String *Item_func_elt::val_str(Item_func_elt::val_str2441,66554
void Item_func_make_set::split_sum_func(2457,66898
void Item_func_make_set::fix_length_and_dec(2465,67140
void Item_func_make_set::update_used_tables(2482,67643
String *Item_func_make_set::val_str(Item_func_make_set::val_str2491,67842
Item *Item_func_make_set::transform(Item_func_make_set::transform2544,68956
void Item_func_make_set::print(2564,69558
String *Item_func_char::val_str(Item_func_char::val_str2577,69816
inline String* alloc_buffer(2615,70676
void Item_func_repeat::fix_length_and_dec(2637,71122
String *Item_func_repeat::val_str(Item_func_repeat::val_str2666,71901
void Item_func_rpad::fix_length_and_dec(2716,73221
String *Item_func_rpad::val_str(Item_func_rpad::val_str2739,73865
void Item_func_lpad::fix_length_and_dec(2819,76430
String *Item_func_lpad::val_str(Item_func_lpad::val_str2843,77077
String *Item_func_conv::val_str(Item_func_conv::val_str2921,79277
String *Item_func_conv_charset::val_str(Item_func_conv_charset::val_str2972,80656
void Item_func_conv_charset::fix_length_and_dec(2989,81111
void Item_func_conv_charset::print(2995,81265
String *Item_func_set_collation::val_str(Item_func_set_collation::val_str3004,81525
void Item_func_set_collation::fix_length_and_dec(3014,81749
bool Item_func_set_collation::eq(3045,82591
void Item_func_set_collation::print(3066,83202
String *Item_func_charset::val_str(Item_func_charset::val_str3077,83535
String *Item_func_collation::val_str(Item_func_collation::val_str3089,83835
String *Item_func_hex::val_str_ascii(Item_func_hex::val_str_ascii3102,84134
String *Item_func_unhex::val_str(Item_func_unhex::val_str3151,85458
String *Item_func_like_range::val_str(Item_func_like_range::val_str3192,86323
void Item_func_binary::print(3226,87214
String *Item_load_file::val_str(Item_load_file::val_str3236,87452
String* Item_func_export_set::val_str(3297,89090
void Item_func_export_set::fix_length_and_dec(3382,91355
String* Item_func_inet_ntoa::val_str(3393,91747
#define get_esc_bit(3436,92854
String *Item_func_quote::val_str(Item_func_quote::val_str3457,93460
longlong Item_func_uncompressed_length::val_int(3590,96682
longlong Item_func_crc32::val_int(3626,97653
String *Item_func_compress::val_str(Item_func_compress::val_str3642,97960
String *Item_func_uncompress::val_str(Item_func_uncompress::val_str3706,99657
static struct rand_struct uuid_rand;3768,101309
static uint nanoseq;3769,101346
static ulonglong uuid_time=3770,101367
static char clock_seq_and_node_str[clock_seq_and_node_str3771,101397
#define UUID_TIME_OFFSET 3777,101562
#define UUID_VERSION 3780,101671
#define UUID_VARIANT 3781,101704
static void tohex(3783,101738
static void set_clock_seq_str(3793,101882
String *Item_func_uuid::val_str(Item_func_uuid::val_str3800,102053

sql/item_subselect.cc,5790
inline Item * and_items(43,1404
Item_subselect::Item_subselect(48,1514
void Item_subselect::init(63,1942
Item_subselect::get_select_lex(111,3323
void Item_subselect::cleanup(116,3392
void Item_singlerow_subselect::cleanup(135,3701
Item_subselect::~Item_subselect(143,3867
Item_subselect::select_transformer(149,3949
bool Item_subselect::fix_fields(156,4077
bool Item_subselect::walk(220,5594
bool Item_subselect::exec(259,6675
Item::Type Item_subselect::type(288,7290
void Item_subselect::fix_length_and_dec(294,7361
table_map Item_subselect::used_tables(300,7442
bool Item_subselect::const_item(306,7565
Item *Item_subselect::get_tmp_table_item(Item_subselect::get_tmp_table_item311,7679
void Item_subselect::update_used_tables(318,7851
void Item_subselect::print(329,8075
Item_singlerow_subselect::Item_singlerow_subselect(342,8284
Item_singlerow_subselect::invalidate_and_restore_select_lex(353,8601
Item_maxmin_subselect::Item_maxmin_subselect(372,9187
void Item_maxmin_subselect::cleanup(401,10017
void Item_maxmin_subselect::print(419,10496
void Item_singlerow_subselect::reset(426,10668
Item_singlerow_subselect::select_transformer(445,11197
void Item_singlerow_subselect::store(497,12884
enum Item_result Item_singlerow_subselect::result_type(503,12994
enum_field_types Item_singlerow_subselect::field_type(512,13176
void Item_singlerow_subselect::fix_length_and_dec(517,13274
uint Item_singlerow_subselect::cols(540,13900
bool Item_singlerow_subselect::check_cols(545,13968
bool Item_singlerow_subselect::null_inside(555,14129
void Item_singlerow_subselect::bring_value(565,14284
double Item_singlerow_subselect::val_real(573,14402
longlong Item_singlerow_subselect::val_int(588,14618
String *Item_singlerow_subselect::val_str(Item_singlerow_subselect::val_str603,14834
my_decimal *Item_singlerow_subselect::val_decimal(Item_singlerow_subselect::val_decimal618,15037
bool Item_singlerow_subselect::val_bool(633,15276
Item_exists_subselect::Item_exists_subselect(648,15464
void Item_exists_subselect::print(662,15825
bool Item_in_subselect::test_limit(669,15990
Item_in_subselect::Item_in_subselect(684,16302
Item_allany_subselect::Item_allany_subselect(701,16829
void Item_exists_subselect::fix_length_and_dec(720,17430
double Item_exists_subselect::val_real(729,17666
longlong Item_exists_subselect::val_int(740,17813
String *Item_exists_subselect::val_str(Item_exists_subselect::val_str765,18423
my_decimal *Item_exists_subselect::val_decimal(Item_exists_subselect::val_decimal788,19069
bool Item_exists_subselect::val_bool(798,19289
double Item_in_subselect::val_real(810,19431
longlong Item_in_subselect::val_int(830,19784
String *Item_in_subselect::val_str(Item_in_subselect::val_str850,20129
bool Item_in_subselect::val_bool(874,20551
my_decimal *Item_in_subselect::val_decimal(Item_in_subselect::val_decimal888,20762
Item_in_subselect::single_value_transformer(960,23017
Item_in_subselect::row_value_transformer(1303,34910
Item_in_subselect::select_transformer(1541,44428
Item_in_subselect::select_in_like_transformer(1569,45194
void Item_in_subselect::print(1656,47602
bool Item_in_subselect::fix_fields(1669,47882
Item_allany_subselect::select_transformer(1682,48230
void Item_allany_subselect::print(1691,48400
void subselect_engine::set_thd(1706,48745
subselect_single_select_engine(1715,48889
void subselect_single_select_engine::cleanup(1726,49206
void subselect_union_engine::cleanup(1736,49420
bool subselect_union_engine::is_executed(1745,49588
bool subselect_union_engine::no_rows(1766,50038
void subselect_uniquesubquery_engine::cleanup(1772,50218
subselect_union_engine::subselect_union_engine(1783,50454
int subselect_single_select_engine::prepare(1793,50687
int subselect_union_engine::prepare(1820,51489
int subselect_uniquesubquery_engine::prepare(1825,51587
bool subselect_single_select_engine::no_rows(1848,52080
void subselect_engine::set_row(1858,52291
void subselect_single_select_engine::fix_length_and_dec(1881,52980
void subselect_union_engine::fix_length_and_dec(1890,53235
void subselect_uniquesubquery_engine::fix_length_and_dec(1907,53629
int subselect_single_select_engine::exec(1918,53942
int subselect_union_engine::exec(2047,58108
int subselect_uniquesubquery_engine::scan_table(2074,58699
bool subselect_uniquesubquery_engine::copy_ref_key(2157,61607
int subselect_uniquesubquery_engine::exec(2241,64029
subselect_uniquesubquery_engine::~subselect_uniquesubquery_engine(2296,65378
int subselect_indexsubquery_engine::exec(2355,67445
uint subselect_single_select_engine::cols(2446,69894
uint subselect_union_engine::cols(2453,70070
uint8 subselect_single_select_engine::uncacheable(2460,70219
uint8 subselect_union_engine::uncacheable(2466,70311
void subselect_single_select_engine::exclude(2472,70389
void subselect_union_engine::exclude(2477,70487
void subselect_uniquesubquery_engine::exclude(2483,70557
table_map subselect_engine::calc_const_tables(2490,70661
table_map subselect_single_select_engine::upper_select_const_tables(2503,70900
table_map subselect_union_engine::upper_select_const_tables(2509,71045
void subselect_single_select_engine::print(2515,71176
void subselect_union_engine::print(2522,71352
void subselect_uniquesubquery_engine::print(2528,71466
void subselect_indexsubquery_engine::print(2547,72068
bool subselect_single_select_engine::change_result(2584,73004
bool subselect_union_engine::change_result(2605,73401
bool subselect_uniquesubquery_engine::change_result(2627,73806
bool subselect_single_select_engine::no_tables(2643,74157
bool subselect_single_select_engine::may_be_null(2659,74476
bool subselect_union_engine::no_tables(2673,74776
bool subselect_uniquesubquery_engine::no_tables(2693,75139

sql/item_sum.cc,8448
ulonglong Item_sum::ram_limitation(37,1051
bool Item_sum::init_sum_func_check(66,1955
bool Item_sum::check_sum_func(137,4758
bool Item_sum::register_sum_func(308,10983
Item_sum::Item_sum(374,13276
Item_sum::Item_sum(402,13810
void Item_sum::mark_as_sum_func(432,14636
void Item_sum::print(441,14817
void Item_sum::fix_num_length_and_dec(455,15163
Item *Item_sum::get_tmp_table_item(Item_sum::get_tmp_table_item463,15345
bool Item_sum::walk 485,15900
Field *Item_sum::create_tmp_field(Item_sum::create_tmp_field501,16252
void Item_sum::update_used_tables 535,17236
Item *Item_sum::set_arg(Item_sum::set_arg554,17659
int Item_sum::set_aggregator(561,17785
void Item_sum::cleanup(592,18633
static int simple_str_key_cmp(619,19233
int Aggregator_distinct::composite_key_cmp(641,19805
calc_tmp_field_type(662,20317
static int simple_raw_key_cmp(693,21100
static int item_sum_distinct_walk(699,21229
bool Aggregator_distinct::setup(722,21914
void Aggregator_distinct::clear(924,28441
bool Aggregator_distinct::add(964,29416
void Aggregator_distinct::endup(1023,31226
Item_sum_num::val_str(1078,32608
my_decimal *Item_sum_num::val_decimal(Item_sum_num::val_decimal1084,32685
Item_sum_int::val_str(1091,32812
my_decimal *Item_sum_int::val_decimal(Item_sum_int::val_decimal1097,32888
Item_sum_num::fix_fields(1104,33010
Item_sum_hybrid::fix_fields(1135,33630
void Item_sum_hybrid::setup_hybrid(1197,35120
Field *Item_sum_hybrid::create_tmp_field(Item_sum_hybrid::create_tmp_field1210,35478
Item_sum_sum::Item_sum_sum(1256,36800
Item *Item_sum_sum::copy_or_same(Item_sum_sum::copy_or_same1270,37212
void Item_sum_sum::clear(1276,37315
void Item_sum_sum::fix_length_and_dec(1291,37545
bool Item_sum_sum::add(1330,38792
longlong Item_sum_sum::val_int(1355,39312
double Item_sum_sum::val_real(1371,39641
String *Item_sum_sum::val_str(Item_sum_sum::val_str1382,39863
my_decimal *Item_sum_sum::val_decimal(Item_sum_sum::val_decimal1392,40057
bool Aggregator_distinct::unique_walk_function(1418,40869
Aggregator_distinct::~Aggregator_distinct(1426,41026
my_decimal *Aggregator_simple::arg_val_decimal(Aggregator_simple::arg_val_decimal1446,41294
double Aggregator_simple::arg_val_real(1452,41414
bool Aggregator_simple::arg_is_null(1458,41501
my_decimal *Aggregator_distinct::arg_val_decimal(Aggregator_distinct::arg_val_decimal1464,41585
double Aggregator_distinct::arg_val_real(1471,41772
bool Aggregator_distinct::arg_is_null(1478,41917
Item *Item_sum_count::copy_or_same(Item_sum_count::copy_or_same1485,42058
void Item_sum_count::clear(1491,42165
bool Item_sum_count::add(1497,42212
longlong Item_sum_count::val_int(1508,42377
void Item_sum_count::cleanup(1517,42503
void Item_sum_avg::fix_length_and_dec(1529,42657
Item *Item_sum_avg::copy_or_same(Item_sum_avg::copy_or_same1552,43551
Field *Item_sum_avg::create_tmp_field(Item_sum_avg::create_tmp_field1558,43654
void Item_sum_avg::clear(1583,44444
bool Item_sum_avg::add(1590,44513
double Item_sum_avg::val_real(1599,44644
my_decimal *Item_sum_avg::val_decimal(Item_sum_avg::val_decimal1613,44857
String *Item_sum_avg::val_str(Item_sum_avg::val_str1640,45447
double Item_sum_std::val_real(1654,45669
Item *Item_sum_std::copy_or_same(Item_sum_std::copy_or_same1662,45822
static void variance_fp_recurrence_next(1685,46451
static double variance_fp_recurrence_result(1703,46763
Item_sum_variance::Item_sum_variance(1716,47014
void Item_sum_variance::fix_length_and_dec(1726,47311
Item *Item_sum_variance::copy_or_same(Item_sum_variance::copy_or_same1765,48492
Field *Item_sum_variance::create_tmp_field(Item_sum_variance::create_tmp_field1776,48777
void Item_sum_variance::clear(1799,49385
bool Item_sum_variance::add(1804,49435
double Item_sum_variance::val_real(1817,49772
my_decimal *Item_sum_variance::val_decimal(Item_sum_variance::val_decimal1842,50461
void Item_sum_variance::reset_field(1849,50599
void Item_sum_variance::update_field(1872,51169
void Item_sum_hybrid::clear(1899,51908
double Item_sum_hybrid::val_real(1905,51978
longlong Item_sum_hybrid::val_int(1916,52203
my_decimal *Item_sum_hybrid::val_decimal(Item_sum_hybrid::val_decimal1928,52427
Item_sum_hybrid::val_str(1941,52695
void Item_sum_hybrid::cleanup(1953,52926
void Item_sum_hybrid::no_rows_in_result(1972,53382
Item *Item_sum_min::copy_or_same(Item_sum_min::copy_or_same1979,53462
bool Item_sum_min::add(1987,53631
Item *Item_sum_max::copy_or_same(Item_sum_max::copy_or_same2002,53882
bool Item_sum_max::add(2010,54051
longlong Item_sum_bit::val_int(2027,54328
void Item_sum_bit::clear(2034,54420
Item *Item_sum_or::copy_or_same(Item_sum_or::copy_or_same2039,54472
bool Item_sum_or::add(2045,54573
Item *Item_sum_xor::copy_or_same(Item_sum_xor::copy_or_same2053,54710
bool Item_sum_xor::add(2059,54813
Item *Item_sum_and::copy_or_same(Item_sum_and::copy_or_same2067,54951
bool Item_sum_and::add(2073,55054
void Item_sum_num::reset_field(2085,55401
void Item_sum_hybrid::reset_field(2104,55687
void Item_sum_sum::reset_field(2186,57222
void Item_sum_count::reset_field(2209,57823
void Item_sum_avg::reset_field(2221,58065
void Item_sum_bit::reset_field(2257,58820
void Item_sum_bit::update_field(2263,58915
void Item_sum_sum::update_field(2276,59101
void Item_sum_count::update_field(2315,59999
void Item_sum_avg::update_field(2327,60192
void Item_sum_hybrid::update_field(2370,61271
Item_sum_hybrid::min_max_update_str_field(2389,61589
Item_sum_hybrid::min_max_update_real_field(2407,62010
Item_sum_hybrid::min_max_update_int_field(2427,62414
Item_sum_hybrid::min_max_update_decimal_field(2459,63081
Item_avg_field::Item_avg_field(2484,63772
double Item_avg_field::val_real(2502,64222
longlong Item_avg_field::val_int(2522,64588
my_decimal *Item_avg_field::val_decimal(Item_avg_field::val_decimal2528,64667
String *Item_avg_field::val_str(Item_avg_field::val_str2548,65276
Item_std_field::Item_std_field(2557,65485
double Item_std_field::val_real(2563,65572
my_decimal *Item_std_field::val_decimal(Item_std_field::val_decimal2573,65753
Item_variance_field::Item_variance_field(2596,66393
double Item_variance_field::val_real(2618,66970
void Item_udf_sum::clear(2645,67785
bool Item_udf_sum::add(2652,67889
void Item_udf_sum::cleanup(2659,67996
void Item_udf_sum::print(2670,68205
Item *Item_sum_udf_float::copy_or_same(Item_sum_udf_float::copy_or_same2684,68464
double Item_sum_udf_float::val_real(2689,68578
String *Item_sum_udf_float::val_str(Item_sum_udf_float::val_str2699,68826
my_decimal *Item_sum_udf_float::val_decimal(Item_sum_udf_float::val_decimal2705,68917
String *Item_sum_udf_decimal::val_str(Item_sum_udf_decimal::val_str2711,69021
double Item_sum_udf_decimal::val_real(2717,69117
longlong Item_sum_udf_decimal::val_int(2723,69197
my_decimal *Item_sum_udf_decimal::val_decimal(Item_sum_udf_decimal::val_decimal2729,69277
Item *Item_sum_udf_decimal::copy_or_same(Item_sum_udf_decimal::copy_or_same2740,69597
Item *Item_sum_udf_int::copy_or_same(Item_sum_udf_int::copy_or_same2746,69716
longlong Item_sum_udf_int::val_int(2751,69826
String *Item_sum_udf_int::val_str(Item_sum_udf_int::val_str2761,70079
my_decimal *Item_sum_udf_int::val_decimal(Item_sum_udf_int::val_decimal2766,70166
void Item_sum_udf_str::fix_length_and_dec(2774,70318
Item *Item_sum_udf_str::copy_or_same(Item_sum_udf_str::copy_or_same2784,70548
my_decimal *Item_sum_udf_str::val_decimal(Item_sum_udf_str::val_decimal2790,70659
String *Item_sum_udf_str::val_str(Item_sum_udf_str::val_str2795,70762
int group_concat_key_cmp_with_distinct(2838,71765
int group_concat_key_cmp_with_order(2877,72823
int dump_leaf_key(2924,74224
Item_func_group_concat(3014,76978
Item_func_group_concat::Item_func_group_concat(3074,78613
void Item_func_group_concat::cleanup(3123,80254
Field *Item_func_group_concat::make_string_field(Item_func_group_concat::make_string_field3158,80939
Item *Item_func_group_concat::copy_or_same(Item_func_group_concat::copy_or_same3183,81813
void Item_func_group_concat::clear(3189,81936
bool Item_func_group_concat::add(3204,82228
Item_func_group_concat::fix_fields(3262,83984
bool Item_func_group_concat::setup(3323,85645
void Item_func_group_concat::make_unique(3449,89708
String* Item_func_group_concat::val_str(3459,89840
void Item_func_group_concat::print(3471,90113
Item_func_group_concat::~Item_func_group_concat(3502,90920

sql/item_timefunc.cc,6934
#define MAX_DAY_NUMBER 58,2132
static bool make_datetime(78,2750
static bool make_datetime_with_warn(137,4371
static bool make_time_with_warn(167,5109
static bool sec_to_time(206,6201
static DATE_TIME_FORMAT time_ampm_format=253,7330
static DATE_TIME_FORMAT time_24hrs_format=255,7460
static bool extract_date_time(291,8877
bool make_date_time(634,17879
static bool get_interval_info(879,25612
longlong Item_func_period_add::val_int(932,26982
longlong Item_func_period_diff::val_int(947,27376
longlong Item_func_to_days::val_int(961,27754
longlong Item_func_to_seconds::val_int_endpoint(971,27973
longlong Item_func_to_seconds::val_int(999,28939
enum_monotonicity_info Item_func_to_days::get_monotonicity_info(1027,29606
enum_monotonicity_info Item_func_to_seconds::get_monotonicity_info(1039,29957
longlong Item_func_to_days::val_int_endpoint(1051,30270
longlong Item_func_dayofyear::val_int(1108,32035
longlong Item_func_dayofmonth::val_int(1118,32291
longlong Item_func_month::val_int(1126,32464
void Item_func_monthname::fix_length_and_dec(1135,32635
String* Item_func_monthname::val_str(1148,33023
longlong Item_func_quarter::val_int(1169,33496
longlong Item_func_hour::val_int(1178,33687
longlong Item_func_minute::val_int(1186,33827
longlong Item_func_second::val_int(1197,34035
uint week_mode(1206,34180
longlong Item_func_week::val_int(1245,35477
longlong Item_func_yearweek::val_int(1258,35742
longlong Item_func_weekday::val_int(1272,36033
void Item_func_dayname::fix_length_and_dec(1285,36377
String* Item_func_dayname::val_str(1298,36761
longlong Item_func_year::val_int(1315,37154
enum_monotonicity_info Item_func_year::get_monotonicity_info(1338,37581
longlong Item_func_year::val_int_endpoint(1348,37863
longlong Item_func_unix_timestamp::val_int(1378,38687
enum_monotonicity_info Item_func_unix_timestamp::get_monotonicity_info(1407,39477
longlong Item_func_unix_timestamp::val_int_endpoint(1416,39719
longlong Item_func_time_to_sec::val_int(1428,40131
bool get_interval_value(1445,40489
String *Item_date::val_str(Item_date::val_str1576,44378
longlong Item_date::val_int(1592,44699
bool Item_func_from_days::get_date(1602,44904
void Item_func_curdate::fix_length_and_dec(1619,45383
String *Item_func_curdate::val_str(Item_func_curdate::val_str1631,45711
void Item_func_curdate_local::store_now_in_TIME(1647,46113
void Item_func_curdate_utc::store_now_in_TIME(1660,46529
bool Item_func_curdate::get_date(1671,46826
String *Item_func_curtime::val_str(Item_func_curtime::val_str1679,46954
void Item_func_curtime::fix_length_and_dec(1687,47112
void Item_func_curtime_local::store_now_in_TIME(1703,47540
void Item_func_curtime_utc::store_now_in_TIME(1716,47956
String *Item_func_now::val_str(Item_func_now::val_str1727,48253
void Item_func_now::fix_length_and_dec(1735,48408
void Item_func_now_local::store_now_in_TIME(1751,48828
void Item_func_now_utc::store_now_in_TIME(1764,49245
bool Item_func_now::get_date(1775,49538
int Item_func_now::save_in_field(1783,49687
void Item_func_sysdate_local::store_now_in_TIME(1794,49998
String *Item_func_sysdate_local::val_str(Item_func_sysdate_local::val_str1802,50204
longlong Item_func_sysdate_local::val_int(1812,50454
double Item_func_sysdate_local::val_real(1820,50616
void Item_func_sysdate_local::fix_length_and_dec(1828,50784
bool Item_func_sysdate_local::get_date(1835,50911
int Item_func_sysdate_local::save_in_field(1844,51109
String *Item_func_sec_to_time::val_str(Item_func_sec_to_time::val_str1853,51304
longlong Item_func_sec_to_time::val_int(1873,51714
void Item_func_date_format::fix_length_and_dec(1889,52068
bool Item_func_date_format::eq(1921,52983
uint Item_func_date_format::format_length(1946,53601
String *Item_func_date_format::val_str(Item_func_date_format::val_str2019,55749
void Item_func_from_unixtime::fix_length_and_dec(2077,57071
String *Item_func_from_unixtime::val_str(Item_func_from_unixtime::val_str2087,57273
longlong Item_func_from_unixtime::val_int(2108,57590
bool Item_func_from_unixtime::get_date(2120,57795
void Item_func_convert_tz::fix_length_and_dec(2137,58258
String *Item_func_convert_tz::val_str(Item_func_convert_tz::val_str2145,58399
longlong Item_func_convert_tz::val_int(2164,58685
bool Item_func_convert_tz::get_date(2175,58861
void Item_func_convert_tz::cleanup(2213,59697
void Item_date_add_interval::fix_length_and_dec(2220,59804
bool Item_date_add_interval::get_date(2269,61295
String *Item_date_add_interval::val_str_ascii(Item_date_add_interval::val_str_ascii2286,61694
longlong Item_date_add_interval::val_int(2310,62181
bool Item_date_add_interval::eq(2324,62575
static const char *interval_names[interval_names2338,62979
void Item_date_add_interval::print(2349,63308
void Item_extract::print(2360,63624
void Item_extract::fix_length_and_dec(2369,63877
longlong Item_extract::val_int(2398,65324
bool Item_extract::eq(2472,67901
bool Item_char_typecast::eq(2490,68267
void Item_typecast::print(2508,68700
void Item_char_typecast::print(2518,68937
String *Item_char_typecast::val_str(Item_char_typecast::val_str2541,69534
void Item_char_typecast::fix_length_and_dec(2628,71959
String *Item_datetime_typecast::val_str(Item_datetime_typecast::val_str2672,73971
longlong Item_datetime_typecast::val_int(2687,74270
bool Item_time_typecast::get_time(2701,74499
longlong Item_time_typecast::val_int(2715,74852
String *Item_time_typecast::val_str(Item_time_typecast::val_str2727,75084
bool Item_date_typecast::get_date(2742,75356
bool Item_date_typecast::get_time(2751,75607
String *Item_date_typecast::val_str(Item_date_typecast::val_str2758,75740
longlong Item_date_typecast::val_int(2774,76043
String *Item_func_makedate::val_str(Item_func_makedate::val_str2793,76612
longlong Item_func_makedate::val_int(2836,77695
void Item_func_add_time::fix_length_and_dec(2866,78391
MYSQL_TIME *Item_func_add_time::val_datetime(Item_func_add_time::val_datetime2903,79444
String *Item_func_add_time::val_str(Item_func_add_time::val_str2972,81359
longlong Item_func_add_time::val_int(2990,81634
void Item_func_add_time::print(3004,81845
String *Item_func_timediff::val_str(Item_func_timediff::val_str3033,82437
String *Item_func_maketime::val_str(Item_func_maketime::val_str3081,83711
longlong Item_func_microsecond::val_int(3150,85410
longlong Item_func_timestamp_diff::val_int(3160,85577
void Item_func_timestamp_diff::print(3265,88398
String *Item_func_get_format::val_str_ascii(Item_func_get_format::val_str_ascii3311,89417
void Item_func_get_format::print(3345,90276
get_date_time_result_type(3393,91400
void Item_func_str_to_date::fix_length_and_dec(3437,92531
bool Item_func_str_to_date::get_date(3478,93895
String *Item_func_str_to_date::val_str(Item_func_str_to_date::val_str3524,95452
longlong Item_func_str_to_date::val_int(3540,95818
bool Item_func_last_day::get_date(3563,96318

sql/item_xmlfunc.cc,14077
typedef struct my_xml_node_st58,1780
} MY_XML_NODE;66,2262
typedef struct my_xpath_lex_st70,2308
} MY_XPATH_LEX;75,2542
typedef struct my_xpath_flt_st79,2594
} MY_XPATH_FLT;84,2810
typedef struct my_xpath_function_names_st88,2857
} MY_XPATH_FUNC;95,3176
typedef struct my_xpath_st99,3220
} MY_XPATH;115,4151
class XPathFilter 119,4201
  XPathFilter(XPathFilter::XPathFilter122,4244
  inline bool append_element(XPathFilter::append_element123,4273
  inline bool append_element(XPathFilter::append_element128,4425
  inline bool append_element(XPathFilter::append_element136,4594
  inline MY_XPATH_FLT *element(XPathFilter::element144,4779
  inline uint32 numelements(XPathFilter::numelements148,4890
class Item_nodeset_func 158,5040
  Item_nodeset_func(Item_nodeset_func::Item_nodeset_func168,5263
  Item_nodeset_func(Item_nodeset_func::Item_nodeset_func169,5337
  Item_nodeset_func(Item_nodeset_func::Item_nodeset_func171,5426
  Item_nodeset_func(Item_nodeset_func::Item_nodeset_func173,5527
  void prepare_nodes(Item_nodeset_func::prepare_nodes175,5638
  void prepare(Item_nodeset_func::prepare181,5803
  enum Type type(Item_nodeset_func::type189,6037
  String *val_str(Item_nodeset_func::val_str190,6088
  enum Item_result result_type Item_nodeset_func::result_type224,6985
  void fix_length_and_dec(Item_nodeset_func::fix_length_and_dec225,7051
  const char *func_name(Item_nodeset_func::func_name230,7161
class Item_nodeset_func_rootelement 235,7246
  Item_nodeset_func_rootelement(Item_nodeset_func_rootelement::Item_nodeset_func_rootelement238,7318
  const char *func_name(Item_nodeset_func_rootelement::func_name239,7392
class Item_nodeset_func_union 245,7540
  Item_nodeset_func_union(Item_nodeset_func_union::Item_nodeset_func_union248,7606
  const char *func_name(Item_nodeset_func_union::func_name250,7702
class Item_nodeset_func_axisbyname 256,7849
  Item_nodeset_func_axisbyname(Item_nodeset_func_axisbyname::Item_nodeset_func_axisbyname261,7966
  const char *func_name(Item_nodeset_func_axisbyname::func_name264,8158
  bool validname(Item_nodeset_func_axisbyname::validname265,8221
class Item_nodeset_func_selfbyname:Item_nodeset_func_selfbyname276,8442
  Item_nodeset_func_selfbyname(Item_nodeset_func_selfbyname::Item_nodeset_func_selfbyname279,8524
  const char *func_name(Item_nodeset_func_selfbyname::func_name282,8702
class Item_nodeset_func_childbyname:Item_nodeset_func_childbyname288,8833
  Item_nodeset_func_childbyname(Item_nodeset_func_childbyname::Item_nodeset_func_childbyname291,8916
  const char *func_name(Item_nodeset_func_childbyname::func_name294,9095
class Item_nodeset_func_descendantbyname:Item_nodeset_func_descendantbyname300,9230
  Item_nodeset_func_descendantbyname(Item_nodeset_func_descendantbyname::Item_nodeset_func_descendantbyname304,9336
  const char *func_name(Item_nodeset_func_descendantbyname::func_name308,9578
class Item_nodeset_func_ancestorbyname:Item_nodeset_func_ancestorbyname314,9716
  Item_nodeset_func_ancestorbyname(Item_nodeset_func_ancestorbyname::Item_nodeset_func_ancestorbyname318,9820
  const char *func_name(Item_nodeset_func_ancestorbyname::func_name322,10057
class Item_nodeset_func_parentbyname:Item_nodeset_func_parentbyname328,10191
  Item_nodeset_func_parentbyname(Item_nodeset_func_parentbyname::Item_nodeset_func_parentbyname331,10275
  const char *func_name(Item_nodeset_func_parentbyname::func_name334,10456
class Item_nodeset_func_attributebyname:Item_nodeset_func_attributebyname340,10591
  Item_nodeset_func_attributebyname(Item_nodeset_func_attributebyname::Item_nodeset_func_attributebyname343,10678
  const char *func_name(Item_nodeset_func_attributebyname::func_name346,10865
class Item_nodeset_func_predicate 356,11132
  Item_nodeset_func_predicate(Item_nodeset_func_predicate::Item_nodeset_func_predicate359,11202
  const char *func_name(Item_nodeset_func_predicate::func_name361,11302
class Item_nodeset_func_elementbyindex 367,11462
  Item_nodeset_func_elementbyindex(Item_nodeset_func_elementbyindex::Item_nodeset_func_elementbyindex370,11537
  const char *func_name(Item_nodeset_func_elementbyindex::func_name372,11644
class Item_bool 381,11862
  Item_bool(Item_bool::Item_bool384,11905
  const char *func_name(Item_bool::func_name385,11942
  bool is_bool_func(Item_bool::is_bool_func386,11999
class Item_xpath_cast_bool 396,12244
  Item_xpath_cast_bool(Item_xpath_cast_bool::Item_xpath_cast_bool401,12339
  const char *func_name(Item_xpath_cast_bool::func_name403,12430
  bool is_bool_func(Item_xpath_cast_bool::is_bool_func404,12492
  longlong val_int(Item_xpath_cast_bool::val_int405,12528
class Item_xpath_cast_number 420,12813
  Item_xpath_cast_number(Item_xpath_cast_number::Item_xpath_cast_number423,12875
  const char *func_name(Item_xpath_cast_number::func_name424,12931
  virtual double val_real(Item_xpath_cast_number::val_real425,12995
class Item_nodeset_context_cache 432,13097
  Item_nodeset_context_cache(Item_nodeset_context_cache::Item_nodeset_context_cache436,13190
  String *val_nodeset(Item_nodeset_context_cache::val_nodeset438,13306
  void fix_length_and_dec(Item_nodeset_context_cache::fix_length_and_dec440,13368
class Item_func_xpath_position 444,13433
  Item_func_xpath_position(Item_func_xpath_position::Item_func_xpath_position449,13532
  const char *func_name(Item_func_xpath_position::func_name451,13613
  void fix_length_and_dec(Item_func_xpath_position::fix_length_and_dec452,13674
  longlong val_int(Item_func_xpath_position::val_int453,13721
class Item_func_xpath_count 463,13918
  Item_func_xpath_count(Item_func_xpath_count::Item_func_xpath_count468,14014
  const char *func_name(Item_func_xpath_count::func_name470,14092
  void fix_length_and_dec(Item_func_xpath_count::fix_length_and_dec471,14150
  longlong val_int(Item_func_xpath_count::val_int472,14197
class Item_func_xpath_sum 484,14546
  Item_func_xpath_sum(Item_func_xpath_sum::Item_func_xpath_sum489,14641
  const char *func_name(Item_func_xpath_sum::func_name492,14719
  double val_real(Item_func_xpath_sum::val_real493,14775
class Item_nodeset_to_const_comparator 527,15746
  Item_nodeset_to_const_comparator(Item_nodeset_to_const_comparator::Item_nodeset_to_const_comparator532,15856
  enum Type type(Item_nodeset_to_const_comparator::type534,15982
  const char *func_name(Item_nodeset_to_const_comparator::func_name535,16038
  bool is_bool_func(Item_nodeset_to_const_comparator::is_bool_func536,16118
  longlong val_int(Item_nodeset_to_const_comparator::val_int538,16155
String *Item_nodeset_func_rootelement::val_nodeset(Item_nodeset_func_rootelement::val_nodeset571,17156
String * Item_nodeset_func_union::val_nodeset(579,17319
String *Item_nodeset_func_selfbyname::val_nodeset(Item_nodeset_func_selfbyname::val_nodeset610,18162
String *Item_nodeset_func_childbyname::val_nodeset(Item_nodeset_func_childbyname::val_nodeset624,18484
String *Item_nodeset_func_descendantbyname::val_nodeset(Item_nodeset_func_descendantbyname::val_nodeset645,19035
String *Item_nodeset_func_ancestorbyname::val_nodeset(Item_nodeset_func_ancestorbyname::val_nodeset667,19651
String *Item_nodeset_func_parentbyname::val_nodeset(Item_nodeset_func_parentbyname::val_nodeset709,20548
String *Item_nodeset_func_attributebyname::val_nodeset(Item_nodeset_func_attributebyname::val_nodeset732,21095
String *Item_nodeset_func_predicate::val_nodeset(Item_nodeset_func_predicate::val_nodeset753,21649
String *Item_nodeset_func_elementbyindex::val_nodeset(Item_nodeset_func_elementbyindex::val_nodeset773,22327
static Item* nodeset2bool(797,23173
#define MY_XPATH_LEX_DIGITS 808,23377
#define MY_XPATH_LEX_IDENT 809,23411
#define MY_XPATH_LEX_STRING 810,23445
#define MY_XPATH_LEX_SLASH 811,23479
#define MY_XPATH_LEX_LB 812,23513
#define MY_XPATH_LEX_RB 813,23547
#define MY_XPATH_LEX_LP 814,23581
#define MY_XPATH_LEX_RP 815,23615
#define MY_XPATH_LEX_EQ 816,23649
#define MY_XPATH_LEX_LESS 817,23683
#define MY_XPATH_LEX_GREATER 818,23717
#define MY_XPATH_LEX_AT 819,23751
#define MY_XPATH_LEX_COLON 820,23785
#define MY_XPATH_LEX_ASTERISK 821,23819
#define MY_XPATH_LEX_DOT 822,23853
#define MY_XPATH_LEX_VLINE 823,23887
#define MY_XPATH_LEX_MINUS 824,23921
#define MY_XPATH_LEX_PLUS 825,23955
#define MY_XPATH_LEX_EXCL 826,23989
#define MY_XPATH_LEX_COMMA 827,24023
#define MY_XPATH_LEX_DOLLAR 828,24057
#define MY_XPATH_LEX_ERROR 829,24091
#define MY_XPATH_LEX_EOF 830,24125
#define MY_XPATH_LEX_AND 831,24159
#define MY_XPATH_LEX_OR 832,24193
#define MY_XPATH_LEX_DIV 833,24227
#define MY_XPATH_LEX_MOD 834,24261
#define MY_XPATH_LEX_FUNC 835,24295
#define MY_XPATH_LEX_NODETYPE 836,24329
#define MY_XPATH_LEX_AXIS 837,24363
#define MY_XPATH_LEX_LE 838,24397
#define MY_XPATH_LEX_GE 839,24431
#define MY_XPATH_AXIS_ANCESTOR 845,24491
#define MY_XPATH_AXIS_ANCESTOR_OR_SELF 846,24535
#define MY_XPATH_AXIS_ATTRIBUTE 847,24579
#define MY_XPATH_AXIS_CHILD 848,24623
#define MY_XPATH_AXIS_DESCENDANT 849,24667
#define MY_XPATH_AXIS_DESCENDANT_OR_SELF 850,24711
#define MY_XPATH_AXIS_FOLLOWING 851,24755
#define MY_XPATH_AXIS_FOLLOWING_SIBLING 852,24799
#define MY_XPATH_AXIS_NAMESPACE 853,24843
#define MY_XPATH_AXIS_PARENT 854,24887
#define MY_XPATH_AXIS_PRECEDING 855,24931
#define MY_XPATH_AXIS_PRECEDING_SIBLING 856,24975
#define MY_XPATH_AXIS_SELF 857,25019
static Item *eq_func(eq_func870,25246
static Item *eq_func_reverse(eq_func_reverse897,25893
static Item *create_comparator(create_comparator922,26498
static Item* nametestfunc(983,28194
static char simpletok[simpletok1025,29495
struct my_xpath_keyword_names_st1042,30026
static struct my_xpath_keyword_names_st my_keyword_names[my_keyword_names1051,30127
static struct my_xpath_keyword_names_st my_axis_names[my_axis_names1061,30460
static struct my_xpath_keyword_names_st my_nodetype_names[my_nodetype_names1080,31579
my_xpath_keyword(1101,32107
static Item *create_func_true(create_func_true1123,32594
static Item *create_func_false(create_func_false1129,32700
static Item *create_func_not(create_func_not1135,32807
static Item *create_func_ceiling(create_func_ceiling1141,32943
static Item *create_func_floor(create_func_floor1147,33065
static Item *create_func_bool(create_func_bool1153,33183
static Item *create_func_number(create_func_number1159,33318
static Item *create_func_string_length(create_func_string_length1165,33444
static Item *create_func_round(create_func_round1172,33629
static Item *create_func_last(create_func_last1178,33779
static Item *create_func_position(create_func_position1185,33956
static Item *create_func_contains(create_func_contains1192,34140
static Item *create_func_concat(create_func_concat1199,34344
static Item *create_func_substr(create_func_substr1205,34475
static Item *create_func_count(create_func_count1214,34691
static Item *create_func_sum(create_func_sum1222,34890
static MY_XPATH_FUNC my_func_names3[my_func_names31234,35180
static MY_XPATH_FUNC my_func_names4[my_func_names41242,35329
static MY_XPATH_FUNC my_func_names5[my_func_names51252,35524
static MY_XPATH_FUNC my_func_names6[my_func_names61262,35758
static MY_XPATH_FUNC my_func_names[my_func_names1272,36010
my_xpath_function(1306,36969
my_xpath_lex_init(1328,37585
my_xpath_init(1338,37771
my_xdigit(1345,37860
my_xpath_lex_scan(1363,38160
my_xpath_parse_term(1477,41027
static int my_xpath_parse_AxisName(1500,41457
#define my_xpath_parse_PredicateExpr(1517,41993
#define my_xpath_parse_Expr(1520,42086
static int my_xpath_parse_LocationPath(1557,43524
static int my_xpath_parse_AbsoluteLocationPath(1590,44371
static int my_xpath_parse_RelativeLocationPath(1633,45562
my_xpath_parse_AxisSpecifier_NodeTest_opt_Predicate_list(1667,46368
static int my_xpath_parse_Step(1714,47644
static int my_xpath_parse_AbbreviatedAxisSpecifier(1733,48009
static int my_xpath_parse_AxisName_colon_colon(1752,48331
static int my_xpath_parse_AxisSpecifier(1770,48698
static int my_xpath_parse_NodeTest_lp_rp(1786,48968
static int my_xpath_parse_NodeTest(1806,49410
static int my_xpath_parse_AbbreviatedStep(1824,49682
static int my_xpath_parse_lp_Expr_rp(1849,50298
static int my_xpath_parse_PrimaryExpr_literal(1855,50505
static int my_xpath_parse_PrimaryExpr(1864,50828
static int my_xpath_parse_FunctionCall(1887,51338
static int my_xpath_parse_UnionExpr(1937,52276
my_xpath_parse_FilterExpr_opt_slashes_RelativeLocationPath(1974,53065
static int my_xpath_parse_PathExpr(2009,54022
static int my_xpath_parse_FilterExpr(2033,54454
static int my_xpath_parse_OrExpr(2050,54711
static int my_xpath_parse_AndExpr(2081,55313
static int my_xpath_parse_ne(2117,56111
static int my_xpath_parse_EqualityOperator(2131,56458
static int my_xpath_parse_EqualityExpr(2145,56707
static int my_xpath_parse_RelationalOperator(2190,57796
static int my_xpath_parse_RelationalExpr(2206,58274
static int my_xpath_parse_AdditiveOperator(2244,59143
static int my_xpath_parse_AdditiveExpr(2249,59320
static int my_xpath_parse_MultiplicativeOperator(2290,60306
static int my_xpath_parse_MultiplicativeExpr(2297,60555
static int my_xpath_parse_UnaryExpr(2339,61417
static int my_xpath_parse_Number(2374,62175
my_xpath_parse_NCName(2412,63000
my_xpath_parse_QName(2433,63547
my_xpath_parse_VariableReference(2476,64545
my_xpath_parse_NodeTest_QName(2536,66034
my_xpath_parse_NodeTest_asterisk(2547,66366
my_xpath_parse_NameTest(2556,66622
my_xpath_parse(2575,66941
void Item_xml_str_func::fix_length_and_dec(2589,67341
#define MAX_LEVEL 2642,68589
} MY_XML_USER_DATA;2649,68795
append_node(2653,68829
int xml_enter(2687,69756
int xml_value(2722,70743
int xml_leave(2750,71419
String *Item_xml_str_func::parse_xml(Item_xml_str_func::parse_xml2775,71895
String *Item_func_xml_extractvalue::val_str(Item_func_xml_extractvalue::val_str2816,73138
String *Item_func_xml_update::val_str(Item_func_xml_update::val_str2832,73434

sql/key.cc,242
int find_ref_key(51,1747
void key_copy(111,3468
void key_restore(162,4987
bool key_cmp_if_same(261,8097
void field_unpack(327,10079
void key_unpack(393,11962
bool is_key_used(441,13268
int key_cmp(473,14215
int key_rec_cmp(539,16607

sql/keycaches.cc,582
NAMED_ILIST key_caches;22,948
class NAMED_ILINK 27,1025
  NAMED_ILINK(NAMED_ILINK::NAMED_ILINK34,1123
  inline bool cmp(NAMED_ILINK::cmp41,1383
  ~NAMED_ILINK(NAMED_ILINK::~NAMED_ILINK45,1513
uchar* find_named(51,1570
void NAMED_ILIST::delete_elements(69,1919
LEX_STRING default_key_cache_base=84,2230
KEY_CACHE zero_key_cache;86,2298
KEY_CACHE *get_key_cache(get_key_cache88,2381
KEY_CACHE *create_key_cache(create_key_cache96,2642
KEY_CACHE *get_or_create_key_cache(get_or_create_key_cache127,3584
void free_key_cache(140,3899
bool process_key_caches(147,4037

sql/lock.cc,1082
#define GET_LOCK_UNLOCK 94,3315
#define GET_LOCK_STORE_LOCKS 95,3349
static int thr_lock_errno_to_mysql[thr_lock_errno_to_mysql104,3753
lock_tables_check(116,4125
static void reset_lock_data(238,8359
static void reset_lock_data_and_free(262,8847
MYSQL_LOCK *mysql_lock_tables(mysql_lock_tables284,9480
static int lock_external(343,11285
void mysql_unlock_tables(380,12219
void mysql_unlock_some_tables(397,12686
void mysql_unlock_read_tables(409,12936
void mysql_lock_remove(476,14697
void mysql_lock_abort(539,16677
bool mysql_lock_abort_for_thread(566,17290
MYSQL_LOCK *mysql_lock_merge(mysql_lock_merge586,17766
static int unlock_external(632,19257
static MYSQL_LOCK *get_lock_data(get_lock_data665,20061
bool lock_schema_name(767,23877
bool lock_object_name(821,25686
static void print_lock_error(860,26871
bool Global_read_lock::lock_global_read_lock(959,30622
void Global_read_lock::unlock_global_read_lock(1000,31862
bool Global_read_lock::make_global_read_lock_block_commit(1034,32669
void Global_read_lock::set_explicit_lock_duration(1064,33469

sql/log.cc,10110
#define MAX_LOG_BUFFER_SIZE 55,1778
#define MAX_TIME_SIZE 56,1811
#define MY_OFF_T_UNDEF 57,1836
#define FLAGSTR(59,1877
LOGGER logger;61,1918
MYSQL_BIN_LOG mysql_bin_log(&sync_binlog_period)sync_binlog_period63,1934
uint purge_log_get_error_code(84,2770
class Silence_log_table_errors 111,3702
  Silence_log_table_errors(Silence_log_table_errors::Silence_log_table_errors115,3812
  virtual ~Silence_log_table_errors(Silence_log_table_errors::~Silence_log_table_errors120,3874
  const char *message(Silence_log_table_errors::message128,4239
Silence_log_table_errors::handle_condition(132,4300
sql_print_message_func sql_print_message_handlers[sql_print_message_handlers144,4746
char *make_log_name(make_log_name163,5212
class Mutex_sentry178,5664
  Mutex_sentry(Mutex_sentry::Mutex_sentry181,5693
  ~Mutex_sentry(Mutex_sentry::~Mutex_sentry188,5808
class binlog_cache_data209,6208
  binlog_cache_data(binlog_cache_data::binlog_cache_data212,6242
  ~binlog_cache_data(binlog_cache_data::~binlog_cache_data218,6475
  bool empty(binlog_cache_data::empty224,6568
  Rows_log_event *pending(binlog_cache_data::pending229,6658
  void set_pending(binlog_cache_data::set_pending234,6723
  void set_incident(binlog_cache_data::set_incident239,6806
  bool has_incident(binlog_cache_data::has_incident244,6863
  void set_changes_to_non_trans_temp_table(binlog_cache_data::set_changes_to_non_trans_temp_table249,6920
  bool changes_to_non_trans_temp_table(binlog_cache_data::changes_to_non_trans_temp_table254,7026
  void reset(binlog_cache_data::reset259,7131
  my_off_t get_byte_position(binlog_cache_data::get_byte_position277,7732
  my_off_t get_prev_position(binlog_cache_data::get_prev_position282,7812
  void set_prev_position(binlog_cache_data::set_prev_position287,7882
  void restore_prev_position(binlog_cache_data::restore_prev_position292,7959
  void restore_savepoint(binlog_cache_data::restore_savepoint297,8030
  void set_binlog_cache_info(binlog_cache_data::set_binlog_cache_info304,8167
  void compute_statistics(binlog_cache_data::compute_statistics366,10132
  void truncate(binlog_cache_data::truncate401,11153
class binlog_cache_mngr 417,11571
  binlog_cache_mngr(binlog_cache_mngr::binlog_cache_mngr419,11605
  void reset_cache(binlog_cache_mngr::reset_cache434,12397
  binlog_cache_data* get_binlog_cache_data(binlog_cache_mngr::get_binlog_cache_data439,12481
  IO_CACHE* get_binlog_cache_log(binlog_cache_mngr::get_binlog_cache_log444,12614
handlerton *binlog_hton;binlog_hton459,12951
bool LOGGER::is_log_table_enabled(461,12977
int check_if_log_table(476,13379
Log_to_csv_event_handler::Log_to_csv_event_handler(507,14407
Log_to_csv_event_handler::~Log_to_csv_event_handler(512,14466
void Log_to_csv_event_handler::cleanup(517,14526
  log_general(555,15945
  log_slow(719,20993
  activate_log(878,25900
  log_error(915,26758
  log_error(923,26933
void Log_to_file_event_handler::init_pthread_objects(929,27066
  log_slow(939,27293
  log_general(961,28122
bool Log_to_file_event_handler::init(977,28735
void Log_to_file_event_handler::cleanup(994,28994
void Log_to_file_event_handler::flush(1000,29092
bool LOGGER::error_log_print(1025,29625
void LOGGER::cleanup_base(1039,30041
void LOGGER::cleanup_end(1054,30324
void LOGGER::init_base(1070,30581
void LOGGER::init_log_tables(1091,31136
bool LOGGER::flush_logs(1102,31389
bool LOGGER::flush_slow_log(1126,31772
bool LOGGER::flush_general_log(1150,32192
bool LOGGER::slow_log_print(1185,32910
bool LOGGER::general_log_write(1256,35067
bool LOGGER::general_log_print(1296,36274
void LOGGER::init_error_log(1312,36758
void LOGGER::init_slow_log(1335,37200
void LOGGER::init_general_log(1360,37766
bool LOGGER::activate_log_handler(1386,38369
void LOGGER::deactivate_log_handler(1438,39495
bool Log_to_csv_event_handler::init(1467,40057
int LOGGER::set_handlers(1472,40112
binlog_trans_log_savepos(1516,41251
binlog_trans_log_truncate(1547,42039
int binlog_init(1569,42672
static int binlog_close_connection(1585,43259
binlog_flush_cache(1612,44145
binlog_commit_flush_stmt_cache(1651,45369
binlog_commit_flush_trx_cache(1670,45969
binlog_rollback_flush_trx_cache(1688,46536
binlog_commit_flush_trx_cache(1707,47148
binlog_truncate_trx_cache(1728,47880
static int binlog_prepare(1768,49135
static int binlog_commit(1791,49743
static int binlog_rollback(1850,51497
void MYSQL_BIN_LOG::set_write_error(1952,55243
bool MYSQL_BIN_LOG::check_write_error(1980,55777
static int binlog_savepoint_set(2026,57535
static int binlog_savepoint_rollback(2052,58432
int check_binlog_magic(2085,59643
File open_binlog(2106,60195
static int eventSource 2142,61144
static void setup_windows_event_source(2144,61173
static int find_uniq_filename(2193,62645
void MYSQL_LOG::init(2278,64969
bool MYSQL_LOG::init_and_set_log_file_name(2289,65244
bool MYSQL_LOG::open(2326,66298
MYSQL_LOG::MYSQL_LOG(2413,69040
void MYSQL_LOG::init_pthread_objects(2426,69470
void MYSQL_LOG::close(2447,70011
void MYSQL_LOG::cleanup(2476,70740
int MYSQL_LOG::generate_new_name(2489,70904
void MYSQL_QUERY_LOG::reopen_file(2521,71541
bool MYSQL_QUERY_LOG::write(2580,72877
bool MYSQL_QUERY_LOG::write(2683,75944
const char *MYSQL_LOG::generate_name(MYSQL_LOG::generate_name2818,80431
MYSQL_BIN_LOG::MYSQL_BIN_LOG(2841,81095
void MYSQL_BIN_LOG::cleanup(2861,81817
void MYSQL_BIN_LOG::init(2879,82207
void MYSQL_BIN_LOG::init_pthread_objects(2889,82454
bool MYSQL_BIN_LOG::open_index_file(2897,82666
bool MYSQL_BIN_LOG::open(2977,85286
int MYSQL_BIN_LOG::get_current_log(3176,91872
int MYSQL_BIN_LOG::raw_get_current_log(3184,92047
static bool copy_up_file_and_fill(3210,92703
int MYSQL_BIN_LOG::find_log_pos(3268,94515
int MYSQL_BIN_LOG::find_next_log(3370,97387
bool MYSQL_BIN_LOG::reset_logs(3429,98635
int MYSQL_BIN_LOG::purge_first_log(3592,103964
int MYSQL_BIN_LOG::update_log_index(3686,106887
int MYSQL_BIN_LOG::purge_logs(3721,108108
int MYSQL_BIN_LOG::set_purge_index_file_name(3802,110609
int MYSQL_BIN_LOG::open_purge_index_file(3817,111114
int MYSQL_BIN_LOG::close_purge_index_file(3843,111845
bool MYSQL_BIN_LOG::is_inited_purge_index_file(3860,112231
int MYSQL_BIN_LOG::sync_purge_index_file(3866,112392
int MYSQL_BIN_LOG::register_purge_index_entry(3878,112670
int MYSQL_BIN_LOG::register_create_index_entry(3890,113015
int MYSQL_BIN_LOG::purge_index_entry(3896,113196
int MYSQL_BIN_LOG::purge_logs_before_date(4092,119361
void MYSQL_BIN_LOG::make_log_name(4177,121525
bool MYSQL_BIN_LOG::is_active(4191,121865
int MYSQL_BIN_LOG::new_file(4208,122284
int MYSQL_BIN_LOG::new_file_without_locking(4217,122383
int MYSQL_BIN_LOG::new_file_impl(4235,122687
bool MYSQL_BIN_LOG::append(4384,127342
bool MYSQL_BIN_LOG::appendv(4413,128050
bool MYSQL_BIN_LOG::flush_and_sync(4443,128741
void MYSQL_BIN_LOG::start_union_events(4462,129153
void MYSQL_BIN_LOG::stop_union_events(4471,129478
bool MYSQL_BIN_LOG::is_query_in_union(4477,129619
trans_has_updated_trans_table(4492,130063
stmt_has_updated_trans_table(4509,130524
bool use_trans_cache(4538,131462
bool ending_trans(4559,132203
bool ending_single_stmt_trans(4575,132652
bool trans_has_updated_non_trans_table(4589,133030
bool stmt_has_updated_non_trans_table(4603,133460
int THD::binlog_setup_trx_data(4613,133696
THD::binlog_start_trans_and_stmt(4672,135850
void THD::binlog_set_stmt_begin(4702,137035
int THD::binlog_write_table_map(4731,138102
THD::binlog_get_pending_rows_event(4777,139553
THD::binlog_set_pending_rows_event(4809,140633
MYSQL_BIN_LOG::remove_pending_rows_event(4836,141434
MYSQL_BIN_LOG::flush_and_set_pending_rows_event(4869,142439
bool MYSQL_BIN_LOG::write(4923,144059
int error_log_print(5116,150168
bool slow_log_print(5123,150323
bool LOGGER::log_command(5130,150515
bool general_log_print(5158,151117
bool general_log_write(5175,151534
int MYSQL_BIN_LOG::rotate(5200,152298
void MYSQL_BIN_LOG::purge(5234,153184
int MYSQL_BIN_LOG::rotate_and_purge(5258,153722
uint MYSQL_BIN_LOG::next_file_id(5279,154268
int MYSQL_BIN_LOG::write_cache(5303,154841
int query_error_code(5432,158912
bool MYSQL_BIN_LOG::write_incident(5458,159621
bool MYSQL_BIN_LOG::write(5516,161359
void MYSQL_BIN_LOG::wait_for_update_relay_log(5630,164674
int MYSQL_BIN_LOG::wait_for_update_bin_log(5660,165634
void MYSQL_BIN_LOG::close(5689,166533
void MYSQL_BIN_LOG::set_max_size(5747,168440
static bool test_if_number(5782,169373
void sql_perror(5814,170091
extern "C" my_bool reopen_fstreams(5829,170421
static bool redirect_std_streams(5850,170914
bool flush_error_log(5860,171074
void MYSQL_BIN_LOG::signal_update(5873,171309
static void print_buffer_to_nt_eventlog(5882,171484
static void print_buffer_to_file(5918,172566
int vprint_msg_to_log(5966,174003
void sql_print_error(5984,174400
void sql_print_warning(5997,174612
void sql_print_information(6010,174830
ulong tc_log_page_waits=6061,176930
#define TC_LOG_HEADER_SIZE 6065,176977
static const char tc_log_magic[tc_log_magic6067,177030
ulong opt_tc_log_size=6069,177096
ulong tc_log_max_pages_used=6070,177136
int TC_LOG_MMAP::open(6072,177213
void TC_LOG_MMAP::get_active_from_pool(6186,180435
int TC_LOG_MMAP::overflow(6230,181428
int TC_LOG_MMAP::log_xid(6269,182784
int TC_LOG_MMAP::sync(6366,185498
int TC_LOG_MMAP::unlog(6402,186460
void TC_LOG_MMAP::close(6423,187105
int TC_LOG_MMAP::recover(6454,187877
TC_LOG *tc_log;tc_log6507,189223
TC_LOG_DUMMY tc_log_dummy;6508,189239
TC_LOG_MMAP  tc_log_mmap;6509,189266
int TC_LOG::using_heuristic_recover(6524,189609
#define TC_LOG_BINLOG 6537,190002
int TC_LOG_BINLOG::open(6547,190249
void TC_LOG_BINLOG::close(6634,192280
int TC_LOG_BINLOG::log_xid(6650,192508
int TC_LOG_BINLOG::unlog(6666,193031
int TC_LOG_BINLOG::recover(6682,193556
const char* mysql_bin_log_file_name(6735,194983
ulonglong mysql_bin_log_file_pos(6744,195190
struct st_mysql_storage_engine binlog_storage_engine=6751,195339
mysql_declare_plugin(6754,195434
mysql_declare_plugin_end;6770,196003

sql/log_event.cc,12450
#define log_cs	56,1817
#define FLAGSTR(58,1852
#define FMT_G_BUFSIZE(67,2052
static const char *HA_ERR(HA_ERR89,2855
static void inline slave_rows_error_report(164,6708
class Write_on_release_cache209,8407
  enum flagWrite_on_release_cache::flag212,8446
    FLUSH_FWrite_on_release_cache::flag::FLUSH_F214,8462
  typedef unsigned short flag_set;Write_on_release_cache::flag_set217,8480
  Write_on_release_cache(Write_on_release_cache::Write_on_release_cache238,9065
  ~Write_on_release_cache(Write_on_release_cache::~Write_on_release_cache244,9259
  IO_CACHE *operator&(Write_on_release_cache::operator&266,9733
uint debug_not_change_ts_if_art_event=281,9962
static void pretty_print_str(289,10084
static void clear_all_errors(315,10808
inline int idempotent_error_code(322,10944
inline int ignored_error_code(368,11997
int convert_handler_error(396,12730
inline bool concurrency_error_code(414,13272
inline bool unexpected_error_code(427,13476
static char *pretty_print_str(pretty_print_str446,13797
static char *slave_load_file_stem(slave_load_file_stem487,14815
static void cleanup_load_tmpdir(512,15509
static bool write_str(554,16493
static inline int read_str(567,16731
char *str_to_hex(str_to_hex583,17072
append_query_string(605,17533
static void print_set_option(654,18646
const char* Log_event::get_type_str(677,19293
const char* Log_event::get_type_str(710,20628
Log_event::Log_event(721,20765
Log_event::Log_event(741,21438
Log_event::Log_event(760,21772
int Log_event::do_update_pos(831,24468
Log_event::do_shall_skip(877,26183
void Log_event::pack_info(899,26866
int Log_event::net_send(908,27001
void Log_event::init_show_field_list(934,27718
bool Log_event::write_header(953,28368
int Log_event::read_log_event(1031,31201
#define UNLOCK_MUTEX 1110,33713
#define LOCK_MUTEX 1111,33778
#define UNLOCK_MUTEX1113,33845
#define LOCK_MUTEX1114,33866
Log_event* Log_event::read_log_event(1122,33992
Log_event* Log_event::read_log_event(1224,37196
void Log_event::print_header(1410,43900
my_b_write_quoted(1523,47843
my_b_write_bit(1550,48449
my_b_write_quoted_with_length(1575,49157
my_b_write_sint32_and_uint32(1600,49689
log_event_print_value(1622,50286
Rows_log_event::print_verbose_one_row(1919,58454
void Rows_log_event::print_verbose(1986,60204
void free_table_map_log_event(2069,62931
void Log_event::print_base64(2075,63017
void Log_event::print_timestamp(2150,65002
Log_event::continue_group(2178,65654
void Query_log_event::pack_info(2201,66375
static void write_str_with_code_and_len(2226,67005
bool Query_log_event::write(2251,67569
Query_log_event::Query_log_event(2481,75769
Query_log_event::Query_log_event(2503,76423
get_str_len_and_pointer(2678,83742
static void copy_str_and_move(2697,84288
code_name(2710,84561
#define CHECK_SPACE(2738,85494
Query_log_event::Query_log_event(2753,86102
void Query_log_event::print_query_header(3041,96514
void Query_log_event::print(3215,103224
int Query_log_event::do_apply_event(3238,103892
int Query_log_event::do_apply_event(3261,104615
int Query_log_event::do_update_pos(3652,121381
Query_log_event::do_shall_skip(3670,121791
Start_log_event_v3::Start_log_event_v3(3701,122627
void Start_log_event_v3::pack_info(3714,122923
void Start_log_event_v3::print(3731,123315
Start_log_event_v3::Start_log_event_v3(3782,125064
bool Start_log_event_v3::write(3803,125687
int Start_log_event_v3::do_apply_event(3837,126824
Format_description_log_event(3918,129449
Format_description_log_event(4071,136454
bool Format_description_log_event::write(4199,141747
int Format_description_log_event::do_apply_event(4220,142527
int Format_description_log_event::do_update_pos(4276,144746
Format_description_log_event::do_shall_skip(4303,145651
void Format_description_log_event::calc_server_version_split(4319,146080
uint Load_log_event::get_query_buffer_length(4373,148111
void Load_log_event::print_query(4393,149068
void Load_log_event::pack_info(4497,151781
bool Load_log_event::write_data_header(4516,152185
bool Load_log_event::write_data_body(4533,152681
Load_log_event::Load_log_event(4553,153195
Load_log_event::Load_log_event(4645,156108
int Load_log_event::copy_log_event(4678,157269
void Load_log_event::print(4727,159042
void Load_log_event::print(4733,159159
void Load_log_event::set_fields(4853,162848
int Load_log_event::do_apply_event(4899,164439
void Rotate_log_event::pack_info(5182,174771
void Rotate_log_event::print(5200,175149
Rotate_log_event::Rotate_log_event(5224,175771
Rotate_log_event::Rotate_log_event(5246,176579
bool Rotate_log_event::write(5274,177632
int Rotate_log_event::do_update_pos(5300,178369
Rotate_log_event::do_shall_skip(5369,180912
void Intvar_log_event::pack_info(5397,181615
Intvar_log_event::Intvar_log_event(5412,181923
const char* Intvar_log_event::get_var_type_name(5428,182398
bool Intvar_log_event::write(5443,182675
void Intvar_log_event::print(5459,182975
int Intvar_log_event::do_apply_event(5498,183857
int Intvar_log_event::do_update_pos(5520,184391
Intvar_log_event::do_shall_skip(5528,184528
void Rand_log_event::pack_info(5549,185271
Rand_log_event::Rand_log_event(5561,185579
bool Rand_log_event::write(5574,186041
void Rand_log_event::print(5586,186321
int Rand_log_event::do_apply_event(5605,186950
int Rand_log_event::do_update_pos(5621,187355
Rand_log_event::do_shall_skip(5629,187490
bool slave_execute_deferred_events(5650,188188
void Xid_log_event::pack_info(5673,188793
Xid_log_event(5693,189287
bool Xid_log_event::write(5705,189670
void Xid_log_event::print(5715,189899
int Xid_log_event::do_apply_event(5734,190459
Xid_log_event::do_shall_skip(5752,190973
void User_var_log_event::pack_info(5769,191521
User_var_log_event(5853,194091
bool User_var_log_event::write(5943,196799
void User_var_log_event::print(6013,198594
int User_var_log_event::do_apply_event(6126,202399
int User_var_log_event::do_update_pos(6221,204990
User_var_log_event::do_shall_skip(6228,205128
void Unknown_log_event::print(6249,205881
void Slave_log_event::pack_info(6261,206221
Slave_log_event::Slave_log_event(6282,206795
Slave_log_event::~Slave_log_event(6318,208107
void Slave_log_event::print(6325,208190
int Slave_log_event::get_data_size(6340,208660
bool Slave_log_event::write(6347,208795
void Slave_log_event::init_from_mem_pool(6360,209159
Slave_log_event::Slave_log_event(6380,209799
int Slave_log_event::do_apply_event(6397,210364
void Stop_log_event::print(6415,210771
int Stop_log_event::do_update_pos(6441,211714
Create_file_log_event(6474,212630
bool Create_file_log_event::write_data_body(6497,213421
bool Create_file_log_event::write_data_header(6511,213744
bool Create_file_log_event::write_base(6526,214102
Create_file_log_event::Create_file_log_event(6541,214365
void Create_file_log_event::print(6597,216556
void Create_file_log_event::print(6631,217570
void Create_file_log_event::pack_info(6643,217820
int Create_file_log_event::do_apply_event(6671,218639
Append_block_log_event::Append_block_log_event(6754,221320
Append_block_log_event::Append_block_log_event(6770,221713
bool Append_block_log_event::write(6793,222524
void Append_block_log_event::print(6809,222924
void Append_block_log_event::pack_info(6828,223426
int Append_block_log_event::get_create_or_append(6842,223741
int Append_block_log_event::do_apply_event(6851,223910
Delete_file_log_event::Delete_file_log_event(6925,226169
Delete_file_log_event::Delete_file_log_event(6936,226401
bool Delete_file_log_event::write(6953,226985
void Delete_file_log_event::print(6968,227287
void Delete_file_log_event::pack_info(6985,227737
int Delete_file_log_event::do_apply_event(6999,228066
Execute_load_log_event::Execute_load_log_event(7020,228718
Execute_load_log_event::Execute_load_log_event(7033,229005
bool Execute_load_log_event::write(7050,229587
void Execute_load_log_event::print(7065,229894
void Execute_load_log_event::pack_info(7083,230340
int Execute_load_log_event::do_apply_event(7096,230609
Begin_load_query_log_event(7190,233543
Begin_load_query_log_event(7201,233897
int Begin_load_query_log_event::get_create_or_append(7209,234137
Begin_load_query_log_event::do_shall_skip(7218,234388
Execute_load_query_log_event(7236,234842
Execute_load_query_log_event(7252,235531
ulong Execute_load_query_log_event::get_post_header_size_for_derived(7274,236225
Execute_load_query_log_event::write_post_header_for_derived(7282,236374
void Execute_load_query_log_event::print(7295,236752
void Execute_load_query_log_event::print(7304,236997
void Execute_load_query_log_event::pack_info(7344,238351
Execute_load_query_log_event::do_apply_event(7378,239286
bool sql_ex_info::write_data(7446,241092
const char *sql_ex_info::init(sql_ex_info::init7480,242023
Rows_log_event::Rows_log_event(7532,243788
Rows_log_event::Rows_log_event(7578,245410
Rows_log_event::~Rows_log_event(7692,249291
int Rows_log_event::get_data_size(7700,249520
int Rows_log_event::do_add_row_data(7724,250232
int Rows_log_event::do_apply_event(7782,252109
Rows_log_event::do_shall_skip(8153,265543
static int rows_event_stmt_cleanup(8177,266357
Rows_log_event::do_update_pos(8250,269138
bool Rows_log_event::write_data_header(8285,270092
bool Rows_log_event::write_data_body(8300,270671
void Rows_log_event::pack_info(8337,271939
void Rows_log_event::print_helper(8349,272289
int Table_map_log_event::save_field_metadata(8434,276423
Table_map_log_event::Table_map_log_event(8453,277034
Table_map_log_event::Table_map_log_event(8544,280239
Table_map_log_event::~Table_map_log_event(8652,284419
enum enum_tbl_map_status8671,284903
  OK_TO_PROCESS=enum_tbl_map_status::OK_TO_PROCESS8674,284968
  FILTERED_OUT=enum_tbl_map_status::FILTERED_OUT8677,285033
  SAME_ID_MAPPING_DIFFERENT_TABLE=enum_tbl_map_status::SAME_ID_MAPPING_DIFFERENT_TABLE8680,285112
  SAME_ID_MAPPING_SAME_TABLE=enum_tbl_map_status::SAME_ID_MAPPING_SAME_TABLE8683,285217
check_table_map(8726,286961
int Table_map_log_event::do_apply_event(8761,288021
Table_map_log_event::do_shall_skip(8867,291884
int Table_map_log_event::do_update_pos(8876,292079
bool Table_map_log_event::write_data_header(8885,292277
bool Table_map_log_event::write_data_body(8900,292841
void Table_map_log_event::pack_info(8941,294329
void Table_map_log_event::print(8956,294664
Write_rows_log_event::Write_rows_log_event(8977,295397
Write_rows_log_event::Write_rows_log_event(8990,295840
Write_rows_log_event::do_before_row_operations(9000,296200
Write_rows_log_event::do_after_row_operations(9087,299750
last_uniq_key(9119,300735
is_duplicate_key_error(9141,301344
Rows_log_event::write_row(9188,303077
Write_rows_log_event::do_exec_row(9386,309734
void Write_rows_log_event::print(9403,310119
static bool record_compare(9421,310726
void issue_long_find_row_warning(9551,314419
int Rows_log_event::find_row(9610,317131
Delete_rows_log_event::Delete_rows_log_event(9926,326976
Delete_rows_log_event::Delete_rows_log_event(9938,327407
Delete_rows_log_event::do_before_row_operations(9949,327777
Delete_rows_log_event::do_after_row_operations(9977,328483
int Delete_rows_log_event::do_exec_row(9988,328830
void Delete_rows_log_event::print(10006,329223
Update_rows_log_event::Update_rows_log_event(10022,329718
Update_rows_log_event::Update_rows_log_event(10032,330148
void Update_rows_log_event::init(10041,330498
Update_rows_log_event::~Update_rows_log_event(10060,331056
Update_rows_log_event::Update_rows_log_event(10072,331387
Update_rows_log_event::do_before_row_operations(10084,331802
Update_rows_log_event::do_after_row_operations(10106,332330
Update_rows_log_event::do_exec_row(10118,332707
void Update_rows_log_event::print(10176,334237
Incident_log_event::Incident_log_event(10184,334409
Incident_log_event::~Incident_log_event(10220,335833
Incident_log_event::description(10226,335894
void Incident_log_event::pack_info(10240,336178
Incident_log_event::print(10257,336614
Incident_log_event::do_apply_event(10271,337061
Incident_log_event::write_data_header(10283,337386
Incident_log_event::write_data_body(10293,337682
st_print_event_info::st_print_event_info(10306,338080
Heartbeat_log_event::Heartbeat_log_event(10332,339006
size_t my_strmov_quoted_identifier(10355,339786
size_t my_strmov_quoted_identifier(10363,340115
size_t my_strmov_quoted_identifier_helper(10371,340287

sql/log_event_old.cc,2699
Old_rows_log_event::do_apply_event(39,1510
last_uniq_key(298,10922
static bool record_compare(312,11166
copy_extra_record_fields(415,13879
replace_record(516,17285
static int find_and_fetch_row(678,22755
int Write_rows_log_event_old::do_before_row_operations(892,29705
int Write_rows_log_event_old::do_after_row_operations(954,32124
Write_rows_log_event_old::do_prepare_row(974,32626
int Write_rows_log_event_old::do_exec_row(993,33344
int Delete_rows_log_event_old::do_before_row_operations(1005,33700
int Delete_rows_log_event_old::do_after_row_operations(1043,34668
Delete_rows_log_event_old::do_prepare_row(1057,35020
int Delete_rows_log_event_old::do_exec_row(1090,36095
int Update_rows_log_event_old::do_before_row_operations(1112,36682
int Update_rows_log_event_old::do_after_row_operations(1142,37439
int Update_rows_log_event_old::do_prepare_row(1155,37762
int Update_rows_log_event_old::do_exec_row(1199,39379
Old_rows_log_event::Old_rows_log_event(1244,40939
Old_rows_log_event::Old_rows_log_event(1296,42677
Old_rows_log_event::~Old_rows_log_event(1385,45815
int Old_rows_log_event::get_data_size(1394,46053
int Old_rows_log_event::do_add_row_data(1412,46564
int Old_rows_log_event::do_apply_event(1471,48450
Old_rows_log_event::do_shall_skip(1842,61930
Old_rows_log_event::do_update_pos(1856,62357
bool Old_rows_log_event::write_data_header(1892,63321
bool Old_rows_log_event::write_data_body(1912,63960
void Old_rows_log_event::pack_info(1944,64925
void Old_rows_log_event::print_helper(1957,65280
Old_rows_log_event::write_row(2019,67722
int Old_rows_log_event::find_row(2235,75322
Write_rows_log_event_old::Write_rows_log_event_old(2527,84569
Write_rows_log_event_old::Write_rows_log_event_old(2546,85160
Write_rows_log_event_old::do_before_row_operations(2559,85628
Write_rows_log_event_old::do_after_row_operations(2622,88085
Write_rows_log_event_old::do_exec_row(2643,88669
void Write_rows_log_event_old::print(2658,89011
Delete_rows_log_event_old::Delete_rows_log_event_old(2675,89514
Delete_rows_log_event_old::Delete_rows_log_event_old(2695,90181
Delete_rows_log_event_old::do_before_row_operations(2710,90704
Delete_rows_log_event_old::do_after_row_operations(2733,91253
int Delete_rows_log_event_old::do_exec_row(2745,91608
void Delete_rows_log_event_old::print(2764,92006
Update_rows_log_event_old::Update_rows_log_event_old(2780,92517
Update_rows_log_event_old::Update_rows_log_event_old(2799,93179
Update_rows_log_event_old::do_before_row_operations(2815,93755
Update_rows_log_event_old::do_after_row_operations(2832,94127
Update_rows_log_event_old::do_exec_row(2845,94512
void Update_rows_log_event_old::print(2902,96018

sql/main.cc,17
int main(23,881

sql/mdl.cc,6447
static PSI_mutex_key key_MDL_map_mutex;25,920
static PSI_mutex_key key_MDL_wait_LOCK_wait_status;26,960
static PSI_mutex_info all_mdl_mutexes[all_mdl_mutexes28,1013
static PSI_rwlock_key key_MDL_lock_rwlock;34,1189
static PSI_rwlock_key key_MDL_context_LOCK_waiting_for;35,1232
static PSI_rwlock_info all_mdl_rwlocks[all_mdl_rwlocks37,1289
static PSI_cond_key key_MDL_wait_COND_wait_status;43,1462
static PSI_cond_info all_mdl_conds[all_mdl_conds45,1514
static void init_mdl_psi_keys(54,1729
const char *MDL_key::m_namespace_to_wait_state_name[MDL_key::m_namespace_to_wait_state_name79,2318
static bool mdl_initialized=91,2700
class MDL_map104,2943
          Lock_cache;MDL_map::Lock_cache135,3987
class Deadlock_detection_visitor:Deadlock_detection_visitor149,4335
  Deadlock_detection_visitor(Deadlock_detection_visitor::Deadlock_detection_visitor152,4413
  MDL_context *get_victim(Deadlock_detection_visitor::get_victim163,4739
bool Deadlock_detection_visitor::enter_node(216,6448
void Deadlock_detection_visitor::leave_node(236,6915
bool Deadlock_detection_visitor::inspect_edge(251,7211
Deadlock_detection_visitor::opt_change_victim_to(267,7540
#define MDL_BIT(287,8036
class MDL_lock300,8484
  typedef uchar bitmap_t;MDL_lock::bitmap_t303,8509
  class Ticket_listMDL_lock::Ticket_list305,8536
            List;MDL_lock::Ticket_list::List314,8887
    operator const MDL_lock::Ticket_list::operator const315,8905
    Ticket_list(MDL_lock::Ticket_list::Ticket_list316,8958
    bool is_empty(MDL_lock::Ticket_list::is_empty320,9078
    bitmap_t bitmap(MDL_lock::Ticket_list::bitmap321,9134
  typedef Ticket_list::List::Iterator Ticket_iterator;MDL_lock::Ticket_iterator331,9386
  bool is_empty(MDL_lock::is_empty371,10947
  MDL_lock(MDL_lock::MDL_lock411,12150
  virtual ~MDL_lock(MDL_lock::~MDL_lock422,12378
class MDL_scoped_lock 477,14765
  MDL_scoped_lock(MDL_scoped_lock::MDL_scoped_lock480,14815
  virtual const bitmap_t *incompatible_granted_types_bitmap(MDL_scoped_lock::incompatible_granted_types_bitmap484,14888
  virtual const bitmap_t *incompatible_waiting_types_bitmap(MDL_scoped_lock::incompatible_waiting_types_bitmap488,14999
  virtual bool needs_notification(MDL_scoped_lock::needs_notification492,15110
  virtual bitmap_t hog_lock_types_bitmap(MDL_scoped_lock::hog_lock_types_bitmap502,15453
class MDL_object_lock 518,15793
  MDL_object_lock(MDL_object_lock::MDL_object_lock521,15843
  void reset(MDL_object_lock::reset529,16025
  virtual const bitmap_t *incompatible_granted_types_bitmap(MDL_object_lock::incompatible_granted_types_bitmap545,16625
  virtual const bitmap_t *incompatible_waiting_types_bitmap(MDL_object_lock::incompatible_waiting_types_bitmap549,16736
  virtual bool needs_notification(MDL_object_lock::needs_notification553,16847
  virtual bitmap_t hog_lock_types_bitmap(MDL_object_lock::hog_lock_types_bitmap564,17186
class MDL_object_lock_cache_adapter 584,17731
static MDL_map mdl_locks;591,17919
ulong mdl_locks_cache_size;595,18032
mdl_locks_key(601,18090
void mdl_init(622,18639
void mdl_destroy(642,18943
void MDL_map::init(654,19113
void MDL_map::destroy(672,19592
MDL_lock* MDL_map::find_or_insert(695,20133
bool MDL_map::move_from_hash_to_lock_mutex(796,23054
void MDL_map::remove(865,25260
MDL_context::MDL_context(946,28053
void MDL_context::destroy(967,28662
void MDL_request::init(997,29676
void MDL_request::init(1019,30302
inline MDL_lock *MDL_lock::create(MDL_lock::create1036,30724
void MDL_lock::destroy(1050,31009
MDL_ticket *MDL_ticket::create(MDL_ticket::create1064,31288
void MDL_ticket::destroy(1078,31623
uint MDL_ticket::get_deadlock_weight(1091,31875
MDL_wait::MDL_wait(1101,32120
MDL_wait::~MDL_wait(1111,32360
bool MDL_wait::set_status(1123,32564
MDL_wait::enum_wait_status MDL_wait::get_status(1140,32947
void MDL_wait::reset_status(1152,33206
MDL_wait::timed_wait(1174,33879
void MDL_lock::Ticket_list::clear_bit_if_not_in_list(1231,35703
void MDL_lock::Ticket_list::add_ticket(1248,36065
void MDL_lock::Ticket_list::remove_ticket(1270,36629
void MDL_lock::reschedule_waiters(1298,37657
const MDL_lock::bitmap_t MDL_scoped_lock::m_granted_incompatible[MDL_scoped_lock::m_granted_incompatible1470,44365
const MDL_lock::bitmap_t MDL_scoped_lock::m_waiting_incompatible[MDL_scoped_lock::m_waiting_incompatible1477,44658
MDL_object_lock::m_granted_incompatible[MDL_object_lock::m_granted_incompatible1532,46922
MDL_object_lock::m_waiting_incompatible[MDL_object_lock::m_waiting_incompatible1553,47720
MDL_lock::can_grant_lock(1584,48600
void MDL_lock::remove_ticket(1625,49896
bool MDL_lock::has_pending_conflicting_lock(1662,50998
MDL_wait_for_graph_visitor::~MDL_wait_for_graph_visitor(1675,51290
MDL_wait_for_subgraph::~MDL_wait_for_subgraph(1680,51354
bool MDL_ticket::has_stronger_or_equal_type(1693,51709
bool MDL_ticket::is_incompatible_when_granted(1702,51961
bool MDL_ticket::is_incompatible_when_waiting(1709,52129
MDL_context::find_ticket(1732,52859
MDL_context::try_acquire_lock(1785,54475
MDL_context::try_acquire_lock_impl(1826,55814
MDL_context::clone_ticket(1926,58735
void MDL_object_lock::notify_conflicting_locks(1966,59823
void MDL_scoped_lock::notify_conflicting_locks(1999,60793
MDL_context::acquire_lock(2038,62003
extern "C" int mdl_request_ptr_cmp(2157,65327
bool MDL_context::acquire_locks(2185,66110
MDL_context::upgrade_shared_lock_to_exclusive(2255,68161
bool MDL_lock::visit_subgraph(2317,70358
bool MDL_ticket::accept_visitor(2462,75412
bool MDL_context::visit_subgraph(2484,76140
void MDL_context::find_deadlock(2510,76760
void MDL_context::release_lock(2566,78386
void MDL_context::release_lock(2592,79000
void MDL_context::release_locks_stored_before(2613,79618
void MDL_context::release_all_locks_for_name(2641,80365
void MDL_ticket::downgrade_exclusive_lock(2665,80960
void MDL_ticket::downgrade_shared_lock(2688,81621
MDL_context::is_lock_owner(2734,83223
bool MDL_ticket::has_pending_conflicting_lock(2758,83937
void MDL_context::rollback_to_savepoint(2773,84396
void MDL_context::release_transactional_locks(2794,85063
void MDL_context::release_statement_locks(2803,85301
bool MDL_context::has_lock(2821,85813
void MDL_context::set_lock_duration(2854,86682
void MDL_context::set_explicit_duration_for_all_locks(2872,87133
void MDL_context::set_transaction_duration_for_all_locks(2912,88058

sql/mf_iocache.cc,28
int _my_b_net_read(51,1722

sql/my_decimal.cc,421
int decimal_operation_results(37,1092
int my_decimal2string(92,2718
str_set_decimal(147,4915
int my_decimal2binary(196,6310
int str2my_decimal(235,7255
my_decimal *date2my_decimal(date2my_decimal269,8166
void my_decimal_trim(286,8668
#define DIG_PER_DEC1 300,8868
#define ROUND_UP(301,8891
print_decimal(305,8974
print_decimal_buff(322,9439
const char *dbug_decimal_as_string(dbug_decimal_as_string334,9701

sql/mysqld.cc,30563
#define mysqld_charset 99,3583
#define HAVE_CLOSE_SERVER_SOCK 104,3815
#define __GNU_LIBRARY__	111,3964
typedef fp_except fp_except_t;166,5165
# define fpu_control_t 177,5468
# define _FPU_EXTENDED 178,5504
# define _FPU_DOUBLE 179,5533
#  define _FPU_GETCW(181,5633
#  define _FPU_SETCW(182,5699
#  define _FPU_GETCW(184,5772
#  define _FPU_SETCW(185,5805
inline void setup_fpu(192,5974
#define MYSQL_KILL_SIGNAL 248,7682
#define ENABLE_TEMP_POOL 259,7924
#define ENABLE_TEMP_POOL 261,7957
const char *show_comp_option_name[show_comp_option_name268,8083
static const char *tc_heuristic_recover_names[tc_heuristic_recover_names270,8148
static TYPELIB tc_heuristic_recover_typelib=274,8232
const char *first_keyword=first_keyword280,8369
const char *my_localhost=my_localhost281,8432
bool opt_large_files=283,8498
static my_bool opt_autocommit;284,8542
static my_bool opt_help=289,8661
arg_cmp_func Arg_comparator::comparator_matrix[Arg_comparator::comparator_matrix291,8706
static PSI_thread_key key_thread_handle_con_namedpipes;302,9255
static PSI_cond_key key_COND_handler_count;303,9311
static PSI_thread_key key_thread_handle_con_sharedmem;307,9463
static PSI_thread_key key_thread_handle_con_sockets;311,9637
static PSI_thread_key key_thread_handle_shutdown;315,9760
static PSI_rwlock_key key_rwlock_openssl;319,9883
volatile sig_atomic_t ld_assume_kernel_is_set=324,9982
static bool lower_case_table_names_used=328,10083
static bool max_long_data_size_used=329,10127
static bool volatile select_thread_in_use,330,10171
static bool volatile select_thread_in_use, signal_thread_in_use;330,10171
volatile bool ready_to_exit;332,10271
static my_bool opt_debugging=333,10300
static my_bool opt_short_log_format=334,10374
static uint kill_cached_threads,335,10414
static uint kill_cached_threads, wake_thread;335,10414
static ulong killed_threads;336,10460
       ulong max_used_connections;337,10489
static volatile ulong cached_thread_count=338,10524
static char *mysqld_user,mysqld_user339,10570
static char *mysqld_user, *mysqld_chroot;mysqld_chroot339,10570
static char *default_character_set_name;default_character_set_name340,10612
static char *character_set_filesystem_name;character_set_filesystem_name341,10653
static char *lc_messages;lc_messages342,10697
static char *lc_time_names_name;lc_time_names_name343,10723
static char *my_bind_addr_str;my_bind_addr_str344,10756
static char *default_collation_name;default_collation_name345,10787
char *default_storage_engine;default_storage_engine346,10824
static char compiled_default_collation_name[compiled_default_collation_name347,10854
static I_List<THD> thread_cache;348,10931
static bool binlog_format_used=349,10964
LEX_STRING opt_init_connect,351,11004
LEX_STRING opt_init_connect, opt_init_slave;351,11004
static mysql_cond_t COND_thread_cache,353,11050
static mysql_cond_t COND_thread_cache, COND_flush_thread_cache;353,11050
bool opt_bin_log,357,11139
bool opt_bin_log, opt_ignore_builtin_innodb=357,11139
my_bool opt_log,358,11187
my_bool opt_log, opt_slow_log;358,11187
ulonglong log_output_options;359,11218
my_bool opt_log_queries_not_using_indexes=360,11248
bool opt_error_log=361,11294
bool opt_disable_networking=362,11327
bool opt_skip_name_resolve=363,11378
my_bool opt_character_set_client_handshake=364,11408
bool server_id_supplied 365,11455
bool opt_endinfo,366,11484
bool opt_endinfo, using_udf_functions;366,11484
my_bool locked_in_memory;367,11523
bool opt_using_transactions;368,11549
bool volatile abort_loop;369,11578
bool volatile shutdown_in_progress;370,11604
ulong slow_start_timeout;372,11690
bool in_bootstrap=388,12363
bool volatile grant_option;396,12624
my_bool opt_skip_slave_start 398,12653
my_bool opt_reckless_slave 399,12725
my_bool opt_enable_named_pipe=400,12757
my_bool opt_local_infile,401,12791
my_bool opt_local_infile, opt_slave_compressed_protocol;401,12791
my_bool opt_safe_user_create 402,12848
my_bool opt_show_slave_auth_info;403,12882
my_bool opt_log_slave_updates=404,12916
char *opt_slave_skip_errors;opt_slave_skip_errors405,12950
my_bool old_mode;411,13085
handlerton *heap_hton;heap_hton416,13186
handlerton *myisam_hton;myisam_hton417,13209
handlerton *partition_hton;partition_hton418,13234
my_bool read_only=420,13263
my_bool use_temp_pool,421,13302
my_bool use_temp_pool, relay_log_purge;421,13302
my_bool relay_log_recovery;422,13342
my_bool opt_sync_frm,423,13370
my_bool opt_sync_frm, opt_allow_suspicious_udfs;423,13370
my_bool opt_secure_auth=424,13419
char* opt_secure_file_priv;425,13447
my_bool opt_log_slow_admin_statements=426,13475
my_bool opt_log_slow_slave_statements=427,13517
my_bool lower_case_file_system=428,13559
my_bool opt_large_pages=429,13594
my_bool opt_super_large_pages=430,13622
my_bool opt_myisam_use_mmap=431,13656
uint   opt_large_page_size=432,13688
MYSQL_PLUGIN_IMPORT uint    opt_debug_sync_timeout=434,13751
my_bool opt_old_style_user_limits=436,13847
volatile bool mqh_used 442,14096
my_bool opt_noacl;443,14124
my_bool sp_automatic_privileges=444,14143
ulong opt_binlog_rows_event_max_size;446,14180
const char *binlog_format_names[binlog_format_names447,14218
volatile sig_atomic_t calling_initgroups=449,14314
uint mysqld_port,451,14399
uint mysqld_port, test_flags,451,14399
uint mysqld_port, test_flags, select_errors,451,14399
uint mysqld_port, test_flags, select_errors, dropping_tables,451,14399
uint mysqld_port, test_flags, select_errors, dropping_tables, ha_open_options;451,14399
uint mysqld_port_timeout;452,14478
ulong delay_key_write_options;453,14504
uint protocol_version;454,14535
uint lower_case_table_names;455,14558
ulong tc_heuristic_recover=456,14587
uint volatile thread_count;457,14618
int32 thread_running;458,14646
ulong thread_created;459,14668
ulong back_log,460,14690
ulong back_log, connect_timeout,460,14690
ulong back_log, connect_timeout, concurrency,460,14690
ulong back_log, connect_timeout, concurrency, server_id;460,14690
ulong table_cache_size,461,14747
ulong table_cache_size, table_def_size;461,14747
ulong what_to_log;462,14787
ulong slow_launch_time,463,14806
ulong slow_launch_time, slave_open_temp_tables;463,14806
ulong open_files_limit,464,14854
ulong open_files_limit, max_binlog_size,464,14854
ulong open_files_limit, max_binlog_size, max_relay_log_size;464,14854
ulong slave_trans_retries;465,14915
uint  slave_net_timeout;466,14942
ulong slave_exec_mode_options;467,14967
ulonglong slave_type_conversions_options;468,14998
ulong thread_cache_size=469,15040
ulong binlog_cache_size=470,15067
ulonglong  max_binlog_cache_size=471,15094
ulong slave_max_allowed_packet=472,15130
ulong binlog_stmt_cache_size=473,15165
ulonglong  max_binlog_stmt_cache_size=474,15197
ulong query_cache_size=475,15238
ulong refresh_version;476,15264
query_id_t global_query_id;477,15320
my_atomic_rwlock_t global_query_id_lock;478,15348
my_atomic_rwlock_t thread_running_lock;479,15389
ulong aborted_threads,480,15429
ulong aborted_threads, aborted_connects;480,15429
ulong delayed_insert_timeout,481,15470
ulong delayed_insert_timeout, delayed_insert_limit,481,15470
ulong delayed_insert_timeout, delayed_insert_limit, delayed_queue_size;481,15470
ulong delayed_insert_threads,482,15542
ulong delayed_insert_threads, delayed_insert_writes,482,15542
ulong delayed_insert_threads, delayed_insert_writes, delayed_rows_in_use;482,15542
ulong delayed_insert_errors,483,15616
ulong delayed_insert_errors,flush_time;483,15616
ulong specialflag=484,15656
ulong binlog_cache_use=485,15677
ulong binlog_stmt_cache_use=486,15730
ulong max_connections,487,15793
ulong max_connections, max_connect_errors;487,15793
ulong max_long_data_size;492,15934
ulong max_prepared_stmt_count;497,16101
ulong prepared_stmt_count=508,16640
ulong thread_id=509,16669
ulong slow_launch_threads 510,16701
uint sync_binlog_period=511,16732
ulong expire_logs_days 513,16846
ulong rpl_recovery_rank=514,16874
ulong stored_program_cache_size=519,17014
const double log_10[log_10521,17051
time_t server_start_time,555,19305
time_t server_start_time, flush_status_time;555,19305
char mysql_home[mysql_home557,19351
char mysql_home[FN_REFLEN], pidfile_name[pidfile_name557,19351
char mysql_home[FN_REFLEN], pidfile_name[FN_REFLEN], system_time_zone[system_time_zone557,19351
char default_logfile_name[default_logfile_name558,19426
char *default_tz_name;default_tz_name559,19464
char log_error_file[log_error_file560,19487
char log_error_file[FN_REFLEN], glob_hostname[glob_hostname560,19487
char mysql_real_data_home[mysql_real_data_home561,19545
     lc_messages_dir[lc_messages_dir562,19583
     lc_messages_dir[FN_REFLEN], reg_ext[reg_ext562,19583
     mysql_charsets_dir[mysql_charsets_dir563,19636
     *opt_init_file,opt_init_file564,19672
     *opt_init_file, *opt_tc_log_file;opt_tc_log_file564,19672
char *lc_messages_dir_ptr,lc_messages_dir_ptr565,19711
char *lc_messages_dir_ptr, *log_error_file_ptr;log_error_file_ptr565,19711
char mysql_unpacked_real_data_home[mysql_unpacked_real_data_home566,19759
int mysql_unpacked_real_data_home_len;567,19806
uint mysql_real_data_home_len,568,19845
uint mysql_real_data_home_len, mysql_data_home_len=568,19845
uint reg_ext_length;569,19900
DATE_TIME_FORMAT global_date_format,573,20031
DATE_TIME_FORMAT global_date_format, global_datetime_format,573,20031
DATE_TIME_FORMAT global_date_format, global_datetime_format, global_time_format;573,20031
Time_zone *default_tz;default_tz574,20112
char *mysql_data_home=mysql_data_home576,20136
const char *mysql_real_data_home_ptr=mysql_real_data_home_ptr577,20183
char server_version[server_version578,20243
char *mysqld_unix_port,mysqld_unix_port579,20287
char *mysqld_unix_port, *opt_mysql_tmpdir;opt_mysql_tmpdir579,20287
ulong thread_handling;580,20330
const char *in_left_expr_name=in_left_expr_name583,20423
const char *in_additional_cond=in_additional_cond585,20505
const char *in_having_cond=in_having_cond586,20550
my_decimal decimal_zero;588,20594
Eq_creator eq_creator;590,20668
Ne_creator ne_creator;591,20691
Gt_creator gt_creator;592,20714
Lt_creator lt_creator;593,20737
Ge_creator ge_creator;594,20760
Le_creator le_creator;595,20783
MYSQL_FILE *bootstrap_file;bootstrap_file597,20807
int bootstrap_error;598,20835
I_List<THD> threads;600,20857
Rpl_filter* rpl_filter;601,20878
Rpl_filter* binlog_filter;602,20902
THD *first_global_thread(first_global_thread604,20930
THD *next_global_thread(next_global_thread611,21030
struct system_variables global_system_variables;619,21181
struct system_variables max_system_variables;620,21230
struct system_status_var global_status_var;621,21276
MY_TMPDIR mysql_tmpdir_list;623,21321
MY_BITMAP temp_pool;624,21350
CHARSET_INFO *system_charset_info,system_charset_info626,21372
CHARSET_INFO *system_charset_info, *files_charset_info files_charset_info626,21372
CHARSET_INFO *national_charset_info,national_charset_info627,21429
CHARSET_INFO *national_charset_info, *table_alias_charset;table_alias_charset627,21429
CHARSET_INFO *character_set_filesystem;character_set_filesystem628,21488
CHARSET_INFO *error_message_charset_info;error_message_charset_info629,21528
MY_LOCALE *my_default_lc_messages;my_default_lc_messages631,21571
MY_LOCALE *my_default_lc_time_names;my_default_lc_time_names632,21606
SHOW_COMP_OPTION have_ssl,634,21644
SHOW_COMP_OPTION have_ssl, have_symlink,634,21644
SHOW_COMP_OPTION have_ssl, have_symlink, have_dlopen,634,21644
SHOW_COMP_OPTION have_ssl, have_symlink, have_dlopen, have_query_cache;634,21644
SHOW_COMP_OPTION have_geometry,635,21716
SHOW_COMP_OPTION have_geometry, have_rtree_keys;635,21716
SHOW_COMP_OPTION have_crypt,636,21765
SHOW_COMP_OPTION have_crypt, have_compress;636,21765
SHOW_COMP_OPTION have_profiling;637,21809
mysql_mutex_t LOCK_thread_created;643,21940
mysql_mutex_t LOCK_thread_count;644,21975
  LOCK_status,646,22022
  LOCK_status, LOCK_error_log,646,22022
  LOCK_status, LOCK_error_log, LOCK_uuid_generator,646,22022
  LOCK_delayed_insert,647,22074
  LOCK_delayed_insert, LOCK_delayed_status,647,22074
  LOCK_delayed_insert, LOCK_delayed_status, LOCK_delayed_create,647,22074
  LOCK_crypt,648,22139
  LOCK_global_system_variables,649,22153
  LOCK_user_conn,650,22185
  LOCK_user_conn, LOCK_slave_list,650,22185
  LOCK_user_conn, LOCK_slave_list, LOCK_active_mi,650,22185
  LOCK_connection_count,651,22236
  LOCK_connection_count, LOCK_error_messages;651,22236
mysql_mutex_t LOCK_prepared_stmt_count;659,22619
mysql_mutex_t LOCK_des_key_file;661,22679
mysql_rwlock_t LOCK_grant,663,22719
mysql_rwlock_t LOCK_grant, LOCK_sys_init_connect,663,22719
mysql_rwlock_t LOCK_grant, LOCK_sys_init_connect, LOCK_sys_init_slave;663,22719
mysql_rwlock_t LOCK_system_variables_hash;664,22790
mysql_cond_t COND_thread_count;665,22833
pthread_t signal_thread;666,22865
pthread_attr_t connection_attrib;667,22890
mysql_mutex_t LOCK_server_started;668,22924
mysql_cond_t COND_server_started;669,22959
int mysqld_server_started=671,22994
File_parser_dummy_hook file_parser_dummy_hook;673,23025
uint report_port=676,23146
ulong master_retry_count=677,23167
char *master_info_file;master_info_file678,23195
char *relay_log_info_file,relay_log_info_file679,23219
char *relay_log_info_file, *report_user,report_user679,23219
char *relay_log_info_file, *report_user, *report_password,report_password679,23219
char *relay_log_info_file, *report_user, *report_password, *report_host;report_host679,23219
char *opt_relay_logname opt_relay_logname680,23292
char *opt_logname,opt_logname681,23349
char *opt_logname, *opt_slow_logname,opt_slow_logname681,23349
char *opt_logname, *opt_slow_logname, *opt_bin_logname;opt_bin_logname681,23349
static volatile sig_atomic_t kill_in_progress;685,23430
static my_bool opt_bootstrap,688,23479
static my_bool opt_bootstrap, opt_myisam_log;688,23479
static int cleanup_done;689,23525
static ulong opt_specialflag;690,23550
static char *opt_update_logname,opt_update_logname691,23580
static char *opt_update_logname, *opt_binlog_index_name;opt_binlog_index_name691,23580
char *mysql_home_ptr,mysql_home_ptr692,23637
char *mysql_home_ptr, *pidfile_name_ptr;pidfile_name_ptr692,23637
static int defaults_argc;694,23747
static char **defaults_argv;defaults_argv703,24096
static int remaining_argc;705,24203
static char **remaining_argv;remaining_argv707,24312
int orig_argc;709,24343
char **orig_argv;orig_argv710,24358
class Buffered_log 723,24801
  ~Buffered_log(Buffered_log::~Buffered_log728,24908
Buffered_log::Buffered_log(745,25175
void Buffered_log::print(754,25397
class Buffered_logs786,26388
  Buffered_logs(Buffered_logs::Buffered_logs789,26418
  ~Buffered_logs(Buffered_logs::~Buffered_logs792,26442
void Buffered_logs::init(812,26901
void Buffered_logs::cleanup(817,26970
void Buffered_logs::buffer(826,27105
void Buffered_logs::print(842,27568
static Buffered_logs buffered_logs;851,27760
static void buffered_option_error_reporter(860,27977
static my_socket unix_sock,875,28373
static my_socket unix_sock,ip_sock;875,28373
struct rand_struct sql_rand;876,28409
struct passwd *user_info;user_info879,28501
static pthread_t select_thread;880,28527
static uint thr_kill_signal;881,28559
#undef	 getpid887,28640
static mysql_cond_t COND_handler_count;890,28677
static uint handler_count;891,28717
static bool start_mode=892,28744
static int opt_argc;893,28784
static char **opt_argv;opt_argv894,28805
static HANDLE hEventShutdown;897,28861
static char shutdown_event_name[shutdown_event_name898,28891
static	 NTService  Service;900,28950
static char pipe_name[pipe_name905,29080
static SECURITY_ATTRIBUTES saPipeSecurity;906,29108
static SECURITY_DESCRIPTOR sdPipeDescriptor;907,29151
static HANDLE hPipe 908,29196
bool mysqld_embedded=912,29273
bool mysqld_embedded=914,29303
static my_bool plugins_are_initialized=917,29335
static const char* default_dbug_option;920,29400
const char *libwrapName=libwrapName923,29467
int allow_severity 924,29498
int deny_severity 925,29529
ulong query_cache_min_res_unit=928,29593
Query_cache query_cache;929,29659
char *shared_memory_base_name=shared_memory_base_name932,29708
my_bool opt_enable_shared_memory;933,29772
HANDLE smem_event_connect_request=934,29806
my_bool opt_use_ssl 937,29852
char *opt_ssl_ca=opt_ssl_ca938,29878
typedef struct CRYPTO_dynlock_value944,30062
} openssl_lock_t;947,30123
static openssl_lock_t *openssl_stdlocks;openssl_stdlocks949,30142
char *des_key_file;des_key_file956,30506
struct st_VioSSLFd *ssl_acceptor_fd;ssl_acceptor_fd958,30551
uint connection_count=966,30730
static bool pid_file_created=997,31804
static void close_connections(1015,32397
static void close_server_sock(1196,37534
void kill_mysql(1223,38168
#define RETURN_FROM_KILL_SERVER 1285,39913
#define RETURN_FROM_KILL_SERVER 1288,40005
static void *kill_server(RETURN_FROM_KILL_SERVER1284,39873
pthread_handler_t kill_server_thread(1349,41650
extern "C" sig_handler print_signal_warning(1362,41904
static void init_error_log_mutex(1377,42318
static void clean_up_error_log_mutex(1383,42436
void unireg_end(1399,42818
extern "C" void unireg_abort(1411,42989
static void mysqld_exit(1424,43317
void clean_up(1447,43948
static void wait_for_signal_thread_to_end(1559,46827
static void clean_up_mutexes(1575,47220
static void set_ports(1621,48843
static struct passwd *check_user(check_user1660,50038
static void set_user(1724,51720
static void set_effective_user(1755,52544
static void set_root(1774,52955
static my_socket create_socket(1787,53135
static void network_init(1829,54310
void close_connection(2088,62619
extern "C" sig_handler end_thread_signal(2111,63146
void thd_cleanup(2132,63593
void dec_connection_count(2144,63722
void delete_thd(2160,63984
void unlink_thd(2178,64234
static bool cache_thread(2213,65042
bool one_thread_per_connection_end(2293,67445
void flush_thread_cache(2314,68135
extern "C" sig_handler abort_thread(2335,68616
static BOOL WINAPI console_event_handler(2364,69531
#define DEBUGGER_ATTACH_TIMEOUT 2392,70196
static void wait_for_debugger(2397,70346
LONG WINAPI my_unhandler_exception_filter(2421,70929
static void init_signals(2466,72363
static void start_signal_handler(2492,73338
static void check_data_home(2502,73515
extern "C" char *my_demangle(my_demangle2510,73631
#define SA_RESETHAND 2520,73820
#define SA_NODEFER 2523,73869
static void init_signals(2528,73924
static void start_signal_handler(2605,76049
pthread_handler_t signal_hand(2644,77226
static void check_data_home(2783,81710
void my_message_sql(2797,81998
void *my_str_malloc_mysqld(my_str_malloc_mysqld2846,83407
void my_str_free_mysqld(2852,83492
pthread_handler_t handle_shutdown(2861,83595
const char *load_default_groups[load_default_groups2876,83976
static const int load_default_groups_sz=2883,84173
check_enough_stack_size(2898,84678
static bool init_global_datetime_format(2924,85166
SHOW_VAR com_status_vars[com_status_vars2942,85635
LEX_CSTRING sql_statement_names[sql_statement_names3092,101684
void init_sql_statement_names(3094,101741
static inline char *make_default_log_name(make_default_log_name3137,103143
static int init_common_variables(3142,103283
#define LARGE_PAGESIZE 3306,108791
#define SUPER_LARGE_PAGESIZE 3307,108839
#define FIX_LOG_VAR(3507,116418
static int init_thread_environment(3587,119187
static unsigned long openssl_id_function(3665,122874
static openssl_lock_t *openssl_dynlock_create(openssl_dynlock_create3671,122966
static void openssl_dynlock_destroy(3679,123160
static void openssl_lock_function(3687,123313
static void openssl_lock(3699,123620
static void init_ssl(3733,124385
static void end_ssl(3767,125235
static int init_server_components(3781,125468
static void create_shutdown_thread(4156,137044
static void handle_connections_methods(4177,137729
void decrement_handler_count(4238,139708
#define decrement_handler_count(4247,139911
static void test_lc_time_sz(4258,140213
int win_main(4290,141204
int mysql_service(4734,153498
static char *add_quoted_string(add_quoted_string4751,153765
default_service_handling(4777,154416
int mysqld_main(4833,155956
static void bootstrap(4947,159495
static bool read_init_file(4990,160678
void inc_thread_created(5007,161088
void handle_connection_in_main_thread(5026,161515
void create_thread_to_handle_connection(5041,161842
static void create_new_thread(5108,164035
inline void kill_broken_server(5157,165188
#define MAYBE_BROKEN_SYSCALL 5168,165525
#define MAYBE_BROKEN_SYSCALL5170,165582
void handle_connections_sockets(5177,165713
pthread_handler_t handle_connections_sockets_thread(5418,171452
pthread_handler_t handle_connections_namedpipes(5426,171613
pthread_handler_t handle_connections_shared_memory(5531,174850
DYNAMIC_ARRAY all_options;5767,182759
struct my_option my_long_options[my_long_options5775,182936
static int show_queries(6151,201876
static int show_net_compression(6159,202021
static int show_starttime(6166,202176
static int show_flushstatustime(6175,202393
static int show_rpl_status(6185,202622
static int show_slave_running(6192,202794
static int show_slave_retried_trans(6204,203200
static int show_slave_received_heartbeats(6225,203763
static int show_heartbeat_period(6242,204203
static int show_open_tables(6260,204561
static int show_prepared_stmt_count(6268,204734
static int show_table_definitions(6278,205010
static int show_ssl_ctx_sess_accept(6288,205282
static int show_ssl_ctx_sess_accept_good(6297,205532
static int show_ssl_ctx_sess_connect_good(6306,205792
static int show_ssl_ctx_sess_accept_renegotiate(6315,206054
static int show_ssl_ctx_sess_connect_renegotiate(6324,206328
static int show_ssl_ctx_sess_cb_hits(6333,206604
static int show_ssl_ctx_sess_hits(6342,206856
static int show_ssl_ctx_sess_cache_full(6351,207102
static int show_ssl_ctx_sess_misses(6360,207360
static int show_ssl_ctx_sess_timeouts(6369,207610
static int show_ssl_ctx_sess_number(6378,207864
static int show_ssl_ctx_sess_connect(6387,208114
static int show_ssl_ctx_sess_get_cache_size(6396,208366
static int show_ssl_ctx_get_verify_mode(6405,208632
static int show_ssl_ctx_get_verify_depth(6414,208890
static int show_ssl_ctx_get_session_cache_mode(6423,209150
static int show_ssl_get_version(6456,210310
static int show_ssl_session_reused(6466,210584
static int show_ssl_get_default_timeout(6477,210872
static int show_ssl_get_verify_mode(6488,211169
static int show_ssl_get_verify_depth(6499,211457
static int show_ssl_get_cipher(6510,211748
static int show_ssl_get_cipher_list(6520,212020
SHOW_VAR status_vars[status_vars6549,212612
bool add_terminator(6680,222742
static void print_version(6687,222960
static int option_cmp(6696,223208
static void print_help(6721,223634
static void usage(6739,224120
static int mysql_init_variables(6804,226389
mysqld_get_one_option(6992,232339
mysql_getopt_value(7258,239856
static void option_error_reporter(7291,240716
static int get_options(7317,241415
static void set_server_version(7500,247341
static char *get_relative_path(get_relative_path7516,247790
fn_format_relative_to_data_home(7538,248255
bool is_secure_file_path(7564,248881
static int fix_paths(7611,250135
static int test_if_case_insensitive(7710,253505
static void create_pid_file(7743,254536
static void delete_pid_file(7773,255267
void refresh_status(7800,256010
PSI_mutex_key key_PAGE_lock,7851,257675
PSI_mutex_key key_PAGE_lock, key_LOCK_sync,7851,257675
PSI_mutex_key key_PAGE_lock, key_LOCK_sync, key_LOCK_active,7851,257675
PSI_mutex_key key_PAGE_lock, key_LOCK_sync, key_LOCK_active, key_LOCK_pool;7851,257675
PSI_mutex_key key_LOCK_des_key_file;7855,257795
PSI_mutex_key key_BINLOG_LOCK_index,7858,257859
PSI_mutex_key key_BINLOG_LOCK_index, key_BINLOG_LOCK_prep_xids,7858,257859
  key_delayed_insert_mutex,7859,257923
  key_delayed_insert_mutex, key_hash_filo_lock,7859,257923
  key_delayed_insert_mutex, key_hash_filo_lock, key_LOCK_active_mi,7859,257923
  key_LOCK_connection_count,7860,257991
  key_LOCK_connection_count, key_LOCK_crypt,7860,257991
  key_LOCK_connection_count, key_LOCK_crypt, key_LOCK_delayed_create,7860,257991
  key_LOCK_delayed_insert,7861,258061
  key_LOCK_delayed_insert, key_LOCK_delayed_status,7861,258061
  key_LOCK_delayed_insert, key_LOCK_delayed_status, key_LOCK_error_log,7861,258061
  key_LOCK_gdl,7862,258133
  key_LOCK_gdl, key_LOCK_global_system_variables,7862,258133
  key_LOCK_manager,7863,258183
  key_LOCK_prepared_stmt_count,7864,258203
  key_LOCK_rpl_status,7865,258235
  key_LOCK_rpl_status, key_LOCK_server_started,7865,258235
  key_LOCK_rpl_status, key_LOCK_server_started, key_LOCK_status,7865,258235
  key_LOCK_system_variables_hash,7866,258300
  key_LOCK_system_variables_hash, key_LOCK_table_share,7866,258300
  key_LOCK_system_variables_hash, key_LOCK_table_share, key_LOCK_thd_data,7866,258300
  key_LOCK_user_conn,7867,258375
  key_LOCK_user_conn, key_LOCK_uuid_generator,7867,258375
  key_LOCK_user_conn, key_LOCK_uuid_generator, key_LOG_LOCK_log,7867,258375
  key_master_info_data_lock,7868,258440
  key_master_info_data_lock, key_master_info_run_lock,7868,258440
  key_master_info_sleep_lock,7869,258495
  key_mutex_slave_reporting_capability_err_lock,7870,258525
  key_mutex_slave_reporting_capability_err_lock, key_relay_log_info_data_lock,7870,258525
  key_relay_log_info_log_space_lock,7871,258604
  key_relay_log_info_log_space_lock, key_relay_log_info_run_lock,7871,258604
  key_relay_log_info_sleep_lock,7872,258670
  key_structure_guard_mutex,7873,258703
  key_structure_guard_mutex, key_TABLE_SHARE_LOCK_ha_data,7873,258703
  key_LOCK_error_messages,7874,258762
  key_LOCK_error_messages, key_LOG_INFO_lock,7874,258762
  key_LOCK_error_messages, key_LOG_INFO_lock, key_LOCK_thread_count,7874,258762
  key_PARTITION_LOCK_auto_inc;7875,258831
PSI_mutex_key key_RELAYLOG_LOCK_index;7876,258862
PSI_mutex_key key_LOCK_thread_created;7877,258901
static PSI_mutex_info all_server_mutexes[all_server_mutexes7879,258941
PSI_rwlock_key key_rwlock_LOCK_grant,7934,261980
PSI_rwlock_key key_rwlock_LOCK_grant, key_rwlock_LOCK_logger,7934,261980
  key_rwlock_LOCK_sys_init_connect,7935,262042
  key_rwlock_LOCK_sys_init_connect, key_rwlock_LOCK_sys_init_slave,7935,262042
  key_rwlock_LOCK_system_variables_hash,7936,262110
  key_rwlock_LOCK_system_variables_hash, key_rwlock_query_cache_query_lock;7936,262110
static PSI_rwlock_info all_server_rwlocks[all_server_rwlocks7938,262187
PSI_cond_key key_PAGE_cond,7952,262810
PSI_cond_key key_PAGE_cond, key_COND_active,7952,262810
PSI_cond_key key_PAGE_cond, key_COND_active, key_COND_pool;7952,262810
PSI_cond_key key_BINLOG_COND_prep_xids,7955,262894
PSI_cond_key key_BINLOG_COND_prep_xids, key_BINLOG_update_cond,7955,262894
  key_COND_cache_status_changed,7956,262958
  key_COND_cache_status_changed, key_COND_manager,7956,262958
  key_COND_rpl_status,7957,263009
  key_COND_rpl_status, key_COND_server_started,7957,263009
  key_delayed_insert_cond,7958,263057
  key_delayed_insert_cond, key_delayed_insert_cond_client,7958,263057
  key_item_func_sleep_cond,7959,263116
  key_item_func_sleep_cond, key_master_info_data_cond,7959,263116
  key_master_info_start_cond,7960,263171
  key_master_info_start_cond, key_master_info_stop_cond,7960,263171
  key_master_info_sleep_cond,7961,263228
  key_relay_log_info_data_cond,7962,263258
  key_relay_log_info_data_cond, key_relay_log_info_log_space_cond,7962,263258
  key_relay_log_info_start_cond,7963,263325
  key_relay_log_info_start_cond, key_relay_log_info_stop_cond,7963,263325
  key_relay_log_info_sleep_cond,7964,263388
  key_TABLE_SHARE_cond,7965,263421
  key_TABLE_SHARE_cond, key_user_level_lock_cond,7965,263421
  key_COND_thread_count,7966,263471
  key_COND_thread_count, key_COND_thread_cache,7966,263471
  key_COND_thread_count, key_COND_thread_cache, key_COND_flush_thread_cache;7966,263471
PSI_cond_key key_RELAYLOG_update_cond;7967,263548
static PSI_cond_info all_server_conds[all_server_conds7969,263588
PSI_thread_key key_thread_bootstrap,8005,265606
PSI_thread_key key_thread_bootstrap, key_thread_delayed_insert,8005,265606
  key_thread_handle_manager,8006,265670
  key_thread_handle_manager, key_thread_main,8006,265670
  key_thread_one_connection,8007,265716
  key_thread_one_connection, key_thread_signal_hand;8007,265716
static PSI_thread_info all_server_threads[all_server_threads8009,265770
PSI_file_key key_file_map;8036,266852
PSI_file_key key_file_binlog,8039,266903
PSI_file_key key_file_binlog, key_file_binlog_index,8039,266903
PSI_file_key key_file_binlog, key_file_binlog_index, key_file_casetest,8039,266903
  key_file_dbopt,8040,266975
  key_file_dbopt, key_file_des_key_file,8040,266975
  key_file_dbopt, key_file_des_key_file, key_file_ERRMSG,8040,266975
  key_file_dbopt, key_file_des_key_file, key_file_ERRMSG, key_select_to_file,8040,266975
  key_file_fileparser,8041,267053
  key_file_fileparser, key_file_frm,8041,267053
  key_file_fileparser, key_file_frm, key_file_global_ddl_log,8041,267053
  key_file_fileparser, key_file_frm, key_file_global_ddl_log, key_file_load,8041,267053
  key_file_loadfile,8042,267130
  key_file_loadfile, key_file_log_event_data,8042,267130
  key_file_loadfile, key_file_log_event_data, key_file_log_event_info,8042,267130
  key_file_master_info,8043,267201
  key_file_master_info, key_file_misc,8043,267201
  key_file_master_info, key_file_misc, key_file_partition,8043,267201
  key_file_pid,8044,267260
  key_file_pid, key_file_relay_log_info,8044,267260
  key_file_pid, key_file_relay_log_info, key_file_send_file,8044,267260
  key_file_pid, key_file_relay_log_info, key_file_send_file, key_file_tclog,8044,267260
  key_file_trg,8045,267337
  key_file_trg, key_file_trn,8045,267337
  key_file_trg, key_file_trn, key_file_init;8045,267337
PSI_file_key key_file_query_log,8046,267382
PSI_file_key key_file_query_log, key_file_slow_log;8046,267382
PSI_file_key key_file_relaylog,8047,267434
PSI_file_key key_file_relaylog, key_file_relaylog_index;8047,267434
static PSI_file_info all_server_files[all_server_files8049,267492
void init_server_psi_keys(8088,268850

sql/net_serv.cc,907
#undef MYSQL_SERVER49,1555
#undef MYSQL_CLIENT50,1575
#define MYSQL_CLIENT51,1595
#define NO_ALARM67,2063
#define DONT_USE_THR_ALARM75,2188
#define USE_QUERY_CACHE90,2592
#define update_statistics(94,2757
#define update_statistics(99,2957
#define thd_increment_bytes_sent(100,2986
#define TEST_BLOCKING	103,3030
#define MAX_PACKET_LENGTH 104,3055
my_bool my_net_init(111,3205
void net_end(149,4225
my_bool net_realloc(160,4371
static int net_data_is_ready(217,5942
#define NET_DATA_IS_READY_CAN_RETURN_MINUS_ONE239,6391
void net_clear(274,7289
my_bool net_flush(331,8999
my_net_write(363,9833
net_write_command(442,11934
net_write_buff(516,14128
net_real_write(574,15635
static my_bool net_safe_read(721,19665
static my_bool my_net_skip_rest(758,20518
my_real_read(807,21792
my_net_read(1024,28456
void my_net_set_read_timeout(1169,32464
void my_net_set_write_timeout(1182,32741

sql/nt_servc.cc,811
static NTService *pService;pService17,289
NTService::NTService(22,474
NTService::~NTService(59,1423
BOOL NTService::GetOS(67,1657
long NTService::Init(89,2118
BOOL NTService::Install(118,2705
BOOL NTService::Remove(177,4265
void NTService::Stop(216,5149
void NTService::ServiceMain(229,5403
void NTService::SetRunning(276,6475
void NTService::SetSlowStarting(282,6586
BOOL NTService::StartService(293,6941
void NTService::StopService(305,7339
void NTService::PauseService(319,7696
void NTService::ResumeService(327,7936
BOOL NTService::SetStatus 335,8175
void NTService::ServiceCtrlHandler(374,9489
void NTService::Exit(403,10182
BOOL NTService::SeekStatus(421,10650
BOOL NTService::IsService(493,12753
BOOL NTService::got_service_option(511,13272
BOOL NTService::is_super_user(521,13636

sql/opt_range.cc,13233
#define test_rb_tree(80,3038
#define test_use_count(81,3067
#define double2rows(88,3219
static uchar is_null_string[is_null_string92,3333
class SEL_ARG 265,10143
  enum leaf_color SEL_ARG::leaf_color293,10988
  enum leaf_color { BLACK,SEL_ARG::leaf_color::BLACK293,10988
  enum leaf_color { BLACK,RED SEL_ARG::leaf_color::RED293,10988
  enum Type SEL_ARG::Type294,11027
  enum Type { IMPOSSIBLE,SEL_ARG::Type::IMPOSSIBLE294,11027
  enum Type { IMPOSSIBLE, MAYBE,SEL_ARG::Type::MAYBE294,11027
  enum Type { IMPOSSIBLE, MAYBE, MAYBE_KEY,SEL_ARG::Type::MAYBE_KEY294,11027
  enum Type { IMPOSSIBLE, MAYBE, MAYBE_KEY, KEY_RANGE SEL_ARG::Type::KEY_RANGE294,11027
  enum { MAX_SEL_ARGS SEL_ARG::MAX_SEL_ARGS296,11090
  SEL_ARG(SEL_ARG::SEL_ARG298,11124
  SEL_ARG(SEL_ARG::SEL_ARG303,11336
  inline bool is_same(SEL_ARG::is_same307,11481
  inline void merge_flags(SEL_ARG::merge_flags315,11697
  inline void maybe_smaller(SEL_ARG::maybe_smaller316,11770
  inline bool is_null_interval(SEL_ARG::is_null_interval318,11876
  inline int cmp_min_to_min(SEL_ARG::cmp_min_to_min319,11954
  inline int cmp_min_to_max(SEL_ARG::cmp_min_to_max323,12082
  inline int cmp_max_to_max(SEL_ARG::cmp_max_to_max327,12210
  inline int cmp_max_to_min(SEL_ARG::cmp_max_to_min331,12338
  SEL_ARG *clone_and(SEL_ARG::clone_and335,12466
  SEL_ARG *clone_first(SEL_ARG::clone_first358,13072
  SEL_ARG *clone_last(SEL_ARG::clone_last364,13307
  bool copy_min(SEL_ARG::copy_min371,13587
  bool copy_max(SEL_ARG::copy_max383,13921
  void copy_min_to_min(SEL_ARG::copy_min_to_min396,14257
  void copy_min_to_max(SEL_ARG::copy_min_to_max400,14356
  void copy_max_to_min(SEL_ARG::copy_max_to_min405,14485
  int store_min(SEL_ARG::store_min411,14693
  int store_max(SEL_ARG::store_max430,15175
  int store_min_key(SEL_ARG::store_min_key457,15990
  int store_max_key(SEL_ARG::store_max_key479,16923
  inline bool simple_key(SEL_ARG::simple_key512,18191
  void increment_use_count(SEL_ARG::increment_use_count516,18270
  void free_tree(SEL_ARG::free_tree527,18569
  inline SEL_ARG **parent_ptr(SEL_ARG::parent_ptr537,18763
  bool is_singlepoint(SEL_ARG::is_singlepoint559,19269
class SEL_TREE 589,19898
  enum Type SEL_TREE::Type597,20095
  enum Type { IMPOSSIBLE,SEL_TREE::Type::IMPOSSIBLE597,20095
  enum Type { IMPOSSIBLE, ALWAYS,SEL_TREE::Type::ALWAYS597,20095
  enum Type { IMPOSSIBLE, ALWAYS, MAYBE,SEL_TREE::Type::MAYBE597,20095
  enum Type { IMPOSSIBLE, ALWAYS, MAYBE, KEY,SEL_TREE::Type::KEY597,20095
  enum Type { IMPOSSIBLE, ALWAYS, MAYBE, KEY, KEY_SMALLER SEL_TREE::Type::KEY_SMALLER597,20095
  SEL_TREE(SEL_TREE::SEL_TREE598,20161
  SEL_TREE(SEL_TREE::SEL_TREE599,20211
class RANGE_OPT_PARAM629,21349
  bool statement_should_be_aborted(RANGE_OPT_PARAM::statement_should_be_aborted675,22747
class PARAM 685,22916
class SEL_IMERGE 798,27739
  enum { PREALLOCED_TREES=SEL_IMERGE::PREALLOCED_TREES800,27777
  SEL_IMERGE(SEL_IMERGE::SEL_IMERGE809,28143
int SEL_IMERGE::or_sel_tree(833,28770
int SEL_IMERGE::or_sel_tree_with_checks(884,30332
int SEL_IMERGE::or_sel_imerge_with_checks(918,31167
SEL_TREE::SEL_TREE(931,31431
SEL_IMERGE::SEL_IMERGE 955,31959
inline void imerge_list_and_list(990,32718
int imerge_list_or_list(1019,33578
int imerge_list_or_tree(1039,33998
SQL_SELECT *make_select(make_select1077,34964
SQL_SELECT::SQL_SELECT(1111,35759
void SQL_SELECT::cleanup(1118,35892
SQL_SELECT::~SQL_SELECT(1132,36053
#undef index	1137,36097
QUICK_SELECT_I::QUICK_SELECT_I(1139,36137
QUICK_RANGE_SELECT::QUICK_RANGE_SELECT(1144,36222
int QUICK_RANGE_SELECT::init(1191,37654
void QUICK_RANGE_SELECT::range_end(1201,37809
QUICK_RANGE_SELECT::~QUICK_RANGE_SELECT(1208,37905
QUICK_INDEX_MERGE_SELECT::QUICK_INDEX_MERGE_SELECT(1238,38703
int QUICK_INDEX_MERGE_SELECT::init(1250,39128
int QUICK_INDEX_MERGE_SELECT::reset(1256,39236
QUICK_INDEX_MERGE_SELECT::push_quick_back(1264,39399
QUICK_INDEX_MERGE_SELECT::~QUICK_INDEX_MERGE_SELECT(1278,39807
QUICK_ROR_INTERSECT_SELECT::QUICK_ROR_INTERSECT_SELECT(1297,40363
int QUICK_ROR_INTERSECT_SELECT::init(1326,41234
int QUICK_RANGE_SELECT::init_ror_merged_scan(1356,42144
int QUICK_ROR_INTERSECT_SELECT::init_ror_merged_scan(1447,44698
int QUICK_ROR_INTERSECT_SELECT::reset(1494,45932
QUICK_ROR_INTERSECT_SELECT::push_quick_back(1524,46626
QUICK_ROR_INTERSECT_SELECT::~QUICK_ROR_INTERSECT_SELECT(1529,46743
QUICK_ROR_UNION_SELECT::QUICK_ROR_UNION_SELECT(1541,47060
static int QUICK_ROR_UNION_SELECT_queue_cmp(1567,47694
int QUICK_ROR_UNION_SELECT::init(1587,48137
int QUICK_ROR_UNION_SELECT::reset(1615,48714
QUICK_ROR_UNION_SELECT::push_quick_back(1662,49737
QUICK_ROR_UNION_SELECT::~QUICK_ROR_UNION_SELECT(1667,49866
QUICK_RANGE::QUICK_RANGE(1679,50150
SEL_ARG::SEL_ARG(1685,50314
inline void SEL_ARG::make_root(1701,50641
SEL_ARG::SEL_ARG(1709,50765
SEL_ARG::SEL_ARG(1719,51155
SEL_ARG *SEL_ARG::clone(SEL_ARG::clone1730,51619
SEL_ARG *SEL_ARG::first(SEL_ARG::first1773,52829
SEL_ARG *SEL_ARG::last(SEL_ARG::last1783,53030
static int sel_cmp(1799,53368
SEL_ARG *SEL_ARG::clone_tree(SEL_ARG::clone_tree1843,54632
class TABLE_READ_PLAN1861,55088
  static void *operator new(TABLE_READ_PLAN::operator new1898,56163
  static void operator delete(TABLE_READ_PLAN::operator delete1900,56280
  static void operator delete(TABLE_READ_PLAN::operator delete1901,56355
  virtual ~TABLE_READ_PLAN(TABLE_READ_PLAN::~TABLE_READ_PLAN1902,56439
class TRP_RANGE 1918,56803
  TRP_RANGE(TRP_RANGE::TRP_RANGE1924,56984
  virtual ~TRP_RANGE(TRP_RANGE::~TRP_RANGE1927,57069
  QUICK_SELECT_I *make_quick(TRP_RANGE::make_quick1929,57141
class TRP_ROR_INTERSECT 1946,57568
  TRP_ROR_INTERSECT(TRP_ROR_INTERSECT::TRP_ROR_INTERSECT1949,57627
  virtual ~TRP_ROR_INTERSECT(TRP_ROR_INTERSECT::~TRP_ROR_INTERSECT1950,57698
class TRP_ROR_UNION 1969,58430
  TRP_ROR_UNION(TRP_ROR_UNION::TRP_ROR_UNION1972,58485
  virtual ~TRP_ROR_UNION(TRP_ROR_UNION::~TRP_ROR_UNION1973,58556
class TRP_INDEX_MERGE 1987,59047
  TRP_INDEX_MERGE(TRP_INDEX_MERGE::TRP_INDEX_MERGE1990,59104
  virtual ~TRP_INDEX_MERGE(TRP_INDEX_MERGE::~TRP_INDEX_MERGE1991,59175
class TRP_GROUP_MIN_MAX 2003,59553
  TRP_GROUP_MIN_MAX(TRP_GROUP_MIN_MAX::TRP_GROUP_MIN_MAX2023,60250
  virtual ~TRP_GROUP_MIN_MAX(TRP_GROUP_MIN_MAX::~TRP_GROUP_MIN_MAX2044,61395
  void use_index_scan(TRP_GROUP_MIN_MAX::use_index_scan2048,61589
static int fill_used_fields_bitmap(2066,62011
int SQL_SELECT::test_quick_select(2161,65723
typedef void (*mark_full_part_func)mark_full_part_func2512,77856
typedef struct st_part_prune_param2517,77963
} PART_PRUNE_PARAM;2580,80335
bool prune_partitions(2623,81989
void store_key_image_to_rec(2775,86726
static void store_selargs_to_rec(2811,87664
static void mark_full_partition_used_no_parts(2825,88127
static void mark_full_partition_used_with_parts(2836,88530
static int find_used_partitions_imerge_list(2868,89500
int find_used_partitions_imerge(2930,91339
int find_used_partitions(3063,97192
static void mark_all_partitions_as_used(3413,110385
static bool fields_ok_for_partition_index(3442,111223
static bool create_partition_index_description(3478,112175
static void print_partitioning_index(3580,115907
static void dbug_print_field(3595,116348
static void dbug_print_segment_range(3612,116733
static void dbug_print_singlepoint_range(3656,117868
double get_sweep_read_cost(3690,118723
TABLE_READ_PLAN *get_best_disjunct_quick(get_best_disjunct_quick3803,122520
static double get_index_only_read_time(4071,132117
typedef struct st_ror_scan_info4088,132611
} ROR_SCAN_INFO;4109,133470
ROR_SCAN_INFO *make_ror_scan(make_ror_scan4128,133882
static int cmp_ror_scan_info(4183,135646
static int cmp_ror_scan_info_covering(4207,136204
} ROR_INTERSECT_INFO;4242,137372
ROR_INTERSECT_INFO* ror_intersect_init(4258,137625
void ror_intersect_cpy(4280,138381
static double ror_scan_selectivity(4383,142016
static bool ror_intersect_add(4496,146137
TRP_ROR_INTERSECT *get_best_ror_intersect(get_best_ror_intersect4620,150407
TRP_ROR_INTERSECT *get_best_covering_ror_intersect(get_best_covering_ror_intersect4820,157261
static TRP_RANGE *get_key_scans_params(get_key_scans_params4956,162429
QUICK_SELECT_I *TRP_INDEX_MERGE::make_quick(TRP_INDEX_MERGE::make_quick5060,166217
QUICK_SELECT_I *TRP_ROR_INTERSECT::make_quick(TRP_ROR_INTERSECT::make_quick5087,167098
QUICK_SELECT_I *TRP_ROR_UNION::make_quick(TRP_ROR_UNION::make_quick5134,168713
static SEL_TREE *get_ne_mm_tree(get_ne_mm_tree5178,170018
static SEL_TREE *get_func_mm_tree(get_func_mm_tree5213,171045
#define NOT_IN_IGNORE_THRESHOLD 5301,174342
static SEL_TREE *get_full_func_mm_tree(get_full_func_mm_tree5535,183428
static SEL_TREE *get_mm_tree(get_mm_tree5579,184813
get_mm_parts(5755,190320
get_mm_leaf(5807,191683
sel_add(6218,205213
#define CLONE_KEY1_MAYBE 6247,205694
#define CLONE_KEY2_MAYBE 6248,205721
#define swap_clone_flag(6249,205748
tree_and(6253,205827
bool sel_trees_can_be_ored(6323,207735
static bool remove_nonrange_trees(6406,210744
tree_or(6427,211101
and_all_keys(6516,213914
key_and(6574,215404
get_range(6688,218321
key_or(6763,221200
static bool eq_tree(7058,228992
SEL_ARG::insert(7089,229724
SEL_ARG::find_range(7137,230810
SEL_ARG::tree_delete(7174,231410
static void left_rotate(7242,233087
static void right_rotate(7256,233367
SEL_ARG::rb_insert(7272,233661
SEL_ARG *rb_delete_fixup(rb_delete_fixup7333,234757
int test_rb_tree(7415,236314
static ulong count_key_part_usage(7493,238825
void SEL_ARG::test_use_count(7524,239595
check_quick_select(7582,241518
check_quick_keys(7691,245095
static bool is_key_scan_ror(7916,253508
get_quick_select(7966,255104
get_quick_keys(8008,256310
bool QUICK_RANGE_SELECT::unique_key_range(8129,260610
static bool null_part_in_key(8146,260999
bool QUICK_SELECT_I::is_keys_used(8159,261251
bool QUICK_INDEX_MERGE_SELECT::is_keys_used(8164,261358
bool QUICK_ROR_INTERSECT_SELECT::is_keys_used(8176,261630
bool QUICK_ROR_UNION_SELECT::is_keys_used(8188,261904
QUICK_RANGE_SELECT *get_quick_select_for_ref(get_quick_select_for_ref8220,262662
int QUICK_INDEX_MERGE_SELECT::read_keys_and_merge(8320,265967
int QUICK_INDEX_MERGE_SELECT::get_next(8425,268737
int QUICK_ROR_INTERSECT_SELECT::get_next(8480,270415
int QUICK_ROR_UNION_SELECT::get_next(8597,273819
int QUICK_RANGE_SELECT::reset(8648,274977
int QUICK_RANGE_SELECT::get_next(8753,277882
int QUICK_RANGE_SELECT::get_next_prefix(8845,280907
int QUICK_RANGE_SELECT_GEOM::get_next(8899,282755
bool QUICK_RANGE_SELECT::row_in_ranges(8953,284365
QUICK_SELECT_DESC::QUICK_SELECT_DESC(8985,285310
int QUICK_SELECT_DESC::get_next(9016,286217
QUICK_SELECT_I *QUICK_RANGE_SELECT::make_reverse(QUICK_RANGE_SELECT::make_reverse9133,290465
int QUICK_RANGE_SELECT::cmp_next(9150,290828
int QUICK_RANGE_SELECT::cmp_prev(9190,291785
bool QUICK_SELECT_DESC::range_reads_after_key(9209,292284
void QUICK_RANGE_SELECT::add_info_string(9217,292526
void QUICK_INDEX_MERGE_SELECT::add_info_string(9223,292657
void QUICK_ROR_INTERSECT_SELECT::add_info_string(9245,293128
void QUICK_ROR_UNION_SELECT::add_info_string(9269,293688
void QUICK_RANGE_SELECT::add_keys_and_lengths(9287,294049
void QUICK_INDEX_MERGE_SELECT::add_keys_and_lengths(9298,294393
void QUICK_ROR_INTERSECT_SELECT::add_keys_and_lengths(9333,295340
void QUICK_ROR_UNION_SELECT::add_keys_and_lengths(9367,296272
get_best_group_min_max(9542,304554
check_group_min_max_predicates(10009,322326
get_sel_arg_for_keypart(10159,327797
get_constant_key_infix(10237,330458
get_field_keypart(10327,333227
SEL_ARG * get_index_range_tree(10363,334322
void cost_group_min_max(10438,337697
TRP_GROUP_MIN_MAX::make_quick(10541,341597
QUICK_GROUP_MIN_MAX_SELECT(10643,345271
int QUICK_GROUP_MIN_MAX_SELECT::init(10705,347519
QUICK_GROUP_MIN_MAX_SELECT::~QUICK_GROUP_MIN_MAX_SELECT(10782,349418
bool QUICK_GROUP_MIN_MAX_SELECT::add_range(10815,350251
void QUICK_GROUP_MIN_MAX_SELECT::adjust_prefix_ranges 10864,352072
void QUICK_GROUP_MIN_MAX_SELECT::update_key_stat(10904,353218
int QUICK_GROUP_MIN_MAX_SELECT::reset(10964,354893
int QUICK_GROUP_MIN_MAX_SELECT::get_next(11015,356557
int QUICK_GROUP_MIN_MAX_SELECT::next_min(11117,359528
int QUICK_GROUP_MIN_MAX_SELECT::next_max(11199,362321
static int index_next_different 11241,363840
int QUICK_GROUP_MIN_MAX_SELECT::next_prefix(11287,365413
int QUICK_GROUP_MIN_MAX_SELECT::next_min_in_range(11353,367383
int QUICK_GROUP_MIN_MAX_SELECT::next_max_in_range(11492,371982
void QUICK_GROUP_MIN_MAX_SELECT::update_min_result(11604,375891
void QUICK_GROUP_MIN_MAX_SELECT::update_max_result(11636,376838
void QUICK_GROUP_MIN_MAX_SELECT::add_keys_and_lengths(11661,377483
static void print_sel_tree(11674,377823
static void print_ror_scans_arr(11705,378564
print_key(11734,379491
static void print_quick(11773,380551
void QUICK_RANGE_SELECT::dbug_dump(11795,381104
void QUICK_INDEX_MERGE_SELECT::dbug_dump(11835,382136
void QUICK_ROR_INTERSECT_SELECT::dbug_dump(11851,382676
void QUICK_ROR_UNION_SELECT::dbug_dump(11868,383260
void QUICK_GROUP_MIN_MAX_SELECT::dbug_dump(11900,384111

sql/opt_sum.cc,343
static ulonglong get_exact_record_count(78,2812
static int get_index_min_value(106,3493
static int get_index_max_value(199,7056
int opt_sum_query(237,8322
bool simple_pred(488,16643
static bool matching_cond(612,20732
static bool find_key_for_maxmin(843,28742
static int reckey_in_range(949,32371
static int maxmin_in_range(973,33075

sql/parse_file.cc,416
write_escaped_string(49,1349
write_parameter(105,2740
sql_create_definition_file(211,5648
my_bool rename_in_schema_file(317,8553
sql_parse_prepare(362,9905
parse_string(468,12355
read_escaped_string(498,12906
parse_escaped_string(559,14063
parse_quoted_escaped_string(588,14784
bool get_file_options_ulllist(628,15753
File_parser::parse(692,17574
File_parser_dummy_hook::process_unknown_string(898,22753

sql/partition_info.cc,2684
partition_info *partition_info::get_clone(partition_info::get_clone34,1246
#define MAX_PART_NAME_SIZE 97,3066
char *partition_info::create_default_partition_names(partition_info::create_default_partition_names99,3096
void partition_info::set_show_version_string(134,3969
char *partition_info::create_subpartition_name(partition_info::create_subpartition_name171,5031
bool partition_info::set_up_default_partitions(214,6443
bool partition_info::set_up_default_subpartitions(295,8925
bool partition_info::set_up_defaults_for_partitioning(359,10654
char* partition_info::has_unique_fields(393,11623
bool partition_info::has_unique_name(433,12573
char *partition_info::has_unique_names(partition_info::has_unique_names479,13778
static bool check_engine_condition(545,15728
bool partition_info::check_engine_mix(601,17622
bool partition_info::check_range_constants(690,20932
int partition_info_list_part_cmp(805,24310
int partition_info::list_part_cmp(818,24565
int partition_info_compare_column_values(837,25074
int partition_info::compare_column_values(875,26094
bool partition_info::check_list_constants(903,27128
static void warn_if_dir_in_part_elem(1053,31516
bool partition_info::check_partition_info(1095,32995
void partition_info::print_no_partition_found(1333,40391
bool partition_info::set_part_expr(1381,41815
bool partition_info::check_partition_field_length(1421,42708
bool partition_info::set_up_charset_field_preps(1456,43744
bool check_partition_dirs(1569,46756
void partition_info::report_part_expr_error(1616,47921
int partition_info::add_max_value(1666,49233
part_column_list_val *partition_info::add_column_value(partition_info::add_column_value1691,49754
void partition_info::init_col_val(1747,51500
bool partition_info::add_column_list_value(1785,52627
bool partition_info::init_column_part(1846,54124
int partition_info::reorganize_into_single_field_col_val(1900,55913
int partition_info::fix_partition_values(1948,57287
Item* partition_info::get_column_item(2031,59429
bool partition_info::fix_column_value_functions(2062,60311
int partition_info::fix_parser_data(2172,63930
static bool strcmp_null(2273,66909
bool partition_info::has_same_partitioning(2300,67782
void partition_info::print_debug(2517,75655
part_column_list_val *partition_info::add_column_value(partition_info::add_column_value2533,76221
bool partition_info::set_part_expr(2538,76298
int partition_info::reorganize_into_single_field_col_val(2548,76536
bool partition_info::init_column_part(2553,76612
bool partition_info::add_column_list_value(2558,76673
int partition_info::add_max_value(2562,76758
void partition_info::print_debug(2567,76811

sql/procedure.cc,329
static struct st_procedure_def 30,1050
} sql_procs[sql_procs34,1201
my_decimal *Item_proc_string::val_decimal(Item_proc_string::val_decimal44,1524
my_decimal *Item_proc_int::val_decimal(Item_proc_int::val_decimal53,1724
my_decimal *Item_proc_real::val_decimal(Item_proc_real::val_decimal62,1928
setup_procedure(80,2217

sql/protocol.cc,2485
static const unsigned int PACKET_BUFFER_EXTRA_ALLOC=33,1196
bool Protocol::net_store_data(45,1779
bool Protocol::net_store_data(80,2911
bool net_send_error(145,5111
net_send_ok(206,6823
static uchar eof_buff[eof_buff260,8275
net_send_eof(286,9053
static bool write_eof_packet(320,10018
bool net_send_error_packet(361,11230
static uchar *net_store_length_fast(net_store_length_fast418,12855
void Protocol::end_statement(486,15667
bool Protocol::send_ok(537,17196
bool Protocol::send_eof(555,17730
bool Protocol::send_error(569,18086
uchar *net_store_data(net_store_data585,18687
uchar *net_store_data(net_store_data592,18844
uchar *net_store_data(net_store_data601,19051
void Protocol::init(615,19455
void Protocol::end_partial_result_set(631,19774
bool Protocol::flush(637,19919
bool Protocol::send_result_set_metadata(670,20677
bool Protocol::write(818,25963
bool Protocol::send_result_set_row(837,26339
bool Protocol::store(882,27338
bool Protocol::store(895,27574
void Protocol_text::prepare_for_resend(923,28433
bool Protocol_text::store_null(931,28540
bool Protocol::store_string_aux(948,28839
bool Protocol_text::store(964,29357
bool Protocol_text::store(980,29906
bool Protocol_text::store_tiny(1001,30758
bool Protocol_text::store_short(1013,31042
bool Protocol_text::store_long(1028,31421
bool Protocol_text::store_longlong(1043,31841
bool Protocol_text::store_decimal(1058,32264
bool Protocol_text::store(1072,32674
bool Protocol_text::store(1084,33004
bool Protocol_text::store(1096,33327
bool Protocol_text::store(1129,34076
bool Protocol_text::store_date(1149,34691
bool Protocol_text::store_time(1168,35108
bool Protocol_text::send_out_parameters(1196,35874
bool Protocol_binary::prepare_for_send(1253,37829
void Protocol_binary::prepare_for_resend(1263,38064
bool Protocol_binary::store(1271,38207
bool Protocol_binary::store(1279,38453
bool Protocol_binary::store_null(1286,38659
bool Protocol_binary::store_tiny(1297,38939
bool Protocol_binary::store_short(1306,39121
bool Protocol_binary::store_long(1317,39320
bool Protocol_binary::store_longlong(1328,39512
bool Protocol_binary::store_decimal(1338,39727
bool Protocol_binary::store(1351,40135
bool Protocol_binary::store(1362,40354
bool Protocol_binary::store(1373,40574
bool Protocol_binary::store(1385,40834
bool Protocol_binary::store_date(1411,41462
bool Protocol_binary::store_time(1419,41614
bool Protocol_binary::send_out_parameters(1458,42541

sql/records.cc,606
void init_read_record_idx(67,2433
void init_read_record(178,7025
void end_read_record(307,11345
static int rr_handle_error(324,11767
static int rr_quick(347,12205
static int rr_index_first(375,12608
static int rr_index_last(404,13116
static int rr_index(430,13554
static int rr_index_desc(455,13967
int rr_sequential(464,14128
static int rr_from_tempfile(483,14515
static int rr_unpack_from_tempfile(519,15561
static int rr_from_pointers(529,15808
static int rr_unpack_from_buffer(570,16873
static int init_rr_cache(582,17218
static int rr_from_cache(615,18435
static int rr_cmp(689,20493

sql/repl_failsafe.cc,808
#define SLAVE_LIST_CHUNK 40,1509
#define SLAVE_ERRMSG_SIZE 41,1538
ulong rpl_status=44,1581
mysql_mutex_t LOCK_rpl_status;45,1608
mysql_cond_t COND_rpl_status;46,1639
HASH slave_list;47,1669
const char *rpl_role_type[rpl_role_type49,1687
TYPELIB rpl_role_typelib 50,1743
const char* rpl_status_type[rpl_status_type53,1837
void change_rpl_status(67,2339
#define get_object(77,2607
void unregister_slave(90,2813
int register_slave(118,3416
*slave_list_key(slave_list_key165,4850
extern "C" void slave_info_free(172,4981
static PSI_mutex_key key_LOCK_slave_list;178,5067
static PSI_mutex_info all_slave_list_mutexes[all_slave_list_mutexes180,5110
static void init_all_slave_list_mutexes(185,5226
void init_slave_list(198,5513
void end_slave_list(210,5864
bool show_slave_hosts(230,6263

sql/rpl_filter.cc,1233
#define TABLE_RULE_HASH_SIZE 22,998
#define TABLE_RULE_ARR_SIZE 23,1032
Rpl_filter::Rpl_filter(25,1066
Rpl_filter::~Rpl_filter(35,1280
Rpl_filter::tables_ok(90,3107
Rpl_filter::db_ok(149,4689
Rpl_filter::db_ok_with_wild_table(224,6951
Rpl_filter::is_on(255,7690
Rpl_filter::add_do_table(262,7746
Rpl_filter::add_ignore_table(273,8005
Rpl_filter::add_wild_do_table(284,8286
Rpl_filter::add_wild_ignore_table(295,8580
Rpl_filter::add_db_rewrite(306,8897
Rpl_filter::add_table_rule(314,9070
Rpl_filter::add_wild_table_rule(337,9675
Rpl_filter::add_do_db(354,10170
Rpl_filter::add_ignore_db(364,10352
uchar *get_table_key(get_table_key375,10649
void free_table_ent(385,10847
Rpl_filter::init_table_rule_hash(394,10948
Rpl_filter::init_table_rule_array(403,11139
Rpl_filter::find_wild(412,11345
Rpl_filter::free_string_array(433,11758
Rpl_filter::table_rule_ent_hash_to_str(460,12276
Rpl_filter::table_rule_ent_dynamic_array_to_str(477,12599
Rpl_filter::get_do_table(496,12984
Rpl_filter::get_ignore_table(503,13096
Rpl_filter::get_wild_do_table(510,13220
Rpl_filter::get_wild_ignore_table(517,13356
Rpl_filter::get_rewrite_db(524,13511
Rpl_filter::get_do_db(544,13860
Rpl_filter::get_ignore_db(551,13927

sql/rpl_handler.cc,1877
Trans_delegate *transaction_delegate;transaction_delegate26,923
Binlog_storage_delegate *binlog_storage_delegate;binlog_storage_delegate27,961
Binlog_transmit_delegate *binlog_transmit_delegate;binlog_transmit_delegate29,1035
Binlog_relay_IO_delegate *binlog_relay_io_delegate;binlog_relay_io_delegate30,1087
typedef struct Trans_binlog_info 36,1234
} Trans_binlog_info;39,1317
int get_user_var_int(43,1403
int get_user_var_real(58,1801
int get_user_var_str(73,2195
int delegates_init(90,2679
void delegates_destroy(156,4658
#define FOREACH_OBSERVER(178,5368
int Trans_delegate::after_commit(229,8688
int Trans_delegate::after_rollback(257,9456
int Binlog_storage_delegate::after_flush(285,10232
int Binlog_transmit_delegate::transmit_start(316,11153
int Binlog_transmit_delegate::transmit_stop(328,11514
int Binlog_transmit_delegate::reserve_header(338,11724
#define RESERVE_HEADER_SIZE 346,12079
int Binlog_transmit_delegate::before_send_event(390,13148
int Binlog_transmit_delegate::after_send_event(406,13713
int Binlog_transmit_delegate::after_reset_master(418,14046
void Binlog_relay_IO_delegate::init_param(429,14267
int Binlog_relay_IO_delegate::thread_start(440,14597
int Binlog_relay_IO_delegate::thread_stop(451,14813
int Binlog_relay_IO_delegate::before_request_transmit(462,15027
int Binlog_relay_IO_delegate::after_read_event(474,15401
int Binlog_relay_IO_delegate::after_queue_event(488,15892
int Binlog_relay_IO_delegate::after_reset_slave(506,16434
int register_trans_observer(518,16690
int unregister_trans_observer(523,16833
int register_binlog_storage_observer(528,16981
int unregister_binlog_storage_observer(533,17145
int register_binlog_transmit_observer(539,17338
int unregister_binlog_transmit_observer(544,17505
int register_binlog_relay_io_observer(549,17677
int unregister_binlog_relay_io_observer(554,17844

sql/rpl_injector.cc,748
injector::transaction::transaction(30,1218
injector::transaction::~transaction(46,1700
int injector::transaction::commit(68,2265
int injector::transaction::use_table(101,3488
int injector::transaction::write_row 119,3941
int injector::transaction::delete_row(138,4495
int injector::transaction::update_row(157,5051
injector::transaction::binlog_pos injector::transaction::start_pos(176,5633
inline injector::injector(187,5818
static injector *s_injector=s_injector191,5851
injector *injector::instance(injector::instance192,5883
void injector::free_instance(200,6036
injector::transaction injector::new_trans(212,6163
void injector::new_trans(222,6470
int injector::record_incident(235,6841
int injector::record_incident(243,7053

sql/rpl_mi.cc,934
#define DEFAULT_CONNECT_RETRY 25,1036
Master_info::Master_info(36,1449
Master_info::~Master_info(59,2568
int change_master_server_id_cmp(78,3080
bool Master_info::shall_ignore_server_id(97,3575
void Master_info::clear_in_memory_info(109,4016
void init_master_log_pos(119,4187
  LINES_IN_MASTER_INFO_WITH_SSL=::LINES_IN_MASTER_INFO_WITH_SSL144,4986
  LINE_FOR_MASTER_SSL_VERIFY_SERVER_CERT=::LINE_FOR_MASTER_SSL_VERIFY_SERVER_CERT147,5084
  LINE_FOR_MASTER_HEARTBEAT_PERIOD=::LINE_FOR_MASTER_HEARTBEAT_PERIOD149,5181
  LINE_FOR_MASTER_BIND ::LINE_FOR_MASTER_BIND151,5265
  LINE_FOR_REPLICATE_IGNORE_SERVER_IDS=::LINE_FOR_REPLICATE_IGNORE_SERVER_IDS153,5345
  LINES_IN_MASTER_INFO=::LINES_IN_MASTER_INFO155,5457
  LINES_IN_MASTER_INFO= LINE_FOR_REPLICATE_IGNORE_SERVER_IDS::LINE_FOR_REPLICATE_IGNORE_SERVER_IDS155,5457
int init_master_info(158,5522
int flush_master_info(447,15173
void end_master_info(548,18942

sql/rpl_record.cc,69
pack_row(59,2153
unpack_row(185,6385
int prepare_record(412,14177

sql/rpl_record_old.cc,45
pack_row_old(23,961
unpack_row_old(89,3041

sql/rpl_reporting.cc,172
Slave_reporting_capability::Slave_reporting_capability(22,894
Slave_reporting_capability::report(30,1132
Slave_reporting_capability::~Slave_reporting_capability(76,2455

sql/rpl_rli.cc,849
Relay_log_info::Relay_log_info(39,1626
Relay_log_info::~Relay_log_info(89,3873
int init_relay_log_info(107,4328
static inline int add_relay_log(369,13596
static int count_relay_log_space(389,14130
void Relay_log_info::clear_until_condition(422,14954
int init_relay_log_pos(465,16396
int Relay_log_info::wait_for_pos(675,23584
void Relay_log_info::inc_group_relay_log_pos(857,29969
void Relay_log_info::close_temporary_tables(914,32638
int purge_relay_logs(941,33297
bool Relay_log_info::is_until_satisfied(1059,37718
void Relay_log_info::cached_charset_invalidate(1143,40751
bool Relay_log_info::cached_charset_compare(1153,40979
void Relay_log_info::stmt_done(1166,41296
void Relay_log_info::cleanup_context(1221,43561
void Relay_log_info::clear_tables_to_lock(1265,45170
void Relay_log_info::slave_close_thread_tables(1311,46634

sql/rpl_tblmap.cc,411
#define MAYBE_TABLE_NAME(27,953
#define MAYBE_TABLE_NAME(29,992
#define TABLE_ID_HASH_SIZE 31,1065
#define TABLE_ID_CHUNK 32,1095
table_mapping::table_mapping(34,1123
table_mapping::~table_mapping(51,1749
TABLE* table_mapping::get_table(60,1895
int table_mapping::expand(82,2504
int table_mapping::set_table(103,3149
int table_mapping::remove_table(140,4136
void table_mapping::clear_tables(158,4570

sql/rpl_utility.cc,730
int compare(28,1025
uint32 uint_max(43,1251
max_display_length_for_field(56,1552
int compare_lengths(175,4298
uint32 table_def::calc_field_size(198,5295
void show_sql_type(346,9116
bool is_conversion_ok(518,13372
can_convert_field_to(579,15404
table_def::compatible_with(775,21581
TABLE *table_def::create_conversion_table(table_def::create_conversion_table876,25111
table_def::table_def(972,28472
table_def::~table_def(1064,31210
Deferred_log_events::Deferred_log_events(1076,31367
Deferred_log_events::~Deferred_log_events(1081,31515
int Deferred_log_events::add(1086,31591
bool Deferred_log_events::is_empty(1093,31710
bool Deferred_log_events::execute(1098,31784
void Deferred_log_events::rewind(1115,32189

sql/scheduler.cc,842
static bool no_threads_end(35,1154
static scheduler_functions one_thread_scheduler_functions=42,1355
static scheduler_functions one_thread_per_connection_scheduler_functions=60,2083
scheduler_functions *thread_scheduler=thread_scheduler75,2713
static void scheduler_wait_lock_begin(85,2887
static void scheduler_wait_lock_end(90,3041
static void scheduler_wait_sync_begin(94,3153
static void scheduler_wait_sync_end(99,3307
static void scheduler_init(112,3649
void one_thread_per_connection_scheduler(124,4008
void one_thread_scheduler(136,4292
thd_scheduler::thd_scheduler(152,4573
thd_scheduler::~thd_scheduler(158,4638
static scheduler_functions *saved_thread_scheduler;saved_thread_scheduler162,4675
static uint saved_thread_handling;163,4727
int my_thread_scheduler_set(166,4774
int my_thread_scheduler_reset(183,5128

sql/set_var.cc,1656
static HASH system_variable_hash;47,2122
static PolyLock_mutex PLock_global_system_variables(&LOCK_global_system_variables)LOCK_global_system_variables48,2156
static uchar *get_sys_var_length(get_sys_var_length54,2309
sys_var_chain all_sys_vars 61,2493
int sys_var_init(63,2539
int sys_var_add_options(84,3013
void sys_var_end(104,3465
sys_var::sys_var(142,5106
bool sys_var::update(187,6887
uchar *sys_var::session_value_ptr(sys_var::session_value_ptr208,7579
uchar *sys_var::global_value_ptr(sys_var::global_value_ptr213,7677
bool sys_var::check(218,7770
uchar *sys_var::value_ptr(sys_var::value_ptr246,8465
bool sys_var::set_default(258,8775
void sys_var::do_deprecated_warning(268,9007
bool throw_bounds_warning(303,10147
bool throw_bounds_warning(327,10766
CHARSET_INFO *sys_var::charset(sys_var::charset347,11291
typedef struct old_names_map_st353,11429
} my_old_conv;357,11511
static my_old_conv old_conv[old_conv359,11527
CHARSET_INFO *get_old_charset_by_name(get_old_charset_by_name374,12212
int mysql_add_sys_var_chain(405,12953
int mysql_del_sys_var_chain(441,13748
static int show_cmp(454,14016
SHOW_VAR* enumerate_sys_vars(473,14458
sys_var *intern_find_sys_var(intern_find_sys_var521,15656
int sql_set_variables(555,16499
int set_var::check(593,17364
int set_var::light_check(637,18433
int set_var::update(666,19200
int set_var_user::check(676,19518
int set_var_user::light_check(699,20047
int set_var_user::update(709,20290
int set_var_password::check(725,20715
int set_var_password::update(756,21534
int set_var_collation_client::check(771,21997
int set_var_collation_client::update(783,22319

sql/sha2.cc,80
#  define GEN_YASSL_SHA2_BRIDGE(35,1240
#  undef GEN_YASSL_SHA2_BRIDGE66,2268

sql/signal_handler.cc,202
#define SIGNAL_FMT 24,869
#define SIGNAL_FMT 26,911
static volatile sig_atomic_t segfaulted=34,1113
extern "C" sig_handler handle_fatal_signal(57,1913
#define UNSAFE_DEFAULT_LINUX_THREADS 134,4795

sql/slave.cc,4653
#define FLAGSTR(60,1874
#define MAX_SLAVE_RETRY_PAUSE 62,1915
#define SLAVE_WAIT_GROUP_DONE 66,2016
bool use_slave_mask 67,2049
MY_BITMAP slave_error_mask;68,2074
char slave_skip_error_names[slave_skip_error_names69,2102
char* slave_load_tmpdir 71,2157
Master_info *active_mi=active_mi72,2186
my_bool replicate_same_server_id;73,2213
ulonglong relay_log_space_limit 74,2247
int disconnect_slave_event_count 83,2447
enum enum_slave_reconnect_actions87,2567
  SLAVE_RECON_ACT_REG=enum_slave_reconnect_actions::SLAVE_RECON_ACT_REG89,2603
  SLAVE_RECON_ACT_DUMP=enum_slave_reconnect_actions::SLAVE_RECON_ACT_DUMP90,2629
  SLAVE_RECON_ACT_EVENT=enum_slave_reconnect_actions::SLAVE_RECON_ACT_EVENT91,2656
  SLAVE_RECON_ACT_MAXenum_slave_reconnect_actions::SLAVE_RECON_ACT_MAX92,2684
enum enum_slave_reconnect_messages95,2710
  SLAVE_RECON_MSG_WAIT=enum_slave_reconnect_messages::SLAVE_RECON_MSG_WAIT97,2747
  SLAVE_RECON_MSG_KILLED_WAITING=enum_slave_reconnect_messages::SLAVE_RECON_MSG_KILLED_WAITING98,2774
  SLAVE_RECON_MSG_AFTER=enum_slave_reconnect_messages::SLAVE_RECON_MSG_AFTER99,2811
  SLAVE_RECON_MSG_FAILED=enum_slave_reconnect_messages::SLAVE_RECON_MSG_FAILED100,2839
  SLAVE_RECON_MSG_COMMAND=enum_slave_reconnect_messages::SLAVE_RECON_MSG_COMMAND101,2868
  SLAVE_RECON_MSG_KILLED_AFTER=enum_slave_reconnect_messages::SLAVE_RECON_MSG_KILLED_AFTER102,2898
  SLAVE_RECON_MSG_MAXenum_slave_reconnect_messages::SLAVE_RECON_MSG_MAX103,2933
static const char *reconnect_messages[reconnect_messages106,2959
typedef enum { SLAVE_THD_IO,::SLAVE_THD_IO139,4195
typedef enum { SLAVE_THD_IO, SLAVE_THD_SQL}::SLAVE_THD_SQL139,4195
typedef enum { SLAVE_THD_IO, SLAVE_THD_SQL} SLAVE_THD_TYPE;139,4195
static void set_slave_max_allowed_packet(169,5712
void init_thread_mask(211,7045
void lock_slave_threads(232,7449
void unlock_slave_threads(247,7710
static PSI_thread_key key_thread_slave_io,258,7972
static PSI_thread_key key_thread_slave_io, key_thread_slave_sql;258,7972
static PSI_thread_info all_slave_threads[all_slave_threads260,8038
static void init_slave_psi_keys(266,8201
int init_slave(281,8506
int init_recovery(383,11653
static void print_slave_skip_errors(413,12591
void init_slave_skip_errors(481,14555
static void set_thd_in_use_temporary_tables(515,15479
int terminate_slave_threads(523,15670
terminate_slave_thread(624,19161
int start_slave_thread(699,21057
int start_slave_threads(789,23756
void end_slave(844,25363
void close_active_mi(878,26308
static bool io_slave_killed(890,26509
static bool sql_slave_killed(912,27278
void skip_load_data_infile(1005,30578
bool net_request_file(1016,30874
const char *print_slave_db_safe(print_slave_db_safe1030,31329
int init_strvar_from_file(1037,31452
int init_intvar_from_file(1068,32158
int init_floatvar_from_file(1087,32468
int init_dynarray_intvar_from_file(1127,33511
bool is_network_error(1205,35566
static int get_master_version_and_clock(1234,36514
static bool wait_for_relay_log_space(1605,49829
static void write_ignored_events_info_to_relay_log(1688,52620
int register_slave_on_master(1731,54332
bool show_master_info(1817,57257
void set_slave_thread_options(2050,68191
void set_slave_thread_default_charset(2072,69024
static int init_slave_thread(2098,69783
template <typename killed_func,2150,71553
static inline bool slave_sleep(2151,71604
static int request_dump(2179,72316
static ulong read_event(2238,74131
static int has_temporary_error(2292,75805
int apply_event_and_update_pos(2369,77820
static int exec_relay_log_event(2514,82861
static bool check_io_slave_killed(2683,89473
static int try_to_reconnect(2720,90967
pthread_handler_t handle_slave_io(2777,92703
int check_temp_dir(3149,106139
pthread_handler_t handle_slave_sql(3196,107094
static int process_io_create_file(3545,120703
static int process_io_rotate(3672,124405
static int queue_binlog_ver_1_event(3719,126101
static int queue_binlog_ver_3_event(3837,129937
static int queue_old_event(3901,131739
static int queue_event(3929,132680
void end_relay_log_info(4160,141563
extern "C" void slave_io_thread_detach_vio(4205,142873
static int safe_connect(4229,143309
static int connect_to_master(4246,143627
static int safe_reconnect(4366,147817
MYSQL *rpl_connect_master(rpl_connect_master4374,148044
bool flush_relay_log_info(4471,151171
static IO_CACHE *reopen_relay_log(reopen_relay_log4515,152226
static Log_event* next_event(4546,153259
int rotate_relay_log(4990,171434
bool rpl_master_has_bug(5046,173420
  struct st_version_range_for_one_bug 5049,173570
bool rpl_master_erroneous_autoinc(5120,176734

sql/sp.cc,2288
TABLE_FIELD_TYPE proc_table_fields[proc_table_fields56,2292
  proc_table_def=169,5314
class Stored_routine_creation_ctx 178,5569
  virtual Stored_program_creation_ctx *clone(Stored_routine_creation_ctx::clone186,5816
  virtual Object_creation_ctx *create_backup_ctx(Stored_routine_creation_ctx::create_backup_ctx194,6103
  Stored_routine_creation_ctx(Stored_routine_creation_ctx::Stored_routine_creation_ctx201,6307
  Stored_routine_creation_ctx(Stored_routine_creation_ctx::Stored_routine_creation_ctx205,6393
bool load_charset(216,6834
bool load_collation(242,7321
Stored_routine_creation_ctx::load_from_db(269,7829
class Proc_table_intact 348,10371
  Proc_table_intact(Proc_table_intact::Proc_table_intact354,10464
void Proc_table_intact::report_error(366,10697
static Proc_table_intact proc_table_intact;389,11156
TABLE *open_proc_table_for_read(open_proc_table_for_read406,11580
static TABLE *open_proc_table_for_update(open_proc_table_for_update440,12256
db_find_routine_aux(477,13185
db_find_routine(529,14985
struct Silence_deprecated_warning 675,18854
Silence_deprecated_warning::handle_condition(687,19261
static sp_head *sp_compile(sp_compile717,20066
class Bad_db_error_handler 760,21134
  Bad_db_error_handler(Bad_db_error_handler::Bad_db_error_handler763,21203
  bool error_caught(Bad_db_error_handler::error_caught774,21588
Bad_db_error_handler::handle_condition(781,21685
db_load_routine(798,22172
sp_returns_type(916,25718
sp_create_routine(967,27143
sp_drop_routine(1237,36053
sp_update_routine(1318,38599
class Lock_db_routines_error_handler 1412,41664
  bool handle_condition(Lock_db_routines_error_handler::handle_condition1415,41743
bool lock_db_routines(1441,42535
sp_drop_db_routines(1523,45514
sp_show_create_routine(1603,47553
sp_find_routine(1659,49218
sp_exist_routines(1766,52646
extern "C" uchar* sp_sroutine_key(1803,53824
bool sp_add_used_routine(1845,55331
void sp_add_used_routine(1888,56936
void sp_remove_not_own_routines(1908,57687
bool sp_update_sp_used_routines(1949,59018
sp_update_stmt_used_routines(1980,59907
void sp_update_stmt_used_routines(2006,60798
int sp_cache_routine(2021,61331
int sp_cache_routine(2062,63012
create_string(2141,65259
sp_load_for_information_schema(2234,68391

sql/sp_cache.cc,962
static mysql_mutex_t Cversion_lock;24,894
static ulong volatile Cversion=25,930
class sp_cache32,1003
  inline bool insert(sp_cache::insert45,1197
  inline sp_head *lookup(sp_cache::lookup50,1300
  inline void remove(sp_cache::remove56,1481
  void enforce_limit(sp_cache::enforce_limit68,1845
static PSI_mutex_key key_Cversion_lock;83,2144
static PSI_mutex_info all_sp_cache_mutexes[all_sp_cache_mutexes85,2185
static void init_sp_cache_psi_keys(90,2295
void sp_cache_init(105,2597
void sp_cache_clear(126,2937
void sp_cache_insert(152,3469
sp_head *sp_cache_lookup(sp_cache_lookup186,4295
void sp_cache_invalidate(207,4767
void sp_cache_flush_obsolete(225,5156
ulong sp_cache_version(239,5393
sp_cache_enforce_limit(254,5774
uchar *hash_get_key_for_sp_head(hash_get_key_for_sp_head268,6255
void hash_free_sp_head(277,6467
sp_cache::sp_cache(284,6547
sp_cache::~sp_cache(290,6584
sp_cache::init(297,6647
sp_cache::cleanup(305,6798

sql/sp_head.cc,4148
#define SP_INSTR_UINT_MAXLEN 47,1867
#define SP_STMT_PRINT_MAXLEN 48,1899
static void reset_start_time_for_sp(63,2186
sp_map_result_type(82,2496
sp_map_item_type(105,2950
sp_get_item_value(144,3790
sp_get_flags_for_command(198,5178
sp_prepare_func_item(344,8958
sp_eval_expr(374,9635
sp_name::sp_name(438,11617
sp_name::init_qname(463,12160
check_routine_name(491,12954
sp_head::operator new(sp_head::operator new517,13407
sp_head::operator delete(sp_head::operator delete533,13808
sp_head::sp_head(553,14282
sp_head::init(593,15231
sp_head::init_sp_name(641,16046
sp_head::set_body_start(673,16940
sp_head::set_stmt_end(681,17097
create_typelib(724,18329
sp_head::~sp_head(775,19886
sp_head::create_result_field(820,20876
int cmp_splocal_locations(851,22010
subst_spvars(953,25739
void sp_head::recursion_level_error(1077,29231
find_handler_after_execution(1155,32249
sp_head::execute(1209,33739
set_routine_security_ctx(1593,47308
sp_head::execute_trigger(1655,49144
sp_head::execute_function(1793,53273
sp_head::execute_procedure(2036,60976
sp_head::reset_lex(2293,67654
sp_head::restore_lex(2343,68662
sp_head::push_backpatch(2387,69825
sp_head::backpatch(2403,70126
sp_head::fill_field_definition(2438,70936
sp_head::new_cont_backpatch(2471,71922
sp_head::add_cont_backpatch(2485,72180
sp_head::do_cont_backpatch(2492,72313
sp_head::set_info(2506,72566
sp_head::set_definer(2524,73168
sp_head::set_definer(2540,73614
sp_head::reset_thd_mem_root(2551,73955
sp_head::restore_thd_mem_root(2565,74372
bool check_show_routine_access(2609,75736
sp_head::show_create_routine(2642,76826
int sp_head::add_instr(2738,79356
void sp_head::optimize(2769,80422
void sp_head::add_mark_lead(2810,81145
sp_head::opt_mark(2819,81296
sp_head::show_routine_code(2864,82434
sp_lex_keeper::reset_lex_and_exec_core(2947,85068
int sp_instr::exec_open_and_lock_tables(3082,89384
uint sp_instr::get_cont_dest(3099,89802
int sp_instr::exec_core(3105,89858
sp_instr_stmt::execute(3116,89983
sp_instr_stmt::print(3168,91520
sp_instr_stmt::exec_core(3200,92351
sp_instr_set::execute(3220,92840
sp_instr_set::exec_core(3230,93060
sp_instr_set::print(3250,93471
sp_instr_set_trigger_field::execute(3278,94053
sp_instr_set_trigger_field::exec_core(3287,94307
sp_instr_set_trigger_field::print(3295,94478
uint sp_instr_opt_meta::get_cont_dest(3307,94725
sp_instr_jump::execute(3318,94835
sp_instr_jump::print(3328,95019
sp_instr_jump::opt_mark(3338,95207
sp_instr_jump::opt_shortcut_jump(3348,95450
sp_instr_jump::opt_move(3368,95778
sp_instr_jump_if_not::execute(3383,96027
sp_instr_jump_if_not::exec_core(3392,96265
sp_instr_jump_if_not::print(3416,96553
sp_instr_jump_if_not::opt_mark(3431,96939
sp_instr_jump_if_not::opt_move(3452,97407
sp_instr_freturn::execute(3477,98066
sp_instr_freturn::exec_core(3485,98245
sp_instr_freturn::print(3506,98739
sp_instr_hpush_jump::execute(3522,99070
sp_instr_hpush_jump::print(3537,99357
sp_instr_hpush_jump::opt_mark(3568,100133
sp_instr_hpop::execute(3605,101036
sp_instr_hpop::print(3614,101206
sp_instr_hreturn::execute(3629,101438
sp_instr_hreturn::print(3644,101678
sp_instr_hreturn::opt_mark(3660,101966
sp_instr_cpush::execute(3685,102361
sp_instr_cpush::print(3707,102854
sp_instr_cpop::execute(3733,103297
sp_instr_cpop::print(3743,103467
sp_instr_copen::execute(3763,103765
sp_instr_copen::exec_core(3798,104781
sp_instr_copen::print(3807,104948
sp_instr_cclose::execute(3833,105393
sp_instr_cclose::print(3849,105650
sp_instr_cfetch::execute(3875,106098
sp_instr_cfetch::print(3890,106372
sp_instr_error::execute(3927,107142
sp_instr_error::print(3938,107327
sp_instr_set_case_expr::execute(3953,107720
sp_instr_set_case_expr::exec_core(3962,107912
sp_instr_set_case_expr::print(3990,108548
sp_instr_set_case_expr::opt_mark(4003,108937
sp_instr_set_case_expr::opt_move(4018,109247
typedef struct st_sp_table4036,109664
} SP_TABLE;4050,110096
uchar *sp_table_key(sp_table_key4053,110110
sp_head::merge_table_list(4081,110784
sp_head::add_used_tables_to_table_list(4197,114882
sp_add_to_query_tables(4278,117613

sql/sp_pcontext.cc,796
#define PCONTEXT_ARRAY_INIT_ALLOC 26,955
#define PCONTEXT_ARRAY_INCREMENT_ALLOC 28,1051
sp_cond_check(36,1299
sp_pcontext::sp_pcontext(57,1690
sp_pcontext::sp_pcontext(85,2923
sp_pcontext::destroy(115,4298
sp_pcontext::push_context(133,4656
sp_pcontext::pop_context(143,4852
sp_pcontext::diff_handlers(162,5304
sp_pcontext::diff_cursors(180,5693
sp_pcontext::find_variable(206,6432
sp_pcontext::find_variable(235,7184
sp_pcontext::push_variable(250,7602
sp_pcontext::push_label(273,8080
sp_pcontext::find_label(289,8357
sp_pcontext::push_cond(312,8955
sp_pcontext::find_cond(328,9297
sp_pcontext::find_handler(355,9852
sp_pcontext::push_cursor(385,10359
sp_pcontext::find_cursor(400,10650
sp_pcontext::retrieve_field_definitions(424,11144
sp_pcontext::find_cursor(450,11764

sql/sp_rcontext.cc,1281
sp_rcontext::sp_rcontext(29,1038
sp_rcontext::~sp_rcontext(50,1556
bool sp_rcontext::init(67,1769
sp_rcontext::init_var_table(107,2846
sp_rcontext::init_var_items(137,3442
sp_rcontext::set_return_value(156,3791
#define IS_WARNING_CONDITION(166,3996
#define IS_NOT_FOUND_CONDITION(167,4063
#define IS_EXCEPTION_CONDITION(168,4130
sp_rcontext::find_handler(204,5398
sp_rcontext::push_cursor(294,8028
sp_rcontext::pop_cursors(304,8341
sp_rcontext::push_handler(317,8593
sp_rcontext::pop_handlers(332,8974
sp_rcontext::push_hstack(344,9191
sp_rcontext::pop_hstack(356,9430
sp_rcontext::activate_handler(377,9849
sp_rcontext::exit_handler(432,11235
Sql_condition_info* sp_rcontext::raised_condition(445,11500
sp_rcontext::set_variable(462,11819
sp_rcontext::set_variable(469,11957
sp_rcontext::get_item(482,12136
sp_rcontext::get_item_addr(489,12217
sp_cursor::sp_cursor(501,12324
sp_cursor::open(527,12762
sp_cursor::close(542,13031
sp_cursor::destroy(555,13219
sp_cursor::fetch(563,13304
sp_rcontext::create_case_expr_holder(620,14712
sp_rcontext::set_case_expr(665,16059
sp_rcontext::get_case_expr(686,16635
sp_rcontext::get_case_expr_addr(693,16738
int Select_fetch_into_spvars::prepare(703,17030
bool Select_fetch_into_spvars::send_data(714,17345

sql/spatial.cc,5042
#define MAX_DIGITS_IN_DOUBLE 25,1015
String Geometry::bad_geometry_data("Bad object", &my_charset_bin)my_charset_bin29,1149
Geometry::Class_info *Geometry::ci_collection[Geometry::ci_collection31,1217
static Geometry::Class_info **ci_collection_end=ci_collection_end36,1335
Geometry::Class_info::Class_info(39,1465
static Geometry *create_point(create_point49,1737
static Geometry *create_linestring(create_linestring54,1819
static Geometry *create_polygon(create_polygon59,1912
static Geometry *create_multipoint(create_multipoint64,1998
static Geometry *create_multipolygon(create_multipolygon69,2091
static Geometry *create_multilinestring(create_multilinestring74,2188
static Geometry *create_geometrycollection(create_geometrycollection79,2292
static void get_point(108,3260
Geometry::Class_info *Geometry::find_class(Geometry::find_class116,3470
Geometry *Geometry::create_by_typeid(Geometry::create_by_typeid132,3863
Geometry *Geometry::construct(Geometry::construct141,4058
Geometry *Geometry::create_from_wkt(Geometry::create_from_wkt159,4606
static double wkb_get_double(190,5400
static uint32 wkb_get_uint(214,5848
Geometry *Geometry::create_from_wkb(Geometry::create_from_wkb230,6164
bool Geometry::envelope(251,6779
bool Geometry::create_point(291,7588
bool Geometry::create_point(317,8172
const char *Geometry::append_points(Geometry::append_points343,8681
const char *Geometry::get_mbr_for_points(Geometry::get_mbr_for_points376,9309
uint32 Gis_point::get_data_size(402,9850
bool Gis_point::init_from_wkt(408,9922
uint Gis_point::init_from_wkb(420,10182
bool Gis_point::get_data_as_wkt(434,10545
bool Gis_point::get_mbr(449,10845
const Geometry::Class_info *Gis_point::get_class_info(Gis_point::get_class_info459,11025
uint32 Gis_line_string::get_data_size(467,11192
bool Gis_line_string::init_from_wkt(482,11466
uint Gis_line_string::init_from_wkb(510,12023
bool Gis_line_string::get_data_as_wkt(538,12680
bool Gis_line_string::get_mbr(569,13324
int Gis_line_string::geom_length(575,13451
int Gis_line_string::is_closed(605,14044
int Gis_line_string::num_points(635,14599
int Gis_line_string::start_point(642,14705
int Gis_line_string::end_point(649,14858
int Gis_line_string::point_n(659,15085
const Geometry::Class_info *Gis_line_string::get_class_info(Gis_line_string::get_class_info671,15406
uint32 Gis_polygon::get_data_size(679,15581
bool Gis_polygon::init_from_wkt(707,16088
uint Gis_polygon::init_from_wkb(740,16882
bool Gis_polygon::get_data_as_wkt(779,17632
bool Gis_polygon::get_mbr(812,18358
int Gis_polygon::area(832,18692
int Gis_polygon::exterior_ring(878,19646
int Gis_polygon::num_interior_ring(899,20170
int Gis_polygon::interior_ring_n(908,20327
int Gis_polygon::centroid_xy(946,21133
int Gis_polygon::centroid(1014,22668
const Geometry::Class_info *Gis_polygon::get_class_info(Gis_polygon::get_class_info1022,22814
uint32 Gis_multi_point::get_data_size(1030,22985
bool Gis_multi_point::init_from_wkt(1046,23297
uint Gis_multi_point::init_from_wkb(1073,23908
bool Gis_multi_point::get_data_as_wkt(1103,24717
bool Gis_multi_point::get_mbr(1124,25196
int Gis_multi_point::num_geometries(1130,25338
int Gis_multi_point::geometry_n(1137,25438
const Geometry::Class_info *Gis_multi_point::get_class_info(Gis_multi_point::get_class_info1156,25925
uint32 Gis_multi_line_string::get_data_size(1164,26108
bool Gis_multi_line_string::init_from_wkt(1193,26680
uint Gis_multi_line_string::init_from_wkb(1224,27366
bool Gis_multi_line_string::get_data_as_wkt(1262,28225
bool Gis_multi_line_string::get_mbr(1294,28987
int Gis_multi_line_string::num_geometries(1315,29359
int Gis_multi_line_string::geometry_n(1322,29465
int Gis_multi_line_string::geom_length(1351,30130
int Gis_multi_line_string::is_closed(1381,30763
const Geometry::Class_info *Gis_multi_line_string::get_class_info(Gis_multi_line_string::get_class_info1410,31444
uint32 Gis_multi_polygon::get_data_size(1418,31635
bool Gis_multi_polygon::init_from_wkt(1455,32381
uint Gis_multi_polygon::init_from_wkb(1485,33036
bool Gis_multi_polygon::get_data_as_wkt(1522,33834
bool Gis_multi_polygon::get_mbr(1566,34853
int Gis_multi_polygon::num_geometries(1595,35392
int Gis_multi_polygon::geometry_n(1602,35494
int Gis_multi_polygon::area(1641,36348
int Gis_multi_polygon::centroid(1669,36851
const Geometry::Class_info *Gis_multi_polygon::get_class_info(Gis_multi_polygon::get_class_info1701,37529
uint32 Gis_geometry_collection::get_data_size(1709,37712
bool Gis_geometry_collection::init_from_wkt(1741,38450
uint Gis_geometry_collection::init_from_wkb(1772,39114
bool Gis_geometry_collection::get_data_as_wkt(1814,40087
bool Gis_geometry_collection::get_mbr(1850,40834
int Gis_geometry_collection::num_geometries(1882,41465
int Gis_geometry_collection::geometry_n(1891,41613
bool Gis_geometry_collection::dimension(1943,42750
const Geometry::Class_info *Gis_geometry_collection::get_class_info(Gis_geometry_collection::get_class_info1982,43654

sql/sql_acl.cc,11190
bool mysql_user_table_is_in_short_password_format=54,2281
TABLE_FIELD_TYPE mysql_db_table_fields[mysql_db_table_fields57,2353
  mysql_db_table_def=171,5247
static LEX_STRING native_password_plugin_name=173,5317
static LEX_STRING old_password_plugin_name=177,5417
LEX_STRING *default_auth_plugin_name=default_auth_plugin_name182,5542
static plugin_ref old_password_plugin;185,5645
static plugin_ref native_password_plugin;187,5691
struct acl_host_and_ip191,5749
class ACL_ACCESS 197,5862
class ACL_HOST 205,5971
class ACL_USER 212,6055
  ACL_USER *copy(ACL_USER::copy226,6477
class ACL_DB 247,7220
class ACL_PROXY_USER 263,7680
    MYSQL_PROXIES_PRIV_HOST,ACL_PROXY_USER::MYSQL_PROXIES_PRIV_HOST272,7864
    MYSQL_PROXIES_PRIV_USER,ACL_PROXY_USER::MYSQL_PROXIES_PRIV_USER273,7894
    MYSQL_PROXIES_PRIV_PROXIED_HOST,ACL_PROXY_USER::MYSQL_PROXIES_PRIV_PROXIED_HOST274,7924
    MYSQL_PROXIES_PRIV_PROXIED_USER,ACL_PROXY_USER::MYSQL_PROXIES_PRIV_PROXIED_USER275,7961
    MYSQL_PROXIES_PRIV_WITH_GRANT,ACL_PROXY_USER::MYSQL_PROXIES_PRIV_WITH_GRANT276,7999
    MYSQL_PROXIES_PRIV_GRANTOR,ACL_PROXY_USER::MYSQL_PROXIES_PRIV_GRANTOR277,8034
    MYSQL_PROXIES_PRIV_TIMESTAMP ACL_PROXY_USER::MYSQL_PROXIES_PRIV_TIMESTAMP278,8066
    MYSQL_PROXIES_PRIV_TIMESTAMP } old_acl_proxy_users;ACL_PROXY_USER::old_acl_proxy_users278,8066
  ACL_PROXY_USER ACL_PROXY_USER::ACL_PROXY_USER280,8130
  void init(ACL_PROXY_USER::init282,8155
  void init(ACL_PROXY_USER::init299,8833
  void init(ACL_PROXY_USER::init312,9397
  bool get_with_grant(ACL_PROXY_USER::get_with_grant321,9795
  const char *get_user(ACL_PROXY_USER::get_user322,9842
  const char *get_host(ACL_PROXY_USER::get_host323,9884
  const char *get_proxied_user(ACL_PROXY_USER::get_proxied_user324,9935
  const char *get_proxied_host(ACL_PROXY_USER::get_proxied_host325,9993
  void set_user(ACL_PROXY_USER::set_user326,10060
  void set_host(ACL_PROXY_USER::set_host330,10192
  bool check_validity(ACL_PROXY_USER::check_validity337,10387
  bool matches(ACL_PROXY_USER::matches354,10999
  inline static bool auth_element_equals(ACL_PROXY_USER::auth_element_equals382,12394
  bool pk_equals(ACL_PROXY_USER::pk_equals388,12540
  bool granted_on(ACL_PROXY_USER::granted_on413,13743
  void print_grant(ACL_PROXY_USER::print_grant422,14077
  void set_data(ACL_PROXY_USER::set_data441,14729
  static int store_pk(ACL_PROXY_USER::store_pk446,14812
  static int store_data_record(ACL_PROXY_USER::store_data_record478,16463
#define FIRST_NON_YN_FIELD 502,17501
class acl_entry 504,17532
static uchar* acl_entry_get_key(513,17668
#define IP_ADDR_STRLEN 520,17875
#define ACL_KEY_LENGTH 521,17926
#define AUTH_PACKET_HEADER_SIZE_PROTO_41 525,18096
#define AUTH_PACKET_HEADER_SIZE_PROTO_40 526,18143
static DYNAMIC_ARRAY acl_hosts,528,18192
static DYNAMIC_ARRAY acl_hosts, acl_users,528,18192
static DYNAMIC_ARRAY acl_hosts, acl_users, acl_dbs,528,18192
static DYNAMIC_ARRAY acl_hosts, acl_users, acl_dbs, acl_proxy_users;528,18192
static MEM_ROOT mem,529,18261
static MEM_ROOT mem, memex;529,18261
static bool initialized=530,18289
static bool allow_all_hosts=531,18316
static HASH acl_check_hosts,532,18347
static HASH acl_check_hosts, column_priv_hash,532,18347
static HASH acl_check_hosts, column_priv_hash, proc_priv_hash,532,18347
static HASH acl_check_hosts, column_priv_hash, proc_priv_hash, func_priv_hash;532,18347
static DYNAMIC_ARRAY acl_wild_hosts;533,18426
static hash_filo *acl_cache;acl_cache534,18463
static uint grant_version=535,18492
enum enum_acl_lists552,19350
  USER_ACL=enum_acl_lists::USER_ACL554,19372
  DB_ACL,enum_acl_lists::DB_ACL555,19387
  COLUMN_PRIVILEGES_HASH,enum_acl_lists::COLUMN_PRIVILEGES_HASH556,19397
  PROC_PRIVILEGES_HASH,enum_acl_lists::PROC_PRIVILEGES_HASH557,19423
  FUNC_PRIVILEGES_HASH,enum_acl_lists::FUNC_PRIVILEGES_HASH558,19447
  PROXY_USERS_ACLenum_acl_lists::PROXY_USERS_ACL559,19471
set_user_salt(569,19624
my_bool acl_init(603,20621
set_user_plugin 655,22111
static my_bool acl_load(697,23378
void acl_free(1071,36952
my_bool acl_reload(1111,37857
static ulong get_access(1209,41003
static ulong get_sort(1238,41673
static int acl_compare(1274,42479
bool acl_getroot(1300,42987
static uchar* check_get_key(1386,45144
static void acl_update_user(1394,45352
static void acl_insert_user(1454,47460
static void acl_update_db(1511,49568
static void acl_insert_db(1555,50521
ulong acl_get(1579,51265
static void init_check_host(1678,54185
void rebuild_check_host(1733,56082
bool acl_check_host(1743,56278
int check_change_password(1787,57319
bool change_password(1835,58543
bool is_acl_user(1952,62182
find_acl_user(1972,62528
static const char *calc_ip(calc_ip2015,63766
static void update_hostname(2034,64216
static bool compare_hostname(2046,64566
bool hostname_requires_resolving(2086,65898
static bool update_user_table(2153,67729
static bool test_if_create_new_users(2195,69228
static int replace_user_table(2225,70183
static int replace_db_table(2489,79502
acl_update_proxy_user(2595,82777
acl_insert_proxy_user(2625,83457
replace_proxies_priv_table(2638,83865
class GRANT_COLUMN 2758,87461
  GRANT_COLUMN(GRANT_COLUMN::GRANT_COLUMN2764,87559
static uchar* get_key_column(2771,87692
class GRANT_NAME 2779,87872
  virtual ~GRANT_NAME(GRANT_NAME::~GRANT_NAME2790,88186
  virtual bool ok(GRANT_NAME::ok2791,88214
class GRANT_TABLE 2798,88412
  bool ok(GRANT_TABLE::ok2808,88666
void GRANT_NAME::set_user_details(2812,88719
GRANT_NAME::GRANT_NAME(2837,89500
GRANT_TABLE::GRANT_TABLE(2844,89709
GRANT_NAME::GRANT_NAME(2853,90001
GRANT_TABLE::GRANT_TABLE(2884,90887
GRANT_TABLE::~GRANT_TABLE(2960,93456
static uchar* get_grant_table(2966,93521
void free_grant_table(2974,93703
static GRANT_NAME *name_hash_search(name_hash_search2982,93881
routine_hash_search(3024,95278
table_hash_search(3034,95587
column_hash_search(3043,95844
static int replace_column_table(3050,96040
static inline void get_grantor(3248,102538
static int replace_table_table(3263,102910
static int replace_routine_table(3389,106948
int mysql_table_grant(3522,110787
bool mysql_routine_grant(3822,120120
bool mysql_grant(3984,124825
void  grant_free(4144,129538
my_bool grant_init(4164,130000
static my_bool grant_load_procs_priv(4197,130685
static my_bool grant_load(4296,133535
static my_bool grant_reload_procs_priv(4384,135936
my_bool grant_reload(4439,137433
bool check_grant(4547,140951
bool check_grant_column(4706,146071
bool check_column_grant_in_table_ref(4777,148201
bool check_grant_all_columns(4840,150228
static bool check_grant_db_routine(4925,152681
bool check_grant_db(4952,153344
bool check_grant_routine(5016,155284
bool check_routine_level_acl(5081,156967
ulong get_table_grant(5102,157814
ulong get_column_grant(5144,159009
static void add_user_option(5182,160180
static const char *command_array[command_array5195,160481
static uint command_lengths[command_lengths5205,160915
bool mysql_show_grants(5224,161395
static int show_routine_grants(5590,172043
void get_privilege_desc(5680,174587
void get_mqh(5704,175066
#define GRANT_TABLES 5739,175841
int open_grant_tables(5740,175864
ACL_USER *check_acl_user(check_acl_user5802,178241
static int modify_grant_table(5849,179431
static int handle_grant_table(5912,181412
static int handle_grant_struct(6060,186649
static int handle_grant_data(6319,194091
static void append_user(6472,198176
bool mysql_create_user(6497,198648
bool mysql_drop_user(6586,200972
bool mysql_rename_user(6671,203259
bool mysql_revoke_all(6767,205962
class Silence_routine_definer_errors 6961,210900
  Silence_routine_definer_errors(Silence_routine_definer_errors::Silence_routine_definer_errors6964,210979
  virtual ~Silence_routine_definer_errors(Silence_routine_definer_errors::~Silence_routine_definer_errors6968,211042
  bool has_errors(Silence_routine_definer_errors::has_errors6978,211415
Silence_routine_definer_errors::handle_condition(6985,211492
bool sp_revoke_privileges(7029,212440
bool sp_grant_privileges(7112,214821
acl_find_proxy_user(7238,218774
acl_check_proxy_grant_access(7267,219609
show_proxy_grants(7332,221888
int wild_case_compare(7362,222640
static bool update_schema_privilege(7407,223826
int fill_schema_user_privileges(7431,224777
int fill_schema_schema_privileges(7506,226755
int fill_schema_table_privileges(7584,228803
int fill_schema_column_privileges(7668,231160
void fill_effective_table_privileges(7762,233851
bool check_routine_level_acl(7820,235834
struct ACL_internal_schema_registry_entry7828,235979
static ACL_internal_schema_registry_entry registry_array[registry_array7842,236254
static uint m_registry_array_size=7843,236315
void ACL_internal_schema_registry::register_schema7850,236479
ACL_internal_schema_registry::lookup(7867,237013
get_cached_schema_access(7888,237502
get_cached_table_access(7911,238213
#undef HAVE_OPENSSL7937,239236
#define initialized 7939,239289
#define ssl_acceptor_fd 7943,239346
#define sslaccept(7944,239372
class Thd_charset_adapter7948,239408
  Thd_charset_adapter(Thd_charset_adapter::Thd_charset_adapter7952,239456
  bool init_client_charset(Thd_charset_adapter::init_client_charset7953,239512
  CHARSET_INFO *charset(Thd_charset_adapter::charset7961,239687
struct MPVIO_EXT 7969,239871
  enum { SUCCESS,MPVIO_EXT::SUCCESS7988,240658
  enum { SUCCESS, FAILURE,MPVIO_EXT::FAILURE7988,240658
  enum { SUCCESS, FAILURE, RESTART MPVIO_EXT::RESTART7988,240658
static void login_failed_error(8008,241118
static bool send_server_handshake_packet(8081,243765
static bool secure_auth(8178,246971
static bool send_plugin_request_packet(8227,248481
static bool find_mpvio_user(8316,251996
static bool parse_com_change_user_packet(8379,254610
typedef char * (*get_proto_string_func_t)get_proto_string_func_t8515,258883
char *get_41_protocol_string(get_41_protocol_string8538,259768
char *get_40_protocol_string(get_40_protocol_string8574,260928
char *get_length_encoded_string(get_length_encoded_string8623,262237
static ulong parse_client_handshake_packet(8661,263186
wrap_plguin_data_into_proper_command(9046,275565
static int server_mpvio_write_packet(9063,276153
static int server_mpvio_read_packet(9101,277625
static void server_mpvio_info(9195,280285
static bool acl_check_ssl(9203,280512
static int do_auth_once(9310,284072
server_mpvio_initialize(9364,285684
server_mpvio_update_thd(9393,286742
acl_authenticate(9419,287803
static int native_password_authenticate(9699,297155
static int old_password_authenticate(9780,299999
static struct st_mysql_auth native_password_handler=9834,301503
static struct st_mysql_auth old_password_handler=9841,301670
mysql_declare_plugin(9848,301828
  MYSQL_AUTHENTICATION_PLUGIN,9865,302795
  &old_password_handler,old_password_handler9866,302866
  old_password_plugin_name.str,str9867,302937
  PLUGIN_LICENSE_GPL,9870,303150
  NULL,9871,303221
  NULL,9872,303292
  0x0100,x01009873,303363
  NULL,9874,303434
  NULL,9875,303505
  NULL,9876,303576
mysql_declare_plugin_end;9879,303720

sql/sql_admin.cc,443
static int send_check_errmsg(32,1647
static int prepare_for_repair(49,2143
static inline bool table_not_corrupt_error(244,8407
static bool mysql_admin_table(261,8925
bool mysql_assign_to_keycache(934,33540
bool mysql_preload_keys(975,34587
bool Analyze_table_statement::execute(989,35030
bool Check_table_statement::execute(1019,35995
bool Optimize_table_statement::execute(1043,36739
bool Repair_table_statement::execute(1074,37789

sql/sql_alter.cc,130
bool Alter_table_statement::execute(21,964
Alter_table_ctx::Alter_table_ctx(111,4553
Alter_table_ctx::Alter_table_ctx(123,4811

sql/sql_analyse.cc,1436
#define MYSQL_LEX 30,1094
#define MAX_TREEMEM	37,1207
#define MAX_TREE_ELEMENTS 38,1234
int sortcmp2(40,1265
int compare_double2(46,1397
int compare_longlong2(52,1531
int compare_ulonglong2(58,1675
int compare_decimal2(64,1824
proc_analyse_init(71,1932
bool test_if_number(187,5103
bool get_ev_num_info(278,7891
void free_string(299,8574
void field_str::add(305,8621
void field_real::add(395,10872
void field_decimal::add(478,12828
void field_longlong::add(555,14793
void field_ulonglong::add(611,16081
int analyse::send_row(667,17398
int analyse::end_of_records(681,17579
void field_str::get_opt_type(803,21557
void field_real::get_opt_type(886,24351
void field_longlong::get_opt_type(939,26242
void field_ulonglong::get_opt_type(970,27444
void field_decimal::get_opt_type(995,28418
String *field_decimal::get_min_arg(field_decimal::get_min_arg1014,28990
String *field_decimal::get_max_arg(field_decimal::get_max_arg1021,29124
String *field_decimal::avg(field_decimal::avg1028,29258
String *field_decimal::std(field_decimal::std1049,29971
int collect_string(1073,30798
int collect_real(1089,31127
int collect_decimal(1107,31569
int collect_longlong(1129,32123
int collect_ulonglong(1148,32552
bool analyse::change_columns(1167,32986
int compare_double(1192,33937
int compare_longlong(1197,34061
 int compare_ulonglong(1202,34193
uint check_ulonglong(1208,34331
bool append_escaped(1260,35442

sql/sql_audit.cc,1396
struct st_mysql_event_generic24,934
unsigned long mysql_global_audit_mask[mysql_global_audit_mask30,1019
static mysql_mutex_t LOCK_audit_mask;32,1088
void set_audit_mask(39,1265
void add_audit_mask(46,1383
bool check_audit_mask(52,1489
typedef void (*audit_handler_t)audit_handler_t59,1620
static void general_class_handler(71,1830
static void connection_class_handler(94,2850
static audit_handler_t audit_handlers[audit_handlers118,3807
static const uint audit_handlers_count=123,3905
static my_bool acquire_plugins(137,4152
void mysql_audit_acquire_plugins(183,5643
void mysql_audit_notify(208,6318
void mysql_audit_release(227,6746
void mysql_audit_init_thd(265,7724
void mysql_audit_free_thd(282,8025
static PSI_mutex_key key_LOCK_audit_mask;290,8220
static PSI_mutex_info all_audit_mutexes[all_audit_mutexes292,8263
static void init_audit_psi_keys(297,8374
void mysql_audit_initialize(314,8687
void mysql_audit_finalize(329,8972
int initialize_audit_plugin(344,9166
static my_bool calc_class_mask(384,10140
int finalize_audit_plugin(401,10536
static my_bool plugins_dispatch(443,11634
static void event_class_dispatch(470,12365
void mysql_audit_acquire_plugins(501,13229
void mysql_audit_initialize(506,13296
void mysql_audit_finalize(511,13332
int initialize_audit_plugin(516,13366
int finalize_audit_plugin(522,13435
void mysql_audit_release(528,13502

sql/sql_backup.cc,351
ulong backup_throttle 7,114
struct backup_poll 9,150
    backup_poll(backup_poll::backup_poll13,223
    ~backup_poll(backup_poll::~backup_poll14,285
static int mysql_backup_poll_fun(22,486
static void mysql_error_fun(44,1341
int sql_backups(49,1640
void sql_backup_throttle(62,2380
const char *tokubackup_version tokubackup_version66,2468

sql/sql_base.cc,7076
No_such_table_error_handler::handle_condition(63,2469
bool No_such_table_error_handler::safely_trapped_errors(82,3004
class Repair_mrg_table_error_handler 99,3480
  Repair_mrg_table_error_handler(Repair_mrg_table_error_handler::Repair_mrg_table_error_handler102,3559
  bool safely_trapped_errors(Repair_mrg_table_error_handler::safely_trapped_errors117,4059
Repair_mrg_table_error_handler::handle_condition(136,4531
mysql_mutex_t LOCK_open;165,5367
static PSI_mutex_key key_LOCK_open;168,5419
static PSI_mutex_info all_tdc_mutexes[all_tdc_mutexes169,5455
static void init_tdc_psi_keys(178,5643
uint  table_cache_count=197,6104
TABLE *unused_tables;unused_tables204,6417
HASH table_def_cache;205,6439
static TABLE_SHARE *oldest_unused_share,oldest_unused_share206,6461
static TABLE_SHARE *oldest_unused_share, end_of_unused_share;206,6461
static bool table_def_inited=207,6523
static bool table_def_shutdown_in_progress=208,6556
uint cached_open_tables(221,7165
static void check_unused(228,7248
#define check_unused(286,8981
uint create_table_def_key(315,9537
extern "C" uchar *table_def_key(table_def_key337,10236
static void table_def_free_entry(346,10516
bool table_def_init(361,10838
void table_def_start_shutdown(384,11522
void table_def_free(403,12112
uint cached_table_definitions(417,12360
static void table_def_add_used_table(438,12880
static void table_def_remove_table(451,13163
static void table_def_use_table(482,13811
static void table_def_unuse_table(512,14764
TABLE_SHARE *get_table_share(get_table_share563,16064
get_table_share_with_discover(672,19387
void release_table_share(765,22207
TABLE_SHARE *get_cached_table_share(get_cached_table_share816,23508
OPEN_TABLE_LIST *list_open_tables(list_open_tables846,24323
void intern_close_table(902,26105
static void free_cache_entry(928,26797
void free_io_cache(943,27104
static void kill_delayed_threads_for_table(965,27529
bool close_cached_tables(1012,29070
bool close_cached_connection_tables(1193,34461
static void mark_temp_tables_as_free_for_reuse(1250,36211
void mark_tmp_table_for_reuse(1268,36610
static void mark_used_tables_as_free_for_reuse(1326,38607
static void close_open_tables(1349,39117
close_all_tables_for_name(1380,40032
void close_thread_tables(1443,42067
bool close_thread_table(1571,46199
static inline uint  tmpkeyval(1627,47897
bool close_temporary_tables(1638,48202
TABLE_LIST *find_table_in_list(find_table_in_list1815,53792
TABLE_LIST* find_dup_table(1865,55818
unique_table(1964,58912
void update_non_unique_table_error(1998,59857
TABLE *find_temporary_table(find_temporary_table2048,61598
TABLE *find_temporary_table(find_temporary_table2066,61982
TABLE *find_temporary_table(find_temporary_table2081,62356
int drop_temporary_table(2129,64067
void close_temporary_table(2162,64979
void close_temporary(2208,66287
bool rename_temporary_table(2236,67086
bool wait_while_table_is_used(2273,68272
void drop_open_table(2314,69913
bool check_if_table_exists(2357,71338
class MDL_deadlock_handler 2400,72551
  MDL_deadlock_handler(MDL_deadlock_handler::MDL_deadlock_handler2403,72620
  virtual ~MDL_deadlock_handler(MDL_deadlock_handler::~MDL_deadlock_handler2407,72728
bool MDL_deadlock_handler::handle_condition(2428,73412
open_table_get_mdl_lock(2483,75671
tdc_wait_for_old_version(2599,80551
bool open_table(2658,82884
TABLE *find_locked_table(find_locked_table3167,99916
TABLE *find_table_for_mdl_upgrade(find_table_for_mdl_upgrade3203,101044
Locked_tables_list::init_locked_tables(3258,102621
Locked_tables_list::unlock_locked_tables(3338,105414
void Locked_tables_list::unlink_from_list(3405,107469
unlink_all_closed_tables(3453,109029
Locked_tables_list::reopen_tables(3511,110823
static ulong last_table_id=3597,113603
void assign_new_table_id(3599,113638
static bool inject_reprepare(3626,114323
check_and_update_table_version(3671,115904
check_and_update_routine_version(3723,117791
bool tdc_open_view(3773,119493
static bool open_table_entry_fini(3818,120892
static bool auto_repair_table(3868,122575
Open_table_context::Open_table_context(3944,124789
request_backoff_action(3967,125445
recover_from_failed_open(4059,129386
thr_lock_type read_lock_type_for_table(4154,133207
open_and_process_routine(4203,135498
open_and_process_table(4351,141737
extern "C" uchar *schema_set_get_key(schema_set_get_key4599,150213
lock_table_names(4625,151193
open_tables_check_upgradable_mdl(4708,153890
bool open_tables(4781,156896
handle_routine(5061,167110
handle_table(5109,168874
handle_view(5147,170007
handle_table(5178,170978
handle_routine(5202,171776
handle_table(5228,172553
handle_view(5243,172951
static bool check_lock_and_start_stmt(5261,173358
TABLE *open_n_lock_single_table(open_n_lock_single_table5339,176199
TABLE *open_ltable(open_ltable5392,177660
bool open_and_lock_tables(5497,180793
bool open_normal_and_derived_tables(5563,182723
static void mark_real_tables_as_free_for_reuse(5605,184046
bool lock_tables(5647,185361
void close_tables_for_reopen(5866,193517
TABLE *open_table_uncached(open_table_uncached5929,195974
bool rm_temporary_table(6013,199012
Field *not_found_field=not_found_field6045,200300
Field *view_ref_found=view_ref_found6046,200338
#define WRONG_GRANT 6048,200377
static void update_field_dependencies(6050,200410
find_field_in_view(6122,202652
find_field_in_natural_join(6209,205831
find_field_in_table(6337,209934
find_field_in_table_ref(6437,213602
Field *find_field_in_table_sef(find_field_in_table_sef6598,219403
find_field_in_tables(6664,221831
Item **not_found_item=not_found_item6893,229928
find_item_in_list(6897,229975
test_if_string_in_list(7131,237883
set_new_item_local_context(7167,238786
mark_common_columns(7212,240370
store_natural_using_join_columns(7454,249482
store_top_level_join_columns(7578,253606
static bool setup_natural_join_row_types(7741,259791
int setup_wild(7801,261952
bool setup_fields(7887,264759
TABLE_LIST **make_leaves_list(make_leaves_list7979,268165
bool setup_tables(8026,269653
bool setup_tables_and_check_access(8121,272729
bool get_key_map_from_key_list(8169,274031
insert_fields(8214,275223
int setup_conds(8442,283076
fill_record(8566,286797
fill_record_n_invoke_before_triggers(8645,288924
fill_record(8677,289876
fill_record_n_invoke_before_triggers(8740,291535
my_bool mysql_rm_tmp_tables(8751,292007
void tdc_flush_unused_tables(8837,294617
bool mysql_notify_thread_having_shared_lock(8874,295816
void tdc_remove_table(8942,298756
int setup_ftfuncs(9010,300739
int init_ftfuncs(9032,301163
open_new_frm(9068,302092
bool is_equal(9113,303351
has_write_table_with_auto_increment(9134,303905
has_write_table_with_auto_increment_and_select(9166,304661
has_write_table_auto_increment_not_first_in_pk(9193,305358
open_system_tables_for_read(9235,306560
close_system_tables(9285,308170
close_mysql_tables(9316,309081
open_system_table_for_update(9341,309642
open_log_table(9368,310463
void close_log_table(9408,311759

sql/sql_binlog.cc,44
void mysql_client_binlog_statement(45,2002

sql/sql_cache.cc,5774
#define RW_WLOCK(352,14160
#define RW_RLOCK(355,14376
#define RW_UNLOCK(358,14593
#define BLOCK_LOCK_WR(361,14813
#define BLOCK_LOCK_RD(364,14938
#define BLOCK_UNLOCK_WR(367,15063
#define BLOCK_UNLOCK_RD(370,15194
#define DUMP(373,15325
#define RW_WLOCK(376,15436
#define RW_RLOCK(377,15479
#define RW_UNLOCK(378,15522
#define BLOCK_LOCK_WR(379,15566
#define BLOCK_LOCK_RD(380,15618
#define BLOCK_UNLOCK_WR(381,15670
#define BLOCK_UNLOCK_RD(382,15726
#define DUMP(383,15782
#define QC_DEBUG_SYNC(392,15967
#define QC_DEBUG_SYNC(399,16207
struct Query_cache_wait_state408,16397
  Query_cache_wait_state(Query_cache_wait_state::Query_cache_wait_state413,16471
  ~Query_cache_wait_state(Query_cache_wait_state::~Query_cache_wait_state424,16817
bool Query_cache::try_lock(450,17505
void Query_cache::lock_and_suspend(520,19454
void Query_cache::lock(549,20350
void Query_cache::unlock(573,20950
static bool has_no_cache_directive(603,21801
inline Query_cache_block * Query_cache_block_table::block(632,22904
void Query_cache_block::init(643,23315
void Query_cache_block::destroy(655,23608
inline uint Query_cache_block::headers_len(664,23813
inline uchar* Query_cache_block::data(670,23971
inline Query_cache_query * Query_cache_block::query(675,24073
inline Query_cache_table * Query_cache_block::table(684,24273
inline Query_cache_result * Query_cache_block::result(693,24473
inline Query_cache_block_table * Query_cache_block::table(703,24748
uchar *query_cache_table_get_key(query_cache_table_get_key717,25178
inline void Query_cache_query::lock_writing(740,26003
my_bool Query_cache_query::try_lock_writing(753,26287
inline void Query_cache_query::lock_reading(766,26589
inline void Query_cache_query::unlock_writing(772,26660
inline void Query_cache_query::unlock_reading(778,26734
void Query_cache_query::init_n_lock(784,26808
void Query_cache_query::unlock_n_destroy(797,27196
uchar *query_cache_query_get_key(query_cache_query_get_key815,27664
void query_cache_insert(863,29555
Query_cache::insert(889,30145
Query_cache::abort(950,31896
void Query_cache::end_of_result(984,32791
void query_cache_invalidate_by_MyISAM_filename(1062,35141
void mysql_query_cache_invalidate4(1073,35412
Query_cache::Query_cache(1085,35846
ulong Query_cache::resize(1109,36848
ulong Query_cache::set_min_res_unit(1157,38043
void Query_cache::store_query(1165,38213
send_data_in_chunks(1390,46077
Query_cache::send_result_to_client(1443,47850
void Query_cache::invalidate(1807,60967
void Query_cache::invalidate(1838,61894
void Query_cache::invalidate_locked_for_write(1867,62663
void Query_cache::invalidate(1890,63230
void Query_cache::invalidate(1908,63694
void Query_cache::invalidate(1929,64252
void Query_cache::invalidate_by_MyISAM_filename(2003,66382
void Query_cache::flush(2018,66838
void Query_cache::pack(2050,67482
void Query_cache::destroy(2081,67996
void Query_cache::init(2107,68587
ulong Query_cache::init_cache(2129,69302
void Query_cache::make_disabled(2305,75319
void Query_cache::free_cache(2333,75921
void Query_cache::flush_cache(2362,76879
my_bool Query_cache::free_old_query(2379,77213
void Query_cache::free_query_internal(2436,78674
void Query_cache::free_query(2506,80409
Query_cache::write_block_data(2524,80957
Query_cache::append_result_data(2552,81835
my_bool Query_cache::write_result_data(2630,84578
inline ulong Query_cache::get_min_first_result_data_size(2703,86877
inline ulong Query_cache::get_min_append_result_data_size(2712,87214
my_bool Query_cache::allocate_data_chain(2720,87359
void Query_cache::invalidate_table(2785,89345
void Query_cache::invalidate_table(2802,89818
void Query_cache::invalidate_table(2808,90000
Query_cache::invalidate_table_internal(2836,90691
Query_cache::invalidate_query_block_list(2860,91343
Query_cache::register_tables_from_list(2887,92088
my_bool Query_cache::register_all_tables(2989,95643
Query_cache::insert_table(3023,96433
void Query_cache::unlink_table(3128,99721
Query_cache::allocate_block(3163,100953
Query_cache::get_free_block(3195,101831
void Query_cache::free_memory_block(3271,103784
void Query_cache::split_block(3290,104462
Query_cache::join_free_blocks(3318,105223
my_bool Query_cache::append_next_free_block(3343,105965
void Query_cache::exclude_from_free_memory_list(3371,106791
void Query_cache::insert_into_free_memory_list(3385,107280
uint Query_cache::find_bin(3403,107924
void Query_cache::move_to_query_list_end(3435,108781
void Query_cache::insert_into_free_memory_sorted_list(3444,109060
Query_cache::double_linked_list_simple_include(3491,110197
Query_cache::double_linked_list_exclude(3511,110742
void Query_cache::double_linked_list_join(3533,111324
Query_cache::process_and_count_tables(3563,112134
Query_cache::is_cacheable(3659,115504
my_bool Query_cache::ask_handler_allowance(3711,117172
void Query_cache::pack_cache(3750,118373
my_bool Query_cache::move_by_type(3791,119321
void Query_cache::relink(4028,127852
my_bool Query_cache::join_results(4055,128453
uint Query_cache::filename_2_table_key 4127,130729
void wreck(4155,131885
void bins_dump(4156,131954
void cache_dump(4157,131974
void queries_dump(4158,131995
void tables_dump(4159,132018
my_bool check_integrity(4160,132040
my_bool in_list(4161,132095
my_bool in_blocks(4163,132197
void Query_cache::wreck(4178,132486
void Query_cache::bins_dump(4197,133061
void Query_cache::cache_dump(4240,134365
void Query_cache::queries_dump(4266,135101
void Query_cache::tables_dump(4332,137309
my_bool Query_cache::check_integrity(4367,138193
my_bool Query_cache::in_blocks(4628,145320
my_bool Query_cache::in_list(4683,146784
void dump_node(4740,148340
my_bool Query_cache::in_table_list(4752,148780

sql/sql_class.cc,11441
char internal_table_name[internal_table_name68,2382
char empty_c_string[empty_c_string69,2416
const char * const THD::DEFAULT_WHERE=71,2479
extern "C" uchar *get_var_key(get_var_key94,3262
extern "C" void free_user_var(101,3474
bool Key_part_spec::operator==(Key_part_spec::operator==109,3675
Key::Key(123,4089
Foreign_key::Foreign_key(140,4541
bool foreign_key_prefix(166,5181
void *thd_get_scheduler_data(thd_get_scheduler_data229,6808
void thd_set_scheduler_data(240,7041
PSI_thread *thd_get_psi(thd_get_psi252,7297
ulong thd_get_net_wait_timeout(264,7514
void thd_set_psi(275,7766
void thd_set_killed(285,7930
void thd_clear_errors(295,8084
void thd_set_thread_stack(307,8307
void thd_lock_thread_count(318,8534
void thd_unlock_thread_count(329,8746
void thd_close_connection(340,8963
THD *thd_get_current_thd(thd_get_current_thd351,9184
void thd_new_connection_setup(364,9436
void thd_lock_data(388,10171
void thd_unlock_data(398,10346
bool thd_is_transaction_active(410,10627
int thd_connection_has_data(420,10837
void thd_set_net_read_write(432,11110
uint thd_get_net_read_write(443,11373
void thd_set_mysys_var(454,11588
my_socket thd_get_fd(466,11830
int thd_store_globals(478,12088
pthread_attr_t *get_connection_attrib(get_connection_attrib488,12279
ulong get_max_connections(498,12458
extern "C" int mysql_tmpfile(507,12584
int thd_in_lock_tables(533,13280
int thd_tablespace_op(540,13372
const char *set_thd_proc_info(set_thd_proc_info547,13462
const char* thd_enter_cond(569,14098
void thd_exit_cond(579,14321
void **thd_ha_data(thd_ha_data589,14464
void thd_storage_lock_wait(595,14599
void *thd_get_ha_data(thd_get_ha_data604,14760
void thd_set_ha_data(615,14986
long long thd_test_options(631,15368
int thd_sql_command(637,15503
int thd_tx_isolation(643,15593
void thd_inc_row_count(649,15680
char *thd_security_context(thd_security_context674,16345
bool Drop_table_error_handler::handle_condition(766,19181
THD::THD(779,19726
void THD::push_internal_handler(924,23964
bool THD::handle_condition(937,24207
Internal_error_handler *THD::pop_internal_handler(THD::pop_internal_handler964,24843
void THD::raise_error(973,25098
void THD::raise_error_printf(982,25329
void THD::raise_warning(999,25845
void THD::raise_warning_printf(1008,26077
void THD::raise_note(1025,26589
void THD::raise_note_printf(1039,26992
MYSQL_ERROR* THD::raise_condition(1058,27567
void *thd_alloc(thd_alloc1154,30261
void *thd_calloc(thd_calloc1160,30354
char *thd_strdup(thd_strdup1166,30449
char *thd_strmake(thd_strmake1172,30541
LEX_STRING *thd_make_lex_string(thd_make_lex_string1178,30660
void *thd_memdup(thd_memdup1187,30973
void thd_get_xid(1193,31090
extern "C"   THD *_current_thd_noinline(_current_thd_noinline1199,31220
void THD::init(1208,31408
void THD::init_for_queries(1252,32771
void THD::change_user(1278,33360
void THD::cleanup(1299,33888
THD::~THD(1360,35493
void add_to_status(1426,36919
void add_diff_to_status(1453,37605
void THD::awake(1479,38321
void THD::disconnect(1581,42384
bool THD::store_globals(1612,43037
bool THD::restore_globals(1652,44327
void THD::cleanup_after_query(1684,45029
make_lex_string_root(1745,47200
LEX_STRING *THD::make_lex_string(THD::make_lex_string1768,48012
bool THD::convert_string(1797,48787
bool THD::convert_string(1831,49614
void THD::update_charset(1851,50133
inline static void list_include(1874,50954
void THD::add_changed_table(1887,51215
void THD::add_changed_table(1898,51528
CHANGED_TABLE_LIST* THD::changed_table_dup(1940,52725
int THD::send_explain_fields(1961,53342
void THD::close_active_vio(2006,55219
struct Item_change_record:Item_change_record2022,55464
  static void *operator new(Item_change_record::operator new2027,55607
  static void operator delete(Item_change_record::operator delete2028,55675
  static void operator delete(Item_change_record::operator delete2029,55732
void THD::nocheck_register_item_tree_change(2039,56034
void THD::rollback_item_tree_changes(2064,56783
select_result::select_result(2082,57356
void select_result::send_error(2087,57411
void select_result::cleanup(2093,57514
bool select_result::check_simple_select(2098,57568
sql_exchange::sql_exchange(2110,57928
bool sql_exchange::escaped_given(2123,58358
bool select_send::send_result_set_metadata(2129,58441
void select_send::abort_result_set(2137,58644
void select_send::cleanup(2164,59417
bool select_send::send_data(2171,59526
bool select_send::send_eof(2204,60238
void select_to_file::send_error(2229,60883
bool select_to_file::send_eof(2243,61182
void select_to_file::cleanup(2258,61419
select_to_file::~select_to_file(2272,61673
select_export::~select_export(2286,62049
static File create_file(2308,62323
select_export::prepare(2360,63781
#define NEED_ESCAPING(2452,67267
bool select_export::send_data(2458,67596
select_dump::prepare(2708,76094
bool select_dump::send_data(2716,76272
select_subselect::select_subselect(2755,77103
bool select_singlerow_subselect::send_data(2761,77188
void select_max_min_finder_subselect::cleanup(2784,77790
bool select_max_min_finder_subselect::send_data(2792,77934
bool select_max_min_finder_subselect::cmp_real(2837,78990
bool select_max_min_finder_subselect::cmp_int(2850,79440
bool select_max_min_finder_subselect::cmp_decimal(2863,79889
bool select_max_min_finder_subselect::cmp_str(2877,80439
bool select_exists_subselect::send_data(2896,81113
int select_dumpvar::prepare(2915,81657
bool select_dumpvar::check_simple_select(2930,81937
void select_dumpvar::cleanup(2937,82052
Query_arena::Type Query_arena::type(2943,82105
void Query_arena::free_items(2950,82222
void Query_arena::set_query_arena(2965,82538
void Query_arena::cleanup_stmt(2973,82674
Statement::Statement(2982,82805
Query_arena::Type Statement::type(2995,83088
void Statement::set_statement(3001,83156
Statement::set_n_backup_statement(3011,83357
void Statement::restore_backup_statement(3020,83558
void THD::end_statement(3029,83768
void THD::set_n_backup_active_arena(3044,84110
void THD::restore_active_arena(3058,84423
Statement::~Statement(3070,84716
get_statement_id_as_hash_key(3077,84774
static void delete_statement_as_hash_key(3085,85074
static uchar *get_stmt_name_hash_key(get_stmt_name_hash_key3090,85159
Statement_map::Statement_map(3099,85391
    START_STMT_HASH_SIZE ::START_STMT_HASH_SIZE3104,85463
    START_NAME_HASH_SIZE ::START_NAME_HASH_SIZE3105,85494
int Statement_map::insert(3137,86691
void Statement_map::close_transient_cursors(3185,88069
void Statement_map::erase(3195,88296
void Statement_map::reset(3210,88712
Statement_map::~Statement_map(3224,89083
bool select_dumpvar::send_data(3236,89428
bool select_dumpvar::send_eof(3282,90626
void TMP_TABLE_PARAM::init(3302,91172
void thd_increment_bytes_sent(3315,91500
void thd_increment_bytes_received(3325,91715
void thd_increment_net_big_packet_count(3331,91820
void THD::set_status_var_init(3337,91937
void Security_context::init(3343,92025
void Security_context::destroy(3357,92367
void Security_context::skip_grants(3389,92903
bool Security_context::set_user(3398,93099
String *Security_context::get_host(Security_context::get_host3405,93226
String *Security_context::get_ip(Security_context::get_ip3410,93286
String *Security_context::get_external_user(Security_context::get_external_user3415,93342
void Security_context::set_host(3420,93420
void Security_context::set_ip(3426,93553
void Security_context::set_external_user(3432,93682
void Security_context::set_host(3438,93833
change_security_context(3496,96084
Security_context::restore_security_context(3530,97053
bool Security_context::user_matches(3539,97233
void THD::reset_n_backup_open_tables_state(3554,97812
void THD::restore_backup_open_tables_state(3565,98143
extern "C" int thd_killed(3589,98886
extern "C" unsigned long thd_get_thread_id(3599,99053
extern "C" enum_tx_isolation thd_get_trx_isolation(3604,99163
extern "C" struct charset_info_st *thd_charset(thd_charset3610,99301
extern "C" char **thd_query(thd_query3619,99503
extern "C" LEX_STRING * thd_query_string 3630,99754
extern "C" int thd_slave_thread(3635,99853
extern "C" int thd_non_transactional_update(3640,99940
extern "C" int thd_binlog_format(3645,100067
extern "C" void thd_mark_transaction_to_rollback(3653,100293
extern "C" bool thd_binlog_filter_ok(3658,100414
extern "C" bool thd_sqlcom_can_generate_row_events(3663,100517
extern "C" void thd_wait_begin(3693,101685
extern "C" void thd_wait_end(3704,101969
extern "C" void thd_wait_begin(3709,102080
extern "C" void thd_wait_end(3715,102200
void THD::reset_sub_statement_state(3752,103678
void THD::restore_sub_statement_state(3804,105489
void THD::set_statement(3867,107727
void THD::set_query(3877,107925
void THD::set_query_and_id(3886,108147
void THD::set_query_id(3898,108516
void THD::set_mysys_var(3906,108715
void THD::leave_locked_tables_mode(3918,109003
void THD::get_definer(3940,109755
void mark_transaction_to_rollback(3968,110411
mysql_mutex_t LOCK_xid_cache;3990,111099
HASH xid_cache;3991,111129
uchar *xid_get_hash_key(xid_get_hash_key3996,111256
void xid_free_hash(4003,111481
static PSI_mutex_key key_LOCK_xid_cache;4010,111594
static PSI_mutex_info all_xid_mutexes[all_xid_mutexes4012,111636
static void init_xid_psi_keys(4017,111743
bool xid_cache_init(4030,112006
void xid_cache_free(4041,112293
XID_STATE *xid_cache_search(xid_cache_search4050,112434
bool xid_cache_insert(4060,112702
bool xid_cache_insert(4082,113191
void xid_cache_delete(4098,113584
int THD::decide_logging_format(4204,117593
THD::binlog_prepare_pending_rows_event(4555,130729
  class Row_data_memory 4662,134569
    Row_data_memory(Row_data_memory::Row_data_memory4674,134884
    Row_data_memory(Row_data_memory::Row_data_memory4685,135124
    ~Row_data_memory(Row_data_memory::~Row_data_memory4696,135430
    bool has_memory(Row_data_memory::has_memory4708,135696
    uchar *slot(Row_data_memory::slot4715,135814
    void allocate_memory(Row_data_memory::allocate_memory4724,136016
int THD::binlog_write_row(4768,137455
int THD::binlog_update_row(4797,138384
int THD::binlog_delete_row(4843,140003
int THD::binlog_remove_pending_rows_event(4873,140892
int THD::binlog_flush_pending_rows_event(4889,141261
show_query_type(4923,142207
#define LIMIT_UNSAFE_WARNING_ACTIVATION_TIMEOUT 4944,142711
#define LIMIT_UNSAFE_WARNING_ACTIVATION_THRESHOLD_COUNT 4946,142842
static ulonglong limit_unsafe_suppression_start_time=4948,142902
static bool unsafe_warning_suppression_is_activated=4949,142959
static int limit_unsafe_warning_count=4950,143019
static void reset_binlog_unsafe_suppression(4955,143139
static void print_unsafe_warning_to_log(4967,143470
static void do_unsafe_limit_checkout(4990,144286
void THD::issue_unsafe_warnings(5075,147193
int THD::binlog_query(5138,149245
bool Discrete_intervals_list::append(5241,153070
bool Discrete_intervals_list::append(5255,153560
void THD::set_user_connect(5272,153984
void THD::increment_user_connections_counter(5281,154114
void THD::decrement_user_connections_counter(5290,154278
void THD::increment_con_per_hour_counter(5300,154490
void THD::increment_updates_counter(5309,154649
void THD::increment_questions_counter(5318,154791
void THD::time_out_user_resource_limits(5338,155244

sql/sql_client.cc,31
void my_net_local_init(28,999

sql/sql_connect.cc,1143
#define SSL_HANDSHAKE_SIZE 53,2105
#define NORMAL_HANDSHAKE_SIZE 54,2139
#define MIN_HANDSHAKE_SIZE 55,2173
#define MIN_HANDSHAKE_SIZE 57,2213
static HASH hash_user_connections;65,2401
int get_or_create_user_conn(67,2437
int check_for_max_user_connections(135,4265
void decrease_user_connections(204,6237
void release_user_connection(226,6835
bool check_mqh(254,7456
int check_for_max_user_connections(299,8648
void decrease_user_connections(304,8731
void release_user_connection(309,8792
extern "C" uchar *get_key_conn(get_key_conn329,9179
extern "C" void free_user(337,9352
void init_max_user_conn(343,9421
void free_max_user_conn(354,9689
void reset_mqh(362,9838
bool thd_init_client_charset(418,11529
bool init_new_connection_handler_thread(462,12849
static int check_connection(483,13193
bool setup_connection_thread_globals(592,17060
bool login_connection(621,17587
void end_connection(659,18581
void prepare_new_connection_state(697,19563
pthread_handler_t handle_one_connection(775,21921
bool thd_prepare_connection(785,22091
bool thd_is_connection_alive(801,22459
void do_handle_one_connection(811,22649

sql/sql_crypt.cc,94
void SQL_CRYPT::init(33,1148
void SQL_CRYPT::encode(55,1570
void SQL_CRYPT::decode(67,1815

sql/sql_cursor.cc,756
class Materialized_cursor:Materialized_cursor36,1442
  virtual bool is_open(Materialized_cursor::is_open50,1864
class Select_materialize:Select_materialize67,2438
  Select_materialize(Select_materialize::Select_materialize72,2614
int mysql_open_cursor(96,3401
Server_side_cursor::~Server_side_cursor(176,5731
void Server_side_cursor::operator delete(Server_side_cursor::operator delete181,5779
Materialized_cursor::Materialized_cursor(203,6533
int Materialized_cursor::send_result_set_metadata(225,7130
int Materialized_cursor::open(273,8641
void Materialized_cursor::fetch(317,9713
void Materialized_cursor::close(354,10545
Materialized_cursor::~Materialized_cursor(372,10979
bool Select_materialize::send_result_set_metadata(383,11235

sql/sql_db.cc,1468
#define MAX_DROP_TABLE_Q_LEN 46,1789
const char *del_exts[del_exts48,1829
static TYPELIB deletable_extentions=49,1893
static HASH dboptions;67,2719
static my_bool dboptions_init=68,2742
static mysql_rwlock_t LOCK_dboptions;69,2776
typedef struct my_dbopt_st72,2852
} my_dbopt_t;77,3054
uchar* dboptions_get_key(87,3260
static inline int write_to_binlog(99,3523
void free_dbopt(115,3893
static PSI_rwlock_key key_rwlock_LOCK_dboptions;121,3971
static PSI_rwlock_info all_database_names_rwlocks[all_database_names_rwlocks123,4021
static void init_database_names_psi_keys(128,4147
bool my_dboptions_cache_init(150,4575
void my_dboptions_cache_free(175,5134
void my_dbopt_cleanup(190,5335
static my_bool get_dbopt(214,5881
static my_bool put_dbopt(245,6514
static void del_dbopt(292,7566
static bool write_db_opt(314,8100
bool load_db_opt(360,9309
bool load_db_opt_by_name(471,12888
CHARSET_INFO *get_default_db_collation(get_default_db_collation497,13598
int mysql_create_db(542,14769
bool mysql_alter_db(691,18884
bool mysql_rm_db(766,21061
static bool find_db_tables_and_rm_known_files(1013,28541
static my_bool rm_dir_w_symlink(1139,33052
long mysql_rm_arc_files(1197,34454
static void mysql_change_db_impl(1273,36518
static void backup_current_db_name(1342,38672
cmp_db_names(1372,39425
bool mysql_change_db(1447,42474
bool mysql_opt_change_db(1624,47809
bool mysql_upgrade_db(1655,48802
bool check_db_dir_existence(1868,56366

sql/sql_delete.cc,592
bool mysql_delete(49,1891
int mysql_prepare_delete(437,13843
#define MEM_STRIP_BUF_SIZE 480,15366
extern "C" int refpos_order_cmp(482,15431
int mysql_multi_delete_prepare(500,15787
multi_delete::multi_delete(572,18203
multi_delete::prepare(582,18522
multi_delete::initialize_tables(593,18729
multi_delete::~multi_delete(684,21365
bool multi_delete::send_data(702,21742
void multi_delete::send_error(766,23577
void multi_delete::abort_result_set(777,23788
int multi_delete::do_deletes(843,25729
int multi_delete::do_table_deletes(893,26972
bool multi_delete::send_eof(964,28808

sql/sql_derived.cc,142
mysql_handle_derived(46,1393
bool mysql_derived_prepare(135,4545
bool mysql_derived_filling(264,8945
bool mysql_derived_cleanup(321,10542

sql/sql_do.cc,23
bool mysql_do(26,1007

sql/sql_error.cc,1229
MYSQL_ERROR::MYSQL_ERROR(174,7392
void MYSQL_ERROR::init(194,8268
void MYSQL_ERROR::clear(201,8408
MYSQL_ERROR::MYSQL_ERROR(218,8819
static void copy_string(239,9750
MYSQL_ERROR::copy_opt_attributes(257,10095
MYSQL_ERROR::set(273,10906
MYSQL_ERROR::set_builtin_message_text(289,11319
MYSQL_ERROR::get_message_text(303,11652
MYSQL_ERROR::get_message_octet_length(309,11730
MYSQL_ERROR::set_sqlstate(315,11820
Diagnostics_area::reset_diagnostics_area(328,12067
Diagnostics_area::set_ok_status(353,12594
Diagnostics_area::set_eof_status(383,13325
Diagnostics_area::set_error_status(412,13988
Diagnostics_area::disable_status(454,15109
Warning_info::Warning_info(460,15201
Warning_info::~Warning_info(474,15644
void Warning_info::clear_warning_info(484,15774
void Warning_info::merge_with_routine_info(498,16177
MYSQL_ERROR *Warning_info::push_warning(Warning_info::push_warning537,17645
MYSQL_ERROR *Warning_info::push_warning(Warning_info::push_warning563,18357
void push_warning(588,19125
void push_warning_printf(621,19960
const LEX_STRING warning_level_names[warning_level_names657,20799
bool mysqld_show_warnings(665,20977
char *err_conv(err_conv730,22898
uint32 convert_error_message(798,24317

sql/sql_handler.cc,838
#define HANDLER_TABLES_HASH_SIZE 64,2851
static enum enum_ha_read_modes rkey_to_rnext[rkey_to_rnext66,2889
static char *mysql_ha_hash_get_key(mysql_ha_hash_get_key88,3498
static void mysql_ha_hash_free(110,3961
static void mysql_ha_close_table(126,4330
bool mysql_ha_open(175,5794
bool mysql_ha_close(381,12255
class Sql_handler_lock_error_handler:Sql_handler_lock_error_handler430,13737
  bool need_reopen(Sql_handler_lock_error_handler::need_reopen441,14099
  void init(Sql_handler_lock_error_handler::init442,14153
handle_condition(455,14353
bool mysql_ha_read(490,15034
static TABLE_LIST *mysql_ha_find(mysql_ha_find815,24722
void mysql_ha_rm_tables(857,25907
void mysql_ha_flush_tables(893,26705
void mysql_ha_flush(924,27439
void mysql_ha_cleanup(965,28539
void mysql_ha_set_explicit_lock_duration(990,29105

sql/sql_help.cc,1616
struct st_find_field24,1071
static struct st_find_field init_used_fields[init_used_fields32,1172
enum enum_used_fields51,1792
  help_topic_help_topic_id=enum_used_fields::help_topic_help_topic_id53,1816
  help_topic_name,enum_used_fields::help_topic_name54,1847
  help_topic_help_category_id,enum_used_fields::help_topic_help_category_id55,1866
  help_topic_description,enum_used_fields::help_topic_description56,1897
  help_topic_example,enum_used_fields::help_topic_example57,1923
  help_category_help_category_id,enum_used_fields::help_category_help_category_id59,1946
  help_category_parent_category_id,enum_used_fields::help_category_parent_category_id60,1980
  help_category_name,enum_used_fields::help_category_name61,2016
  help_keyword_help_keyword_id,enum_used_fields::help_keyword_help_keyword_id63,2039
  help_keyword_name,enum_used_fields::help_keyword_name64,2071
  help_relation_help_topic_id,enum_used_fields::help_relation_help_topic_id66,2093
  help_relation_help_keyword_idenum_used_fields::help_relation_help_keyword_id67,2124
static bool init_fields(86,2497
void memorize_variant_topic(137,4279
int search_topics(187,5714
int search_keyword(228,6874
int get_topics_for_keyword(276,8171
int search_categories(356,10870
void get_all_items_for_category(395,11959
int send_answer_1(440,13108
int send_header_2(483,14335
extern "C" int string_ptr_cmp(507,14992
int send_variant_2_list(531,15548
SQL_SELECT *prepare_simple_select(prepare_simple_select576,16573
SQL_SELECT *prepare_select_for_name(prepare_select_for_name613,17447
bool mysqld_help(639,18087

sql/sql_insert.cc,2888
#define my_safe_alloca(96,4213
#define my_safe_afree(97,4270
#define my_safe_alloca(99,4335
#define my_safe_afree(100,4442
bool check_view_single_update(125,5479
static int check_insert_fields(190,7133
static int check_update_fields(328,11405
void prepare_triggers_for_insert_stmt(385,13357
void upgrade_lock_type(423,14590
bool open_and_lock_for_insert_delayed(530,19168
create_insert_stmt_from_insert_delayed(631,22344
bool mysql_insert(651,22940
static bool check_view_insertability(1147,38960
static bool mysql_prepare_insert_check_table(1230,41505
static void prepare_for_positional_update(1275,43029
bool mysql_prepare_insert(1325,44404
static int last_uniq_key(1452,48556
int write_record(1505,50292
int check_that_all_fields_are_given_values(1787,61040
class delayed_row 1833,62545
  delayed_row(delayed_row::delayed_row1850,63052
  ~delayed_row(delayed_row::~delayed_row1855,63312
class Delayed_insert 1869,63658
  Delayed_insert(Delayed_insert::Delayed_insert1901,64752
  ~Delayed_insert(Delayed_insert::~Delayed_insert1936,66320
  inline void lock(Delayed_insert::lock1962,67122
  void unlock(Delayed_insert::unlock1966,67205
  inline uint lock_count(Delayed_insert::lock_count1981,67548
I_List<Delayed_insert> delayed_threads;1989,67711
Delayed_insert *find_handler(find_handler1998,67897
bool delayed_get_table(2063,70472
TABLE *Delayed_insert::get_local_table(Delayed_insert::get_local_table2212,75748
int write_delayed(2341,80421
static void end_delayed_insert(2446,83775
void kill_delayed_threads(2464,84222
class Delayed_prelocking_strategy 2505,85477
handle_table(2519,86083
handle_routine(2534,86490
handle_view(2545,86779
bool Delayed_insert::open_and_lock_table(2562,87169
pthread_handler_t handle_delayed_insert(2597,88089
static void unlink_blobs(2824,95771
static void free_delayed_insert_blobs(2835,96005
bool Delayed_insert::handle_inserts(2850,96299
bool mysql_insert_select_prepare(3119,105092
select_insert::select_insert(3157,106376
select_insert::prepare(3178,107187
int select_insert::prepare2(3358,113631
void select_insert::cleanup(3368,113898
select_insert::~select_insert(3374,114027
bool select_insert::send_data(3389,114323
void select_insert::store_values(3458,116329
void select_insert::send_error(3468,116709
bool select_insert::send_eof(3478,116877
void select_insert::abort_result_set(3563,119722
static TABLE *create_table_from_items(create_table_from_items3666,124064
select_create::prepare(3805,128852
  class MY_HOOKS 3829,129911
    MY_HOOKS(MY_HOOKS::MY_HOOKS3831,129963
    virtual int do_postlock(MY_HOOKS::do_postlock3840,130193
select_create::binlog_show_create_table(3948,133475
void select_create::store_values(3996,135471
void select_create::send_error(4003,135667
bool select_create::send_eof(4033,136651
void select_create::abort_result_set(4064,137279

sql/sql_lex.cc,5336
#define MYSQL_LEX 20,818
sys_var *trg_new_row_fake_var=trg_new_row_fake_var39,1404
const LEX_STRING null_lex_str=44,1537
const LEX_STRING empty_lex_str=45,1579
Query_tables_list::binlog_stmt_unsafe_errcode[Query_tables_list::binlog_stmt_unsafe_errcode51,1765
#define TOCK_NAME_LENGTH 78,2637
static uchar to_upper_lex[to_upper_lex85,2775
const char * index_hint_type_name[index_hint_type_name110,3976
inline int lex_casecmp(117,4071
void lex_init(127,4270
void lex_free(140,4577
st_parsing_options::reset(148,4688
bool Lex_input_stream::init(166,5169
Lex_input_stream::reset(197,5889
void Lex_input_stream::body_utf8_start(240,6989
void Lex_input_stream::body_utf8_append(277,8329
void Lex_input_stream::body_utf8_append(306,9198
void Lex_input_stream::body_utf8_append_literal(323,9691
void lex_start(362,10728
void lex_end(458,13776
Yacc_state::~Yacc_state(477,14203
static int find_keyword(486,14307
bool is_keyword(522,15138
bool is_lex_native_function(538,15461
static LEX_STRING get_token(546,15671
static LEX_STRING get_quoted_token(566,16271
static char *get_text(get_text601,17156
static const char *long_str=long_str736,20301
static const uint long_len=737,20343
static const char *signed_long_str=signed_long_str738,20374
static const char *longlong_str=longlong_str739,20424
static const uint longlong_len=740,20479
static const char *signed_longlong_str=signed_longlong_str741,20514
static const uint signed_longlong_len=742,20577
static const char *unsigned_longlong_str=unsigned_longlong_str743,20619
static const uint unsigned_longlong_len=744,20684
static inline uint int_token(746,20729
bool consume_comment(831,22733
int MYSQLlex(873,23564
int lex_one_token(927,24764
Alter_info::Alter_info(1645,47177
void trim_whitespace(1676,48357
void st_select_lex_node::init_query(1705,48889
void st_select_lex_node::init_select(1714,49068
void st_select_lex_unit::init_query(1718,49112
void st_select_lex::init_query(1737,49515
void st_select_lex::init_select(1783,50852
void st_select_lex_node::include_down(1822,51861
void st_select_lex_node::include_standalone(1840,52280
void st_select_lex_node::include_neighbour(1850,52484
void st_select_lex_node::include_global(1861,52736
void st_select_lex_node::fast_exclude(1870,52959
void st_select_lex_node::exclude(1887,53316
void st_select_lex_unit::exclude_level(1912,53864
void st_select_lex_unit::exclude_tree(1959,54962
void st_select_lex::mark_as_dependent(1992,55795
bool st_select_lex_node::set_braces(2020,56774
bool st_select_lex_node::inc_in_sum_expr(2021,56841
uint st_select_lex_node::get_in_sum_expr(2022,56908
TABLE_LIST* st_select_lex_node::get_table_list(2023,56975
List<Item>* st_select_lex_node::get_item_list(2024,57042
TABLE_LIST *st_select_lex_node::add_table_to_list st_select_lex_node::add_table_to_list2025,57109
ulong st_select_lex_node::get_table_join_options(2035,57473
bool st_select_lex::test_limit(2043,57577
st_select_lex_unit* st_select_lex_unit::master_unit(2055,57770
st_select_lex* st_select_lex_unit::outer_select(2061,57847
bool st_select_lex::add_order_to_list(2067,57937
bool st_select_lex::add_gorder_to_list(2073,58063
bool st_select_lex::add_item_to_list(2078,58190
bool st_select_lex::add_group_to_list(2086,58398
bool st_select_lex::add_ftfunc_to_list(2092,58524
st_select_lex_unit* st_select_lex::master_unit(2098,58658
st_select_lex* st_select_lex::outer_select(2104,58752
bool st_select_lex::set_braces(2110,58851
bool st_select_lex::inc_in_sum_expr(2117,58930
uint st_select_lex::get_in_sum_expr(2124,59003
TABLE_LIST* st_select_lex::get_table_list(2130,59069
List<Item>* st_select_lex::get_item_list(2135,59145
ulong st_select_lex::get_table_join_options(2140,59214
bool st_select_lex::setup_ref_array(2146,59295
void st_select_lex_unit::print(2182,60525
void st_select_lex::print_order(2215,61368
void st_select_lex::print_limit(2237,61910
void LEX::cleanup_lex_after_parse_error(2277,63185
void Query_tables_list::reset_query_tables_list(2315,64555
void Query_tables_list::destroy_query_tables_list(2360,65585
LEX::LEX(2380,66040
bool LEX::can_be_merged(2411,66958
bool LEX::can_use_merged(2460,68283
bool LEX::can_not_use_merged(2496,69026
bool LEX::only_view_structure(2525,69561
bool LEX::need_correct_ident(2554,70012
uint8 LEX::get_effective_with_check(2584,70580
LEX::copy_db_to(2613,71420
void st_select_lex_unit::set_limit(2638,71988
void LEX::set_trg_event_type_for_tables(2745,75574
TABLE_LIST *LEX::unlink_first_table(LEX::unlink_first_table2888,80454
void LEX::first_lists_tables_same(2939,81891
void LEX::link_first_table_back(2975,82904
void LEX::cleanup_after_one_table_open(3010,83759
void LEX::reset_n_backup_query_tables_list(3045,84875
void LEX::restore_backup_query_tables_list(3064,85328
bool LEX::table_or_sp_used(3082,85698
static void fix_prepare_info_in_table_list(3108,86227
void st_select_lex::fix_prepare_information(3142,87338
void st_select_lex::set_index_hint_type(3203,89167
void st_select_lex::alloc_index_hints 3219,89531
bool st_select_lex::add_index_hint 3239,89940
bool LEX::is_partition_management(3258,90680
uint binlog_unsafe_map[binlog_unsafe_map3267,90910
#define UNSAFE(3269,90940
void unsafe_mixed_statement(3289,91673
void binlog_unsafe_map_init(3318,92525

sql/sql_list.cc,107
list_node end_of_list;24,885
void free_list(26,909
void free_list(34,1027
base_list::base_list(42,1135

sql/sql_load.cc,887
class XML_TAG 42,1669
XML_TAG::XML_TAG(51,1781
class READ_INFO 59,1881
  void end_io_cache(READ_INFO::end_io_cache101,3235
  void set_io_cache_arg(READ_INFO::set_io_cache_arg112,3490
int mysql_load(164,5918
static bool write_execute_load_query_log_event(659,22892
read_fixed_length(783,26884
read_sep_field(912,30981
read_xml_field(1115,37346
READ_INFO::unescape(1279,42369
READ_INFO::READ_INFO(1303,42853
READ_INFO::~READ_INFO(1381,45268
#define GET 1395,45488
#define PUSH(1396,45555
inline int READ_INFO::terminator(1399,45592
int READ_INFO::read_field(1419,45894
int READ_INFO::read_fixed_length(1611,50187
int READ_INFO::next_line(1662,51133
bool READ_INFO::find_start_of_fields(1707,51946
int READ_INFO::clear_level(1739,52559
my_xml_entity_to_char(1763,52955
my_tospace(1799,53732
int READ_INFO::read_value(1808,53883
int READ_INFO::read_xml(1864,55160

sql/sql_locale.cc,36866
enum err_msgs_index30,1108
  en_US=err_msgs_index::en_US32,1130
  en_US= 0, cs_CZ,err_msgs_index::cs_CZ32,1130
  en_US= 0, cs_CZ, da_DK,err_msgs_index::da_DK32,1130
  en_US= 0, cs_CZ, da_DK, nl_NL,err_msgs_index::nl_NL32,1130
  en_US= 0, cs_CZ, da_DK, nl_NL, et_EE,err_msgs_index::et_EE32,1130
  en_US= 0, cs_CZ, da_DK, nl_NL, et_EE, fr_FR,err_msgs_index::fr_FR32,1130
  en_US= 0, cs_CZ, da_DK, nl_NL, et_EE, fr_FR, de_DE,err_msgs_index::de_DE32,1130
  en_US= 0, cs_CZ, da_DK, nl_NL, et_EE, fr_FR, de_DE, el_GR,err_msgs_index::el_GR32,1130
  en_US= 0, cs_CZ, da_DK, nl_NL, et_EE, fr_FR, de_DE, el_GR, hu_HU,err_msgs_index::hu_HU32,1130
  en_US= 0, cs_CZ, da_DK, nl_NL, et_EE, fr_FR, de_DE, el_GR, hu_HU, it_IT,err_msgs_index::it_IT32,1130
  ja_JP,err_msgs_index::ja_JP33,1205
  ja_JP, ko_KR,err_msgs_index::ko_KR33,1205
  ja_JP, ko_KR, no_NO,err_msgs_index::no_NO33,1205
  ja_JP, ko_KR, no_NO, nn_NO,err_msgs_index::nn_NO33,1205
  ja_JP, ko_KR, no_NO, nn_NO, pl_PL,err_msgs_index::pl_PL33,1205
  ja_JP, ko_KR, no_NO, nn_NO, pl_PL, pt_PT,err_msgs_index::pt_PT33,1205
  ja_JP, ko_KR, no_NO, nn_NO, pl_PL, pt_PT, ro_RO,err_msgs_index::ro_RO33,1205
  ja_JP, ko_KR, no_NO, nn_NO, pl_PL, pt_PT, ro_RO, ru_RU,err_msgs_index::ru_RU33,1205
  ja_JP, ko_KR, no_NO, nn_NO, pl_PL, pt_PT, ro_RO, ru_RU, sr_RS,err_msgs_index::sr_RS33,1205
  ja_JP, ko_KR, no_NO, nn_NO, pl_PL, pt_PT, ro_RO, ru_RU, sr_RS,  sk_SK,err_msgs_index::sk_SK33,1205
  es_ES,err_msgs_index::es_ES34,1278
  es_ES, sv_SE,err_msgs_index::sv_SE34,1278
  es_ES, sv_SE, uk_UAerr_msgs_index::uk_UA34,1278
MY_LOCALE_ERRMSGS global_errmsgs[global_errmsgs38,1320
static const char *my_locale_month_names_ar_AE[my_locale_month_names_ar_AE68,1930
static const char *my_locale_ab_month_names_ar_AE[my_locale_ab_month_names_ar_AE70,2158
static const char *my_locale_day_names_ar_AE[my_locale_day_names_ar_AE72,2335
static const char *my_locale_ab_day_names_ar_AE[my_locale_ab_day_names_ar_AE74,2510
static TYPELIB my_locale_typelib_month_names_ar_AE 76,2611
static TYPELIB my_locale_typelib_ab_month_names_ar_AE 78,2756
static TYPELIB my_locale_typelib_day_names_ar_AE 80,2910
static TYPELIB my_locale_typelib_ab_day_names_ar_AE 82,3049
static const char *my_locale_month_names_ar_BH[my_locale_month_names_ar_BH104,3688
static const char *my_locale_ab_month_names_ar_BH[my_locale_ab_month_names_ar_BH106,3916
static const char *my_locale_day_names_ar_BH[my_locale_day_names_ar_BH108,4093
static const char *my_locale_ab_day_names_ar_BH[my_locale_ab_day_names_ar_BH110,4267
static TYPELIB my_locale_typelib_month_names_ar_BH 112,4368
static TYPELIB my_locale_typelib_ab_month_names_ar_BH 114,4513
static TYPELIB my_locale_typelib_day_names_ar_BH 116,4667
static TYPELIB my_locale_typelib_ab_day_names_ar_BH 118,4806
static const char *my_locale_month_names_ar_JO[my_locale_month_names_ar_JO140,5431
static const char *my_locale_ab_month_names_ar_JO[my_locale_ab_month_names_ar_JO142,5689
static const char *my_locale_day_names_ar_JO[my_locale_day_names_ar_JO144,5950
static const char *my_locale_ab_day_names_ar_JO[my_locale_ab_day_names_ar_JO146,6124
static TYPELIB my_locale_typelib_month_names_ar_JO 148,6301
static TYPELIB my_locale_typelib_ab_month_names_ar_JO 150,6446
static TYPELIB my_locale_typelib_day_names_ar_JO 152,6600
static TYPELIB my_locale_typelib_ab_day_names_ar_JO 154,6739
static const char *my_locale_month_names_ar_SA[my_locale_month_names_ar_SA176,7370
static const char *my_locale_ab_month_names_ar_SA[my_locale_ab_month_names_ar_SA178,7634
static const char *my_locale_day_names_ar_SA[my_locale_day_names_ar_SA180,7775
static const char *my_locale_ab_day_names_ar_SA[my_locale_ab_day_names_ar_SA182,7951
static TYPELIB my_locale_typelib_month_names_ar_SA 184,8059
static TYPELIB my_locale_typelib_ab_month_names_ar_SA 186,8204
static TYPELIB my_locale_typelib_day_names_ar_SA 188,8358
static TYPELIB my_locale_typelib_ab_day_names_ar_SA 190,8497
static const char *my_locale_month_names_ar_SY[my_locale_month_names_ar_SY212,9127
static const char *my_locale_ab_month_names_ar_SY[my_locale_ab_month_names_ar_SY214,9385
static const char *my_locale_day_names_ar_SY[my_locale_day_names_ar_SY216,9646
static const char *my_locale_ab_day_names_ar_SY[my_locale_ab_day_names_ar_SY218,9820
static TYPELIB my_locale_typelib_month_names_ar_SY 220,9997
static TYPELIB my_locale_typelib_ab_month_names_ar_SY 222,10142
static TYPELIB my_locale_typelib_day_names_ar_SY 224,10296
static TYPELIB my_locale_typelib_ab_day_names_ar_SY 226,10435
static const char *my_locale_month_names_be_BY[my_locale_month_names_be_BY248,11065
static const char *my_locale_ab_month_names_be_BY[my_locale_ab_month_names_be_BY250,11341
static const char *my_locale_day_names_be_BY[my_locale_day_names_be_BY252,11518
static const char *my_locale_ab_day_names_be_BY[my_locale_ab_day_names_be_BY254,11700
static TYPELIB my_locale_typelib_month_names_be_BY 256,11829
static TYPELIB my_locale_typelib_ab_month_names_be_BY 258,11974
static TYPELIB my_locale_typelib_day_names_be_BY 260,12128
static TYPELIB my_locale_typelib_ab_day_names_be_BY 262,12267
static const char *my_locale_month_names_bg_BG[my_locale_month_names_bg_BG284,12904
static const char *my_locale_ab_month_names_bg_BG[my_locale_ab_month_names_bg_BG286,13146
static const char *my_locale_day_names_bg_BG[my_locale_day_names_bg_BG288,13323
static const char *my_locale_ab_day_names_bg_BG[my_locale_ab_day_names_bg_BG290,13503
static TYPELIB my_locale_typelib_month_names_bg_BG 292,13618
static TYPELIB my_locale_typelib_ab_month_names_bg_BG 294,13763
static TYPELIB my_locale_typelib_day_names_bg_BG 296,13917
static TYPELIB my_locale_typelib_ab_day_names_bg_BG 298,14056
static const char *my_locale_month_names_ca_ES[my_locale_month_names_ca_ES320,14689
static const char *my_locale_ab_month_names_ca_ES[my_locale_ab_month_names_ca_ES322,14862
static const char *my_locale_day_names_ca_ES[my_locale_day_names_ca_ES324,15003
static const char *my_locale_ab_day_names_ca_ES[my_locale_ab_day_names_ca_ES326,15140
static TYPELIB my_locale_typelib_month_names_ca_ES 328,15241
static TYPELIB my_locale_typelib_ab_month_names_ca_ES 330,15386
static TYPELIB my_locale_typelib_day_names_ca_ES 332,15540
static TYPELIB my_locale_typelib_ab_day_names_ca_ES 334,15679
static const char *my_locale_month_names_cs_CZ[my_locale_month_names_cs_CZ356,16313
static const char *my_locale_ab_month_names_cs_CZ[my_locale_ab_month_names_cs_CZ358,16495
static const char *my_locale_day_names_cs_CZ[my_locale_day_names_cs_CZ360,16645
static const char *my_locale_ab_day_names_cs_CZ[my_locale_ab_day_names_cs_CZ362,16779
static TYPELIB my_locale_typelib_month_names_cs_CZ 364,16883
static TYPELIB my_locale_typelib_ab_month_names_cs_CZ 366,17028
static TYPELIB my_locale_typelib_day_names_cs_CZ 368,17182
static TYPELIB my_locale_typelib_ab_day_names_cs_CZ 370,17321
static const char *my_locale_month_names_da_DK[my_locale_month_names_da_DK392,17954
static const char *my_locale_ab_month_names_da_DK[my_locale_ab_month_names_da_DK394,18128
static const char *my_locale_day_names_da_DK[my_locale_day_names_da_DK396,18269
static const char *my_locale_ab_day_names_da_DK[my_locale_ab_day_names_da_DK398,18399
static TYPELIB my_locale_typelib_month_names_da_DK 400,18509
static TYPELIB my_locale_typelib_ab_month_names_da_DK 402,18654
static TYPELIB my_locale_typelib_day_names_da_DK 404,18808
static TYPELIB my_locale_typelib_ab_day_names_da_DK 406,18947
static const char *my_locale_month_names_de_AT[my_locale_month_names_de_AT428,19574
static const char *my_locale_ab_month_names_de_AT[my_locale_ab_month_names_de_AT430,19747
static const char *my_locale_day_names_de_AT[my_locale_day_names_de_AT432,19890
static const char *my_locale_ab_day_names_de_AT[my_locale_ab_day_names_de_AT434,20027
static TYPELIB my_locale_typelib_month_names_de_AT 436,20135
static TYPELIB my_locale_typelib_ab_month_names_de_AT 438,20280
static TYPELIB my_locale_typelib_day_names_de_AT 440,20434
static TYPELIB my_locale_typelib_ab_day_names_de_AT 442,20573
static const char *my_locale_month_names_de_DE[my_locale_month_names_de_DE464,21201
static const char *my_locale_ab_month_names_de_DE[my_locale_ab_month_names_de_DE466,21375
static const char *my_locale_day_names_de_DE[my_locale_day_names_de_DE468,21517
static const char *my_locale_ab_day_names_de_DE[my_locale_ab_day_names_de_DE470,21654
static TYPELIB my_locale_typelib_month_names_de_DE 472,21755
static TYPELIB my_locale_typelib_ab_month_names_de_DE 474,21900
static TYPELIB my_locale_typelib_day_names_de_DE 476,22054
static TYPELIB my_locale_typelib_ab_day_names_de_DE 478,22193
static const char *my_locale_month_names_en_US[my_locale_month_names_en_US500,22827
static const char *my_locale_ab_month_names_en_US[my_locale_ab_month_names_en_US502,23003
static const char *my_locale_day_names_en_US[my_locale_day_names_en_US504,23144
static const char *my_locale_ab_day_names_en_US[my_locale_ab_day_names_en_US506,23278
static TYPELIB my_locale_typelib_month_names_en_US 508,23386
static TYPELIB my_locale_typelib_ab_month_names_en_US 510,23531
static TYPELIB my_locale_typelib_day_names_en_US 512,23685
static TYPELIB my_locale_typelib_ab_day_names_en_US 514,23824
static const char *my_locale_month_names_es_ES[my_locale_month_names_es_ES536,24455
static const char *my_locale_ab_month_names_es_ES[my_locale_ab_month_names_es_ES538,24634
static const char *my_locale_day_names_es_ES[my_locale_day_names_es_ES540,24775
static const char *my_locale_ab_day_names_es_ES[my_locale_ab_day_names_es_ES542,24907
static TYPELIB my_locale_typelib_month_names_es_ES 544,25017
static TYPELIB my_locale_typelib_ab_month_names_es_ES 546,25162
static TYPELIB my_locale_typelib_day_names_es_ES 548,25316
static TYPELIB my_locale_typelib_ab_day_names_es_ES 550,25455
static const char *my_locale_month_names_et_EE[my_locale_month_names_et_EE572,26084
static const char *my_locale_ab_month_names_et_EE[my_locale_ab_month_names_et_EE574,26266
static const char *my_locale_day_names_et_EE[my_locale_day_names_et_EE576,26432
static const char *my_locale_ab_day_names_et_EE[my_locale_ab_day_names_et_EE578,26579
static TYPELIB my_locale_typelib_month_names_et_EE 580,26673
static TYPELIB my_locale_typelib_ab_month_names_et_EE 582,26818
static TYPELIB my_locale_typelib_day_names_et_EE 584,26972
static TYPELIB my_locale_typelib_ab_day_names_et_EE 586,27111
static const char *my_locale_month_names_eu_ES[my_locale_month_names_eu_ES608,27739
static const char *my_locale_ab_month_names_eu_ES[my_locale_ab_month_names_eu_ES610,27922
static const char *my_locale_day_names_eu_ES[my_locale_day_names_eu_ES612,28063
static const char *my_locale_ab_day_names_eu_ES[my_locale_ab_day_names_eu_ES614,28208
static TYPELIB my_locale_typelib_month_names_eu_ES 616,28316
static TYPELIB my_locale_typelib_ab_month_names_eu_ES 618,28461
static TYPELIB my_locale_typelib_day_names_eu_ES 620,28615
static TYPELIB my_locale_typelib_ab_day_names_eu_ES 622,28754
static const char *my_locale_month_names_fi_FI[my_locale_month_names_fi_FI644,29381
static const char *my_locale_ab_month_names_fi_FI[my_locale_ab_month_names_fi_FI646,29578
static const char *my_locale_day_names_fi_FI[my_locale_day_names_fi_FI648,29772
static const char *my_locale_ab_day_names_fi_FI[my_locale_ab_day_names_fi_FI650,29916
static TYPELIB my_locale_typelib_month_names_fi_FI 652,30017
static TYPELIB my_locale_typelib_ab_month_names_fi_FI 654,30162
static TYPELIB my_locale_typelib_day_names_fi_FI 656,30316
static TYPELIB my_locale_typelib_ab_day_names_fi_FI 658,30455
static const char *my_locale_month_names_fo_FO[my_locale_month_names_fo_FO680,31091
static const char *my_locale_ab_month_names_fo_FO[my_locale_ab_month_names_fo_FO682,31265
static const char *my_locale_day_names_fo_FO[my_locale_day_names_fo_FO684,31406
static const char *my_locale_ab_day_names_fo_FO[my_locale_ab_day_names_fo_FO686,31561
static TYPELIB my_locale_typelib_month_names_fo_FO 688,31673
static TYPELIB my_locale_typelib_ab_month_names_fo_FO 690,31818
static TYPELIB my_locale_typelib_day_names_fo_FO 692,31972
static TYPELIB my_locale_typelib_ab_day_names_fo_FO 694,32111
static const char *my_locale_month_names_fr_FR[my_locale_month_names_fr_FR716,32745
static const char *my_locale_ab_month_names_fr_FR[my_locale_ab_month_names_fr_FR718,32923
static const char *my_locale_day_names_fr_FR[my_locale_day_names_fr_FR720,33067
static const char *my_locale_ab_day_names_fr_FR[my_locale_ab_day_names_fr_FR722,33196
static TYPELIB my_locale_typelib_month_names_fr_FR 724,33304
static TYPELIB my_locale_typelib_ab_month_names_fr_FR 726,33449
static TYPELIB my_locale_typelib_day_names_fr_FR 728,33603
static TYPELIB my_locale_typelib_ab_day_names_fr_FR 730,33742
static const char *my_locale_month_names_gl_ES[my_locale_month_names_gl_ES752,34370
static const char *my_locale_ab_month_names_gl_ES[my_locale_ab_month_names_gl_ES754,34548
static const char *my_locale_day_names_gl_ES[my_locale_day_names_gl_ES756,34690
static const char *my_locale_ab_day_names_gl_ES[my_locale_ab_day_names_gl_ES758,34818
static TYPELIB my_locale_typelib_month_names_gl_ES 760,34928
static TYPELIB my_locale_typelib_ab_month_names_gl_ES 762,35073
static TYPELIB my_locale_typelib_day_names_gl_ES 764,35227
static TYPELIB my_locale_typelib_ab_day_names_gl_ES 766,35366
static const char *my_locale_month_names_gu_IN[my_locale_month_names_gu_IN788,35996
static const char *my_locale_ab_month_names_gu_IN[my_locale_ab_month_names_gu_IN790,36326
static const char *my_locale_day_names_gu_IN[my_locale_day_names_gu_IN792,36545
static const char *my_locale_ab_day_names_gu_IN[my_locale_ab_day_names_gu_IN794,36770
static TYPELIB my_locale_typelib_month_names_gu_IN 796,36935
static TYPELIB my_locale_typelib_ab_month_names_gu_IN 798,37080
static TYPELIB my_locale_typelib_day_names_gu_IN 800,37234
static TYPELIB my_locale_typelib_ab_day_names_gu_IN 802,37373
static const char *my_locale_month_names_he_IL[my_locale_month_names_he_IL824,38000
static const char *my_locale_ab_month_names_he_IL[my_locale_ab_month_names_he_IL826,38222
static const char *my_locale_day_names_he_IL[my_locale_day_names_he_IL828,38399
static const char *my_locale_ab_day_names_he_IL[my_locale_ab_day_names_he_IL830,38543
static TYPELIB my_locale_typelib_month_names_he_IL 832,38651
static TYPELIB my_locale_typelib_ab_month_names_he_IL 834,38796
static TYPELIB my_locale_typelib_day_names_he_IL 836,38950
static TYPELIB my_locale_typelib_ab_day_names_he_IL 838,39089
static const char *my_locale_month_names_hi_IN[my_locale_month_names_hi_IN860,39712
static const char *my_locale_ab_month_names_hi_IN[my_locale_ab_month_names_hi_IN862,40006
static const char *my_locale_day_names_hi_IN[my_locale_day_names_hi_IN864,40303
static const char *my_locale_ab_day_names_hi_IN[my_locale_ab_day_names_hi_IN866,40532
static TYPELIB my_locale_typelib_month_names_hi_IN 868,40701
static TYPELIB my_locale_typelib_ab_month_names_hi_IN 870,40846
static TYPELIB my_locale_typelib_day_names_hi_IN 872,41000
static TYPELIB my_locale_typelib_ab_day_names_hi_IN 874,41139
static const char *my_locale_month_names_hr_HR[my_locale_month_names_hr_HR896,41765
static const char *my_locale_ab_month_names_hr_HR[my_locale_ab_month_names_hr_HR898,41952
static const char *my_locale_day_names_hr_HR[my_locale_day_names_hr_HR900,42094
static const char *my_locale_ab_day_names_hr_HR[my_locale_ab_day_names_hr_HR902,42230
static TYPELIB my_locale_typelib_month_names_hr_HR 904,42339
static TYPELIB my_locale_typelib_ab_month_names_hr_HR 906,42484
static TYPELIB my_locale_typelib_day_names_hr_HR 908,42638
static TYPELIB my_locale_typelib_ab_day_names_hr_HR 910,42777
static const char *my_locale_month_names_hu_HU[my_locale_month_names_hu_HU932,43410
static const char *my_locale_ab_month_names_hu_HU[my_locale_ab_month_names_hu_HU934,43606
static const char *my_locale_day_names_hu_HU[my_locale_day_names_hu_HU936,43752
static const char *my_locale_ab_day_names_hu_HU[my_locale_ab_day_names_hu_HU938,43888
static TYPELIB my_locale_typelib_month_names_hu_HU 940,43987
static TYPELIB my_locale_typelib_ab_month_names_hu_HU 942,44132
static TYPELIB my_locale_typelib_day_names_hu_HU 944,44286
static TYPELIB my_locale_typelib_ab_day_names_hu_HU 946,44425
static const char *my_locale_month_names_id_ID[my_locale_month_names_id_ID968,45062
static const char *my_locale_ab_month_names_id_ID[my_locale_ab_month_names_id_ID970,45239
static const char *my_locale_day_names_id_ID[my_locale_day_names_id_ID972,45380
static const char *my_locale_ab_day_names_id_ID[my_locale_ab_day_names_id_ID974,45500
static TYPELIB my_locale_typelib_month_names_id_ID 976,45608
static TYPELIB my_locale_typelib_ab_month_names_id_ID 978,45753
static TYPELIB my_locale_typelib_day_names_id_ID 980,45907
static TYPELIB my_locale_typelib_ab_day_names_id_ID 982,46046
static const char *my_locale_month_names_is_IS[my_locale_month_names_is_IS1004,46681
static const char *my_locale_ab_month_names_is_IS[my_locale_ab_month_names_is_IS1006,46865
static const char *my_locale_day_names_is_IS[my_locale_day_names_is_IS1008,47012
static const char *my_locale_ab_day_names_is_IS[my_locale_ab_day_names_is_IS1010,47175
static TYPELIB my_locale_typelib_month_names_is_IS 1012,47287
static TYPELIB my_locale_typelib_ab_month_names_is_IS 1014,47432
static TYPELIB my_locale_typelib_day_names_is_IS 1016,47586
static TYPELIB my_locale_typelib_ab_day_names_is_IS 1018,47725
static const char *my_locale_month_names_it_CH[my_locale_month_names_it_CH1040,48361
static const char *my_locale_ab_month_names_it_CH[my_locale_ab_month_names_it_CH1042,48545
static const char *my_locale_day_names_it_CH[my_locale_day_names_it_CH1044,48686
static const char *my_locale_ab_day_names_it_CH[my_locale_ab_day_names_it_CH1046,48825
static TYPELIB my_locale_typelib_month_names_it_CH 1048,48933
static TYPELIB my_locale_typelib_ab_month_names_it_CH 1050,49078
static TYPELIB my_locale_typelib_day_names_it_CH 1052,49232
static TYPELIB my_locale_typelib_ab_day_names_it_CH 1054,49371
static const char *my_locale_month_names_ja_JP[my_locale_month_names_ja_JP1076,50003
static const char *my_locale_ab_month_names_ja_JP[my_locale_ab_month_names_ja_JP1078,50156
static const char *my_locale_day_names_ja_JP[my_locale_day_names_ja_JP1080,50321
static const char *my_locale_ab_day_names_ja_JP[my_locale_ab_day_names_ja_JP1082,50468
static TYPELIB my_locale_typelib_month_names_ja_JP 1084,50576
static TYPELIB my_locale_typelib_ab_month_names_ja_JP 1086,50721
static TYPELIB my_locale_typelib_day_names_ja_JP 1088,50875
static TYPELIB my_locale_typelib_ab_day_names_ja_JP 1090,51014
static const char *my_locale_month_names_ko_KR[my_locale_month_names_ko_KR1112,51638
static const char *my_locale_ab_month_names_ko_KR[my_locale_ab_month_names_ko_KR1114,51818
static const char *my_locale_day_names_ko_KR[my_locale_day_names_ko_KR1116,51983
static const char *my_locale_ab_day_names_ko_KR[my_locale_ab_day_names_ko_KR1118,52130
static TYPELIB my_locale_typelib_month_names_ko_KR 1120,52238
static TYPELIB my_locale_typelib_ab_month_names_ko_KR 1122,52383
static TYPELIB my_locale_typelib_day_names_ko_KR 1124,52537
static TYPELIB my_locale_typelib_ab_day_names_ko_KR 1126,52676
static const char *my_locale_month_names_lt_LT[my_locale_month_names_lt_LT1148,53307
static const char *my_locale_ab_month_names_lt_LT[my_locale_ab_month_names_lt_LT1150,53504
static const char *my_locale_day_names_lt_LT[my_locale_day_names_lt_LT1152,53645
static const char *my_locale_ab_day_names_lt_LT[my_locale_ab_day_names_lt_LT1154,53814
static TYPELIB my_locale_typelib_month_names_lt_LT 1156,53916
static TYPELIB my_locale_typelib_ab_month_names_lt_LT 1158,54061
static TYPELIB my_locale_typelib_day_names_lt_LT 1160,54215
static TYPELIB my_locale_typelib_ab_day_names_lt_LT 1162,54354
static const char *my_locale_month_names_lv_LV[my_locale_month_names_lv_LV1184,54988
static const char *my_locale_ab_month_names_lv_LV[my_locale_ab_month_names_lv_LV1186,55184
static const char *my_locale_day_names_lv_LV[my_locale_day_names_lv_LV1188,55327
static const char *my_locale_ab_day_names_lv_LV[my_locale_ab_day_names_lv_LV1190,55478
static TYPELIB my_locale_typelib_month_names_lv_LV 1192,55584
static TYPELIB my_locale_typelib_ab_month_names_lv_LV 1194,55729
static TYPELIB my_locale_typelib_day_names_lv_LV 1196,55883
static TYPELIB my_locale_typelib_ab_day_names_lv_LV 1198,56022
static const char *my_locale_month_names_mk_MK[my_locale_month_names_mk_MK1220,56653
static const char *my_locale_ab_month_names_mk_MK[my_locale_ab_month_names_mk_MK1222,56901
static const char *my_locale_day_names_mk_MK[my_locale_day_names_mk_MK1224,57078
static const char *my_locale_ab_day_names_mk_MK[my_locale_ab_day_names_mk_MK1226,57256
static TYPELIB my_locale_typelib_month_names_mk_MK 1228,57385
static TYPELIB my_locale_typelib_ab_month_names_mk_MK 1230,57530
static TYPELIB my_locale_typelib_day_names_mk_MK 1232,57684
static TYPELIB my_locale_typelib_ab_day_names_mk_MK 1234,57823
static const char *my_locale_month_names_mn_MN[my_locale_month_names_mn_MN1256,58457
static const char *my_locale_ab_month_names_mn_MN[my_locale_ab_month_names_mn_MN1258,58899
static const char *my_locale_day_names_mn_MN[my_locale_day_names_mn_MN1260,59055
static const char *my_locale_ab_day_names_mn_MN[my_locale_ab_day_names_mn_MN1262,59211
static TYPELIB my_locale_typelib_month_names_mn_MN 1264,59326
static TYPELIB my_locale_typelib_ab_month_names_mn_MN 1266,59471
static TYPELIB my_locale_typelib_day_names_mn_MN 1268,59625
static TYPELIB my_locale_typelib_ab_day_names_mn_MN 1270,59764
static const char *my_locale_month_names_ms_MY[my_locale_month_names_ms_MY1292,60396
static const char *my_locale_ab_month_names_ms_MY[my_locale_ab_month_names_ms_MY1294,60568
static const char *my_locale_day_names_ms_MY[my_locale_day_names_ms_MY1296,60710
static const char *my_locale_ab_day_names_ms_MY[my_locale_ab_day_names_ms_MY1298,60830
static TYPELIB my_locale_typelib_month_names_ms_MY 1300,60938
static TYPELIB my_locale_typelib_ab_month_names_ms_MY 1302,61083
static TYPELIB my_locale_typelib_day_names_ms_MY 1304,61237
static TYPELIB my_locale_typelib_ab_day_names_ms_MY 1306,61376
static const char *my_locale_month_names_nb_NO[my_locale_month_names_nb_NO1328,62011
static const char *my_locale_ab_month_names_nb_NO[my_locale_ab_month_names_nb_NO1330,62184
static const char *my_locale_day_names_nb_NO[my_locale_day_names_nb_NO1332,62325
static const char *my_locale_ab_day_names_nb_NO[my_locale_ab_day_names_nb_NO1334,62455
static TYPELIB my_locale_typelib_month_names_nb_NO 1336,62565
static TYPELIB my_locale_typelib_ab_month_names_nb_NO 1338,62710
static TYPELIB my_locale_typelib_day_names_nb_NO 1340,62864
static TYPELIB my_locale_typelib_ab_day_names_nb_NO 1342,63003
static const char *my_locale_month_names_nl_NL[my_locale_month_names_nl_NL1364,63646
static const char *my_locale_ab_month_names_nl_NL[my_locale_ab_month_names_nl_NL1366,63824
static const char *my_locale_day_names_nl_NL[my_locale_day_names_nl_NL1368,63965
static const char *my_locale_ab_day_names_nl_NL[my_locale_ab_day_names_nl_NL1370,64101
static TYPELIB my_locale_typelib_month_names_nl_NL 1372,64202
static TYPELIB my_locale_typelib_ab_month_names_nl_NL 1374,64347
static TYPELIB my_locale_typelib_day_names_nl_NL 1376,64501
static TYPELIB my_locale_typelib_ab_day_names_nl_NL 1378,64640
static const char *my_locale_month_names_pl_PL[my_locale_month_names_pl_PL1400,65272
static const char *my_locale_ab_month_names_pl_PL[my_locale_ab_month_names_pl_PL1402,65465
static const char *my_locale_day_names_pl_PL[my_locale_day_names_pl_PL1404,65607
static const char *my_locale_ab_day_names_pl_PL[my_locale_ab_day_names_pl_PL1406,65746
static TYPELIB my_locale_typelib_month_names_pl_PL 1408,65856
static TYPELIB my_locale_typelib_ab_month_names_pl_PL 1410,66001
static TYPELIB my_locale_typelib_day_names_pl_PL 1412,66155
static TYPELIB my_locale_typelib_ab_day_names_pl_PL 1414,66294
static const char *my_locale_month_names_pt_BR[my_locale_month_names_pt_BR1436,66924
static const char *my_locale_ab_month_names_pt_BR[my_locale_ab_month_names_pt_BR1438,67104
static const char *my_locale_day_names_pt_BR[my_locale_day_names_pt_BR1440,67245
static const char *my_locale_ab_day_names_pt_BR[my_locale_ab_day_names_pt_BR1442,67373
static TYPELIB my_locale_typelib_month_names_pt_BR 1444,67482
static TYPELIB my_locale_typelib_ab_month_names_pt_BR 1446,67627
static TYPELIB my_locale_typelib_day_names_pt_BR 1448,67781
static TYPELIB my_locale_typelib_ab_day_names_pt_BR 1450,67920
static const char *my_locale_month_names_pt_PT[my_locale_month_names_pt_PT1472,68553
static const char *my_locale_ab_month_names_pt_PT[my_locale_ab_month_names_pt_PT1474,68733
static const char *my_locale_day_names_pt_PT[my_locale_day_names_pt_PT1476,68874
static const char *my_locale_ab_day_names_pt_PT[my_locale_ab_day_names_pt_PT1478,69002
static TYPELIB my_locale_typelib_month_names_pt_PT 1480,69111
static TYPELIB my_locale_typelib_ab_month_names_pt_PT 1482,69256
static TYPELIB my_locale_typelib_day_names_pt_PT 1484,69410
static TYPELIB my_locale_typelib_ab_day_names_pt_PT 1486,69549
static const char *my_locale_month_names_ro_RO[my_locale_month_names_ro_RO1508,70182
static const char *my_locale_ab_month_names_ro_RO[my_locale_ab_month_names_ro_RO1510,70370
static const char *my_locale_day_names_ro_RO[my_locale_day_names_ro_RO1512,70511
static const char *my_locale_ab_day_names_ro_RO[my_locale_ab_day_names_ro_RO1514,70641
static TYPELIB my_locale_typelib_month_names_ro_RO 1516,70743
static TYPELIB my_locale_typelib_ab_month_names_ro_RO 1518,70888
static TYPELIB my_locale_typelib_day_names_ro_RO 1520,71042
static TYPELIB my_locale_typelib_ab_day_names_ro_RO 1522,71181
static const char *my_locale_month_names_ru_RU[my_locale_month_names_ru_RU1544,71811
static const char *my_locale_ab_month_names_ru_RU[my_locale_ab_month_names_ru_RU1546,72053
static const char *my_locale_day_names_ru_RU[my_locale_day_names_ru_RU1548,72230
static const char *my_locale_ab_day_names_ru_RU[my_locale_ab_day_names_ru_RU1550,72424
static TYPELIB my_locale_typelib_month_names_ru_RU 1552,72553
static TYPELIB my_locale_typelib_ab_month_names_ru_RU 1554,72698
static TYPELIB my_locale_typelib_day_names_ru_RU 1556,72852
static TYPELIB my_locale_typelib_ab_day_names_ru_RU 1558,72991
static const char *my_locale_month_names_ru_UA[my_locale_month_names_ru_UA1580,73620
static const char *my_locale_ab_month_names_ru_UA[my_locale_ab_month_names_ru_UA1582,73858
static const char *my_locale_day_names_ru_UA[my_locale_day_names_ru_UA1584,74035
static const char *my_locale_ab_day_names_ru_UA[my_locale_ab_day_names_ru_UA1586,74229
static TYPELIB my_locale_typelib_month_names_ru_UA 1588,74358
static TYPELIB my_locale_typelib_ab_month_names_ru_UA 1590,74503
static TYPELIB my_locale_typelib_day_names_ru_UA 1592,74657
static TYPELIB my_locale_typelib_ab_day_names_ru_UA 1594,74796
static const char *my_locale_month_names_sk_SK[my_locale_month_names_sk_SK1616,75426
static const char *my_locale_ab_month_names_sk_SK[my_locale_ab_month_names_sk_SK1618,75605
static const char *my_locale_day_names_sk_SK[my_locale_day_names_sk_SK1620,75749
static const char *my_locale_ab_day_names_sk_SK[my_locale_ab_day_names_sk_SK1622,75880
static TYPELIB my_locale_typelib_month_names_sk_SK 1624,75982
static TYPELIB my_locale_typelib_ab_month_names_sk_SK 1626,76127
static TYPELIB my_locale_typelib_day_names_sk_SK 1628,76281
static TYPELIB my_locale_typelib_ab_day_names_sk_SK 1630,76420
static const char *my_locale_month_names_sl_SI[my_locale_month_names_sl_SI1652,77052
static const char *my_locale_ab_month_names_sl_SI[my_locale_ab_month_names_sl_SI1654,77228
static const char *my_locale_day_names_sl_SI[my_locale_day_names_sl_SI1656,77369
static const char *my_locale_ab_day_names_sl_SI[my_locale_ab_day_names_sl_SI1658,77499
static TYPELIB my_locale_typelib_month_names_sl_SI 1660,77608
static TYPELIB my_locale_typelib_ab_month_names_sl_SI 1662,77753
static TYPELIB my_locale_typelib_day_names_sl_SI 1664,77907
static TYPELIB my_locale_typelib_ab_day_names_sl_SI 1666,78046
static const char *my_locale_month_names_sq_AL[my_locale_month_names_sq_AL1688,78680
static const char *my_locale_ab_month_names_sq_AL[my_locale_ab_month_names_sq_AL1690,78849
static const char *my_locale_day_names_sq_AL[my_locale_day_names_sq_AL1692,78991
static const char *my_locale_ab_day_names_sq_AL[my_locale_ab_day_names_sq_AL1694,79139
static TYPELIB my_locale_typelib_month_names_sq_AL 1696,79256
static TYPELIB my_locale_typelib_ab_month_names_sq_AL 1698,79401
static TYPELIB my_locale_typelib_day_names_sq_AL 1700,79555
static TYPELIB my_locale_typelib_ab_day_names_sq_AL 1702,79694
static const char *my_locale_month_names_sr_RS[my_locale_month_names_sr_RS1724,80324
static const char *my_locale_ab_month_names_sr_RS[my_locale_ab_month_names_sr_RS1726,80497
static const char *my_locale_day_names_sr_RS[my_locale_day_names_sr_RS1728,80638
static const char *my_locale_ab_day_names_sr_RS[my_locale_ab_day_names_sr_RS1730,80770
static TYPELIB my_locale_typelib_month_names_sr_RS 1732,80879
static TYPELIB my_locale_typelib_ab_month_names_sr_RS 1734,81024
static TYPELIB my_locale_typelib_day_names_sr_RS 1736,81178
static TYPELIB my_locale_typelib_ab_day_names_sr_RS 1738,81317
static const char *my_locale_month_names_sv_SE[my_locale_month_names_sv_SE1778,82383
static const char *my_locale_ab_month_names_sv_SE[my_locale_ab_month_names_sv_SE1780,82559
static const char *my_locale_day_names_sv_SE[my_locale_day_names_sv_SE1782,82700
static const char *my_locale_ab_day_names_sv_SE[my_locale_ab_day_names_sv_SE1784,82830
static TYPELIB my_locale_typelib_month_names_sv_SE 1786,82941
static TYPELIB my_locale_typelib_ab_month_names_sv_SE 1788,83086
static TYPELIB my_locale_typelib_day_names_sv_SE 1790,83240
static TYPELIB my_locale_typelib_ab_day_names_sv_SE 1792,83379
static const char *my_locale_month_names_ta_IN[my_locale_month_names_ta_IN1814,84002
static const char *my_locale_ab_month_names_ta_IN[my_locale_ab_month_names_ta_IN1816,84327
static const char *my_locale_day_names_ta_IN[my_locale_day_names_ta_IN1818,84655
static const char *my_locale_ab_day_names_ta_IN[my_locale_ab_day_names_ta_IN1820,84865
static TYPELIB my_locale_typelib_month_names_ta_IN 1822,84973
static TYPELIB my_locale_typelib_ab_month_names_ta_IN 1824,85118
static TYPELIB my_locale_typelib_day_names_ta_IN 1826,85272
static TYPELIB my_locale_typelib_ab_day_names_ta_IN 1828,85411
static const char *my_locale_month_names_te_IN[my_locale_month_names_te_IN1850,86034
static const char *my_locale_ab_month_names_te_IN[my_locale_ab_month_names_te_IN1852,86358
static const char *my_locale_day_names_te_IN[my_locale_day_names_te_IN1854,86685
static const char *my_locale_ab_day_names_te_IN[my_locale_ab_day_names_te_IN1856,86928
static TYPELIB my_locale_typelib_month_names_te_IN 1858,87090
static TYPELIB my_locale_typelib_ab_month_names_te_IN 1860,87235
static TYPELIB my_locale_typelib_day_names_te_IN 1862,87389
static TYPELIB my_locale_typelib_ab_day_names_te_IN 1864,87528
static const char *my_locale_month_names_th_TH[my_locale_month_names_th_TH1886,88153
static const char *my_locale_ab_month_names_th_TH[my_locale_ab_month_names_th_TH1888,88513
static const char *my_locale_day_names_th_TH[my_locale_day_names_th_TH1890,88723
static const char *my_locale_ab_day_names_th_TH[my_locale_ab_day_names_th_TH1892,88927
static TYPELIB my_locale_typelib_month_names_th_TH 1894,89048
static TYPELIB my_locale_typelib_ab_month_names_th_TH 1896,89193
static TYPELIB my_locale_typelib_day_names_th_TH 1898,89347
static TYPELIB my_locale_typelib_ab_day_names_th_TH 1900,89486
static const char *my_locale_month_names_tr_TR[my_locale_month_names_tr_TR1922,90113
static const char *my_locale_ab_month_names_tr_TR[my_locale_ab_month_names_tr_TR1924,90284
static const char *my_locale_day_names_tr_TR[my_locale_day_names_tr_TR1926,90427
static const char *my_locale_ab_day_names_tr_TR[my_locale_ab_day_names_tr_TR1928,90562
static TYPELIB my_locale_typelib_month_names_tr_TR 1930,90673
static TYPELIB my_locale_typelib_ab_month_names_tr_TR 1932,90818
static TYPELIB my_locale_typelib_day_names_tr_TR 1934,90972
static TYPELIB my_locale_typelib_ab_day_names_tr_TR 1936,91111
static const char *my_locale_month_names_uk_UA[my_locale_month_names_uk_UA1958,91741
static const char *my_locale_ab_month_names_uk_UA[my_locale_ab_month_names_uk_UA1960,92009
static const char *my_locale_day_names_uk_UA[my_locale_day_names_uk_UA1962,92186
static const char *my_locale_ab_day_names_uk_UA[my_locale_ab_day_names_uk_UA1964,92367
static TYPELIB my_locale_typelib_month_names_uk_UA 1966,92496
static TYPELIB my_locale_typelib_ab_month_names_uk_UA 1968,92641
static TYPELIB my_locale_typelib_day_names_uk_UA 1970,92795
static TYPELIB my_locale_typelib_ab_day_names_uk_UA 1972,92934
static const char *my_locale_month_names_ur_PK[my_locale_month_names_ur_PK1994,93563
static const char *my_locale_ab_month_names_ur_PK[my_locale_ab_month_names_ur_PK1996,93775
static const char *my_locale_day_names_ur_PK[my_locale_day_names_ur_PK1998,93990
static const char *my_locale_ab_day_names_ur_PK[my_locale_ab_day_names_ur_PK2000,94132
static TYPELIB my_locale_typelib_month_names_ur_PK 2002,94277
static TYPELIB my_locale_typelib_ab_month_names_ur_PK 2004,94422
static TYPELIB my_locale_typelib_day_names_ur_PK 2006,94576
static TYPELIB my_locale_typelib_ab_day_names_ur_PK 2008,94715
static const char *my_locale_month_names_vi_VN[my_locale_month_names_vi_VN2030,95345
static const char *my_locale_ab_month_names_vi_VN[my_locale_ab_month_names_vi_VN2032,95602
static const char *my_locale_day_names_vi_VN[my_locale_day_names_vi_VN2034,95770
static const char *my_locale_ab_day_names_vi_VN[my_locale_ab_day_names_vi_VN2036,95937
static TYPELIB my_locale_typelib_month_names_vi_VN 2038,96057
static TYPELIB my_locale_typelib_ab_month_names_vi_VN 2040,96202
static TYPELIB my_locale_typelib_day_names_vi_VN 2042,96356
static TYPELIB my_locale_typelib_ab_day_names_vi_VN 2044,96495
static const char *my_locale_month_names_zh_CN[my_locale_month_names_zh_CN2066,97147
static const char *my_locale_ab_month_names_zh_CN[my_locale_ab_month_names_zh_CN2068,97327
static const char *my_locale_day_names_zh_CN[my_locale_day_names_zh_CN2070,97492
static const char *my_locale_ab_day_names_zh_CN[my_locale_ab_day_names_zh_CN2072,97639
static TYPELIB my_locale_typelib_month_names_zh_CN 2074,97747
static TYPELIB my_locale_typelib_ab_month_names_zh_CN 2076,97892
static TYPELIB my_locale_typelib_day_names_zh_CN 2078,98046
static TYPELIB my_locale_typelib_ab_day_names_zh_CN 2080,98185
static const char *my_locale_month_names_zh_TW[my_locale_month_names_zh_TW2102,98831
static const char *my_locale_ab_month_names_zh_TW[my_locale_ab_month_names_zh_TW2104,99011
static const char *my_locale_day_names_zh_TW[my_locale_day_names_zh_TW2106,99176
static const char *my_locale_ab_day_names_zh_TW[my_locale_ab_day_names_zh_TW2108,99302
static TYPELIB my_locale_typelib_month_names_zh_TW 2110,99410
static TYPELIB my_locale_typelib_ab_month_names_zh_TW 2112,99555
static TYPELIB my_locale_typelib_day_names_zh_TW 2114,99709
static TYPELIB my_locale_typelib_ab_day_names_zh_TW 2116,99848
static const char *my_locale_month_names_el_GR[my_locale_month_names_el_GR3179,125562
static const char *my_locale_ab_month_names_el_GR[my_locale_ab_month_names_el_GR3187,125905
static const char *my_locale_day_names_el_GR[my_locale_day_names_el_GR3195,126103
static const char *my_locale_ab_day_names_el_GR[my_locale_ab_day_names_el_GR3201,126298
static TYPELIB my_locale_typelib_month_names_el_GR=3207,126438
static TYPELIB my_locale_typelib_ab_month_names_el_GR=3213,126588
static TYPELIB my_locale_typelib_day_names_el_GR=3219,126745
static TYPELIB my_locale_typelib_ab_day_names_el_GR=3225,126887
MY_LOCALE *my_locales[my_locales3256,127712
MY_LOCALE *my_locales_deprecated[my_locales_deprecated3372,130178
MY_LOCALE *my_locale_by_number(my_locale_by_number3379,130248
my_locale_by_name(3392,130565
MY_LOCALE *my_locale_by_name(my_locale_by_name3404,130814
void cleanup_errmsgs(3441,131861

sql/sql_manager.cc,420
static bool volatile manager_thread_in_use;29,1110
static bool abort_manager;30,1154
pthread_t manager_thread;32,1182
mysql_mutex_t LOCK_manager;33,1208
mysql_cond_t COND_manager;34,1236
struct handler_cb 36,1264
static struct handler_cb * volatile cb_list;41,1341
bool mysql_manager_submit(43,1387
pthread_handler_t handle_manager(66,1872
void start_handle_manager(132,3349
void stop_handle_manager(151,3900

sql/sql_parse.cc,4507
#define MYSQL_LEX 16,746
#define FLAGSTR(101,4568
#define SP_TYPE_STRING(109,4708
#define SP_COM_STRING(111,4811
const char *any_db=any_db121,5210
const LEX_STRING command_name[command_name123,5274
const char *xa_state_names[xa_state_names157,6481
inline bool all_tables_not_ok(166,6660
static bool some_non_temp_table_to_be_updated(174,6841
static bool stmt_causes_implicit_commit(193,7300
uint sql_command_flags[sql_command_flags235,8315
uint server_command_flags[server_command_flags236,8353
void init_update_queries(238,8392
bool sqlcom_can_generate_row_events(412,19549
bool is_update_query(418,19699
bool is_log_table_write_query(429,20009
void execute_init_command(435,20197
static void handle_bootstrap_impl(481,21415
pthread_handler_t handle_bootstrap(591,24616
void do_handle_bootstrap(601,24775
void free_items(637,25483
void cleanup_items(653,25789
bool do_command(675,26269
static my_bool deny_updates_if_read_only_option(798,30092
bool dispatch_command(873,32175
void log_slow_statement(1466,51544
int prepare_schema_table(1530,53654
bool alloc_query(1651,56868
static void reset_one_shot_variables(1700,58536
bool sp_process_definer(1719,59107
static bool lock_tables_open_and_lock_tables(1813,62204
mysql_execute_command(1882,64310
static bool execute_sqlcom_select(4586,151113
bool check_single_table_access(4666,153638
bool check_one_table_access(4716,155009
check_access(4772,157057
static bool check_show_access(4958,163030
check_table_access(5072,166561
check_routine_access(5132,168495
bool check_some_routine_access(5179,170032
bool check_some_access(5213,171052
bool check_global_access(5256,172245
#define used_stack(5276,172841
#define used_stack(5278,172886
long max_stack_used;5282,172950
bool check_stack_overrun(5292,173275
#define MY_YACC_INIT 5320,174087
#define MY_YACC_MAX 5321,174139
bool my_yyoverflow(5323,174191
void mysql_reset_thd_for_next_command(5371,175760
void THD::reset_for_next_command(5376,175846
mysql_init_select(5442,177872
mysql_new_select(5468,178405
void create_select_for_variable(5545,180749
void mysql_init_multi_delete(5575,181557
void mysql_parse(5602,182311
bool mysql_test_parse_for_slave(5714,186129
bool add_field_to_list(5745,186776
void store_position_for_column(5838,189669
add_proc_to_list(5844,189782
bool add_to_list(5864,190159
TABLE_LIST *st_select_lex::add_table_to_list(st_select_lex::add_table_to_list5901,191290
bool st_select_lex::init_nested_join(6084,197536
TABLE_LIST *st_select_lex::end_nested_join(st_select_lex::end_nested_join6121,198508
TABLE_LIST *st_select_lex::nest_last_join(st_select_lex::nest_last_join6163,199458
void st_select_lex::add_joined_table(6219,200972
TABLE_LIST *st_select_lex::convert_right_join(st_select_lex::convert_right_join6260,202155
void st_select_lex::set_lock_for_tables(6284,202696
bool st_select_lex_unit::add_fake_select_lex(6329,203960
push_new_name_resolution_context(6387,205873
void add_join_on(6416,206697
void add_join_natural(6469,208261
uint kill_one_thread(6488,208681
void sql_kill(6558,210652
bool append_file_to_dir(6575,210999
bool check_simple_select(6609,211938
Comp_creator *comp_eq_creator(comp_eq_creator6626,212338
Comp_creator *comp_ge_creator(comp_ge_creator6632,212460
Comp_creator *comp_gt_creator(comp_gt_creator6638,212582
Comp_creator *comp_le_creator(comp_le_creator6644,212704
Comp_creator *comp_lt_creator(comp_lt_creator6650,212826
Comp_creator *comp_ne_creator(comp_ne_creator6656,212948
Item * all_any_subquery_creator(6673,213378
bool multi_update_precheck(6705,214203
bool multi_delete_precheck(6784,216389
static TABLE_LIST *multi_delete_table_match(multi_delete_table_match6836,218166
bool multi_delete_set_locks_and_link_aux_tables(6888,219451
bool update_precheck(6932,220665
bool delete_precheck(6956,221159
bool insert_precheck(6979,221621
void create_table_set_open_action_and_adjust_tables(7009,222442
bool create_table_precheck(7045,223335
Item *negate_expression(negate_expression7109,225176
void get_default_definer(7140,226069
LEX_USER *create_default_definer(create_default_definer7167,226736
LEX_USER *create_definer(create_definer7193,227265
LEX_USER *get_current_user(get_current_user7223,227891
bool check_string_byte_length(7248,228487
bool check_string_char_length(7276,229222
int test_if_data_home_dir(7310,230149
bool check_host_name(7357,231402
bool parse_sql(7395,232233
merge_charset_and_collation(7474,234208

sql/sql_partition.cc,7069
#define MYSQL_LEX 48,2343
#define ERROR_INJECT_CRASH(74,3479
#define ERROR_INJECT_ERROR(76,3556
const LEX_STRING partition_keywords[partition_keywords82,3740
static const char *part_str=part_str94,4065
static const char *sub_str=sub_str95,4107
static const char *by_str=by_str96,4142
static const char *space_str=space_str97,4175
static const char *equal_str=equal_str98,4210
static const char *end_paren_str=end_paren_str99,4245
static const char *begin_paren_str=begin_paren_str100,4284
static const char *comma_str=comma_str101,4325
Item* convert_charset_partition_constant(193,9134
bool is_name_in_list(224,9957
bool partition_default_handling(257,10749
bool check_reorganise_list(311,12417
int get_parts_for_update(364,14149
int get_part_for_delete(438,16467
static bool set_up_field_array(512,19183
static bool create_full_part_field_array(644,22657
static void clear_indicator_in_key_fields(742,25606
static void set_indicator_in_key_fields(762,26063
static void check_fields_in_PF(785,26716
static void clear_field_flag(821,27489
static bool handle_list_of_fields(855,28446
int check_signed_flag(935,30686
init_lex_with_single_table(979,31918
end_lex_with_single_table(1030,33747
static bool fix_fields_part_func(1076,35597
static bool check_primary_key(1191,39587
static bool check_unique_keys(1234,40855
void check_range_capable_PF(1314,44122
static bool set_up_partition_bitmap(1339,44605
static void set_up_partition_key_maps(1383,46034
static void set_up_partition_func_pointers(1438,47743
void set_linear_hash_mask(1579,52276
static uint32 get_part_id_from_linear_hash(1609,53249
bool field_is_partition_charset(1636,53933
bool check_part_func_fields(1671,55013
bool fix_partition_func(1725,56615
static int add_write(1906,62387
static int add_string_object(1916,62596
static int add_string(1921,62716
static int add_string_len(1926,62824
static int add_space(1931,62935
static int add_comma(1936,63010
static int add_equal(1941,63085
static int add_end_parenthesis(1946,63160
static int add_begin_parenthesis(1951,63249
static int add_part_key_word(1956,63342
static int add_partition(1963,63491
static int add_subpartition(1970,63627
static int add_partition_by(1977,63746
static int add_subpartition_by(1984,63904
static int add_part_field_list(1991,64029
static int add_name_string(2019,64833
static int add_int(2033,65276
static int add_uint(2040,65401
static int add_quoted_string(2051,65670
static int add_keyword_string(2061,65975
static int add_keyword_int(2077,66404
static int add_engine(2088,66656
static int add_partition_options(2096,66927
static int check_part_field(2141,68498
static Create_field* get_sql_field(2209,70274
static int add_column_list_values(2229,70739
static int add_partition_values(2341,74621
static int add_key_with_algorithm(2431,77195
char *generate_partition_syntax(generate_partition_syntax2508,80145
bool partition_key_modified(2718,86953
static inline int part_val_int(2749,87865
static uint32 calculate_key_value(2796,89473
static uint32 get_part_id_for_sub(2894,92324
static int get_part_id_hash(2916,92930
static int get_part_id_linear_hash(2951,93895
static uint32 get_part_id_key(2982,94748
static uint32 get_part_id_linear_key(3007,95427
static void copy_to_part_field_buffers(3039,96581
static void restore_part_field_pointers(3093,98193
static int get_part_id_charset_func_part(3176,101046
static int get_part_id_charset_func_subpart(3194,101775
int get_partition_id_list_col(3209,102402
int get_partition_id_list(3245,103409
uint32 get_partition_id_cols_list_for_endpoint(3298,104783
uint32 get_list_array_idx_for_endpoint_charset(3380,108474
uint32 get_list_array_idx_for_endpoint(3395,109151
int get_partition_id_range_col(3456,111165
int get_partition_id_range(3493,112417
get_partition_id_range_for_endpoint_charset(3581,115532
uint32 get_partition_id_range_for_endpoint(3596,116208
int get_partition_id_hash_nosub(3686,119150
int get_partition_id_linear_hash_nosub(3695,119438
int get_partition_id_key_nosub(3704,119772
int get_partition_id_linear_key_nosub(3714,120071
int get_partition_id_with_sub(3725,120449
int get_partition_id_hash_sub(3775,121920
int get_partition_id_linear_hash_sub(3784,122178
int get_partition_id_key_sub(3794,122508
int get_partition_id_linear_key_sub(3804,122782
static bool set_PF_fields_in_key(3828,123491
static bool check_part_func_bound(3873,124729
static int get_sub_part_id_from_key(3911,125693
bool get_part_id_from_key(3957,127132
void get_full_part_id_from_key(4004,128667
void prune_partition_set(4053,130221
void get_partition_set(4105,131979
bool mysql_unpack_partition(4329,140084
set_engine_all_partitions(4473,145514
static int fast_end_partition(4512,146531
static bool check_native_partitioned(4553,147657
bool set_part_state(4621,149635
uint prep_alter_part_table(4692,152074
static bool mysql_change_partitions(5714,191175
static bool mysql_rename_partitions(5768,192656
static bool mysql_drop_partitions(5805,193615
static void insert_part_info_log_entry_list(5844,194531
static void release_part_info_log_entries(5861,194997
static bool write_log_replace_delete_frm(5892,195947
static bool write_log_changed_partitions(5942,197731
static bool write_log_dropped_partitions(6037,201272
static void set_part_info_exec_log_entry(6131,204545
static bool write_log_drop_shadow_frm(6155,205361
static bool write_log_rename_frm(6198,206779
static bool write_log_drop_partition(6249,208534
static bool write_log_add_change_partition(6307,210628
static bool write_log_final_change_partition(6373,213003
static void write_log_completed(6431,215053
static void release_log_entries(6469,216146
static void alter_partition_lock_handling(6489,216680
static int alter_close_tables(6521,217513
void handle_alter_part_error(6548,218321
static void downgrade_mdl_if_lock_tables_mode(6679,222920
uint fast_alter_partition_table(6709,224009
void set_field_ptr(7130,243791
void set_key_field_ptr(7164,244816
void mem_alloc_error(7197,245557
void make_used_partitions_str(7220,246169
static void set_up_range_analysis_info(7308,249018
uint32 store_tuple_to_record(7400,251415
static int cmp_rec_and_tuple(7442,252562
static int cmp_rec_and_tuple_prune(7486,253746
typedef uint32 (*get_endpoint_func)get_endpoint_func7539,255296
typedef uint32 (*get_col_endpoint_func)get_col_endpoint_func7542,255430
uint32 get_partition_id_cols_range_for_endpoint(7560,256066
int get_part_iter_for_interval_cols_via_map(7609,258206
int get_part_iter_for_interval_via_mapping(7710,262155
#define MAX_RANGE_TO_WALK 7884,269014
int get_part_iter_for_interval_via_walking(7926,270721
uint32 get_next_partition_id_range(8065,275534
uint32 get_next_partition_id_list(8102,276619
static uint32 get_next_partition_via_walking(8147,277910
static uint32 get_next_subpartition_via_walking(8170,278782
void create_partition_name(8206,279766
void create_subpartition_name(8248,280928
uint get_partition_field_store_length(8267,281729

sql/sql_partition_admin.cc,370
bool Partition_statement_unsupported::execute(28,1304
bool Alter_table_analyze_partition_statement::execute(39,1598
bool Alter_table_check_partition_statement::execute(56,1970
bool Alter_table_optimize_partition_statement::execute(73,2336
bool Alter_table_repair_partition_statement::execute(90,2711
bool Alter_table_truncate_partition_statement::execute(107,3080

sql/sql_plugin.cc,8503
#define REPORT_TO_LOG 36,1641
#define REPORT_TO_USER 37,1666
const char *global_plugin_typelib_names[global_plugin_typelib_names46,1890
static TYPELIB global_plugin_typelib=48,1991
char *opt_plugin_load=opt_plugin_load53,2127
char *opt_plugin_dir_ptr;opt_plugin_dir_ptr54,2156
char opt_plugin_dir[opt_plugin_dir55,2182
const LEX_STRING plugin_type_names[plugin_type_names60,2341
plugin_type_init plugin_type_initialize[plugin_type_initialize83,3096
plugin_type_init plugin_type_deinitialize[plugin_type_deinitialize89,3258
static const char *plugin_interface_version_sym=plugin_interface_version_sym96,3435
static const char *sizeof_st_plugin_sym=sizeof_st_plugin_sym98,3539
static const char *plugin_declarations_sym=plugin_declarations_sym100,3634
static int min_plugin_interface_version=101,3709
static int min_plugin_info_interface_version[min_plugin_info_interface_version107,3901
static int cur_plugin_info_interface_version[cur_plugin_info_interface_version118,4256
mysql_mutex_t LOCK_plugin;139,4875
static DYNAMIC_ARRAY plugin_dl_array;140,4902
static DYNAMIC_ARRAY plugin_array;141,4940
static HASH plugin_hash[plugin_hash142,4975
static bool reap_needed=143,5027
static int plugin_array_version=144,5059
static bool initialized=146,5095
static MEM_ROOT plugin_mem_root;152,5239
static uint global_variables_dynamic_size=153,5272
static HASH bookmark_hash;154,5318
struct st_item_value_holder 161,5483
struct st_bookmark178,5959
struct st_mysql_sys_var190,6123
class sys_var_pluginvar:sys_var_pluginvar201,6327
  static void *operator new(sys_var_pluginvar::operator new215,6853
  static void operator delete(sys_var_pluginvar::operator delete217,6963
  sys_var_pluginvar(sys_var_pluginvar::sys_var_pluginvar220,7049
  sys_var_pluginvar *cast_pluginvar(sys_var_pluginvar::cast_pluginvar229,7633
  uchar* session_value_ptr(sys_var_pluginvar::session_value_ptr235,7920
  uchar* global_value_ptr(sys_var_pluginvar::global_value_ptr237,8026
  virtual void session_save_default(sys_var_pluginvar::session_save_default240,8171
  virtual void global_save_default(sys_var_pluginvar::global_save_default241,8234
#define my_intern_plugin_lock(268,9714
#define my_intern_plugin_lock_ci(269,9773
static void report_error(274,9998
bool check_valid_path(304,10729
static int item_value_type(315,11111
static const char *item_val_str(item_val_str327,11395
static int item_val_int(345,11904
static int item_is_unsigned(354,12105
static int item_val_real(360,12250
static struct st_plugin_dl *plugin_dl_find(plugin_dl_find376,12650
static st_plugin_dl *plugin_dl_insert_or_reuse(plugin_dl_insert_or_reuse394,13157
static inline void free_plugin_mem(419,13970
static st_plugin_dl *plugin_dl_add(plugin_dl_add431,14201
static void plugin_dl_del(633,20668
static struct st_plugin_int *plugin_find_internal(plugin_find_internal664,21473
static SHOW_COMP_OPTION plugin_status(691,22148
bool plugin_is_ready(708,22576
SHOW_COMP_OPTION plugin_status(717,22734
static plugin_ref intern_plugin_lock(724,22905
plugin_ref plugin_lock(763,23937
plugin_ref plugin_lock_by_name(775,24203
static st_plugin_int *plugin_insert_or_reuse(plugin_insert_or_reuse789,24606
static bool plugin_add(817,25466
static void plugin_deinitialize(891,27944
static void plugin_del(948,29736
static void reap_plugins(967,30437
static void intern_plugin_unlock(1007,31322
void plugin_unlock(1055,32381
void plugin_unlock_list(1074,32802
static int plugin_initialize(1088,33127
uchar *get_plugin_hash_key(get_plugin_hash_key1175,35482
uchar *get_bookmark_hash_key(get_bookmark_hash_key1184,35749
static inline void convert_dash_to_underscore(1192,35995
static inline void convert_underscore_to_dash(1199,36140
static PSI_mutex_key key_LOCK_plugin;1207,36311
static PSI_mutex_info all_plugin_mutexes[all_plugin_mutexes1209,36350
static void init_plugin_psi_keys(1214,36454
int plugin_init(1234,36984
static bool register_builtin(1426,42686
static void plugin_load(1452,43426
static bool plugin_load_list(1537,46141
void plugin_shutdown(1622,48391
bool mysql_install_plugin(1752,52300
bool mysql_uninstall_plugin(1860,55602
bool plugin_foreach_with_mask(1972,59118
#undef MYSQL_SYSVAR_NAME2040,61145
#define MYSQL_SYSVAR_NAME(2041,61170
#define PLUGIN_VAR_TYPEMASK 2042,61207
#define EXTRA_OPTIONS 2044,61243
typedef DECLARE_MYSQL_SYSVAR_BASIC(sysvar_bool_t, my_bool)2046,61316
typedef DECLARE_MYSQL_THDVAR_BASIC(thdvar_bool_t, my_bool)2047,61376
typedef DECLARE_MYSQL_SYSVAR_BASIC(sysvar_str_t, char 2048,61436
typedef DECLARE_MYSQL_THDVAR_BASIC(thdvar_str_t, char 2049,61494
typedef DECLARE_MYSQL_SYSVAR_TYPELIB(sysvar_enum_t, unsigned long)2051,61553
typedef DECLARE_MYSQL_THDVAR_TYPELIB(thdvar_enum_t, unsigned long)2052,61621
typedef DECLARE_MYSQL_SYSVAR_TYPELIB(sysvar_set_t, ulonglong)2053,61689
typedef DECLARE_MYSQL_THDVAR_TYPELIB(thdvar_set_t, ulonglong)2054,61752
typedef DECLARE_MYSQL_SYSVAR_SIMPLE(sysvar_int_t, int)2056,61816
typedef DECLARE_MYSQL_SYSVAR_SIMPLE(sysvar_long_t, long)2057,61872
typedef DECLARE_MYSQL_SYSVAR_SIMPLE(sysvar_longlong_t, longlong)2058,61930
typedef DECLARE_MYSQL_SYSVAR_SIMPLE(sysvar_uint_t, uint)2059,61996
typedef DECLARE_MYSQL_SYSVAR_SIMPLE(sysvar_ulong_t, ulong)2060,62054
typedef DECLARE_MYSQL_SYSVAR_SIMPLE(sysvar_ulonglong_t, ulonglong)2061,62114
typedef DECLARE_MYSQL_SYSVAR_SIMPLE(sysvar_double_t, double)2062,62182
typedef DECLARE_MYSQL_THDVAR_SIMPLE(thdvar_int_t, int)2064,62245
typedef DECLARE_MYSQL_THDVAR_SIMPLE(thdvar_long_t, long)2065,62301
typedef DECLARE_MYSQL_THDVAR_SIMPLE(thdvar_longlong_t, longlong)2066,62359
typedef DECLARE_MYSQL_THDVAR_SIMPLE(thdvar_uint_t, uint)2067,62425
typedef DECLARE_MYSQL_THDVAR_SIMPLE(thdvar_ulong_t, ulong)2068,62483
typedef DECLARE_MYSQL_THDVAR_SIMPLE(thdvar_ulonglong_t, ulonglong)2069,62543
typedef DECLARE_MYSQL_THDVAR_SIMPLE(thdvar_double_t, double)2070,62611
static int check_func_bool(2077,62883
static int check_func_int(2107,63534
static int check_func_long(2136,64395
static int check_func_longlong(2165,65261
static int check_func_str(2193,66124
static int check_func_enum(2208,66481
static int check_func_set(2246,67331
static int check_func_double(2286,68386
static void update_func_bool(2301,68776
static void update_func_int(2308,68963
static void update_func_long(2315,69125
static void update_func_longlong(2322,69290
static void update_func_str(2329,69468
static void update_func_double(2335,69634
sys_var *find_sys_var(find_sys_var2346,69992
static st_bookmark *find_bookmark(find_bookmark2385,71117
static st_bookmark *register_var(register_var2426,72138
static void restore_pluginvar_names(2527,75398
static uchar *intern_sys_var_ptr(intern_sys_var_ptr2543,75866
static char *mysql_sys_var_char(mysql_sys_var_char2633,79133
static int *mysql_sys_var_int(mysql_sys_var_int2638,79249
static long *mysql_sys_var_long(mysql_sys_var_long2643,79362
static unsigned long *mysql_sys_var_ulong(mysql_sys_var_ulong2648,79478
static long long *mysql_sys_var_longlong(mysql_sys_var_longlong2653,79613
static unsigned long long *mysql_sys_var_ulonglong(mysql_sys_var_ulonglong2658,79743
static char **mysql_sys_var_str(mysql_sys_var_str2663,79892
static double *mysql_sys_var_double(mysql_sys_var_double2668,80009
void plugin_thdvar_init(2673,80131
static void unlock_variables(2701,80919
static void cleanup_variables(2714,81219
void plugin_thdvar_cleanup(2728,81549
static void plugin_vars_free_values(2767,82516
static SHOW_TYPE pluginvar_show_type(2789,83202
static bool plugin_var_memalloc_session_update(2851,85084
static void plugin_var_memalloc_free(2898,86393
static bool plugin_var_memalloc_global_update(2925,87031
bool sys_var_pluginvar::check_update_type(2944,87534
uchar* sys_var_pluginvar::real_value_ptr(2965,88081
TYPELIB* sys_var_pluginvar::plugin_var_typelib(2979,88406
uchar* sys_var_pluginvar::do_value_ptr(2997,88955
bool sys_var_pluginvar::do_check(3012,89504
bool sys_var_pluginvar::session_update(3028,89932
bool sys_var_pluginvar::global_update(3051,90750
#define OPTION_SET_LIMITS(3127,93137
#define OPTION_SET_LIMITS_DOUBLE(3134,93379
static void plugin_opt_set_limits(3142,93727
my_bool get_one_plugin_option(3252,98000
static int construct_options(3279,98839
static my_option *construct_help_options(construct_help_options3523,106939
static int test_plugin_options(3573,108504
void add_plugin_options(3713,112865

sql/sql_prepare.cc,6212
class Select_fetch_protocol_binary:Select_fetch_protocol_binary122,4805
  void begin_dataset(Select_fetch_protocol_binary::begin_dataset131,5107
class Prepared_statement:Prepared_statement144,5332
  enum flag_valuesPrepared_statement::flag_values147,5385
    IS_IN_USE=Prepared_statement::flag_values::IS_IN_USE149,5408
    IS_SQL_PREPARE=Prepared_statement::flag_values::IS_SQL_PREPARE150,5426
  inline void close_cursor(Prepared_statement::close_cursor177,6289
  inline bool is_in_use(Prepared_statement::is_in_use178,6348
  inline bool is_sql_prepare(Prepared_statement::is_sql_prepare179,6411
  void set_sql_prepare(Prepared_statement::set_sql_prepare180,6490
class Execute_sql_statement:Execute_sql_statement208,7435
class Protocol_local 225,7754
  ~Protocol_local(Protocol_local::~Protocol_local229,7860
  virtual enum enum_protocol_type type(Protocol_local::type254,8949
inline bool is_param_null(282,9933
find_prepared_statement(302,10493
static bool send_prep_stmt(329,11120
static bool send_prep_stmt(365,12224
static ulong get_param_length(396,12911
#define get_param_length(433,13721
static void set_param_tiny(451,14297
static void set_param_short(463,14602
static void set_param_int32(478,14953
static void set_param_int64(493,15304
static void set_param_float(507,15569
static void set_param_double(521,15820
static void set_param_decimal(535,16074
static void set_param_time(554,16515
static void set_param_datetime(586,17296
static void set_param_date(618,18028
void set_param_time(647,18639
void set_param_datetime(664,19046
void set_param_date(673,19286
static void set_param_str(683,19528
#undef get_param_length693,19747
static void setup_one_conversion_function(695,19772
inline bool is_param_long_data_type(805,23564
static bool insert_params_with_log(850,25110
static bool insert_params(910,27030
static bool setup_conversion_functions(950,28284
static bool emb_insert_params(998,29649
static bool emb_insert_params_with_log(1034,30756
swap_parameter_array(1122,33783
static bool insert_params_from_vars(1145,34439
static bool insert_params_from_vars_with_log(1183,35770
static bool mysql_test_insert(1241,37529
static int mysql_test_update(1334,40279
static bool mysql_test_delete(1416,42729
static int mysql_test_select(1458,43811
static bool mysql_test_do_fields(1534,45979
static bool mysql_test_set_fields(1564,46866
static bool mysql_test_call_fields(1600,47866
static bool select_like_stmt_test(1646,49230
select_like_stmt_test_with_open(1682,50355
static bool mysql_test_create_table(1716,51416
static bool mysql_test_create_view(1776,53133
static bool mysql_test_multiupdate(1816,54248
static bool mysql_test_multidelete(1841,54975
static int mysql_insert_select_prepare_tester(1880,56056
static bool mysql_test_insert_select(1906,56810
static bool check_prepared_statement(1953,58136
static bool init_param_array(2119,62836
void mysqld_stmt_prepare(2175,64708
static const char *get_dynamic_sql_string(get_dynamic_sql_string2233,66323
void mysql_sql_stmt_prepare(2322,69082
void reinit_stmt_before_use(2387,70614
static void reset_stmt_params(2520,74406
void mysqld_stmt_execute(2546,75230
void mysql_sql_stmt_execute(2611,77490
void mysqld_stmt_fetch(2650,78587
void mysqld_stmt_reset(2712,80329
void mysqld_stmt_close(2756,81332
void mysql_sql_stmt_close(2792,82213
void mysql_stmt_get_longdata(2826,83319
Select_fetch_protocol_binary::Select_fetch_protocol_binary(2899,85334
bool Select_fetch_protocol_binary::send_result_set_metadata(2903,85432
bool Select_fetch_protocol_binary::send_eof(2921,85955
Select_fetch_protocol_binary::send_data(2936,86206
Reprepare_observer::report_error(2953,86666
Server_runnable::~Server_runnable(2975,87391
Execute_sql_statement(2982,87533
Execute_sql_statement::execute_server_code(2997,87917
Prepared_statement::Prepared_statement(3035,88839
void Prepared_statement::setup_set_params(3052,89281
Prepared_statement::~Prepared_statement(3096,90488
Query_arena::Type Prepared_statement::type(3117,91014
void Prepared_statement::cleanup_stmt(3123,91100
bool Prepared_statement::set_name(3136,91365
Prepared_statement::set_db(3155,91832
bool Prepared_statement::prepare(3199,93201
Prepared_statement::set_parameters(3372,98776
Prepared_statement::execute_loop(3433,100747
Prepared_statement::execute_server_runnable(3499,102513
Prepared_statement::reprepare(3546,103787
bool Prepared_statement::validate_metadata(3608,105609
Prepared_statement::swap_prepared_statement(3639,106341
bool Prepared_statement::execute(3702,108340
void Prepared_statement::deallocate(3879,113677
void Ed_result_set::operator delete(Ed_result_set::operator delete3898,114304
Ed_result_set::Ed_result_set(3923,114962
Ed_connection::Ed_connection(3943,115538
Ed_connection::free_old_result(3960,115822
Ed_connection::execute_direct(3979,116185
bool Ed_connection::execute_direct(4001,116819
Ed_connection::add_result_set(4046,118112
Ed_connection::store_result_set(4074,118819
Protocol_local::Protocol_local(4107,119722
void Protocol_local::prepare_for_resend(4127,120230
bool Protocol_local::write(4144,120658
void Protocol_local::opt_add_row_to_rset(4155,120905
bool Protocol_local::store_null(4171,121216
bool Protocol_local::store_column(4189,121601
Protocol_local::store_string(4215,122393
bool Protocol_local::store_tiny(4236,122955
bool Protocol_local::store_short(4245,123137
bool Protocol_local::store_long(4254,123324
bool Protocol_local::store_longlong(4263,123513
bool Protocol_local::store_decimal(4272,123711
bool Protocol_local::store(4289,124067
bool Protocol_local::store(4301,124346
bool Protocol_local::store(4310,124577
bool Protocol_local::store_date(4318,124721
bool Protocol_local::store_time(4326,124870
bool Protocol_local::store(4334,125020
bool Protocol_local::store(4342,125192
bool Protocol_local::store(4350,125342
bool Protocol_local::send_result_set_metadata(4360,125515
bool Protocol_local::send_out_parameters(4381,125979
Protocol_local::send_ok(4390,126154
bool Protocol_local::send_eof(4410,126707
Protocol_local::send_error(4442,127469
void Protocol_local::remove_last_row(4453,127686

sql/sql_profile.cc,1236
#define TIME_FLOAT_DIGITS 39,1584
#define TIME_I_S_DECIMAL_SIZE 41,1651
#define MAX_QUERY_LENGTH 43,1728
#define MAX_QUERY_HISTORY 44,1757
int fill_query_profile_statistics_info(49,1840
ST_FIELD_INFO query_profile_statistics_info[query_profile_statistics_info60,2165
int make_profile_table_for_show(85,3895
#define RUSAGE_USEC(136,5692
#define RUSAGE_DIFF_USEC(137,5756
static ULONGLONG FileTimeToQuadWord(140,5846
static double GetTimeDiffInSeconds(154,6095
PROF_MEASUREMENT::PROF_MEASUREMENT(160,6234
PROF_MEASUREMENT::PROF_MEASUREMENT(168,6438
PROF_MEASUREMENT::~PROF_MEASUREMENT(179,6840
void PROF_MEASUREMENT::set_label(185,6951
void PROF_MEASUREMENT::collect(243,8493
QUERY_PROFILE::QUERY_PROFILE(258,8983
QUERY_PROFILE::~QUERY_PROFILE(269,9363
void QUERY_PROFILE::set_query_source(280,9564
void QUERY_PROFILE::new_status(291,9946
PROFILING::PROFILING(318,10681
PROFILING::~PROFILING(323,10761
void PROFILING::status_change(341,11275
void PROFILING::start_new_query(365,12025
void PROFILING::discard_current_query(392,12773
void PROFILING::finish_current_query(407,13157
bool PROFILING::show_profiles(440,14084
void PROFILING::set_query_source(502,15924
int PROFILING::fill_statistics_info(521,16477

sql/sql_reload.cc,79
bool reload_acl_and_cache(53,2096
bool flush_tables_with_read_lock(408,12908

sql/sql_rename.cc,146
bool mysql_rename_tables(42,1590
static TABLE_LIST *reverse_table_list(reverse_table_list202,6090
do_rename(238,6836
rename_tables(351,10428

sql/sql_repl.cc,942
int max_binlog_dump_events 30,1096
my_bool opt_sporadic_binlog_dump_fail 31,1141
static int binlog_dump_count 33,1201
uint sql_slave_skip_counter;42,1493
static int fake_rotate_event(62,2449
static int reset_transmit_packet(102,3847
static int send_file(122,4351
void adjust_linfo_offsets(217,6761
bool log_in_use(246,7436
bool purge_error_message(272,7968
bool purge_master_logs(297,8425
bool purge_master_logs_before_date(324,9021
int test_for_non_eof_log_read_errors(335,9274
static ulonglong get_heartbeat_period(374,10394
static int send_heartbeat_event(398,11232
void mysql_binlog_send(436,12325
int start_slave(1066,32931
int stop_slave(1208,37532
int reset_slave(1271,39088
void kill_zombie_dump_threads(1358,41764
bool change_master(1399,42693
int reset_master(1694,53075
bool mysql_show_binlog_events(1719,53602
bool show_binlog_info(1900,58429
bool show_binlogs(1942,59670
int log_loaded_block(2028,62270

sql/sql_select.cc,8809
#define PREV_BITS(56,2126
const char *join_type_str[join_type_str58,2185
bool handle_select(265,12783
fix_inner_refs(360,16148
inline int setup_without_group(446,18770
JOIN::prepare(499,20648
void JOIN::remove_subq_pushed_predicates(791,30164
static void save_index_subquery_explain_info(825,31361
JOIN::optimize(856,31993
void JOIN::restore_tmp(1720,61360
JOIN::reinit(1729,61552
JOIN::init_save_join_tab(1793,63091
JOIN::save_join_tab(1804,63337
JOIN::exec(1828,63860
JOIN::destroy(2426,83762
void JOIN::cleanup_item_list(2466,84802
mysql_select(2523,87242
static ha_rows get_quick_record_count(2627,90053
typedef struct st_sargable_param2659,91154
} SARGABLE_PARAM;2664,91417
make_join_statistics(2676,91576
typedef struct key_field_t 3162,106880
} KEY_FIELD;3174,107222
#define KEY_OPTIMIZE_EXISTS	3177,107261
#define KEY_OPTIMIZE_REF_OR_NULL	3178,107292
merge_key_fields(3205,108154
add_key_field(3333,112472
add_key_equal_fields(3483,117633
is_local_field 3527,118901
add_key_fields(3536,119116
max_part_bit(3769,126947
add_key_part(3786,127246
#define FT_KEYPART 3825,128409
add_ft_keys(3828,128462
sort_keyuse(3892,130503
static void add_key_fields_for_nj(3946,132359
update_ref_and_keys(3990,133841
static void optimize_keyuse(4159,139692
is_indexed_agg_distinct(4230,142153
add_group_and_distinct_keys(4317,144833
set_position(4371,146548
best_access_path(4417,148189
choose_plan(4967,170859
join_tab_cmp(5051,173734
join_tab_cmp_straight(5073,174228
determine_search_depth(5118,175749
optimize_straight_join(5162,177351
greedy_search(5273,181769
best_extension_by_limited_search(5479,190135
find_best(5624,195830
static void calc_used_field_length(5701,198422
cache_record_length(5738,199423
prev_record_reads(5809,201966
get_best_combination(5847,203265
static bool create_ref_for_key(5900,204720
get_store_key(6055,209270
store_val_in_field(6110,211078
JOIN::make_simple_join(6144,212199
inline void add_cond_and_fix(6202,214127
static void add_not_null_conds(6270,216564
add_found_match_trig_cond(6334,218912
make_outerjoin_info(6394,221114
make_join_select(6445,222725
void rr_unlock_row(6830,236847
pick_table_access_method(6847,237157
make_join_readinfo(6889,238100
bool error_if_full_join(7065,243551
void JOIN_TAB::cleanup(7088,244050
void JOIN::join_free(7154,246554
void JOIN::cleanup(7223,248772
eq_ref_table(7313,251257
only_eq_ref_tables(7367,252711
static void update_depend_map(7383,253122
static void update_depend_map(7410,253786
remove_const(7454,255051
ORDER *simple_remove_const(simple_remove_const7549,258258
return_zero_rows(7574,258746
static void clear_tables(7618,259891
class COND_CMP 7637,260661
  static void *operator new(COND_CMP::operator new7639,260700
  static void operator delete(COND_CMP::operator delete7643,260792
  COND_CMP(COND_CMP::COND_CMP7649,260991
Item_equal *find_item_equal(find_item_equal7679,262018
static bool check_simple_equality(7784,266645
static bool check_row_equality(7975,273136
static bool check_equality(8044,275591
static COND *build_equal_items_for_cond(build_equal_items_for_cond8133,279772
static COND *build_equal_items(build_equal_items8352,287654
static int compare_fields_by_table_order(8426,289794
static Item *eliminate_item_equal(eliminate_item_equal8490,292338
static COND* substitute_for_best_equal_field(8591,295278
static void update_const_equal_items(8675,298112
change_cond_ref_to_const(8734,299981
static Item *remove_additional_cond(remove_additional_cond8818,302622
propagate_cond_constants(8842,303124
simplify_joins(9019,309395
static uint build_bitmap_for_nested_joins(9204,315216
static void reset_nj_counters(9246,316633
static bool check_interleaving_with_nj(9354,321101
static void restore_prev_nj_state(9451,324555
optimize_cond(9474,325101
internal_remove_eq_conds(9531,327043
remove_eq_conds(9686,331629
test_if_equality_guarantees_uniqueness(9767,334456
static bool equal(9785,335018
const_expression_in_where(9814,335865
Field *create_tmp_field_from_field(create_tmp_field_from_field9902,338555
static Field *create_tmp_field_from_item(create_tmp_field_from_item9965,341077
Field *create_tmp_field_for_schema(create_tmp_field_for_schema10055,344125
Field *create_tmp_field(create_tmp_field10104,345971
void setup_tmp_table_column_bitmaps(10250,350875
#define STRING_TOTAL_LENGTH_TO_PACK_ROWS 10292,352593
#define AVG_STRING_LENGTH_TO_PACK_ROWS 10293,352638
#define RATIO_TO_PACK_ROWS	10294,352682
#define MIN_STRING_LENGTH_TO_PACK_ROWS 10295,352718
create_tmp_table(10298,352771
TABLE *create_virtual_tmp_table(create_virtual_tmp_table11003,378150
static bool open_tmp_table(11124,382098
static bool create_myisam_tmp_table(11139,382498
free_tmp_table(11250,386013
bool create_myisam_from_heap(11293,387069
Next_select_func setup_end_select_func(11421,391160
do_select(11500,393267
sub_select_cache(11632,396837
sub_select(11781,403811
evaluate_join_record(11834,405274
evaluate_null_complemented_join_record(11997,410680
flush_cached_records(12056,412618
int report_error(12152,415515
int safe_index_read(12172,416109
join_read_const_table(12186,416518
join_read_system(12261,418488
join_read_const(12299,419367
join_read_key(12337,420469
join_read_key_unlock_row(12401,422141
join_read_always_key(12428,422698
join_read_last_key(12474,424050
join_no_more_records(12506,424958
join_read_next_same(12513,425052
join_read_prev_same(12533,425456
join_init_quick_read_record(12552,425873
int read_first_record_seq(12560,426043
test_if_quick_select(12568,426220
join_init_read_record(12578,426431
join_read_first(12589,426728
join_read_next(12625,427610
join_read_last(12635,427783
join_read_prev(12666,428564
join_ft_read_first(12676,428738
join_ft_read_next(12696,429115
join_read_always_key_or_null(12710,429367
join_read_next_same_or_null(12726,429716
end_send(12768,431567
end_send_group(12852,433985
end_write(12966,437196
end_update(13015,438669
end_unique_update(13096,441400
end_write_group(13145,443058
static bool test_if_ref(13231,445729
make_cond_for_table(13304,448513
part_of_refkey(13399,451372
static int test_if_order_by_key(13444,452703
uint find_shortest_key(13569,457062
uint find_shortest_clustering_key(13615,458524
is_subkey(13649,459393
test_if_subkey(13671,459934
list_contains_unique_index(13730,461730
find_field_in_order_list 13775,462904
find_field_in_item_list 13808,463689
test_if_skip_sort_order(13849,464569
create_sort_index(14218,476898
static bool compare_record(14390,483118
static bool copy_blobs(14400,483291
static void free_blobs(14411,483476
remove_duplicates(14422,483634
static int remove_dup_with_compare(14471,485104
static int remove_dup_with_hash_index(14566,487169
SORT_FIELD *make_unireg_sortorder(make_unireg_sortorder14677,489905
join_init_cache(14724,491312
used_blob_length(14821,493977
store_record_in_cache(14836,494300
reset_cache_read(14905,496008
static void reset_cache_write(14912,496098
read_cached_record(14921,496245
cmp_buffer_with_ref(14972,497315
cp_buffer_from_ref(14989,497729
find_order_in_list(15048,499811
int setup_order(15203,505891
setup_group(15244,507192
setup_new_fields(15341,510388
create_distinct_group(15375,511328
count_field_types(15463,513697
test_if_subpart(15518,515119
get_sort_by_table(15536,515444
calc_group_buffer(15568,516197
make_group_fields(15665,519081
alloc_group_fields(15689,519584
test_if_group_changed(15706,519918
setup_copy_fields(15753,521321
copy_fields(15900,525750
bool JOIN::alloc_func_list(15925,526181
bool JOIN::make_sum_func_list(15980,527596
change_to_use_tmp_fields(16035,529280
change_refs_to_tmp_fields(16150,533007
static bool setup_sum_funcs(16195,534109
static bool prepare_sum_aggregators(16208,534349
init_tmptable_sum_functions(16224,534788
update_tmptable_sum_func(16235,534982
copy_sum_funcs(16247,535229
init_sum_functions(16256,535405
update_sum_func(16274,535746
copy_funcs(16300,536366
static bool add_ref_to_table_cond(16324,536923
void free_underlaid_joins(16369,538124
static bool change_group_ref(16421,539802
bool JOIN::rollup_init(16468,541153
bool JOIN::rollup_process_const_fields(16564,544166
bool JOIN::rollup_make_fields(16613,545323
int JOIN::rollup_send_data(16747,549058
int JOIN::rollup_write_data(16789,550131
void JOIN::clear(16827,551206
static void select_describe(16846,551509
bool mysql_explain_union(17320,567787
static void print_join(17387,569777
Index_hint::print(17460,571776
void TABLE_LIST::print(17489,572638
void st_select_lex::print(17577,574739
bool JOIN::change_result(17725,578262
void JOIN::cache_const_exprs(17741,578609
test_if_cheaper_ordering(17802,581160
uint get_index_for_order(18035,590116

sql/sql_servers.cc,1189
static HASH servers_cache;54,2194
static MEM_ROOT mem;55,2221
static mysql_rwlock_t THR_LOCK_servers;56,2242
static uchar *servers_cache_get_key(servers_cache_get_key86,3575
static PSI_rwlock_key key_rwlock_THR_LOCK_servers;99,4022
static PSI_rwlock_info all_servers_cache_rwlocks[all_servers_cache_rwlocks101,4074
static void init_servers_cache_psi_keys(106,4203
bool servers_init(138,5045
static bool servers_load(203,6544
bool servers_reload(250,7649
get_server_from_table_to_cache(317,9696
insert_server(385,12007
insert_server_record_into_cache(430,12974
store_server_fields(470,14070
int insert_server_record(532,16340
int drop_server(600,18551
delete_server_record_in_cache(662,20202
int update_server(727,22192
int update_server_record_in_cache(782,23526
void merge_server_struct(832,24855
update_server_record(880,26263
delete_server_record(939,27827
int create_server(984,28996
int alter_server(1033,29971
prepare_server_struct_for_insert(1089,31612
prepare_server_struct_for_update(1152,33556
void servers_free(1223,35610
static FOREIGN_SERVER *clone_server(clone_server1260,36485
FOREIGN_SERVER *get_server_by_name(get_server_by_name1299,37712

sql/sql_show.cc,9878
#define STR_OR_NIL(57,2420
enum enum_i_s_events_fields62,2535
  ISE_EVENT_CATALOG=enum_i_s_events_fields::ISE_EVENT_CATALOG64,2565
  ISE_EVENT_SCHEMA,enum_i_s_events_fields::ISE_EVENT_SCHEMA65,2589
  ISE_EVENT_NAME,enum_i_s_events_fields::ISE_EVENT_NAME66,2609
  ISE_DEFINER,enum_i_s_events_fields::ISE_DEFINER67,2627
  ISE_TIME_ZONE,enum_i_s_events_fields::ISE_TIME_ZONE68,2642
  ISE_EVENT_BODY,enum_i_s_events_fields::ISE_EVENT_BODY69,2659
  ISE_EVENT_DEFINITION,enum_i_s_events_fields::ISE_EVENT_DEFINITION70,2677
  ISE_EVENT_TYPE,enum_i_s_events_fields::ISE_EVENT_TYPE71,2701
  ISE_EXECUTE_AT,enum_i_s_events_fields::ISE_EXECUTE_AT72,2719
  ISE_INTERVAL_VALUE,enum_i_s_events_fields::ISE_INTERVAL_VALUE73,2737
  ISE_INTERVAL_FIELD,enum_i_s_events_fields::ISE_INTERVAL_FIELD74,2759
  ISE_SQL_MODE,enum_i_s_events_fields::ISE_SQL_MODE75,2781
  ISE_STARTS,enum_i_s_events_fields::ISE_STARTS76,2797
  ISE_ENDS,enum_i_s_events_fields::ISE_ENDS77,2811
  ISE_STATUS,enum_i_s_events_fields::ISE_STATUS78,2823
  ISE_ON_COMPLETION,enum_i_s_events_fields::ISE_ON_COMPLETION79,2837
  ISE_CREATED,enum_i_s_events_fields::ISE_CREATED80,2858
  ISE_LAST_ALTERED,enum_i_s_events_fields::ISE_LAST_ALTERED81,2873
  ISE_LAST_EXECUTED,enum_i_s_events_fields::ISE_LAST_EXECUTED82,2893
  ISE_EVENT_COMMENT,enum_i_s_events_fields::ISE_EVENT_COMMENT83,2914
  ISE_ORIGINATOR,enum_i_s_events_fields::ISE_ORIGINATOR84,2935
  ISE_CLIENT_CS,enum_i_s_events_fields::ISE_CLIENT_CS85,2953
  ISE_CONNECTION_CL,enum_i_s_events_fields::ISE_CONNECTION_CL86,2970
  ISE_DB_CLenum_i_s_events_fields::ISE_DB_CL87,2991
static const char *grant_names[grant_names91,3041
static TYPELIB grant_types 95,3210
static int make_version_string(120,4163
static my_bool show_plugins(125,4313
int fill_plugins(227,7252
bool mysqld_show_authors(245,7767
bool mysqld_show_contributors(279,8872
struct show_privileges_st 312,9996
static struct show_privileges_st sys_privileges[sys_privileges318,10099
bool mysqld_show_privileges(356,12395
find_files(406,13960
class Show_create_error_handler 552,18332
  explicit Show_create_error_handler(Show_create_error_handler::Show_create_error_handler571,18908
  char* get_view_access_denied_message(Show_create_error_handler::get_view_access_denied_message589,19716
  bool handle_condition(Show_create_error_handler::handle_condition602,20174
mysqld_show_create(662,21996
bool mysqld_show_create_db(780,25969
mysqld_list_fields(868,28880
static const char *require_quotes(require_quotes917,30301
append_identifier(951,31144
int get_quote_char_for_identifier(1017,32964
static void append_directory(1032,33350
#define LIST_PROCESS_HOST_LEN 1058,34068
static bool get_field_default_value(1060,34102
int store_create_info(1151,36959
static void store_key_options(1565,51441
view_store_options(1614,53316
static void append_algorithm(1636,53919
void append_definer(1665,54675
view_store_create_info(1677,55058
class thread_info 1748,57349
  static void *operator new(thread_info::operator new1750,57391
  static void operator delete(thread_info::operator delete1754,57483
static const char *thread_state_info(thread_state_info1769,57871
void mysqld_list_processes(1793,58359
int fill_schema_processlist(1904,62861
static DYNAMIC_ARRAY all_status_vars;2009,66270
static bool status_vars_inited=2010,66308
static int show_var_cmp(2013,66357
static void shrink_var_array(2023,66614
int add_status_vars(2059,67761
void init_status_vars(2090,68744
void reset_status_vars(2096,68845
void free_status_vars(2117,69469
void remove_status_vars(2136,69979
inline void make_upper(2181,70997
static bool show_status_array(2187,71107
void calc_sum_of_all_status(2374,77318
typedef struct st_lookup_field_values2399,77938
} LOOKUP_FIELD_VALUES;2403,78054
bool schema_table_store_record(2420,78381
static int make_table_list(2434,78717
bool get_lookup_value(2463,79677
bool calc_lookup_values_from_cond(2546,82587
bool uses_only_table_name_fields(2581,83497
static COND * make_cond_for_info_schema(2621,85013
bool get_lookup_field_values(2695,87064
enum enum_schema_tables get_schema_table_idx(2751,88837
int make_db_list(2775,89519
struct st_add_schema_table 2839,91507
static my_bool add_schema_table(2846,91589
int schema_tables_add(2880,92610
make_table_name_list(2941,94475
fill_schema_table_by_open(3032,97709
static int fill_schema_table_names(3217,104067
uint get_table_open_method(3281,106163
try_acquire_high_prio_shared_mdl_lock(3339,108384
static int fill_schema_table_from_frm(3394,110756
class Trigger_error_handler 3589,117314
  bool handle_condition(Trigger_error_handler::handle_condition3592,117384
int get_all_tables(3629,118593
bool store_schema_shemata(3854,126518
int fill_schema_schemata(3866,127034
static int get_schema_tables_record(3939,129325
void store_column_type(4218,138069
static int get_schema_column_record(4331,141875
int fill_schema_charsets(4444,145683
static my_bool iter_schema_engines(4477,146770
int fill_schema_engines(4541,149049
int fill_schema_collation(4552,149378
int fill_schema_coll_charset_app(4598,150972
static inline void copy_field_as_string(4632,152006
bool store_schema_params(4658,152970
bool store_schema_proc(4804,158337
int fill_schema_proc(4938,164075
static int get_schema_stat_record(5007,166109
static int get_schema_views_record(5107,169984
bool store_constraints(5251,175030
static int get_schema_constraints_record(5267,175720
static bool store_trigger(5327,177702
static int get_schema_triggers_record(5369,179773
void store_key_column_usage(5436,181999
static int get_schema_key_column_usage_record(5453,182746
static void collect_partition_expr(5544,186070
int get_cs_converted_part_value_from_string(5585,187571
static void store_schema_partitions_record(5613,188415
get_partition_column_description(5690,191320
static int get_schema_partitions_record(5734,192678
copy_event_to_schema_table(5993,201450
int fill_open_tables(6161,207229
int fill_variables(6186,208093
int fill_status(6210,208962
get_referential_constraints_record(6278,210861
struct schema_table_ref 6337,213220
static my_bool find_schema_table_in_plugin(6357,213567
ST_SCHEMA_TABLE *find_schema_table(find_schema_table6389,214385
ST_SCHEMA_TABLE *get_schema_table(get_schema_table6412,215038
TABLE *create_schema_table(create_schema_table6439,215907
int make_old_format(6564,220080
int make_schemata_old_format(6588,220748
int make_table_names_old_format(6617,221610
int make_columns_old_format(6653,222793
int make_character_sets_old_format(6682,223686
int make_proc_old_format(6707,224397
int mysql_schema_table(6746,225362
int make_schema_select(6829,227766
static bool do_fill_table(6888,230040
bool get_schema_tables_result(6953,231973
struct run_hton_fill_schema_table_args7027,234486
static my_bool run_hton_fill_schema_table(7033,234567
int hton_fill_schema_table(7045,235047
ST_FIELD_INFO schema_fields_info[schema_fields_info7060,235376
ST_FIELD_INFO tables_fields_info[tables_fields_info7074,235906
ST_FIELD_INFO columns_fields_info[columns_fields_info7114,238315
ST_FIELD_INFO charsets_fields_info[charsets_fields_info7149,240219
ST_FIELD_INFO collation_fields_info[collation_fields_info7162,240682
ST_FIELD_INFO engines_fields_info[engines_fields_info7177,241293
ST_FIELD_INFO events_fields_info[events_fields_info7189,241823
ST_FIELD_INFO coll_charset_app_fields_info[coll_charset_app_fields_info7227,243845
ST_FIELD_INFO proc_fields_info[proc_fields_info7237,244130
ST_FIELD_INFO stat_fields_info[stat_fields_info7282,246654
ST_FIELD_INFO view_fields_info[view_fields_info7308,248043
ST_FIELD_INFO user_privileges_fields_info[user_privileges_fields_info7326,248885
ST_FIELD_INFO schema_privileges_fields_info[schema_privileges_fields_info7336,249282
ST_FIELD_INFO table_privileges_fields_info[table_privileges_fields_info7347,249761
ST_FIELD_INFO column_privileges_fields_info[column_privileges_fields_info7359,250317
ST_FIELD_INFO table_constraints_fields_info[table_constraints_fields_info7372,250953
ST_FIELD_INFO key_column_usage_fields_info[key_column_usage_fields_info7387,251561
ST_FIELD_INFO table_names_fields_info[table_names_fields_info7411,252683
ST_FIELD_INFO open_tables_fields_info[open_tables_fields_info7423,253123
ST_FIELD_INFO triggers_fields_info[triggers_fields_info7434,253543
ST_FIELD_INFO partitions_fields_info[partitions_fields_info7472,255500
ST_FIELD_INFO variables_fields_info[variables_fields_info7515,257749
ST_FIELD_INFO processlist_fields_info[processlist_fields_info7524,258015
ST_FIELD_INFO plugin_fields_info[plugin_fields_info7540,258701
ST_FIELD_INFO files_fields_info[files_fields_info7558,259659
void init_fill_schema_files_row(7614,263077
ST_FIELD_INFO referential_constraints_fields_info[referential_constraints_fields_info7624,263348
ST_FIELD_INFO parameters_fields_info[parameters_fields_info7647,264422
ST_FIELD_INFO tablespaces_fields_info[tablespaces_fields_info7669,265659
ST_SCHEMA_TABLE schema_tables[schema_tables7699,266790
int initialize_schema_table(7793,271706
int finalize_schema_table(7828,272785
static bool show_create_trigger_impl(7862,273623
TABLE_LIST *get_trigger_table(get_trigger_table8003,277683
bool show_create_trigger(8052,278819
class IS_internal_schema_access 8124,280702
  IS_internal_schema_access(IS_internal_schema_access::IS_internal_schema_access8127,280780
  ~IS_internal_schema_access(IS_internal_schema_access::~IS_internal_schema_access8130,280816
IS_internal_schema_access::check(8140,281066
IS_internal_schema_access::lookup(8160,281623
static IS_internal_schema_access is_internal_schema_access;8166,281766
void initialize_information_schema_acl(8168,281827
static void get_cs_converted_string_value(8205,283282

sql/sql_signal.cc,682
#define MAX_MYSQL_ERRNO 28,1125
const LEX_STRING Diag_condition_item_names[Diag_condition_item_names30,1161
const LEX_STRING Diag_statement_item_names[Diag_statement_item_names64,2471
Set_signal_information::Set_signal_information(79,2970
void Set_signal_information::clear(85,3106
void Signal_common::assign_defaults(90,3185
void Signal_common::eval_defaults(104,3597
static bool assign_fixed_string(147,4778
static int assign_condition_item(225,6845
int Signal_common::eval_signal_informations(259,7764
  struct cond_item_map261,7839
bool Signal_common::raise_condition(417,11964
bool Signal_statement::execute(450,12845
bool Resignal_statement::execute(479,13564

sql/sql_string.cc,1424
bool String::real_alloc(34,1230
bool String::realloc(81,2737
bool String::set_int(113,3563
bool String::set_real(125,3847
bool String::copy(143,4321
bool String::copy(164,4845
bool String::copy(175,5086
bool String::needs_conversion(209,5873
bool String::copy_aligned(251,6828
bool String::set_or_copy_aligned(277,7584
bool String::copy(302,8115
bool String::set_ascii(348,9231
bool String::fill(362,9524
void String::strip_sp(376,9811
bool String::append(382,9925
bool String::append(399,10221
bool String::append(434,11010
bool String::append_ulonglong(441,11090
bool String::append(455,11409
bool String::append(492,12474
bool String::append_with_prefill(505,12742
uint32 String::numchars(522,13170
int String::charpos(527,13273
int String::strstr(534,13425
int String::strrstr(565,14104
bool String::replace(597,14806
bool String::replace(602,14940
int String::reserve(634,15683
void String::qs_append(644,15904
void String::qs_append(650,16024
void String::qs_append(657,16204
void String::qs_append(664,16301
void String::qs_append(671,16442
int sortcmp(697,16838
int stringcmp(723,17309
String *copy_if_not_alloced(copy_if_not_alloced731,17519
copy_and_convert_extended(773,18586
copy_and_convert(832,19969
my_copy_with_hex_escaping(908,22447
well_formed_copy_nchars(977,24277
void String::print(1124,28607
void String::swap(1167,29404
uint convert_to_printable(1197,30430

sql/sql_table.cc,4258
const char *primary_key_name=primary_key_name61,2439
static char* add_identifier(94,3858
uint explain_filename(196,7378
  enum enum_part_name_type 212,7844
  enum enum_part_name_type {NORMAL,enum_part_name_type::NORMAL212,7844
  enum enum_part_name_type {NORMAL, TEMP,enum_part_name_type::TEMP212,7844
  enum enum_part_name_type {NORMAL, TEMP, RENAMED}enum_part_name_type::RENAMED212,7844
uint filename_to_tablename(371,12168
bool check_mysql50_prefix(426,13502
uint check_n_cut_mysql50_prefix(447,13983
uint tablename_to_filename(469,14570
uint build_table_filename(537,16767
uint build_tmptable_filename(590,18397
struct st_global_ddl_log637,19932
  st_global_ddl_log(st_global_ddl_log::st_global_ddl_log650,20209
st_global_ddl_log global_ddl_log;653,20273
mysql_mutex_t LOCK_gdl;655,20308
#define DDL_LOG_ENTRY_TYPE_POS 657,20333
#define DDL_LOG_ACTION_TYPE_POS 658,20366
#define DDL_LOG_PHASE_POS 659,20400
#define DDL_LOG_NEXT_ENTRY_POS 660,20428
#define DDL_LOG_NAME_POS 661,20461
#define DDL_LOG_NUM_ENTRY_POS 663,20489
#define DDL_LOG_NAME_LEN_POS 664,20521
#define DDL_LOG_IO_SIZE_POS 665,20552
#define DDL_LOG_HEADER_SIZE 666,20582
static bool read_ddl_log_file_entry(679,20909
static bool write_ddl_log_file_entry(708,21683
static bool write_ddl_log_header(734,22343
static inline void create_ddl_log_file_name(770,23302
static uint read_ddl_log_header(789,23812
static void set_ddl_log_entry_from_buf(840,25337
static bool init_ddl_log(877,26588
static int execute_ddl_log_action(920,27741
static bool get_free_ddl_log_entry(1057,31759
bool write_ddl_log_entry(1118,33460
bool write_execute_ddl_log_entry(1212,37312
bool deactivate_ddl_log_entry(1291,39864
bool sync_ddl_log(1346,41489
void release_ddl_log_memory_entry(1375,42011
bool execute_ddl_log_entry(1407,42974
static void close_ddl_log(1450,44159
void execute_ddl_log_recovery(1470,44516
void release_ddl_log(1543,46313
uint build_table_shadow_filename(1601,47783
static int mysql_update_frm(1611,48128
static int mysql_update_frm_table(1625,48530
bool mysql_write_frm(1665,50150
int write_bin_log(1863,57145
bool mysql_rm_table(1906,58219
int mysql_rm_table_no_locks(2019,62138
bool quick_rm_table(2451,77597
static int sort_keys(2489,78773
bool check_duplicates_in_interval(2545,80255
void calculate_interval_lengths(2599,81839
int prepare_create_field(2634,82686
CHARSET_INFO* get_sql_field_charset(2805,88773
bool check_duplicate_warning(2824,89386
mysql_prepare_create_table(2866,90592
static void set_table_default_charset(3792,121031
static bool prepare_blob_field(3824,121731
void sp_prepare_create_field(3882,123645
static bool check_if_created_table_can_be_opened(3926,124978
bool mysql_create_table_no_lock(3994,127263
bool mysql_create_table(4452,143192
check_if_keyname_exists(4498,144466
make_unique_key_name(4508,144682
mysql_rename_table(4561,146423
bool mysql_create_like_table(4654,149340
mysql_discard_or_import_tablespace(4813,155512
is_index_maintenance_unique 4893,157538
mysql_compare_tables(4961,160078
bool alter_table_manage_keys(5274,171232
blob_length_by_type(5316,172353
mysql_prepare_alter_table(5377,174665
enum inplace_alter_table_result5770,187584
  INPLACE_ALTER_SUCCESS,inplace_alter_table_result::INPLACE_ALTER_SUCCESS5772,187618
  INPLACE_ALTER_SUCCESS, INPLACE_ALTER_ERROR,inplace_alter_table_result::INPLACE_ALTER_ERROR5772,187618
  INPLACE_ALTER_SUCCESS, INPLACE_ALTER_ERROR, INPLACE_ALTER_NOT_SUPPORTED,inplace_alter_table_result::INPLACE_ALTER_NOT_SUPPORTED5772,187618
bool mysql_alter_table(5826,189888
bool mysql_trans_prepare_alter_copy_data(7160,236433
bool mysql_trans_commit_alter_copy_data(7179,236878
copy_data_between_tables(7203,237449
bool mysql_recreate_table(7416,243845
bool mysql_checksum_table(7446,244905
static bool check_engine(7620,250075
static bool is_inplace_alter_impossible(7683,252375
static bool is_candidate_key(7752,255024
static Create_field *get_field_by_index(get_field_by_index7775,255582
static int compare_uint(7787,255861
static bool fill_alter_inplace_info(7834,257981
volatile int stall_inplace_alter_table_mdl_x 8247,273113
do_mysql_inplace_alter_table(8250,273203
mysql_inplace_alter_table(8433,279963

sql/sql_tablespace.cc,35
int mysql_alter_tablespace(24,973

sql/sql_test.cc,464
static const char *lock_descriptions[lock_descriptions39,1271
print_where(60,2128
static void print_cached_tables(78,2574
void TEST_filesort(140,4425
TEST_join(181,5414
print_plan(267,7838
typedef struct st_debug_lock348,9979
} TABLE_LOCK_INFO;355,10127
static int dl_compare(357,10147
static void push_locks_into_array(376,10488
static void display_table_locks(413,11844
static int print_key_cache_status(461,13413
void mysql_print_status(500,14426

sql/sql_time.cc,1069
LEX_STRING interval_type_to_name[interval_type_to_name42,1442
int calc_weekday(68,2328
uint calc_week(103,3583
void get_date_from_daynr(149,4852
ulong convert_period_to_month(193,5911
ulong convert_month_to_period(207,6126
to_ascii(231,6680
bool str_to_time(255,7273
timestamp_type str_to_datetime(269,7637
str_to_datetime_with_warn(292,8241
my_time_t TIME_to_timestamp(329,9571
str_to_time_with_warn(355,10081
void localtime_to_TIME(371,10519
void calc_time_from_sec(383,10834
bool parse_date_time_format(425,11904
*date_time_format_make(date_time_format_make658,18336
DATE_TIME_FORMAT *date_time_format_copy(date_time_format_copy691,19049
KNOWN_DATE_TIME_FORMAT known_date_time_formats[known_date_time_formats717,19950
const char *get_date_time_format_str(get_date_time_format_str733,20403
void make_time(764,21533
void make_date(773,21794
void make_datetime(782,22055
void make_truncated_value_warning(791,22328
#define MAX_DAY_NUMBER 836,23911
bool date_add_interval(838,23944
calc_time_diff(974,28215
int my_time_compare(1039,29903

sql/sql_trigger.cc,3494
#define MYSQL_LEX 18,753
inline T *alloc_type(alloc_type40,1725
inline LEX_STRING *alloc_lex_string(alloc_lex_string55,2191
class Trigger_creation_ctx 65,2421
  virtual Stored_program_creation_ctx *clone(Trigger_creation_ctx::clone77,2937
  virtual Object_creation_ctx *create_backup_ctx(Trigger_creation_ctx::create_backup_ctx85,3203
  Trigger_creation_ctx(Trigger_creation_ctx::Trigger_creation_ctx91,3328
  Trigger_creation_ctx(Trigger_creation_ctx::Trigger_creation_ctx95,3406
Trigger_creation_ctx::create(107,3841
static const LEX_STRING triggers_file_type=180,6230
const char * const TRG_EXT=183,6312
static File_option triggers_file_parameters[triggers_file_parameters191,6559
File_option sql_modes_parameters=226,7482
static const int TRG_NUM_REQUIRED_PARAMETERS=239,7820
struct st_trigname246,7985
static const LEX_STRING trigname_file_type=251,8038
const char * const TRN_EXT=254,8123
static File_option trigname_file_parameters[trigname_file_parameters256,8160
const LEX_STRING trg_action_time_type_names[trg_action_time_type_names267,8379
const LEX_STRING trg_event_type_names[trg_event_type_names273,8500
class Handle_old_incorrect_sql_modes_hook:Handle_old_incorrect_sql_modes_hook281,8652
  Handle_old_incorrect_sql_modes_hook(Handle_old_incorrect_sql_modes_hook::Handle_old_incorrect_sql_modes_hook286,8752
class Handle_old_incorrect_trigger_table_hook:Handle_old_incorrect_trigger_table_hook294,8980
  Handle_old_incorrect_trigger_table_hook(Handle_old_incorrect_trigger_table_hook::Handle_old_incorrect_trigger_table_hook297,9061
class Deprecated_trigger_syntax_handler 318,9943
  Deprecated_trigger_syntax_handler(Deprecated_trigger_syntax_handler::Deprecated_trigger_syntax_handler327,10105
  virtual bool handle_condition(Deprecated_trigger_syntax_handler::handle_condition329,10170
  LEX_STRING *get_trigger_name(Deprecated_trigger_syntax_handler::get_trigger_name353,11018
  char *get_error_message(Deprecated_trigger_syntax_handler::get_error_message354,11078
bool mysql_create_or_drop_trigger(381,11932
bool Table_triggers_list::create_trigger(626,19268
static bool rm_trigger_file(906,28094
static bool rm_trigname_file(928,28651
static bool save_trigger_file(949,29220
bool Table_triggers_list::drop_trigger(984,30371
Table_triggers_list::~Table_triggers_list(1053,32328
bool Table_triggers_list::prepare_record1_accessors(1077,32971
void Table_triggers_list::set_table(1110,33882
bool Table_triggers_list::check_n_load(1143,34706
bool Table_triggers_list::get_trigger_info(1602,50975
void Table_triggers_list::get_trigger_info(1649,52521
int Table_triggers_list::find_trigger_by_name(1686,53963
bool add_table_for_trigger(1719,54839
bool Table_triggers_list::drop_all_triggers(1775,56134
Table_triggers_list::change_table_name_in_triggers(1846,57842
Table_triggers_list::change_table_name_in_trignames(1930,60967
bool Table_triggers_list::change_table_name(1990,63014
bool Table_triggers_list::process_triggers(2105,66802
add_tables_and_routines_for_triggers(2175,68832
void Table_triggers_list::mark_fields_used(2228,70666
void Table_triggers_list::set_parse_error_message(2260,71801
#define INVALID_SQL_MODES_LENGTH 2287,72518
Handle_old_incorrect_sql_modes_hook::process_unknown_string(2290,72560
#define INVALID_TRIGGER_TABLE_LENGTH 2325,73945
process_unknown_string(2333,74161
void build_trn_path(2374,75482
bool check_trn_exists(2395,76068
bool load_table_name_for_trigger(2414,76530

sql/sql_truncate.cc,374
static bool fk_info_append_fields(39,1444
static const char *fk_info_str(fk_info_str67,2003
fk_truncate_illegal_if_parent(121,3865
int Truncate_statement::handler_truncate(188,5835
static bool recreate_temporary_table(256,8040
bool Truncate_statement::lock_table(308,9460
bool Truncate_statement::truncate_table(397,12624
bool Truncate_statement::execute(513,16259

sql/sql_udf.cc,684
static bool initialized 50,1712
static MEM_ROOT mem;51,1741
static HASH udf_hash;52,1762
static mysql_rwlock_t THR_LOCK_udf;53,1784
static char *init_syms(init_syms61,2015
extern "C" uchar* get_hash_key(101,3065
static PSI_rwlock_key key_rwlock_THR_LOCK_udf;110,3315
static PSI_rwlock_info all_udf_rwlocks[all_udf_rwlocks112,3363
static void init_udf_psi_keys(117,3474
void udf_init(135,3804
void udf_free(264,7566
static void del_udf(294,8289
void free_udf(319,8902
udf_func *find_udf(find_udf345,9473
static void *find_udf_dl(find_udf_dl372,10183
static udf_func *add_udf(add_udf392,10650
int mysql_create_function(421,11391
int mysql_drop_function(563,15748

sql/sql_union.cc,704
bool mysql_union(31,1091
int select_union::prepare(48,1653
bool select_union::send_data(55,1746
bool select_union::send_eof(78,2308
bool select_union::flush(84,2356
select_union::create_result_table(117,3232
st_select_lex_unit::init_prepare_fake_select_lex(147,4084
bool st_select_lex_unit::prepare(172,4899
bool st_select_lex_unit::exec(454,13734
bool st_select_lex_unit::cleanup(668,20659
void st_select_lex_unit::reinit_exec_mechanism(724,22030
bool st_select_lex_unit::change_result(759,22687
List<Item> *st_select_lex_unit::get_unit_column_types(st_select_lex_unit::get_unit_column_types792,23663
bool st_select_lex::cleanup(815,24120
void st_select_lex::cleanup_all_joins(838,24608

sql/sql_update.cc,794
bool records_are_comparable(50,2111
bool compare_records(69,2818
static bool check_fields(137,4793
static void prepare_record_for_error_message(173,5753
int mysql_update(252,8278
bool mysql_prepare_update(975,31895
static table_map get_table_map(1028,33669
bool unsafe_key_update(1070,35165
int mysql_multi_update_prepare(1155,37861
bool mysql_multi_update(1362,44540
multi_update::multi_update(1413,46243
int multi_update::prepare(1430,46876
static bool safe_update_on_fly(1618,52551
multi_update::initialize_tables(1661,53829
multi_update::~multi_update(1805,58620
bool multi_update::send_data(1834,59304
void multi_update::send_error(1989,64447
void multi_update::abort_result_set(1996,64592
int multi_update::do_updates(2049,66338
bool multi_update::send_eof(2224,71128

sql/sql_view.cc,781
#define MYSQL_LEX 17,750
#define MD5_BUFF_LENGTH 37,1557
const LEX_STRING view_type=39,1585
static void make_unique_view_field_name(60,2382
bool check_duplicate_names(125,4303
static void make_valid_column_names(169,5473
fill_defined_view_parts 211,6584
bool create_view_precheck(254,7728
bool create_view_precheck(375,11609
bool mysql_create_view(397,12086
static const int required_view_parameters=723,21473
static File_option view_parameters[view_parameters731,21647
static LEX_STRING view_file_type[view_file_type778,23210
static int mysql_register_view(796,23580
bool mysql_make_view(1062,30886
bool mysql_drop_view(1679,52767
bool check_key_in_view(1807,56342
bool insert_view_fields(1928,60138
int view_checksum(1966,60995
mysql_rename_view(1994,61532

sql/strfunc.cc,332
static const char field_separator=45,1614
ulonglong find_set(47,1654
uint find_type(113,3456
uint find_type2(154,4364
void unhex_type2(192,5157
uint check_word(232,6179
uint strconvert(267,6982
int find_string_in_array(338,8524
char *set_to_string(set_to_string352,8923
char *flagset_to_string(flagset_to_string383,9543

sql/sys_vars.cc,5709
TYPELIB bool_typelib=55,2036
static bool update_buffer_size(65,2349
static bool update_keycache_param(117,3823
#define export 141,4587
#define PFS_TRAILING_PROPERTIES 145,4659
static bool check_has_super(332,12782
static bool binlog_format_check(344,13135
static bool fix_binlog_format_after_update(392,14660
static bool binlog_direct_check(415,15826
static bool check_not_null(467,17758
static bool check_charset(471,17874
static bool check_charset_not_null(503,18881
static bool check_charset_db(519,19602
static bool check_cs_client(534,20157
static bool fix_thd_charset(545,20451
static const char *completion_type_names[completion_type_names582,22145
static bool check_collation_not_null(589,22476
static bool check_collation_db(626,23667
static const char *concurrent_insert_names[concurrent_insert_names647,24512
export bool fix_delay_key_write(679,25813
static const char *delay_key_write_names[delay_key_write_names695,26205
static const char *event_scheduler_names[event_scheduler_names728,27822
static bool event_scheduler_check(729,27902
static bool event_scheduler_update(749,28567
static bool check_ftb_syntax(812,31128
static bool query_cache_flush(817,31309
static bool check_init_string(869,33570
static PolyLock_rwlock PLock_sys_init_connect(&LOCK_sys_init_connect)LOCK_sys_init_connect878,33820
static PolyLock_rwlock PLock_sys_init_slave(&LOCK_sys_init_slave)LOCK_sys_init_slave896,34479
static bool update_cached_long_query_time(1034,40776
static bool fix_low_prio_updates(1056,41668
static bool session_readonly(1106,43560
check_max_allowed_packet(1116,43802
static bool fix_max_binlog_size(1165,45676
static bool fix_max_connections(1183,46405
static bool check_max_delayed_threads(1208,47475
static bool fix_max_join_size(1262,49927
static PolyLock_mutex PLock_prepared_stmt_count(&LOCK_prepared_stmt_count)LOCK_prepared_stmt_count1309,51925
static bool fix_max_relay_log_size(1317,52317
check_net_buffer_length(1386,55174
static bool fix_net_read_timeout(1408,55994
static bool fix_net_write_timeout(1423,56598
static bool fix_net_retry_count(1438,57221
static bool check_old_passwords(1465,58315
static bool fix_optimizer_search_depth(1495,59788
static const char *optimizer_switch_names[optimizer_switch_names1520,61079
static bool fix_optimizer_switch(1527,61328
static bool check_read_only(1596,64280
static bool fix_read_only(1606,64550
static bool fix_thd_mem_root(1730,69204
static bool fix_trans_mem_root(1828,73226
static const char *thread_handling_names[thread_handling_names1852,74336
static bool fix_query_cache_size(1865,74790
static bool fix_qcache_min_res_unit(1894,75978
static const char *query_cache_type_names[query_cache_type_names1908,76577
static bool check_query_cache_type(1909,76652
static bool fix_server_id(1948,78098
static const char *slave_exec_mode_names[slave_exec_mode_names1969,78869
const char *slave_type_conversions_name[slave_type_conversions_name1979,79472
export ulong expand_sql_mode(2007,80725
static bool check_sql_mode(2058,82858
static bool fix_sql_mode(2064,83035
static const char *sql_mode_names[sql_mode_names2080,83536
export bool sql_mode_string_representation(2093,84174
#define SSL_OPT(2118,85319
#define SSL_OPT(2120,85369
static const char *updatable_views_with_limit_names[updatable_views_with_limit_names2151,86478
static char *system_time_zone_ptr;system_time_zone_ptr2167,87301
static bool check_tx_isolation(2197,88445
bool Sys_var_tx_isolation::session_update(2209,88744
static char *server_version_ptr;server_version_ptr2255,90443
static char *server_version_comment_ptr;server_version_comment_ptr2261,90663
static char *server_version_compile_machine_ptr;server_version_compile_machine_ptr2267,90927
static char *server_version_compile_os_ptr;server_version_compile_os_ptr2273,91218
static bool fix_engine_condition_pushdown(2288,91898
static bool fix_autocommit(2367,95362
export sys_var *Sys_autocommit_ptr=Sys_autocommit_ptr2420,97335
static bool fix_sql_log_bin_after_update(2452,98508
static bool check_sql_log_bin(2477,99262
static bool update_timestamp(2567,102360
static ulonglong read_timestamp(2575,102568
static bool check_timestamp(2581,102654
static bool update_last_insert_id(2607,103417
static ulonglong read_last_insert_id(2618,103682
static bool update_insert_id(2656,105459
static ulonglong read_insert_id(2667,105704
static bool update_rand_seed1(2679,106199
static ulonglong read_rand_seed(2689,106435
static bool update_rand_seed2(2701,106850
static ulonglong read_error_count(2719,107443
static ulonglong read_warning_count(2731,107942
static char *glob_hostname_ptr;glob_hostname_ptr2755,109005
static char *license;license2804,111244
static bool check_log_path(2810,111470
static bool fix_log(2863,112878
static void reopen_general_log(2882,113445
static bool fix_general_log_file(2887,113590
static void reopen_slow_log(2898,114099
static bool fix_slow_log_file(2903,114250
export SHOW_COMP_OPTION have_csv,2917,114954
export SHOW_COMP_OPTION have_csv, have_innodb=2917,114954
export SHOW_COMP_OPTION have_ndbcluster,2918,115023
export SHOW_COMP_OPTION have_ndbcluster, have_partitioning;2918,115023
static bool fix_log_state(3008,118615
static bool check_not_empty_set(3047,119604
static bool fix_log_output(3051,119727
static const char *log_output_names[log_output_names3060,119957
static bool fix_slave_net_timeout(3112,122454
static bool check_slave_skip_counter(3133,123494
static bool fix_slave_skip_counter(3147,123913
static bool check_locale(3220,127246
static bool check_pseudo_slave_mode(3296,129787
static bool update_backup_throttle(3353,131524

sql/table.cc,6026
LEX_STRING INFORMATION_SCHEMA_NAME=41,1805
LEX_STRING PERFORMANCE_SCHEMA_DB_NAME=44,1915
LEX_STRING MYSQL_SCHEMA_NAME=47,2022
LEX_STRING GENERAL_LOG_NAME=50,2106
LEX_STRING SLOW_LOG_NAME=53,2192
Object_creation_ctx *Object_creation_ctx::set_n_backup(Object_creation_ctx::set_n_backup73,3018
void Object_creation_ctx::restore_env(84,3260
Default_object_creation_ctx::Default_object_creation_ctx(98,3630
Default_object_creation_ctx::Default_object_creation_ctx(103,3813
Default_object_creation_ctx::create_backup_ctx(110,4017
void Default_object_creation_ctx::change_env(115,4132
View_creation_ctx *View_creation_ctx::create(View_creation_ctx::create127,4521
View_creation_ctx * View_creation_ctx::create(136,4743
static uchar *get_field_name(get_field_name194,6838
char *fn_rext(fn_rext223,7672
TABLE_CATEGORY get_table_category(231,7818
TABLE_SHARE *alloc_table_share(alloc_table_share284,9281
void init_tmp_table_share(363,11970
void TABLE_SHARE::destroy(407,13436
void free_table_share(458,14537
inline bool is_system_table_name(511,16154
static inline bool has_disabled_path_chars(553,17463
int open_table_def(594,18403
static int open_binary_frm(730,22251
int open_table_from_share(1829,60166
int closefrm(2155,71110
void free_blobs(2195,72010
void free_field_buffers_larger_than(2222,72643
static ulong get_form_pos(2245,73133
int read_string(2286,73871
ulong make_new_entry(2305,74417
void open_table_error(2377,76955
fix_type_pointers(2457,79164
TYPELIB *typelib(typelib2490,79890
static uint find_field(2527,80894
int set_zone(2550,81344
ulong next_io_size(2561,81572
void append_unescaped(2584,82020
File create_frm(2634,83116
void update_create_info_from_table(2754,87410
rename_file_ext(2774,88073
bool get_field(2797,88594
char *get_field(get_field2829,89327
uint calculate_key_len(2849,89815
bool check_db_name(2884,90582
bool check_table_name(2912,91225
bool check_column_name(2955,92224
Table_check_intact::check(3007,93662
bool Wait_for_flush::accept_visitor(3147,98876
uint Wait_for_flush::get_deadlock_weight(3153,99006
bool TABLE_SHARE::visit_subgraph(3171,99471
bool TABLE_SHARE::wait_for_old_version(3251,101599
void TABLE::init(3335,104007
bool TABLE::fill_item_list(3400,105729
void TABLE::reset_item_list(3430,106519
void  TABLE_LIST::calc_md5(3449,106894
void TABLE_LIST::set_underlying_merge(3485,108186
bool TABLE_LIST::setup_underlying(3533,109339
bool TABLE_LIST::prep_where(3612,111389
merge_on_conds(3690,113590
bool TABLE_LIST::prep_check_option(3737,115040
void TABLE_LIST::hide_view_error(3807,117170
TABLE_LIST *TABLE_LIST::find_underlying_table(TABLE_LIST::find_underlying_table3851,118528
void TABLE_LIST::cleanup_items(3873,119051
int TABLE_LIST::view_check_option(3898,119530
bool TABLE_LIST::check_single_table(3935,120605
bool TABLE_LIST::set_insert_values(3970,121320
bool TABLE_LIST::is_leaf_for_name_resolution(4006,122273
TABLE_LIST *TABLE_LIST::first_leaf_for_name_resolution(TABLE_LIST::first_leaf_for_name_resolution4036,123086
TABLE_LIST *TABLE_LIST::last_leaf_for_name_resolution(TABLE_LIST::last_leaf_for_name_resolution4094,124710
void TABLE_LIST::register_want_access(4136,125755
bool TABLE_LIST::prepare_view_securety_context(4164,126413
Security_context *TABLE_LIST::find_view_security_context(TABLE_LIST::find_view_security_context4223,128151
bool TABLE_LIST::prepare_security(4264,129061
Natural_join_column::Natural_join_column(4304,130090
Natural_join_column::Natural_join_column(4315,130351
const char *Natural_join_column::name(Natural_join_column::name4326,130623
Item *Natural_join_column::create_item(Natural_join_column::create_item4338,130797
Field *Natural_join_column::field(Natural_join_column::field4350,131050
const char *Natural_join_column::table_name(Natural_join_column::table_name4361,131202
const char *Natural_join_column::db_name(Natural_join_column::db_name4368,131307
GRANT_INFO *Natural_join_column::grant(Natural_join_column::grant4387,131872
void Field_iterator_view::set(4395,132006
const char *Field_iterator_table::name(Field_iterator_table::name4404,132193
Item *Field_iterator_table::create_item(Field_iterator_table::create_item4410,132269
const char *Field_iterator_view::name(Field_iterator_view::name4426,132742
Item *Field_iterator_view::create_item(Field_iterator_view::create_item4432,132808
Item *create_view_field(create_view_field4437,132924
void Field_iterator_natural_join::set(4476,133959
void Field_iterator_natural_join::next(4484,134151
void Field_iterator_table_ref::set_field_iterator(4493,134407
void Field_iterator_table_ref::set(4544,136397
void Field_iterator_table_ref::next(4555,136677
const char *Field_iterator_table_ref::get_table_name(Field_iterator_table_ref::get_table_name4572,137096
const char *Field_iterator_table_ref::get_db_name(Field_iterator_table_ref::get_db_name4585,137450
GRANT_INFO *Field_iterator_table_ref::grant(Field_iterator_table_ref::grant4606,138099
Field_iterator_table_ref::get_or_create_column_ref(4654,139945
Field_iterator_table_ref::get_natural_column_ref(4747,143127
void TABLE::clear_column_bitmaps(4770,143944
void TABLE::prepare_for_position(4791,144494
void TABLE::mark_columns_used_by_index(4816,145136
void TABLE::add_read_columns_used_by_index(4837,145605
void TABLE::restore_column_maps_after_mark_index(4861,146174
void TABLE::mark_columns_used_by_index_no_reset(4876,146460
void TABLE::mark_auto_increment_column(4895,147039
void TABLE::mark_columns_needed_for_delete(4928,148166
void TABLE::mark_columns_needed_for_update(4978,149721
void TABLE::mark_columns_needed_for_insert(5021,150940
void TABLE_LIST::reinit_before_use(5046,151532
Item_subselect *TABLE_LIST::containing_subselect(TABLE_LIST::containing_subselect5084,152590
bool TABLE_LIST::process_index_hints(5141,154674
size_t max_row_length(5274,159353
void init_mdl_requests(5297,159987
bool TABLE::update_const_key_parts(5321,160713
bool is_simple_order(5352,161516

sql/thr_malloc.cc,309
  void sql_alloc_error_handler(25,884
void init_sql_alloc(63,2304
void *sql_alloc(sql_alloc70,2486
void *sql_calloc(sql_calloc77,2623
char *sql_strdup(sql_strdup86,2736
char *sql_strmake(sql_strmake96,2894
void* sql_memdup(108,3062
char *sql_strmake_with_convert(sql_strmake_with_convert117,3195

sql/transaction.cc,650
static bool trans_check(27,1055
static bool xa_trans_rolled_back(60,1965
static bool xa_trans_force_rollback(91,2691
bool trans_begin(121,3332
bool trans_commit(172,4514
bool trans_commit_implicit(209,5384
bool trans_rollback(251,6458
bool trans_rollback_implicit(285,7308
bool trans_commit_stmt(331,8716
bool trans_rollback_stmt(373,9747
find_savepoint(401,10481
bool trans_savepoint(427,10948
bool trans_rollback_to_savepoint(504,13100
bool trans_release_savepoint(562,14762
bool trans_xa_start(592,15311
bool trans_xa_end(643,16702
bool trans_xa_prepare(672,17510
bool trans_xa_commit(704,18314
bool trans_xa_rollback(800,21099

sql/tztime.cc,3250
#define ABBR_ARE_USED56,1964
#undef ABBR_ARE_USED60,2062
#define ABBR_ARE_USED61,2083
typedef struct ttinfo66,2267
} TRAN_TYPE_INFO;77,2675
typedef struct lsinfo80,2746
} LS_INFO;84,2856
typedef struct revtinfo91,3083
} REVT_INFO;95,3247
#define MY_TZNAME_MAX	98,3279
#define MY_TZNAME_MAX	101,3338
typedef struct st_time_zone_info108,3475
} TIME_ZONE_INFO;141,4724
tz_load(162,5091
prepare_tz_info(322,10700
static const uint mon_lengths[mon_lengths511,16297
static const uint mon_starts[mon_starts517,16459
static const uint year_lengths[year_lengths523,16634
#define LEAPS_THRU_END_OF(528,16708
sec_to_TIME(549,17443
find_time_range(633,19596
find_transition_type(675,20671
gmt_sec_to_TIME(717,22237
sec_since_epoch(789,24352
TIME_to_gmt_sec(891,29323
static const String tz_SYSTEM_name("SYSTEM", 6, &my_charset_latin1)my_charset_latin11001,32236
class Time_zone_system 1014,32896
  Time_zone_system(Time_zone_system::Time_zone_system1017,32948
Time_zone_system::TIME_to_gmt_sec(1051,34316
Time_zone_system::gmt_sec_to_TIME(1075,35086
Time_zone_system::get_name(1097,35468
class Time_zone_utc 1109,35852
  Time_zone_utc(Time_zone_utc::Time_zone_utc1112,35901
Time_zone_utc::TIME_to_gmt_sec(1140,36918
Time_zone_utc::gmt_sec_to_TIME(1161,37393
Time_zone_utc::get_name(1187,37976
class Time_zone_db 1199,38190
Time_zone_db::Time_zone_db(1226,39074
Time_zone_db::TIME_to_gmt_sec(1253,39914
Time_zone_db::gmt_sec_to_TIME(1269,40338
Time_zone_db::get_name(1286,40602
class Time_zone_offset 1296,40751
Time_zone_offset::Time_zone_offset(1324,41534
Time_zone_offset::TIME_to_gmt_sec(1353,42622
Time_zone_offset::gmt_sec_to_TIME(1402,43825
Time_zone_offset::get_name(1418,44070
static Time_zone_utc tz_UTC;1424,44127
static Time_zone_system tz_SYSTEM;1425,44156
Time_zone *my_tz_OFFSET0=my_tz_OFFSET01428,44231
Time_zone *my_tz_UTC=my_tz_UTC1429,44270
Time_zone *my_tz_SYSTEM=my_tz_SYSTEM1430,44301
static HASH tz_names;1432,44339
static HASH offset_tzs;1433,44361
static MEM_ROOT tz_storage;1434,44385
static mysql_mutex_t tz_LOCK;1443,44701
static bool tz_inited=1444,44731
static uint tz_leapcnt=1450,44868
static LS_INFO *tz_lsis=tz_lsis1451,44895
static bool time_zone_tables_exist=1458,45099
static const LEX_STRING tz_tables_names[tz_tables_names1466,45253
static const LEX_STRING tz_tables_db_name=1476,45553
class Tz_names_entry:Tz_names_entry1479,45629
my_tz_names_get_key(1493,45845
my_offset_tzs_get_key(1501,46060
tz_init_table_list(1524,46673
static PSI_mutex_key key_tz_LOCK;1544,47296
static PSI_mutex_info all_tz_mutexes[all_tz_mutexes1546,47331
static void init_tz_psi_keys(1551,47424
my_tz_init(1591,48713
void my_tz_free(1809,55003
tz_load_from_open_tables(1844,55940
str_to_offset(2175,66413
my_tz_find(2275,69018
void Time_zone::adjust_leap_second(2349,71332
print_tz_as_sql(2376,71936
print_tz_leaps_as_sql(2417,73233
TIME_ZONE_INFO tz_info;2445,73902
MEM_ROOT tz_storage;2446,73926
char fullname[fullname2447,73947
char *root_name_end;root_name_end2448,73977
scan_tz_dir(2473,74615
main(2523,75858
#define CHAR_BIT 2598,77674
#define TYPE_BIT(2602,77718
#define TYPE_SIGNED(2606,77796
is_equal_TIME_tm(2610,77856
main(2623,78308

sql/uniques.cc,473
int unique_write_to_file(40,1587
int unique_write_to_ptrs(51,2008
Unique::Unique(58,2194
inline double log2_n_fact(95,3295
static double get_merge_buffers_cost(131,4465
static double get_merge_many_buffs_cost(174,5811
double Unique::get_use_cost(267,9045
Unique::~Unique(320,10824
bool Unique::flush(329,10969
Unique::reset(351,11442
static int buffpek_compare(377,12105
static bool merge_walk(421,13936
bool Unique::walk(552,18491
bool Unique::get(581,19473

sql/unireg.cc,503
#define FCOMP	35,1390
struct Pack_header_error_handler:Pack_header_error_handler61,2453
  Pack_header_error_handler(Pack_header_error_handler::Pack_header_error_handler70,2860
handle_condition(76,2950
bool mysql_create_frm(108,3763
int rea_create_table(509,17131
static uchar *pack_screens(pack_screens551,18472
static uint pack_keys(627,20575
static bool pack_header(717,23124
static uint get_interval_id(888,29553
static bool pack_fields(916,30231
static bool make_empty_rec(1062,34132

vio/viotest-sslconnect.cc,55
fatal_error(32,951
print_usage(39,1011
main(46,1141

vio/viotest.cc,34
VIO_NS_USING;30,920
main(33,939

sql/hash_filo.cc,0

zlib/inffast.h,0

sql/sql_backup.h,0
